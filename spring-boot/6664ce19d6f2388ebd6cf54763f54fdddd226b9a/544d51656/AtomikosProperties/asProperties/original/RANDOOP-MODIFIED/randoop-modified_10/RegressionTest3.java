import org.junit.FixMethodOrder;
import org.junit.Test;
import org.junit.runners.MethodSorters;

@FixMethodOrder(MethodSorters.NAME_ASCENDING)
public class RegressionTest3 {

    public static boolean debug = false;

    @Test
    public void test1501() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1501");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Properties properties2 = new java.util.Properties(properties0);
        java.util.Properties properties3 = null;
        java.util.Properties properties4 = new java.util.Properties(properties3);
        java.lang.Object obj6 = properties2.put((java.lang.Object) properties4, (java.lang.Object) (short) 1);
        properties4.clear();
        int int8 = properties4.size();
        java.util.Properties properties9 = null;
        java.util.Properties properties10 = new java.util.Properties(properties9);
        java.util.Properties properties11 = new java.util.Properties(properties9);
        java.util.Properties properties12 = null;
        java.util.Properties properties13 = new java.util.Properties(properties12);
        java.lang.Object obj15 = properties11.put((java.lang.Object) properties13, (java.lang.Object) (short) 1);
        java.util.Properties properties16 = new java.util.Properties(properties13);
        java.util.Properties properties17 = new java.util.Properties(properties13);
        boolean boolean19 = properties4.remove((java.lang.Object) properties13, (java.lang.Object) 10.0f);
        java.util.Enumeration<java.lang.Object> objEnumeration20 = properties13.elements();
        java.util.Properties properties21 = null;
        java.util.Properties properties22 = new java.util.Properties(properties21);
        java.util.Properties properties23 = new java.util.Properties(properties21);
        java.util.Properties properties24 = null;
        java.util.Properties properties25 = new java.util.Properties(properties24);
        java.lang.Object obj27 = properties23.put((java.lang.Object) properties25, (java.lang.Object) (short) 1);
        properties25.clear();
        int int29 = properties25.size();
        java.util.Properties properties30 = new java.util.Properties(properties25);
        properties13.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties30);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties32 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties32.setDefaultJtaTimeout((long) (byte) 10);
        atomikosProperties32.setCheckpointInterval((long) (byte) 0);
        atomikosProperties32.setTransactionManagerUniqueName("");
        java.util.Properties properties39 = atomikosProperties32.asProperties();
        java.lang.String str40 = atomikosProperties32.getTransactionManagerUniqueName();
        atomikosProperties32.setDefaultJtaTimeout((long) (-1));
        java.lang.String str43 = atomikosProperties32.getService();
        boolean boolean44 = atomikosProperties32.isForceShutdownOnVmExit();
        int int45 = atomikosProperties32.getMaxActives();
        atomikosProperties32.setMaxTimeout((long) (byte) 1);
        java.lang.Object obj48 = properties13.get((java.lang.Object) (byte) 1);
        org.junit.Assert.assertNull(obj6);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertNull(obj15);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(objEnumeration20);
        org.junit.Assert.assertNull(obj27);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 0 + "'", int29 == 0);
        org.junit.Assert.assertNotNull(properties39);
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "" + "'", str40, "");
        org.junit.Assert.assertNull(str43);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 50 + "'", int45 == 50);
        org.junit.Assert.assertNull(obj48);
    }

    @Test
    public void test1502() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1502");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setDefaultJtaTimeout((long) (byte) 10);
        long long3 = atomikosProperties0.getDefaultJtaTimeout();
        atomikosProperties0.setTransactionManagerUniqueName("");
        boolean boolean6 = atomikosProperties0.isEnableLogging();
        java.lang.String str7 = atomikosProperties0.getLogBaseDir();
        java.util.Properties properties8 = atomikosProperties0.asProperties();
        boolean boolean9 = atomikosProperties0.isEnableLogging();
        java.util.Properties properties10 = atomikosProperties0.asProperties();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties11 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties11.setDefaultJtaTimeout((long) (byte) 10);
        atomikosProperties11.setCheckpointInterval((long) (byte) 0);
        atomikosProperties11.setTransactionManagerUniqueName("");
        boolean boolean18 = atomikosProperties11.isEnableLogging();
        java.util.Properties properties19 = atomikosProperties11.asProperties();
        java.util.Enumeration<java.lang.Object> objEnumeration20 = properties19.keys();
        java.util.Properties properties21 = null;
        java.util.Properties properties22 = new java.util.Properties(properties21);
        java.util.Properties properties23 = new java.util.Properties(properties21);
        java.util.Properties properties24 = null;
        java.util.Properties properties25 = new java.util.Properties(properties24);
        java.lang.Object obj27 = properties23.put((java.lang.Object) properties25, (java.lang.Object) (short) 1);
        java.util.Properties properties29 = null;
        java.util.Properties properties30 = new java.util.Properties(properties29);
        java.util.Properties properties31 = new java.util.Properties(properties29);
        java.util.Properties properties32 = null;
        java.util.Properties properties33 = new java.util.Properties(properties32);
        java.lang.Object obj35 = properties31.put((java.lang.Object) properties33, (java.lang.Object) (short) 1);
        boolean boolean36 = properties25.remove((java.lang.Object) false, (java.lang.Object) (short) 1);
        java.util.Set<java.lang.String> strSet37 = properties25.stringPropertyNames();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties38 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties38.setDefaultJtaTimeout((long) (byte) 10);
        long long41 = atomikosProperties38.getDefaultJtaTimeout();
        java.lang.Object obj42 = properties25.get((java.lang.Object) atomikosProperties38);
        atomikosProperties38.setCheckpointInterval((long) (short) 100);
        java.util.Properties properties45 = atomikosProperties38.asProperties();
        java.util.Enumeration<?> wildcardEnumeration46 = properties45.propertyNames();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet47 = properties45.entrySet();
        java.lang.Object obj48 = properties10.getOrDefault((java.lang.Object) objEnumeration20, (java.lang.Object) properties45);
        boolean boolean50 = properties10.containsValue((java.lang.Object) 50L);
        java.util.Set<java.lang.Object> objSet51 = properties10.keySet();
        java.lang.Object obj52 = null;
        boolean boolean53 = properties10.equals(obj52);
        org.junit.Assert.assertTrue("'" + long3 + "' != '" + 10L + "'", long3 == 10L);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNotNull(properties8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertNotNull(properties10);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(properties19);
        org.junit.Assert.assertNotNull(objEnumeration20);
        org.junit.Assert.assertNull(obj27);
        org.junit.Assert.assertNull(obj35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(strSet37);
        org.junit.Assert.assertTrue("'" + long41 + "' != '" + 10L + "'", long41 == 10L);
        org.junit.Assert.assertNull(obj42);
        org.junit.Assert.assertNotNull(properties45);
        org.junit.Assert.assertNotNull(wildcardEnumeration46);
        org.junit.Assert.assertNotNull(objEntrySet47);
        org.junit.Assert.assertNotNull(obj48);
// flaky:         org.junit.Assert.assertEquals(obj48.toString(), "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=100, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
// flaky:         org.junit.Assert.assertEquals(java.lang.String.valueOf(obj48), "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=100, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
// flaky:         org.junit.Assert.assertEquals(java.util.Objects.toString(obj48), "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=100, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertNotNull(objSet51);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
    }

    @Test
    public void test1503() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1503");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setDefaultJtaTimeout((long) (byte) 10);
        long long3 = atomikosProperties0.getDefaultJtaTimeout();
        atomikosProperties0.setTransactionManagerUniqueName("");
        boolean boolean6 = atomikosProperties0.isEnableLogging();
        java.lang.String str7 = atomikosProperties0.getLogBaseDir();
        java.util.Properties properties8 = atomikosProperties0.asProperties();
        boolean boolean9 = atomikosProperties0.isEnableLogging();
        java.util.Properties properties10 = atomikosProperties0.asProperties();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties11 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties11.setDefaultJtaTimeout((long) (byte) 10);
        atomikosProperties11.setCheckpointInterval((long) (byte) 0);
        atomikosProperties11.setTransactionManagerUniqueName("");
        boolean boolean18 = atomikosProperties11.isEnableLogging();
        java.util.Properties properties19 = atomikosProperties11.asProperties();
        java.util.Enumeration<java.lang.Object> objEnumeration20 = properties19.keys();
        java.util.Properties properties21 = null;
        java.util.Properties properties22 = new java.util.Properties(properties21);
        java.util.Properties properties23 = new java.util.Properties(properties21);
        java.util.Properties properties24 = null;
        java.util.Properties properties25 = new java.util.Properties(properties24);
        java.lang.Object obj27 = properties23.put((java.lang.Object) properties25, (java.lang.Object) (short) 1);
        java.util.Properties properties29 = null;
        java.util.Properties properties30 = new java.util.Properties(properties29);
        java.util.Properties properties31 = new java.util.Properties(properties29);
        java.util.Properties properties32 = null;
        java.util.Properties properties33 = new java.util.Properties(properties32);
        java.lang.Object obj35 = properties31.put((java.lang.Object) properties33, (java.lang.Object) (short) 1);
        boolean boolean36 = properties25.remove((java.lang.Object) false, (java.lang.Object) (short) 1);
        java.util.Set<java.lang.String> strSet37 = properties25.stringPropertyNames();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties38 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties38.setDefaultJtaTimeout((long) (byte) 10);
        long long41 = atomikosProperties38.getDefaultJtaTimeout();
        java.lang.Object obj42 = properties25.get((java.lang.Object) atomikosProperties38);
        atomikosProperties38.setCheckpointInterval((long) (short) 100);
        java.util.Properties properties45 = atomikosProperties38.asProperties();
        java.util.Enumeration<?> wildcardEnumeration46 = properties45.propertyNames();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet47 = properties45.entrySet();
        java.lang.Object obj48 = properties10.getOrDefault((java.lang.Object) objEnumeration20, (java.lang.Object) properties45);
        java.util.Properties properties49 = null;
        java.util.Properties properties50 = new java.util.Properties(properties49);
        java.util.Properties properties51 = new java.util.Properties(properties49);
        java.util.Properties properties52 = null;
        java.util.Properties properties53 = new java.util.Properties(properties52);
        java.lang.Object obj55 = properties51.put((java.lang.Object) properties53, (java.lang.Object) (short) 1);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties56 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties56.setThreadedTwoPhaseCommit(true);
        atomikosProperties56.setMaxActives((int) (byte) 0);
        boolean boolean61 = properties51.containsValue((java.lang.Object) atomikosProperties56);
        java.lang.String str62 = atomikosProperties56.getLogBaseDir();
        java.lang.Object obj63 = properties45.get((java.lang.Object) atomikosProperties56);
        java.util.Set<java.lang.Object> objSet64 = properties45.keySet();
        java.io.Reader reader65 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties45.load(reader65);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + long3 + "' != '" + 10L + "'", long3 == 10L);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNotNull(properties8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertNotNull(properties10);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(properties19);
        org.junit.Assert.assertNotNull(objEnumeration20);
        org.junit.Assert.assertNull(obj27);
        org.junit.Assert.assertNull(obj35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(strSet37);
        org.junit.Assert.assertTrue("'" + long41 + "' != '" + 10L + "'", long41 == 10L);
        org.junit.Assert.assertNull(obj42);
        org.junit.Assert.assertNotNull(properties45);
        org.junit.Assert.assertNotNull(wildcardEnumeration46);
        org.junit.Assert.assertNotNull(objEntrySet47);
        org.junit.Assert.assertNotNull(obj48);
// flaky:         org.junit.Assert.assertEquals(obj48.toString(), "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=100, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
// flaky:         org.junit.Assert.assertEquals(java.lang.String.valueOf(obj48), "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=100, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
// flaky:         org.junit.Assert.assertEquals(java.util.Objects.toString(obj48), "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=100, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
        org.junit.Assert.assertNull(obj55);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertNull(str62);
        org.junit.Assert.assertNull(obj63);
        org.junit.Assert.assertNotNull(objSet64);
    }

    @Test
    public void test1504() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1504");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Properties properties2 = new java.util.Properties(properties0);
        boolean boolean4 = properties2.containsValue((java.lang.Object) (short) 100);
        java.util.Properties properties5 = null;
        java.util.Properties properties6 = new java.util.Properties(properties5);
        java.util.Properties properties7 = new java.util.Properties(properties5);
        java.util.Properties properties8 = null;
        java.util.Properties properties9 = new java.util.Properties(properties8);
        java.lang.Object obj11 = properties7.put((java.lang.Object) properties9, (java.lang.Object) (short) 1);
        java.util.Enumeration<java.lang.Object> objEnumeration12 = properties9.elements();
        java.lang.Object obj13 = properties2.remove((java.lang.Object) properties9);
        java.util.Enumeration<java.lang.Object> objEnumeration14 = properties2.keys();
        java.io.OutputStream outputStream15 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties2.storeToXML(outputStream15, "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=52, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.tm_unique_name=, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}", "{{tmlog={com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=0, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.tm_unique_name=, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}, 4=true}={com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=0, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog, {}={}}}");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNull(obj11);
        org.junit.Assert.assertNotNull(objEnumeration12);
        org.junit.Assert.assertNull(obj13);
        org.junit.Assert.assertNotNull(objEnumeration14);
    }

    @Test
    public void test1505() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1505");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setDefaultJtaTimeout((long) (byte) 10);
        long long3 = atomikosProperties0.getDefaultJtaTimeout();
        atomikosProperties0.setTransactionManagerUniqueName("");
        boolean boolean6 = atomikosProperties0.isEnableLogging();
        java.lang.String str7 = atomikosProperties0.getTransactionManagerUniqueName();
        atomikosProperties0.setSerialJtaTransactions(false);
        boolean boolean10 = atomikosProperties0.isForceShutdownOnVmExit();
        atomikosProperties0.setMaxTimeout((long) 100);
        long long13 = atomikosProperties0.getDefaultJtaTimeout();
        org.junit.Assert.assertTrue("'" + long3 + "' != '" + 10L + "'", long3 == 10L);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + long13 + "' != '" + 10L + "'", long13 == 10L);
    }

    @Test
    public void test1506() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1506");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Properties properties2 = new java.util.Properties(properties0);
        java.util.Properties properties3 = null;
        java.util.Properties properties4 = new java.util.Properties(properties3);
        java.lang.Object obj6 = properties2.put((java.lang.Object) properties4, (java.lang.Object) (short) 1);
        boolean boolean7 = properties2.isEmpty();
        java.util.Properties properties8 = null;
        java.util.Properties properties9 = new java.util.Properties(properties8);
        java.util.Properties properties10 = new java.util.Properties(properties8);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties11 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        int int12 = atomikosProperties11.getMaxActives();
        long long13 = atomikosProperties11.getMaxTimeout();
        java.lang.String str14 = atomikosProperties11.getLogBaseDir();
        atomikosProperties11.setCheckpointInterval(100L);
        boolean boolean17 = properties10.equals((java.lang.Object) atomikosProperties11);
        java.util.Properties properties18 = null;
        java.util.Properties properties19 = new java.util.Properties(properties18);
        java.util.Properties properties20 = new java.util.Properties(properties18);
        java.util.Properties properties21 = null;
        java.util.Properties properties22 = new java.util.Properties(properties21);
        java.lang.Object obj24 = properties20.put((java.lang.Object) properties22, (java.lang.Object) (short) 1);
        boolean boolean25 = properties20.isEmpty();
        java.util.Properties properties26 = null;
        java.util.Properties properties27 = new java.util.Properties(properties26);
        java.util.Properties properties28 = new java.util.Properties(properties26);
        boolean boolean29 = properties20.containsKey((java.lang.Object) properties28);
        java.util.Properties properties30 = null;
        java.util.Properties properties31 = new java.util.Properties(properties30);
        java.util.Properties properties32 = new java.util.Properties(properties30);
        java.util.Properties properties33 = null;
        java.util.Properties properties34 = new java.util.Properties(properties33);
        java.lang.Object obj36 = properties32.put((java.lang.Object) properties34, (java.lang.Object) (short) 1);
        java.util.Properties properties38 = null;
        java.util.Properties properties39 = new java.util.Properties(properties38);
        java.util.Properties properties40 = new java.util.Properties(properties38);
        java.util.Properties properties41 = null;
        java.util.Properties properties42 = new java.util.Properties(properties41);
        java.lang.Object obj44 = properties40.put((java.lang.Object) properties42, (java.lang.Object) (short) 1);
        boolean boolean45 = properties34.remove((java.lang.Object) false, (java.lang.Object) (short) 1);
        java.util.Set<java.lang.String> strSet46 = properties34.stringPropertyNames();
        boolean boolean47 = properties28.containsKey((java.lang.Object) strSet46);
        java.util.Properties properties48 = null;
        java.util.Properties properties49 = new java.util.Properties(properties48);
        java.util.Properties properties50 = new java.util.Properties(properties48);
        java.util.Properties properties51 = null;
        java.util.Properties properties52 = new java.util.Properties(properties51);
        java.lang.Object obj54 = properties50.put((java.lang.Object) properties52, (java.lang.Object) (short) 1);
        properties52.clear();
        java.lang.String str57 = properties52.getProperty("");
        java.util.Properties properties58 = null;
        java.util.Properties properties59 = new java.util.Properties(properties58);
        java.util.Properties properties60 = new java.util.Properties(properties58);
        java.util.Properties properties61 = null;
        java.util.Properties properties62 = new java.util.Properties(properties61);
        java.lang.Object obj64 = properties60.put((java.lang.Object) properties62, (java.lang.Object) (short) 1);
        properties52.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties60);
        boolean boolean66 = properties28.containsKey((java.lang.Object) properties52);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties68 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties68.setThreadedTwoPhaseCommit(true);
        boolean boolean71 = atomikosProperties68.isEnableLogging();
        java.lang.Object obj72 = properties28.put((java.lang.Object) '4', (java.lang.Object) boolean71);
        java.util.Properties properties73 = new java.util.Properties(properties28);
        boolean boolean74 = properties28.isEmpty();
        java.lang.Object obj75 = properties10.get((java.lang.Object) properties28);
        boolean boolean76 = properties2.containsKey((java.lang.Object) properties28);
        java.util.Properties properties77 = new java.util.Properties(properties2);
        java.io.InputStream inputStream78 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties2.load(inputStream78);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(obj6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 50 + "'", int12 == 50);
        org.junit.Assert.assertTrue("'" + long13 + "' != '" + 300000L + "'", long13 == 300000L);
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNull(obj24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNull(obj36);
        org.junit.Assert.assertNull(obj44);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNotNull(strSet46);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNull(obj54);
        org.junit.Assert.assertNull(str57);
        org.junit.Assert.assertNull(obj64);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + true + "'", boolean71 == true);
        org.junit.Assert.assertNull(obj72);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
        org.junit.Assert.assertNull(obj75);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
    }

    @Test
    public void test1507() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1507");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Properties properties2 = new java.util.Properties(properties0);
        java.util.Properties properties3 = null;
        java.util.Properties properties4 = new java.util.Properties(properties3);
        java.lang.Object obj6 = properties2.put((java.lang.Object) properties4, (java.lang.Object) (short) 1);
        java.util.Properties properties8 = null;
        java.util.Properties properties9 = new java.util.Properties(properties8);
        java.util.Properties properties10 = new java.util.Properties(properties8);
        java.util.Properties properties11 = null;
        java.util.Properties properties12 = new java.util.Properties(properties11);
        java.lang.Object obj14 = properties10.put((java.lang.Object) properties12, (java.lang.Object) (short) 1);
        boolean boolean15 = properties4.remove((java.lang.Object) false, (java.lang.Object) (short) 1);
        java.util.Set<java.lang.String> strSet16 = properties4.stringPropertyNames();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties17 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties17.setDefaultJtaTimeout((long) (byte) 10);
        atomikosProperties17.setCheckpointInterval((long) (byte) 0);
        atomikosProperties17.setTransactionManagerUniqueName("");
        boolean boolean24 = atomikosProperties17.isEnableLogging();
        atomikosProperties17.setSerialJtaTransactions(false);
        atomikosProperties17.setLogBaseDir("");
        java.util.Properties properties29 = null;
        java.util.Properties properties30 = new java.util.Properties(properties29);
        java.util.Properties properties31 = new java.util.Properties(properties29);
        java.util.Properties properties32 = null;
        java.util.Properties properties33 = new java.util.Properties(properties32);
        java.lang.Object obj35 = properties31.put((java.lang.Object) properties33, (java.lang.Object) (short) 1);
        java.util.Properties properties36 = new java.util.Properties(properties33);
        boolean boolean37 = properties4.remove((java.lang.Object) "", (java.lang.Object) properties36);
        java.lang.String str39 = properties4.getProperty("{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.tm_unique_name=, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties40 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties40.setDefaultJtaTimeout((long) (byte) 10);
        atomikosProperties40.setCheckpointInterval((long) (byte) 0);
        atomikosProperties40.setTransactionManagerUniqueName("");
        boolean boolean47 = atomikosProperties40.isEnableLogging();
        atomikosProperties40.setSerialJtaTransactions(false);
        java.lang.Object obj50 = properties4.remove((java.lang.Object) atomikosProperties40);
        properties4.clear();
        java.util.Properties properties52 = null;
        java.util.Properties properties53 = new java.util.Properties(properties52);
        java.util.Properties properties54 = new java.util.Properties(properties52);
        java.util.Properties properties55 = null;
        java.util.Properties properties56 = new java.util.Properties(properties55);
        java.lang.Object obj58 = properties54.put((java.lang.Object) properties56, (java.lang.Object) (short) 1);
        properties56.clear();
        int int60 = properties56.size();
        java.util.Properties properties61 = new java.util.Properties(properties56);
        boolean boolean62 = properties56.isEmpty();
        java.util.Enumeration<java.lang.Object> objEnumeration63 = properties56.elements();
        java.util.Properties properties64 = null;
        java.util.Properties properties65 = new java.util.Properties(properties64);
        java.util.Properties properties66 = new java.util.Properties(properties64);
        java.util.Properties properties67 = null;
        java.util.Properties properties68 = new java.util.Properties(properties67);
        java.lang.Object obj70 = properties66.put((java.lang.Object) properties68, (java.lang.Object) (short) 1);
        java.util.Properties properties71 = new java.util.Properties(properties68);
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet72 = properties68.entrySet();
        boolean boolean73 = properties56.contains((java.lang.Object) objEntrySet72);
        java.lang.Object obj74 = properties4.remove((java.lang.Object) boolean73);
        java.util.Enumeration<?> wildcardEnumeration75 = properties4.propertyNames();
        boolean boolean76 = properties4.isEmpty();
        org.junit.Assert.assertNull(obj6);
        org.junit.Assert.assertNull(obj14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(strSet16);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNull(obj35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNull(str39);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertNull(obj50);
        org.junit.Assert.assertNull(obj58);
        org.junit.Assert.assertTrue("'" + int60 + "' != '" + 0 + "'", int60 == 0);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + true + "'", boolean62 == true);
        org.junit.Assert.assertNotNull(objEnumeration63);
        org.junit.Assert.assertNull(obj70);
        org.junit.Assert.assertNotNull(objEntrySet72);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertNull(obj74);
        org.junit.Assert.assertNotNull(wildcardEnumeration75);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + true + "'", boolean76 == true);
    }

    @Test
    public void test1508() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1508");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setDefaultJtaTimeout((long) (byte) 10);
        long long3 = atomikosProperties0.getDefaultJtaTimeout();
        atomikosProperties0.setTransactionManagerUniqueName("hi!");
        atomikosProperties0.setTransactionManagerUniqueName("{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=0, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.tm_unique_name=, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
        atomikosProperties0.setService("");
        atomikosProperties0.setSerialJtaTransactions(false);
        org.junit.Assert.assertTrue("'" + long3 + "' != '" + 10L + "'", long3 == 10L);
    }

    @Test
    public void test1509() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1509");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        int int1 = atomikosProperties0.getMaxActives();
        java.util.Properties properties2 = atomikosProperties0.asProperties();
        java.util.Properties properties4 = null;
        java.util.Properties properties5 = new java.util.Properties(properties4);
        java.util.Properties properties6 = new java.util.Properties(properties4);
        boolean boolean8 = properties6.containsValue((java.lang.Object) (short) 100);
        java.util.Properties properties9 = new java.util.Properties(properties6);
        java.util.Properties properties10 = new java.util.Properties(properties9);
        java.lang.Object obj11 = properties2.getOrDefault((java.lang.Object) 100.0f, (java.lang.Object) properties10);
        java.util.Enumeration<java.lang.Object> objEnumeration12 = properties10.keys();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 50 + "'", int1 == 50);
        org.junit.Assert.assertNotNull(properties2);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(obj11);
        org.junit.Assert.assertEquals(obj11.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj11), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj11), "{}");
        org.junit.Assert.assertNotNull(objEnumeration12);
    }

    @Test
    public void test1510() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1510");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setThreadedTwoPhaseCommit(true);
        atomikosProperties0.setMaxActives((int) '#');
        boolean boolean5 = atomikosProperties0.isSerialJtaTransactions();
        long long6 = atomikosProperties0.getDefaultJtaTimeout();
        atomikosProperties0.setTransactionManagerUniqueName("");
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertTrue("'" + long6 + "' != '" + 10000L + "'", long6 == 10000L);
    }

    @Test
    public void test1511() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1511");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Properties properties2 = new java.util.Properties(properties0);
        java.util.Properties properties3 = null;
        java.util.Properties properties4 = new java.util.Properties(properties3);
        java.lang.Object obj6 = properties2.put((java.lang.Object) properties4, (java.lang.Object) (short) 1);
        boolean boolean7 = properties2.isEmpty();
        java.util.Properties properties8 = null;
        java.util.Properties properties9 = new java.util.Properties(properties8);
        java.util.Properties properties10 = new java.util.Properties(properties8);
        boolean boolean11 = properties2.containsKey((java.lang.Object) properties10);
        java.io.OutputStream outputStream12 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties10.storeToXML(outputStream12, "{{}=tmlog}");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(obj6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
    }

    @Test
    public void test1512() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1512");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setThreadedTwoPhaseCommit(true);
        atomikosProperties0.setMaxActives((int) '#');
        atomikosProperties0.setForceShutdownOnVmExit(true);
        java.lang.String str7 = atomikosProperties0.getLogBaseDir();
        java.util.Properties properties8 = atomikosProperties0.asProperties();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties9 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties9.setThreadedTwoPhaseCommit(true);
        atomikosProperties9.setMaxActives((int) '#');
        atomikosProperties9.setEnableLogging(true);
        boolean boolean16 = properties8.containsKey((java.lang.Object) true);
        java.lang.String str18 = properties8.getProperty("{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNotNull(properties8);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNull(str18);
    }

    @Test
    public void test1513() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1513");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Properties properties2 = new java.util.Properties(properties0);
        boolean boolean4 = properties2.containsValue((java.lang.Object) (short) 100);
        java.util.Properties properties5 = null;
        java.util.Properties properties6 = new java.util.Properties(properties5);
        java.util.Properties properties7 = new java.util.Properties(properties5);
        java.util.Properties properties8 = null;
        java.util.Properties properties9 = new java.util.Properties(properties8);
        java.lang.Object obj11 = properties7.put((java.lang.Object) properties9, (java.lang.Object) (short) 1);
        java.util.Enumeration<java.lang.Object> objEnumeration12 = properties9.elements();
        java.lang.Object obj13 = properties2.remove((java.lang.Object) properties9);
        boolean boolean14 = properties9.isEmpty();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet15 = properties9.entrySet();
        java.util.Properties properties16 = new java.util.Properties(properties9);
        java.util.Properties properties17 = null;
        java.util.Properties properties18 = new java.util.Properties(properties17);
        java.util.Properties properties19 = new java.util.Properties(properties17);
        java.util.Properties properties20 = null;
        java.util.Properties properties21 = new java.util.Properties(properties20);
        java.lang.Object obj23 = properties19.put((java.lang.Object) properties21, (java.lang.Object) (short) 1);
        java.util.Properties properties24 = new java.util.Properties(properties21);
        java.util.Properties properties25 = new java.util.Properties(properties21);
        java.util.Set<java.lang.Object> objSet26 = properties25.keySet();
        java.util.Properties properties27 = null;
        java.util.Properties properties28 = new java.util.Properties(properties27);
        java.util.Properties properties29 = new java.util.Properties(properties27);
        java.util.Properties properties30 = null;
        java.util.Properties properties31 = new java.util.Properties(properties30);
        java.lang.Object obj33 = properties29.put((java.lang.Object) properties31, (java.lang.Object) (short) 1);
        properties31.clear();
        int int35 = properties31.size();
        java.util.Properties properties36 = null;
        java.util.Properties properties37 = new java.util.Properties(properties36);
        java.util.Properties properties38 = new java.util.Properties(properties36);
        java.util.Properties properties39 = null;
        java.util.Properties properties40 = new java.util.Properties(properties39);
        java.lang.Object obj42 = properties38.put((java.lang.Object) properties40, (java.lang.Object) (short) 1);
        java.util.Properties properties43 = new java.util.Properties(properties40);
        java.util.Properties properties44 = new java.util.Properties(properties40);
        boolean boolean46 = properties31.remove((java.lang.Object) properties40, (java.lang.Object) 10.0f);
        java.util.Enumeration<java.lang.Object> objEnumeration47 = properties40.elements();
        java.util.Properties properties48 = new java.util.Properties(properties40);
        java.lang.Object obj49 = properties16.putIfAbsent((java.lang.Object) objSet26, (java.lang.Object) properties40);
        java.io.InputStream inputStream50 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties40.loadFromXML(inputStream50);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNull(obj11);
        org.junit.Assert.assertNotNull(objEnumeration12);
        org.junit.Assert.assertNull(obj13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(objEntrySet15);
        org.junit.Assert.assertNull(obj23);
        org.junit.Assert.assertNotNull(objSet26);
        org.junit.Assert.assertNull(obj33);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 0 + "'", int35 == 0);
        org.junit.Assert.assertNull(obj42);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(objEnumeration47);
        org.junit.Assert.assertNull(obj49);
    }

    @Test
    public void test1514() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1514");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setDefaultJtaTimeout((long) (byte) 10);
        atomikosProperties0.setCheckpointInterval((long) (byte) 0);
        atomikosProperties0.setTransactionManagerUniqueName("");
        java.util.Properties properties7 = atomikosProperties0.asProperties();
        java.lang.String str8 = atomikosProperties0.getTransactionManagerUniqueName();
        atomikosProperties0.setDefaultJtaTimeout((long) (-1));
        java.util.Properties properties11 = atomikosProperties0.asProperties();
        atomikosProperties0.setLogBaseName("{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=0, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.tm_unique_name=, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
        atomikosProperties0.setLogBaseDir("{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=52, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.tm_unique_name=, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
        org.junit.Assert.assertNotNull(properties7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "" + "'", str8, "");
        org.junit.Assert.assertNotNull(properties11);
    }

    @Test
    public void test1515() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1515");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        boolean boolean1 = atomikosProperties0.isForceShutdownOnVmExit();
        java.util.Properties properties2 = atomikosProperties0.asProperties();
        java.util.Properties properties3 = null;
        java.util.Properties properties4 = new java.util.Properties(properties3);
        java.util.Properties properties5 = new java.util.Properties(properties3);
        java.util.Properties properties6 = null;
        java.util.Properties properties7 = new java.util.Properties(properties6);
        java.lang.Object obj9 = properties5.put((java.lang.Object) properties7, (java.lang.Object) (short) 1);
        properties7.clear();
        int int11 = properties7.size();
        java.util.Properties properties12 = null;
        java.util.Properties properties13 = new java.util.Properties(properties12);
        java.util.Properties properties14 = new java.util.Properties(properties12);
        java.util.Properties properties15 = null;
        java.util.Properties properties16 = new java.util.Properties(properties15);
        java.lang.Object obj18 = properties14.put((java.lang.Object) properties16, (java.lang.Object) (short) 1);
        java.util.Properties properties19 = new java.util.Properties(properties16);
        java.util.Properties properties20 = new java.util.Properties(properties16);
        boolean boolean22 = properties7.remove((java.lang.Object) properties16, (java.lang.Object) 10.0f);
        boolean boolean23 = properties2.containsKey((java.lang.Object) 10.0f);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties25 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties25.setDefaultJtaTimeout((long) (byte) 10);
        atomikosProperties25.setCheckpointInterval((long) (byte) 0);
        atomikosProperties25.setEnableLogging(true);
        java.lang.Object obj32 = properties2.getOrDefault((java.lang.Object) (byte) 0, (java.lang.Object) true);
        java.util.Properties properties33 = new java.util.Properties(properties2);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties34 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties34.setDefaultJtaTimeout((long) (byte) 10);
        atomikosProperties34.setCheckpointInterval((long) (byte) 0);
        long long39 = atomikosProperties34.getMaxTimeout();
        java.util.Properties properties40 = null;
        java.util.Properties properties41 = new java.util.Properties(properties40);
        java.util.Properties properties42 = new java.util.Properties(properties40);
        java.util.Properties properties43 = null;
        java.util.Properties properties44 = new java.util.Properties(properties43);
        java.lang.Object obj46 = properties42.put((java.lang.Object) properties44, (java.lang.Object) (short) 1);
        java.util.Properties properties48 = null;
        java.util.Properties properties49 = new java.util.Properties(properties48);
        java.util.Properties properties50 = new java.util.Properties(properties48);
        java.util.Properties properties51 = null;
        java.util.Properties properties52 = new java.util.Properties(properties51);
        java.lang.Object obj54 = properties50.put((java.lang.Object) properties52, (java.lang.Object) (short) 1);
        boolean boolean55 = properties44.remove((java.lang.Object) false, (java.lang.Object) (short) 1);
        java.lang.Object obj57 = properties44.remove((java.lang.Object) '#');
        java.util.Set<java.lang.Object> objSet58 = properties44.keySet();
        properties44.clear();
        java.util.Properties properties60 = null;
        java.util.Properties properties61 = new java.util.Properties(properties60);
        java.util.Properties properties62 = new java.util.Properties(properties60);
        java.util.Properties properties63 = null;
        java.util.Properties properties64 = new java.util.Properties(properties63);
        java.lang.Object obj66 = properties62.put((java.lang.Object) properties64, (java.lang.Object) (short) 1);
        java.util.Enumeration<java.lang.Object> objEnumeration67 = properties64.elements();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet68 = properties64.entrySet();
        boolean boolean69 = properties44.equals((java.lang.Object) properties64);
        java.util.Enumeration<java.lang.Object> objEnumeration70 = properties64.elements();
        java.lang.Object obj71 = properties33.put((java.lang.Object) atomikosProperties34, (java.lang.Object) properties64);
        java.lang.String str72 = atomikosProperties34.getService();
        java.util.Properties properties73 = atomikosProperties34.asProperties();
        boolean boolean74 = atomikosProperties34.isEnableLogging();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertNotNull(properties2);
        org.junit.Assert.assertNull(obj9);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertNull(obj18);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertEquals("'" + obj32 + "' != '" + true + "'", obj32, true);
        org.junit.Assert.assertTrue("'" + long39 + "' != '" + 300000L + "'", long39 == 300000L);
        org.junit.Assert.assertNull(obj46);
        org.junit.Assert.assertNull(obj54);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertNull(obj57);
        org.junit.Assert.assertNotNull(objSet58);
        org.junit.Assert.assertNull(obj66);
        org.junit.Assert.assertNotNull(objEnumeration67);
        org.junit.Assert.assertNotNull(objEntrySet68);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + true + "'", boolean69 == true);
        org.junit.Assert.assertNotNull(objEnumeration70);
        org.junit.Assert.assertNull(obj71);
        org.junit.Assert.assertNull(str72);
        org.junit.Assert.assertNotNull(properties73);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + true + "'", boolean74 == true);
    }

    @Test
    public void test1516() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1516");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Properties properties2 = new java.util.Properties(properties0);
        boolean boolean4 = properties2.containsValue((java.lang.Object) (short) 100);
        java.util.Properties properties5 = new java.util.Properties(properties2);
        java.lang.String str7 = properties5.getProperty("hi!");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties8 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties8.setDefaultJtaTimeout((long) (byte) 10);
        long long11 = atomikosProperties8.getDefaultJtaTimeout();
        atomikosProperties8.setTransactionManagerUniqueName("hi!");
        atomikosProperties8.setLogBaseName("tmlog");
        boolean boolean16 = atomikosProperties8.isSerialJtaTransactions();
        java.util.Properties properties17 = atomikosProperties8.asProperties();
        boolean boolean18 = properties5.equals((java.lang.Object) atomikosProperties8);
        java.util.Enumeration<java.lang.Object> objEnumeration19 = properties5.elements();
        java.util.Properties properties20 = null;
        java.util.Properties properties21 = new java.util.Properties(properties20);
        java.util.Properties properties22 = new java.util.Properties(properties20);
        java.util.Properties properties23 = null;
        java.util.Properties properties24 = new java.util.Properties(properties23);
        java.lang.Object obj26 = properties22.put((java.lang.Object) properties24, (java.lang.Object) (short) 1);
        boolean boolean27 = properties22.isEmpty();
        java.util.Properties properties28 = null;
        java.util.Properties properties29 = new java.util.Properties(properties28);
        java.util.Properties properties30 = new java.util.Properties(properties28);
        boolean boolean31 = properties22.containsKey((java.lang.Object) properties30);
        java.util.Properties properties32 = new java.util.Properties(properties30);
        java.lang.Object obj33 = properties32.clone();
        java.util.Set<java.lang.String> strSet34 = properties32.stringPropertyNames();
        java.util.Properties properties35 = null;
        java.util.Properties properties36 = new java.util.Properties(properties35);
        java.util.Properties properties37 = new java.util.Properties(properties35);
        java.util.Properties properties38 = null;
        java.util.Properties properties39 = new java.util.Properties(properties38);
        java.lang.Object obj41 = properties37.put((java.lang.Object) properties39, (java.lang.Object) (short) 1);
        java.util.Properties properties43 = null;
        java.util.Properties properties44 = new java.util.Properties(properties43);
        java.util.Properties properties45 = new java.util.Properties(properties43);
        java.util.Properties properties46 = null;
        java.util.Properties properties47 = new java.util.Properties(properties46);
        java.lang.Object obj49 = properties45.put((java.lang.Object) properties47, (java.lang.Object) (short) 1);
        boolean boolean50 = properties39.remove((java.lang.Object) false, (java.lang.Object) (short) 1);
        java.util.Set<java.lang.String> strSet51 = properties39.stringPropertyNames();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties52 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties52.setDefaultJtaTimeout((long) (byte) 10);
        long long55 = atomikosProperties52.getDefaultJtaTimeout();
        java.lang.Object obj56 = properties39.get((java.lang.Object) atomikosProperties52);
        java.util.Enumeration<java.lang.Object> objEnumeration57 = properties39.elements();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties58 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties58.setThreadedTwoPhaseCommit(true);
        atomikosProperties58.setMaxActives((int) '#');
        atomikosProperties58.setEnableLogging(true);
        int int65 = atomikosProperties58.getMaxActives();
        boolean boolean66 = properties39.containsValue((java.lang.Object) atomikosProperties58);
        java.lang.Object obj67 = properties5.put((java.lang.Object) properties32, (java.lang.Object) boolean66);
        java.io.Writer writer68 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties32.store(writer68, "{com.atomikos.icatch.enable_logging=false, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=true, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertTrue("'" + long11 + "' != '" + 10L + "'", long11 == 10L);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(properties17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(objEnumeration19);
        org.junit.Assert.assertNull(obj26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNotNull(obj33);
        org.junit.Assert.assertEquals(obj33.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj33), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj33), "{}");
        org.junit.Assert.assertNotNull(strSet34);
        org.junit.Assert.assertNull(obj41);
        org.junit.Assert.assertNull(obj49);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertNotNull(strSet51);
        org.junit.Assert.assertTrue("'" + long55 + "' != '" + 10L + "'", long55 == 10L);
        org.junit.Assert.assertNull(obj56);
        org.junit.Assert.assertNotNull(objEnumeration57);
        org.junit.Assert.assertTrue("'" + int65 + "' != '" + 35 + "'", int65 == 35);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertNull(obj67);
    }

    @Test
    public void test1517() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1517");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setDefaultJtaTimeout((long) (byte) 10);
        long long3 = atomikosProperties0.getDefaultJtaTimeout();
        atomikosProperties0.setTransactionManagerUniqueName("");
        long long6 = atomikosProperties0.getCheckpointInterval();
        java.lang.String str7 = atomikosProperties0.getService();
        java.util.Properties properties8 = atomikosProperties0.asProperties();
        java.util.Properties properties9 = atomikosProperties0.asProperties();
        java.io.Reader reader10 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties9.load(reader10);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + long3 + "' != '" + 10L + "'", long3 == 10L);
        org.junit.Assert.assertTrue("'" + long6 + "' != '" + 500L + "'", long6 == 500L);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNotNull(properties8);
        org.junit.Assert.assertNotNull(properties9);
    }

    @Test
    public void test1518() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1518");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Properties properties2 = new java.util.Properties(properties0);
        java.util.Properties properties3 = null;
        java.util.Properties properties4 = new java.util.Properties(properties3);
        java.lang.Object obj6 = properties2.put((java.lang.Object) properties4, (java.lang.Object) (short) 1);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties7 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties7.setThreadedTwoPhaseCommit(true);
        atomikosProperties7.setMaxActives((int) (byte) 0);
        boolean boolean12 = properties2.containsValue((java.lang.Object) atomikosProperties7);
        atomikosProperties7.setCheckpointInterval((long) 9);
        boolean boolean15 = atomikosProperties7.isThreadedTwoPhaseCommit();
        java.util.Properties properties16 = atomikosProperties7.asProperties();
        java.lang.Object obj17 = properties16.clone();
        org.junit.Assert.assertNull(obj6);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(properties16);
        org.junit.Assert.assertNotNull(obj17);
// flaky:         org.junit.Assert.assertEquals(obj17.toString(), "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=9, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=true, com.atomikos.icatch.max_actives=0, com.atomikos.icatch.log_base_name=tmlog}");
// flaky:         org.junit.Assert.assertEquals(java.lang.String.valueOf(obj17), "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=9, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=true, com.atomikos.icatch.max_actives=0, com.atomikos.icatch.log_base_name=tmlog}");
// flaky:         org.junit.Assert.assertEquals(java.util.Objects.toString(obj17), "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=9, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=true, com.atomikos.icatch.max_actives=0, com.atomikos.icatch.log_base_name=tmlog}");
    }

    @Test
    public void test1519() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1519");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setDefaultJtaTimeout((long) (byte) 10);
        atomikosProperties0.setSerialJtaTransactions(false);
        atomikosProperties0.setMaxTimeout((long) (short) -1);
        long long7 = atomikosProperties0.getDefaultJtaTimeout();
        atomikosProperties0.setService("{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.tm_unique_name=, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
        boolean boolean10 = atomikosProperties0.isSerialJtaTransactions();
        java.lang.String str11 = atomikosProperties0.getTransactionManagerUniqueName();
        java.util.Properties properties12 = atomikosProperties0.asProperties();
        java.io.PrintWriter printWriter13 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties12.list(printWriter13);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + 10L + "'", long7 == 10L);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertNotNull(properties12);
    }

    @Test
    public void test1520() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1520");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setDefaultJtaTimeout((long) (byte) 10);
        long long3 = atomikosProperties0.getDefaultJtaTimeout();
        atomikosProperties0.setTransactionManagerUniqueName("");
        boolean boolean6 = atomikosProperties0.isEnableLogging();
        java.lang.String str7 = atomikosProperties0.getLogBaseDir();
        java.util.Properties properties8 = atomikosProperties0.asProperties();
        boolean boolean9 = atomikosProperties0.isEnableLogging();
        java.util.Properties properties10 = atomikosProperties0.asProperties();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties11 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties11.setDefaultJtaTimeout((long) (byte) 10);
        atomikosProperties11.setCheckpointInterval((long) (byte) 0);
        atomikosProperties11.setTransactionManagerUniqueName("");
        boolean boolean18 = atomikosProperties11.isEnableLogging();
        java.util.Properties properties19 = atomikosProperties11.asProperties();
        java.util.Enumeration<java.lang.Object> objEnumeration20 = properties19.keys();
        java.util.Properties properties21 = null;
        java.util.Properties properties22 = new java.util.Properties(properties21);
        java.util.Properties properties23 = new java.util.Properties(properties21);
        java.util.Properties properties24 = null;
        java.util.Properties properties25 = new java.util.Properties(properties24);
        java.lang.Object obj27 = properties23.put((java.lang.Object) properties25, (java.lang.Object) (short) 1);
        java.util.Properties properties29 = null;
        java.util.Properties properties30 = new java.util.Properties(properties29);
        java.util.Properties properties31 = new java.util.Properties(properties29);
        java.util.Properties properties32 = null;
        java.util.Properties properties33 = new java.util.Properties(properties32);
        java.lang.Object obj35 = properties31.put((java.lang.Object) properties33, (java.lang.Object) (short) 1);
        boolean boolean36 = properties25.remove((java.lang.Object) false, (java.lang.Object) (short) 1);
        java.util.Set<java.lang.String> strSet37 = properties25.stringPropertyNames();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties38 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties38.setDefaultJtaTimeout((long) (byte) 10);
        long long41 = atomikosProperties38.getDefaultJtaTimeout();
        java.lang.Object obj42 = properties25.get((java.lang.Object) atomikosProperties38);
        atomikosProperties38.setCheckpointInterval((long) (short) 100);
        java.util.Properties properties45 = atomikosProperties38.asProperties();
        java.util.Enumeration<?> wildcardEnumeration46 = properties45.propertyNames();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet47 = properties45.entrySet();
        java.lang.Object obj48 = properties10.getOrDefault((java.lang.Object) objEnumeration20, (java.lang.Object) properties45);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties49 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties49.setDefaultJtaTimeout((long) (byte) 10);
        long long52 = atomikosProperties49.getDefaultJtaTimeout();
        atomikosProperties49.setTransactionManagerUniqueName("");
        boolean boolean55 = atomikosProperties49.isEnableLogging();
        boolean boolean56 = properties45.contains((java.lang.Object) atomikosProperties49);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties57 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        int int58 = atomikosProperties57.getMaxActives();
        long long59 = atomikosProperties57.getMaxTimeout();
        java.util.Properties properties60 = atomikosProperties57.asProperties();
        java.util.Properties properties61 = atomikosProperties57.asProperties();
        long long62 = atomikosProperties57.getMaxTimeout();
        java.lang.String str63 = atomikosProperties57.getTransactionManagerUniqueName();
        atomikosProperties57.setDefaultJtaTimeout((long) (-1));
        java.util.Properties properties66 = atomikosProperties57.asProperties();
        long long67 = atomikosProperties57.getCheckpointInterval();
        boolean boolean68 = properties45.containsValue((java.lang.Object) atomikosProperties57);
        long long69 = atomikosProperties57.getCheckpointInterval();
        atomikosProperties57.setService("{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=0, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.tm_unique_name=, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
        org.junit.Assert.assertTrue("'" + long3 + "' != '" + 10L + "'", long3 == 10L);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNotNull(properties8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertNotNull(properties10);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(properties19);
        org.junit.Assert.assertNotNull(objEnumeration20);
        org.junit.Assert.assertNull(obj27);
        org.junit.Assert.assertNull(obj35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(strSet37);
        org.junit.Assert.assertTrue("'" + long41 + "' != '" + 10L + "'", long41 == 10L);
        org.junit.Assert.assertNull(obj42);
        org.junit.Assert.assertNotNull(properties45);
        org.junit.Assert.assertNotNull(wildcardEnumeration46);
        org.junit.Assert.assertNotNull(objEntrySet47);
        org.junit.Assert.assertNotNull(obj48);
// flaky:         org.junit.Assert.assertEquals(obj48.toString(), "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=100, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
// flaky:         org.junit.Assert.assertEquals(java.lang.String.valueOf(obj48), "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=100, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
// flaky:         org.junit.Assert.assertEquals(java.util.Objects.toString(obj48), "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=100, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
        org.junit.Assert.assertTrue("'" + long52 + "' != '" + 10L + "'", long52 == 10L);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + 50 + "'", int58 == 50);
        org.junit.Assert.assertTrue("'" + long59 + "' != '" + 300000L + "'", long59 == 300000L);
        org.junit.Assert.assertNotNull(properties60);
        org.junit.Assert.assertNotNull(properties61);
        org.junit.Assert.assertTrue("'" + long62 + "' != '" + 300000L + "'", long62 == 300000L);
        org.junit.Assert.assertNull(str63);
        org.junit.Assert.assertNotNull(properties66);
        org.junit.Assert.assertTrue("'" + long67 + "' != '" + 500L + "'", long67 == 500L);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertTrue("'" + long69 + "' != '" + 500L + "'", long69 == 500L);
    }

    @Test
    public void test1521() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1521");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Properties properties2 = new java.util.Properties(properties0);
        java.util.Properties properties3 = null;
        java.util.Properties properties4 = new java.util.Properties(properties3);
        java.lang.Object obj6 = properties2.put((java.lang.Object) properties4, (java.lang.Object) (short) 1);
        boolean boolean7 = properties2.isEmpty();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties8 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties8.setDefaultJtaTimeout((long) (byte) 10);
        atomikosProperties8.setCheckpointInterval((long) (byte) 0);
        atomikosProperties8.setTransactionManagerUniqueName("");
        java.util.Properties properties15 = atomikosProperties8.asProperties();
        java.lang.Object obj16 = properties2.remove((java.lang.Object) properties15);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties17 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties17.setDefaultJtaTimeout((long) (byte) 10);
        atomikosProperties17.setCheckpointInterval((long) (byte) 0);
        atomikosProperties17.setTransactionManagerUniqueName("");
        java.lang.Object obj24 = properties15.remove((java.lang.Object) atomikosProperties17);
        java.lang.String str25 = properties15.toString();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties26 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties26.setDefaultJtaTimeout((long) (byte) 10);
        long long29 = atomikosProperties26.getDefaultJtaTimeout();
        atomikosProperties26.setTransactionManagerUniqueName("");
        boolean boolean32 = atomikosProperties26.isEnableLogging();
        java.lang.String str33 = atomikosProperties26.getLogBaseDir();
        java.util.Properties properties34 = atomikosProperties26.asProperties();
        java.lang.String str35 = properties34.toString();
        java.util.Properties properties36 = null;
        java.util.Properties properties37 = new java.util.Properties(properties36);
        java.util.Properties properties38 = new java.util.Properties(properties36);
        java.util.Properties properties39 = null;
        java.util.Properties properties40 = new java.util.Properties(properties39);
        java.lang.Object obj42 = properties38.put((java.lang.Object) properties40, (java.lang.Object) (short) 1);
        java.util.Properties properties44 = null;
        java.util.Properties properties45 = new java.util.Properties(properties44);
        java.util.Properties properties46 = new java.util.Properties(properties44);
        java.util.Properties properties47 = null;
        java.util.Properties properties48 = new java.util.Properties(properties47);
        java.lang.Object obj50 = properties46.put((java.lang.Object) properties48, (java.lang.Object) (short) 1);
        boolean boolean51 = properties40.remove((java.lang.Object) false, (java.lang.Object) (short) 1);
        java.util.Set<java.lang.String> strSet52 = properties40.stringPropertyNames();
        java.lang.Object obj53 = properties40.clone();
        properties34.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties40);
        java.lang.Object obj55 = properties15.remove((java.lang.Object) properties34);
        java.io.PrintWriter printWriter56 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties34.list(printWriter56);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(obj6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(properties15);
        org.junit.Assert.assertNull(obj16);
        org.junit.Assert.assertNull(obj24);
// flaky:         org.junit.Assert.assertEquals("'" + str25 + "' != '" + "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=0, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.tm_unique_name=, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}" + "'", str25, "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=0, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.tm_unique_name=, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
        org.junit.Assert.assertTrue("'" + long29 + "' != '" + 10L + "'", long29 == 10L);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertNull(str33);
        org.junit.Assert.assertNotNull(properties34);
// flaky:         org.junit.Assert.assertEquals("'" + str35 + "' != '" + "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.tm_unique_name=, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}" + "'", str35, "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.tm_unique_name=, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
        org.junit.Assert.assertNull(obj42);
        org.junit.Assert.assertNull(obj50);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertNotNull(strSet52);
        org.junit.Assert.assertNotNull(obj53);
        org.junit.Assert.assertEquals(obj53.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj53), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj53), "{}");
        org.junit.Assert.assertNull(obj55);
    }

    @Test
    public void test1522() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1522");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Properties properties2 = new java.util.Properties(properties0);
        java.util.Properties properties3 = null;
        java.util.Properties properties4 = new java.util.Properties(properties3);
        java.lang.Object obj6 = properties2.put((java.lang.Object) properties4, (java.lang.Object) (short) 1);
        java.util.Enumeration<java.lang.Object> objEnumeration7 = properties4.elements();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet8 = properties4.entrySet();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties9 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties9.setDefaultJtaTimeout((long) (byte) 10);
        long long12 = atomikosProperties9.getDefaultJtaTimeout();
        atomikosProperties9.setTransactionManagerUniqueName("");
        boolean boolean15 = atomikosProperties9.isEnableLogging();
        boolean boolean16 = properties4.containsKey((java.lang.Object) boolean15);
        java.util.Properties properties17 = null;
        java.util.Properties properties18 = new java.util.Properties(properties17);
        java.util.Properties properties19 = new java.util.Properties(properties17);
        java.util.Properties properties20 = null;
        java.util.Properties properties21 = new java.util.Properties(properties20);
        java.lang.Object obj23 = properties19.put((java.lang.Object) properties21, (java.lang.Object) (short) 1);
        java.util.Properties properties25 = null;
        java.util.Properties properties26 = new java.util.Properties(properties25);
        java.util.Properties properties27 = new java.util.Properties(properties25);
        java.util.Properties properties28 = null;
        java.util.Properties properties29 = new java.util.Properties(properties28);
        java.lang.Object obj31 = properties27.put((java.lang.Object) properties29, (java.lang.Object) (short) 1);
        boolean boolean32 = properties21.remove((java.lang.Object) false, (java.lang.Object) (short) 1);
        java.util.Set<java.lang.String> strSet33 = properties21.stringPropertyNames();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties34 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties34.setThreadedTwoPhaseCommit(true);
        atomikosProperties34.setMaxActives((int) (byte) 0);
        atomikosProperties34.setEnableLogging(true);
        atomikosProperties34.setForceShutdownOnVmExit(false);
        java.lang.Object obj43 = properties21.get((java.lang.Object) false);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties44 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties44.setDefaultJtaTimeout((long) (byte) 10);
        atomikosProperties44.setCheckpointInterval((long) (byte) 0);
        atomikosProperties44.setTransactionManagerUniqueName("");
        java.util.Properties properties51 = atomikosProperties44.asProperties();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties52 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties52.setThreadedTwoPhaseCommit(true);
        atomikosProperties52.setMaxActives((int) '#');
        atomikosProperties52.setForceShutdownOnVmExit(true);
        java.lang.String str59 = atomikosProperties52.getLogBaseDir();
        java.lang.Object obj60 = properties51.remove((java.lang.Object) atomikosProperties52);
        java.util.Collection<java.lang.Object> objCollection61 = properties51.values();
        boolean boolean62 = properties4.remove((java.lang.Object) false, (java.lang.Object) properties51);
        boolean boolean63 = properties51.isEmpty();
        org.junit.Assert.assertNull(obj6);
        org.junit.Assert.assertNotNull(objEnumeration7);
        org.junit.Assert.assertNotNull(objEntrySet8);
        org.junit.Assert.assertTrue("'" + long12 + "' != '" + 10L + "'", long12 == 10L);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNull(obj23);
        org.junit.Assert.assertNull(obj31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(strSet33);
        org.junit.Assert.assertNull(obj43);
        org.junit.Assert.assertNotNull(properties51);
        org.junit.Assert.assertNull(str59);
        org.junit.Assert.assertNull(obj60);
        org.junit.Assert.assertNotNull(objCollection61);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
    }

    @Test
    public void test1523() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1523");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setDefaultJtaTimeout((long) (byte) 10);
        atomikosProperties0.setCheckpointInterval((long) (byte) 0);
        atomikosProperties0.setEnableLogging(true);
        java.lang.String str7 = atomikosProperties0.getLogBaseName();
        atomikosProperties0.setCheckpointInterval((long) ' ');
        java.util.Properties properties10 = atomikosProperties0.asProperties();
        java.lang.String str11 = atomikosProperties0.getTransactionManagerUniqueName();
        long long12 = atomikosProperties0.getDefaultJtaTimeout();
        java.lang.String str13 = atomikosProperties0.getService();
        boolean boolean14 = atomikosProperties0.isSerialJtaTransactions();
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "tmlog" + "'", str7, "tmlog");
        org.junit.Assert.assertNotNull(properties10);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertTrue("'" + long12 + "' != '" + 10L + "'", long12 == 10L);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
    }

    @Test
    public void test1524() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1524");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setDefaultJtaTimeout((long) (byte) 10);
        atomikosProperties0.setCheckpointInterval((long) (byte) 0);
        atomikosProperties0.setTransactionManagerUniqueName("");
        boolean boolean7 = atomikosProperties0.isEnableLogging();
        atomikosProperties0.setLogBaseDir("hi!");
        atomikosProperties0.setForceShutdownOnVmExit(false);
        java.lang.Class<?> wildcardClass12 = atomikosProperties0.getClass();
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(wildcardClass12);
    }

    @Test
    public void test1525() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1525");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setDefaultJtaTimeout((long) (byte) 10);
        long long3 = atomikosProperties0.getDefaultJtaTimeout();
        atomikosProperties0.setTransactionManagerUniqueName("");
        boolean boolean6 = atomikosProperties0.isEnableLogging();
        atomikosProperties0.setDefaultJtaTimeout((long) '4');
        java.lang.String str9 = atomikosProperties0.getTransactionManagerUniqueName();
        atomikosProperties0.setThreadedTwoPhaseCommit(true);
        java.util.Properties properties12 = atomikosProperties0.asProperties();
        java.util.Properties properties13 = new java.util.Properties(properties12);
        java.util.Enumeration<?> wildcardEnumeration14 = properties13.propertyNames();
        java.util.Set<java.lang.Object> objSet15 = properties13.keySet();
        java.util.Enumeration<java.lang.Object> objEnumeration16 = properties13.elements();
        java.util.Properties properties17 = null;
        java.util.Properties properties18 = new java.util.Properties(properties17);
        java.util.Properties properties19 = new java.util.Properties(properties17);
        java.util.Properties properties20 = null;
        java.util.Properties properties21 = new java.util.Properties(properties20);
        java.lang.Object obj23 = properties19.put((java.lang.Object) properties21, (java.lang.Object) (short) 1);
        boolean boolean24 = properties19.isEmpty();
        java.util.Properties properties25 = null;
        java.util.Properties properties26 = new java.util.Properties(properties25);
        java.util.Properties properties27 = new java.util.Properties(properties25);
        boolean boolean28 = properties19.containsKey((java.lang.Object) properties27);
        java.util.Properties properties29 = null;
        java.util.Properties properties30 = new java.util.Properties(properties29);
        java.util.Properties properties31 = new java.util.Properties(properties29);
        java.util.Properties properties32 = null;
        java.util.Properties properties33 = new java.util.Properties(properties32);
        java.lang.Object obj35 = properties31.put((java.lang.Object) properties33, (java.lang.Object) (short) 1);
        java.util.Properties properties37 = null;
        java.util.Properties properties38 = new java.util.Properties(properties37);
        java.util.Properties properties39 = new java.util.Properties(properties37);
        java.util.Properties properties40 = null;
        java.util.Properties properties41 = new java.util.Properties(properties40);
        java.lang.Object obj43 = properties39.put((java.lang.Object) properties41, (java.lang.Object) (short) 1);
        boolean boolean44 = properties33.remove((java.lang.Object) false, (java.lang.Object) (short) 1);
        java.util.Set<java.lang.String> strSet45 = properties33.stringPropertyNames();
        boolean boolean46 = properties27.containsKey((java.lang.Object) strSet45);
        java.util.Properties properties47 = null;
        java.util.Properties properties48 = new java.util.Properties(properties47);
        java.util.Properties properties49 = new java.util.Properties(properties47);
        java.util.Properties properties50 = null;
        java.util.Properties properties51 = new java.util.Properties(properties50);
        java.lang.Object obj53 = properties49.put((java.lang.Object) properties51, (java.lang.Object) (short) 1);
        properties51.clear();
        java.lang.String str56 = properties51.getProperty("");
        java.util.Properties properties57 = null;
        java.util.Properties properties58 = new java.util.Properties(properties57);
        java.util.Properties properties59 = new java.util.Properties(properties57);
        java.util.Properties properties60 = null;
        java.util.Properties properties61 = new java.util.Properties(properties60);
        java.lang.Object obj63 = properties59.put((java.lang.Object) properties61, (java.lang.Object) (short) 1);
        properties51.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties59);
        boolean boolean65 = properties27.containsKey((java.lang.Object) properties51);
        java.util.Properties properties67 = null;
        java.util.Properties properties68 = new java.util.Properties(properties67);
        java.util.Properties properties69 = new java.util.Properties(properties67);
        java.util.Properties properties70 = null;
        java.util.Properties properties71 = new java.util.Properties(properties70);
        java.lang.Object obj73 = properties69.put((java.lang.Object) properties71, (java.lang.Object) (short) 1);
        properties71.clear();
        int int75 = properties71.size();
        java.lang.Object obj78 = properties71.setProperty("hi!", "hi!");
        java.lang.Object obj81 = properties71.setProperty("tmlog", "tmlog");
        java.lang.Object obj82 = properties51.putIfAbsent((java.lang.Object) (short) 10, (java.lang.Object) "tmlog");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties83 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties83.setDefaultJtaTimeout((long) (byte) 10);
        long long86 = atomikosProperties83.getDefaultJtaTimeout();
        atomikosProperties83.setTransactionManagerUniqueName("");
        boolean boolean89 = atomikosProperties83.isEnableLogging();
        atomikosProperties83.setDefaultJtaTimeout((long) '4');
        boolean boolean92 = atomikosProperties83.isSerialJtaTransactions();
        java.util.Properties properties93 = atomikosProperties83.asProperties();
        atomikosProperties83.setThreadedTwoPhaseCommit(true);
        java.util.Properties properties96 = atomikosProperties83.asProperties();
        boolean boolean97 = properties51.containsKey((java.lang.Object) atomikosProperties83);
        java.util.Properties properties98 = new java.util.Properties(properties51);
        boolean boolean99 = properties13.equals((java.lang.Object) properties51);
        org.junit.Assert.assertTrue("'" + long3 + "' != '" + 10L + "'", long3 == 10L);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "" + "'", str9, "");
        org.junit.Assert.assertNotNull(properties12);
        org.junit.Assert.assertNotNull(wildcardEnumeration14);
        org.junit.Assert.assertNotNull(objSet15);
        org.junit.Assert.assertNotNull(objEnumeration16);
        org.junit.Assert.assertNull(obj23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNull(obj35);
        org.junit.Assert.assertNull(obj43);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(strSet45);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNull(obj53);
        org.junit.Assert.assertNull(str56);
        org.junit.Assert.assertNull(obj63);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertNull(obj73);
        org.junit.Assert.assertTrue("'" + int75 + "' != '" + 0 + "'", int75 == 0);
        org.junit.Assert.assertNull(obj78);
        org.junit.Assert.assertNull(obj81);
        org.junit.Assert.assertNull(obj82);
        org.junit.Assert.assertTrue("'" + long86 + "' != '" + 10L + "'", long86 == 10L);
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + true + "'", boolean89 == true);
        org.junit.Assert.assertTrue("'" + boolean92 + "' != '" + true + "'", boolean92 == true);
        org.junit.Assert.assertNotNull(properties93);
        org.junit.Assert.assertNotNull(properties96);
        org.junit.Assert.assertTrue("'" + boolean97 + "' != '" + false + "'", boolean97 == false);
        org.junit.Assert.assertTrue("'" + boolean99 + "' != '" + false + "'", boolean99 == false);
    }

    @Test
    public void test1526() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1526");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Properties properties2 = new java.util.Properties(properties0);
        java.util.Properties properties3 = null;
        java.util.Properties properties4 = new java.util.Properties(properties3);
        java.lang.Object obj6 = properties2.put((java.lang.Object) properties4, (java.lang.Object) (short) 1);
        boolean boolean7 = properties2.isEmpty();
        java.util.Properties properties8 = null;
        java.util.Properties properties9 = new java.util.Properties(properties8);
        java.util.Properties properties10 = new java.util.Properties(properties8);
        boolean boolean11 = properties2.containsKey((java.lang.Object) properties10);
        java.util.Properties properties12 = null;
        java.util.Properties properties13 = new java.util.Properties(properties12);
        java.util.Properties properties14 = new java.util.Properties(properties12);
        java.util.Properties properties15 = null;
        java.util.Properties properties16 = new java.util.Properties(properties15);
        java.lang.Object obj18 = properties14.put((java.lang.Object) properties16, (java.lang.Object) (short) 1);
        java.util.Properties properties20 = null;
        java.util.Properties properties21 = new java.util.Properties(properties20);
        java.util.Properties properties22 = new java.util.Properties(properties20);
        java.util.Properties properties23 = null;
        java.util.Properties properties24 = new java.util.Properties(properties23);
        java.lang.Object obj26 = properties22.put((java.lang.Object) properties24, (java.lang.Object) (short) 1);
        boolean boolean27 = properties16.remove((java.lang.Object) false, (java.lang.Object) (short) 1);
        java.util.Set<java.lang.String> strSet28 = properties16.stringPropertyNames();
        boolean boolean29 = properties10.containsKey((java.lang.Object) strSet28);
        java.util.Properties properties30 = null;
        java.util.Properties properties31 = new java.util.Properties(properties30);
        java.util.Properties properties32 = new java.util.Properties(properties30);
        java.util.Properties properties33 = null;
        java.util.Properties properties34 = new java.util.Properties(properties33);
        java.lang.Object obj36 = properties32.put((java.lang.Object) properties34, (java.lang.Object) (short) 1);
        properties34.clear();
        java.lang.String str39 = properties34.getProperty("");
        java.util.Properties properties40 = null;
        java.util.Properties properties41 = new java.util.Properties(properties40);
        java.util.Properties properties42 = new java.util.Properties(properties40);
        java.util.Properties properties43 = null;
        java.util.Properties properties44 = new java.util.Properties(properties43);
        java.lang.Object obj46 = properties42.put((java.lang.Object) properties44, (java.lang.Object) (short) 1);
        properties34.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties42);
        boolean boolean48 = properties10.containsKey((java.lang.Object) properties34);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties50 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties50.setThreadedTwoPhaseCommit(true);
        boolean boolean53 = atomikosProperties50.isEnableLogging();
        java.lang.Object obj54 = properties10.put((java.lang.Object) '4', (java.lang.Object) boolean53);
        java.util.Properties properties55 = new java.util.Properties(properties10);
        boolean boolean56 = properties10.isEmpty();
        java.lang.Object obj59 = properties10.setProperty("tmlog", "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=0, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.tm_unique_name=, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
        java.lang.String str60 = properties10.toString();
        java.lang.Object obj61 = properties10.clone();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties62 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties62.setDefaultJtaTimeout((long) (byte) 10);
        atomikosProperties62.setCheckpointInterval((long) (byte) 0);
        atomikosProperties62.setTransactionManagerUniqueName("");
        java.util.Properties properties69 = atomikosProperties62.asProperties();
        java.lang.String str70 = atomikosProperties62.getLogBaseName();
        java.util.Properties properties71 = atomikosProperties62.asProperties();
        java.lang.Object obj72 = properties10.get((java.lang.Object) properties71);
        java.lang.String str74 = properties10.getProperty("{{}=tmlog}");
        org.junit.Assert.assertNull(obj6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNull(obj18);
        org.junit.Assert.assertNull(obj26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(strSet28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNull(obj36);
        org.junit.Assert.assertNull(str39);
        org.junit.Assert.assertNull(obj46);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertNull(obj54);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertNull(obj59);
// flaky:         org.junit.Assert.assertEquals("'" + str60 + "' != '" + "{tmlog={com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=0, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.tm_unique_name=, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}, 4=true}" + "'", str60, "{tmlog={com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=0, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.tm_unique_name=, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}, 4=true}");
        org.junit.Assert.assertNotNull(obj61);
// flaky:         org.junit.Assert.assertEquals(obj61.toString(), "{tmlog={com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=0, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.tm_unique_name=, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}, 4=true}");
// flaky:         org.junit.Assert.assertEquals(java.lang.String.valueOf(obj61), "{tmlog={com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=0, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.tm_unique_name=, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}, 4=true}");
// flaky:         org.junit.Assert.assertEquals(java.util.Objects.toString(obj61), "{tmlog={com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=0, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.tm_unique_name=, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}, 4=true}");
        org.junit.Assert.assertNotNull(properties69);
        org.junit.Assert.assertEquals("'" + str70 + "' != '" + "tmlog" + "'", str70, "tmlog");
        org.junit.Assert.assertNotNull(properties71);
        org.junit.Assert.assertNull(obj72);
        org.junit.Assert.assertNull(str74);
    }

    @Test
    public void test1527() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1527");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Properties properties2 = new java.util.Properties(properties0);
        java.util.Properties properties3 = null;
        java.util.Properties properties4 = new java.util.Properties(properties3);
        java.lang.Object obj6 = properties2.put((java.lang.Object) properties4, (java.lang.Object) (short) 1);
        java.util.Properties properties7 = new java.util.Properties(properties4);
        java.util.Properties properties8 = new java.util.Properties(properties4);
        java.util.Set<java.lang.Object> objSet9 = properties8.keySet();
        java.util.Properties properties10 = new java.util.Properties(properties8);
        java.util.Properties properties11 = new java.util.Properties(properties8);
        java.util.Properties properties12 = null;
        java.util.Properties properties13 = new java.util.Properties(properties12);
        java.util.Properties properties14 = new java.util.Properties(properties12);
        java.util.Properties properties15 = null;
        java.util.Properties properties16 = new java.util.Properties(properties15);
        java.lang.Object obj18 = properties14.put((java.lang.Object) properties16, (java.lang.Object) (short) 1);
        boolean boolean19 = properties14.isEmpty();
        java.util.Properties properties20 = null;
        java.util.Properties properties21 = new java.util.Properties(properties20);
        java.util.Properties properties22 = new java.util.Properties(properties20);
        boolean boolean23 = properties14.containsKey((java.lang.Object) properties22);
        java.util.Properties properties24 = new java.util.Properties(properties22);
        java.util.Properties properties25 = new java.util.Properties(properties24);
        java.util.Properties properties26 = null;
        java.util.Properties properties27 = new java.util.Properties(properties26);
        java.util.Properties properties28 = new java.util.Properties(properties26);
        java.util.Properties properties29 = null;
        java.util.Properties properties30 = new java.util.Properties(properties29);
        java.lang.Object obj32 = properties28.put((java.lang.Object) properties30, (java.lang.Object) (short) 1);
        properties30.clear();
        int int34 = properties30.size();
        java.util.Properties properties35 = new java.util.Properties(properties30);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties36 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        int int37 = atomikosProperties36.getMaxActives();
        long long38 = atomikosProperties36.getMaxTimeout();
        java.util.Properties properties39 = atomikosProperties36.asProperties();
        java.util.Properties properties40 = atomikosProperties36.asProperties();
        java.util.Properties properties41 = null;
        java.util.Properties properties42 = new java.util.Properties(properties41);
        java.util.Properties properties43 = new java.util.Properties(properties41);
        java.util.Properties properties44 = null;
        java.util.Properties properties45 = new java.util.Properties(properties44);
        java.lang.Object obj47 = properties43.put((java.lang.Object) properties45, (java.lang.Object) (short) 1);
        java.util.Enumeration<java.lang.Object> objEnumeration48 = properties45.elements();
        java.lang.Object obj49 = properties30.replace((java.lang.Object) atomikosProperties36, (java.lang.Object) properties45);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties51 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties51.setThreadedTwoPhaseCommit(true);
        java.lang.String str54 = atomikosProperties51.getService();
        boolean boolean55 = atomikosProperties51.isSerialJtaTransactions();
        java.lang.Object obj56 = properties45.getOrDefault((java.lang.Object) "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.tm_unique_name=, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}", (java.lang.Object) atomikosProperties51);
        boolean boolean57 = properties24.equals((java.lang.Object) properties45);
        properties8.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties24);
        java.util.Enumeration<java.lang.Object> objEnumeration59 = properties24.elements();
        properties24.clear();
        java.util.Enumeration<java.lang.Object> objEnumeration61 = properties24.elements();
        java.util.Enumeration<java.lang.Object> objEnumeration62 = properties24.elements();
        java.lang.String str63 = properties24.toString();
        org.junit.Assert.assertNull(obj6);
        org.junit.Assert.assertNotNull(objSet9);
        org.junit.Assert.assertNull(obj18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNull(obj32);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 0 + "'", int34 == 0);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 50 + "'", int37 == 50);
        org.junit.Assert.assertTrue("'" + long38 + "' != '" + 300000L + "'", long38 == 300000L);
        org.junit.Assert.assertNotNull(properties39);
        org.junit.Assert.assertNotNull(properties40);
        org.junit.Assert.assertNull(obj47);
        org.junit.Assert.assertNotNull(objEnumeration48);
        org.junit.Assert.assertNull(obj49);
        org.junit.Assert.assertNull(str54);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertNotNull(obj56);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertNotNull(objEnumeration59);
        org.junit.Assert.assertNotNull(objEnumeration61);
        org.junit.Assert.assertNotNull(objEnumeration62);
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "{}" + "'", str63, "{}");
    }

    @Test
    public void test1528() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1528");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setDefaultJtaTimeout((long) (byte) 10);
        atomikosProperties0.setCheckpointInterval((long) (byte) 0);
        atomikosProperties0.setTransactionManagerUniqueName("");
        java.util.Properties properties7 = atomikosProperties0.asProperties();
        java.util.Properties properties8 = atomikosProperties0.asProperties();
        java.util.Properties properties9 = null;
        java.util.Properties properties10 = new java.util.Properties(properties9);
        java.util.Properties properties11 = new java.util.Properties(properties9);
        java.util.Properties properties12 = null;
        java.util.Properties properties13 = new java.util.Properties(properties12);
        java.lang.Object obj15 = properties11.put((java.lang.Object) properties13, (java.lang.Object) (short) 1);
        properties13.clear();
        int int17 = properties13.size();
        java.lang.Object obj20 = properties13.setProperty("hi!", "hi!");
        java.lang.Object obj23 = properties13.setProperty("tmlog", "tmlog");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties24 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties24.setDefaultJtaTimeout((long) (byte) 10);
        atomikosProperties24.setCheckpointInterval((long) (byte) 0);
        atomikosProperties24.setTransactionManagerUniqueName("");
        boolean boolean31 = atomikosProperties24.isEnableLogging();
        java.lang.String str32 = atomikosProperties24.getLogBaseName();
        atomikosProperties24.setThreadedTwoPhaseCommit(false);
        java.lang.Object obj35 = properties8.put((java.lang.Object) properties13, (java.lang.Object) atomikosProperties24);
        java.util.Properties properties36 = new java.util.Properties(properties8);
        java.util.Properties properties37 = new java.util.Properties(properties8);
        java.util.Set<java.lang.Object> objSet38 = properties8.keySet();
        int int39 = properties8.size();
        properties8.clear();
        org.junit.Assert.assertNotNull(properties7);
        org.junit.Assert.assertNotNull(properties8);
        org.junit.Assert.assertNull(obj15);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 0 + "'", int17 == 0);
        org.junit.Assert.assertNull(obj20);
        org.junit.Assert.assertNull(obj23);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "tmlog" + "'", str32, "tmlog");
        org.junit.Assert.assertNull(obj35);
        org.junit.Assert.assertNotNull(objSet38);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 11 + "'", int39 == 11);
    }

    @Test
    public void test1529() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1529");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setThreadedTwoPhaseCommit(true);
        atomikosProperties0.setMaxActives((int) '#');
        atomikosProperties0.setEnableLogging(true);
        int int7 = atomikosProperties0.getMaxActives();
        boolean boolean8 = atomikosProperties0.isEnableLogging();
        java.lang.String str9 = atomikosProperties0.getTransactionManagerUniqueName();
        java.util.Properties properties10 = atomikosProperties0.asProperties();
        java.lang.String str11 = atomikosProperties0.getLogBaseDir();
        atomikosProperties0.setCheckpointInterval((long) (byte) 1);
        java.util.Properties properties14 = atomikosProperties0.asProperties();
        java.io.OutputStream outputStream15 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties14.storeToXML(outputStream15, "", "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.tm_unique_name=, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 35 + "'", int7 == 35);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertNotNull(properties10);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertNotNull(properties14);
    }

    @Test
    public void test1530() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1530");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setThreadedTwoPhaseCommit(true);
        atomikosProperties0.setMaxActives((int) (byte) 0);
        atomikosProperties0.setEnableLogging(true);
        atomikosProperties0.setForceShutdownOnVmExit(false);
        boolean boolean9 = atomikosProperties0.isThreadedTwoPhaseCommit();
        atomikosProperties0.setMaxTimeout(10L);
        long long12 = atomikosProperties0.getMaxTimeout();
        java.util.Properties properties13 = atomikosProperties0.asProperties();
        int int14 = atomikosProperties0.getMaxActives();
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertTrue("'" + long12 + "' != '" + 10L + "'", long12 == 10L);
        org.junit.Assert.assertNotNull(properties13);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
    }

    @Test
    public void test1531() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1531");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setDefaultJtaTimeout((long) (byte) 10);
        long long3 = atomikosProperties0.getDefaultJtaTimeout();
        atomikosProperties0.setTransactionManagerUniqueName("");
        boolean boolean6 = atomikosProperties0.isEnableLogging();
        java.lang.String str7 = atomikosProperties0.getLogBaseDir();
        java.util.Properties properties8 = atomikosProperties0.asProperties();
        boolean boolean9 = properties8.isEmpty();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties10 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties10.setDefaultJtaTimeout((long) (byte) 10);
        atomikosProperties10.setCheckpointInterval((long) (byte) 0);
        atomikosProperties10.setTransactionManagerUniqueName("");
        java.util.Properties properties17 = atomikosProperties10.asProperties();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties18 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties18.setThreadedTwoPhaseCommit(true);
        atomikosProperties18.setMaxActives((int) '#');
        atomikosProperties18.setForceShutdownOnVmExit(true);
        java.lang.String str25 = atomikosProperties18.getLogBaseDir();
        java.lang.Object obj26 = properties17.remove((java.lang.Object) atomikosProperties18);
        java.util.Collection<java.lang.Object> objCollection27 = properties17.values();
        boolean boolean28 = properties8.contains((java.lang.Object) properties17);
        java.util.Properties properties29 = new java.util.Properties(properties8);
        java.lang.String str32 = properties29.getProperty("{{}=tmlog}", "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=true, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=true, com.atomikos.icatch.max_actives=35, com.atomikos.icatch.log_base_name=tmlog}");
        org.junit.Assert.assertTrue("'" + long3 + "' != '" + 10L + "'", long3 == 10L);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNotNull(properties8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(properties17);
        org.junit.Assert.assertNull(str25);
        org.junit.Assert.assertNull(obj26);
        org.junit.Assert.assertNotNull(objCollection27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=true, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=true, com.atomikos.icatch.max_actives=35, com.atomikos.icatch.log_base_name=tmlog}" + "'", str32, "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=true, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=true, com.atomikos.icatch.max_actives=35, com.atomikos.icatch.log_base_name=tmlog}");
    }

    @Test
    public void test1532() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1532");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Properties properties2 = new java.util.Properties(properties0);
        java.util.Properties properties3 = null;
        java.util.Properties properties4 = new java.util.Properties(properties3);
        java.lang.Object obj6 = properties2.put((java.lang.Object) properties4, (java.lang.Object) (short) 1);
        boolean boolean7 = properties2.isEmpty();
        java.util.Properties properties8 = null;
        java.util.Properties properties9 = new java.util.Properties(properties8);
        java.util.Properties properties10 = new java.util.Properties(properties8);
        boolean boolean11 = properties2.containsKey((java.lang.Object) properties10);
        java.util.Properties properties12 = null;
        java.util.Properties properties13 = new java.util.Properties(properties12);
        java.util.Properties properties14 = new java.util.Properties(properties12);
        java.util.Properties properties15 = null;
        java.util.Properties properties16 = new java.util.Properties(properties15);
        java.lang.Object obj18 = properties14.put((java.lang.Object) properties16, (java.lang.Object) (short) 1);
        java.util.Properties properties20 = null;
        java.util.Properties properties21 = new java.util.Properties(properties20);
        java.util.Properties properties22 = new java.util.Properties(properties20);
        java.util.Properties properties23 = null;
        java.util.Properties properties24 = new java.util.Properties(properties23);
        java.lang.Object obj26 = properties22.put((java.lang.Object) properties24, (java.lang.Object) (short) 1);
        boolean boolean27 = properties16.remove((java.lang.Object) false, (java.lang.Object) (short) 1);
        java.util.Set<java.lang.String> strSet28 = properties16.stringPropertyNames();
        boolean boolean29 = properties10.containsKey((java.lang.Object) strSet28);
        java.util.Properties properties30 = null;
        java.util.Properties properties31 = new java.util.Properties(properties30);
        java.util.Properties properties32 = new java.util.Properties(properties30);
        java.util.Properties properties33 = null;
        java.util.Properties properties34 = new java.util.Properties(properties33);
        java.lang.Object obj36 = properties32.put((java.lang.Object) properties34, (java.lang.Object) (short) 1);
        properties34.clear();
        java.lang.String str39 = properties34.getProperty("");
        java.util.Properties properties40 = null;
        java.util.Properties properties41 = new java.util.Properties(properties40);
        java.util.Properties properties42 = new java.util.Properties(properties40);
        java.util.Properties properties43 = null;
        java.util.Properties properties44 = new java.util.Properties(properties43);
        java.lang.Object obj46 = properties42.put((java.lang.Object) properties44, (java.lang.Object) (short) 1);
        properties34.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties42);
        boolean boolean48 = properties10.containsKey((java.lang.Object) properties34);
        boolean boolean50 = properties34.contains((java.lang.Object) "hi!");
        java.util.Enumeration<java.lang.Object> objEnumeration51 = properties34.elements();
        properties34.clear();
        java.util.Properties properties53 = null;
        java.util.Properties properties54 = new java.util.Properties(properties53);
        java.util.Properties properties55 = new java.util.Properties(properties53);
        java.util.Properties properties56 = null;
        java.util.Properties properties57 = new java.util.Properties(properties56);
        java.lang.Object obj59 = properties55.put((java.lang.Object) properties57, (java.lang.Object) (short) 1);
        boolean boolean60 = properties55.isEmpty();
        java.util.Properties properties61 = null;
        java.util.Properties properties62 = new java.util.Properties(properties61);
        java.util.Properties properties63 = new java.util.Properties(properties61);
        boolean boolean64 = properties55.containsKey((java.lang.Object) properties63);
        java.util.Properties properties65 = new java.util.Properties(properties63);
        java.lang.Object obj66 = properties65.clone();
        java.util.Properties properties68 = null;
        java.util.Properties properties69 = new java.util.Properties(properties68);
        java.util.Properties properties70 = new java.util.Properties(properties68);
        java.util.Properties properties71 = null;
        java.util.Properties properties72 = new java.util.Properties(properties71);
        java.lang.Object obj74 = properties70.put((java.lang.Object) properties72, (java.lang.Object) (short) 1);
        boolean boolean75 = properties70.isEmpty();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties76 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties76.setDefaultJtaTimeout((long) (byte) 10);
        atomikosProperties76.setCheckpointInterval((long) (byte) 0);
        atomikosProperties76.setTransactionManagerUniqueName("");
        java.util.Properties properties83 = atomikosProperties76.asProperties();
        java.lang.Object obj84 = properties70.remove((java.lang.Object) properties83);
        java.lang.Object obj85 = properties65.putIfAbsent((java.lang.Object) 1L, (java.lang.Object) properties70);
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet86 = properties70.entrySet();
        java.util.Properties properties87 = new java.util.Properties(properties70);
        boolean boolean88 = properties34.equals((java.lang.Object) properties87);
        java.util.Enumeration<?> wildcardEnumeration89 = properties34.propertyNames();
        java.io.OutputStream outputStream90 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties34.storeToXML(outputStream90, "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=true, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=true, com.atomikos.icatch.max_actives=35, com.atomikos.icatch.log_base_name=tmlog}");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(obj6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNull(obj18);
        org.junit.Assert.assertNull(obj26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(strSet28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNull(obj36);
        org.junit.Assert.assertNull(str39);
        org.junit.Assert.assertNull(obj46);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertNotNull(objEnumeration51);
        org.junit.Assert.assertNull(obj59);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64 == true);
        org.junit.Assert.assertNotNull(obj66);
        org.junit.Assert.assertEquals(obj66.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj66), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj66), "{}");
        org.junit.Assert.assertNull(obj74);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
        org.junit.Assert.assertNotNull(properties83);
        org.junit.Assert.assertNull(obj84);
        org.junit.Assert.assertNull(obj85);
        org.junit.Assert.assertNotNull(objEntrySet86);
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + true + "'", boolean88 == true);
        org.junit.Assert.assertNotNull(wildcardEnumeration89);
    }

    @Test
    public void test1533() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1533");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Properties properties2 = new java.util.Properties(properties0);
        java.util.Properties properties3 = null;
        java.util.Properties properties4 = new java.util.Properties(properties3);
        java.lang.Object obj6 = properties2.put((java.lang.Object) properties4, (java.lang.Object) (short) 1);
        java.util.Properties properties8 = null;
        java.util.Properties properties9 = new java.util.Properties(properties8);
        java.util.Properties properties10 = new java.util.Properties(properties8);
        java.util.Properties properties11 = null;
        java.util.Properties properties12 = new java.util.Properties(properties11);
        java.lang.Object obj14 = properties10.put((java.lang.Object) properties12, (java.lang.Object) (short) 1);
        boolean boolean15 = properties4.remove((java.lang.Object) false, (java.lang.Object) (short) 1);
        java.util.Set<java.lang.String> strSet16 = properties4.stringPropertyNames();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties17 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties17.setDefaultJtaTimeout((long) (byte) 10);
        long long20 = atomikosProperties17.getDefaultJtaTimeout();
        java.lang.Object obj21 = properties4.get((java.lang.Object) atomikosProperties17);
        java.util.Properties properties22 = null;
        java.util.Properties properties23 = new java.util.Properties(properties22);
        java.util.Properties properties24 = new java.util.Properties(properties22);
        java.util.Properties properties25 = null;
        java.util.Properties properties26 = new java.util.Properties(properties25);
        java.lang.Object obj28 = properties24.put((java.lang.Object) properties26, (java.lang.Object) (short) 1);
        java.util.Properties properties30 = null;
        java.util.Properties properties31 = new java.util.Properties(properties30);
        java.util.Properties properties32 = new java.util.Properties(properties30);
        java.util.Properties properties33 = null;
        java.util.Properties properties34 = new java.util.Properties(properties33);
        java.lang.Object obj36 = properties32.put((java.lang.Object) properties34, (java.lang.Object) (short) 1);
        boolean boolean37 = properties26.remove((java.lang.Object) false, (java.lang.Object) (short) 1);
        java.lang.Object obj39 = properties26.remove((java.lang.Object) '#');
        java.util.Set<java.lang.Object> objSet40 = properties26.keySet();
        boolean boolean41 = properties4.containsKey((java.lang.Object) properties26);
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet42 = properties4.entrySet();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties43 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties43.setThreadedTwoPhaseCommit(true);
        boolean boolean46 = atomikosProperties43.isEnableLogging();
        atomikosProperties43.setTransactionManagerUniqueName("{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=0, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog, {}={}}");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties49 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties49.setDefaultJtaTimeout((long) (byte) 10);
        atomikosProperties49.setCheckpointInterval((long) (byte) 0);
        atomikosProperties49.setTransactionManagerUniqueName("");
        boolean boolean56 = atomikosProperties49.isEnableLogging();
        java.lang.Class<?> wildcardClass57 = atomikosProperties49.getClass();
        java.lang.Object obj58 = properties4.put((java.lang.Object) "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=0, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog, {}={}}", (java.lang.Object) atomikosProperties49);
        java.util.Properties properties59 = null;
        java.util.Properties properties60 = new java.util.Properties(properties59);
        java.util.Properties properties61 = new java.util.Properties(properties59);
        java.util.Properties properties62 = null;
        java.util.Properties properties63 = new java.util.Properties(properties62);
        java.lang.Object obj65 = properties61.put((java.lang.Object) properties63, (java.lang.Object) (short) 1);
        java.util.Properties properties67 = null;
        java.util.Properties properties68 = new java.util.Properties(properties67);
        java.util.Properties properties69 = new java.util.Properties(properties67);
        java.util.Properties properties70 = null;
        java.util.Properties properties71 = new java.util.Properties(properties70);
        java.lang.Object obj73 = properties69.put((java.lang.Object) properties71, (java.lang.Object) (short) 1);
        boolean boolean74 = properties63.remove((java.lang.Object) false, (java.lang.Object) (short) 1);
        java.util.Enumeration<java.lang.Object> objEnumeration75 = properties63.elements();
        java.util.Properties properties76 = new java.util.Properties(properties63);
        java.lang.Object obj78 = properties4.getOrDefault((java.lang.Object) properties76, (java.lang.Object) 500L);
        java.lang.String str81 = properties4.getProperty("{}", "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.log_base_dir={}, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
        org.junit.Assert.assertNull(obj6);
        org.junit.Assert.assertNull(obj14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(strSet16);
        org.junit.Assert.assertTrue("'" + long20 + "' != '" + 10L + "'", long20 == 10L);
        org.junit.Assert.assertNull(obj21);
        org.junit.Assert.assertNull(obj28);
        org.junit.Assert.assertNull(obj36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNull(obj39);
        org.junit.Assert.assertNotNull(objSet40);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(objEntrySet42);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertNotNull(wildcardClass57);
        org.junit.Assert.assertNull(obj58);
        org.junit.Assert.assertNull(obj65);
        org.junit.Assert.assertNull(obj73);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
        org.junit.Assert.assertNotNull(objEnumeration75);
        org.junit.Assert.assertEquals("'" + obj78 + "' != '" + 500L + "'", obj78, 500L);
        org.junit.Assert.assertEquals("'" + str81 + "' != '" + "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.log_base_dir={}, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}" + "'", str81, "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.log_base_dir={}, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
    }

    @Test
    public void test1534() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1534");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Properties properties2 = new java.util.Properties(properties0);
        boolean boolean4 = properties2.containsValue((java.lang.Object) (short) 100);
        java.util.Properties properties5 = new java.util.Properties(properties2);
        java.lang.String str7 = properties5.getProperty("hi!");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties8 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties8.setDefaultJtaTimeout((long) (byte) 10);
        long long11 = atomikosProperties8.getDefaultJtaTimeout();
        atomikosProperties8.setTransactionManagerUniqueName("hi!");
        atomikosProperties8.setLogBaseName("tmlog");
        boolean boolean16 = atomikosProperties8.isSerialJtaTransactions();
        java.util.Properties properties17 = atomikosProperties8.asProperties();
        boolean boolean18 = properties5.equals((java.lang.Object) atomikosProperties8);
        java.util.Enumeration<java.lang.Object> objEnumeration19 = properties5.elements();
        java.util.Properties properties20 = null;
        java.util.Properties properties21 = new java.util.Properties(properties20);
        java.util.Properties properties22 = new java.util.Properties(properties20);
        java.util.Properties properties23 = null;
        java.util.Properties properties24 = new java.util.Properties(properties23);
        java.lang.Object obj26 = properties22.put((java.lang.Object) properties24, (java.lang.Object) (short) 1);
        boolean boolean27 = properties22.isEmpty();
        java.util.Properties properties28 = null;
        java.util.Properties properties29 = new java.util.Properties(properties28);
        java.util.Properties properties30 = new java.util.Properties(properties28);
        boolean boolean31 = properties22.containsKey((java.lang.Object) properties30);
        java.util.Properties properties32 = new java.util.Properties(properties30);
        java.lang.Object obj33 = properties32.clone();
        java.util.Set<java.lang.String> strSet34 = properties32.stringPropertyNames();
        java.util.Properties properties35 = null;
        java.util.Properties properties36 = new java.util.Properties(properties35);
        java.util.Properties properties37 = new java.util.Properties(properties35);
        java.util.Properties properties38 = null;
        java.util.Properties properties39 = new java.util.Properties(properties38);
        java.lang.Object obj41 = properties37.put((java.lang.Object) properties39, (java.lang.Object) (short) 1);
        java.util.Properties properties43 = null;
        java.util.Properties properties44 = new java.util.Properties(properties43);
        java.util.Properties properties45 = new java.util.Properties(properties43);
        java.util.Properties properties46 = null;
        java.util.Properties properties47 = new java.util.Properties(properties46);
        java.lang.Object obj49 = properties45.put((java.lang.Object) properties47, (java.lang.Object) (short) 1);
        boolean boolean50 = properties39.remove((java.lang.Object) false, (java.lang.Object) (short) 1);
        java.util.Set<java.lang.String> strSet51 = properties39.stringPropertyNames();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties52 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties52.setDefaultJtaTimeout((long) (byte) 10);
        long long55 = atomikosProperties52.getDefaultJtaTimeout();
        java.lang.Object obj56 = properties39.get((java.lang.Object) atomikosProperties52);
        java.util.Enumeration<java.lang.Object> objEnumeration57 = properties39.elements();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties58 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties58.setThreadedTwoPhaseCommit(true);
        atomikosProperties58.setMaxActives((int) '#');
        atomikosProperties58.setEnableLogging(true);
        int int65 = atomikosProperties58.getMaxActives();
        boolean boolean66 = properties39.containsValue((java.lang.Object) atomikosProperties58);
        java.lang.Object obj67 = properties5.put((java.lang.Object) properties32, (java.lang.Object) boolean66);
        java.io.Reader reader68 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties32.load(reader68);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertTrue("'" + long11 + "' != '" + 10L + "'", long11 == 10L);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(properties17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(objEnumeration19);
        org.junit.Assert.assertNull(obj26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNotNull(obj33);
        org.junit.Assert.assertEquals(obj33.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj33), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj33), "{}");
        org.junit.Assert.assertNotNull(strSet34);
        org.junit.Assert.assertNull(obj41);
        org.junit.Assert.assertNull(obj49);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertNotNull(strSet51);
        org.junit.Assert.assertTrue("'" + long55 + "' != '" + 10L + "'", long55 == 10L);
        org.junit.Assert.assertNull(obj56);
        org.junit.Assert.assertNotNull(objEnumeration57);
        org.junit.Assert.assertTrue("'" + int65 + "' != '" + 35 + "'", int65 == 35);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertNull(obj67);
    }

    @Test
    public void test1535() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1535");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Properties properties2 = new java.util.Properties(properties0);
        java.util.Properties properties3 = null;
        java.util.Properties properties4 = new java.util.Properties(properties3);
        java.lang.Object obj6 = properties2.put((java.lang.Object) properties4, (java.lang.Object) (short) 1);
        properties4.clear();
        int int8 = properties4.size();
        java.util.Properties properties9 = null;
        java.util.Properties properties10 = new java.util.Properties(properties9);
        java.util.Properties properties11 = new java.util.Properties(properties9);
        java.util.Properties properties12 = null;
        java.util.Properties properties13 = new java.util.Properties(properties12);
        java.lang.Object obj15 = properties11.put((java.lang.Object) properties13, (java.lang.Object) (short) 1);
        java.util.Properties properties16 = new java.util.Properties(properties13);
        java.util.Properties properties17 = new java.util.Properties(properties13);
        boolean boolean19 = properties4.remove((java.lang.Object) properties13, (java.lang.Object) 10.0f);
        java.util.Enumeration<java.lang.Object> objEnumeration20 = properties13.elements();
        java.util.Properties properties21 = new java.util.Properties(properties13);
        java.util.Properties properties22 = null;
        java.util.Properties properties23 = new java.util.Properties(properties22);
        java.util.Properties properties24 = new java.util.Properties(properties22);
        java.util.Properties properties25 = null;
        java.util.Properties properties26 = new java.util.Properties(properties25);
        java.lang.Object obj28 = properties24.put((java.lang.Object) properties26, (java.lang.Object) (short) 1);
        properties26.clear();
        int int30 = properties26.size();
        java.util.Properties properties31 = new java.util.Properties(properties26);
        java.util.Collection<java.lang.Object> objCollection32 = properties26.values();
        java.lang.String str34 = properties26.getProperty("hi!");
        java.util.Properties properties35 = new java.util.Properties();
        java.util.Enumeration<?> wildcardEnumeration36 = properties35.propertyNames();
        java.util.Properties properties38 = null;
        java.util.Properties properties39 = new java.util.Properties(properties38);
        java.util.Properties properties40 = new java.util.Properties(properties38);
        java.util.Properties properties41 = null;
        java.util.Properties properties42 = new java.util.Properties(properties41);
        java.lang.Object obj44 = properties40.put((java.lang.Object) properties42, (java.lang.Object) (short) 1);
        java.util.Properties properties45 = new java.util.Properties(properties42);
        java.util.Enumeration<java.lang.Object> objEnumeration46 = properties45.elements();
        java.lang.Object obj47 = properties35.put((java.lang.Object) (-1.0f), (java.lang.Object) objEnumeration46);
        java.lang.Object obj48 = properties26.remove((java.lang.Object) (-1.0f));
        java.util.Enumeration<java.lang.Object> objEnumeration49 = properties26.elements();
        java.lang.Object obj50 = properties21.get((java.lang.Object) objEnumeration49);
        java.util.Properties properties51 = null;
        java.util.Properties properties52 = new java.util.Properties(properties51);
        java.util.Properties properties53 = new java.util.Properties(properties51);
        boolean boolean55 = properties53.containsValue((java.lang.Object) (short) 100);
        java.util.Properties properties56 = null;
        java.util.Properties properties57 = new java.util.Properties(properties56);
        java.util.Properties properties58 = new java.util.Properties(properties56);
        java.util.Properties properties59 = null;
        java.util.Properties properties60 = new java.util.Properties(properties59);
        java.lang.Object obj62 = properties58.put((java.lang.Object) properties60, (java.lang.Object) (short) 1);
        java.util.Enumeration<java.lang.Object> objEnumeration63 = properties60.elements();
        java.lang.Object obj64 = properties53.remove((java.lang.Object) properties60);
        boolean boolean65 = properties60.isEmpty();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet66 = properties60.entrySet();
        properties21.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties60);
        java.io.PrintWriter printWriter68 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties21.list(printWriter68);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(obj6);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertNull(obj15);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(objEnumeration20);
        org.junit.Assert.assertNull(obj28);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 0 + "'", int30 == 0);
        org.junit.Assert.assertNotNull(objCollection32);
        org.junit.Assert.assertNull(str34);
        org.junit.Assert.assertNotNull(wildcardEnumeration36);
        org.junit.Assert.assertNull(obj44);
        org.junit.Assert.assertNotNull(objEnumeration46);
        org.junit.Assert.assertNull(obj47);
        org.junit.Assert.assertNull(obj48);
        org.junit.Assert.assertNotNull(objEnumeration49);
        org.junit.Assert.assertNull(obj50);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertNull(obj62);
        org.junit.Assert.assertNotNull(objEnumeration63);
        org.junit.Assert.assertNull(obj64);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65 == true);
        org.junit.Assert.assertNotNull(objEntrySet66);
    }

    @Test
    public void test1536() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1536");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Properties properties2 = new java.util.Properties(properties0);
        java.util.Properties properties3 = null;
        java.util.Properties properties4 = new java.util.Properties(properties3);
        java.lang.Object obj6 = properties2.put((java.lang.Object) properties4, (java.lang.Object) (short) 1);
        java.util.Enumeration<java.lang.Object> objEnumeration7 = properties4.elements();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet8 = properties4.entrySet();
        java.util.Set<java.lang.Object> objSet9 = properties4.keySet();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties10 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties10.setDefaultJtaTimeout((long) (byte) 10);
        atomikosProperties10.setCheckpointInterval((long) (byte) 0);
        atomikosProperties10.setEnableLogging(true);
        java.lang.Object obj17 = properties4.get((java.lang.Object) atomikosProperties10);
        java.util.Properties properties18 = atomikosProperties10.asProperties();
        java.util.Properties properties19 = null;
        java.util.Properties properties20 = new java.util.Properties(properties19);
        java.util.Properties properties21 = new java.util.Properties(properties19);
        java.util.Properties properties22 = null;
        java.util.Properties properties23 = new java.util.Properties(properties22);
        java.lang.Object obj25 = properties21.put((java.lang.Object) properties23, (java.lang.Object) (short) 1);
        properties23.clear();
        int int27 = properties23.size();
        java.util.Properties properties28 = null;
        java.util.Properties properties29 = new java.util.Properties(properties28);
        java.util.Properties properties30 = new java.util.Properties(properties28);
        java.util.Properties properties31 = null;
        java.util.Properties properties32 = new java.util.Properties(properties31);
        java.lang.Object obj34 = properties30.put((java.lang.Object) properties32, (java.lang.Object) (short) 1);
        java.util.Properties properties35 = new java.util.Properties(properties32);
        java.util.Properties properties36 = new java.util.Properties(properties32);
        boolean boolean38 = properties23.remove((java.lang.Object) properties32, (java.lang.Object) 10.0f);
        java.util.Enumeration<java.lang.Object> objEnumeration39 = properties32.elements();
        java.util.Properties properties40 = new java.util.Properties(properties32);
        java.util.Properties properties41 = null;
        java.util.Properties properties42 = new java.util.Properties(properties41);
        java.util.Properties properties43 = new java.util.Properties(properties41);
        java.util.Properties properties44 = null;
        java.util.Properties properties45 = new java.util.Properties(properties44);
        java.lang.Object obj47 = properties43.put((java.lang.Object) properties45, (java.lang.Object) (short) 1);
        java.util.Properties properties49 = null;
        java.util.Properties properties50 = new java.util.Properties(properties49);
        java.util.Properties properties51 = new java.util.Properties(properties49);
        java.util.Properties properties52 = null;
        java.util.Properties properties53 = new java.util.Properties(properties52);
        java.lang.Object obj55 = properties51.put((java.lang.Object) properties53, (java.lang.Object) (short) 1);
        boolean boolean56 = properties45.remove((java.lang.Object) false, (java.lang.Object) (short) 1);
        java.util.Set<java.lang.String> strSet57 = properties45.stringPropertyNames();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties58 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties58.setDefaultJtaTimeout((long) (byte) 10);
        long long61 = atomikosProperties58.getDefaultJtaTimeout();
        java.lang.Object obj62 = properties45.get((java.lang.Object) atomikosProperties58);
        java.util.Properties properties63 = null;
        java.util.Properties properties64 = new java.util.Properties(properties63);
        java.util.Properties properties65 = new java.util.Properties(properties63);
        java.util.Properties properties66 = null;
        java.util.Properties properties67 = new java.util.Properties(properties66);
        java.lang.Object obj69 = properties65.put((java.lang.Object) properties67, (java.lang.Object) (short) 1);
        java.util.Properties properties71 = null;
        java.util.Properties properties72 = new java.util.Properties(properties71);
        java.util.Properties properties73 = new java.util.Properties(properties71);
        java.util.Properties properties74 = null;
        java.util.Properties properties75 = new java.util.Properties(properties74);
        java.lang.Object obj77 = properties73.put((java.lang.Object) properties75, (java.lang.Object) (short) 1);
        boolean boolean78 = properties67.remove((java.lang.Object) false, (java.lang.Object) (short) 1);
        java.lang.Object obj80 = properties67.remove((java.lang.Object) '#');
        java.util.Set<java.lang.Object> objSet81 = properties67.keySet();
        boolean boolean82 = properties45.containsKey((java.lang.Object) properties67);
        java.lang.Object obj83 = properties18.put((java.lang.Object) properties32, (java.lang.Object) properties67);
        java.lang.Object obj84 = properties67.clone();
        org.junit.Assert.assertNull(obj6);
        org.junit.Assert.assertNotNull(objEnumeration7);
        org.junit.Assert.assertNotNull(objEntrySet8);
        org.junit.Assert.assertNotNull(objSet9);
        org.junit.Assert.assertNull(obj17);
        org.junit.Assert.assertNotNull(properties18);
        org.junit.Assert.assertNull(obj25);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 0 + "'", int27 == 0);
        org.junit.Assert.assertNull(obj34);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(objEnumeration39);
        org.junit.Assert.assertNull(obj47);
        org.junit.Assert.assertNull(obj55);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertNotNull(strSet57);
        org.junit.Assert.assertTrue("'" + long61 + "' != '" + 10L + "'", long61 == 10L);
        org.junit.Assert.assertNull(obj62);
        org.junit.Assert.assertNull(obj69);
        org.junit.Assert.assertNull(obj77);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + false + "'", boolean78 == false);
        org.junit.Assert.assertNull(obj80);
        org.junit.Assert.assertNotNull(objSet81);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + false + "'", boolean82 == false);
        org.junit.Assert.assertNull(obj83);
        org.junit.Assert.assertNotNull(obj84);
        org.junit.Assert.assertEquals(obj84.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj84), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj84), "{}");
    }

    @Test
    public void test1537() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1537");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setThreadedTwoPhaseCommit(true);
        boolean boolean3 = atomikosProperties0.isEnableLogging();
        atomikosProperties0.setMaxTimeout((long) 97);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
    }

    @Test
    public void test1538() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1538");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setThreadedTwoPhaseCommit(true);
        boolean boolean3 = atomikosProperties0.isEnableLogging();
        atomikosProperties0.setCheckpointInterval((long) 35);
        atomikosProperties0.setDefaultJtaTimeout((long) (byte) 0);
        java.lang.String str8 = atomikosProperties0.getLogBaseName();
        boolean boolean9 = atomikosProperties0.isThreadedTwoPhaseCommit();
        atomikosProperties0.setLogBaseDir("{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=true, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=true, com.atomikos.icatch.max_actives=35, com.atomikos.icatch.log_base_name=tmlog}");
        atomikosProperties0.setEnableLogging(false);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "tmlog" + "'", str8, "tmlog");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
    }

    @Test
    public void test1539() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1539");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Properties properties2 = new java.util.Properties(properties0);
        java.util.Properties properties3 = null;
        java.util.Properties properties4 = new java.util.Properties(properties3);
        java.lang.Object obj6 = properties2.put((java.lang.Object) properties4, (java.lang.Object) (short) 1);
        java.util.Properties properties7 = new java.util.Properties(properties4);
        java.util.Properties properties8 = new java.util.Properties(properties4);
        java.util.Set<java.lang.Object> objSet9 = properties8.keySet();
        int int10 = properties8.size();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties11 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        int int12 = atomikosProperties11.getMaxActives();
        java.util.Properties properties13 = atomikosProperties11.asProperties();
        java.util.Properties properties14 = null;
        java.util.Properties properties15 = new java.util.Properties(properties14);
        java.util.Properties properties16 = new java.util.Properties(properties14);
        boolean boolean18 = properties16.containsValue((java.lang.Object) (short) 100);
        java.util.Properties properties19 = null;
        java.util.Properties properties20 = new java.util.Properties(properties19);
        java.util.Properties properties21 = new java.util.Properties(properties19);
        java.util.Properties properties22 = null;
        java.util.Properties properties23 = new java.util.Properties(properties22);
        java.lang.Object obj25 = properties21.put((java.lang.Object) properties23, (java.lang.Object) (short) 1);
        java.util.Enumeration<java.lang.Object> objEnumeration26 = properties23.elements();
        java.lang.Object obj27 = properties16.remove((java.lang.Object) properties23);
        java.util.Properties properties28 = null;
        java.util.Properties properties29 = new java.util.Properties(properties28);
        java.util.Properties properties30 = new java.util.Properties(properties28);
        java.util.Properties properties31 = null;
        java.util.Properties properties32 = new java.util.Properties(properties31);
        java.lang.Object obj34 = properties30.put((java.lang.Object) properties32, (java.lang.Object) (short) 1);
        java.util.Enumeration<java.lang.Object> objEnumeration35 = properties32.elements();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet36 = properties32.entrySet();
        java.util.Set<java.lang.Object> objSet37 = properties32.keySet();
        java.util.Properties properties38 = null;
        java.util.Properties properties39 = new java.util.Properties(properties38);
        java.util.Properties properties40 = new java.util.Properties(properties38);
        java.util.Properties properties41 = null;
        java.util.Properties properties42 = new java.util.Properties(properties41);
        java.lang.Object obj44 = properties40.put((java.lang.Object) properties42, (java.lang.Object) (short) 1);
        properties42.clear();
        int int46 = properties42.size();
        java.util.Properties properties47 = new java.util.Properties(properties42);
        java.util.Properties properties48 = null;
        java.util.Properties properties49 = new java.util.Properties(properties48);
        java.util.Properties properties50 = new java.util.Properties(properties48);
        java.util.Properties properties51 = null;
        java.util.Properties properties52 = new java.util.Properties(properties51);
        java.lang.Object obj54 = properties50.put((java.lang.Object) properties52, (java.lang.Object) (short) 1);
        properties52.clear();
        java.lang.String str57 = properties52.getProperty("");
        java.util.Properties properties58 = null;
        java.util.Properties properties59 = new java.util.Properties(properties58);
        java.util.Properties properties60 = new java.util.Properties(properties58);
        java.util.Properties properties61 = null;
        java.util.Properties properties62 = new java.util.Properties(properties61);
        java.lang.Object obj64 = properties60.put((java.lang.Object) properties62, (java.lang.Object) (short) 1);
        properties52.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties60);
        java.lang.Object obj66 = properties32.put((java.lang.Object) properties42, (java.lang.Object) properties60);
        java.util.Properties properties67 = null;
        java.util.Properties properties68 = new java.util.Properties(properties67);
        java.util.Properties properties69 = new java.util.Properties(properties67);
        java.util.Properties properties70 = null;
        java.util.Properties properties71 = new java.util.Properties(properties70);
        java.lang.Object obj73 = properties69.put((java.lang.Object) properties71, (java.lang.Object) (short) 1);
        java.util.Properties properties74 = new java.util.Properties(properties71);
        java.util.Properties properties75 = new java.util.Properties(properties71);
        java.util.Set<java.lang.Object> objSet76 = properties75.keySet();
        java.lang.Object obj77 = properties16.replace((java.lang.Object) properties32, (java.lang.Object) objSet76);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties78 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        int int79 = atomikosProperties78.getMaxActives();
        long long80 = atomikosProperties78.getMaxTimeout();
        java.util.Properties properties81 = atomikosProperties78.asProperties();
        atomikosProperties78.setService("hi!");
        boolean boolean84 = properties13.remove((java.lang.Object) properties16, (java.lang.Object) "hi!");
        java.lang.Object obj85 = properties13.clone();
        boolean boolean86 = properties13.isEmpty();
        boolean boolean87 = properties8.contains((java.lang.Object) properties13);
        java.util.Enumeration<java.lang.Object> objEnumeration88 = properties13.keys();
        org.junit.Assert.assertNull(obj6);
        org.junit.Assert.assertNotNull(objSet9);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 50 + "'", int12 == 50);
        org.junit.Assert.assertNotNull(properties13);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNull(obj25);
        org.junit.Assert.assertNotNull(objEnumeration26);
        org.junit.Assert.assertNull(obj27);
        org.junit.Assert.assertNull(obj34);
        org.junit.Assert.assertNotNull(objEnumeration35);
        org.junit.Assert.assertNotNull(objEntrySet36);
        org.junit.Assert.assertNotNull(objSet37);
        org.junit.Assert.assertNull(obj44);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 0 + "'", int46 == 0);
        org.junit.Assert.assertNull(obj54);
        org.junit.Assert.assertNull(str57);
        org.junit.Assert.assertNull(obj64);
        org.junit.Assert.assertNull(obj66);
        org.junit.Assert.assertNull(obj73);
        org.junit.Assert.assertNotNull(objSet76);
        org.junit.Assert.assertNull(obj77);
        org.junit.Assert.assertTrue("'" + int79 + "' != '" + 50 + "'", int79 == 50);
        org.junit.Assert.assertTrue("'" + long80 + "' != '" + 300000L + "'", long80 == 300000L);
        org.junit.Assert.assertNotNull(properties81);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + false + "'", boolean84 == false);
        org.junit.Assert.assertNotNull(obj85);
// flaky:         org.junit.Assert.assertEquals(obj85.toString(), "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
// flaky:         org.junit.Assert.assertEquals(java.lang.String.valueOf(obj85), "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
// flaky:         org.junit.Assert.assertEquals(java.util.Objects.toString(obj85), "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + false + "'", boolean86 == false);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + false + "'", boolean87 == false);
        org.junit.Assert.assertNotNull(objEnumeration88);
    }

    @Test
    public void test1540() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1540");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setDefaultJtaTimeout((long) (byte) 10);
        atomikosProperties0.setCheckpointInterval((long) (byte) 0);
        atomikosProperties0.setTransactionManagerUniqueName("");
        java.util.Properties properties7 = atomikosProperties0.asProperties();
        atomikosProperties0.setThreadedTwoPhaseCommit(false);
        atomikosProperties0.setMaxActives((int) (byte) 1);
        java.util.Properties properties12 = atomikosProperties0.asProperties();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet13 = properties12.entrySet();
        java.util.Properties properties14 = new java.util.Properties(properties12);
        java.util.Properties properties15 = new java.util.Properties(properties12);
        java.util.Collection<java.lang.Object> objCollection16 = properties12.values();
        java.util.Properties properties17 = new java.util.Properties(properties12);
        java.io.Reader reader18 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties17.load(reader18);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(properties7);
        org.junit.Assert.assertNotNull(properties12);
        org.junit.Assert.assertNotNull(objEntrySet13);
        org.junit.Assert.assertNotNull(objCollection16);
    }

    @Test
    public void test1541() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1541");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Properties properties2 = new java.util.Properties(properties0);
        java.util.Properties properties3 = null;
        java.util.Properties properties4 = new java.util.Properties(properties3);
        java.lang.Object obj6 = properties2.put((java.lang.Object) properties4, (java.lang.Object) (short) 1);
        java.util.Properties properties8 = null;
        java.util.Properties properties9 = new java.util.Properties(properties8);
        java.util.Properties properties10 = new java.util.Properties(properties8);
        java.util.Properties properties11 = null;
        java.util.Properties properties12 = new java.util.Properties(properties11);
        java.lang.Object obj14 = properties10.put((java.lang.Object) properties12, (java.lang.Object) (short) 1);
        boolean boolean15 = properties4.remove((java.lang.Object) false, (java.lang.Object) (short) 1);
        java.util.Set<java.lang.String> strSet16 = properties4.stringPropertyNames();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties17 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties17.setDefaultJtaTimeout((long) (byte) 10);
        long long20 = atomikosProperties17.getDefaultJtaTimeout();
        java.lang.Object obj21 = properties4.get((java.lang.Object) atomikosProperties17);
        java.util.Enumeration<java.lang.Object> objEnumeration22 = properties4.elements();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties23 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties23.setThreadedTwoPhaseCommit(true);
        atomikosProperties23.setMaxActives((int) '#');
        atomikosProperties23.setEnableLogging(true);
        int int30 = atomikosProperties23.getMaxActives();
        boolean boolean31 = properties4.containsValue((java.lang.Object) atomikosProperties23);
        boolean boolean32 = atomikosProperties23.isForceShutdownOnVmExit();
        boolean boolean33 = atomikosProperties23.isThreadedTwoPhaseCommit();
        atomikosProperties23.setMaxActives((int) (byte) 0);
        org.junit.Assert.assertNull(obj6);
        org.junit.Assert.assertNull(obj14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(strSet16);
        org.junit.Assert.assertTrue("'" + long20 + "' != '" + 10L + "'", long20 == 10L);
        org.junit.Assert.assertNull(obj21);
        org.junit.Assert.assertNotNull(objEnumeration22);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 35 + "'", int30 == 35);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
    }

    @Test
    public void test1542() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1542");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Properties properties2 = new java.util.Properties(properties0);
        boolean boolean4 = properties2.containsValue((java.lang.Object) (short) 100);
        java.util.Properties properties5 = null;
        java.util.Properties properties6 = new java.util.Properties(properties5);
        java.util.Properties properties7 = new java.util.Properties(properties5);
        java.util.Properties properties8 = null;
        java.util.Properties properties9 = new java.util.Properties(properties8);
        java.lang.Object obj11 = properties7.put((java.lang.Object) properties9, (java.lang.Object) (short) 1);
        java.util.Enumeration<java.lang.Object> objEnumeration12 = properties9.elements();
        java.lang.Object obj13 = properties2.remove((java.lang.Object) properties9);
        java.lang.Object obj16 = properties9.setProperty("", "");
        java.lang.String str18 = properties9.getProperty("tmlog");
        java.util.Properties properties19 = new java.util.Properties(properties9);
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet20 = properties9.entrySet();
        java.io.PrintStream printStream21 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties9.list(printStream21);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNull(obj11);
        org.junit.Assert.assertNotNull(objEnumeration12);
        org.junit.Assert.assertNull(obj13);
        org.junit.Assert.assertNull(obj16);
        org.junit.Assert.assertNull(str18);
        org.junit.Assert.assertNotNull(objEntrySet20);
    }

    @Test
    public void test1543() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1543");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Properties properties2 = new java.util.Properties(properties0);
        java.util.Properties properties3 = null;
        java.util.Properties properties4 = new java.util.Properties(properties3);
        java.lang.Object obj6 = properties2.put((java.lang.Object) properties4, (java.lang.Object) (short) 1);
        boolean boolean7 = properties2.isEmpty();
        java.util.Properties properties8 = null;
        java.util.Properties properties9 = new java.util.Properties(properties8);
        java.util.Properties properties10 = new java.util.Properties(properties8);
        boolean boolean11 = properties2.containsKey((java.lang.Object) properties10);
        java.util.Properties properties12 = new java.util.Properties(properties10);
        java.util.Properties properties13 = null;
        java.util.Properties properties14 = new java.util.Properties(properties13);
        java.util.Properties properties15 = new java.util.Properties(properties13);
        java.util.Properties properties16 = null;
        java.util.Properties properties17 = new java.util.Properties(properties16);
        java.lang.Object obj19 = properties15.put((java.lang.Object) properties17, (java.lang.Object) (short) 1);
        boolean boolean20 = properties15.isEmpty();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties21 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties21.setDefaultJtaTimeout((long) (byte) 10);
        atomikosProperties21.setCheckpointInterval((long) (byte) 0);
        atomikosProperties21.setTransactionManagerUniqueName("");
        java.util.Properties properties28 = atomikosProperties21.asProperties();
        java.lang.Object obj29 = properties15.remove((java.lang.Object) properties28);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties30 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties30.setDefaultJtaTimeout((long) (byte) 10);
        atomikosProperties30.setCheckpointInterval((long) (byte) 0);
        atomikosProperties30.setTransactionManagerUniqueName("");
        java.lang.Object obj37 = properties28.remove((java.lang.Object) atomikosProperties30);
        java.util.Enumeration<java.lang.Object> objEnumeration38 = properties28.elements();
        java.lang.Object obj39 = properties12.get((java.lang.Object) properties28);
        java.util.Properties properties40 = new java.util.Properties(properties12);
        java.util.Set<java.lang.Object> objSet41 = properties12.keySet();
        org.junit.Assert.assertNull(obj6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNull(obj19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(properties28);
        org.junit.Assert.assertNull(obj29);
        org.junit.Assert.assertNull(obj37);
        org.junit.Assert.assertNotNull(objEnumeration38);
        org.junit.Assert.assertNull(obj39);
        org.junit.Assert.assertNotNull(objSet41);
    }

    @Test
    public void test1544() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1544");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Properties properties2 = new java.util.Properties(properties0);
        java.util.Properties properties3 = null;
        java.util.Properties properties4 = new java.util.Properties(properties3);
        java.lang.Object obj6 = properties2.put((java.lang.Object) properties4, (java.lang.Object) (short) 1);
        java.util.Properties properties8 = null;
        java.util.Properties properties9 = new java.util.Properties(properties8);
        java.util.Properties properties10 = new java.util.Properties(properties8);
        java.util.Properties properties11 = null;
        java.util.Properties properties12 = new java.util.Properties(properties11);
        java.lang.Object obj14 = properties10.put((java.lang.Object) properties12, (java.lang.Object) (short) 1);
        boolean boolean15 = properties4.remove((java.lang.Object) false, (java.lang.Object) (short) 1);
        java.util.Set<java.lang.String> strSet16 = properties4.stringPropertyNames();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties17 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties17.setDefaultJtaTimeout((long) (byte) 10);
        long long20 = atomikosProperties17.getDefaultJtaTimeout();
        java.lang.Object obj21 = properties4.get((java.lang.Object) atomikosProperties17);
        int int22 = properties4.size();
        java.util.Properties properties23 = new java.util.Properties(properties4);
        java.io.OutputStream outputStream24 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties23.save(outputStream24, "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.tm_unique_name=, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(obj6);
        org.junit.Assert.assertNull(obj14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(strSet16);
        org.junit.Assert.assertTrue("'" + long20 + "' != '" + 10L + "'", long20 == 10L);
        org.junit.Assert.assertNull(obj21);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 0 + "'", int22 == 0);
    }

    @Test
    public void test1545() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1545");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Properties properties2 = new java.util.Properties(properties0);
        java.util.Properties properties3 = null;
        java.util.Properties properties4 = new java.util.Properties(properties3);
        java.lang.Object obj6 = properties2.put((java.lang.Object) properties4, (java.lang.Object) (short) 1);
        java.util.Properties properties7 = new java.util.Properties(properties4);
        java.util.Properties properties8 = new java.util.Properties(properties4);
        java.util.Set<java.lang.Object> objSet9 = properties8.keySet();
        java.util.Properties properties10 = new java.util.Properties(properties8);
        java.util.Properties properties11 = new java.util.Properties(properties8);
        java.util.Collection<java.lang.Object> objCollection12 = properties11.values();
        java.util.Properties properties13 = new java.util.Properties(properties11);
        java.io.PrintWriter printWriter14 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties13.list(printWriter14);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(obj6);
        org.junit.Assert.assertNotNull(objSet9);
        org.junit.Assert.assertNotNull(objCollection12);
    }

    @Test
    public void test1546() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1546");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Properties properties2 = new java.util.Properties(properties0);
        java.util.Properties properties3 = null;
        java.util.Properties properties4 = new java.util.Properties(properties3);
        java.lang.Object obj6 = properties2.put((java.lang.Object) properties4, (java.lang.Object) (short) 1);
        java.util.Properties properties7 = new java.util.Properties(properties4);
        java.util.Properties properties8 = new java.util.Properties(properties4);
        java.util.Set<java.lang.Object> objSet9 = properties8.keySet();
        java.util.Properties properties10 = new java.util.Properties(properties8);
        java.util.Properties properties11 = new java.util.Properties(properties8);
        java.util.Properties properties12 = new java.util.Properties(properties11);
        boolean boolean13 = properties11.isEmpty();
        java.io.OutputStream outputStream14 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties11.storeToXML(outputStream14, "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=52, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.tm_unique_name=, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(obj6);
        org.junit.Assert.assertNotNull(objSet9);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
    }

    @Test
    public void test1547() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1547");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Properties properties2 = new java.util.Properties(properties0);
        java.util.Properties properties3 = null;
        java.util.Properties properties4 = new java.util.Properties(properties3);
        java.lang.Object obj6 = properties2.put((java.lang.Object) properties4, (java.lang.Object) (short) 1);
        java.util.Properties properties7 = new java.util.Properties(properties4);
        java.util.Properties properties8 = new java.util.Properties(properties4);
        java.util.Properties properties9 = null;
        java.util.Properties properties10 = new java.util.Properties(properties9);
        java.util.Properties properties11 = new java.util.Properties(properties9);
        java.util.Properties properties12 = null;
        java.util.Properties properties13 = new java.util.Properties(properties12);
        java.lang.Object obj15 = properties11.put((java.lang.Object) properties13, (java.lang.Object) (short) 1);
        properties13.clear();
        int int17 = properties13.size();
        java.lang.Object obj20 = properties13.setProperty("hi!", "hi!");
        java.lang.Object obj23 = properties13.setProperty("tmlog", "tmlog");
        java.util.Enumeration<java.lang.Object> objEnumeration24 = properties13.elements();
        java.util.Properties properties25 = new java.util.Properties(properties13);
        properties8.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties13);
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet27 = properties13.entrySet();
        org.junit.Assert.assertNull(obj6);
        org.junit.Assert.assertNull(obj15);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 0 + "'", int17 == 0);
        org.junit.Assert.assertNull(obj20);
        org.junit.Assert.assertNull(obj23);
        org.junit.Assert.assertNotNull(objEnumeration24);
        org.junit.Assert.assertNotNull(objEntrySet27);
    }

    @Test
    public void test1548() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1548");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Properties properties2 = new java.util.Properties(properties0);
        java.util.Properties properties3 = null;
        java.util.Properties properties4 = new java.util.Properties(properties3);
        java.lang.Object obj6 = properties2.put((java.lang.Object) properties4, (java.lang.Object) (short) 1);
        boolean boolean7 = properties2.isEmpty();
        java.util.Properties properties8 = null;
        java.util.Properties properties9 = new java.util.Properties(properties8);
        java.util.Properties properties10 = new java.util.Properties(properties8);
        boolean boolean11 = properties2.containsKey((java.lang.Object) properties10);
        java.util.Properties properties12 = new java.util.Properties(properties10);
        java.lang.Object obj13 = properties12.clone();
        java.util.Properties properties15 = null;
        java.util.Properties properties16 = new java.util.Properties(properties15);
        java.util.Properties properties17 = new java.util.Properties(properties15);
        java.util.Properties properties18 = null;
        java.util.Properties properties19 = new java.util.Properties(properties18);
        java.lang.Object obj21 = properties17.put((java.lang.Object) properties19, (java.lang.Object) (short) 1);
        boolean boolean22 = properties17.isEmpty();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties23 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties23.setDefaultJtaTimeout((long) (byte) 10);
        atomikosProperties23.setCheckpointInterval((long) (byte) 0);
        atomikosProperties23.setTransactionManagerUniqueName("");
        java.util.Properties properties30 = atomikosProperties23.asProperties();
        java.lang.Object obj31 = properties17.remove((java.lang.Object) properties30);
        java.lang.Object obj32 = properties12.putIfAbsent((java.lang.Object) 1L, (java.lang.Object) properties17);
        java.util.Properties properties33 = null;
        java.util.Properties properties34 = new java.util.Properties(properties33);
        java.util.Properties properties35 = new java.util.Properties(properties33);
        java.util.Properties properties36 = null;
        java.util.Properties properties37 = new java.util.Properties(properties36);
        java.lang.Object obj39 = properties35.put((java.lang.Object) properties37, (java.lang.Object) (short) 1);
        java.util.Properties properties41 = null;
        java.util.Properties properties42 = new java.util.Properties(properties41);
        java.util.Properties properties43 = new java.util.Properties(properties41);
        java.util.Properties properties44 = null;
        java.util.Properties properties45 = new java.util.Properties(properties44);
        java.lang.Object obj47 = properties43.put((java.lang.Object) properties45, (java.lang.Object) (short) 1);
        boolean boolean48 = properties37.remove((java.lang.Object) false, (java.lang.Object) (short) 1);
        boolean boolean49 = properties12.containsValue((java.lang.Object) (short) 1);
        java.util.Properties properties50 = null;
        java.util.Properties properties51 = new java.util.Properties(properties50);
        java.util.Properties properties52 = new java.util.Properties(properties50);
        java.util.Properties properties53 = null;
        java.util.Properties properties54 = new java.util.Properties(properties53);
        java.lang.Object obj56 = properties52.put((java.lang.Object) properties54, (java.lang.Object) (short) 1);
        properties54.clear();
        java.lang.String str59 = properties54.getProperty("");
        java.util.Properties properties60 = null;
        java.util.Properties properties61 = new java.util.Properties(properties60);
        java.util.Properties properties62 = new java.util.Properties(properties60);
        java.util.Properties properties63 = null;
        java.util.Properties properties64 = new java.util.Properties(properties63);
        java.lang.Object obj66 = properties62.put((java.lang.Object) properties64, (java.lang.Object) (short) 1);
        properties54.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties62);
        boolean boolean68 = properties12.containsKey((java.lang.Object) properties54);
        java.util.Properties properties69 = new java.util.Properties(properties54);
        java.io.OutputStream outputStream70 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties69.save(outputStream70, "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.tm_unique_name=hi!, {com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=0, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.tm_unique_name=, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}=hi!, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(obj6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNotNull(obj13);
        org.junit.Assert.assertEquals(obj13.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj13), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj13), "{}");
        org.junit.Assert.assertNull(obj21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(properties30);
        org.junit.Assert.assertNull(obj31);
        org.junit.Assert.assertNull(obj32);
        org.junit.Assert.assertNull(obj39);
        org.junit.Assert.assertNull(obj47);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNull(obj56);
        org.junit.Assert.assertNull(str59);
        org.junit.Assert.assertNull(obj66);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
    }

    @Test
    public void test1549() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1549");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Properties properties2 = new java.util.Properties(properties0);
        java.util.Properties properties3 = null;
        java.util.Properties properties4 = new java.util.Properties(properties3);
        java.lang.Object obj6 = properties2.put((java.lang.Object) properties4, (java.lang.Object) (short) 1);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties7 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties7.setThreadedTwoPhaseCommit(true);
        atomikosProperties7.setMaxActives((int) (byte) 0);
        boolean boolean12 = properties2.containsValue((java.lang.Object) atomikosProperties7);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties13 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties13.setDefaultJtaTimeout((long) (byte) 10);
        atomikosProperties13.setSerialJtaTransactions(false);
        boolean boolean18 = properties2.containsValue((java.lang.Object) atomikosProperties13);
        java.lang.Object obj21 = properties2.putIfAbsent((java.lang.Object) 10, (java.lang.Object) (byte) -1);
        java.util.Properties properties22 = null;
        java.util.Properties properties23 = new java.util.Properties(properties22);
        java.util.Properties properties24 = new java.util.Properties(properties22);
        java.util.Properties properties25 = null;
        java.util.Properties properties26 = new java.util.Properties(properties25);
        java.lang.Object obj28 = properties24.put((java.lang.Object) properties26, (java.lang.Object) (short) 1);
        java.util.Properties properties30 = null;
        java.util.Properties properties31 = new java.util.Properties(properties30);
        java.util.Properties properties32 = new java.util.Properties(properties30);
        java.util.Properties properties33 = null;
        java.util.Properties properties34 = new java.util.Properties(properties33);
        java.lang.Object obj36 = properties32.put((java.lang.Object) properties34, (java.lang.Object) (short) 1);
        boolean boolean37 = properties26.remove((java.lang.Object) false, (java.lang.Object) (short) 1);
        java.util.Set<java.lang.String> strSet38 = properties26.stringPropertyNames();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties39 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties39.setDefaultJtaTimeout((long) (byte) 10);
        atomikosProperties39.setCheckpointInterval((long) (byte) 0);
        atomikosProperties39.setTransactionManagerUniqueName("");
        boolean boolean46 = atomikosProperties39.isEnableLogging();
        atomikosProperties39.setSerialJtaTransactions(false);
        atomikosProperties39.setLogBaseDir("");
        java.util.Properties properties51 = null;
        java.util.Properties properties52 = new java.util.Properties(properties51);
        java.util.Properties properties53 = new java.util.Properties(properties51);
        java.util.Properties properties54 = null;
        java.util.Properties properties55 = new java.util.Properties(properties54);
        java.lang.Object obj57 = properties53.put((java.lang.Object) properties55, (java.lang.Object) (short) 1);
        java.util.Properties properties58 = new java.util.Properties(properties55);
        boolean boolean59 = properties26.remove((java.lang.Object) "", (java.lang.Object) properties58);
        java.lang.String str61 = properties26.getProperty("{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.tm_unique_name=, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties62 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties62.setDefaultJtaTimeout((long) (byte) 10);
        atomikosProperties62.setCheckpointInterval((long) (byte) 0);
        atomikosProperties62.setTransactionManagerUniqueName("");
        boolean boolean69 = atomikosProperties62.isEnableLogging();
        atomikosProperties62.setSerialJtaTransactions(false);
        java.lang.Object obj72 = properties26.remove((java.lang.Object) atomikosProperties62);
        properties26.clear();
        properties2.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties26);
        java.util.Properties properties75 = new java.util.Properties(properties26);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties76 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties76.setThreadedTwoPhaseCommit(true);
        atomikosProperties76.setMaxActives((int) '#');
        atomikosProperties76.setForceShutdownOnVmExit(true);
        java.lang.String str83 = atomikosProperties76.getLogBaseDir();
        java.util.Properties properties84 = atomikosProperties76.asProperties();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties85 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        boolean boolean86 = atomikosProperties85.isSerialJtaTransactions();
        boolean boolean87 = properties84.equals((java.lang.Object) atomikosProperties85);
        long long88 = atomikosProperties85.getMaxTimeout();
        atomikosProperties85.setMaxTimeout((long) 0);
        boolean boolean91 = atomikosProperties85.isForceShutdownOnVmExit();
        boolean boolean92 = properties75.equals((java.lang.Object) boolean91);
        java.io.PrintWriter printWriter93 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties75.list(printWriter93);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(obj6);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNull(obj21);
        org.junit.Assert.assertNull(obj28);
        org.junit.Assert.assertNull(obj36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(strSet38);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertNull(obj57);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertNull(str61);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + true + "'", boolean69 == true);
        org.junit.Assert.assertNull(obj72);
        org.junit.Assert.assertNull(str83);
        org.junit.Assert.assertNotNull(properties84);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + true + "'", boolean86 == true);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + false + "'", boolean87 == false);
        org.junit.Assert.assertTrue("'" + long88 + "' != '" + 300000L + "'", long88 == 300000L);
        org.junit.Assert.assertTrue("'" + boolean91 + "' != '" + false + "'", boolean91 == false);
        org.junit.Assert.assertTrue("'" + boolean92 + "' != '" + false + "'", boolean92 == false);
    }

    @Test
    public void test1550() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1550");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setDefaultJtaTimeout((long) (byte) 10);
        long long3 = atomikosProperties0.getDefaultJtaTimeout();
        java.lang.String str4 = atomikosProperties0.getService();
        long long5 = atomikosProperties0.getCheckpointInterval();
        boolean boolean6 = atomikosProperties0.isSerialJtaTransactions();
        int int7 = atomikosProperties0.getMaxActives();
        org.junit.Assert.assertTrue("'" + long3 + "' != '" + 10L + "'", long3 == 10L);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertTrue("'" + long5 + "' != '" + 500L + "'", long5 == 500L);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 50 + "'", int7 == 50);
    }

    @Test
    public void test1551() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1551");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Properties properties2 = new java.util.Properties(properties0);
        java.util.Properties properties3 = null;
        java.util.Properties properties4 = new java.util.Properties(properties3);
        java.lang.Object obj6 = properties2.put((java.lang.Object) properties4, (java.lang.Object) (short) 1);
        java.util.Properties properties8 = null;
        java.util.Properties properties9 = new java.util.Properties(properties8);
        java.util.Properties properties10 = new java.util.Properties(properties8);
        java.util.Properties properties11 = null;
        java.util.Properties properties12 = new java.util.Properties(properties11);
        java.lang.Object obj14 = properties10.put((java.lang.Object) properties12, (java.lang.Object) (short) 1);
        boolean boolean15 = properties4.remove((java.lang.Object) false, (java.lang.Object) (short) 1);
        java.util.Enumeration<java.lang.Object> objEnumeration16 = properties4.elements();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties17 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties17.setDefaultJtaTimeout((long) (byte) 10);
        atomikosProperties17.setCheckpointInterval((long) (byte) 0);
        atomikosProperties17.setTransactionManagerUniqueName("");
        java.util.Properties properties24 = atomikosProperties17.asProperties();
        boolean boolean25 = atomikosProperties17.isForceShutdownOnVmExit();
        boolean boolean26 = properties4.containsValue((java.lang.Object) atomikosProperties17);
        java.util.Properties properties27 = atomikosProperties17.asProperties();
        long long28 = atomikosProperties17.getCheckpointInterval();
        java.lang.Class<?> wildcardClass29 = atomikosProperties17.getClass();
        org.junit.Assert.assertNull(obj6);
        org.junit.Assert.assertNull(obj14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(objEnumeration16);
        org.junit.Assert.assertNotNull(properties24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(properties27);
        org.junit.Assert.assertTrue("'" + long28 + "' != '" + 0L + "'", long28 == 0L);
        org.junit.Assert.assertNotNull(wildcardClass29);
    }

    @Test
    public void test1552() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1552");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setThreadedTwoPhaseCommit(true);
        atomikosProperties0.setMaxActives((int) '#');
        atomikosProperties0.setEnableLogging(true);
        int int7 = atomikosProperties0.getMaxActives();
        java.util.Properties properties8 = atomikosProperties0.asProperties();
        atomikosProperties0.setDefaultJtaTimeout(300000L);
        int int11 = atomikosProperties0.getMaxActives();
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 35 + "'", int7 == 35);
        org.junit.Assert.assertNotNull(properties8);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 35 + "'", int11 == 35);
    }

    @Test
    public void test1553() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1553");
        java.util.Properties properties0 = new java.util.Properties();
        java.util.Enumeration<?> wildcardEnumeration1 = properties0.propertyNames();
        java.lang.Object obj2 = properties0.clone();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties3 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties3.setThreadedTwoPhaseCommit(true);
        atomikosProperties3.setMaxActives((int) '#');
        atomikosProperties3.setForceShutdownOnVmExit(true);
        java.lang.String str10 = atomikosProperties3.getLogBaseDir();
        java.util.Properties properties11 = atomikosProperties3.asProperties();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties12 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties12.setThreadedTwoPhaseCommit(true);
        atomikosProperties12.setMaxActives((int) '#');
        atomikosProperties12.setEnableLogging(true);
        boolean boolean19 = properties11.containsKey((java.lang.Object) true);
        java.lang.String str21 = properties11.getProperty("{}");
        java.util.Properties properties22 = null;
        java.util.Properties properties23 = new java.util.Properties(properties22);
        java.util.Properties properties24 = new java.util.Properties(properties22);
        java.util.Properties properties25 = null;
        java.util.Properties properties26 = new java.util.Properties(properties25);
        java.lang.Object obj28 = properties24.put((java.lang.Object) properties26, (java.lang.Object) (short) 1);
        properties26.clear();
        int int30 = properties26.size();
        java.util.Properties properties31 = new java.util.Properties(properties26);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties32 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        int int33 = atomikosProperties32.getMaxActives();
        long long34 = atomikosProperties32.getMaxTimeout();
        java.util.Properties properties35 = atomikosProperties32.asProperties();
        java.util.Properties properties36 = atomikosProperties32.asProperties();
        java.util.Properties properties37 = null;
        java.util.Properties properties38 = new java.util.Properties(properties37);
        java.util.Properties properties39 = new java.util.Properties(properties37);
        java.util.Properties properties40 = null;
        java.util.Properties properties41 = new java.util.Properties(properties40);
        java.lang.Object obj43 = properties39.put((java.lang.Object) properties41, (java.lang.Object) (short) 1);
        java.util.Enumeration<java.lang.Object> objEnumeration44 = properties41.elements();
        java.lang.Object obj45 = properties26.replace((java.lang.Object) atomikosProperties32, (java.lang.Object) properties41);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties47 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties47.setThreadedTwoPhaseCommit(true);
        java.lang.String str50 = atomikosProperties47.getService();
        boolean boolean51 = atomikosProperties47.isSerialJtaTransactions();
        java.lang.Object obj52 = properties41.getOrDefault((java.lang.Object) "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.tm_unique_name=, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}", (java.lang.Object) atomikosProperties47);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties53 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties53.setDefaultJtaTimeout((long) (byte) 10);
        long long56 = atomikosProperties53.getDefaultJtaTimeout();
        java.lang.String str57 = atomikosProperties53.getTransactionManagerUniqueName();
        atomikosProperties53.setThreadedTwoPhaseCommit(true);
        java.lang.Object obj60 = properties11.putIfAbsent((java.lang.Object) atomikosProperties47, (java.lang.Object) atomikosProperties53);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties61 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties61.setDefaultJtaTimeout((long) (byte) 10);
        atomikosProperties61.setSerialJtaTransactions(false);
        atomikosProperties61.setMaxTimeout((long) (short) -1);
        long long68 = atomikosProperties61.getDefaultJtaTimeout();
        java.util.Properties properties69 = atomikosProperties61.asProperties();
        boolean boolean70 = properties0.remove((java.lang.Object) atomikosProperties53, (java.lang.Object) atomikosProperties61);
        boolean boolean71 = properties0.isEmpty();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties72 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        int int73 = atomikosProperties72.getMaxActives();
        long long74 = atomikosProperties72.getMaxTimeout();
        java.lang.String str75 = atomikosProperties72.getLogBaseDir();
        java.lang.String str76 = atomikosProperties72.getTransactionManagerUniqueName();
        atomikosProperties72.setMaxTimeout((long) (byte) 10);
        boolean boolean79 = properties0.equals((java.lang.Object) (byte) 10);
        org.junit.Assert.assertNotNull(wildcardEnumeration1);
        org.junit.Assert.assertNotNull(obj2);
        org.junit.Assert.assertEquals(obj2.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj2), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj2), "{}");
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertNotNull(properties11);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNull(str21);
        org.junit.Assert.assertNull(obj28);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 0 + "'", int30 == 0);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 50 + "'", int33 == 50);
        org.junit.Assert.assertTrue("'" + long34 + "' != '" + 300000L + "'", long34 == 300000L);
        org.junit.Assert.assertNotNull(properties35);
        org.junit.Assert.assertNotNull(properties36);
        org.junit.Assert.assertNull(obj43);
        org.junit.Assert.assertNotNull(objEnumeration44);
        org.junit.Assert.assertNull(obj45);
        org.junit.Assert.assertNull(str50);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertNotNull(obj52);
        org.junit.Assert.assertTrue("'" + long56 + "' != '" + 10L + "'", long56 == 10L);
        org.junit.Assert.assertNull(str57);
        org.junit.Assert.assertNull(obj60);
        org.junit.Assert.assertTrue("'" + long68 + "' != '" + 10L + "'", long68 == 10L);
        org.junit.Assert.assertNotNull(properties69);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + true + "'", boolean71 == true);
        org.junit.Assert.assertTrue("'" + int73 + "' != '" + 50 + "'", int73 == 50);
        org.junit.Assert.assertTrue("'" + long74 + "' != '" + 300000L + "'", long74 == 300000L);
        org.junit.Assert.assertNull(str75);
        org.junit.Assert.assertNull(str76);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + false + "'", boolean79 == false);
    }

    @Test
    public void test1554() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1554");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setDefaultJtaTimeout((long) (byte) 10);
        long long3 = atomikosProperties0.getDefaultJtaTimeout();
        atomikosProperties0.setTransactionManagerUniqueName("");
        boolean boolean6 = atomikosProperties0.isEnableLogging();
        java.lang.String str7 = atomikosProperties0.getLogBaseName();
        atomikosProperties0.setMaxTimeout(10L);
        long long10 = atomikosProperties0.getDefaultJtaTimeout();
        java.util.Properties properties11 = atomikosProperties0.asProperties();
        java.util.Properties properties12 = null;
        java.util.Properties properties13 = new java.util.Properties(properties12);
        java.util.Properties properties14 = new java.util.Properties(properties12);
        java.util.Properties properties15 = null;
        java.util.Properties properties16 = new java.util.Properties(properties15);
        java.lang.Object obj18 = properties14.put((java.lang.Object) properties16, (java.lang.Object) (short) 1);
        java.util.Properties properties19 = new java.util.Properties(properties16);
        int int20 = properties16.size();
        java.lang.Object obj22 = properties16.get((java.lang.Object) (short) 100);
        properties11.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties16);
        org.junit.Assert.assertTrue("'" + long3 + "' != '" + 10L + "'", long3 == 10L);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "tmlog" + "'", str7, "tmlog");
        org.junit.Assert.assertTrue("'" + long10 + "' != '" + 10L + "'", long10 == 10L);
        org.junit.Assert.assertNotNull(properties11);
        org.junit.Assert.assertNull(obj18);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 0 + "'", int20 == 0);
        org.junit.Assert.assertNull(obj22);
    }

    @Test
    public void test1555() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1555");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Properties properties2 = new java.util.Properties(properties0);
        java.util.Properties properties3 = null;
        java.util.Properties properties4 = new java.util.Properties(properties3);
        java.lang.Object obj6 = properties2.put((java.lang.Object) properties4, (java.lang.Object) (short) 1);
        properties4.clear();
        int int8 = properties4.size();
        java.util.Properties properties9 = null;
        java.util.Properties properties10 = new java.util.Properties(properties9);
        java.util.Properties properties11 = new java.util.Properties(properties9);
        java.util.Properties properties12 = null;
        java.util.Properties properties13 = new java.util.Properties(properties12);
        java.lang.Object obj15 = properties11.put((java.lang.Object) properties13, (java.lang.Object) (short) 1);
        java.util.Properties properties16 = new java.util.Properties(properties13);
        java.util.Properties properties17 = new java.util.Properties(properties13);
        boolean boolean19 = properties4.remove((java.lang.Object) properties13, (java.lang.Object) 10.0f);
        java.util.Enumeration<java.lang.Object> objEnumeration20 = properties13.elements();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties21 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties21.setDefaultJtaTimeout((long) (byte) 10);
        atomikosProperties21.setCheckpointInterval((long) (byte) 0);
        long long26 = atomikosProperties21.getMaxTimeout();
        atomikosProperties21.setSerialJtaTransactions(true);
        java.util.Properties properties29 = new java.util.Properties();
        java.util.Enumeration<?> wildcardEnumeration30 = properties29.propertyNames();
        java.lang.Object obj31 = properties13.replace((java.lang.Object) atomikosProperties21, (java.lang.Object) properties29);
        java.util.Properties properties32 = null;
        java.util.Properties properties33 = new java.util.Properties(properties32);
        java.util.Properties properties34 = new java.util.Properties(properties32);
        java.util.Properties properties35 = null;
        java.util.Properties properties36 = new java.util.Properties(properties35);
        java.lang.Object obj38 = properties34.put((java.lang.Object) properties36, (java.lang.Object) (short) 1);
        boolean boolean39 = properties34.isEmpty();
        java.util.Properties properties40 = null;
        java.util.Properties properties41 = new java.util.Properties(properties40);
        java.util.Properties properties42 = new java.util.Properties(properties40);
        boolean boolean43 = properties34.containsKey((java.lang.Object) properties42);
        java.util.Properties properties44 = new java.util.Properties(properties42);
        java.util.Properties properties45 = null;
        java.util.Properties properties46 = new java.util.Properties(properties45);
        java.util.Properties properties47 = new java.util.Properties(properties45);
        java.util.Properties properties48 = null;
        java.util.Properties properties49 = new java.util.Properties(properties48);
        java.lang.Object obj51 = properties47.put((java.lang.Object) properties49, (java.lang.Object) (short) 1);
        boolean boolean52 = properties47.isEmpty();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties53 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties53.setDefaultJtaTimeout((long) (byte) 10);
        atomikosProperties53.setCheckpointInterval((long) (byte) 0);
        atomikosProperties53.setTransactionManagerUniqueName("");
        java.util.Properties properties60 = atomikosProperties53.asProperties();
        java.lang.Object obj61 = properties47.remove((java.lang.Object) properties60);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties62 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties62.setDefaultJtaTimeout((long) (byte) 10);
        atomikosProperties62.setCheckpointInterval((long) (byte) 0);
        atomikosProperties62.setTransactionManagerUniqueName("");
        java.lang.Object obj69 = properties60.remove((java.lang.Object) atomikosProperties62);
        java.util.Enumeration<java.lang.Object> objEnumeration70 = properties60.elements();
        java.lang.Object obj71 = properties44.get((java.lang.Object) properties60);
        properties13.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties60);
        properties60.clear();
        java.io.Reader reader74 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties60.load(reader74);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(obj6);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertNull(obj15);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(objEnumeration20);
        org.junit.Assert.assertTrue("'" + long26 + "' != '" + 300000L + "'", long26 == 300000L);
        org.junit.Assert.assertNotNull(wildcardEnumeration30);
        org.junit.Assert.assertNull(obj31);
        org.junit.Assert.assertNull(obj38);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNull(obj51);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNotNull(properties60);
        org.junit.Assert.assertNull(obj61);
        org.junit.Assert.assertNull(obj69);
        org.junit.Assert.assertNotNull(objEnumeration70);
        org.junit.Assert.assertNull(obj71);
    }

    @Test
    public void test1556() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1556");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Properties properties2 = new java.util.Properties(properties0);
        java.util.Properties properties3 = null;
        java.util.Properties properties4 = new java.util.Properties(properties3);
        java.lang.Object obj6 = properties2.put((java.lang.Object) properties4, (java.lang.Object) (short) 1);
        properties4.clear();
        java.lang.String str9 = properties4.getProperty("");
        java.util.Properties properties10 = null;
        java.util.Properties properties11 = new java.util.Properties(properties10);
        java.util.Properties properties12 = new java.util.Properties(properties10);
        java.util.Properties properties13 = null;
        java.util.Properties properties14 = new java.util.Properties(properties13);
        java.lang.Object obj16 = properties12.put((java.lang.Object) properties14, (java.lang.Object) (short) 1);
        properties4.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties12);
        java.util.Enumeration<java.lang.Object> objEnumeration18 = properties4.keys();
        java.util.Enumeration<java.lang.Object> objEnumeration19 = properties4.elements();
        java.util.Set<java.lang.Object> objSet20 = properties4.keySet();
        java.io.OutputStream outputStream21 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties4.storeToXML(outputStream21, "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=0, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=true, com.atomikos.icatch.max_actives=100, com.atomikos.icatch.log_base_name=tmlog}", "{tmlog={com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=0, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.tm_unique_name=, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}, 4=true}");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(obj6);
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertNull(obj16);
        org.junit.Assert.assertNotNull(objEnumeration18);
        org.junit.Assert.assertNotNull(objEnumeration19);
        org.junit.Assert.assertNotNull(objSet20);
    }

    @Test
    public void test1557() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1557");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setDefaultJtaTimeout((long) (byte) 10);
        atomikosProperties0.setCheckpointInterval((long) (byte) 0);
        atomikosProperties0.setTransactionManagerUniqueName("");
        java.util.Properties properties7 = atomikosProperties0.asProperties();
        java.lang.String str8 = atomikosProperties0.getLogBaseName();
        java.util.Properties properties9 = atomikosProperties0.asProperties();
        java.util.Enumeration<java.lang.Object> objEnumeration10 = properties9.keys();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties12 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties12.setDefaultJtaTimeout((long) (byte) 10);
        long long15 = atomikosProperties12.getDefaultJtaTimeout();
        atomikosProperties12.setTransactionManagerUniqueName("");
        atomikosProperties12.setCheckpointInterval(100L);
        boolean boolean20 = properties9.remove((java.lang.Object) "hi!", (java.lang.Object) atomikosProperties12);
        java.util.Properties properties21 = new java.util.Properties(properties9);
        java.util.Properties properties22 = new java.util.Properties(properties9);
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet23 = properties9.entrySet();
        java.util.Enumeration<java.lang.Object> objEnumeration24 = properties9.keys();
        org.junit.Assert.assertNotNull(properties7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "tmlog" + "'", str8, "tmlog");
        org.junit.Assert.assertNotNull(properties9);
        org.junit.Assert.assertNotNull(objEnumeration10);
        org.junit.Assert.assertTrue("'" + long15 + "' != '" + 10L + "'", long15 == 10L);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(objEntrySet23);
        org.junit.Assert.assertNotNull(objEnumeration24);
    }

    @Test
    public void test1558() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1558");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setDefaultJtaTimeout((long) (byte) 10);
        atomikosProperties0.setCheckpointInterval((long) (byte) 0);
        long long5 = atomikosProperties0.getMaxTimeout();
        atomikosProperties0.setSerialJtaTransactions(true);
        atomikosProperties0.setForceShutdownOnVmExit(false);
        atomikosProperties0.setMaxTimeout((long) 1);
        atomikosProperties0.setForceShutdownOnVmExit(true);
        long long14 = atomikosProperties0.getCheckpointInterval();
        atomikosProperties0.setCheckpointInterval((long) 100);
        org.junit.Assert.assertTrue("'" + long5 + "' != '" + 300000L + "'", long5 == 300000L);
        org.junit.Assert.assertTrue("'" + long14 + "' != '" + 0L + "'", long14 == 0L);
    }

    @Test
    public void test1559() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1559");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setDefaultJtaTimeout((long) (byte) 10);
        long long3 = atomikosProperties0.getDefaultJtaTimeout();
        atomikosProperties0.setTransactionManagerUniqueName("");
        boolean boolean6 = atomikosProperties0.isEnableLogging();
        atomikosProperties0.setDefaultJtaTimeout((long) '4');
        java.lang.String str9 = atomikosProperties0.getTransactionManagerUniqueName();
        atomikosProperties0.setThreadedTwoPhaseCommit(true);
        java.util.Properties properties12 = atomikosProperties0.asProperties();
        java.util.Properties properties13 = atomikosProperties0.asProperties();
        java.util.Set<java.lang.Object> objSet14 = properties13.keySet();
        java.lang.String str17 = properties13.getProperty("hi!", "tmlog");
        org.junit.Assert.assertTrue("'" + long3 + "' != '" + 10L + "'", long3 == 10L);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "" + "'", str9, "");
        org.junit.Assert.assertNotNull(properties12);
        org.junit.Assert.assertNotNull(properties13);
        org.junit.Assert.assertNotNull(objSet14);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "tmlog" + "'", str17, "tmlog");
    }

    @Test
    public void test1560() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1560");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Properties properties2 = new java.util.Properties(properties0);
        java.util.Properties properties3 = null;
        java.util.Properties properties4 = new java.util.Properties(properties3);
        java.lang.Object obj6 = properties2.put((java.lang.Object) properties4, (java.lang.Object) (short) 1);
        boolean boolean7 = properties2.isEmpty();
        java.util.Properties properties8 = null;
        java.util.Properties properties9 = new java.util.Properties(properties8);
        java.util.Properties properties10 = new java.util.Properties(properties8);
        boolean boolean11 = properties2.containsKey((java.lang.Object) properties10);
        java.util.Properties properties12 = new java.util.Properties(properties10);
        java.lang.Object obj13 = properties12.clone();
        java.util.Properties properties15 = null;
        java.util.Properties properties16 = new java.util.Properties(properties15);
        java.util.Properties properties17 = new java.util.Properties(properties15);
        java.util.Properties properties18 = null;
        java.util.Properties properties19 = new java.util.Properties(properties18);
        java.lang.Object obj21 = properties17.put((java.lang.Object) properties19, (java.lang.Object) (short) 1);
        boolean boolean22 = properties17.isEmpty();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties23 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties23.setDefaultJtaTimeout((long) (byte) 10);
        atomikosProperties23.setCheckpointInterval((long) (byte) 0);
        atomikosProperties23.setTransactionManagerUniqueName("");
        java.util.Properties properties30 = atomikosProperties23.asProperties();
        java.lang.Object obj31 = properties17.remove((java.lang.Object) properties30);
        java.lang.Object obj32 = properties12.putIfAbsent((java.lang.Object) 1L, (java.lang.Object) properties17);
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet33 = properties12.entrySet();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties34 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        boolean boolean35 = atomikosProperties34.isForceShutdownOnVmExit();
        java.util.Properties properties36 = atomikosProperties34.asProperties();
        java.util.Properties properties37 = null;
        java.util.Properties properties38 = new java.util.Properties(properties37);
        java.util.Properties properties39 = new java.util.Properties(properties37);
        java.util.Properties properties40 = null;
        java.util.Properties properties41 = new java.util.Properties(properties40);
        java.lang.Object obj43 = properties39.put((java.lang.Object) properties41, (java.lang.Object) (short) 1);
        properties41.clear();
        int int45 = properties41.size();
        java.util.Properties properties46 = null;
        java.util.Properties properties47 = new java.util.Properties(properties46);
        java.util.Properties properties48 = new java.util.Properties(properties46);
        java.util.Properties properties49 = null;
        java.util.Properties properties50 = new java.util.Properties(properties49);
        java.lang.Object obj52 = properties48.put((java.lang.Object) properties50, (java.lang.Object) (short) 1);
        java.util.Properties properties53 = new java.util.Properties(properties50);
        java.util.Properties properties54 = new java.util.Properties(properties50);
        boolean boolean56 = properties41.remove((java.lang.Object) properties50, (java.lang.Object) 10.0f);
        boolean boolean57 = properties36.containsKey((java.lang.Object) 10.0f);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties59 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties59.setDefaultJtaTimeout((long) (byte) 10);
        atomikosProperties59.setCheckpointInterval((long) (byte) 0);
        atomikosProperties59.setEnableLogging(true);
        java.lang.Object obj66 = properties36.getOrDefault((java.lang.Object) (byte) 0, (java.lang.Object) true);
        java.util.Properties properties67 = new java.util.Properties(properties36);
        boolean boolean68 = properties12.containsKey((java.lang.Object) properties67);
        properties12.clear();
        java.lang.Object obj70 = properties12.clone();
        org.junit.Assert.assertNull(obj6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNotNull(obj13);
        org.junit.Assert.assertEquals(obj13.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj13), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj13), "{}");
        org.junit.Assert.assertNull(obj21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(properties30);
        org.junit.Assert.assertNull(obj31);
        org.junit.Assert.assertNull(obj32);
        org.junit.Assert.assertNotNull(objEntrySet33);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(properties36);
        org.junit.Assert.assertNull(obj43);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 0 + "'", int45 == 0);
        org.junit.Assert.assertNull(obj52);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertEquals("'" + obj66 + "' != '" + true + "'", obj66, true);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertNotNull(obj70);
        org.junit.Assert.assertEquals(obj70.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj70), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj70), "{}");
    }

    @Test
    public void test1561() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1561");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Properties properties2 = new java.util.Properties(properties0);
        java.util.Properties properties3 = null;
        java.util.Properties properties4 = new java.util.Properties(properties3);
        java.lang.Object obj6 = properties2.put((java.lang.Object) properties4, (java.lang.Object) (short) 1);
        java.util.Enumeration<java.lang.Object> objEnumeration7 = properties4.elements();
        java.lang.String str8 = properties4.toString();
        java.util.Set<java.lang.String> strSet9 = properties4.stringPropertyNames();
        org.junit.Assert.assertNull(obj6);
        org.junit.Assert.assertNotNull(objEnumeration7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "{}" + "'", str8, "{}");
        org.junit.Assert.assertNotNull(strSet9);
    }

    @Test
    public void test1562() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1562");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setDefaultJtaTimeout((long) (byte) 10);
        atomikosProperties0.setCheckpointInterval((long) (byte) 0);
        atomikosProperties0.setTransactionManagerUniqueName("");
        java.util.Properties properties7 = atomikosProperties0.asProperties();
        java.lang.String str8 = atomikosProperties0.getLogBaseName();
        java.util.Properties properties9 = atomikosProperties0.asProperties();
        java.util.Enumeration<java.lang.Object> objEnumeration10 = properties9.keys();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties11 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties11.setDefaultJtaTimeout((long) (byte) 10);
        long long14 = atomikosProperties11.getDefaultJtaTimeout();
        atomikosProperties11.setTransactionManagerUniqueName("");
        boolean boolean17 = atomikosProperties11.isEnableLogging();
        atomikosProperties11.setLogBaseName("tmlog");
        boolean boolean20 = atomikosProperties11.isThreadedTwoPhaseCommit();
        java.lang.String str21 = atomikosProperties11.getService();
        java.util.Properties properties22 = null;
        java.util.Properties properties23 = new java.util.Properties(properties22);
        java.util.Properties properties24 = new java.util.Properties(properties22);
        java.util.Properties properties25 = null;
        java.util.Properties properties26 = new java.util.Properties(properties25);
        java.lang.Object obj28 = properties24.put((java.lang.Object) properties26, (java.lang.Object) (short) 1);
        boolean boolean29 = properties24.isEmpty();
        properties24.clear();
        java.util.Properties properties31 = null;
        java.util.Properties properties32 = new java.util.Properties(properties31);
        java.util.Properties properties33 = new java.util.Properties(properties31);
        java.util.Properties properties34 = null;
        java.util.Properties properties35 = new java.util.Properties(properties34);
        java.lang.Object obj37 = properties33.put((java.lang.Object) properties35, (java.lang.Object) (short) 1);
        boolean boolean38 = properties33.isEmpty();
        java.util.Properties properties39 = null;
        java.util.Properties properties40 = new java.util.Properties(properties39);
        java.util.Properties properties41 = new java.util.Properties(properties39);
        boolean boolean42 = properties33.containsKey((java.lang.Object) properties41);
        java.util.Properties properties43 = new java.util.Properties(properties33);
        java.util.Properties properties44 = null;
        java.util.Properties properties45 = new java.util.Properties(properties44);
        java.util.Properties properties46 = new java.util.Properties(properties44);
        boolean boolean48 = properties46.containsValue((java.lang.Object) (short) 100);
        java.util.Properties properties49 = null;
        java.util.Properties properties50 = new java.util.Properties(properties49);
        java.util.Properties properties51 = new java.util.Properties(properties49);
        java.util.Properties properties52 = null;
        java.util.Properties properties53 = new java.util.Properties(properties52);
        java.lang.Object obj55 = properties51.put((java.lang.Object) properties53, (java.lang.Object) (short) 1);
        java.util.Enumeration<java.lang.Object> objEnumeration56 = properties53.elements();
        java.lang.Object obj57 = properties46.remove((java.lang.Object) properties53);
        boolean boolean58 = properties53.isEmpty();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet59 = properties53.entrySet();
        java.util.Properties properties60 = new java.util.Properties(properties53);
        java.util.Set<java.lang.String> strSet61 = properties53.stringPropertyNames();
        boolean boolean63 = properties24.replace((java.lang.Object) properties43, (java.lang.Object) strSet61, (java.lang.Object) "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.tm_unique_name=, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
        java.lang.Object obj64 = properties9.getOrDefault((java.lang.Object) atomikosProperties11, (java.lang.Object) properties24);
        java.io.Reader reader65 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties24.load(reader65);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(properties7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "tmlog" + "'", str8, "tmlog");
        org.junit.Assert.assertNotNull(properties9);
        org.junit.Assert.assertNotNull(objEnumeration10);
        org.junit.Assert.assertTrue("'" + long14 + "' != '" + 10L + "'", long14 == 10L);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNull(str21);
        org.junit.Assert.assertNull(obj28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNull(obj37);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNull(obj55);
        org.junit.Assert.assertNotNull(objEnumeration56);
        org.junit.Assert.assertNull(obj57);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertNotNull(objEntrySet59);
        org.junit.Assert.assertNotNull(strSet61);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertNotNull(obj64);
        org.junit.Assert.assertEquals(obj64.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj64), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj64), "{}");
    }

    @Test
    public void test1563() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1563");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        int int1 = atomikosProperties0.getMaxActives();
        long long2 = atomikosProperties0.getMaxTimeout();
        java.util.Properties properties3 = atomikosProperties0.asProperties();
        java.util.Properties properties4 = atomikosProperties0.asProperties();
        long long5 = atomikosProperties0.getMaxTimeout();
        java.util.Properties properties6 = atomikosProperties0.asProperties();
        properties6.clear();
        java.util.Enumeration<java.lang.Object> objEnumeration8 = properties6.elements();
        java.util.Properties properties9 = new java.util.Properties(properties6);
        java.io.OutputStream outputStream10 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties6.store(outputStream10, "{{}=tmlog}");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 50 + "'", int1 == 50);
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + 300000L + "'", long2 == 300000L);
        org.junit.Assert.assertNotNull(properties3);
        org.junit.Assert.assertNotNull(properties4);
        org.junit.Assert.assertTrue("'" + long5 + "' != '" + 300000L + "'", long5 == 300000L);
        org.junit.Assert.assertNotNull(properties6);
        org.junit.Assert.assertNotNull(objEnumeration8);
    }

    @Test
    public void test1564() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1564");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setDefaultJtaTimeout((long) (byte) 10);
        atomikosProperties0.setCheckpointInterval((long) (byte) 0);
        atomikosProperties0.setTransactionManagerUniqueName("");
        java.util.Properties properties7 = atomikosProperties0.asProperties();
        java.lang.String str8 = atomikosProperties0.getTransactionManagerUniqueName();
        atomikosProperties0.setDefaultJtaTimeout((long) (-1));
        java.lang.String str11 = atomikosProperties0.getTransactionManagerUniqueName();
        atomikosProperties0.setMaxActives(100);
        atomikosProperties0.setThreadedTwoPhaseCommit(false);
        atomikosProperties0.setCheckpointInterval((long) 11);
        atomikosProperties0.setMaxActives((int) 'a');
        org.junit.Assert.assertNotNull(properties7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "" + "'", str8, "");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
    }

    @Test
    public void test1565() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1565");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        boolean boolean1 = atomikosProperties0.isForceShutdownOnVmExit();
        java.util.Properties properties2 = atomikosProperties0.asProperties();
        java.util.Properties properties3 = null;
        java.util.Properties properties4 = new java.util.Properties(properties3);
        java.util.Properties properties5 = new java.util.Properties(properties3);
        java.util.Properties properties6 = null;
        java.util.Properties properties7 = new java.util.Properties(properties6);
        java.lang.Object obj9 = properties5.put((java.lang.Object) properties7, (java.lang.Object) (short) 1);
        properties7.clear();
        int int11 = properties7.size();
        java.util.Properties properties12 = null;
        java.util.Properties properties13 = new java.util.Properties(properties12);
        java.util.Properties properties14 = new java.util.Properties(properties12);
        java.util.Properties properties15 = null;
        java.util.Properties properties16 = new java.util.Properties(properties15);
        java.lang.Object obj18 = properties14.put((java.lang.Object) properties16, (java.lang.Object) (short) 1);
        java.util.Properties properties19 = new java.util.Properties(properties16);
        java.util.Properties properties20 = new java.util.Properties(properties16);
        boolean boolean22 = properties7.remove((java.lang.Object) properties16, (java.lang.Object) 10.0f);
        boolean boolean23 = properties2.containsKey((java.lang.Object) 10.0f);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties25 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties25.setDefaultJtaTimeout((long) (byte) 10);
        atomikosProperties25.setCheckpointInterval((long) (byte) 0);
        atomikosProperties25.setEnableLogging(true);
        java.lang.Object obj32 = properties2.getOrDefault((java.lang.Object) (byte) 0, (java.lang.Object) true);
        java.util.Properties properties33 = new java.util.Properties(properties2);
        java.util.Properties properties34 = null;
        java.util.Properties properties35 = new java.util.Properties(properties34);
        java.util.Properties properties36 = new java.util.Properties(properties34);
        java.util.Properties properties37 = null;
        java.util.Properties properties38 = new java.util.Properties(properties37);
        java.lang.Object obj40 = properties36.put((java.lang.Object) properties38, (java.lang.Object) (short) 1);
        properties38.clear();
        int int42 = properties38.size();
        java.util.Properties properties43 = new java.util.Properties(properties38);
        boolean boolean44 = properties33.equals((java.lang.Object) properties38);
        java.util.Enumeration<?> wildcardEnumeration45 = properties38.propertyNames();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertNotNull(properties2);
        org.junit.Assert.assertNull(obj9);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertNull(obj18);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertEquals("'" + obj32 + "' != '" + true + "'", obj32, true);
        org.junit.Assert.assertNull(obj40);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 0 + "'", int42 == 0);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertNotNull(wildcardEnumeration45);
    }

    @Test
    public void test1566() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1566");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Properties properties2 = new java.util.Properties(properties0);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties3 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        int int4 = atomikosProperties3.getMaxActives();
        long long5 = atomikosProperties3.getMaxTimeout();
        java.lang.String str6 = atomikosProperties3.getLogBaseDir();
        atomikosProperties3.setCheckpointInterval(100L);
        boolean boolean9 = properties2.equals((java.lang.Object) atomikosProperties3);
        java.lang.String str10 = atomikosProperties3.getLogBaseDir();
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 50 + "'", int4 == 50);
        org.junit.Assert.assertTrue("'" + long5 + "' != '" + 300000L + "'", long5 == 300000L);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNull(str10);
    }

    @Test
    public void test1567() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1567");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Properties properties2 = new java.util.Properties(properties0);
        java.util.Properties properties3 = null;
        java.util.Properties properties4 = new java.util.Properties(properties3);
        java.lang.Object obj6 = properties2.put((java.lang.Object) properties4, (java.lang.Object) (short) 1);
        properties4.clear();
        int int8 = properties4.size();
        java.util.Properties properties9 = null;
        java.util.Properties properties10 = new java.util.Properties(properties9);
        java.util.Properties properties11 = new java.util.Properties(properties9);
        java.util.Properties properties12 = null;
        java.util.Properties properties13 = new java.util.Properties(properties12);
        java.lang.Object obj15 = properties11.put((java.lang.Object) properties13, (java.lang.Object) (short) 1);
        java.util.Properties properties16 = new java.util.Properties(properties13);
        java.util.Properties properties17 = new java.util.Properties(properties13);
        boolean boolean19 = properties4.remove((java.lang.Object) properties13, (java.lang.Object) 10.0f);
        java.util.Enumeration<java.lang.Object> objEnumeration20 = properties13.elements();
        java.util.Properties properties21 = new java.util.Properties(properties13);
        boolean boolean23 = properties13.contains((java.lang.Object) (byte) 100);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties24 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        int int25 = atomikosProperties24.getMaxActives();
        atomikosProperties24.setLogBaseName("");
        atomikosProperties24.setMaxActives((-1));
        java.lang.Object obj30 = properties13.remove((java.lang.Object) atomikosProperties24);
        java.util.Properties properties31 = new java.util.Properties(properties13);
        java.io.OutputStream outputStream32 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties31.storeToXML(outputStream32, "{tmlog={com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=0, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.tm_unique_name=, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}, 4=true}", "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.max_actives=0, com.atomikos.icatch.log_base_name=tmlog}");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(obj6);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertNull(obj15);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(objEnumeration20);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 50 + "'", int25 == 50);
        org.junit.Assert.assertNull(obj30);
    }

    @Test
    public void test1568() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1568");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Properties properties2 = new java.util.Properties(properties0);
        java.util.Properties properties3 = null;
        java.util.Properties properties4 = new java.util.Properties(properties3);
        java.lang.Object obj6 = properties2.put((java.lang.Object) properties4, (java.lang.Object) (short) 1);
        boolean boolean7 = properties2.isEmpty();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties8 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties8.setDefaultJtaTimeout((long) (byte) 10);
        atomikosProperties8.setCheckpointInterval((long) (byte) 0);
        atomikosProperties8.setTransactionManagerUniqueName("");
        java.util.Properties properties15 = atomikosProperties8.asProperties();
        java.lang.Object obj16 = properties2.remove((java.lang.Object) properties15);
        java.util.Set<java.lang.String> strSet17 = properties15.stringPropertyNames();
        properties15.clear();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties19 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties19.setDefaultJtaTimeout((long) (byte) 10);
        atomikosProperties19.setCheckpointInterval((long) (byte) 0);
        atomikosProperties19.setTransactionManagerUniqueName("");
        java.util.Properties properties26 = atomikosProperties19.asProperties();
        java.util.Properties properties27 = atomikosProperties19.asProperties();
        java.util.Properties properties28 = null;
        java.util.Properties properties29 = new java.util.Properties(properties28);
        java.util.Properties properties30 = new java.util.Properties(properties28);
        java.util.Properties properties31 = null;
        java.util.Properties properties32 = new java.util.Properties(properties31);
        java.lang.Object obj34 = properties30.put((java.lang.Object) properties32, (java.lang.Object) (short) 1);
        properties32.clear();
        int int36 = properties32.size();
        java.lang.Object obj39 = properties32.setProperty("hi!", "hi!");
        java.lang.Object obj42 = properties32.setProperty("tmlog", "tmlog");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties43 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties43.setDefaultJtaTimeout((long) (byte) 10);
        atomikosProperties43.setCheckpointInterval((long) (byte) 0);
        atomikosProperties43.setTransactionManagerUniqueName("");
        boolean boolean50 = atomikosProperties43.isEnableLogging();
        java.lang.String str51 = atomikosProperties43.getLogBaseName();
        atomikosProperties43.setThreadedTwoPhaseCommit(false);
        java.lang.Object obj54 = properties27.put((java.lang.Object) properties32, (java.lang.Object) atomikosProperties43);
        boolean boolean55 = atomikosProperties43.isSerialJtaTransactions();
        java.util.Properties properties56 = null;
        java.util.Properties properties57 = new java.util.Properties(properties56);
        java.util.Properties properties58 = new java.util.Properties(properties56);
        java.util.Properties properties59 = null;
        java.util.Properties properties60 = new java.util.Properties(properties59);
        java.lang.Object obj62 = properties58.put((java.lang.Object) properties60, (java.lang.Object) (short) 1);
        properties60.clear();
        int int64 = properties60.size();
        java.util.Properties properties65 = new java.util.Properties(properties60);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties66 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        int int67 = atomikosProperties66.getMaxActives();
        long long68 = atomikosProperties66.getMaxTimeout();
        java.util.Properties properties69 = atomikosProperties66.asProperties();
        java.util.Properties properties70 = atomikosProperties66.asProperties();
        java.util.Properties properties71 = null;
        java.util.Properties properties72 = new java.util.Properties(properties71);
        java.util.Properties properties73 = new java.util.Properties(properties71);
        java.util.Properties properties74 = null;
        java.util.Properties properties75 = new java.util.Properties(properties74);
        java.lang.Object obj77 = properties73.put((java.lang.Object) properties75, (java.lang.Object) (short) 1);
        java.util.Enumeration<java.lang.Object> objEnumeration78 = properties75.elements();
        java.lang.Object obj79 = properties60.replace((java.lang.Object) atomikosProperties66, (java.lang.Object) properties75);
        atomikosProperties66.setLogBaseName("");
        java.lang.String str82 = atomikosProperties66.getTransactionManagerUniqueName();
        java.lang.Object obj83 = properties15.replace((java.lang.Object) atomikosProperties43, (java.lang.Object) atomikosProperties66);
        atomikosProperties66.setEnableLogging(false);
        atomikosProperties66.setMaxTimeout((long) 2);
        atomikosProperties66.setDefaultJtaTimeout(52L);
        org.junit.Assert.assertNull(obj6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(properties15);
        org.junit.Assert.assertNull(obj16);
        org.junit.Assert.assertNotNull(strSet17);
        org.junit.Assert.assertNotNull(properties26);
        org.junit.Assert.assertNotNull(properties27);
        org.junit.Assert.assertNull(obj34);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 0 + "'", int36 == 0);
        org.junit.Assert.assertNull(obj39);
        org.junit.Assert.assertNull(obj42);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "tmlog" + "'", str51, "tmlog");
        org.junit.Assert.assertNull(obj54);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertNull(obj62);
        org.junit.Assert.assertTrue("'" + int64 + "' != '" + 0 + "'", int64 == 0);
        org.junit.Assert.assertTrue("'" + int67 + "' != '" + 50 + "'", int67 == 50);
        org.junit.Assert.assertTrue("'" + long68 + "' != '" + 300000L + "'", long68 == 300000L);
        org.junit.Assert.assertNotNull(properties69);
        org.junit.Assert.assertNotNull(properties70);
        org.junit.Assert.assertNull(obj77);
        org.junit.Assert.assertNotNull(objEnumeration78);
        org.junit.Assert.assertNull(obj79);
        org.junit.Assert.assertNull(str82);
        org.junit.Assert.assertNull(obj83);
    }

    @Test
    public void test1569() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1569");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setDefaultJtaTimeout((long) (byte) 10);
        long long3 = atomikosProperties0.getDefaultJtaTimeout();
        atomikosProperties0.setTransactionManagerUniqueName("");
        boolean boolean6 = atomikosProperties0.isEnableLogging();
        java.lang.String str7 = atomikosProperties0.getLogBaseDir();
        java.util.Properties properties8 = atomikosProperties0.asProperties();
        java.lang.String str9 = atomikosProperties0.getService();
        atomikosProperties0.setMaxActives((int) (short) 1);
        atomikosProperties0.setCheckpointInterval(1L);
        atomikosProperties0.setThreadedTwoPhaseCommit(true);
        java.lang.String str16 = atomikosProperties0.getService();
        atomikosProperties0.setService("{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=52, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.tm_unique_name=, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
        java.lang.String str19 = atomikosProperties0.getService();
        org.junit.Assert.assertTrue("'" + long3 + "' != '" + 10L + "'", long3 == 10L);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNotNull(properties8);
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertNull(str16);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=52, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.tm_unique_name=, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}" + "'", str19, "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=52, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.tm_unique_name=, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
    }

    @Test
    public void test1570() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1570");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setDefaultJtaTimeout((long) (byte) 10);
        long long3 = atomikosProperties0.getDefaultJtaTimeout();
        atomikosProperties0.setTransactionManagerUniqueName("");
        long long6 = atomikosProperties0.getDefaultJtaTimeout();
        boolean boolean7 = atomikosProperties0.isEnableLogging();
        atomikosProperties0.setService("{}");
        java.lang.String str10 = atomikosProperties0.getLogBaseDir();
        atomikosProperties0.setTransactionManagerUniqueName("{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=0, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.tm_unique_name=, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
        org.junit.Assert.assertTrue("'" + long3 + "' != '" + 10L + "'", long3 == 10L);
        org.junit.Assert.assertTrue("'" + long6 + "' != '" + 10L + "'", long6 == 10L);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNull(str10);
    }

    @Test
    public void test1571() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1571");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Properties properties2 = new java.util.Properties(properties0);
        java.util.Properties properties3 = null;
        java.util.Properties properties4 = new java.util.Properties(properties3);
        java.lang.Object obj6 = properties2.put((java.lang.Object) properties4, (java.lang.Object) (short) 1);
        java.util.Properties properties7 = new java.util.Properties(properties4);
        java.util.Properties properties8 = new java.util.Properties(properties4);
        java.util.Set<java.lang.Object> objSet9 = properties8.keySet();
        java.util.Properties properties10 = new java.util.Properties(properties8);
        java.util.Properties properties11 = null;
        java.util.Properties properties12 = new java.util.Properties(properties11);
        java.util.Properties properties13 = new java.util.Properties(properties11);
        java.util.Properties properties14 = null;
        java.util.Properties properties15 = new java.util.Properties(properties14);
        java.lang.Object obj17 = properties13.put((java.lang.Object) properties15, (java.lang.Object) (short) 1);
        java.util.Properties properties19 = null;
        java.util.Properties properties20 = new java.util.Properties(properties19);
        java.util.Properties properties21 = new java.util.Properties(properties19);
        java.util.Properties properties22 = null;
        java.util.Properties properties23 = new java.util.Properties(properties22);
        java.lang.Object obj25 = properties21.put((java.lang.Object) properties23, (java.lang.Object) (short) 1);
        boolean boolean26 = properties15.remove((java.lang.Object) false, (java.lang.Object) (short) 1);
        java.util.Set<java.lang.String> strSet27 = properties15.stringPropertyNames();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties28 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties28.setDefaultJtaTimeout((long) (byte) 10);
        atomikosProperties28.setCheckpointInterval((long) (byte) 0);
        atomikosProperties28.setTransactionManagerUniqueName("");
        boolean boolean35 = atomikosProperties28.isEnableLogging();
        atomikosProperties28.setSerialJtaTransactions(false);
        atomikosProperties28.setLogBaseDir("");
        java.util.Properties properties40 = null;
        java.util.Properties properties41 = new java.util.Properties(properties40);
        java.util.Properties properties42 = new java.util.Properties(properties40);
        java.util.Properties properties43 = null;
        java.util.Properties properties44 = new java.util.Properties(properties43);
        java.lang.Object obj46 = properties42.put((java.lang.Object) properties44, (java.lang.Object) (short) 1);
        java.util.Properties properties47 = new java.util.Properties(properties44);
        boolean boolean48 = properties15.remove((java.lang.Object) "", (java.lang.Object) properties47);
        java.util.Properties properties49 = null;
        java.util.Properties properties50 = new java.util.Properties(properties49);
        java.util.Properties properties51 = new java.util.Properties(properties49);
        java.lang.Object obj52 = properties51.clone();
        boolean boolean53 = properties15.contains(obj52);
        properties8.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties15);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties55 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties55.setDefaultJtaTimeout((long) (byte) 10);
        atomikosProperties55.setCheckpointInterval((long) (byte) 0);
        atomikosProperties55.setTransactionManagerUniqueName("");
        java.util.Properties properties62 = atomikosProperties55.asProperties();
        java.lang.String str63 = atomikosProperties55.getTransactionManagerUniqueName();
        atomikosProperties55.setDefaultJtaTimeout((long) (-1));
        java.lang.String str66 = atomikosProperties55.getTransactionManagerUniqueName();
        java.util.Properties properties67 = atomikosProperties55.asProperties();
        atomikosProperties55.setCheckpointInterval((long) 9);
        java.lang.Object obj70 = properties8.get((java.lang.Object) 9);
        java.io.PrintWriter printWriter71 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties8.list(printWriter71);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(obj6);
        org.junit.Assert.assertNotNull(objSet9);
        org.junit.Assert.assertNull(obj17);
        org.junit.Assert.assertNull(obj25);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(strSet27);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertNull(obj46);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNotNull(obj52);
        org.junit.Assert.assertEquals(obj52.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj52), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj52), "{}");
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertNotNull(properties62);
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "" + "'", str63, "");
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "" + "'", str66, "");
        org.junit.Assert.assertNotNull(properties67);
        org.junit.Assert.assertNull(obj70);
    }

    @Test
    public void test1572() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1572");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        int int1 = atomikosProperties0.getMaxActives();
        java.util.Properties properties2 = atomikosProperties0.asProperties();
        atomikosProperties0.setMaxActives(9);
        atomikosProperties0.setMaxActives((int) (byte) 1);
        boolean boolean7 = atomikosProperties0.isForceShutdownOnVmExit();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 50 + "'", int1 == 50);
        org.junit.Assert.assertNotNull(properties2);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
    }

    @Test
    public void test1573() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1573");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Properties properties2 = new java.util.Properties(properties0);
        java.util.Properties properties3 = null;
        java.util.Properties properties4 = new java.util.Properties(properties3);
        java.lang.Object obj6 = properties2.put((java.lang.Object) properties4, (java.lang.Object) (short) 1);
        java.util.Enumeration<java.lang.Object> objEnumeration7 = properties4.elements();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet8 = properties4.entrySet();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties9 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties9.setDefaultJtaTimeout((long) (byte) 10);
        long long12 = atomikosProperties9.getDefaultJtaTimeout();
        atomikosProperties9.setTransactionManagerUniqueName("");
        boolean boolean15 = atomikosProperties9.isEnableLogging();
        boolean boolean16 = properties4.containsKey((java.lang.Object) boolean15);
        java.util.Properties properties17 = null;
        java.util.Properties properties18 = new java.util.Properties(properties17);
        java.util.Properties properties19 = new java.util.Properties(properties17);
        java.util.Properties properties20 = null;
        java.util.Properties properties21 = new java.util.Properties(properties20);
        java.lang.Object obj23 = properties19.put((java.lang.Object) properties21, (java.lang.Object) (short) 1);
        java.util.Properties properties25 = null;
        java.util.Properties properties26 = new java.util.Properties(properties25);
        java.util.Properties properties27 = new java.util.Properties(properties25);
        java.util.Properties properties28 = null;
        java.util.Properties properties29 = new java.util.Properties(properties28);
        java.lang.Object obj31 = properties27.put((java.lang.Object) properties29, (java.lang.Object) (short) 1);
        boolean boolean32 = properties21.remove((java.lang.Object) false, (java.lang.Object) (short) 1);
        java.util.Set<java.lang.String> strSet33 = properties21.stringPropertyNames();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties34 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties34.setThreadedTwoPhaseCommit(true);
        atomikosProperties34.setMaxActives((int) (byte) 0);
        atomikosProperties34.setEnableLogging(true);
        atomikosProperties34.setForceShutdownOnVmExit(false);
        java.lang.Object obj43 = properties21.get((java.lang.Object) false);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties44 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties44.setDefaultJtaTimeout((long) (byte) 10);
        atomikosProperties44.setCheckpointInterval((long) (byte) 0);
        atomikosProperties44.setTransactionManagerUniqueName("");
        java.util.Properties properties51 = atomikosProperties44.asProperties();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties52 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties52.setThreadedTwoPhaseCommit(true);
        atomikosProperties52.setMaxActives((int) '#');
        atomikosProperties52.setForceShutdownOnVmExit(true);
        java.lang.String str59 = atomikosProperties52.getLogBaseDir();
        java.lang.Object obj60 = properties51.remove((java.lang.Object) atomikosProperties52);
        java.util.Collection<java.lang.Object> objCollection61 = properties51.values();
        boolean boolean62 = properties4.remove((java.lang.Object) false, (java.lang.Object) properties51);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties63 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        int int64 = atomikosProperties63.getMaxActives();
        long long65 = atomikosProperties63.getMaxTimeout();
        java.lang.String str66 = atomikosProperties63.getLogBaseDir();
        atomikosProperties63.setCheckpointInterval(100L);
        java.util.Properties properties69 = null;
        java.util.Properties properties70 = new java.util.Properties(properties69);
        java.util.Properties properties71 = new java.util.Properties(properties69);
        java.util.Properties properties72 = null;
        java.util.Properties properties73 = new java.util.Properties(properties72);
        java.lang.Object obj75 = properties71.put((java.lang.Object) properties73, (java.lang.Object) (short) 1);
        java.util.Properties properties76 = new java.util.Properties(properties73);
        int int77 = properties73.size();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties78 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties78.setDefaultJtaTimeout((long) (byte) 10);
        long long81 = atomikosProperties78.getDefaultJtaTimeout();
        atomikosProperties78.setTransactionManagerUniqueName("");
        java.lang.String str84 = atomikosProperties78.getTransactionManagerUniqueName();
        boolean boolean85 = properties51.replace((java.lang.Object) atomikosProperties63, (java.lang.Object) int77, (java.lang.Object) atomikosProperties78);
        atomikosProperties78.setSerialJtaTransactions(false);
        boolean boolean88 = atomikosProperties78.isThreadedTwoPhaseCommit();
        org.junit.Assert.assertNull(obj6);
        org.junit.Assert.assertNotNull(objEnumeration7);
        org.junit.Assert.assertNotNull(objEntrySet8);
        org.junit.Assert.assertTrue("'" + long12 + "' != '" + 10L + "'", long12 == 10L);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNull(obj23);
        org.junit.Assert.assertNull(obj31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(strSet33);
        org.junit.Assert.assertNull(obj43);
        org.junit.Assert.assertNotNull(properties51);
        org.junit.Assert.assertNull(str59);
        org.junit.Assert.assertNull(obj60);
        org.junit.Assert.assertNotNull(objCollection61);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertTrue("'" + int64 + "' != '" + 50 + "'", int64 == 50);
        org.junit.Assert.assertTrue("'" + long65 + "' != '" + 300000L + "'", long65 == 300000L);
        org.junit.Assert.assertNull(str66);
        org.junit.Assert.assertNull(obj75);
        org.junit.Assert.assertTrue("'" + int77 + "' != '" + 0 + "'", int77 == 0);
        org.junit.Assert.assertTrue("'" + long81 + "' != '" + 10L + "'", long81 == 10L);
        org.junit.Assert.assertEquals("'" + str84 + "' != '" + "" + "'", str84, "");
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + false + "'", boolean85 == false);
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + false + "'", boolean88 == false);
    }

    @Test
    public void test1574() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1574");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Properties properties2 = new java.util.Properties(properties0);
        java.util.Properties properties3 = null;
        java.util.Properties properties4 = new java.util.Properties(properties3);
        java.lang.Object obj6 = properties2.put((java.lang.Object) properties4, (java.lang.Object) (short) 1);
        java.util.Enumeration<java.lang.Object> objEnumeration7 = properties4.elements();
        java.util.Properties properties8 = new java.util.Properties(properties4);
        boolean boolean9 = properties4.isEmpty();
        java.util.Properties properties10 = null;
        java.util.Properties properties11 = new java.util.Properties(properties10);
        java.util.Properties properties12 = new java.util.Properties(properties10);
        java.util.Properties properties13 = null;
        java.util.Properties properties14 = new java.util.Properties(properties13);
        java.lang.Object obj16 = properties12.put((java.lang.Object) properties14, (java.lang.Object) (short) 1);
        java.util.Properties properties18 = null;
        java.util.Properties properties19 = new java.util.Properties(properties18);
        java.util.Properties properties20 = new java.util.Properties(properties18);
        java.util.Properties properties21 = null;
        java.util.Properties properties22 = new java.util.Properties(properties21);
        java.lang.Object obj24 = properties20.put((java.lang.Object) properties22, (java.lang.Object) (short) 1);
        boolean boolean25 = properties14.remove((java.lang.Object) false, (java.lang.Object) (short) 1);
        java.util.Set<java.lang.String> strSet26 = properties14.stringPropertyNames();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties27 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties27.setThreadedTwoPhaseCommit(true);
        atomikosProperties27.setMaxActives((int) (byte) 0);
        atomikosProperties27.setEnableLogging(true);
        atomikosProperties27.setForceShutdownOnVmExit(false);
        java.lang.Object obj36 = properties14.get((java.lang.Object) false);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties37 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties37.setDefaultJtaTimeout((long) (byte) 10);
        long long40 = atomikosProperties37.getDefaultJtaTimeout();
        atomikosProperties37.setTransactionManagerUniqueName("");
        long long43 = atomikosProperties37.getDefaultJtaTimeout();
        boolean boolean44 = atomikosProperties37.isEnableLogging();
        atomikosProperties37.setService("{}");
        atomikosProperties37.setTransactionManagerUniqueName("{tmlog={com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=0, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.tm_unique_name=, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}, 4=true}");
        java.util.Properties properties49 = null;
        java.util.Properties properties50 = new java.util.Properties(properties49);
        java.util.Properties properties51 = new java.util.Properties(properties49);
        java.util.Properties properties52 = null;
        java.util.Properties properties53 = new java.util.Properties(properties52);
        java.lang.Object obj55 = properties51.put((java.lang.Object) properties53, (java.lang.Object) (short) 1);
        java.util.Properties properties57 = null;
        java.util.Properties properties58 = new java.util.Properties(properties57);
        java.util.Properties properties59 = new java.util.Properties(properties57);
        java.util.Properties properties60 = null;
        java.util.Properties properties61 = new java.util.Properties(properties60);
        java.lang.Object obj63 = properties59.put((java.lang.Object) properties61, (java.lang.Object) (short) 1);
        boolean boolean64 = properties53.remove((java.lang.Object) false, (java.lang.Object) (short) 1);
        java.lang.Object obj66 = properties53.remove((java.lang.Object) '#');
        java.util.Set<java.lang.Object> objSet67 = properties53.keySet();
        properties53.clear();
        java.util.Properties properties69 = null;
        java.util.Properties properties70 = new java.util.Properties(properties69);
        java.util.Properties properties71 = new java.util.Properties(properties69);
        java.util.Properties properties72 = null;
        java.util.Properties properties73 = new java.util.Properties(properties72);
        java.lang.Object obj75 = properties71.put((java.lang.Object) properties73, (java.lang.Object) (short) 1);
        java.util.Enumeration<java.lang.Object> objEnumeration76 = properties73.elements();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet77 = properties73.entrySet();
        boolean boolean78 = properties53.equals((java.lang.Object) properties73);
        java.util.Enumeration<java.lang.Object> objEnumeration79 = properties73.elements();
        boolean boolean80 = properties14.remove((java.lang.Object) "{tmlog={com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=0, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.tm_unique_name=, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}, 4=true}", (java.lang.Object) objEnumeration79);
        java.util.Properties properties81 = new java.util.Properties(properties14);
        properties4.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties81);
        boolean boolean83 = properties4.isEmpty();
        java.io.Writer writer84 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties4.store(writer84, "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(obj6);
        org.junit.Assert.assertNotNull(objEnumeration7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertNull(obj16);
        org.junit.Assert.assertNull(obj24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(strSet26);
        org.junit.Assert.assertNull(obj36);
        org.junit.Assert.assertTrue("'" + long40 + "' != '" + 10L + "'", long40 == 10L);
        org.junit.Assert.assertTrue("'" + long43 + "' != '" + 10L + "'", long43 == 10L);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertNull(obj55);
        org.junit.Assert.assertNull(obj63);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertNull(obj66);
        org.junit.Assert.assertNotNull(objSet67);
        org.junit.Assert.assertNull(obj75);
        org.junit.Assert.assertNotNull(objEnumeration76);
        org.junit.Assert.assertNotNull(objEntrySet77);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + true + "'", boolean78 == true);
        org.junit.Assert.assertNotNull(objEnumeration79);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", boolean80 == false);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + true + "'", boolean83 == true);
    }

    @Test
    public void test1575() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1575");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setDefaultJtaTimeout((long) (byte) 10);
        atomikosProperties0.setCheckpointInterval((long) (byte) 0);
        atomikosProperties0.setTransactionManagerUniqueName("");
        java.util.Properties properties7 = atomikosProperties0.asProperties();
        java.lang.String str8 = atomikosProperties0.getLogBaseName();
        java.util.Properties properties9 = atomikosProperties0.asProperties();
        atomikosProperties0.setEnableLogging(true);
        atomikosProperties0.setForceShutdownOnVmExit(false);
        long long14 = atomikosProperties0.getMaxTimeout();
        atomikosProperties0.setForceShutdownOnVmExit(true);
        java.util.Properties properties17 = atomikosProperties0.asProperties();
        java.io.PrintWriter printWriter18 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties17.list(printWriter18);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(properties7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "tmlog" + "'", str8, "tmlog");
        org.junit.Assert.assertNotNull(properties9);
        org.junit.Assert.assertTrue("'" + long14 + "' != '" + 300000L + "'", long14 == 300000L);
        org.junit.Assert.assertNotNull(properties17);
    }

    @Test
    public void test1576() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1576");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Properties properties2 = new java.util.Properties(properties0);
        java.util.Properties properties3 = null;
        java.util.Properties properties4 = new java.util.Properties(properties3);
        java.lang.Object obj6 = properties2.put((java.lang.Object) properties4, (java.lang.Object) (short) 1);
        java.util.Properties properties8 = null;
        java.util.Properties properties9 = new java.util.Properties(properties8);
        java.util.Properties properties10 = new java.util.Properties(properties8);
        java.util.Properties properties11 = null;
        java.util.Properties properties12 = new java.util.Properties(properties11);
        java.lang.Object obj14 = properties10.put((java.lang.Object) properties12, (java.lang.Object) (short) 1);
        boolean boolean15 = properties4.remove((java.lang.Object) false, (java.lang.Object) (short) 1);
        java.util.Properties properties16 = new java.util.Properties(properties4);
        java.util.Properties properties17 = new java.util.Properties(properties4);
        java.util.Set<java.lang.String> strSet18 = properties4.stringPropertyNames();
        java.util.Properties properties19 = new java.util.Properties(properties4);
        java.util.Properties properties20 = null;
        java.util.Properties properties21 = new java.util.Properties(properties20);
        java.util.Properties properties22 = new java.util.Properties(properties20);
        boolean boolean24 = properties22.containsValue((java.lang.Object) (short) 100);
        java.util.Enumeration<java.lang.Object> objEnumeration25 = properties22.keys();
        java.util.Properties properties26 = null;
        java.util.Properties properties27 = new java.util.Properties(properties26);
        java.util.Properties properties28 = new java.util.Properties(properties26);
        java.util.Properties properties29 = null;
        java.util.Properties properties30 = new java.util.Properties(properties29);
        java.lang.Object obj32 = properties28.put((java.lang.Object) properties30, (java.lang.Object) (short) 1);
        boolean boolean33 = properties28.isEmpty();
        java.util.Properties properties34 = null;
        java.util.Properties properties35 = new java.util.Properties(properties34);
        java.util.Properties properties36 = new java.util.Properties(properties34);
        boolean boolean37 = properties28.containsKey((java.lang.Object) properties36);
        java.util.Properties properties38 = new java.util.Properties(properties36);
        java.lang.Object obj39 = properties38.clone();
        java.lang.Object obj40 = properties22.remove(obj39);
        properties22.clear();
        java.util.Properties properties42 = null;
        java.util.Properties properties43 = new java.util.Properties(properties42);
        java.util.Properties properties44 = new java.util.Properties(properties42);
        java.util.Properties properties45 = null;
        java.util.Properties properties46 = new java.util.Properties(properties45);
        java.lang.Object obj48 = properties44.put((java.lang.Object) properties46, (java.lang.Object) (short) 1);
        properties46.clear();
        int int50 = properties46.size();
        java.util.Properties properties51 = null;
        java.util.Properties properties52 = new java.util.Properties(properties51);
        java.util.Properties properties53 = new java.util.Properties(properties51);
        java.util.Properties properties54 = null;
        java.util.Properties properties55 = new java.util.Properties(properties54);
        java.lang.Object obj57 = properties53.put((java.lang.Object) properties55, (java.lang.Object) (short) 1);
        java.util.Properties properties58 = new java.util.Properties(properties55);
        java.util.Properties properties59 = new java.util.Properties(properties55);
        boolean boolean61 = properties46.remove((java.lang.Object) properties55, (java.lang.Object) 10.0f);
        java.util.Enumeration<java.lang.Object> objEnumeration62 = properties55.elements();
        java.util.Properties properties63 = new java.util.Properties(properties55);
        java.util.Properties properties64 = null;
        java.util.Properties properties65 = new java.util.Properties(properties64);
        java.util.Properties properties66 = new java.util.Properties(properties64);
        java.lang.Object obj67 = properties66.clone();
        java.lang.Object obj70 = properties66.setProperty("tmlog", "");
        properties55.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties66);
        java.util.Collection<java.lang.Object> objCollection72 = properties66.values();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties73 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        int int74 = atomikosProperties73.getMaxActives();
        long long75 = atomikosProperties73.getMaxTimeout();
        java.util.Properties properties76 = atomikosProperties73.asProperties();
        java.lang.Class<?> wildcardClass77 = properties76.getClass();
        java.lang.Object obj78 = properties22.getOrDefault((java.lang.Object) properties66, (java.lang.Object) properties76);
        java.util.Properties properties79 = new java.util.Properties(properties66);
        java.util.Properties properties80 = null;
        java.util.Properties properties81 = new java.util.Properties(properties80);
        java.util.Properties properties82 = new java.util.Properties(properties80);
        java.util.Properties properties83 = null;
        java.util.Properties properties84 = new java.util.Properties(properties83);
        java.lang.Object obj86 = properties82.put((java.lang.Object) properties84, (java.lang.Object) (short) 1);
        boolean boolean87 = properties82.isEmpty();
        java.util.Properties properties88 = null;
        java.util.Properties properties89 = new java.util.Properties(properties88);
        java.util.Properties properties90 = new java.util.Properties(properties88);
        boolean boolean91 = properties82.containsKey((java.lang.Object) properties90);
        java.util.Properties properties92 = new java.util.Properties(properties90);
        java.lang.Object obj93 = properties92.clone();
        java.util.Set<java.lang.String> strSet94 = properties92.stringPropertyNames();
        java.util.Properties properties95 = new java.util.Properties(properties92);
        java.lang.Object obj96 = properties4.getOrDefault((java.lang.Object) properties66, (java.lang.Object) properties92);
        java.io.InputStream inputStream97 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties66.load(inputStream97);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(obj6);
        org.junit.Assert.assertNull(obj14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(strSet18);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(objEnumeration25);
        org.junit.Assert.assertNull(obj32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertNotNull(obj39);
        org.junit.Assert.assertEquals(obj39.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj39), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj39), "{}");
        org.junit.Assert.assertNull(obj40);
        org.junit.Assert.assertNull(obj48);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + 0 + "'", int50 == 0);
        org.junit.Assert.assertNull(obj57);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertNotNull(objEnumeration62);
        org.junit.Assert.assertNotNull(obj67);
        org.junit.Assert.assertEquals(obj67.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj67), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj67), "{}");
        org.junit.Assert.assertNull(obj70);
        org.junit.Assert.assertNotNull(objCollection72);
        org.junit.Assert.assertTrue("'" + int74 + "' != '" + 50 + "'", int74 == 50);
        org.junit.Assert.assertTrue("'" + long75 + "' != '" + 300000L + "'", long75 == 300000L);
        org.junit.Assert.assertNotNull(properties76);
        org.junit.Assert.assertNotNull(wildcardClass77);
        org.junit.Assert.assertNotNull(obj78);
// flaky:         org.junit.Assert.assertEquals(obj78.toString(), "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
// flaky:         org.junit.Assert.assertEquals(java.lang.String.valueOf(obj78), "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
// flaky:         org.junit.Assert.assertEquals(java.util.Objects.toString(obj78), "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
        org.junit.Assert.assertNull(obj86);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + false + "'", boolean87 == false);
        org.junit.Assert.assertTrue("'" + boolean91 + "' != '" + true + "'", boolean91 == true);
        org.junit.Assert.assertNotNull(obj93);
        org.junit.Assert.assertEquals(obj93.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj93), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj93), "{}");
        org.junit.Assert.assertNotNull(strSet94);
        org.junit.Assert.assertNotNull(obj96);
        org.junit.Assert.assertEquals(obj96.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj96), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj96), "{}");
    }

    @Test
    public void test1577() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1577");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Properties properties2 = new java.util.Properties(properties0);
        java.util.Properties properties3 = null;
        java.util.Properties properties4 = new java.util.Properties(properties3);
        java.lang.Object obj6 = properties2.put((java.lang.Object) properties4, (java.lang.Object) (short) 1);
        java.util.Enumeration<java.lang.Object> objEnumeration7 = properties4.elements();
        java.lang.String str8 = properties4.toString();
        java.util.Properties properties9 = null;
        java.util.Properties properties10 = new java.util.Properties(properties9);
        java.util.Properties properties11 = new java.util.Properties(properties9);
        java.util.Properties properties12 = null;
        java.util.Properties properties13 = new java.util.Properties(properties12);
        java.lang.Object obj15 = properties11.put((java.lang.Object) properties13, (java.lang.Object) (short) 1);
        properties13.clear();
        java.lang.String str18 = properties13.getProperty("");
        java.util.Properties properties19 = null;
        java.util.Properties properties20 = new java.util.Properties(properties19);
        java.util.Properties properties21 = new java.util.Properties(properties19);
        java.util.Properties properties22 = null;
        java.util.Properties properties23 = new java.util.Properties(properties22);
        java.lang.Object obj25 = properties21.put((java.lang.Object) properties23, (java.lang.Object) (short) 1);
        properties13.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties21);
        java.util.Enumeration<java.lang.Object> objEnumeration27 = properties13.keys();
        java.util.Enumeration<java.lang.Object> objEnumeration28 = properties13.elements();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties29 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties29.setDefaultJtaTimeout((long) (byte) 10);
        atomikosProperties29.setCheckpointInterval((long) (byte) 0);
        atomikosProperties29.setEnableLogging(true);
        java.lang.String str36 = atomikosProperties29.getLogBaseName();
        atomikosProperties29.setMaxActives((int) (short) 100);
        boolean boolean39 = properties4.remove((java.lang.Object) properties13, (java.lang.Object) atomikosProperties29);
        java.util.Properties properties40 = new java.util.Properties(properties13);
        boolean boolean41 = properties40.isEmpty();
        java.io.Writer writer42 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties40.store(writer42, "{tmlog=}");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(obj6);
        org.junit.Assert.assertNotNull(objEnumeration7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "{}" + "'", str8, "{}");
        org.junit.Assert.assertNull(obj15);
        org.junit.Assert.assertNull(str18);
        org.junit.Assert.assertNull(obj25);
        org.junit.Assert.assertNotNull(objEnumeration27);
        org.junit.Assert.assertNotNull(objEnumeration28);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "tmlog" + "'", str36, "tmlog");
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
    }

    @Test
    public void test1578() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1578");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Properties properties2 = new java.util.Properties(properties0);
        java.util.Properties properties3 = null;
        java.util.Properties properties4 = new java.util.Properties(properties3);
        java.lang.Object obj6 = properties2.put((java.lang.Object) properties4, (java.lang.Object) (short) 1);
        properties4.clear();
        int int8 = properties4.size();
        java.util.Properties properties9 = null;
        java.util.Properties properties10 = new java.util.Properties(properties9);
        java.util.Properties properties11 = new java.util.Properties(properties9);
        java.util.Properties properties12 = null;
        java.util.Properties properties13 = new java.util.Properties(properties12);
        java.lang.Object obj15 = properties11.put((java.lang.Object) properties13, (java.lang.Object) (short) 1);
        java.util.Properties properties16 = new java.util.Properties(properties13);
        java.util.Properties properties17 = new java.util.Properties(properties13);
        boolean boolean19 = properties4.remove((java.lang.Object) properties13, (java.lang.Object) 10.0f);
        java.util.Enumeration<java.lang.Object> objEnumeration20 = properties13.elements();
        java.util.Properties properties21 = new java.util.Properties(properties13);
        boolean boolean23 = properties13.contains((java.lang.Object) (byte) 100);
        java.io.OutputStream outputStream24 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties13.storeToXML(outputStream24, "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=0, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog, {}={}}");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(obj6);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertNull(obj15);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(objEnumeration20);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
    }

    @Test
    public void test1579() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1579");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Properties properties2 = new java.util.Properties(properties0);
        java.util.Properties properties3 = null;
        java.util.Properties properties4 = new java.util.Properties(properties3);
        java.lang.Object obj6 = properties2.put((java.lang.Object) properties4, (java.lang.Object) (short) 1);
        java.util.Properties properties8 = null;
        java.util.Properties properties9 = new java.util.Properties(properties8);
        java.util.Properties properties10 = new java.util.Properties(properties8);
        java.util.Properties properties11 = null;
        java.util.Properties properties12 = new java.util.Properties(properties11);
        java.lang.Object obj14 = properties10.put((java.lang.Object) properties12, (java.lang.Object) (short) 1);
        boolean boolean15 = properties4.remove((java.lang.Object) false, (java.lang.Object) (short) 1);
        java.util.Properties properties16 = new java.util.Properties(properties4);
        int int17 = properties16.size();
        java.util.Properties properties18 = null;
        java.util.Properties properties19 = new java.util.Properties(properties18);
        java.util.Properties properties20 = new java.util.Properties(properties18);
        java.util.Properties properties21 = null;
        java.util.Properties properties22 = new java.util.Properties(properties21);
        java.lang.Object obj24 = properties20.put((java.lang.Object) properties22, (java.lang.Object) (short) 1);
        java.util.Enumeration<java.lang.Object> objEnumeration25 = properties22.elements();
        java.util.Properties properties26 = new java.util.Properties(properties22);
        boolean boolean27 = properties16.contains((java.lang.Object) properties22);
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet28 = properties16.entrySet();
        java.util.Properties properties29 = null;
        java.util.Properties properties30 = new java.util.Properties(properties29);
        java.util.Properties properties31 = new java.util.Properties(properties29);
        java.util.Properties properties32 = null;
        java.util.Properties properties33 = new java.util.Properties(properties32);
        java.lang.Object obj35 = properties31.put((java.lang.Object) properties33, (java.lang.Object) (short) 1);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties36 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties36.setThreadedTwoPhaseCommit(true);
        atomikosProperties36.setMaxActives((int) (byte) 0);
        boolean boolean41 = properties31.containsValue((java.lang.Object) atomikosProperties36);
        atomikosProperties36.setCheckpointInterval((long) 9);
        atomikosProperties36.setEnableLogging(false);
        boolean boolean46 = properties16.containsValue((java.lang.Object) atomikosProperties36);
        java.lang.String str47 = atomikosProperties36.getLogBaseName();
        atomikosProperties36.setEnableLogging(true);
        java.lang.String str50 = atomikosProperties36.getLogBaseDir();
        org.junit.Assert.assertNull(obj6);
        org.junit.Assert.assertNull(obj14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 0 + "'", int17 == 0);
        org.junit.Assert.assertNull(obj24);
        org.junit.Assert.assertNotNull(objEnumeration25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(objEntrySet28);
        org.junit.Assert.assertNull(obj35);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "tmlog" + "'", str47, "tmlog");
        org.junit.Assert.assertNull(str50);
    }

    @Test
    public void test1580() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1580");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Properties properties2 = new java.util.Properties(properties0);
        java.util.Properties properties3 = null;
        java.util.Properties properties4 = new java.util.Properties(properties3);
        java.lang.Object obj6 = properties2.put((java.lang.Object) properties4, (java.lang.Object) (short) 1);
        java.util.Properties properties8 = null;
        java.util.Properties properties9 = new java.util.Properties(properties8);
        java.util.Properties properties10 = new java.util.Properties(properties8);
        java.util.Properties properties11 = null;
        java.util.Properties properties12 = new java.util.Properties(properties11);
        java.lang.Object obj14 = properties10.put((java.lang.Object) properties12, (java.lang.Object) (short) 1);
        boolean boolean15 = properties4.remove((java.lang.Object) false, (java.lang.Object) (short) 1);
        java.util.Set<java.lang.String> strSet16 = properties4.stringPropertyNames();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties17 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties17.setDefaultJtaTimeout((long) (byte) 10);
        long long20 = atomikosProperties17.getDefaultJtaTimeout();
        java.lang.Object obj21 = properties4.get((java.lang.Object) atomikosProperties17);
        java.io.OutputStream outputStream22 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties4.storeToXML(outputStream22, "{{tmlog={com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=0, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.tm_unique_name=, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}, 4=true}={com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=0, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog, {}={}}}");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(obj6);
        org.junit.Assert.assertNull(obj14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(strSet16);
        org.junit.Assert.assertTrue("'" + long20 + "' != '" + 10L + "'", long20 == 10L);
        org.junit.Assert.assertNull(obj21);
    }

    @Test
    public void test1581() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1581");
        java.util.Properties properties0 = new java.util.Properties();
        java.util.Enumeration<?> wildcardEnumeration1 = properties0.propertyNames();
        java.util.Properties properties3 = null;
        java.util.Properties properties4 = new java.util.Properties(properties3);
        java.util.Properties properties5 = new java.util.Properties(properties3);
        java.util.Properties properties6 = null;
        java.util.Properties properties7 = new java.util.Properties(properties6);
        java.lang.Object obj9 = properties5.put((java.lang.Object) properties7, (java.lang.Object) (short) 1);
        java.util.Properties properties10 = new java.util.Properties(properties7);
        java.util.Enumeration<java.lang.Object> objEnumeration11 = properties10.elements();
        java.lang.Object obj12 = properties0.put((java.lang.Object) (-1.0f), (java.lang.Object) objEnumeration11);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties13 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties13.setDefaultJtaTimeout((long) (byte) 10);
        java.util.Properties properties16 = atomikosProperties13.asProperties();
        java.lang.Object obj17 = properties0.remove((java.lang.Object) atomikosProperties13);
        atomikosProperties13.setService("{tmlog={}}");
        org.junit.Assert.assertNotNull(wildcardEnumeration1);
        org.junit.Assert.assertNull(obj9);
        org.junit.Assert.assertNotNull(objEnumeration11);
        org.junit.Assert.assertNull(obj12);
        org.junit.Assert.assertNotNull(properties16);
        org.junit.Assert.assertNull(obj17);
    }

    @Test
    public void test1582() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1582");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setThreadedTwoPhaseCommit(true);
        atomikosProperties0.setMaxActives((int) (byte) 0);
        atomikosProperties0.setEnableLogging(true);
        atomikosProperties0.setForceShutdownOnVmExit(false);
        boolean boolean9 = atomikosProperties0.isThreadedTwoPhaseCommit();
        atomikosProperties0.setMaxTimeout(10L);
        atomikosProperties0.setForceShutdownOnVmExit(false);
        atomikosProperties0.setMaxTimeout((long) 35);
        java.lang.String str16 = atomikosProperties0.getService();
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertNull(str16);
    }

    @Test
    public void test1583() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1583");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Properties properties2 = new java.util.Properties(properties0);
        boolean boolean4 = properties2.containsValue((java.lang.Object) (short) 100);
        java.util.Properties properties5 = new java.util.Properties(properties2);
        java.util.Enumeration<java.lang.Object> objEnumeration6 = properties5.keys();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties7 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties7.setDefaultJtaTimeout((long) (byte) 10);
        atomikosProperties7.setCheckpointInterval((long) (byte) 0);
        atomikosProperties7.setEnableLogging(true);
        long long14 = atomikosProperties7.getDefaultJtaTimeout();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties15 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties15.setThreadedTwoPhaseCommit(true);
        atomikosProperties15.setMaxActives((int) (byte) 0);
        atomikosProperties15.setDefaultJtaTimeout((long) 10);
        atomikosProperties15.setDefaultJtaTimeout((long) (short) 10);
        boolean boolean24 = atomikosProperties15.isSerialJtaTransactions();
        boolean boolean25 = properties5.remove((java.lang.Object) atomikosProperties7, (java.lang.Object) atomikosProperties15);
        java.util.Properties properties26 = new java.util.Properties(properties5);
        java.io.Reader reader27 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties26.load(reader27);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(objEnumeration6);
        org.junit.Assert.assertTrue("'" + long14 + "' != '" + 10L + "'", long14 == 10L);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
    }

    @Test
    public void test1584() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1584");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Properties properties2 = new java.util.Properties(properties0);
        java.util.Properties properties3 = null;
        java.util.Properties properties4 = new java.util.Properties(properties3);
        java.lang.Object obj6 = properties2.put((java.lang.Object) properties4, (java.lang.Object) (short) 1);
        java.util.Properties properties7 = new java.util.Properties(properties4);
        java.util.Enumeration<java.lang.Object> objEnumeration8 = properties7.elements();
        java.util.Enumeration<java.lang.Object> objEnumeration9 = properties7.elements();
        java.util.Properties properties10 = new java.util.Properties(properties7);
        java.io.InputStream inputStream11 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties10.load(inputStream11);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(obj6);
        org.junit.Assert.assertNotNull(objEnumeration8);
        org.junit.Assert.assertNotNull(objEnumeration9);
    }

    @Test
    public void test1585() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1585");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Properties properties2 = new java.util.Properties(properties0);
        boolean boolean4 = properties2.containsValue((java.lang.Object) (short) 100);
        java.util.Enumeration<java.lang.Object> objEnumeration5 = properties2.keys();
        java.util.Properties properties6 = null;
        java.util.Properties properties7 = new java.util.Properties(properties6);
        java.util.Properties properties8 = new java.util.Properties(properties6);
        java.util.Properties properties9 = null;
        java.util.Properties properties10 = new java.util.Properties(properties9);
        java.lang.Object obj12 = properties8.put((java.lang.Object) properties10, (java.lang.Object) (short) 1);
        boolean boolean13 = properties8.isEmpty();
        java.util.Properties properties14 = null;
        java.util.Properties properties15 = new java.util.Properties(properties14);
        java.util.Properties properties16 = new java.util.Properties(properties14);
        boolean boolean17 = properties8.containsKey((java.lang.Object) properties16);
        java.util.Properties properties18 = new java.util.Properties(properties16);
        java.lang.Object obj19 = properties18.clone();
        java.lang.Object obj20 = properties2.remove(obj19);
        java.util.Collection<java.lang.Object> objCollection21 = properties2.values();
        java.util.Properties properties22 = new java.util.Properties(properties2);
        java.io.InputStream inputStream23 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties2.loadFromXML(inputStream23);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(objEnumeration5);
        org.junit.Assert.assertNull(obj12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(obj19);
        org.junit.Assert.assertEquals(obj19.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj19), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj19), "{}");
        org.junit.Assert.assertNull(obj20);
        org.junit.Assert.assertNotNull(objCollection21);
    }

    @Test
    public void test1586() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1586");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Properties properties2 = new java.util.Properties(properties0);
        java.util.Properties properties3 = null;
        java.util.Properties properties4 = new java.util.Properties(properties3);
        java.lang.Object obj6 = properties2.put((java.lang.Object) properties4, (java.lang.Object) (short) 1);
        java.util.Properties properties8 = null;
        java.util.Properties properties9 = new java.util.Properties(properties8);
        java.util.Properties properties10 = new java.util.Properties(properties8);
        java.util.Properties properties11 = null;
        java.util.Properties properties12 = new java.util.Properties(properties11);
        java.lang.Object obj14 = properties10.put((java.lang.Object) properties12, (java.lang.Object) (short) 1);
        boolean boolean15 = properties4.remove((java.lang.Object) false, (java.lang.Object) (short) 1);
        java.util.Enumeration<java.lang.Object> objEnumeration16 = properties4.keys();
        java.util.Properties properties17 = null;
        java.util.Properties properties18 = new java.util.Properties(properties17);
        java.util.Properties properties19 = new java.util.Properties(properties17);
        java.util.Properties properties20 = null;
        java.util.Properties properties21 = new java.util.Properties(properties20);
        java.lang.Object obj23 = properties19.put((java.lang.Object) properties21, (java.lang.Object) (short) 1);
        boolean boolean24 = properties19.isEmpty();
        java.util.Properties properties25 = null;
        java.util.Properties properties26 = new java.util.Properties(properties25);
        java.util.Properties properties27 = new java.util.Properties(properties25);
        boolean boolean28 = properties19.containsKey((java.lang.Object) properties27);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties29 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties29.setThreadedTwoPhaseCommit(true);
        atomikosProperties29.setMaxActives((int) (byte) 0);
        java.lang.Object obj34 = properties4.getOrDefault((java.lang.Object) boolean28, (java.lang.Object) (byte) 0);
        java.util.Properties properties35 = null;
        java.util.Properties properties36 = new java.util.Properties(properties35);
        java.util.Properties properties37 = new java.util.Properties(properties35);
        java.util.Properties properties38 = null;
        java.util.Properties properties39 = new java.util.Properties(properties38);
        java.lang.Object obj41 = properties37.put((java.lang.Object) properties39, (java.lang.Object) (short) 1);
        java.util.Properties properties43 = null;
        java.util.Properties properties44 = new java.util.Properties(properties43);
        java.util.Properties properties45 = new java.util.Properties(properties43);
        java.util.Properties properties46 = null;
        java.util.Properties properties47 = new java.util.Properties(properties46);
        java.lang.Object obj49 = properties45.put((java.lang.Object) properties47, (java.lang.Object) (short) 1);
        boolean boolean50 = properties39.remove((java.lang.Object) false, (java.lang.Object) (short) 1);
        java.util.Enumeration<java.lang.Object> objEnumeration51 = properties39.keys();
        java.util.Properties properties52 = null;
        java.util.Properties properties53 = new java.util.Properties(properties52);
        java.util.Properties properties54 = new java.util.Properties(properties52);
        java.util.Properties properties55 = null;
        java.util.Properties properties56 = new java.util.Properties(properties55);
        java.lang.Object obj58 = properties54.put((java.lang.Object) properties56, (java.lang.Object) (short) 1);
        boolean boolean59 = properties54.isEmpty();
        java.util.Properties properties60 = null;
        java.util.Properties properties61 = new java.util.Properties(properties60);
        java.util.Properties properties62 = new java.util.Properties(properties60);
        boolean boolean63 = properties54.containsKey((java.lang.Object) properties62);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties64 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties64.setThreadedTwoPhaseCommit(true);
        atomikosProperties64.setMaxActives((int) (byte) 0);
        java.lang.Object obj69 = properties39.getOrDefault((java.lang.Object) boolean63, (java.lang.Object) (byte) 0);
        boolean boolean70 = properties4.equals((java.lang.Object) (byte) 0);
        java.util.Properties properties71 = null;
        java.util.Properties properties72 = new java.util.Properties(properties71);
        java.util.Properties properties73 = new java.util.Properties(properties71);
        java.util.Properties properties74 = null;
        java.util.Properties properties75 = new java.util.Properties(properties74);
        java.lang.Object obj77 = properties73.put((java.lang.Object) properties75, (java.lang.Object) (short) 1);
        properties75.clear();
        int int79 = properties75.size();
        java.lang.Object obj82 = properties75.setProperty("hi!", "hi!");
        java.lang.Object obj85 = properties75.setProperty("tmlog", "tmlog");
        java.util.Enumeration<java.lang.Object> objEnumeration86 = properties75.elements();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties87 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties87.setDefaultJtaTimeout((long) (byte) 10);
        atomikosProperties87.setSerialJtaTransactions(false);
        java.lang.Object obj92 = properties4.putIfAbsent((java.lang.Object) objEnumeration86, (java.lang.Object) false);
        int int93 = properties4.size();
        java.lang.Object obj94 = properties4.clone();
        java.util.Properties properties95 = new java.util.Properties(properties4);
        java.util.Set<java.lang.String> strSet96 = properties95.stringPropertyNames();
        java.lang.String str97 = properties95.toString();
        org.junit.Assert.assertNull(obj6);
        org.junit.Assert.assertNull(obj14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(objEnumeration16);
        org.junit.Assert.assertNull(obj23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertEquals("'" + obj34 + "' != '" + (byte) 0 + "'", obj34, (byte) 0);
        org.junit.Assert.assertNull(obj41);
        org.junit.Assert.assertNull(obj49);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertNotNull(objEnumeration51);
        org.junit.Assert.assertNull(obj58);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertEquals("'" + obj69 + "' != '" + (byte) 0 + "'", obj69, (byte) 0);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertNull(obj77);
        org.junit.Assert.assertTrue("'" + int79 + "' != '" + 0 + "'", int79 == 0);
        org.junit.Assert.assertNull(obj82);
        org.junit.Assert.assertNull(obj85);
        org.junit.Assert.assertNotNull(objEnumeration86);
        org.junit.Assert.assertNull(obj92);
        org.junit.Assert.assertTrue("'" + int93 + "' != '" + 1 + "'", int93 == 1);
        org.junit.Assert.assertNotNull(obj94);
        org.junit.Assert.assertNotNull(strSet96);
        org.junit.Assert.assertEquals("'" + str97 + "' != '" + "{}" + "'", str97, "{}");
    }

    @Test
    public void test1587() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1587");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        int int1 = atomikosProperties0.getMaxActives();
        long long2 = atomikosProperties0.getMaxTimeout();
        java.util.Properties properties3 = atomikosProperties0.asProperties();
        atomikosProperties0.setLogBaseName("hi!");
        atomikosProperties0.setSerialJtaTransactions(false);
        long long8 = atomikosProperties0.getMaxTimeout();
        java.lang.String str9 = atomikosProperties0.getLogBaseName();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 50 + "'", int1 == 50);
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + 300000L + "'", long2 == 300000L);
        org.junit.Assert.assertNotNull(properties3);
        org.junit.Assert.assertTrue("'" + long8 + "' != '" + 300000L + "'", long8 == 300000L);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "hi!" + "'", str9, "hi!");
    }

    @Test
    public void test1588() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1588");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Properties properties2 = new java.util.Properties(properties0);
        java.util.Properties properties3 = null;
        java.util.Properties properties4 = new java.util.Properties(properties3);
        java.lang.Object obj6 = properties2.put((java.lang.Object) properties4, (java.lang.Object) (short) 1);
        properties4.clear();
        int int8 = properties4.size();
        java.util.Properties properties9 = null;
        java.util.Properties properties10 = new java.util.Properties(properties9);
        java.util.Properties properties11 = new java.util.Properties(properties9);
        java.util.Properties properties12 = null;
        java.util.Properties properties13 = new java.util.Properties(properties12);
        java.lang.Object obj15 = properties11.put((java.lang.Object) properties13, (java.lang.Object) (short) 1);
        java.util.Properties properties16 = new java.util.Properties(properties13);
        java.util.Properties properties17 = new java.util.Properties(properties13);
        boolean boolean19 = properties4.remove((java.lang.Object) properties13, (java.lang.Object) 10.0f);
        java.util.Enumeration<java.lang.Object> objEnumeration20 = properties13.elements();
        java.util.Enumeration<java.lang.Object> objEnumeration21 = properties13.keys();
        java.lang.Object obj22 = properties13.clone();
        java.util.Collection<java.lang.Object> objCollection23 = properties13.values();
        java.lang.Class<?> wildcardClass24 = properties13.getClass();
        org.junit.Assert.assertNull(obj6);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertNull(obj15);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(objEnumeration20);
        org.junit.Assert.assertNotNull(objEnumeration21);
        org.junit.Assert.assertNotNull(obj22);
        org.junit.Assert.assertEquals(obj22.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj22), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj22), "{}");
        org.junit.Assert.assertNotNull(objCollection23);
        org.junit.Assert.assertNotNull(wildcardClass24);
    }

    @Test
    public void test1589() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1589");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Properties properties2 = new java.util.Properties(properties0);
        java.util.Properties properties3 = null;
        java.util.Properties properties4 = new java.util.Properties(properties3);
        java.lang.Object obj6 = properties2.put((java.lang.Object) properties4, (java.lang.Object) (short) 1);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties7 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties7.setThreadedTwoPhaseCommit(true);
        atomikosProperties7.setMaxActives((int) (byte) 0);
        boolean boolean12 = properties2.containsValue((java.lang.Object) atomikosProperties7);
        java.lang.Object obj13 = null;
        java.util.Properties properties14 = null;
        java.util.Properties properties15 = new java.util.Properties(properties14);
        java.util.Properties properties16 = new java.util.Properties(properties14);
        java.util.Properties properties17 = null;
        java.util.Properties properties18 = new java.util.Properties(properties17);
        java.lang.Object obj20 = properties16.put((java.lang.Object) properties18, (java.lang.Object) (short) 1);
        java.util.Properties properties21 = new java.util.Properties(properties18);
        java.util.Properties properties22 = new java.util.Properties(properties18);
        java.util.Set<java.lang.Object> objSet23 = properties22.keySet();
        java.util.Properties properties24 = new java.util.Properties(properties22);
        java.util.Properties properties25 = null;
        java.util.Properties properties26 = new java.util.Properties(properties25);
        java.util.Properties properties27 = new java.util.Properties(properties25);
        java.util.Properties properties28 = null;
        java.util.Properties properties29 = new java.util.Properties(properties28);
        java.lang.Object obj31 = properties27.put((java.lang.Object) properties29, (java.lang.Object) (short) 1);
        java.util.Properties properties33 = null;
        java.util.Properties properties34 = new java.util.Properties(properties33);
        java.util.Properties properties35 = new java.util.Properties(properties33);
        java.util.Properties properties36 = null;
        java.util.Properties properties37 = new java.util.Properties(properties36);
        java.lang.Object obj39 = properties35.put((java.lang.Object) properties37, (java.lang.Object) (short) 1);
        boolean boolean40 = properties29.remove((java.lang.Object) false, (java.lang.Object) (short) 1);
        java.util.Set<java.lang.String> strSet41 = properties29.stringPropertyNames();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties42 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties42.setDefaultJtaTimeout((long) (byte) 10);
        atomikosProperties42.setCheckpointInterval((long) (byte) 0);
        atomikosProperties42.setTransactionManagerUniqueName("");
        boolean boolean49 = atomikosProperties42.isEnableLogging();
        atomikosProperties42.setSerialJtaTransactions(false);
        atomikosProperties42.setLogBaseDir("");
        java.util.Properties properties54 = null;
        java.util.Properties properties55 = new java.util.Properties(properties54);
        java.util.Properties properties56 = new java.util.Properties(properties54);
        java.util.Properties properties57 = null;
        java.util.Properties properties58 = new java.util.Properties(properties57);
        java.lang.Object obj60 = properties56.put((java.lang.Object) properties58, (java.lang.Object) (short) 1);
        java.util.Properties properties61 = new java.util.Properties(properties58);
        boolean boolean62 = properties29.remove((java.lang.Object) "", (java.lang.Object) properties61);
        java.util.Properties properties63 = null;
        java.util.Properties properties64 = new java.util.Properties(properties63);
        java.util.Properties properties65 = new java.util.Properties(properties63);
        java.lang.Object obj66 = properties65.clone();
        boolean boolean67 = properties29.contains(obj66);
        properties22.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties29);
        java.lang.Object obj70 = properties22.get((java.lang.Object) 10L);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj71 = properties2.putIfAbsent(obj13, obj70);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(obj6);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNull(obj20);
        org.junit.Assert.assertNotNull(objSet23);
        org.junit.Assert.assertNull(obj31);
        org.junit.Assert.assertNull(obj39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(strSet41);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertNull(obj60);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertNotNull(obj66);
        org.junit.Assert.assertEquals(obj66.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj66), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj66), "{}");
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertNull(obj70);
    }

    @Test
    public void test1590() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1590");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setDefaultJtaTimeout((long) (byte) 10);
        atomikosProperties0.setCheckpointInterval((long) (byte) 0);
        atomikosProperties0.setTransactionManagerUniqueName("");
        boolean boolean7 = atomikosProperties0.isEnableLogging();
        java.lang.String str8 = atomikosProperties0.getLogBaseName();
        atomikosProperties0.setThreadedTwoPhaseCommit(false);
        boolean boolean11 = atomikosProperties0.isThreadedTwoPhaseCommit();
        java.util.Properties properties12 = atomikosProperties0.asProperties();
        java.util.Enumeration<java.lang.Object> objEnumeration13 = properties12.keys();
        java.util.Enumeration<java.lang.Object> objEnumeration14 = properties12.elements();
        java.lang.Object obj15 = null;
        boolean boolean16 = properties12.equals(obj15);
        java.lang.Object obj17 = null;
        java.util.Properties properties18 = null;
        java.util.Properties properties19 = new java.util.Properties(properties18);
        java.util.Properties properties20 = new java.util.Properties(properties18);
        boolean boolean22 = properties20.containsValue((java.lang.Object) (short) 100);
        java.util.Properties properties23 = null;
        java.util.Properties properties24 = new java.util.Properties(properties23);
        java.util.Properties properties25 = new java.util.Properties(properties23);
        java.util.Properties properties26 = null;
        java.util.Properties properties27 = new java.util.Properties(properties26);
        java.lang.Object obj29 = properties25.put((java.lang.Object) properties27, (java.lang.Object) (short) 1);
        java.util.Enumeration<java.lang.Object> objEnumeration30 = properties27.elements();
        java.lang.Object obj31 = properties20.remove((java.lang.Object) properties27);
        java.lang.Object obj34 = properties27.setProperty("", "");
        java.util.Properties properties35 = null;
        java.util.Properties properties36 = new java.util.Properties(properties35);
        java.util.Properties properties37 = new java.util.Properties(properties35);
        java.util.Properties properties38 = null;
        java.util.Properties properties39 = new java.util.Properties(properties38);
        java.lang.Object obj41 = properties37.put((java.lang.Object) properties39, (java.lang.Object) (short) 1);
        java.util.Properties properties43 = null;
        java.util.Properties properties44 = new java.util.Properties(properties43);
        java.util.Properties properties45 = new java.util.Properties(properties43);
        java.util.Properties properties46 = null;
        java.util.Properties properties47 = new java.util.Properties(properties46);
        java.lang.Object obj49 = properties45.put((java.lang.Object) properties47, (java.lang.Object) (short) 1);
        boolean boolean50 = properties39.remove((java.lang.Object) false, (java.lang.Object) (short) 1);
        java.util.Properties properties51 = new java.util.Properties(properties39);
        properties27.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties51);
        java.lang.Object obj53 = properties27.clone();
        boolean boolean54 = properties27.isEmpty();
        java.lang.String str55 = properties27.toString();
        properties27.clear();
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean57 = properties12.remove(obj17, (java.lang.Object) properties27);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "tmlog" + "'", str8, "tmlog");
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(properties12);
        org.junit.Assert.assertNotNull(objEnumeration13);
        org.junit.Assert.assertNotNull(objEnumeration14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNull(obj29);
        org.junit.Assert.assertNotNull(objEnumeration30);
        org.junit.Assert.assertNull(obj31);
        org.junit.Assert.assertNull(obj34);
        org.junit.Assert.assertNull(obj41);
        org.junit.Assert.assertNull(obj49);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertNotNull(obj53);
        org.junit.Assert.assertEquals(obj53.toString(), "{=}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj53), "{=}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj53), "{=}");
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "{=}" + "'", str55, "{=}");
    }

    @Test
    public void test1591() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1591");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Properties properties2 = new java.util.Properties(properties0);
        java.util.Properties properties3 = null;
        java.util.Properties properties4 = new java.util.Properties(properties3);
        java.lang.Object obj6 = properties2.put((java.lang.Object) properties4, (java.lang.Object) (short) 1);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties7 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties7.setThreadedTwoPhaseCommit(true);
        atomikosProperties7.setMaxActives((int) (byte) 0);
        boolean boolean12 = properties2.containsValue((java.lang.Object) atomikosProperties7);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties13 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties13.setDefaultJtaTimeout((long) (byte) 10);
        atomikosProperties13.setCheckpointInterval((long) (byte) 0);
        atomikosProperties13.setTransactionManagerUniqueName("");
        boolean boolean20 = atomikosProperties13.isEnableLogging();
        atomikosProperties13.setLogBaseDir("hi!");
        atomikosProperties13.setForceShutdownOnVmExit(false);
        java.util.Properties properties25 = null;
        java.util.Properties properties26 = new java.util.Properties(properties25);
        java.util.Properties properties27 = new java.util.Properties(properties25);
        java.util.Properties properties28 = null;
        java.util.Properties properties29 = new java.util.Properties(properties28);
        java.lang.Object obj31 = properties27.put((java.lang.Object) properties29, (java.lang.Object) (short) 1);
        boolean boolean32 = properties27.isEmpty();
        java.util.Properties properties33 = null;
        java.util.Properties properties34 = new java.util.Properties(properties33);
        java.util.Properties properties35 = new java.util.Properties(properties33);
        boolean boolean36 = properties27.containsKey((java.lang.Object) properties35);
        java.util.Properties properties37 = new java.util.Properties(properties35);
        java.util.Properties properties38 = new java.util.Properties(properties37);
        java.lang.Object obj39 = properties2.put((java.lang.Object) atomikosProperties13, (java.lang.Object) properties37);
        java.lang.String str40 = atomikosProperties13.getTransactionManagerUniqueName();
        boolean boolean41 = atomikosProperties13.isEnableLogging();
        org.junit.Assert.assertNull(obj6);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNull(obj31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNull(obj39);
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "" + "'", str40, "");
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
    }

    @Test
    public void test1592() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1592");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Properties properties2 = new java.util.Properties(properties0);
        java.util.Properties properties3 = null;
        java.util.Properties properties4 = new java.util.Properties(properties3);
        java.lang.Object obj6 = properties2.put((java.lang.Object) properties4, (java.lang.Object) (short) 1);
        java.util.Properties properties8 = null;
        java.util.Properties properties9 = new java.util.Properties(properties8);
        java.util.Properties properties10 = new java.util.Properties(properties8);
        java.util.Properties properties11 = null;
        java.util.Properties properties12 = new java.util.Properties(properties11);
        java.lang.Object obj14 = properties10.put((java.lang.Object) properties12, (java.lang.Object) (short) 1);
        boolean boolean15 = properties4.remove((java.lang.Object) false, (java.lang.Object) (short) 1);
        java.util.Set<java.lang.String> strSet16 = properties4.stringPropertyNames();
        java.util.Enumeration<java.lang.Object> objEnumeration17 = properties4.elements();
        java.util.Collection<java.lang.Object> objCollection18 = properties4.values();
        java.io.OutputStream outputStream19 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties4.save(outputStream19, "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=0, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.tm_unique_name=, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(obj6);
        org.junit.Assert.assertNull(obj14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(strSet16);
        org.junit.Assert.assertNotNull(objEnumeration17);
        org.junit.Assert.assertNotNull(objCollection18);
    }

    @Test
    public void test1593() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1593");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Properties properties2 = new java.util.Properties(properties0);
        java.util.Properties properties3 = null;
        java.util.Properties properties4 = new java.util.Properties(properties3);
        java.lang.Object obj6 = properties2.put((java.lang.Object) properties4, (java.lang.Object) (short) 1);
        java.util.Properties properties7 = new java.util.Properties(properties4);
        java.util.Properties properties8 = new java.util.Properties(properties4);
        java.util.Set<java.lang.Object> objSet9 = properties8.keySet();
        java.util.Set<java.lang.String> strSet10 = properties8.stringPropertyNames();
        java.util.Enumeration<java.lang.Object> objEnumeration11 = properties8.elements();
        java.lang.String str14 = properties8.getProperty("{com.atomikos.icatch.enable_logging=false, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=true, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}", "{tmlog={com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=0, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.tm_unique_name=, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}, 4=true}");
        org.junit.Assert.assertNull(obj6);
        org.junit.Assert.assertNotNull(objSet9);
        org.junit.Assert.assertNotNull(strSet10);
        org.junit.Assert.assertNotNull(objEnumeration11);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "{tmlog={com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=0, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.tm_unique_name=, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}, 4=true}" + "'", str14, "{tmlog={com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=0, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.tm_unique_name=, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}, 4=true}");
    }

    @Test
    public void test1594() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1594");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Properties properties2 = new java.util.Properties(properties0);
        java.util.Properties properties3 = null;
        java.util.Properties properties4 = new java.util.Properties(properties3);
        java.lang.Object obj6 = properties2.put((java.lang.Object) properties4, (java.lang.Object) (short) 1);
        java.util.Properties properties8 = null;
        java.util.Properties properties9 = new java.util.Properties(properties8);
        java.util.Properties properties10 = new java.util.Properties(properties8);
        java.util.Properties properties11 = null;
        java.util.Properties properties12 = new java.util.Properties(properties11);
        java.lang.Object obj14 = properties10.put((java.lang.Object) properties12, (java.lang.Object) (short) 1);
        boolean boolean15 = properties4.remove((java.lang.Object) false, (java.lang.Object) (short) 1);
        java.util.Set<java.lang.String> strSet16 = properties4.stringPropertyNames();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties17 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties17.setThreadedTwoPhaseCommit(true);
        atomikosProperties17.setMaxActives((int) (byte) 0);
        atomikosProperties17.setEnableLogging(true);
        atomikosProperties17.setForceShutdownOnVmExit(false);
        java.lang.Object obj26 = properties4.get((java.lang.Object) false);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties27 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties27.setDefaultJtaTimeout((long) (byte) 10);
        long long30 = atomikosProperties27.getDefaultJtaTimeout();
        atomikosProperties27.setTransactionManagerUniqueName("");
        long long33 = atomikosProperties27.getDefaultJtaTimeout();
        boolean boolean34 = atomikosProperties27.isEnableLogging();
        atomikosProperties27.setService("{}");
        atomikosProperties27.setTransactionManagerUniqueName("{tmlog={com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=0, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.tm_unique_name=, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}, 4=true}");
        java.util.Properties properties39 = null;
        java.util.Properties properties40 = new java.util.Properties(properties39);
        java.util.Properties properties41 = new java.util.Properties(properties39);
        java.util.Properties properties42 = null;
        java.util.Properties properties43 = new java.util.Properties(properties42);
        java.lang.Object obj45 = properties41.put((java.lang.Object) properties43, (java.lang.Object) (short) 1);
        java.util.Properties properties47 = null;
        java.util.Properties properties48 = new java.util.Properties(properties47);
        java.util.Properties properties49 = new java.util.Properties(properties47);
        java.util.Properties properties50 = null;
        java.util.Properties properties51 = new java.util.Properties(properties50);
        java.lang.Object obj53 = properties49.put((java.lang.Object) properties51, (java.lang.Object) (short) 1);
        boolean boolean54 = properties43.remove((java.lang.Object) false, (java.lang.Object) (short) 1);
        java.lang.Object obj56 = properties43.remove((java.lang.Object) '#');
        java.util.Set<java.lang.Object> objSet57 = properties43.keySet();
        properties43.clear();
        java.util.Properties properties59 = null;
        java.util.Properties properties60 = new java.util.Properties(properties59);
        java.util.Properties properties61 = new java.util.Properties(properties59);
        java.util.Properties properties62 = null;
        java.util.Properties properties63 = new java.util.Properties(properties62);
        java.lang.Object obj65 = properties61.put((java.lang.Object) properties63, (java.lang.Object) (short) 1);
        java.util.Enumeration<java.lang.Object> objEnumeration66 = properties63.elements();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet67 = properties63.entrySet();
        boolean boolean68 = properties43.equals((java.lang.Object) properties63);
        java.util.Enumeration<java.lang.Object> objEnumeration69 = properties63.elements();
        boolean boolean70 = properties4.remove((java.lang.Object) "{tmlog={com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=0, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.tm_unique_name=, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}, 4=true}", (java.lang.Object) objEnumeration69);
        java.lang.Class<?> wildcardClass71 = objEnumeration69.getClass();
        org.junit.Assert.assertNull(obj6);
        org.junit.Assert.assertNull(obj14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(strSet16);
        org.junit.Assert.assertNull(obj26);
        org.junit.Assert.assertTrue("'" + long30 + "' != '" + 10L + "'", long30 == 10L);
        org.junit.Assert.assertTrue("'" + long33 + "' != '" + 10L + "'", long33 == 10L);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertNull(obj45);
        org.junit.Assert.assertNull(obj53);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertNull(obj56);
        org.junit.Assert.assertNotNull(objSet57);
        org.junit.Assert.assertNull(obj65);
        org.junit.Assert.assertNotNull(objEnumeration66);
        org.junit.Assert.assertNotNull(objEntrySet67);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + true + "'", boolean68 == true);
        org.junit.Assert.assertNotNull(objEnumeration69);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertNotNull(wildcardClass71);
    }

    @Test
    public void test1595() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1595");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setDefaultJtaTimeout((long) (byte) 10);
        atomikosProperties0.setCheckpointInterval((long) (byte) 0);
        atomikosProperties0.setEnableLogging(true);
        java.lang.String str7 = atomikosProperties0.getLogBaseName();
        atomikosProperties0.setMaxActives((int) (short) 100);
        long long10 = atomikosProperties0.getDefaultJtaTimeout();
        long long11 = atomikosProperties0.getCheckpointInterval();
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "tmlog" + "'", str7, "tmlog");
        org.junit.Assert.assertTrue("'" + long10 + "' != '" + 10L + "'", long10 == 10L);
        org.junit.Assert.assertTrue("'" + long11 + "' != '" + 0L + "'", long11 == 0L);
    }

    @Test
    public void test1596() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1596");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setDefaultJtaTimeout((long) (byte) 10);
        atomikosProperties0.setSerialJtaTransactions(false);
        atomikosProperties0.setThreadedTwoPhaseCommit(false);
        java.util.Properties properties7 = atomikosProperties0.asProperties();
        java.io.OutputStream outputStream8 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties7.save(outputStream8, "{com.atomikos.icatch.enable_logging=false, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=true, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(properties7);
    }

    @Test
    public void test1597() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1597");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setDefaultJtaTimeout((long) (byte) 10);
        long long3 = atomikosProperties0.getDefaultJtaTimeout();
        atomikosProperties0.setTransactionManagerUniqueName("");
        boolean boolean6 = atomikosProperties0.isEnableLogging();
        java.lang.String str7 = atomikosProperties0.getLogBaseName();
        atomikosProperties0.setMaxTimeout(10L);
        long long10 = atomikosProperties0.getDefaultJtaTimeout();
        java.util.Properties properties11 = atomikosProperties0.asProperties();
        java.util.Properties properties12 = new java.util.Properties(properties11);
        java.io.InputStream inputStream13 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties12.loadFromXML(inputStream13);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + long3 + "' != '" + 10L + "'", long3 == 10L);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "tmlog" + "'", str7, "tmlog");
        org.junit.Assert.assertTrue("'" + long10 + "' != '" + 10L + "'", long10 == 10L);
        org.junit.Assert.assertNotNull(properties11);
    }

    @Test
    public void test1598() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1598");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setDefaultJtaTimeout((long) (byte) 10);
        atomikosProperties0.setCheckpointInterval((long) (byte) 0);
        atomikosProperties0.setTransactionManagerUniqueName("");
        java.util.Properties properties7 = atomikosProperties0.asProperties();
        java.lang.String str8 = atomikosProperties0.getTransactionManagerUniqueName();
        java.util.Properties properties9 = atomikosProperties0.asProperties();
        java.util.Properties properties10 = new java.util.Properties(properties9);
        properties9.clear();
        java.io.OutputStream outputStream12 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties9.storeToXML(outputStream12, "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=0, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.tm_unique_name=, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(properties7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "" + "'", str8, "");
        org.junit.Assert.assertNotNull(properties9);
    }

    @Test
    public void test1599() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1599");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        boolean boolean1 = atomikosProperties0.isForceShutdownOnVmExit();
        java.util.Properties properties2 = atomikosProperties0.asProperties();
        java.util.Properties properties3 = null;
        java.util.Properties properties4 = new java.util.Properties(properties3);
        java.util.Properties properties5 = new java.util.Properties(properties3);
        java.util.Properties properties6 = null;
        java.util.Properties properties7 = new java.util.Properties(properties6);
        java.lang.Object obj9 = properties5.put((java.lang.Object) properties7, (java.lang.Object) (short) 1);
        properties7.clear();
        int int11 = properties7.size();
        java.util.Properties properties12 = null;
        java.util.Properties properties13 = new java.util.Properties(properties12);
        java.util.Properties properties14 = new java.util.Properties(properties12);
        java.util.Properties properties15 = null;
        java.util.Properties properties16 = new java.util.Properties(properties15);
        java.lang.Object obj18 = properties14.put((java.lang.Object) properties16, (java.lang.Object) (short) 1);
        java.util.Properties properties19 = new java.util.Properties(properties16);
        java.util.Properties properties20 = new java.util.Properties(properties16);
        boolean boolean22 = properties7.remove((java.lang.Object) properties16, (java.lang.Object) 10.0f);
        boolean boolean23 = properties2.containsKey((java.lang.Object) 10.0f);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties25 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties25.setDefaultJtaTimeout((long) (byte) 10);
        atomikosProperties25.setCheckpointInterval((long) (byte) 0);
        atomikosProperties25.setEnableLogging(true);
        java.lang.Object obj32 = properties2.getOrDefault((java.lang.Object) (byte) 0, (java.lang.Object) true);
        java.util.Properties properties33 = new java.util.Properties(properties2);
        java.util.Properties properties34 = null;
        java.util.Properties properties35 = new java.util.Properties(properties34);
        java.util.Properties properties36 = new java.util.Properties(properties34);
        java.util.Properties properties37 = null;
        java.util.Properties properties38 = new java.util.Properties(properties37);
        java.lang.Object obj40 = properties36.put((java.lang.Object) properties38, (java.lang.Object) (short) 1);
        properties38.clear();
        int int42 = properties38.size();
        java.util.Properties properties43 = new java.util.Properties(properties38);
        boolean boolean44 = properties33.equals((java.lang.Object) properties38);
        java.io.Reader reader45 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties38.load(reader45);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertNotNull(properties2);
        org.junit.Assert.assertNull(obj9);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertNull(obj18);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertEquals("'" + obj32 + "' != '" + true + "'", obj32, true);
        org.junit.Assert.assertNull(obj40);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 0 + "'", int42 == 0);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
    }

    @Test
    public void test1600() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1600");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Properties properties2 = new java.util.Properties(properties0);
        boolean boolean4 = properties2.containsValue((java.lang.Object) (short) 100);
        java.util.Properties properties5 = new java.util.Properties(properties2);
        java.lang.String str7 = properties5.getProperty("hi!");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties8 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties8.setDefaultJtaTimeout((long) (byte) 10);
        atomikosProperties8.setCheckpointInterval((long) (byte) 0);
        atomikosProperties8.setTransactionManagerUniqueName("");
        java.util.Properties properties15 = atomikosProperties8.asProperties();
        java.lang.String str16 = atomikosProperties8.getLogBaseName();
        atomikosProperties8.setCheckpointInterval(100L);
        java.lang.String str19 = atomikosProperties8.getTransactionManagerUniqueName();
        atomikosProperties8.setLogBaseName("{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.tm_unique_name=, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
        atomikosProperties8.setThreadedTwoPhaseCommit(true);
        boolean boolean24 = properties5.contains((java.lang.Object) true);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties25 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties25.setDefaultJtaTimeout((long) (byte) 10);
        atomikosProperties25.setSerialJtaTransactions(false);
        atomikosProperties25.setService("{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.tm_unique_name=, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
        long long32 = atomikosProperties25.getCheckpointInterval();
        java.lang.String str33 = atomikosProperties25.getService();
        atomikosProperties25.setService("{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=0, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog, {}={}}");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties36 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties36.setDefaultJtaTimeout((long) (byte) 10);
        boolean boolean39 = atomikosProperties36.isForceShutdownOnVmExit();
        atomikosProperties36.setMaxActives(0);
        java.lang.String str42 = atomikosProperties36.getLogBaseName();
        boolean boolean43 = atomikosProperties36.isSerialJtaTransactions();
        java.lang.Object obj44 = properties5.replace((java.lang.Object) "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=0, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog, {}={}}", (java.lang.Object) boolean43);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Class<?> wildcardClass45 = obj44.getClass();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNotNull(properties15);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "tmlog" + "'", str16, "tmlog");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "" + "'", str19, "");
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + long32 + "' != '" + 500L + "'", long32 == 500L);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.tm_unique_name=, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}" + "'", str33, "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.tm_unique_name=, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "tmlog" + "'", str42, "tmlog");
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNull(obj44);
    }

    @Test
    public void test1601() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1601");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setDefaultJtaTimeout((long) (byte) 10);
        long long3 = atomikosProperties0.getDefaultJtaTimeout();
        atomikosProperties0.setTransactionManagerUniqueName("");
        boolean boolean6 = atomikosProperties0.isEnableLogging();
        java.lang.String str7 = atomikosProperties0.getLogBaseDir();
        java.util.Properties properties8 = atomikosProperties0.asProperties();
        boolean boolean9 = properties8.isEmpty();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties10 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties10.setThreadedTwoPhaseCommit(true);
        atomikosProperties10.setMaxActives((int) (byte) 0);
        atomikosProperties10.setEnableLogging(true);
        atomikosProperties10.setForceShutdownOnVmExit(false);
        boolean boolean19 = atomikosProperties10.isThreadedTwoPhaseCommit();
        java.util.Properties properties20 = null;
        java.util.Properties properties21 = new java.util.Properties(properties20);
        java.util.Properties properties22 = new java.util.Properties(properties20);
        java.util.Properties properties23 = null;
        java.util.Properties properties24 = new java.util.Properties(properties23);
        java.lang.Object obj26 = properties22.put((java.lang.Object) properties24, (java.lang.Object) (short) 1);
        java.util.Enumeration<java.lang.Object> objEnumeration27 = properties24.elements();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet28 = properties24.entrySet();
        java.util.Set<java.lang.Object> objSet29 = properties24.keySet();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties30 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties30.setDefaultJtaTimeout((long) (byte) 10);
        atomikosProperties30.setCheckpointInterval((long) (byte) 0);
        atomikosProperties30.setEnableLogging(true);
        java.lang.Object obj37 = properties24.get((java.lang.Object) atomikosProperties30);
        java.util.Properties properties38 = atomikosProperties30.asProperties();
        java.lang.String str39 = atomikosProperties30.getLogBaseName();
        atomikosProperties30.setForceShutdownOnVmExit(false);
        java.util.Properties properties42 = atomikosProperties30.asProperties();
        java.lang.Object obj43 = properties8.getOrDefault((java.lang.Object) boolean19, (java.lang.Object) atomikosProperties30);
        boolean boolean44 = atomikosProperties30.isEnableLogging();
        org.junit.Assert.assertTrue("'" + long3 + "' != '" + 10L + "'", long3 == 10L);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNotNull(properties8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNull(obj26);
        org.junit.Assert.assertNotNull(objEnumeration27);
        org.junit.Assert.assertNotNull(objEntrySet28);
        org.junit.Assert.assertNotNull(objSet29);
        org.junit.Assert.assertNull(obj37);
        org.junit.Assert.assertNotNull(properties38);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "tmlog" + "'", str39, "tmlog");
        org.junit.Assert.assertNotNull(properties42);
        org.junit.Assert.assertNotNull(obj43);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
    }

    @Test
    public void test1602() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1602");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Properties properties2 = new java.util.Properties(properties0);
        boolean boolean4 = properties2.containsValue((java.lang.Object) (short) 100);
        java.util.Properties properties5 = new java.util.Properties(properties2);
        java.util.Properties properties6 = new java.util.Properties(properties5);
        java.util.Properties properties7 = null;
        java.util.Properties properties8 = new java.util.Properties(properties7);
        java.util.Properties properties9 = new java.util.Properties(properties7);
        java.util.Properties properties10 = null;
        java.util.Properties properties11 = new java.util.Properties(properties10);
        java.lang.Object obj13 = properties9.put((java.lang.Object) properties11, (java.lang.Object) (short) 1);
        java.util.Properties properties15 = null;
        java.util.Properties properties16 = new java.util.Properties(properties15);
        java.util.Properties properties17 = new java.util.Properties(properties15);
        java.util.Properties properties18 = null;
        java.util.Properties properties19 = new java.util.Properties(properties18);
        java.lang.Object obj21 = properties17.put((java.lang.Object) properties19, (java.lang.Object) (short) 1);
        boolean boolean22 = properties11.remove((java.lang.Object) false, (java.lang.Object) (short) 1);
        java.util.Set<java.lang.String> strSet23 = properties11.stringPropertyNames();
        java.util.Enumeration<java.lang.Object> objEnumeration24 = properties11.elements();
        java.lang.String str25 = properties11.toString();
        boolean boolean26 = properties11.isEmpty();
        boolean boolean27 = properties6.containsValue((java.lang.Object) boolean26);
        java.util.Properties properties28 = new java.util.Properties(properties6);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties29 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        boolean boolean30 = atomikosProperties29.isForceShutdownOnVmExit();
        java.util.Properties properties31 = atomikosProperties29.asProperties();
        java.util.Properties properties32 = null;
        java.util.Properties properties33 = new java.util.Properties(properties32);
        java.util.Properties properties34 = new java.util.Properties(properties32);
        java.util.Properties properties35 = null;
        java.util.Properties properties36 = new java.util.Properties(properties35);
        java.lang.Object obj38 = properties34.put((java.lang.Object) properties36, (java.lang.Object) (short) 1);
        properties36.clear();
        int int40 = properties36.size();
        java.util.Properties properties41 = null;
        java.util.Properties properties42 = new java.util.Properties(properties41);
        java.util.Properties properties43 = new java.util.Properties(properties41);
        java.util.Properties properties44 = null;
        java.util.Properties properties45 = new java.util.Properties(properties44);
        java.lang.Object obj47 = properties43.put((java.lang.Object) properties45, (java.lang.Object) (short) 1);
        java.util.Properties properties48 = new java.util.Properties(properties45);
        java.util.Properties properties49 = new java.util.Properties(properties45);
        boolean boolean51 = properties36.remove((java.lang.Object) properties45, (java.lang.Object) 10.0f);
        boolean boolean52 = properties31.containsKey((java.lang.Object) 10.0f);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties54 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties54.setDefaultJtaTimeout((long) (byte) 10);
        atomikosProperties54.setCheckpointInterval((long) (byte) 0);
        atomikosProperties54.setEnableLogging(true);
        java.lang.Object obj61 = properties31.getOrDefault((java.lang.Object) (byte) 0, (java.lang.Object) true);
        java.util.Properties properties62 = new java.util.Properties(properties31);
        boolean boolean63 = properties6.containsKey((java.lang.Object) properties62);
        java.io.OutputStream outputStream64 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties62.storeToXML(outputStream64, "", "{tmlog=}");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNull(obj13);
        org.junit.Assert.assertNull(obj21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(strSet23);
        org.junit.Assert.assertNotNull(objEnumeration24);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "{}" + "'", str25, "{}");
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(properties31);
        org.junit.Assert.assertNull(obj38);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 0 + "'", int40 == 0);
        org.junit.Assert.assertNull(obj47);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertEquals("'" + obj61 + "' != '" + true + "'", obj61, true);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
    }

    @Test
    public void test1603() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1603");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setThreadedTwoPhaseCommit(true);
        atomikosProperties0.setMaxActives((int) '#');
        atomikosProperties0.setForceShutdownOnVmExit(true);
        java.lang.String str7 = atomikosProperties0.getLogBaseDir();
        java.util.Properties properties8 = atomikosProperties0.asProperties();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties9 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        boolean boolean10 = atomikosProperties9.isSerialJtaTransactions();
        boolean boolean11 = properties8.equals((java.lang.Object) atomikosProperties9);
        long long12 = atomikosProperties9.getMaxTimeout();
        long long13 = atomikosProperties9.getCheckpointInterval();
        java.lang.String str14 = atomikosProperties9.getLogBaseName();
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNotNull(properties8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + long12 + "' != '" + 300000L + "'", long12 == 300000L);
        org.junit.Assert.assertTrue("'" + long13 + "' != '" + 500L + "'", long13 == 500L);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "tmlog" + "'", str14, "tmlog");
    }

    @Test
    public void test1604() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1604");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setDefaultJtaTimeout((long) (byte) 10);
        atomikosProperties0.setCheckpointInterval((long) (byte) 0);
        atomikosProperties0.setTransactionManagerUniqueName("");
        java.util.Properties properties7 = atomikosProperties0.asProperties();
        java.lang.String str8 = atomikosProperties0.getLogBaseName();
        atomikosProperties0.setCheckpointInterval(100L);
        atomikosProperties0.setLogBaseName("");
        java.util.Properties properties13 = atomikosProperties0.asProperties();
        atomikosProperties0.setLogBaseName("tmlog");
        atomikosProperties0.setTransactionManagerUniqueName("{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=true, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=true, com.atomikos.icatch.max_actives=35, com.atomikos.icatch.log_base_name=tmlog}");
        boolean boolean18 = atomikosProperties0.isThreadedTwoPhaseCommit();
        org.junit.Assert.assertNotNull(properties7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "tmlog" + "'", str8, "tmlog");
        org.junit.Assert.assertNotNull(properties13);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
    }

    @Test
    public void test1605() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1605");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setDefaultJtaTimeout((long) (byte) 10);
        atomikosProperties0.setCheckpointInterval((long) (byte) 0);
        atomikosProperties0.setTransactionManagerUniqueName("");
        java.util.Properties properties7 = atomikosProperties0.asProperties();
        java.lang.String str8 = atomikosProperties0.getTransactionManagerUniqueName();
        atomikosProperties0.setDefaultJtaTimeout((long) (-1));
        java.util.Properties properties11 = atomikosProperties0.asProperties();
        java.lang.Class<?> wildcardClass12 = properties11.getClass();
        org.junit.Assert.assertNotNull(properties7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "" + "'", str8, "");
        org.junit.Assert.assertNotNull(properties11);
        org.junit.Assert.assertNotNull(wildcardClass12);
    }

    @Test
    public void test1606() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1606");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setEnableLogging(false);
        atomikosProperties0.setThreadedTwoPhaseCommit(true);
        atomikosProperties0.setTransactionManagerUniqueName("tmlog");
        boolean boolean7 = atomikosProperties0.isEnableLogging();
        atomikosProperties0.setDefaultJtaTimeout((long) (short) 10);
        atomikosProperties0.setTransactionManagerUniqueName("{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.tm_unique_name=, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
        java.lang.String str12 = atomikosProperties0.getTransactionManagerUniqueName();
        atomikosProperties0.setMaxActives(0);
        java.lang.String str15 = atomikosProperties0.getTransactionManagerUniqueName();
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.tm_unique_name=, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}" + "'", str12, "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.tm_unique_name=, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.tm_unique_name=, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}" + "'", str15, "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.tm_unique_name=, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
    }

    @Test
    public void test1607() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1607");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setDefaultJtaTimeout((long) (byte) 10);
        atomikosProperties0.setCheckpointInterval((long) (byte) 0);
        long long5 = atomikosProperties0.getMaxTimeout();
        atomikosProperties0.setSerialJtaTransactions(true);
        atomikosProperties0.setForceShutdownOnVmExit(false);
        java.lang.String str10 = atomikosProperties0.getLogBaseDir();
        atomikosProperties0.setMaxTimeout(0L);
        org.junit.Assert.assertTrue("'" + long5 + "' != '" + 300000L + "'", long5 == 300000L);
        org.junit.Assert.assertNull(str10);
    }

    @Test
    public void test1608() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1608");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setDefaultJtaTimeout((long) (byte) 10);
        long long3 = atomikosProperties0.getDefaultJtaTimeout();
        atomikosProperties0.setTransactionManagerUniqueName("");
        boolean boolean6 = atomikosProperties0.isEnableLogging();
        java.lang.String str7 = atomikosProperties0.getLogBaseDir();
        java.util.Properties properties8 = atomikosProperties0.asProperties();
        java.lang.String str9 = atomikosProperties0.getService();
        atomikosProperties0.setMaxActives((int) (short) 1);
        atomikosProperties0.setCheckpointInterval(1L);
        java.util.Properties properties14 = atomikosProperties0.asProperties();
        java.io.OutputStream outputStream15 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties14.storeToXML(outputStream15, "hi!");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + long3 + "' != '" + 10L + "'", long3 == 10L);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNotNull(properties8);
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertNotNull(properties14);
    }

    @Test
    public void test1609() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1609");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Properties properties2 = new java.util.Properties(properties0);
        java.util.Properties properties3 = null;
        java.util.Properties properties4 = new java.util.Properties(properties3);
        java.lang.Object obj6 = properties2.put((java.lang.Object) properties4, (java.lang.Object) (short) 1);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties7 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties7.setThreadedTwoPhaseCommit(true);
        atomikosProperties7.setMaxActives((int) (byte) 0);
        boolean boolean12 = properties2.containsValue((java.lang.Object) atomikosProperties7);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties13 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties13.setDefaultJtaTimeout((long) (byte) 10);
        atomikosProperties13.setSerialJtaTransactions(false);
        boolean boolean18 = properties2.containsValue((java.lang.Object) atomikosProperties13);
        java.lang.Object obj21 = properties2.putIfAbsent((java.lang.Object) 10, (java.lang.Object) (byte) -1);
        java.util.Properties properties22 = null;
        java.util.Properties properties23 = new java.util.Properties(properties22);
        java.util.Properties properties24 = new java.util.Properties(properties22);
        java.util.Properties properties25 = null;
        java.util.Properties properties26 = new java.util.Properties(properties25);
        java.lang.Object obj28 = properties24.put((java.lang.Object) properties26, (java.lang.Object) (short) 1);
        boolean boolean29 = properties24.isEmpty();
        properties24.clear();
        java.util.Properties properties31 = new java.util.Properties(properties24);
        properties2.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties24);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties33 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties33.setDefaultJtaTimeout((long) (byte) 10);
        long long36 = atomikosProperties33.getDefaultJtaTimeout();
        atomikosProperties33.setTransactionManagerUniqueName("");
        boolean boolean39 = atomikosProperties33.isEnableLogging();
        atomikosProperties33.setDefaultJtaTimeout((long) '4');
        java.lang.String str42 = atomikosProperties33.getTransactionManagerUniqueName();
        atomikosProperties33.setThreadedTwoPhaseCommit(true);
        java.util.Properties properties45 = atomikosProperties33.asProperties();
        java.util.Properties properties46 = new java.util.Properties(properties45);
        java.util.Properties properties47 = new java.util.Properties(properties45);
        java.lang.Object obj48 = properties2.remove((java.lang.Object) properties45);
        java.util.Enumeration<java.lang.Object> objEnumeration49 = properties2.keys();
        org.junit.Assert.assertNull(obj6);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNull(obj21);
        org.junit.Assert.assertNull(obj28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + long36 + "' != '" + 10L + "'", long36 == 10L);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "" + "'", str42, "");
        org.junit.Assert.assertNotNull(properties45);
        org.junit.Assert.assertNull(obj48);
        org.junit.Assert.assertNotNull(objEnumeration49);
    }

    @Test
    public void test1610() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1610");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Properties properties2 = new java.util.Properties(properties0);
        java.util.Properties properties3 = null;
        java.util.Properties properties4 = new java.util.Properties(properties3);
        java.lang.Object obj6 = properties2.put((java.lang.Object) properties4, (java.lang.Object) (short) 1);
        boolean boolean7 = properties2.isEmpty();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties8 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties8.setDefaultJtaTimeout((long) (byte) 10);
        atomikosProperties8.setCheckpointInterval((long) (byte) 0);
        atomikosProperties8.setTransactionManagerUniqueName("");
        java.util.Properties properties15 = atomikosProperties8.asProperties();
        java.lang.Object obj16 = properties2.remove((java.lang.Object) properties15);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties17 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties17.setDefaultJtaTimeout((long) (byte) 10);
        atomikosProperties17.setCheckpointInterval((long) (byte) 0);
        atomikosProperties17.setTransactionManagerUniqueName("");
        java.lang.Object obj24 = properties15.remove((java.lang.Object) atomikosProperties17);
        java.util.Properties properties25 = null;
        java.util.Properties properties26 = new java.util.Properties(properties25);
        java.util.Properties properties27 = new java.util.Properties(properties25);
        java.util.Properties properties28 = null;
        java.util.Properties properties29 = new java.util.Properties(properties28);
        java.lang.Object obj31 = properties27.put((java.lang.Object) properties29, (java.lang.Object) (short) 1);
        java.util.Enumeration<java.lang.Object> objEnumeration32 = properties29.elements();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet33 = properties29.entrySet();
        java.util.Set<java.lang.Object> objSet34 = properties29.keySet();
        java.util.Properties properties35 = null;
        java.util.Properties properties36 = new java.util.Properties(properties35);
        java.util.Properties properties37 = new java.util.Properties(properties35);
        java.util.Properties properties38 = null;
        java.util.Properties properties39 = new java.util.Properties(properties38);
        java.lang.Object obj41 = properties37.put((java.lang.Object) properties39, (java.lang.Object) (short) 1);
        properties39.clear();
        int int43 = properties39.size();
        java.util.Properties properties44 = new java.util.Properties(properties39);
        java.util.Properties properties45 = null;
        java.util.Properties properties46 = new java.util.Properties(properties45);
        java.util.Properties properties47 = new java.util.Properties(properties45);
        java.util.Properties properties48 = null;
        java.util.Properties properties49 = new java.util.Properties(properties48);
        java.lang.Object obj51 = properties47.put((java.lang.Object) properties49, (java.lang.Object) (short) 1);
        properties49.clear();
        java.lang.String str54 = properties49.getProperty("");
        java.util.Properties properties55 = null;
        java.util.Properties properties56 = new java.util.Properties(properties55);
        java.util.Properties properties57 = new java.util.Properties(properties55);
        java.util.Properties properties58 = null;
        java.util.Properties properties59 = new java.util.Properties(properties58);
        java.lang.Object obj61 = properties57.put((java.lang.Object) properties59, (java.lang.Object) (short) 1);
        properties49.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties57);
        java.lang.Object obj63 = properties29.put((java.lang.Object) properties39, (java.lang.Object) properties57);
        java.util.Enumeration<java.lang.Object> objEnumeration64 = properties39.elements();
        java.lang.Object obj66 = properties15.put((java.lang.Object) properties39, (java.lang.Object) "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=0, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.tm_unique_name=, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties67 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties67.setDefaultJtaTimeout((long) (byte) 10);
        long long70 = atomikosProperties67.getDefaultJtaTimeout();
        atomikosProperties67.setTransactionManagerUniqueName("hi!");
        atomikosProperties67.setSerialJtaTransactions(true);
        atomikosProperties67.setTransactionManagerUniqueName("{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=true, com.atomikos.icatch.max_actives=35, com.atomikos.icatch.log_base_name=tmlog}");
        java.lang.Object obj77 = properties15.remove((java.lang.Object) "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=true, com.atomikos.icatch.max_actives=35, com.atomikos.icatch.log_base_name=tmlog}");
        org.junit.Assert.assertNull(obj6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(properties15);
        org.junit.Assert.assertNull(obj16);
        org.junit.Assert.assertNull(obj24);
        org.junit.Assert.assertNull(obj31);
        org.junit.Assert.assertNotNull(objEnumeration32);
        org.junit.Assert.assertNotNull(objEntrySet33);
        org.junit.Assert.assertNotNull(objSet34);
        org.junit.Assert.assertNull(obj41);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 0 + "'", int43 == 0);
        org.junit.Assert.assertNull(obj51);
        org.junit.Assert.assertNull(str54);
        org.junit.Assert.assertNull(obj61);
        org.junit.Assert.assertNull(obj63);
        org.junit.Assert.assertNotNull(objEnumeration64);
        org.junit.Assert.assertNull(obj66);
        org.junit.Assert.assertTrue("'" + long70 + "' != '" + 10L + "'", long70 == 10L);
        org.junit.Assert.assertNull(obj77);
    }

    @Test
    public void test1611() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1611");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setDefaultJtaTimeout((long) (byte) 10);
        atomikosProperties0.setCheckpointInterval((long) (byte) 0);
        atomikosProperties0.setTransactionManagerUniqueName("");
        long long7 = atomikosProperties0.getDefaultJtaTimeout();
        boolean boolean8 = atomikosProperties0.isEnableLogging();
        java.lang.String str9 = atomikosProperties0.getService();
        atomikosProperties0.setEnableLogging(false);
        atomikosProperties0.setService("{tmlog=}");
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + 10L + "'", long7 == 10L);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNull(str9);
    }

    @Test
    public void test1612() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1612");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Properties properties2 = new java.util.Properties(properties0);
        java.util.Properties properties3 = null;
        java.util.Properties properties4 = new java.util.Properties(properties3);
        java.lang.Object obj6 = properties2.put((java.lang.Object) properties4, (java.lang.Object) (short) 1);
        java.util.Properties properties8 = null;
        java.util.Properties properties9 = new java.util.Properties(properties8);
        java.util.Properties properties10 = new java.util.Properties(properties8);
        java.util.Properties properties11 = null;
        java.util.Properties properties12 = new java.util.Properties(properties11);
        java.lang.Object obj14 = properties10.put((java.lang.Object) properties12, (java.lang.Object) (short) 1);
        boolean boolean15 = properties4.remove((java.lang.Object) false, (java.lang.Object) (short) 1);
        java.util.Set<java.lang.String> strSet16 = properties4.stringPropertyNames();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties17 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties17.setDefaultJtaTimeout((long) (byte) 10);
        long long20 = atomikosProperties17.getDefaultJtaTimeout();
        java.lang.Object obj21 = properties4.get((java.lang.Object) atomikosProperties17);
        long long22 = atomikosProperties17.getCheckpointInterval();
        boolean boolean23 = atomikosProperties17.isEnableLogging();
        boolean boolean24 = atomikosProperties17.isThreadedTwoPhaseCommit();
        java.util.Properties properties25 = atomikosProperties17.asProperties();
        atomikosProperties17.setMaxActives((int) (short) 0);
        org.junit.Assert.assertNull(obj6);
        org.junit.Assert.assertNull(obj14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(strSet16);
        org.junit.Assert.assertTrue("'" + long20 + "' != '" + 10L + "'", long20 == 10L);
        org.junit.Assert.assertNull(obj21);
        org.junit.Assert.assertTrue("'" + long22 + "' != '" + 500L + "'", long22 == 500L);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(properties25);
    }

    @Test
    public void test1613() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1613");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Properties properties2 = new java.util.Properties(properties0);
        java.util.Properties properties3 = null;
        java.util.Properties properties4 = new java.util.Properties(properties3);
        java.util.Properties properties5 = new java.util.Properties(properties3);
        boolean boolean7 = properties5.containsValue((java.lang.Object) (short) 100);
        java.lang.Object obj8 = properties5.clone();
        java.util.Enumeration<?> wildcardEnumeration9 = properties5.propertyNames();
        boolean boolean10 = properties2.containsKey((java.lang.Object) properties5);
        java.util.Set<java.lang.String> strSet11 = properties5.stringPropertyNames();
        java.util.Properties properties12 = new java.util.Properties(properties5);
        java.io.InputStream inputStream13 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties5.loadFromXML(inputStream13);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(obj8);
        org.junit.Assert.assertEquals(obj8.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj8), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj8), "{}");
        org.junit.Assert.assertNotNull(wildcardEnumeration9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(strSet11);
    }

    @Test
    public void test1614() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1614");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Properties properties2 = new java.util.Properties(properties0);
        java.util.Properties properties3 = null;
        java.util.Properties properties4 = new java.util.Properties(properties3);
        java.lang.Object obj6 = properties2.put((java.lang.Object) properties4, (java.lang.Object) (short) 1);
        java.util.Properties properties8 = null;
        java.util.Properties properties9 = new java.util.Properties(properties8);
        java.util.Properties properties10 = new java.util.Properties(properties8);
        java.util.Properties properties11 = null;
        java.util.Properties properties12 = new java.util.Properties(properties11);
        java.lang.Object obj14 = properties10.put((java.lang.Object) properties12, (java.lang.Object) (short) 1);
        boolean boolean15 = properties4.remove((java.lang.Object) false, (java.lang.Object) (short) 1);
        java.util.Set<java.lang.String> strSet16 = properties4.stringPropertyNames();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties17 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties17.setDefaultJtaTimeout((long) (byte) 10);
        atomikosProperties17.setCheckpointInterval((long) (byte) 0);
        atomikosProperties17.setTransactionManagerUniqueName("");
        boolean boolean24 = atomikosProperties17.isEnableLogging();
        atomikosProperties17.setSerialJtaTransactions(false);
        atomikosProperties17.setLogBaseDir("");
        java.util.Properties properties29 = null;
        java.util.Properties properties30 = new java.util.Properties(properties29);
        java.util.Properties properties31 = new java.util.Properties(properties29);
        java.util.Properties properties32 = null;
        java.util.Properties properties33 = new java.util.Properties(properties32);
        java.lang.Object obj35 = properties31.put((java.lang.Object) properties33, (java.lang.Object) (short) 1);
        java.util.Properties properties36 = new java.util.Properties(properties33);
        boolean boolean37 = properties4.remove((java.lang.Object) "", (java.lang.Object) properties36);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties38 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties38.setThreadedTwoPhaseCommit(true);
        atomikosProperties38.setMaxActives((int) '#');
        atomikosProperties38.setForceShutdownOnVmExit(true);
        java.lang.String str45 = atomikosProperties38.getLogBaseDir();
        java.util.Properties properties46 = atomikosProperties38.asProperties();
        boolean boolean47 = properties36.containsKey((java.lang.Object) atomikosProperties38);
        properties36.clear();
        java.util.Properties properties49 = null;
        java.util.Properties properties50 = new java.util.Properties(properties49);
        java.util.Properties properties51 = new java.util.Properties(properties49);
        java.util.Properties properties52 = null;
        java.util.Properties properties53 = new java.util.Properties(properties52);
        java.lang.Object obj55 = properties51.put((java.lang.Object) properties53, (java.lang.Object) (short) 1);
        boolean boolean56 = properties51.isEmpty();
        properties51.clear();
        java.util.Properties properties58 = new java.util.Properties(properties51);
        java.util.Collection<java.lang.Object> objCollection59 = properties58.values();
        boolean boolean60 = properties36.containsKey((java.lang.Object) objCollection59);
        java.lang.String str61 = properties36.toString();
        org.junit.Assert.assertNull(obj6);
        org.junit.Assert.assertNull(obj14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(strSet16);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNull(obj35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNull(str45);
        org.junit.Assert.assertNotNull(properties46);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNull(obj55);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertNotNull(objCollection59);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "{}" + "'", str61, "{}");
    }

    @Test
    public void test1615() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1615");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setDefaultJtaTimeout((long) (byte) 10);
        atomikosProperties0.setCheckpointInterval((long) (byte) 0);
        atomikosProperties0.setTransactionManagerUniqueName("");
        java.util.Properties properties7 = atomikosProperties0.asProperties();
        java.lang.String str8 = atomikosProperties0.getLogBaseName();
        java.util.Properties properties9 = atomikosProperties0.asProperties();
        java.util.Enumeration<java.lang.Object> objEnumeration10 = properties9.keys();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties12 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties12.setDefaultJtaTimeout((long) (byte) 10);
        long long15 = atomikosProperties12.getDefaultJtaTimeout();
        atomikosProperties12.setTransactionManagerUniqueName("");
        atomikosProperties12.setCheckpointInterval(100L);
        boolean boolean20 = properties9.remove((java.lang.Object) "hi!", (java.lang.Object) atomikosProperties12);
        java.util.Collection<java.lang.Object> objCollection21 = properties9.values();
        java.util.Properties properties22 = null;
        java.util.Properties properties23 = new java.util.Properties(properties22);
        java.util.Properties properties24 = new java.util.Properties(properties22);
        java.util.Properties properties25 = null;
        java.util.Properties properties26 = new java.util.Properties(properties25);
        java.lang.Object obj28 = properties24.put((java.lang.Object) properties26, (java.lang.Object) (short) 1);
        java.util.Enumeration<java.lang.Object> objEnumeration29 = properties26.elements();
        java.lang.String str30 = properties26.toString();
        java.util.Properties properties31 = null;
        java.util.Properties properties32 = new java.util.Properties(properties31);
        java.util.Properties properties33 = new java.util.Properties(properties31);
        java.util.Properties properties34 = null;
        java.util.Properties properties35 = new java.util.Properties(properties34);
        java.lang.Object obj37 = properties33.put((java.lang.Object) properties35, (java.lang.Object) (short) 1);
        properties35.clear();
        java.lang.String str40 = properties35.getProperty("");
        java.util.Properties properties41 = null;
        java.util.Properties properties42 = new java.util.Properties(properties41);
        java.util.Properties properties43 = new java.util.Properties(properties41);
        java.util.Properties properties44 = null;
        java.util.Properties properties45 = new java.util.Properties(properties44);
        java.lang.Object obj47 = properties43.put((java.lang.Object) properties45, (java.lang.Object) (short) 1);
        properties35.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties43);
        java.util.Enumeration<java.lang.Object> objEnumeration49 = properties35.keys();
        java.util.Enumeration<java.lang.Object> objEnumeration50 = properties35.elements();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties51 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties51.setDefaultJtaTimeout((long) (byte) 10);
        atomikosProperties51.setCheckpointInterval((long) (byte) 0);
        atomikosProperties51.setEnableLogging(true);
        java.lang.String str58 = atomikosProperties51.getLogBaseName();
        atomikosProperties51.setMaxActives((int) (short) 100);
        boolean boolean61 = properties26.remove((java.lang.Object) properties35, (java.lang.Object) atomikosProperties51);
        atomikosProperties51.setThreadedTwoPhaseCommit(true);
        long long64 = atomikosProperties51.getDefaultJtaTimeout();
        java.util.Properties properties65 = atomikosProperties51.asProperties();
        properties9.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties65);
        java.lang.Object obj67 = properties9.clone();
        java.util.Enumeration<java.lang.Object> objEnumeration68 = properties9.keys();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties69 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties69.setDefaultJtaTimeout((long) (byte) 10);
        long long72 = atomikosProperties69.getDefaultJtaTimeout();
        atomikosProperties69.setTransactionManagerUniqueName("");
        boolean boolean75 = atomikosProperties69.isEnableLogging();
        java.lang.String str76 = atomikosProperties69.getLogBaseDir();
        java.util.Properties properties77 = atomikosProperties69.asProperties();
        java.util.Properties properties78 = new java.util.Properties();
        java.lang.Object obj79 = properties77.remove((java.lang.Object) properties78);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties80 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties80.setThreadedTwoPhaseCommit(true);
        boolean boolean83 = atomikosProperties80.isEnableLogging();
        atomikosProperties80.setTransactionManagerUniqueName("{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=0, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog, {}={}}");
        java.lang.Object obj86 = properties78.get((java.lang.Object) "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=0, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog, {}={}}");
        properties9.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties78);
        java.io.Reader reader88 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties78.load(reader88);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(properties7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "tmlog" + "'", str8, "tmlog");
        org.junit.Assert.assertNotNull(properties9);
        org.junit.Assert.assertNotNull(objEnumeration10);
        org.junit.Assert.assertTrue("'" + long15 + "' != '" + 10L + "'", long15 == 10L);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(objCollection21);
        org.junit.Assert.assertNull(obj28);
        org.junit.Assert.assertNotNull(objEnumeration29);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "{}" + "'", str30, "{}");
        org.junit.Assert.assertNull(obj37);
        org.junit.Assert.assertNull(str40);
        org.junit.Assert.assertNull(obj47);
        org.junit.Assert.assertNotNull(objEnumeration49);
        org.junit.Assert.assertNotNull(objEnumeration50);
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "tmlog" + "'", str58, "tmlog");
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertTrue("'" + long64 + "' != '" + 10L + "'", long64 == 10L);
        org.junit.Assert.assertNotNull(properties65);
        org.junit.Assert.assertNotNull(obj67);
// flaky:         org.junit.Assert.assertEquals(obj67.toString(), "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=0, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=true, com.atomikos.icatch.tm_unique_name=, com.atomikos.icatch.max_actives=100, com.atomikos.icatch.log_base_name=tmlog}");
// flaky:         org.junit.Assert.assertEquals(java.lang.String.valueOf(obj67), "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=0, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=true, com.atomikos.icatch.tm_unique_name=, com.atomikos.icatch.max_actives=100, com.atomikos.icatch.log_base_name=tmlog}");
// flaky:         org.junit.Assert.assertEquals(java.util.Objects.toString(obj67), "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=0, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=true, com.atomikos.icatch.tm_unique_name=, com.atomikos.icatch.max_actives=100, com.atomikos.icatch.log_base_name=tmlog}");
        org.junit.Assert.assertNotNull(objEnumeration68);
        org.junit.Assert.assertTrue("'" + long72 + "' != '" + 10L + "'", long72 == 10L);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + true + "'", boolean75 == true);
        org.junit.Assert.assertNull(str76);
        org.junit.Assert.assertNotNull(properties77);
        org.junit.Assert.assertNull(obj79);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + true + "'", boolean83 == true);
        org.junit.Assert.assertNull(obj86);
    }

    @Test
    public void test1616() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1616");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        int int1 = atomikosProperties0.getMaxActives();
        long long2 = atomikosProperties0.getMaxTimeout();
        java.util.Properties properties3 = atomikosProperties0.asProperties();
        java.util.Properties properties4 = atomikosProperties0.asProperties();
        java.lang.String str5 = atomikosProperties0.getTransactionManagerUniqueName();
        java.util.Properties properties6 = atomikosProperties0.asProperties();
        atomikosProperties0.setMaxTimeout((long) 32);
        atomikosProperties0.setLogBaseName("");
        atomikosProperties0.setSerialJtaTransactions(false);
        atomikosProperties0.setForceShutdownOnVmExit(false);
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 50 + "'", int1 == 50);
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + 300000L + "'", long2 == 300000L);
        org.junit.Assert.assertNotNull(properties3);
        org.junit.Assert.assertNotNull(properties4);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNotNull(properties6);
    }

    @Test
    public void test1617() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1617");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setDefaultJtaTimeout((long) (byte) 10);
        atomikosProperties0.setCheckpointInterval((long) (byte) 0);
        atomikosProperties0.setTransactionManagerUniqueName("");
        java.util.Properties properties7 = atomikosProperties0.asProperties();
        java.util.Properties properties8 = atomikosProperties0.asProperties();
        java.util.Collection<java.lang.Object> objCollection9 = properties8.values();
        java.util.Properties properties10 = null;
        java.util.Properties properties11 = new java.util.Properties(properties10);
        java.util.Properties properties12 = new java.util.Properties(properties10);
        java.util.Properties properties13 = null;
        java.util.Properties properties14 = new java.util.Properties(properties13);
        java.lang.Object obj16 = properties12.put((java.lang.Object) properties14, (java.lang.Object) (short) 1);
        boolean boolean17 = properties12.isEmpty();
        java.util.Properties properties18 = null;
        java.util.Properties properties19 = new java.util.Properties(properties18);
        java.util.Properties properties20 = new java.util.Properties(properties18);
        boolean boolean21 = properties12.containsKey((java.lang.Object) properties20);
        java.util.Properties properties22 = new java.util.Properties(properties20);
        java.util.Properties properties23 = new java.util.Properties(properties22);
        java.util.Properties properties24 = null;
        java.util.Properties properties25 = new java.util.Properties(properties24);
        java.util.Properties properties26 = new java.util.Properties(properties24);
        java.util.Properties properties27 = null;
        java.util.Properties properties28 = new java.util.Properties(properties27);
        java.lang.Object obj30 = properties26.put((java.lang.Object) properties28, (java.lang.Object) (short) 1);
        properties28.clear();
        int int32 = properties28.size();
        java.util.Properties properties33 = new java.util.Properties(properties28);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties34 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        int int35 = atomikosProperties34.getMaxActives();
        long long36 = atomikosProperties34.getMaxTimeout();
        java.util.Properties properties37 = atomikosProperties34.asProperties();
        java.util.Properties properties38 = atomikosProperties34.asProperties();
        java.util.Properties properties39 = null;
        java.util.Properties properties40 = new java.util.Properties(properties39);
        java.util.Properties properties41 = new java.util.Properties(properties39);
        java.util.Properties properties42 = null;
        java.util.Properties properties43 = new java.util.Properties(properties42);
        java.lang.Object obj45 = properties41.put((java.lang.Object) properties43, (java.lang.Object) (short) 1);
        java.util.Enumeration<java.lang.Object> objEnumeration46 = properties43.elements();
        java.lang.Object obj47 = properties28.replace((java.lang.Object) atomikosProperties34, (java.lang.Object) properties43);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties49 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties49.setThreadedTwoPhaseCommit(true);
        java.lang.String str52 = atomikosProperties49.getService();
        boolean boolean53 = atomikosProperties49.isSerialJtaTransactions();
        java.lang.Object obj54 = properties43.getOrDefault((java.lang.Object) "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.tm_unique_name=, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}", (java.lang.Object) atomikosProperties49);
        boolean boolean55 = properties22.equals((java.lang.Object) properties43);
        properties8.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties43);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties57 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties57.setDefaultJtaTimeout((long) (byte) 10);
        atomikosProperties57.setCheckpointInterval((long) (byte) 0);
        atomikosProperties57.setTransactionManagerUniqueName("");
        boolean boolean64 = atomikosProperties57.isEnableLogging();
        atomikosProperties57.setLogBaseDir("hi!");
        atomikosProperties57.setForceShutdownOnVmExit(false);
        java.util.Properties properties69 = atomikosProperties57.asProperties();
        java.lang.Object obj70 = properties43.get((java.lang.Object) properties69);
        java.util.Enumeration<java.lang.Object> objEnumeration71 = properties43.elements();
        org.junit.Assert.assertNotNull(properties7);
        org.junit.Assert.assertNotNull(properties8);
        org.junit.Assert.assertNotNull(objCollection9);
        org.junit.Assert.assertNull(obj16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNull(obj30);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 0 + "'", int32 == 0);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 50 + "'", int35 == 50);
        org.junit.Assert.assertTrue("'" + long36 + "' != '" + 300000L + "'", long36 == 300000L);
        org.junit.Assert.assertNotNull(properties37);
        org.junit.Assert.assertNotNull(properties38);
        org.junit.Assert.assertNull(obj45);
        org.junit.Assert.assertNotNull(objEnumeration46);
        org.junit.Assert.assertNull(obj47);
        org.junit.Assert.assertNull(str52);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertNotNull(obj54);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64 == true);
        org.junit.Assert.assertNotNull(properties69);
        org.junit.Assert.assertNull(obj70);
        org.junit.Assert.assertNotNull(objEnumeration71);
    }

    @Test
    public void test1618() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1618");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Properties properties2 = new java.util.Properties(properties0);
        java.util.Properties properties3 = null;
        java.util.Properties properties4 = new java.util.Properties(properties3);
        java.lang.Object obj6 = properties2.put((java.lang.Object) properties4, (java.lang.Object) (short) 1);
        properties4.clear();
        int int8 = properties4.size();
        java.util.Properties properties9 = null;
        java.util.Properties properties10 = new java.util.Properties(properties9);
        java.util.Properties properties11 = new java.util.Properties(properties9);
        java.util.Properties properties12 = null;
        java.util.Properties properties13 = new java.util.Properties(properties12);
        java.lang.Object obj15 = properties11.put((java.lang.Object) properties13, (java.lang.Object) (short) 1);
        java.util.Properties properties16 = new java.util.Properties(properties13);
        java.util.Properties properties17 = new java.util.Properties(properties13);
        boolean boolean19 = properties4.remove((java.lang.Object) properties13, (java.lang.Object) 10.0f);
        java.util.Enumeration<java.lang.Object> objEnumeration20 = properties13.elements();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties21 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties21.setDefaultJtaTimeout((long) (byte) 10);
        atomikosProperties21.setCheckpointInterval((long) (byte) 0);
        long long26 = atomikosProperties21.getMaxTimeout();
        atomikosProperties21.setSerialJtaTransactions(true);
        java.util.Properties properties29 = new java.util.Properties();
        java.util.Enumeration<?> wildcardEnumeration30 = properties29.propertyNames();
        java.lang.Object obj31 = properties13.replace((java.lang.Object) atomikosProperties21, (java.lang.Object) properties29);
        java.util.Properties properties32 = null;
        java.util.Properties properties33 = new java.util.Properties(properties32);
        java.util.Properties properties34 = new java.util.Properties(properties32);
        java.util.Properties properties35 = null;
        java.util.Properties properties36 = new java.util.Properties(properties35);
        java.lang.Object obj38 = properties34.put((java.lang.Object) properties36, (java.lang.Object) (short) 1);
        boolean boolean39 = properties34.isEmpty();
        java.util.Properties properties40 = null;
        java.util.Properties properties41 = new java.util.Properties(properties40);
        java.util.Properties properties42 = new java.util.Properties(properties40);
        boolean boolean43 = properties34.containsKey((java.lang.Object) properties42);
        java.util.Properties properties44 = new java.util.Properties(properties42);
        java.util.Properties properties45 = null;
        java.util.Properties properties46 = new java.util.Properties(properties45);
        java.util.Properties properties47 = new java.util.Properties(properties45);
        java.util.Properties properties48 = null;
        java.util.Properties properties49 = new java.util.Properties(properties48);
        java.lang.Object obj51 = properties47.put((java.lang.Object) properties49, (java.lang.Object) (short) 1);
        boolean boolean52 = properties47.isEmpty();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties53 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties53.setDefaultJtaTimeout((long) (byte) 10);
        atomikosProperties53.setCheckpointInterval((long) (byte) 0);
        atomikosProperties53.setTransactionManagerUniqueName("");
        java.util.Properties properties60 = atomikosProperties53.asProperties();
        java.lang.Object obj61 = properties47.remove((java.lang.Object) properties60);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties62 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties62.setDefaultJtaTimeout((long) (byte) 10);
        atomikosProperties62.setCheckpointInterval((long) (byte) 0);
        atomikosProperties62.setTransactionManagerUniqueName("");
        java.lang.Object obj69 = properties60.remove((java.lang.Object) atomikosProperties62);
        java.util.Enumeration<java.lang.Object> objEnumeration70 = properties60.elements();
        java.lang.Object obj71 = properties44.get((java.lang.Object) properties60);
        properties13.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties60);
        java.util.Properties properties73 = new java.util.Properties(properties13);
        java.lang.Object obj74 = properties73.clone();
        java.util.Set<java.lang.String> strSet75 = properties73.stringPropertyNames();
        java.lang.String str76 = properties73.toString();
        java.util.Map<java.lang.Object, java.lang.Object> objMap77 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties73.putAll(objMap77);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(obj6);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertNull(obj15);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(objEnumeration20);
        org.junit.Assert.assertTrue("'" + long26 + "' != '" + 300000L + "'", long26 == 300000L);
        org.junit.Assert.assertNotNull(wildcardEnumeration30);
        org.junit.Assert.assertNull(obj31);
        org.junit.Assert.assertNull(obj38);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNull(obj51);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNotNull(properties60);
        org.junit.Assert.assertNull(obj61);
        org.junit.Assert.assertNull(obj69);
        org.junit.Assert.assertNotNull(objEnumeration70);
        org.junit.Assert.assertNull(obj71);
        org.junit.Assert.assertNotNull(obj74);
        org.junit.Assert.assertEquals(obj74.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj74), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj74), "{}");
        org.junit.Assert.assertNotNull(strSet75);
        org.junit.Assert.assertEquals("'" + str76 + "' != '" + "{}" + "'", str76, "{}");
    }

    @Test
    public void test1619() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1619");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Properties properties2 = new java.util.Properties(properties0);
        java.util.Properties properties3 = null;
        java.util.Properties properties4 = new java.util.Properties(properties3);
        java.lang.Object obj6 = properties2.put((java.lang.Object) properties4, (java.lang.Object) (short) 1);
        properties4.clear();
        int int8 = properties4.size();
        java.util.Properties properties9 = null;
        java.util.Properties properties10 = new java.util.Properties(properties9);
        java.util.Properties properties11 = new java.util.Properties(properties9);
        java.util.Properties properties12 = null;
        java.util.Properties properties13 = new java.util.Properties(properties12);
        java.lang.Object obj15 = properties11.put((java.lang.Object) properties13, (java.lang.Object) (short) 1);
        java.util.Properties properties16 = new java.util.Properties(properties13);
        java.util.Properties properties17 = new java.util.Properties(properties13);
        boolean boolean19 = properties4.remove((java.lang.Object) properties13, (java.lang.Object) 10.0f);
        java.util.Enumeration<java.lang.Object> objEnumeration20 = properties13.elements();
        java.util.Properties properties21 = new java.util.Properties(properties13);
        boolean boolean23 = properties13.contains((java.lang.Object) (byte) 100);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties24 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        int int25 = atomikosProperties24.getMaxActives();
        atomikosProperties24.setLogBaseName("");
        atomikosProperties24.setMaxActives((-1));
        java.lang.Object obj30 = properties13.remove((java.lang.Object) atomikosProperties24);
        java.util.Enumeration<?> wildcardEnumeration31 = properties13.propertyNames();
        java.lang.Object obj34 = properties13.setProperty("{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=0, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog, {}={}}", "{tmlog=}");
        java.io.InputStream inputStream35 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties13.loadFromXML(inputStream35);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(obj6);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertNull(obj15);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(objEnumeration20);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 50 + "'", int25 == 50);
        org.junit.Assert.assertNull(obj30);
        org.junit.Assert.assertNotNull(wildcardEnumeration31);
        org.junit.Assert.assertNull(obj34);
    }

    @Test
    public void test1620() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1620");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Properties properties2 = new java.util.Properties(properties0);
        java.util.Properties properties3 = null;
        java.util.Properties properties4 = new java.util.Properties(properties3);
        java.lang.Object obj6 = properties2.put((java.lang.Object) properties4, (java.lang.Object) (short) 1);
        boolean boolean7 = properties2.isEmpty();
        java.util.Properties properties8 = null;
        java.util.Properties properties9 = new java.util.Properties(properties8);
        java.util.Properties properties10 = new java.util.Properties(properties8);
        boolean boolean11 = properties2.containsKey((java.lang.Object) properties10);
        java.util.Properties properties12 = null;
        java.util.Properties properties13 = new java.util.Properties(properties12);
        java.util.Properties properties14 = new java.util.Properties(properties12);
        java.util.Properties properties15 = null;
        java.util.Properties properties16 = new java.util.Properties(properties15);
        java.lang.Object obj18 = properties14.put((java.lang.Object) properties16, (java.lang.Object) (short) 1);
        java.util.Properties properties20 = null;
        java.util.Properties properties21 = new java.util.Properties(properties20);
        java.util.Properties properties22 = new java.util.Properties(properties20);
        java.util.Properties properties23 = null;
        java.util.Properties properties24 = new java.util.Properties(properties23);
        java.lang.Object obj26 = properties22.put((java.lang.Object) properties24, (java.lang.Object) (short) 1);
        boolean boolean27 = properties16.remove((java.lang.Object) false, (java.lang.Object) (short) 1);
        java.util.Set<java.lang.String> strSet28 = properties16.stringPropertyNames();
        boolean boolean29 = properties10.containsKey((java.lang.Object) strSet28);
        java.util.Properties properties30 = null;
        java.util.Properties properties31 = new java.util.Properties(properties30);
        java.util.Properties properties32 = new java.util.Properties(properties30);
        java.util.Properties properties33 = null;
        java.util.Properties properties34 = new java.util.Properties(properties33);
        java.lang.Object obj36 = properties32.put((java.lang.Object) properties34, (java.lang.Object) (short) 1);
        properties34.clear();
        java.lang.String str39 = properties34.getProperty("");
        java.util.Properties properties40 = null;
        java.util.Properties properties41 = new java.util.Properties(properties40);
        java.util.Properties properties42 = new java.util.Properties(properties40);
        java.util.Properties properties43 = null;
        java.util.Properties properties44 = new java.util.Properties(properties43);
        java.lang.Object obj46 = properties42.put((java.lang.Object) properties44, (java.lang.Object) (short) 1);
        properties34.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties42);
        boolean boolean48 = properties10.containsKey((java.lang.Object) properties34);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties50 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties50.setThreadedTwoPhaseCommit(true);
        boolean boolean53 = atomikosProperties50.isEnableLogging();
        java.lang.Object obj54 = properties10.put((java.lang.Object) '4', (java.lang.Object) boolean53);
        java.util.Enumeration<java.lang.Object> objEnumeration55 = properties10.keys();
        java.io.Writer writer56 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties10.store(writer56, "");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(obj6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNull(obj18);
        org.junit.Assert.assertNull(obj26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(strSet28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNull(obj36);
        org.junit.Assert.assertNull(str39);
        org.junit.Assert.assertNull(obj46);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertNull(obj54);
        org.junit.Assert.assertNotNull(objEnumeration55);
    }

    @Test
    public void test1621() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1621");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setDefaultJtaTimeout((long) (byte) 10);
        long long3 = atomikosProperties0.getDefaultJtaTimeout();
        atomikosProperties0.setTransactionManagerUniqueName("hi!");
        atomikosProperties0.setTransactionManagerUniqueName("{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=0, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.tm_unique_name=, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
        long long8 = atomikosProperties0.getMaxTimeout();
        atomikosProperties0.setTransactionManagerUniqueName("{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
        int int11 = atomikosProperties0.getMaxActives();
        org.junit.Assert.assertTrue("'" + long3 + "' != '" + 10L + "'", long3 == 10L);
        org.junit.Assert.assertTrue("'" + long8 + "' != '" + 300000L + "'", long8 == 300000L);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 50 + "'", int11 == 50);
    }

    @Test
    public void test1622() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1622");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Properties properties2 = new java.util.Properties(properties0);
        java.util.Properties properties3 = null;
        java.util.Properties properties4 = new java.util.Properties(properties3);
        java.lang.Object obj6 = properties2.put((java.lang.Object) properties4, (java.lang.Object) (short) 1);
        java.util.Properties properties8 = null;
        java.util.Properties properties9 = new java.util.Properties(properties8);
        java.util.Properties properties10 = new java.util.Properties(properties8);
        java.util.Properties properties11 = null;
        java.util.Properties properties12 = new java.util.Properties(properties11);
        java.lang.Object obj14 = properties10.put((java.lang.Object) properties12, (java.lang.Object) (short) 1);
        boolean boolean15 = properties4.remove((java.lang.Object) false, (java.lang.Object) (short) 1);
        java.lang.Object obj17 = properties4.remove((java.lang.Object) '#');
        java.util.Set<java.lang.Object> objSet18 = properties4.keySet();
        properties4.clear();
        java.lang.String str20 = properties4.toString();
        java.lang.String str21 = properties4.toString();
        org.junit.Assert.assertNull(obj6);
        org.junit.Assert.assertNull(obj14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNull(obj17);
        org.junit.Assert.assertNotNull(objSet18);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "{}" + "'", str20, "{}");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "{}" + "'", str21, "{}");
    }

    @Test
    public void test1623() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1623");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Properties properties2 = new java.util.Properties(properties0);
        boolean boolean4 = properties2.containsValue((java.lang.Object) (short) 100);
        java.lang.Object obj5 = properties2.clone();
        java.lang.Object obj8 = properties2.setProperty("{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=0, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.tm_unique_name=, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}", "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.tm_unique_name=, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
        java.util.Properties properties9 = null;
        java.util.Properties properties10 = new java.util.Properties(properties9);
        java.util.Properties properties11 = new java.util.Properties(properties9);
        java.util.Properties properties12 = null;
        java.util.Properties properties13 = new java.util.Properties(properties12);
        java.lang.Object obj15 = properties11.put((java.lang.Object) properties13, (java.lang.Object) (short) 1);
        properties13.clear();
        int int17 = properties13.size();
        java.util.Properties properties18 = null;
        java.util.Properties properties19 = new java.util.Properties(properties18);
        java.util.Properties properties20 = new java.util.Properties(properties18);
        java.util.Properties properties21 = null;
        java.util.Properties properties22 = new java.util.Properties(properties21);
        java.lang.Object obj24 = properties20.put((java.lang.Object) properties22, (java.lang.Object) (short) 1);
        java.util.Properties properties25 = new java.util.Properties(properties22);
        java.util.Properties properties26 = new java.util.Properties(properties22);
        boolean boolean28 = properties13.remove((java.lang.Object) properties22, (java.lang.Object) 10.0f);
        java.util.Enumeration<java.lang.Object> objEnumeration29 = properties22.elements();
        java.util.Properties properties30 = new java.util.Properties(properties22);
        boolean boolean32 = properties22.contains((java.lang.Object) (byte) 100);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties33 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        int int34 = atomikosProperties33.getMaxActives();
        atomikosProperties33.setLogBaseName("");
        atomikosProperties33.setMaxActives((-1));
        java.lang.Object obj39 = properties22.remove((java.lang.Object) atomikosProperties33);
        boolean boolean40 = properties2.containsKey((java.lang.Object) properties22);
        java.lang.Class<?> wildcardClass41 = properties2.getClass();
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(obj5);
        org.junit.Assert.assertEquals(obj5.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj5), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj5), "{}");
        org.junit.Assert.assertNull(obj8);
        org.junit.Assert.assertNull(obj15);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 0 + "'", int17 == 0);
        org.junit.Assert.assertNull(obj24);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(objEnumeration29);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 50 + "'", int34 == 50);
        org.junit.Assert.assertNull(obj39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(wildcardClass41);
    }

    @Test
    public void test1624() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1624");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setDefaultJtaTimeout((long) (byte) 10);
        long long3 = atomikosProperties0.getDefaultJtaTimeout();
        atomikosProperties0.setTransactionManagerUniqueName("");
        boolean boolean6 = atomikosProperties0.isEnableLogging();
        java.lang.String str7 = atomikosProperties0.getLogBaseDir();
        java.util.Properties properties8 = atomikosProperties0.asProperties();
        java.lang.String str9 = atomikosProperties0.getService();
        boolean boolean10 = atomikosProperties0.isEnableLogging();
        boolean boolean11 = atomikosProperties0.isThreadedTwoPhaseCommit();
        long long12 = atomikosProperties0.getMaxTimeout();
        atomikosProperties0.setMaxActives(11);
        atomikosProperties0.setCheckpointInterval((long) 1);
        org.junit.Assert.assertTrue("'" + long3 + "' != '" + 10L + "'", long3 == 10L);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNotNull(properties8);
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + long12 + "' != '" + 300000L + "'", long12 == 300000L);
    }

    @Test
    public void test1625() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1625");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        int int1 = atomikosProperties0.getMaxActives();
        long long2 = atomikosProperties0.getMaxTimeout();
        java.util.Properties properties3 = atomikosProperties0.asProperties();
        atomikosProperties0.setService("hi!");
        int int6 = atomikosProperties0.getMaxActives();
        boolean boolean7 = atomikosProperties0.isEnableLogging();
        java.util.Properties properties8 = atomikosProperties0.asProperties();
        java.util.Properties properties9 = atomikosProperties0.asProperties();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 50 + "'", int1 == 50);
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + 300000L + "'", long2 == 300000L);
        org.junit.Assert.assertNotNull(properties3);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 50 + "'", int6 == 50);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(properties8);
        org.junit.Assert.assertNotNull(properties9);
    }

    @Test
    public void test1626() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1626");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Properties properties2 = new java.util.Properties(properties0);
        java.util.Properties properties3 = null;
        java.util.Properties properties4 = new java.util.Properties(properties3);
        java.lang.Object obj6 = properties2.put((java.lang.Object) properties4, (java.lang.Object) (short) 1);
        java.util.Properties properties8 = null;
        java.util.Properties properties9 = new java.util.Properties(properties8);
        java.util.Properties properties10 = new java.util.Properties(properties8);
        java.util.Properties properties11 = null;
        java.util.Properties properties12 = new java.util.Properties(properties11);
        java.lang.Object obj14 = properties10.put((java.lang.Object) properties12, (java.lang.Object) (short) 1);
        boolean boolean15 = properties4.remove((java.lang.Object) false, (java.lang.Object) (short) 1);
        java.util.Set<java.lang.String> strSet16 = properties4.stringPropertyNames();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties17 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties17.setDefaultJtaTimeout((long) (byte) 10);
        atomikosProperties17.setCheckpointInterval((long) (byte) 0);
        atomikosProperties17.setTransactionManagerUniqueName("");
        boolean boolean24 = atomikosProperties17.isEnableLogging();
        atomikosProperties17.setSerialJtaTransactions(false);
        atomikosProperties17.setLogBaseDir("");
        java.util.Properties properties29 = null;
        java.util.Properties properties30 = new java.util.Properties(properties29);
        java.util.Properties properties31 = new java.util.Properties(properties29);
        java.util.Properties properties32 = null;
        java.util.Properties properties33 = new java.util.Properties(properties32);
        java.lang.Object obj35 = properties31.put((java.lang.Object) properties33, (java.lang.Object) (short) 1);
        java.util.Properties properties36 = new java.util.Properties(properties33);
        boolean boolean37 = properties4.remove((java.lang.Object) "", (java.lang.Object) properties36);
        java.util.Properties properties38 = null;
        java.util.Properties properties39 = new java.util.Properties(properties38);
        java.util.Properties properties40 = new java.util.Properties(properties38);
        java.lang.Object obj41 = properties40.clone();
        boolean boolean42 = properties4.contains(obj41);
        java.util.Collection<java.lang.Object> objCollection43 = properties4.values();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties44 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties44.setDefaultJtaTimeout((long) (byte) 10);
        atomikosProperties44.setCheckpointInterval((long) (byte) 0);
        atomikosProperties44.setTransactionManagerUniqueName("");
        java.util.Properties properties51 = atomikosProperties44.asProperties();
        java.lang.String str52 = atomikosProperties44.getLogBaseName();
        atomikosProperties44.setCheckpointInterval(100L);
        java.lang.String str55 = atomikosProperties44.getTransactionManagerUniqueName();
        atomikosProperties44.setLogBaseName("{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.tm_unique_name=, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
        atomikosProperties44.setThreadedTwoPhaseCommit(true);
        atomikosProperties44.setEnableLogging(false);
        java.lang.Object obj62 = properties4.get((java.lang.Object) atomikosProperties44);
        java.util.Properties properties63 = atomikosProperties44.asProperties();
        java.util.Properties properties64 = atomikosProperties44.asProperties();
        java.io.OutputStream outputStream65 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties64.storeToXML(outputStream65, "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.log_base_dir={}, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(obj6);
        org.junit.Assert.assertNull(obj14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(strSet16);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNull(obj35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(obj41);
        org.junit.Assert.assertEquals(obj41.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj41), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj41), "{}");
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(objCollection43);
        org.junit.Assert.assertNotNull(properties51);
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "tmlog" + "'", str52, "tmlog");
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "" + "'", str55, "");
        org.junit.Assert.assertNull(obj62);
        org.junit.Assert.assertNotNull(properties63);
        org.junit.Assert.assertNotNull(properties64);
    }

    @Test
    public void test1627() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1627");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setDefaultJtaTimeout((long) (byte) 10);
        long long3 = atomikosProperties0.getDefaultJtaTimeout();
        atomikosProperties0.setTransactionManagerUniqueName("");
        boolean boolean6 = atomikosProperties0.isEnableLogging();
        java.lang.String str7 = atomikosProperties0.getLogBaseDir();
        java.util.Properties properties8 = atomikosProperties0.asProperties();
        boolean boolean9 = atomikosProperties0.isEnableLogging();
        long long10 = atomikosProperties0.getDefaultJtaTimeout();
        atomikosProperties0.setMaxActives((int) (short) 10);
        boolean boolean13 = atomikosProperties0.isForceShutdownOnVmExit();
        java.lang.String str14 = atomikosProperties0.getLogBaseDir();
        org.junit.Assert.assertTrue("'" + long3 + "' != '" + 10L + "'", long3 == 10L);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNotNull(properties8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertTrue("'" + long10 + "' != '" + 10L + "'", long10 == 10L);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNull(str14);
    }

    @Test
    public void test1628() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1628");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setDefaultJtaTimeout((long) (byte) 10);
        atomikosProperties0.setCheckpointInterval((long) (byte) 0);
        atomikosProperties0.setTransactionManagerUniqueName("");
        boolean boolean7 = atomikosProperties0.isEnableLogging();
        java.util.Properties properties8 = atomikosProperties0.asProperties();
        java.util.Properties properties9 = new java.util.Properties(properties8);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties10 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties10.setDefaultJtaTimeout((long) (byte) 10);
        atomikosProperties10.setSerialJtaTransactions(false);
        atomikosProperties10.setMaxTimeout((long) (short) -1);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties17 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties17.setDefaultJtaTimeout((long) (byte) 10);
        atomikosProperties17.setCheckpointInterval((long) (byte) 0);
        atomikosProperties17.setTransactionManagerUniqueName("");
        java.util.Properties properties24 = atomikosProperties17.asProperties();
        java.lang.String str25 = atomikosProperties17.getLogBaseName();
        java.util.Properties properties26 = atomikosProperties17.asProperties();
        java.lang.Object obj27 = properties8.getOrDefault((java.lang.Object) (short) -1, (java.lang.Object) atomikosProperties17);
        java.util.Set<java.lang.Object> objSet28 = properties8.keySet();
        java.lang.String str29 = properties8.toString();
        java.lang.Object obj30 = properties8.clone();
        java.io.PrintStream printStream31 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties8.list(printStream31);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(properties8);
        org.junit.Assert.assertNotNull(properties24);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "tmlog" + "'", str25, "tmlog");
        org.junit.Assert.assertNotNull(properties26);
        org.junit.Assert.assertNotNull(obj27);
        org.junit.Assert.assertNotNull(objSet28);
// flaky:         org.junit.Assert.assertEquals("'" + str29 + "' != '" + "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=0, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.tm_unique_name=, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}" + "'", str29, "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=0, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.tm_unique_name=, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
        org.junit.Assert.assertNotNull(obj30);
// flaky:         org.junit.Assert.assertEquals(obj30.toString(), "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=0, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.tm_unique_name=, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
// flaky:         org.junit.Assert.assertEquals(java.lang.String.valueOf(obj30), "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=0, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.tm_unique_name=, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
// flaky:         org.junit.Assert.assertEquals(java.util.Objects.toString(obj30), "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=0, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.tm_unique_name=, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
    }

    @Test
    public void test1629() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1629");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        int int1 = atomikosProperties0.getMaxActives();
        long long2 = atomikosProperties0.getMaxTimeout();
        java.util.Properties properties3 = atomikosProperties0.asProperties();
        java.util.Properties properties4 = null;
        java.util.Properties properties5 = new java.util.Properties(properties4);
        java.util.Properties properties6 = new java.util.Properties(properties4);
        java.util.Properties properties7 = null;
        java.util.Properties properties8 = new java.util.Properties(properties7);
        java.lang.Object obj10 = properties6.put((java.lang.Object) properties8, (java.lang.Object) (short) 1);
        java.util.Properties properties11 = new java.util.Properties(properties8);
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet12 = properties8.entrySet();
        java.lang.Object obj13 = properties3.remove((java.lang.Object) properties8);
        java.util.Enumeration<?> wildcardEnumeration14 = properties3.propertyNames();
        java.util.Properties properties15 = new java.util.Properties(properties3);
        java.util.Properties properties16 = null;
        java.util.Properties properties17 = new java.util.Properties(properties16);
        java.util.Properties properties18 = new java.util.Properties(properties16);
        java.util.Properties properties19 = null;
        java.util.Properties properties20 = new java.util.Properties(properties19);
        java.lang.Object obj22 = properties18.put((java.lang.Object) properties20, (java.lang.Object) (short) 1);
        properties20.clear();
        int int24 = properties20.size();
        java.util.Properties properties25 = null;
        java.util.Properties properties26 = new java.util.Properties(properties25);
        java.util.Properties properties27 = new java.util.Properties(properties25);
        java.util.Properties properties28 = null;
        java.util.Properties properties29 = new java.util.Properties(properties28);
        java.lang.Object obj31 = properties27.put((java.lang.Object) properties29, (java.lang.Object) (short) 1);
        java.util.Properties properties32 = new java.util.Properties(properties29);
        java.util.Properties properties33 = new java.util.Properties(properties29);
        boolean boolean35 = properties20.remove((java.lang.Object) properties29, (java.lang.Object) 10.0f);
        java.util.Enumeration<java.lang.Object> objEnumeration36 = properties29.elements();
        java.util.Properties properties37 = new java.util.Properties(properties29);
        java.lang.Object obj38 = properties37.clone();
        boolean boolean39 = properties15.contains((java.lang.Object) properties37);
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet40 = properties37.entrySet();
        java.lang.Object obj43 = properties37.setProperty("{[]={com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=0, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.tm_unique_name=, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}}", "");
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 50 + "'", int1 == 50);
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + 300000L + "'", long2 == 300000L);
        org.junit.Assert.assertNotNull(properties3);
        org.junit.Assert.assertNull(obj10);
        org.junit.Assert.assertNotNull(objEntrySet12);
        org.junit.Assert.assertNull(obj13);
        org.junit.Assert.assertNotNull(wildcardEnumeration14);
        org.junit.Assert.assertNull(obj22);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 0 + "'", int24 == 0);
        org.junit.Assert.assertNull(obj31);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(objEnumeration36);
        org.junit.Assert.assertNotNull(obj38);
        org.junit.Assert.assertEquals(obj38.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj38), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj38), "{}");
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(objEntrySet40);
        org.junit.Assert.assertNull(obj43);
    }

    @Test
    public void test1630() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1630");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setThreadedTwoPhaseCommit(true);
        atomikosProperties0.setMaxActives((int) '#');
        atomikosProperties0.setForceShutdownOnVmExit(true);
        java.lang.String str7 = atomikosProperties0.getLogBaseDir();
        java.util.Properties properties8 = atomikosProperties0.asProperties();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties9 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties9.setThreadedTwoPhaseCommit(true);
        atomikosProperties9.setMaxActives((int) '#');
        atomikosProperties9.setEnableLogging(true);
        boolean boolean16 = properties8.containsKey((java.lang.Object) true);
        java.lang.Object obj19 = properties8.setProperty("tmlog", "");
        java.util.Enumeration<java.lang.Object> objEnumeration20 = properties8.elements();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet21 = properties8.entrySet();
        java.util.Set<java.lang.String> strSet22 = properties8.stringPropertyNames();
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNotNull(properties8);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNull(obj19);
        org.junit.Assert.assertNotNull(objEnumeration20);
        org.junit.Assert.assertNotNull(objEntrySet21);
        org.junit.Assert.assertNotNull(strSet22);
    }

    @Test
    public void test1631() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1631");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setDefaultJtaTimeout((long) (byte) 10);
        atomikosProperties0.setCheckpointInterval((long) (byte) 0);
        atomikosProperties0.setTransactionManagerUniqueName("");
        java.util.Properties properties7 = atomikosProperties0.asProperties();
        atomikosProperties0.setThreadedTwoPhaseCommit(false);
        atomikosProperties0.setMaxActives((int) (byte) 1);
        java.util.Properties properties12 = atomikosProperties0.asProperties();
        int int13 = atomikosProperties0.getMaxActives();
        atomikosProperties0.setCheckpointInterval((long) (-1));
        org.junit.Assert.assertNotNull(properties7);
        org.junit.Assert.assertNotNull(properties12);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 1 + "'", int13 == 1);
    }

    @Test
    public void test1632() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1632");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Properties properties2 = new java.util.Properties(properties0);
        java.util.Properties properties3 = null;
        java.util.Properties properties4 = new java.util.Properties(properties3);
        java.lang.Object obj6 = properties2.put((java.lang.Object) properties4, (java.lang.Object) (short) 1);
        boolean boolean7 = properties2.isEmpty();
        java.util.Properties properties8 = null;
        java.util.Properties properties9 = new java.util.Properties(properties8);
        java.util.Properties properties10 = new java.util.Properties(properties8);
        boolean boolean11 = properties2.containsKey((java.lang.Object) properties10);
        java.util.Properties properties12 = null;
        java.util.Properties properties13 = new java.util.Properties(properties12);
        java.util.Properties properties14 = new java.util.Properties(properties12);
        java.util.Properties properties15 = null;
        java.util.Properties properties16 = new java.util.Properties(properties15);
        java.lang.Object obj18 = properties14.put((java.lang.Object) properties16, (java.lang.Object) (short) 1);
        java.util.Properties properties20 = null;
        java.util.Properties properties21 = new java.util.Properties(properties20);
        java.util.Properties properties22 = new java.util.Properties(properties20);
        java.util.Properties properties23 = null;
        java.util.Properties properties24 = new java.util.Properties(properties23);
        java.lang.Object obj26 = properties22.put((java.lang.Object) properties24, (java.lang.Object) (short) 1);
        boolean boolean27 = properties16.remove((java.lang.Object) false, (java.lang.Object) (short) 1);
        java.util.Set<java.lang.String> strSet28 = properties16.stringPropertyNames();
        boolean boolean29 = properties10.containsKey((java.lang.Object) strSet28);
        java.util.Properties properties30 = null;
        java.util.Properties properties31 = new java.util.Properties(properties30);
        java.util.Properties properties32 = new java.util.Properties(properties30);
        java.util.Properties properties33 = null;
        java.util.Properties properties34 = new java.util.Properties(properties33);
        java.lang.Object obj36 = properties32.put((java.lang.Object) properties34, (java.lang.Object) (short) 1);
        properties34.clear();
        java.lang.String str39 = properties34.getProperty("");
        java.util.Properties properties40 = null;
        java.util.Properties properties41 = new java.util.Properties(properties40);
        java.util.Properties properties42 = new java.util.Properties(properties40);
        java.util.Properties properties43 = null;
        java.util.Properties properties44 = new java.util.Properties(properties43);
        java.lang.Object obj46 = properties42.put((java.lang.Object) properties44, (java.lang.Object) (short) 1);
        properties34.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties42);
        boolean boolean48 = properties10.containsKey((java.lang.Object) properties34);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties49 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties49.setThreadedTwoPhaseCommit(true);
        atomikosProperties49.setMaxActives((int) (byte) 0);
        atomikosProperties49.setEnableLogging(true);
        atomikosProperties49.setForceShutdownOnVmExit(false);
        boolean boolean58 = atomikosProperties49.isThreadedTwoPhaseCommit();
        atomikosProperties49.setForceShutdownOnVmExit(false);
        java.util.Properties properties61 = null;
        java.util.Properties properties62 = new java.util.Properties(properties61);
        java.util.Properties properties63 = new java.util.Properties(properties61);
        java.util.Properties properties64 = null;
        java.util.Properties properties65 = new java.util.Properties(properties64);
        java.lang.Object obj67 = properties63.put((java.lang.Object) properties65, (java.lang.Object) (short) 1);
        properties65.clear();
        int int69 = properties65.size();
        java.lang.Object obj72 = properties65.setProperty("hi!", "hi!");
        java.lang.Object obj75 = properties65.setProperty("tmlog", "tmlog");
        java.util.Enumeration<java.lang.Object> objEnumeration76 = properties65.elements();
        java.util.Properties properties77 = new java.util.Properties(properties65);
        java.lang.Object obj78 = properties34.put((java.lang.Object) false, (java.lang.Object) properties65);
        java.lang.Object obj81 = properties34.setProperty("{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=52, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.tm_unique_name=, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}", "{=}");
        org.junit.Assert.assertNull(obj6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNull(obj18);
        org.junit.Assert.assertNull(obj26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(strSet28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNull(obj36);
        org.junit.Assert.assertNull(str39);
        org.junit.Assert.assertNull(obj46);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertNull(obj67);
        org.junit.Assert.assertTrue("'" + int69 + "' != '" + 0 + "'", int69 == 0);
        org.junit.Assert.assertNull(obj72);
        org.junit.Assert.assertNull(obj75);
        org.junit.Assert.assertNotNull(objEnumeration76);
        org.junit.Assert.assertNull(obj78);
        org.junit.Assert.assertNull(obj81);
    }

    @Test
    public void test1633() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1633");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        boolean boolean1 = atomikosProperties0.isSerialJtaTransactions();
        boolean boolean2 = atomikosProperties0.isForceShutdownOnVmExit();
        java.util.Properties properties3 = atomikosProperties0.asProperties();
        java.io.InputStream inputStream4 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties3.loadFromXML(inputStream4);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(properties3);
    }

    @Test
    public void test1634() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1634");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Properties properties2 = new java.util.Properties(properties0);
        java.util.Properties properties3 = null;
        java.util.Properties properties4 = new java.util.Properties(properties3);
        java.lang.Object obj6 = properties2.put((java.lang.Object) properties4, (java.lang.Object) (short) 1);
        java.util.Collection<java.lang.Object> objCollection7 = properties4.values();
        java.util.Properties properties8 = null;
        java.util.Properties properties9 = new java.util.Properties(properties8);
        java.util.Properties properties10 = new java.util.Properties(properties8);
        java.util.Properties properties11 = null;
        java.util.Properties properties12 = new java.util.Properties(properties11);
        java.lang.Object obj14 = properties10.put((java.lang.Object) properties12, (java.lang.Object) (short) 1);
        java.util.Properties properties16 = null;
        java.util.Properties properties17 = new java.util.Properties(properties16);
        java.util.Properties properties18 = new java.util.Properties(properties16);
        java.util.Properties properties19 = null;
        java.util.Properties properties20 = new java.util.Properties(properties19);
        java.lang.Object obj22 = properties18.put((java.lang.Object) properties20, (java.lang.Object) (short) 1);
        boolean boolean23 = properties12.remove((java.lang.Object) false, (java.lang.Object) (short) 1);
        java.util.Set<java.lang.String> strSet24 = properties12.stringPropertyNames();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties25 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties25.setDefaultJtaTimeout((long) (byte) 10);
        long long28 = atomikosProperties25.getDefaultJtaTimeout();
        java.lang.Object obj29 = properties12.get((java.lang.Object) atomikosProperties25);
        java.util.Enumeration<java.lang.Object> objEnumeration30 = properties12.elements();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties31 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties31.setThreadedTwoPhaseCommit(true);
        atomikosProperties31.setMaxActives((int) '#');
        atomikosProperties31.setEnableLogging(true);
        int int38 = atomikosProperties31.getMaxActives();
        boolean boolean39 = properties12.containsValue((java.lang.Object) atomikosProperties31);
        java.util.Properties properties40 = atomikosProperties31.asProperties();
        java.util.Properties properties41 = null;
        java.util.Properties properties42 = new java.util.Properties(properties41);
        java.util.Properties properties43 = new java.util.Properties(properties41);
        java.util.Properties properties44 = null;
        java.util.Properties properties45 = new java.util.Properties(properties44);
        java.lang.Object obj47 = properties43.put((java.lang.Object) properties45, (java.lang.Object) (short) 1);
        boolean boolean48 = properties43.isEmpty();
        java.util.Properties properties49 = null;
        java.util.Properties properties50 = new java.util.Properties(properties49);
        java.util.Properties properties51 = new java.util.Properties(properties49);
        boolean boolean52 = properties43.containsKey((java.lang.Object) properties51);
        java.util.Properties properties53 = new java.util.Properties(properties51);
        java.util.Properties properties54 = null;
        java.util.Properties properties55 = new java.util.Properties(properties54);
        java.util.Properties properties56 = new java.util.Properties(properties54);
        java.util.Properties properties57 = null;
        java.util.Properties properties58 = new java.util.Properties(properties57);
        java.lang.Object obj60 = properties56.put((java.lang.Object) properties58, (java.lang.Object) (short) 1);
        boolean boolean61 = properties56.isEmpty();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties62 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties62.setDefaultJtaTimeout((long) (byte) 10);
        atomikosProperties62.setCheckpointInterval((long) (byte) 0);
        atomikosProperties62.setTransactionManagerUniqueName("");
        java.util.Properties properties69 = atomikosProperties62.asProperties();
        java.lang.Object obj70 = properties56.remove((java.lang.Object) properties69);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties71 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties71.setDefaultJtaTimeout((long) (byte) 10);
        atomikosProperties71.setCheckpointInterval((long) (byte) 0);
        atomikosProperties71.setTransactionManagerUniqueName("");
        java.lang.Object obj78 = properties69.remove((java.lang.Object) atomikosProperties71);
        java.util.Enumeration<java.lang.Object> objEnumeration79 = properties69.elements();
        java.lang.Object obj80 = properties53.get((java.lang.Object) properties69);
        java.lang.Object obj81 = properties4.putIfAbsent((java.lang.Object) properties40, (java.lang.Object) properties53);
        boolean boolean82 = properties53.isEmpty();
        java.lang.Object obj83 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean84 = properties53.containsValue(obj83);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(obj6);
        org.junit.Assert.assertNotNull(objCollection7);
        org.junit.Assert.assertNull(obj14);
        org.junit.Assert.assertNull(obj22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(strSet24);
        org.junit.Assert.assertTrue("'" + long28 + "' != '" + 10L + "'", long28 == 10L);
        org.junit.Assert.assertNull(obj29);
        org.junit.Assert.assertNotNull(objEnumeration30);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 35 + "'", int38 == 35);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(properties40);
        org.junit.Assert.assertNull(obj47);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertNull(obj60);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertNotNull(properties69);
        org.junit.Assert.assertNull(obj70);
        org.junit.Assert.assertNull(obj78);
        org.junit.Assert.assertNotNull(objEnumeration79);
        org.junit.Assert.assertNull(obj80);
        org.junit.Assert.assertNull(obj81);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + true + "'", boolean82 == true);
    }

    @Test
    public void test1635() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1635");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Properties properties2 = new java.util.Properties(properties0);
        java.lang.Object obj3 = properties2.clone();
        java.lang.Object obj6 = properties2.setProperty("tmlog", "");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties7 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties7.setDefaultJtaTimeout((long) (byte) 10);
        long long10 = atomikosProperties7.getDefaultJtaTimeout();
        atomikosProperties7.setTransactionManagerUniqueName("");
        boolean boolean13 = atomikosProperties7.isEnableLogging();
        java.lang.String str14 = atomikosProperties7.getLogBaseDir();
        java.util.Properties properties15 = atomikosProperties7.asProperties();
        boolean boolean16 = atomikosProperties7.isEnableLogging();
        atomikosProperties7.setLogBaseName("{}");
        java.lang.String str19 = atomikosProperties7.getService();
        java.lang.Class<?> wildcardClass20 = atomikosProperties7.getClass();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties21 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties21.setThreadedTwoPhaseCommit(true);
        boolean boolean24 = atomikosProperties21.isEnableLogging();
        atomikosProperties21.setCheckpointInterval((long) 35);
        atomikosProperties21.setDefaultJtaTimeout((long) (byte) 0);
        java.lang.String str29 = atomikosProperties21.getLogBaseName();
        atomikosProperties21.setTransactionManagerUniqueName("{tmlog={com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=0, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.tm_unique_name=, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}, 4=true}");
        java.util.Properties properties32 = null;
        java.util.Properties properties33 = new java.util.Properties(properties32);
        java.util.Properties properties34 = new java.util.Properties(properties32);
        java.util.Properties properties35 = null;
        java.util.Properties properties36 = new java.util.Properties(properties35);
        java.lang.Object obj38 = properties34.put((java.lang.Object) properties36, (java.lang.Object) (short) 1);
        java.util.Properties properties40 = null;
        java.util.Properties properties41 = new java.util.Properties(properties40);
        java.util.Properties properties42 = new java.util.Properties(properties40);
        java.util.Properties properties43 = null;
        java.util.Properties properties44 = new java.util.Properties(properties43);
        java.lang.Object obj46 = properties42.put((java.lang.Object) properties44, (java.lang.Object) (short) 1);
        boolean boolean47 = properties36.remove((java.lang.Object) false, (java.lang.Object) (short) 1);
        java.util.Set<java.lang.String> strSet48 = properties36.stringPropertyNames();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties49 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties49.setDefaultJtaTimeout((long) (byte) 10);
        long long52 = atomikosProperties49.getDefaultJtaTimeout();
        java.lang.Object obj53 = properties36.get((java.lang.Object) atomikosProperties49);
        java.util.Properties properties54 = null;
        java.util.Properties properties55 = new java.util.Properties(properties54);
        java.util.Properties properties56 = new java.util.Properties(properties54);
        java.util.Properties properties57 = null;
        java.util.Properties properties58 = new java.util.Properties(properties57);
        java.lang.Object obj60 = properties56.put((java.lang.Object) properties58, (java.lang.Object) (short) 1);
        java.util.Properties properties62 = null;
        java.util.Properties properties63 = new java.util.Properties(properties62);
        java.util.Properties properties64 = new java.util.Properties(properties62);
        java.util.Properties properties65 = null;
        java.util.Properties properties66 = new java.util.Properties(properties65);
        java.lang.Object obj68 = properties64.put((java.lang.Object) properties66, (java.lang.Object) (short) 1);
        boolean boolean69 = properties58.remove((java.lang.Object) false, (java.lang.Object) (short) 1);
        java.lang.Object obj71 = properties58.remove((java.lang.Object) '#');
        java.util.Set<java.lang.Object> objSet72 = properties58.keySet();
        boolean boolean73 = properties36.containsKey((java.lang.Object) properties58);
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet74 = properties36.entrySet();
        java.util.Enumeration<java.lang.Object> objEnumeration75 = properties36.keys();
        boolean boolean76 = properties2.replace((java.lang.Object) wildcardClass20, (java.lang.Object) "{tmlog={com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=0, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.tm_unique_name=, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}, 4=true}", (java.lang.Object) properties36);
        java.io.OutputStream outputStream77 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties36.storeToXML(outputStream77, "");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(obj3);
        org.junit.Assert.assertEquals(obj3.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj3), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj3), "{}");
        org.junit.Assert.assertNull(obj6);
        org.junit.Assert.assertTrue("'" + long10 + "' != '" + 10L + "'", long10 == 10L);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertNotNull(properties15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNull(str19);
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "tmlog" + "'", str29, "tmlog");
        org.junit.Assert.assertNull(obj38);
        org.junit.Assert.assertNull(obj46);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNotNull(strSet48);
        org.junit.Assert.assertTrue("'" + long52 + "' != '" + 10L + "'", long52 == 10L);
        org.junit.Assert.assertNull(obj53);
        org.junit.Assert.assertNull(obj60);
        org.junit.Assert.assertNull(obj68);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertNull(obj71);
        org.junit.Assert.assertNotNull(objSet72);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertNotNull(objEntrySet74);
        org.junit.Assert.assertNotNull(objEnumeration75);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
    }

    @Test
    public void test1636() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1636");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setDefaultJtaTimeout((long) (byte) 10);
        long long3 = atomikosProperties0.getDefaultJtaTimeout();
        java.lang.String str4 = atomikosProperties0.getService();
        long long5 = atomikosProperties0.getCheckpointInterval();
        atomikosProperties0.setService("{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=0, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog, {}={}}");
        boolean boolean8 = atomikosProperties0.isSerialJtaTransactions();
        long long9 = atomikosProperties0.getCheckpointInterval();
        org.junit.Assert.assertTrue("'" + long3 + "' != '" + 10L + "'", long3 == 10L);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertTrue("'" + long5 + "' != '" + 500L + "'", long5 == 500L);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + long9 + "' != '" + 500L + "'", long9 == 500L);
    }

    @Test
    public void test1637() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1637");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Properties properties2 = new java.util.Properties(properties0);
        java.util.Properties properties3 = null;
        java.util.Properties properties4 = new java.util.Properties(properties3);
        java.lang.Object obj6 = properties2.put((java.lang.Object) properties4, (java.lang.Object) (short) 1);
        properties4.clear();
        int int8 = properties4.size();
        java.util.Properties properties9 = new java.util.Properties(properties4);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties10 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        int int11 = atomikosProperties10.getMaxActives();
        long long12 = atomikosProperties10.getMaxTimeout();
        java.util.Properties properties13 = atomikosProperties10.asProperties();
        java.util.Properties properties14 = atomikosProperties10.asProperties();
        java.util.Properties properties15 = null;
        java.util.Properties properties16 = new java.util.Properties(properties15);
        java.util.Properties properties17 = new java.util.Properties(properties15);
        java.util.Properties properties18 = null;
        java.util.Properties properties19 = new java.util.Properties(properties18);
        java.lang.Object obj21 = properties17.put((java.lang.Object) properties19, (java.lang.Object) (short) 1);
        java.util.Enumeration<java.lang.Object> objEnumeration22 = properties19.elements();
        java.lang.Object obj23 = properties4.replace((java.lang.Object) atomikosProperties10, (java.lang.Object) properties19);
        java.util.Set<java.lang.String> strSet24 = properties4.stringPropertyNames();
        java.lang.Object obj27 = properties4.setProperty("{}", "tmlog");
        boolean boolean28 = properties4.isEmpty();
        java.io.OutputStream outputStream29 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties4.storeToXML(outputStream29, "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=0, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.tm_unique_name=, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(obj6);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 50 + "'", int11 == 50);
        org.junit.Assert.assertTrue("'" + long12 + "' != '" + 300000L + "'", long12 == 300000L);
        org.junit.Assert.assertNotNull(properties13);
        org.junit.Assert.assertNotNull(properties14);
        org.junit.Assert.assertNull(obj21);
        org.junit.Assert.assertNotNull(objEnumeration22);
        org.junit.Assert.assertNull(obj23);
        org.junit.Assert.assertNotNull(strSet24);
        org.junit.Assert.assertNull(obj27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
    }

    @Test
    public void test1638() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1638");
        java.util.Properties properties0 = new java.util.Properties();
        java.util.Enumeration<?> wildcardEnumeration1 = properties0.propertyNames();
        java.lang.Object obj2 = properties0.clone();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties3 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties3.setThreadedTwoPhaseCommit(true);
        atomikosProperties3.setMaxActives((int) '#');
        atomikosProperties3.setForceShutdownOnVmExit(true);
        java.lang.String str10 = atomikosProperties3.getLogBaseDir();
        java.util.Properties properties11 = atomikosProperties3.asProperties();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties12 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties12.setThreadedTwoPhaseCommit(true);
        atomikosProperties12.setMaxActives((int) '#');
        atomikosProperties12.setEnableLogging(true);
        boolean boolean19 = properties11.containsKey((java.lang.Object) true);
        java.lang.String str21 = properties11.getProperty("{}");
        java.util.Properties properties22 = null;
        java.util.Properties properties23 = new java.util.Properties(properties22);
        java.util.Properties properties24 = new java.util.Properties(properties22);
        java.util.Properties properties25 = null;
        java.util.Properties properties26 = new java.util.Properties(properties25);
        java.lang.Object obj28 = properties24.put((java.lang.Object) properties26, (java.lang.Object) (short) 1);
        properties26.clear();
        int int30 = properties26.size();
        java.util.Properties properties31 = new java.util.Properties(properties26);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties32 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        int int33 = atomikosProperties32.getMaxActives();
        long long34 = atomikosProperties32.getMaxTimeout();
        java.util.Properties properties35 = atomikosProperties32.asProperties();
        java.util.Properties properties36 = atomikosProperties32.asProperties();
        java.util.Properties properties37 = null;
        java.util.Properties properties38 = new java.util.Properties(properties37);
        java.util.Properties properties39 = new java.util.Properties(properties37);
        java.util.Properties properties40 = null;
        java.util.Properties properties41 = new java.util.Properties(properties40);
        java.lang.Object obj43 = properties39.put((java.lang.Object) properties41, (java.lang.Object) (short) 1);
        java.util.Enumeration<java.lang.Object> objEnumeration44 = properties41.elements();
        java.lang.Object obj45 = properties26.replace((java.lang.Object) atomikosProperties32, (java.lang.Object) properties41);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties47 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties47.setThreadedTwoPhaseCommit(true);
        java.lang.String str50 = atomikosProperties47.getService();
        boolean boolean51 = atomikosProperties47.isSerialJtaTransactions();
        java.lang.Object obj52 = properties41.getOrDefault((java.lang.Object) "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.tm_unique_name=, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}", (java.lang.Object) atomikosProperties47);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties53 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties53.setDefaultJtaTimeout((long) (byte) 10);
        long long56 = atomikosProperties53.getDefaultJtaTimeout();
        java.lang.String str57 = atomikosProperties53.getTransactionManagerUniqueName();
        atomikosProperties53.setThreadedTwoPhaseCommit(true);
        java.lang.Object obj60 = properties11.putIfAbsent((java.lang.Object) atomikosProperties47, (java.lang.Object) atomikosProperties53);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties61 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties61.setDefaultJtaTimeout((long) (byte) 10);
        atomikosProperties61.setSerialJtaTransactions(false);
        atomikosProperties61.setMaxTimeout((long) (short) -1);
        long long68 = atomikosProperties61.getDefaultJtaTimeout();
        java.util.Properties properties69 = atomikosProperties61.asProperties();
        boolean boolean70 = properties0.remove((java.lang.Object) atomikosProperties53, (java.lang.Object) atomikosProperties61);
        boolean boolean71 = properties0.isEmpty();
        java.lang.String str74 = properties0.getProperty("{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=0, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog, {}={}}", "{tmlog={}}");
        org.junit.Assert.assertNotNull(wildcardEnumeration1);
        org.junit.Assert.assertNotNull(obj2);
        org.junit.Assert.assertEquals(obj2.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj2), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj2), "{}");
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertNotNull(properties11);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNull(str21);
        org.junit.Assert.assertNull(obj28);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 0 + "'", int30 == 0);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 50 + "'", int33 == 50);
        org.junit.Assert.assertTrue("'" + long34 + "' != '" + 300000L + "'", long34 == 300000L);
        org.junit.Assert.assertNotNull(properties35);
        org.junit.Assert.assertNotNull(properties36);
        org.junit.Assert.assertNull(obj43);
        org.junit.Assert.assertNotNull(objEnumeration44);
        org.junit.Assert.assertNull(obj45);
        org.junit.Assert.assertNull(str50);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertNotNull(obj52);
        org.junit.Assert.assertTrue("'" + long56 + "' != '" + 10L + "'", long56 == 10L);
        org.junit.Assert.assertNull(str57);
        org.junit.Assert.assertNull(obj60);
        org.junit.Assert.assertTrue("'" + long68 + "' != '" + 10L + "'", long68 == 10L);
        org.junit.Assert.assertNotNull(properties69);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + true + "'", boolean71 == true);
        org.junit.Assert.assertEquals("'" + str74 + "' != '" + "{tmlog={}}" + "'", str74, "{tmlog={}}");
    }

    @Test
    public void test1639() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1639");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Properties properties2 = new java.util.Properties(properties0);
        java.util.Properties properties3 = null;
        java.util.Properties properties4 = new java.util.Properties(properties3);
        java.lang.Object obj6 = properties2.put((java.lang.Object) properties4, (java.lang.Object) (short) 1);
        properties4.clear();
        int int8 = properties4.size();
        java.util.Properties properties9 = null;
        java.util.Properties properties10 = new java.util.Properties(properties9);
        java.util.Properties properties11 = new java.util.Properties(properties9);
        java.util.Properties properties12 = null;
        java.util.Properties properties13 = new java.util.Properties(properties12);
        java.lang.Object obj15 = properties11.put((java.lang.Object) properties13, (java.lang.Object) (short) 1);
        java.util.Properties properties16 = new java.util.Properties(properties13);
        java.util.Properties properties17 = new java.util.Properties(properties13);
        boolean boolean19 = properties4.remove((java.lang.Object) properties13, (java.lang.Object) 10.0f);
        java.util.Enumeration<java.lang.Object> objEnumeration20 = properties13.elements();
        java.util.Properties properties21 = new java.util.Properties(properties13);
        java.util.Properties properties22 = null;
        java.util.Properties properties23 = new java.util.Properties(properties22);
        java.util.Properties properties24 = new java.util.Properties(properties22);
        java.util.Properties properties25 = null;
        java.util.Properties properties26 = new java.util.Properties(properties25);
        java.lang.Object obj28 = properties24.put((java.lang.Object) properties26, (java.lang.Object) (short) 1);
        properties26.clear();
        int int30 = properties26.size();
        java.util.Properties properties31 = new java.util.Properties(properties26);
        java.util.Collection<java.lang.Object> objCollection32 = properties26.values();
        java.lang.String str34 = properties26.getProperty("hi!");
        java.util.Properties properties35 = new java.util.Properties();
        java.util.Enumeration<?> wildcardEnumeration36 = properties35.propertyNames();
        java.util.Properties properties38 = null;
        java.util.Properties properties39 = new java.util.Properties(properties38);
        java.util.Properties properties40 = new java.util.Properties(properties38);
        java.util.Properties properties41 = null;
        java.util.Properties properties42 = new java.util.Properties(properties41);
        java.lang.Object obj44 = properties40.put((java.lang.Object) properties42, (java.lang.Object) (short) 1);
        java.util.Properties properties45 = new java.util.Properties(properties42);
        java.util.Enumeration<java.lang.Object> objEnumeration46 = properties45.elements();
        java.lang.Object obj47 = properties35.put((java.lang.Object) (-1.0f), (java.lang.Object) objEnumeration46);
        java.lang.Object obj48 = properties26.remove((java.lang.Object) (-1.0f));
        java.util.Enumeration<java.lang.Object> objEnumeration49 = properties26.elements();
        java.lang.Object obj50 = properties21.get((java.lang.Object) objEnumeration49);
        java.util.Properties properties51 = null;
        java.util.Properties properties52 = new java.util.Properties(properties51);
        java.util.Properties properties53 = new java.util.Properties(properties51);
        boolean boolean55 = properties53.containsValue((java.lang.Object) (short) 100);
        java.util.Properties properties56 = null;
        java.util.Properties properties57 = new java.util.Properties(properties56);
        java.util.Properties properties58 = new java.util.Properties(properties56);
        java.util.Properties properties59 = null;
        java.util.Properties properties60 = new java.util.Properties(properties59);
        java.lang.Object obj62 = properties58.put((java.lang.Object) properties60, (java.lang.Object) (short) 1);
        java.util.Enumeration<java.lang.Object> objEnumeration63 = properties60.elements();
        java.lang.Object obj64 = properties53.remove((java.lang.Object) properties60);
        boolean boolean65 = properties60.isEmpty();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet66 = properties60.entrySet();
        properties21.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties60);
        java.lang.Object obj68 = null;
        java.util.Properties properties69 = null;
        java.util.Properties properties70 = new java.util.Properties(properties69);
        java.util.Properties properties71 = new java.util.Properties(properties69);
        java.util.Properties properties72 = null;
        java.util.Properties properties73 = new java.util.Properties(properties72);
        java.lang.Object obj75 = properties71.put((java.lang.Object) properties73, (java.lang.Object) (short) 1);
        properties73.clear();
        int int77 = properties73.size();
        java.util.Properties properties78 = new java.util.Properties(properties73);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties79 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        int int80 = atomikosProperties79.getMaxActives();
        long long81 = atomikosProperties79.getMaxTimeout();
        java.util.Properties properties82 = atomikosProperties79.asProperties();
        java.util.Properties properties83 = atomikosProperties79.asProperties();
        java.util.Properties properties84 = null;
        java.util.Properties properties85 = new java.util.Properties(properties84);
        java.util.Properties properties86 = new java.util.Properties(properties84);
        java.util.Properties properties87 = null;
        java.util.Properties properties88 = new java.util.Properties(properties87);
        java.lang.Object obj90 = properties86.put((java.lang.Object) properties88, (java.lang.Object) (short) 1);
        java.util.Enumeration<java.lang.Object> objEnumeration91 = properties88.elements();
        java.lang.Object obj92 = properties73.replace((java.lang.Object) atomikosProperties79, (java.lang.Object) properties88);
        atomikosProperties79.setLogBaseName("");
        boolean boolean95 = atomikosProperties79.isThreadedTwoPhaseCommit();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj96 = properties60.getOrDefault(obj68, (java.lang.Object) boolean95);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(obj6);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertNull(obj15);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(objEnumeration20);
        org.junit.Assert.assertNull(obj28);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 0 + "'", int30 == 0);
        org.junit.Assert.assertNotNull(objCollection32);
        org.junit.Assert.assertNull(str34);
        org.junit.Assert.assertNotNull(wildcardEnumeration36);
        org.junit.Assert.assertNull(obj44);
        org.junit.Assert.assertNotNull(objEnumeration46);
        org.junit.Assert.assertNull(obj47);
        org.junit.Assert.assertNull(obj48);
        org.junit.Assert.assertNotNull(objEnumeration49);
        org.junit.Assert.assertNull(obj50);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertNull(obj62);
        org.junit.Assert.assertNotNull(objEnumeration63);
        org.junit.Assert.assertNull(obj64);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65 == true);
        org.junit.Assert.assertNotNull(objEntrySet66);
        org.junit.Assert.assertNull(obj75);
        org.junit.Assert.assertTrue("'" + int77 + "' != '" + 0 + "'", int77 == 0);
        org.junit.Assert.assertTrue("'" + int80 + "' != '" + 50 + "'", int80 == 50);
        org.junit.Assert.assertTrue("'" + long81 + "' != '" + 300000L + "'", long81 == 300000L);
        org.junit.Assert.assertNotNull(properties82);
        org.junit.Assert.assertNotNull(properties83);
        org.junit.Assert.assertNull(obj90);
        org.junit.Assert.assertNotNull(objEnumeration91);
        org.junit.Assert.assertNull(obj92);
        org.junit.Assert.assertTrue("'" + boolean95 + "' != '" + false + "'", boolean95 == false);
    }

    @Test
    public void test1640() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1640");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setThreadedTwoPhaseCommit(true);
        atomikosProperties0.setMaxActives((int) '#');
        atomikosProperties0.setEnableLogging(true);
        int int7 = atomikosProperties0.getMaxActives();
        boolean boolean8 = atomikosProperties0.isEnableLogging();
        java.util.Properties properties9 = atomikosProperties0.asProperties();
        java.util.Properties properties10 = atomikosProperties0.asProperties();
        atomikosProperties0.setLogBaseName("{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
        atomikosProperties0.setForceShutdownOnVmExit(true);
        atomikosProperties0.setSerialJtaTransactions(false);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 35 + "'", int7 == 35);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(properties9);
        org.junit.Assert.assertNotNull(properties10);
    }

    @Test
    public void test1641() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1641");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        int int1 = atomikosProperties0.getMaxActives();
        java.util.Properties properties2 = atomikosProperties0.asProperties();
        java.util.Properties properties3 = null;
        java.util.Properties properties4 = new java.util.Properties(properties3);
        java.util.Properties properties5 = new java.util.Properties(properties3);
        boolean boolean7 = properties5.containsValue((java.lang.Object) (short) 100);
        java.util.Properties properties8 = null;
        java.util.Properties properties9 = new java.util.Properties(properties8);
        java.util.Properties properties10 = new java.util.Properties(properties8);
        java.util.Properties properties11 = null;
        java.util.Properties properties12 = new java.util.Properties(properties11);
        java.lang.Object obj14 = properties10.put((java.lang.Object) properties12, (java.lang.Object) (short) 1);
        java.util.Enumeration<java.lang.Object> objEnumeration15 = properties12.elements();
        java.lang.Object obj16 = properties5.remove((java.lang.Object) properties12);
        java.util.Properties properties17 = null;
        java.util.Properties properties18 = new java.util.Properties(properties17);
        java.util.Properties properties19 = new java.util.Properties(properties17);
        java.util.Properties properties20 = null;
        java.util.Properties properties21 = new java.util.Properties(properties20);
        java.lang.Object obj23 = properties19.put((java.lang.Object) properties21, (java.lang.Object) (short) 1);
        java.util.Enumeration<java.lang.Object> objEnumeration24 = properties21.elements();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet25 = properties21.entrySet();
        java.util.Set<java.lang.Object> objSet26 = properties21.keySet();
        java.util.Properties properties27 = null;
        java.util.Properties properties28 = new java.util.Properties(properties27);
        java.util.Properties properties29 = new java.util.Properties(properties27);
        java.util.Properties properties30 = null;
        java.util.Properties properties31 = new java.util.Properties(properties30);
        java.lang.Object obj33 = properties29.put((java.lang.Object) properties31, (java.lang.Object) (short) 1);
        properties31.clear();
        int int35 = properties31.size();
        java.util.Properties properties36 = new java.util.Properties(properties31);
        java.util.Properties properties37 = null;
        java.util.Properties properties38 = new java.util.Properties(properties37);
        java.util.Properties properties39 = new java.util.Properties(properties37);
        java.util.Properties properties40 = null;
        java.util.Properties properties41 = new java.util.Properties(properties40);
        java.lang.Object obj43 = properties39.put((java.lang.Object) properties41, (java.lang.Object) (short) 1);
        properties41.clear();
        java.lang.String str46 = properties41.getProperty("");
        java.util.Properties properties47 = null;
        java.util.Properties properties48 = new java.util.Properties(properties47);
        java.util.Properties properties49 = new java.util.Properties(properties47);
        java.util.Properties properties50 = null;
        java.util.Properties properties51 = new java.util.Properties(properties50);
        java.lang.Object obj53 = properties49.put((java.lang.Object) properties51, (java.lang.Object) (short) 1);
        properties41.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties49);
        java.lang.Object obj55 = properties21.put((java.lang.Object) properties31, (java.lang.Object) properties49);
        java.util.Properties properties56 = null;
        java.util.Properties properties57 = new java.util.Properties(properties56);
        java.util.Properties properties58 = new java.util.Properties(properties56);
        java.util.Properties properties59 = null;
        java.util.Properties properties60 = new java.util.Properties(properties59);
        java.lang.Object obj62 = properties58.put((java.lang.Object) properties60, (java.lang.Object) (short) 1);
        java.util.Properties properties63 = new java.util.Properties(properties60);
        java.util.Properties properties64 = new java.util.Properties(properties60);
        java.util.Set<java.lang.Object> objSet65 = properties64.keySet();
        java.lang.Object obj66 = properties5.replace((java.lang.Object) properties21, (java.lang.Object) objSet65);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties67 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        int int68 = atomikosProperties67.getMaxActives();
        long long69 = atomikosProperties67.getMaxTimeout();
        java.util.Properties properties70 = atomikosProperties67.asProperties();
        atomikosProperties67.setService("hi!");
        boolean boolean73 = properties2.remove((java.lang.Object) properties5, (java.lang.Object) "hi!");
        int int74 = properties5.size();
        java.lang.Object obj77 = properties5.setProperty("{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}", "{com.atomikos.icatch.enable_logging=false, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=true, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 50 + "'", int1 == 50);
        org.junit.Assert.assertNotNull(properties2);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNull(obj14);
        org.junit.Assert.assertNotNull(objEnumeration15);
        org.junit.Assert.assertNull(obj16);
        org.junit.Assert.assertNull(obj23);
        org.junit.Assert.assertNotNull(objEnumeration24);
        org.junit.Assert.assertNotNull(objEntrySet25);
        org.junit.Assert.assertNotNull(objSet26);
        org.junit.Assert.assertNull(obj33);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 0 + "'", int35 == 0);
        org.junit.Assert.assertNull(obj43);
        org.junit.Assert.assertNull(str46);
        org.junit.Assert.assertNull(obj53);
        org.junit.Assert.assertNull(obj55);
        org.junit.Assert.assertNull(obj62);
        org.junit.Assert.assertNotNull(objSet65);
        org.junit.Assert.assertNull(obj66);
        org.junit.Assert.assertTrue("'" + int68 + "' != '" + 50 + "'", int68 == 50);
        org.junit.Assert.assertTrue("'" + long69 + "' != '" + 300000L + "'", long69 == 300000L);
        org.junit.Assert.assertNotNull(properties70);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertTrue("'" + int74 + "' != '" + 0 + "'", int74 == 0);
        org.junit.Assert.assertNull(obj77);
    }

    @Test
    public void test1642() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1642");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Properties properties2 = new java.util.Properties(properties0);
        java.util.Properties properties3 = null;
        java.util.Properties properties4 = new java.util.Properties(properties3);
        java.lang.Object obj6 = properties2.put((java.lang.Object) properties4, (java.lang.Object) (short) 1);
        boolean boolean7 = properties2.isEmpty();
        java.util.Properties properties8 = null;
        java.util.Properties properties9 = new java.util.Properties(properties8);
        java.util.Properties properties10 = new java.util.Properties(properties8);
        boolean boolean11 = properties2.containsKey((java.lang.Object) properties10);
        java.util.Properties properties12 = new java.util.Properties(properties10);
        java.lang.Object obj13 = properties12.clone();
        java.util.Properties properties15 = null;
        java.util.Properties properties16 = new java.util.Properties(properties15);
        java.util.Properties properties17 = new java.util.Properties(properties15);
        java.util.Properties properties18 = null;
        java.util.Properties properties19 = new java.util.Properties(properties18);
        java.lang.Object obj21 = properties17.put((java.lang.Object) properties19, (java.lang.Object) (short) 1);
        boolean boolean22 = properties17.isEmpty();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties23 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties23.setDefaultJtaTimeout((long) (byte) 10);
        atomikosProperties23.setCheckpointInterval((long) (byte) 0);
        atomikosProperties23.setTransactionManagerUniqueName("");
        java.util.Properties properties30 = atomikosProperties23.asProperties();
        java.lang.Object obj31 = properties17.remove((java.lang.Object) properties30);
        java.lang.Object obj32 = properties12.putIfAbsent((java.lang.Object) 1L, (java.lang.Object) properties17);
        java.lang.String str34 = properties12.getProperty("{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=0, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog, {}={}}");
        java.util.Properties properties35 = new java.util.Properties(properties12);
        java.util.Set<java.lang.Object> objSet36 = properties35.keySet();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties37 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        int int38 = atomikosProperties37.getMaxActives();
        long long39 = atomikosProperties37.getMaxTimeout();
        java.lang.String str40 = atomikosProperties37.getLogBaseDir();
        atomikosProperties37.setCheckpointInterval(100L);
        atomikosProperties37.setService("tmlog");
        java.lang.Class<?> wildcardClass45 = atomikosProperties37.getClass();
        java.lang.Object obj46 = properties35.remove((java.lang.Object) wildcardClass45);
        java.io.InputStream inputStream47 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties35.loadFromXML(inputStream47);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(obj6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNotNull(obj13);
        org.junit.Assert.assertEquals(obj13.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj13), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj13), "{}");
        org.junit.Assert.assertNull(obj21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(properties30);
        org.junit.Assert.assertNull(obj31);
        org.junit.Assert.assertNull(obj32);
        org.junit.Assert.assertNull(str34);
        org.junit.Assert.assertNotNull(objSet36);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 50 + "'", int38 == 50);
        org.junit.Assert.assertTrue("'" + long39 + "' != '" + 300000L + "'", long39 == 300000L);
        org.junit.Assert.assertNull(str40);
        org.junit.Assert.assertNotNull(wildcardClass45);
        org.junit.Assert.assertNull(obj46);
    }

    @Test
    public void test1643() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1643");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setDefaultJtaTimeout((long) (byte) 10);
        long long3 = atomikosProperties0.getDefaultJtaTimeout();
        atomikosProperties0.setTransactionManagerUniqueName("");
        boolean boolean6 = atomikosProperties0.isEnableLogging();
        java.lang.String str7 = atomikosProperties0.getLogBaseDir();
        java.util.Properties properties8 = atomikosProperties0.asProperties();
        boolean boolean9 = atomikosProperties0.isEnableLogging();
        java.util.Properties properties10 = atomikosProperties0.asProperties();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties11 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties11.setDefaultJtaTimeout((long) (byte) 10);
        atomikosProperties11.setCheckpointInterval((long) (byte) 0);
        atomikosProperties11.setTransactionManagerUniqueName("");
        boolean boolean18 = atomikosProperties11.isEnableLogging();
        java.util.Properties properties19 = atomikosProperties11.asProperties();
        java.util.Enumeration<java.lang.Object> objEnumeration20 = properties19.keys();
        java.util.Properties properties21 = null;
        java.util.Properties properties22 = new java.util.Properties(properties21);
        java.util.Properties properties23 = new java.util.Properties(properties21);
        java.util.Properties properties24 = null;
        java.util.Properties properties25 = new java.util.Properties(properties24);
        java.lang.Object obj27 = properties23.put((java.lang.Object) properties25, (java.lang.Object) (short) 1);
        java.util.Properties properties29 = null;
        java.util.Properties properties30 = new java.util.Properties(properties29);
        java.util.Properties properties31 = new java.util.Properties(properties29);
        java.util.Properties properties32 = null;
        java.util.Properties properties33 = new java.util.Properties(properties32);
        java.lang.Object obj35 = properties31.put((java.lang.Object) properties33, (java.lang.Object) (short) 1);
        boolean boolean36 = properties25.remove((java.lang.Object) false, (java.lang.Object) (short) 1);
        java.util.Set<java.lang.String> strSet37 = properties25.stringPropertyNames();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties38 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties38.setDefaultJtaTimeout((long) (byte) 10);
        long long41 = atomikosProperties38.getDefaultJtaTimeout();
        java.lang.Object obj42 = properties25.get((java.lang.Object) atomikosProperties38);
        atomikosProperties38.setCheckpointInterval((long) (short) 100);
        java.util.Properties properties45 = atomikosProperties38.asProperties();
        java.util.Enumeration<?> wildcardEnumeration46 = properties45.propertyNames();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet47 = properties45.entrySet();
        java.lang.Object obj48 = properties10.getOrDefault((java.lang.Object) objEnumeration20, (java.lang.Object) properties45);
        java.io.PrintWriter printWriter49 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties45.list(printWriter49);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + long3 + "' != '" + 10L + "'", long3 == 10L);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNotNull(properties8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertNotNull(properties10);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(properties19);
        org.junit.Assert.assertNotNull(objEnumeration20);
        org.junit.Assert.assertNull(obj27);
        org.junit.Assert.assertNull(obj35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(strSet37);
        org.junit.Assert.assertTrue("'" + long41 + "' != '" + 10L + "'", long41 == 10L);
        org.junit.Assert.assertNull(obj42);
        org.junit.Assert.assertNotNull(properties45);
        org.junit.Assert.assertNotNull(wildcardEnumeration46);
        org.junit.Assert.assertNotNull(objEntrySet47);
        org.junit.Assert.assertNotNull(obj48);
// flaky:         org.junit.Assert.assertEquals(obj48.toString(), "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=100, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
// flaky:         org.junit.Assert.assertEquals(java.lang.String.valueOf(obj48), "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=100, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
// flaky:         org.junit.Assert.assertEquals(java.util.Objects.toString(obj48), "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=100, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
    }

    @Test
    public void test1644() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1644");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setDefaultJtaTimeout((long) (byte) 10);
        atomikosProperties0.setSerialJtaTransactions(false);
        atomikosProperties0.setService("{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.tm_unique_name=, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
        atomikosProperties0.setService("tmlog");
        java.lang.String str9 = atomikosProperties0.getLogBaseName();
        int int10 = atomikosProperties0.getMaxActives();
        atomikosProperties0.setThreadedTwoPhaseCommit(false);
        long long13 = atomikosProperties0.getMaxTimeout();
        atomikosProperties0.setCheckpointInterval((long) 2);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "tmlog" + "'", str9, "tmlog");
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 50 + "'", int10 == 50);
        org.junit.Assert.assertTrue("'" + long13 + "' != '" + 300000L + "'", long13 == 300000L);
    }

    @Test
    public void test1645() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1645");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        boolean boolean1 = atomikosProperties0.isForceShutdownOnVmExit();
        java.util.Properties properties2 = atomikosProperties0.asProperties();
        java.util.Properties properties3 = null;
        java.util.Properties properties4 = new java.util.Properties(properties3);
        java.util.Properties properties5 = new java.util.Properties(properties3);
        java.util.Properties properties6 = null;
        java.util.Properties properties7 = new java.util.Properties(properties6);
        java.lang.Object obj9 = properties5.put((java.lang.Object) properties7, (java.lang.Object) (short) 1);
        properties7.clear();
        int int11 = properties7.size();
        java.util.Properties properties12 = null;
        java.util.Properties properties13 = new java.util.Properties(properties12);
        java.util.Properties properties14 = new java.util.Properties(properties12);
        java.util.Properties properties15 = null;
        java.util.Properties properties16 = new java.util.Properties(properties15);
        java.lang.Object obj18 = properties14.put((java.lang.Object) properties16, (java.lang.Object) (short) 1);
        java.util.Properties properties19 = new java.util.Properties(properties16);
        java.util.Properties properties20 = new java.util.Properties(properties16);
        boolean boolean22 = properties7.remove((java.lang.Object) properties16, (java.lang.Object) 10.0f);
        boolean boolean23 = properties2.containsKey((java.lang.Object) 10.0f);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties25 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties25.setDefaultJtaTimeout((long) (byte) 10);
        atomikosProperties25.setCheckpointInterval((long) (byte) 0);
        atomikosProperties25.setEnableLogging(true);
        java.lang.Object obj32 = properties2.getOrDefault((java.lang.Object) (byte) 0, (java.lang.Object) true);
        java.util.Properties properties33 = new java.util.Properties(properties2);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties34 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties34.setDefaultJtaTimeout((long) (byte) 10);
        atomikosProperties34.setCheckpointInterval((long) (byte) 0);
        long long39 = atomikosProperties34.getMaxTimeout();
        java.util.Properties properties40 = null;
        java.util.Properties properties41 = new java.util.Properties(properties40);
        java.util.Properties properties42 = new java.util.Properties(properties40);
        java.util.Properties properties43 = null;
        java.util.Properties properties44 = new java.util.Properties(properties43);
        java.lang.Object obj46 = properties42.put((java.lang.Object) properties44, (java.lang.Object) (short) 1);
        java.util.Properties properties48 = null;
        java.util.Properties properties49 = new java.util.Properties(properties48);
        java.util.Properties properties50 = new java.util.Properties(properties48);
        java.util.Properties properties51 = null;
        java.util.Properties properties52 = new java.util.Properties(properties51);
        java.lang.Object obj54 = properties50.put((java.lang.Object) properties52, (java.lang.Object) (short) 1);
        boolean boolean55 = properties44.remove((java.lang.Object) false, (java.lang.Object) (short) 1);
        java.lang.Object obj57 = properties44.remove((java.lang.Object) '#');
        java.util.Set<java.lang.Object> objSet58 = properties44.keySet();
        properties44.clear();
        java.util.Properties properties60 = null;
        java.util.Properties properties61 = new java.util.Properties(properties60);
        java.util.Properties properties62 = new java.util.Properties(properties60);
        java.util.Properties properties63 = null;
        java.util.Properties properties64 = new java.util.Properties(properties63);
        java.lang.Object obj66 = properties62.put((java.lang.Object) properties64, (java.lang.Object) (short) 1);
        java.util.Enumeration<java.lang.Object> objEnumeration67 = properties64.elements();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet68 = properties64.entrySet();
        boolean boolean69 = properties44.equals((java.lang.Object) properties64);
        java.util.Enumeration<java.lang.Object> objEnumeration70 = properties64.elements();
        java.lang.Object obj71 = properties33.put((java.lang.Object) atomikosProperties34, (java.lang.Object) properties64);
        java.util.Properties properties72 = new java.util.Properties(properties64);
        java.io.InputStream inputStream73 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties72.load(inputStream73);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertNotNull(properties2);
        org.junit.Assert.assertNull(obj9);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertNull(obj18);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertEquals("'" + obj32 + "' != '" + true + "'", obj32, true);
        org.junit.Assert.assertTrue("'" + long39 + "' != '" + 300000L + "'", long39 == 300000L);
        org.junit.Assert.assertNull(obj46);
        org.junit.Assert.assertNull(obj54);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertNull(obj57);
        org.junit.Assert.assertNotNull(objSet58);
        org.junit.Assert.assertNull(obj66);
        org.junit.Assert.assertNotNull(objEnumeration67);
        org.junit.Assert.assertNotNull(objEntrySet68);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + true + "'", boolean69 == true);
        org.junit.Assert.assertNotNull(objEnumeration70);
        org.junit.Assert.assertNull(obj71);
    }

    @Test
    public void test1646() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1646");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Properties properties2 = new java.util.Properties(properties0);
        java.util.Properties properties3 = null;
        java.util.Properties properties4 = new java.util.Properties(properties3);
        java.lang.Object obj6 = properties2.put((java.lang.Object) properties4, (java.lang.Object) (short) 1);
        java.util.Properties properties8 = null;
        java.util.Properties properties9 = new java.util.Properties(properties8);
        java.util.Properties properties10 = new java.util.Properties(properties8);
        java.util.Properties properties11 = null;
        java.util.Properties properties12 = new java.util.Properties(properties11);
        java.lang.Object obj14 = properties10.put((java.lang.Object) properties12, (java.lang.Object) (short) 1);
        boolean boolean15 = properties4.remove((java.lang.Object) false, (java.lang.Object) (short) 1);
        java.util.Set<java.lang.String> strSet16 = properties4.stringPropertyNames();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties17 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties17.setDefaultJtaTimeout((long) (byte) 10);
        long long20 = atomikosProperties17.getDefaultJtaTimeout();
        java.lang.Object obj21 = properties4.get((java.lang.Object) atomikosProperties17);
        java.util.Properties properties22 = null;
        java.util.Properties properties23 = new java.util.Properties(properties22);
        java.util.Properties properties24 = new java.util.Properties(properties22);
        java.util.Properties properties25 = null;
        java.util.Properties properties26 = new java.util.Properties(properties25);
        java.lang.Object obj28 = properties24.put((java.lang.Object) properties26, (java.lang.Object) (short) 1);
        java.util.Properties properties30 = null;
        java.util.Properties properties31 = new java.util.Properties(properties30);
        java.util.Properties properties32 = new java.util.Properties(properties30);
        java.util.Properties properties33 = null;
        java.util.Properties properties34 = new java.util.Properties(properties33);
        java.lang.Object obj36 = properties32.put((java.lang.Object) properties34, (java.lang.Object) (short) 1);
        boolean boolean37 = properties26.remove((java.lang.Object) false, (java.lang.Object) (short) 1);
        java.lang.Object obj39 = properties26.remove((java.lang.Object) '#');
        java.util.Set<java.lang.Object> objSet40 = properties26.keySet();
        boolean boolean41 = properties4.containsKey((java.lang.Object) properties26);
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet42 = properties4.entrySet();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties43 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties43.setThreadedTwoPhaseCommit(true);
        boolean boolean46 = atomikosProperties43.isEnableLogging();
        atomikosProperties43.setTransactionManagerUniqueName("{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=0, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog, {}={}}");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties49 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties49.setDefaultJtaTimeout((long) (byte) 10);
        atomikosProperties49.setCheckpointInterval((long) (byte) 0);
        atomikosProperties49.setTransactionManagerUniqueName("");
        boolean boolean56 = atomikosProperties49.isEnableLogging();
        java.lang.Class<?> wildcardClass57 = atomikosProperties49.getClass();
        java.lang.Object obj58 = properties4.put((java.lang.Object) "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=0, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog, {}={}}", (java.lang.Object) atomikosProperties49);
        java.util.Properties properties59 = null;
        java.util.Properties properties60 = new java.util.Properties(properties59);
        java.util.Properties properties61 = new java.util.Properties(properties59);
        java.util.Properties properties62 = null;
        java.util.Properties properties63 = new java.util.Properties(properties62);
        java.lang.Object obj65 = properties61.put((java.lang.Object) properties63, (java.lang.Object) (short) 1);
        java.util.Properties properties67 = null;
        java.util.Properties properties68 = new java.util.Properties(properties67);
        java.util.Properties properties69 = new java.util.Properties(properties67);
        java.util.Properties properties70 = null;
        java.util.Properties properties71 = new java.util.Properties(properties70);
        java.lang.Object obj73 = properties69.put((java.lang.Object) properties71, (java.lang.Object) (short) 1);
        boolean boolean74 = properties63.remove((java.lang.Object) false, (java.lang.Object) (short) 1);
        java.util.Enumeration<java.lang.Object> objEnumeration75 = properties63.elements();
        java.util.Properties properties76 = new java.util.Properties(properties63);
        java.lang.Object obj78 = properties4.getOrDefault((java.lang.Object) properties76, (java.lang.Object) 500L);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties79 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties79.setThreadedTwoPhaseCommit(true);
        boolean boolean82 = atomikosProperties79.isEnableLogging();
        boolean boolean83 = atomikosProperties79.isEnableLogging();
        java.util.Properties properties84 = atomikosProperties79.asProperties();
        boolean boolean85 = properties76.containsKey((java.lang.Object) properties84);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties86 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        int int87 = atomikosProperties86.getMaxActives();
        long long88 = atomikosProperties86.getMaxTimeout();
        java.lang.String str89 = atomikosProperties86.getLogBaseDir();
        atomikosProperties86.setCheckpointInterval(100L);
        atomikosProperties86.setService("tmlog");
        java.lang.String str94 = atomikosProperties86.getLogBaseDir();
        java.util.Properties properties95 = atomikosProperties86.asProperties();
        java.lang.Object obj96 = properties84.remove((java.lang.Object) atomikosProperties86);
        java.lang.String str97 = atomikosProperties86.getLogBaseName();
        long long98 = atomikosProperties86.getMaxTimeout();
        org.junit.Assert.assertNull(obj6);
        org.junit.Assert.assertNull(obj14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(strSet16);
        org.junit.Assert.assertTrue("'" + long20 + "' != '" + 10L + "'", long20 == 10L);
        org.junit.Assert.assertNull(obj21);
        org.junit.Assert.assertNull(obj28);
        org.junit.Assert.assertNull(obj36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNull(obj39);
        org.junit.Assert.assertNotNull(objSet40);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(objEntrySet42);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertNotNull(wildcardClass57);
        org.junit.Assert.assertNull(obj58);
        org.junit.Assert.assertNull(obj65);
        org.junit.Assert.assertNull(obj73);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
        org.junit.Assert.assertNotNull(objEnumeration75);
        org.junit.Assert.assertEquals("'" + obj78 + "' != '" + 500L + "'", obj78, 500L);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + true + "'", boolean82 == true);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + true + "'", boolean83 == true);
        org.junit.Assert.assertNotNull(properties84);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + false + "'", boolean85 == false);
        org.junit.Assert.assertTrue("'" + int87 + "' != '" + 50 + "'", int87 == 50);
        org.junit.Assert.assertTrue("'" + long88 + "' != '" + 300000L + "'", long88 == 300000L);
        org.junit.Assert.assertNull(str89);
        org.junit.Assert.assertNull(str94);
        org.junit.Assert.assertNotNull(properties95);
        org.junit.Assert.assertNull(obj96);
        org.junit.Assert.assertEquals("'" + str97 + "' != '" + "tmlog" + "'", str97, "tmlog");
        org.junit.Assert.assertTrue("'" + long98 + "' != '" + 300000L + "'", long98 == 300000L);
    }

    @Test
    public void test1647() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1647");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Properties properties2 = new java.util.Properties(properties0);
        boolean boolean4 = properties2.containsValue((java.lang.Object) (short) 100);
        java.util.Properties properties5 = new java.util.Properties(properties2);
        java.lang.String str7 = properties5.getProperty("hi!");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties8 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties8.setDefaultJtaTimeout((long) (byte) 10);
        atomikosProperties8.setCheckpointInterval((long) (byte) 0);
        atomikosProperties8.setTransactionManagerUniqueName("");
        java.util.Properties properties15 = atomikosProperties8.asProperties();
        java.lang.String str16 = atomikosProperties8.getLogBaseName();
        atomikosProperties8.setCheckpointInterval(100L);
        java.lang.String str19 = atomikosProperties8.getTransactionManagerUniqueName();
        atomikosProperties8.setLogBaseName("{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.tm_unique_name=, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
        atomikosProperties8.setThreadedTwoPhaseCommit(true);
        boolean boolean24 = properties5.contains((java.lang.Object) true);
        java.util.Set<java.lang.String> strSet25 = properties5.stringPropertyNames();
        java.io.OutputStream outputStream26 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties5.store(outputStream26, "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=0, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=true, com.atomikos.icatch.max_actives=100, com.atomikos.icatch.log_base_name=tmlog}");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNotNull(properties15);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "tmlog" + "'", str16, "tmlog");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "" + "'", str19, "");
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(strSet25);
    }

    @Test
    public void test1648() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1648");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setDefaultJtaTimeout((long) (byte) 10);
        atomikosProperties0.setCheckpointInterval((long) (byte) 0);
        atomikosProperties0.setTransactionManagerUniqueName("");
        java.util.Properties properties7 = atomikosProperties0.asProperties();
        java.lang.String str8 = atomikosProperties0.getLogBaseName();
        atomikosProperties0.setCheckpointInterval(100L);
        java.lang.String str11 = atomikosProperties0.getTransactionManagerUniqueName();
        atomikosProperties0.setLogBaseName("{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.tm_unique_name=, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
        boolean boolean14 = atomikosProperties0.isThreadedTwoPhaseCommit();
        org.junit.Assert.assertNotNull(properties7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "tmlog" + "'", str8, "tmlog");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
    }

    @Test
    public void test1649() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1649");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setDefaultJtaTimeout((long) (byte) 10);
        atomikosProperties0.setCheckpointInterval((long) (byte) 0);
        atomikosProperties0.setEnableLogging(true);
        atomikosProperties0.setService("");
        atomikosProperties0.setTransactionManagerUniqueName("{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.tm_unique_name=, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
        java.util.Properties properties11 = atomikosProperties0.asProperties();
        java.util.Properties properties12 = atomikosProperties0.asProperties();
        java.util.Set<java.lang.Object> objSet13 = properties12.keySet();
        java.io.InputStream inputStream14 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties12.load(inputStream14);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(properties11);
        org.junit.Assert.assertNotNull(properties12);
        org.junit.Assert.assertNotNull(objSet13);
    }

    @Test
    public void test1650() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1650");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Properties properties2 = new java.util.Properties(properties0);
        boolean boolean4 = properties2.containsValue((java.lang.Object) (short) 100);
        java.util.Properties properties5 = null;
        java.util.Properties properties6 = new java.util.Properties(properties5);
        java.util.Properties properties7 = new java.util.Properties(properties5);
        java.util.Properties properties8 = null;
        java.util.Properties properties9 = new java.util.Properties(properties8);
        java.lang.Object obj11 = properties7.put((java.lang.Object) properties9, (java.lang.Object) (short) 1);
        java.util.Enumeration<java.lang.Object> objEnumeration12 = properties9.elements();
        java.lang.Object obj13 = properties2.remove((java.lang.Object) properties9);
        java.lang.Object obj16 = properties9.setProperty("", "");
        java.util.Properties properties17 = null;
        java.util.Properties properties18 = new java.util.Properties(properties17);
        java.util.Properties properties19 = new java.util.Properties(properties17);
        java.util.Properties properties20 = null;
        java.util.Properties properties21 = new java.util.Properties(properties20);
        java.lang.Object obj23 = properties19.put((java.lang.Object) properties21, (java.lang.Object) (short) 1);
        java.util.Properties properties25 = null;
        java.util.Properties properties26 = new java.util.Properties(properties25);
        java.util.Properties properties27 = new java.util.Properties(properties25);
        java.util.Properties properties28 = null;
        java.util.Properties properties29 = new java.util.Properties(properties28);
        java.lang.Object obj31 = properties27.put((java.lang.Object) properties29, (java.lang.Object) (short) 1);
        boolean boolean32 = properties21.remove((java.lang.Object) false, (java.lang.Object) (short) 1);
        java.util.Properties properties33 = new java.util.Properties(properties21);
        properties9.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties33);
        java.lang.Object obj35 = properties9.clone();
        boolean boolean36 = properties9.isEmpty();
        java.lang.String str37 = properties9.toString();
        properties9.clear();
        java.util.Properties properties39 = null;
        java.util.Properties properties40 = new java.util.Properties(properties39);
        java.util.Properties properties41 = new java.util.Properties(properties39);
        boolean boolean43 = properties41.containsValue((java.lang.Object) (short) 100);
        java.util.Properties properties44 = null;
        java.util.Properties properties45 = new java.util.Properties(properties44);
        java.util.Properties properties46 = new java.util.Properties(properties44);
        java.util.Properties properties47 = null;
        java.util.Properties properties48 = new java.util.Properties(properties47);
        java.lang.Object obj50 = properties46.put((java.lang.Object) properties48, (java.lang.Object) (short) 1);
        java.util.Enumeration<java.lang.Object> objEnumeration51 = properties48.elements();
        java.lang.Object obj52 = properties41.remove((java.lang.Object) properties48);
        java.lang.Object obj55 = properties48.setProperty("", "");
        java.util.Properties properties56 = null;
        java.util.Properties properties57 = new java.util.Properties(properties56);
        java.util.Properties properties58 = new java.util.Properties(properties56);
        java.util.Properties properties59 = null;
        java.util.Properties properties60 = new java.util.Properties(properties59);
        java.lang.Object obj62 = properties58.put((java.lang.Object) properties60, (java.lang.Object) (short) 1);
        java.util.Properties properties64 = null;
        java.util.Properties properties65 = new java.util.Properties(properties64);
        java.util.Properties properties66 = new java.util.Properties(properties64);
        java.util.Properties properties67 = null;
        java.util.Properties properties68 = new java.util.Properties(properties67);
        java.lang.Object obj70 = properties66.put((java.lang.Object) properties68, (java.lang.Object) (short) 1);
        boolean boolean71 = properties60.remove((java.lang.Object) false, (java.lang.Object) (short) 1);
        java.util.Properties properties72 = new java.util.Properties(properties60);
        properties48.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties72);
        java.util.Properties properties74 = new java.util.Properties(properties72);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties75 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties75.setEnableLogging(false);
        atomikosProperties75.setThreadedTwoPhaseCommit(true);
        atomikosProperties75.setTransactionManagerUniqueName("tmlog");
        boolean boolean82 = atomikosProperties75.isEnableLogging();
        long long83 = atomikosProperties75.getCheckpointInterval();
        java.lang.Object obj84 = properties9.put((java.lang.Object) properties74, (java.lang.Object) atomikosProperties75);
        java.util.Enumeration<?> wildcardEnumeration85 = properties74.propertyNames();
        int int86 = properties74.size();
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNull(obj11);
        org.junit.Assert.assertNotNull(objEnumeration12);
        org.junit.Assert.assertNull(obj13);
        org.junit.Assert.assertNull(obj16);
        org.junit.Assert.assertNull(obj23);
        org.junit.Assert.assertNull(obj31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(obj35);
        org.junit.Assert.assertEquals(obj35.toString(), "{=}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj35), "{=}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj35), "{=}");
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "{=}" + "'", str37, "{=}");
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNull(obj50);
        org.junit.Assert.assertNotNull(objEnumeration51);
        org.junit.Assert.assertNull(obj52);
        org.junit.Assert.assertNull(obj55);
        org.junit.Assert.assertNull(obj62);
        org.junit.Assert.assertNull(obj70);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + false + "'", boolean82 == false);
        org.junit.Assert.assertTrue("'" + long83 + "' != '" + 500L + "'", long83 == 500L);
        org.junit.Assert.assertNull(obj84);
        org.junit.Assert.assertNotNull(wildcardEnumeration85);
        org.junit.Assert.assertTrue("'" + int86 + "' != '" + 0 + "'", int86 == 0);
    }

    @Test
    public void test1651() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1651");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Properties properties2 = new java.util.Properties(properties0);
        java.util.Properties properties3 = null;
        java.util.Properties properties4 = new java.util.Properties(properties3);
        java.lang.Object obj6 = properties2.put((java.lang.Object) properties4, (java.lang.Object) (short) 1);
        java.util.Properties properties8 = null;
        java.util.Properties properties9 = new java.util.Properties(properties8);
        java.util.Properties properties10 = new java.util.Properties(properties8);
        java.util.Properties properties11 = null;
        java.util.Properties properties12 = new java.util.Properties(properties11);
        java.lang.Object obj14 = properties10.put((java.lang.Object) properties12, (java.lang.Object) (short) 1);
        boolean boolean15 = properties4.remove((java.lang.Object) false, (java.lang.Object) (short) 1);
        java.util.Set<java.lang.String> strSet16 = properties4.stringPropertyNames();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties17 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties17.setDefaultJtaTimeout((long) (byte) 10);
        atomikosProperties17.setCheckpointInterval((long) (byte) 0);
        atomikosProperties17.setTransactionManagerUniqueName("");
        boolean boolean24 = atomikosProperties17.isEnableLogging();
        atomikosProperties17.setSerialJtaTransactions(false);
        atomikosProperties17.setLogBaseDir("");
        java.util.Properties properties29 = null;
        java.util.Properties properties30 = new java.util.Properties(properties29);
        java.util.Properties properties31 = new java.util.Properties(properties29);
        java.util.Properties properties32 = null;
        java.util.Properties properties33 = new java.util.Properties(properties32);
        java.lang.Object obj35 = properties31.put((java.lang.Object) properties33, (java.lang.Object) (short) 1);
        java.util.Properties properties36 = new java.util.Properties(properties33);
        boolean boolean37 = properties4.remove((java.lang.Object) "", (java.lang.Object) properties36);
        java.util.Properties properties38 = null;
        java.util.Properties properties39 = new java.util.Properties(properties38);
        java.util.Properties properties40 = new java.util.Properties(properties38);
        java.lang.Object obj41 = properties40.clone();
        boolean boolean42 = properties4.contains(obj41);
        java.util.Collection<java.lang.Object> objCollection43 = properties4.values();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties44 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties44.setDefaultJtaTimeout((long) (byte) 10);
        atomikosProperties44.setCheckpointInterval((long) (byte) 0);
        atomikosProperties44.setTransactionManagerUniqueName("");
        java.util.Properties properties51 = atomikosProperties44.asProperties();
        java.lang.String str52 = atomikosProperties44.getLogBaseName();
        atomikosProperties44.setCheckpointInterval(100L);
        java.lang.String str55 = atomikosProperties44.getTransactionManagerUniqueName();
        atomikosProperties44.setLogBaseName("{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.tm_unique_name=, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
        atomikosProperties44.setThreadedTwoPhaseCommit(true);
        atomikosProperties44.setEnableLogging(false);
        java.lang.Object obj62 = properties4.get((java.lang.Object) atomikosProperties44);
        java.util.Properties properties63 = atomikosProperties44.asProperties();
        java.util.Properties properties64 = atomikosProperties44.asProperties();
        java.lang.String str65 = atomikosProperties44.getService();
        org.junit.Assert.assertNull(obj6);
        org.junit.Assert.assertNull(obj14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(strSet16);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNull(obj35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(obj41);
        org.junit.Assert.assertEquals(obj41.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj41), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj41), "{}");
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(objCollection43);
        org.junit.Assert.assertNotNull(properties51);
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "tmlog" + "'", str52, "tmlog");
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "" + "'", str55, "");
        org.junit.Assert.assertNull(obj62);
        org.junit.Assert.assertNotNull(properties63);
        org.junit.Assert.assertNotNull(properties64);
        org.junit.Assert.assertNull(str65);
    }

    @Test
    public void test1652() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1652");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setDefaultJtaTimeout((long) (byte) 10);
        long long3 = atomikosProperties0.getDefaultJtaTimeout();
        atomikosProperties0.setTransactionManagerUniqueName("");
        boolean boolean6 = atomikosProperties0.isEnableLogging();
        java.lang.String str7 = atomikosProperties0.getLogBaseName();
        atomikosProperties0.setMaxTimeout(10L);
        boolean boolean10 = atomikosProperties0.isForceShutdownOnVmExit();
        org.junit.Assert.assertTrue("'" + long3 + "' != '" + 10L + "'", long3 == 10L);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "tmlog" + "'", str7, "tmlog");
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
    }

    @Test
    public void test1653() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1653");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setDefaultJtaTimeout((long) (byte) 10);
        long long3 = atomikosProperties0.getDefaultJtaTimeout();
        atomikosProperties0.setTransactionManagerUniqueName("hi!");
        atomikosProperties0.setLogBaseName("tmlog");
        atomikosProperties0.setCheckpointInterval(300000L);
        atomikosProperties0.setService("hi!");
        atomikosProperties0.setForceShutdownOnVmExit(true);
        long long14 = atomikosProperties0.getMaxTimeout();
        org.junit.Assert.assertTrue("'" + long3 + "' != '" + 10L + "'", long3 == 10L);
        org.junit.Assert.assertTrue("'" + long14 + "' != '" + 300000L + "'", long14 == 300000L);
    }

    @Test
    public void test1654() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1654");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setDefaultJtaTimeout((long) (byte) 10);
        long long3 = atomikosProperties0.getDefaultJtaTimeout();
        atomikosProperties0.setTransactionManagerUniqueName("");
        boolean boolean6 = atomikosProperties0.isEnableLogging();
        java.lang.String str7 = atomikosProperties0.getLogBaseDir();
        java.util.Properties properties8 = atomikosProperties0.asProperties();
        atomikosProperties0.setForceShutdownOnVmExit(true);
        atomikosProperties0.setMaxActives((int) ' ');
        java.lang.String str13 = atomikosProperties0.getTransactionManagerUniqueName();
        org.junit.Assert.assertTrue("'" + long3 + "' != '" + 10L + "'", long3 == 10L);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNotNull(properties8);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "" + "'", str13, "");
    }

    @Test
    public void test1655() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1655");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        boolean boolean1 = atomikosProperties0.isForceShutdownOnVmExit();
        java.util.Properties properties2 = atomikosProperties0.asProperties();
        java.util.Properties properties3 = null;
        java.util.Properties properties4 = new java.util.Properties(properties3);
        java.util.Properties properties5 = new java.util.Properties(properties3);
        java.util.Properties properties6 = null;
        java.util.Properties properties7 = new java.util.Properties(properties6);
        java.lang.Object obj9 = properties5.put((java.lang.Object) properties7, (java.lang.Object) (short) 1);
        properties7.clear();
        int int11 = properties7.size();
        java.util.Properties properties12 = null;
        java.util.Properties properties13 = new java.util.Properties(properties12);
        java.util.Properties properties14 = new java.util.Properties(properties12);
        java.util.Properties properties15 = null;
        java.util.Properties properties16 = new java.util.Properties(properties15);
        java.lang.Object obj18 = properties14.put((java.lang.Object) properties16, (java.lang.Object) (short) 1);
        java.util.Properties properties19 = new java.util.Properties(properties16);
        java.util.Properties properties20 = new java.util.Properties(properties16);
        boolean boolean22 = properties7.remove((java.lang.Object) properties16, (java.lang.Object) 10.0f);
        boolean boolean23 = properties2.containsKey((java.lang.Object) 10.0f);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties24 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties24.setThreadedTwoPhaseCommit(true);
        boolean boolean27 = atomikosProperties24.isEnableLogging();
        boolean boolean28 = atomikosProperties24.isEnableLogging();
        java.util.Properties properties29 = atomikosProperties24.asProperties();
        atomikosProperties24.setEnableLogging(false);
        atomikosProperties24.setService("{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=0, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog, {}={}}");
        java.lang.Object obj34 = null;
        java.lang.Object obj35 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean36 = properties2.replace((java.lang.Object) atomikosProperties24, obj34, obj35);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertNotNull(properties2);
        org.junit.Assert.assertNull(obj9);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertNull(obj18);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNotNull(properties29);
    }

    @Test
    public void test1656() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1656");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setThreadedTwoPhaseCommit(true);
        atomikosProperties0.setMaxActives((int) (byte) 0);
        atomikosProperties0.setEnableLogging(true);
        atomikosProperties0.setMaxActives((int) (byte) 1);
        atomikosProperties0.setTransactionManagerUniqueName("hi!");
        java.lang.String str11 = atomikosProperties0.getLogBaseName();
        atomikosProperties0.setSerialJtaTransactions(false);
        java.util.Properties properties14 = atomikosProperties0.asProperties();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties15 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties15.setThreadedTwoPhaseCommit(true);
        atomikosProperties15.setMaxActives((int) '#');
        atomikosProperties15.setForceShutdownOnVmExit(true);
        java.lang.String str22 = atomikosProperties15.getLogBaseDir();
        java.util.Properties properties23 = atomikosProperties15.asProperties();
        java.util.Properties properties24 = null;
        java.util.Properties properties25 = new java.util.Properties(properties24);
        java.util.Properties properties26 = new java.util.Properties(properties24);
        java.util.Properties properties27 = null;
        java.util.Properties properties28 = new java.util.Properties(properties27);
        java.lang.Object obj30 = properties26.put((java.lang.Object) properties28, (java.lang.Object) (short) 1);
        boolean boolean31 = properties26.isEmpty();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties32 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties32.setDefaultJtaTimeout((long) (byte) 10);
        atomikosProperties32.setCheckpointInterval((long) (byte) 0);
        atomikosProperties32.setTransactionManagerUniqueName("");
        java.util.Properties properties39 = atomikosProperties32.asProperties();
        java.lang.Object obj40 = properties26.remove((java.lang.Object) properties39);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties41 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties41.setDefaultJtaTimeout((long) (byte) 10);
        atomikosProperties41.setCheckpointInterval((long) (byte) 0);
        atomikosProperties41.setTransactionManagerUniqueName("");
        java.lang.Object obj48 = properties39.remove((java.lang.Object) atomikosProperties41);
        boolean boolean49 = properties23.containsKey((java.lang.Object) properties39);
        java.util.Properties properties50 = new java.util.Properties(properties39);
        java.util.Properties properties51 = null;
        java.util.Properties properties52 = new java.util.Properties(properties51);
        java.util.Properties properties53 = new java.util.Properties(properties51);
        java.util.Properties properties54 = null;
        java.util.Properties properties55 = new java.util.Properties(properties54);
        java.lang.Object obj57 = properties53.put((java.lang.Object) properties55, (java.lang.Object) (short) 1);
        java.util.Properties properties59 = null;
        java.util.Properties properties60 = new java.util.Properties(properties59);
        java.util.Properties properties61 = new java.util.Properties(properties59);
        java.util.Properties properties62 = null;
        java.util.Properties properties63 = new java.util.Properties(properties62);
        java.lang.Object obj65 = properties61.put((java.lang.Object) properties63, (java.lang.Object) (short) 1);
        boolean boolean66 = properties55.remove((java.lang.Object) false, (java.lang.Object) (short) 1);
        java.util.Set<java.lang.String> strSet67 = properties55.stringPropertyNames();
        java.util.Enumeration<java.lang.Object> objEnumeration68 = properties55.elements();
        java.lang.String str69 = properties55.toString();
        java.util.Enumeration<?> wildcardEnumeration70 = properties55.propertyNames();
        boolean boolean71 = properties39.equals((java.lang.Object) properties55);
        java.lang.Object obj72 = properties39.clone();
        boolean boolean73 = properties14.equals((java.lang.Object) properties39);
        java.util.Set<java.lang.String> strSet74 = properties39.stringPropertyNames();
        java.io.OutputStream outputStream75 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties39.storeToXML(outputStream75, "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=0, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.tm_unique_name=, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}", "");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "tmlog" + "'", str11, "tmlog");
        org.junit.Assert.assertNotNull(properties14);
        org.junit.Assert.assertNull(str22);
        org.junit.Assert.assertNotNull(properties23);
        org.junit.Assert.assertNull(obj30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(properties39);
        org.junit.Assert.assertNull(obj40);
        org.junit.Assert.assertNull(obj48);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNull(obj57);
        org.junit.Assert.assertNull(obj65);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertNotNull(strSet67);
        org.junit.Assert.assertNotNull(objEnumeration68);
        org.junit.Assert.assertEquals("'" + str69 + "' != '" + "{}" + "'", str69, "{}");
        org.junit.Assert.assertNotNull(wildcardEnumeration70);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertNotNull(obj72);
// flaky:         org.junit.Assert.assertEquals(obj72.toString(), "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=0, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.tm_unique_name=, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
// flaky:         org.junit.Assert.assertEquals(java.lang.String.valueOf(obj72), "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=0, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.tm_unique_name=, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
// flaky:         org.junit.Assert.assertEquals(java.util.Objects.toString(obj72), "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=0, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.tm_unique_name=, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertNotNull(strSet74);
    }

    @Test
    public void test1657() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1657");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        int int1 = atomikosProperties0.getMaxActives();
        long long2 = atomikosProperties0.getMaxTimeout();
        java.util.Properties properties3 = atomikosProperties0.asProperties();
        java.util.Properties properties4 = atomikosProperties0.asProperties();
        long long5 = atomikosProperties0.getMaxTimeout();
        java.util.Properties properties6 = atomikosProperties0.asProperties();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties7 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties7.setThreadedTwoPhaseCommit(true);
        atomikosProperties7.setMaxActives((int) '#');
        atomikosProperties7.setForceShutdownOnVmExit(true);
        java.lang.String str14 = atomikosProperties7.getLogBaseDir();
        java.util.Properties properties15 = atomikosProperties7.asProperties();
        java.util.Properties properties16 = null;
        java.util.Properties properties17 = new java.util.Properties(properties16);
        java.util.Properties properties18 = new java.util.Properties(properties16);
        java.util.Properties properties19 = null;
        java.util.Properties properties20 = new java.util.Properties(properties19);
        java.lang.Object obj22 = properties18.put((java.lang.Object) properties20, (java.lang.Object) (short) 1);
        boolean boolean23 = properties18.isEmpty();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties24 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties24.setDefaultJtaTimeout((long) (byte) 10);
        atomikosProperties24.setCheckpointInterval((long) (byte) 0);
        atomikosProperties24.setTransactionManagerUniqueName("");
        java.util.Properties properties31 = atomikosProperties24.asProperties();
        java.lang.Object obj32 = properties18.remove((java.lang.Object) properties31);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties33 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties33.setDefaultJtaTimeout((long) (byte) 10);
        atomikosProperties33.setCheckpointInterval((long) (byte) 0);
        atomikosProperties33.setTransactionManagerUniqueName("");
        java.lang.Object obj40 = properties31.remove((java.lang.Object) atomikosProperties33);
        boolean boolean41 = properties15.containsKey((java.lang.Object) properties31);
        java.util.Properties properties42 = new java.util.Properties(properties31);
        java.util.Properties properties43 = new java.util.Properties();
        java.util.Enumeration<?> wildcardEnumeration44 = properties43.propertyNames();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties45 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        int int46 = atomikosProperties45.getMaxActives();
        atomikosProperties45.setLogBaseName("");
        java.util.Properties properties49 = atomikosProperties45.asProperties();
        boolean boolean50 = properties6.replace((java.lang.Object) properties31, (java.lang.Object) properties43, (java.lang.Object) properties49);
        java.util.Set<java.lang.String> strSet51 = properties31.stringPropertyNames();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties52 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties52.setThreadedTwoPhaseCommit(true);
        atomikosProperties52.setMaxActives((int) '#');
        atomikosProperties52.setForceShutdownOnVmExit(true);
        java.lang.String str59 = atomikosProperties52.getLogBaseDir();
        java.util.Properties properties60 = atomikosProperties52.asProperties();
        java.util.Properties properties61 = null;
        java.util.Properties properties62 = new java.util.Properties(properties61);
        java.util.Properties properties63 = new java.util.Properties(properties61);
        java.util.Properties properties64 = null;
        java.util.Properties properties65 = new java.util.Properties(properties64);
        java.lang.Object obj67 = properties63.put((java.lang.Object) properties65, (java.lang.Object) (short) 1);
        boolean boolean68 = properties63.isEmpty();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties69 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties69.setDefaultJtaTimeout((long) (byte) 10);
        atomikosProperties69.setCheckpointInterval((long) (byte) 0);
        atomikosProperties69.setTransactionManagerUniqueName("");
        java.util.Properties properties76 = atomikosProperties69.asProperties();
        java.lang.Object obj77 = properties63.remove((java.lang.Object) properties76);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties78 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties78.setDefaultJtaTimeout((long) (byte) 10);
        atomikosProperties78.setCheckpointInterval((long) (byte) 0);
        atomikosProperties78.setTransactionManagerUniqueName("");
        java.lang.Object obj85 = properties76.remove((java.lang.Object) atomikosProperties78);
        boolean boolean86 = properties60.containsKey((java.lang.Object) properties76);
        java.util.Properties properties87 = new java.util.Properties(properties76);
        java.util.Properties properties88 = new java.util.Properties(properties87);
        properties31.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties87);
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 50 + "'", int1 == 50);
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + 300000L + "'", long2 == 300000L);
        org.junit.Assert.assertNotNull(properties3);
        org.junit.Assert.assertNotNull(properties4);
        org.junit.Assert.assertTrue("'" + long5 + "' != '" + 300000L + "'", long5 == 300000L);
        org.junit.Assert.assertNotNull(properties6);
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertNotNull(properties15);
        org.junit.Assert.assertNull(obj22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(properties31);
        org.junit.Assert.assertNull(obj32);
        org.junit.Assert.assertNull(obj40);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(wildcardEnumeration44);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 50 + "'", int46 == 50);
        org.junit.Assert.assertNotNull(properties49);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertNotNull(strSet51);
        org.junit.Assert.assertNull(str59);
        org.junit.Assert.assertNotNull(properties60);
        org.junit.Assert.assertNull(obj67);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertNotNull(properties76);
        org.junit.Assert.assertNull(obj77);
        org.junit.Assert.assertNull(obj85);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + false + "'", boolean86 == false);
    }

    @Test
    public void test1658() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1658");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Properties properties2 = new java.util.Properties(properties0);
        java.util.Properties properties3 = null;
        java.util.Properties properties4 = new java.util.Properties(properties3);
        java.lang.Object obj6 = properties2.put((java.lang.Object) properties4, (java.lang.Object) (short) 1);
        properties4.clear();
        int int8 = properties4.size();
        java.util.Properties properties9 = null;
        java.util.Properties properties10 = new java.util.Properties(properties9);
        java.util.Properties properties11 = new java.util.Properties(properties9);
        java.util.Properties properties12 = null;
        java.util.Properties properties13 = new java.util.Properties(properties12);
        java.lang.Object obj15 = properties11.put((java.lang.Object) properties13, (java.lang.Object) (short) 1);
        java.util.Properties properties16 = new java.util.Properties(properties13);
        java.util.Properties properties17 = new java.util.Properties(properties13);
        boolean boolean19 = properties4.remove((java.lang.Object) properties13, (java.lang.Object) 10.0f);
        java.util.Enumeration<java.lang.Object> objEnumeration20 = properties13.elements();
        java.lang.Object obj21 = properties13.clone();
        java.util.Properties properties22 = new java.util.Properties(properties13);
        java.lang.Object obj23 = null;
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties24 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        int int25 = atomikosProperties24.getMaxActives();
        long long26 = atomikosProperties24.getMaxTimeout();
        atomikosProperties24.setTransactionManagerUniqueName("{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=0, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.tm_unique_name=, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
        long long29 = atomikosProperties24.getMaxTimeout();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj30 = properties22.replace(obj23, (java.lang.Object) long29);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(obj6);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertNull(obj15);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(objEnumeration20);
        org.junit.Assert.assertNotNull(obj21);
        org.junit.Assert.assertEquals(obj21.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj21), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj21), "{}");
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 50 + "'", int25 == 50);
        org.junit.Assert.assertTrue("'" + long26 + "' != '" + 300000L + "'", long26 == 300000L);
        org.junit.Assert.assertTrue("'" + long29 + "' != '" + 300000L + "'", long29 == 300000L);
    }

    @Test
    public void test1659() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1659");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        int int1 = atomikosProperties0.getMaxActives();
        long long2 = atomikosProperties0.getMaxTimeout();
        java.util.Properties properties3 = atomikosProperties0.asProperties();
        atomikosProperties0.setTransactionManagerUniqueName("");
        java.lang.String str6 = atomikosProperties0.getTransactionManagerUniqueName();
        boolean boolean7 = atomikosProperties0.isForceShutdownOnVmExit();
        atomikosProperties0.setMaxActives((int) (short) 10);
        atomikosProperties0.setEnableLogging(false);
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 50 + "'", int1 == 50);
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + 300000L + "'", long2 == 300000L);
        org.junit.Assert.assertNotNull(properties3);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
    }

    @Test
    public void test1660() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1660");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Properties properties2 = new java.util.Properties(properties0);
        java.util.Properties properties3 = null;
        java.util.Properties properties4 = new java.util.Properties(properties3);
        java.lang.Object obj6 = properties2.put((java.lang.Object) properties4, (java.lang.Object) (short) 1);
        java.util.Collection<java.lang.Object> objCollection7 = properties4.values();
        java.util.Properties properties8 = null;
        java.util.Properties properties9 = new java.util.Properties(properties8);
        java.util.Properties properties10 = new java.util.Properties(properties8);
        java.util.Properties properties11 = null;
        java.util.Properties properties12 = new java.util.Properties(properties11);
        java.lang.Object obj14 = properties10.put((java.lang.Object) properties12, (java.lang.Object) (short) 1);
        java.util.Properties properties16 = null;
        java.util.Properties properties17 = new java.util.Properties(properties16);
        java.util.Properties properties18 = new java.util.Properties(properties16);
        java.util.Properties properties19 = null;
        java.util.Properties properties20 = new java.util.Properties(properties19);
        java.lang.Object obj22 = properties18.put((java.lang.Object) properties20, (java.lang.Object) (short) 1);
        boolean boolean23 = properties12.remove((java.lang.Object) false, (java.lang.Object) (short) 1);
        java.util.Set<java.lang.String> strSet24 = properties12.stringPropertyNames();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties25 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties25.setDefaultJtaTimeout((long) (byte) 10);
        long long28 = atomikosProperties25.getDefaultJtaTimeout();
        java.lang.Object obj29 = properties12.get((java.lang.Object) atomikosProperties25);
        java.util.Enumeration<java.lang.Object> objEnumeration30 = properties12.elements();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties31 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties31.setThreadedTwoPhaseCommit(true);
        atomikosProperties31.setMaxActives((int) '#');
        atomikosProperties31.setEnableLogging(true);
        int int38 = atomikosProperties31.getMaxActives();
        boolean boolean39 = properties12.containsValue((java.lang.Object) atomikosProperties31);
        java.util.Properties properties40 = atomikosProperties31.asProperties();
        java.util.Properties properties41 = null;
        java.util.Properties properties42 = new java.util.Properties(properties41);
        java.util.Properties properties43 = new java.util.Properties(properties41);
        java.util.Properties properties44 = null;
        java.util.Properties properties45 = new java.util.Properties(properties44);
        java.lang.Object obj47 = properties43.put((java.lang.Object) properties45, (java.lang.Object) (short) 1);
        boolean boolean48 = properties43.isEmpty();
        java.util.Properties properties49 = null;
        java.util.Properties properties50 = new java.util.Properties(properties49);
        java.util.Properties properties51 = new java.util.Properties(properties49);
        boolean boolean52 = properties43.containsKey((java.lang.Object) properties51);
        java.util.Properties properties53 = new java.util.Properties(properties51);
        java.util.Properties properties54 = null;
        java.util.Properties properties55 = new java.util.Properties(properties54);
        java.util.Properties properties56 = new java.util.Properties(properties54);
        java.util.Properties properties57 = null;
        java.util.Properties properties58 = new java.util.Properties(properties57);
        java.lang.Object obj60 = properties56.put((java.lang.Object) properties58, (java.lang.Object) (short) 1);
        boolean boolean61 = properties56.isEmpty();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties62 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties62.setDefaultJtaTimeout((long) (byte) 10);
        atomikosProperties62.setCheckpointInterval((long) (byte) 0);
        atomikosProperties62.setTransactionManagerUniqueName("");
        java.util.Properties properties69 = atomikosProperties62.asProperties();
        java.lang.Object obj70 = properties56.remove((java.lang.Object) properties69);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties71 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties71.setDefaultJtaTimeout((long) (byte) 10);
        atomikosProperties71.setCheckpointInterval((long) (byte) 0);
        atomikosProperties71.setTransactionManagerUniqueName("");
        java.lang.Object obj78 = properties69.remove((java.lang.Object) atomikosProperties71);
        java.util.Enumeration<java.lang.Object> objEnumeration79 = properties69.elements();
        java.lang.Object obj80 = properties53.get((java.lang.Object) properties69);
        java.lang.Object obj81 = properties4.putIfAbsent((java.lang.Object) properties40, (java.lang.Object) properties53);
        boolean boolean82 = properties53.isEmpty();
        java.util.Properties properties83 = new java.util.Properties(properties53);
        java.io.Reader reader84 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties53.load(reader84);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(obj6);
        org.junit.Assert.assertNotNull(objCollection7);
        org.junit.Assert.assertNull(obj14);
        org.junit.Assert.assertNull(obj22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(strSet24);
        org.junit.Assert.assertTrue("'" + long28 + "' != '" + 10L + "'", long28 == 10L);
        org.junit.Assert.assertNull(obj29);
        org.junit.Assert.assertNotNull(objEnumeration30);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 35 + "'", int38 == 35);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(properties40);
        org.junit.Assert.assertNull(obj47);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertNull(obj60);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertNotNull(properties69);
        org.junit.Assert.assertNull(obj70);
        org.junit.Assert.assertNull(obj78);
        org.junit.Assert.assertNotNull(objEnumeration79);
        org.junit.Assert.assertNull(obj80);
        org.junit.Assert.assertNull(obj81);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + true + "'", boolean82 == true);
    }

    @Test
    public void test1661() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1661");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Properties properties2 = new java.util.Properties(properties0);
        java.util.Properties properties3 = null;
        java.util.Properties properties4 = new java.util.Properties(properties3);
        java.lang.Object obj6 = properties2.put((java.lang.Object) properties4, (java.lang.Object) (short) 1);
        java.util.Properties properties8 = null;
        java.util.Properties properties9 = new java.util.Properties(properties8);
        java.util.Properties properties10 = new java.util.Properties(properties8);
        java.util.Properties properties11 = null;
        java.util.Properties properties12 = new java.util.Properties(properties11);
        java.lang.Object obj14 = properties10.put((java.lang.Object) properties12, (java.lang.Object) (short) 1);
        boolean boolean15 = properties4.remove((java.lang.Object) false, (java.lang.Object) (short) 1);
        java.util.Set<java.lang.String> strSet16 = properties4.stringPropertyNames();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties17 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties17.setDefaultJtaTimeout((long) (byte) 10);
        atomikosProperties17.setCheckpointInterval((long) (byte) 0);
        atomikosProperties17.setTransactionManagerUniqueName("");
        boolean boolean24 = atomikosProperties17.isEnableLogging();
        atomikosProperties17.setSerialJtaTransactions(false);
        atomikosProperties17.setLogBaseDir("");
        java.util.Properties properties29 = null;
        java.util.Properties properties30 = new java.util.Properties(properties29);
        java.util.Properties properties31 = new java.util.Properties(properties29);
        java.util.Properties properties32 = null;
        java.util.Properties properties33 = new java.util.Properties(properties32);
        java.lang.Object obj35 = properties31.put((java.lang.Object) properties33, (java.lang.Object) (short) 1);
        java.util.Properties properties36 = new java.util.Properties(properties33);
        boolean boolean37 = properties4.remove((java.lang.Object) "", (java.lang.Object) properties36);
        java.lang.String str39 = properties4.getProperty("{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.tm_unique_name=, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties40 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties40.setDefaultJtaTimeout((long) (byte) 10);
        atomikosProperties40.setCheckpointInterval((long) (byte) 0);
        atomikosProperties40.setTransactionManagerUniqueName("");
        boolean boolean47 = atomikosProperties40.isEnableLogging();
        atomikosProperties40.setSerialJtaTransactions(false);
        java.lang.Object obj50 = properties4.remove((java.lang.Object) atomikosProperties40);
        java.util.Properties properties51 = atomikosProperties40.asProperties();
        org.junit.Assert.assertNull(obj6);
        org.junit.Assert.assertNull(obj14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(strSet16);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNull(obj35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNull(str39);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertNull(obj50);
        org.junit.Assert.assertNotNull(properties51);
    }

    @Test
    public void test1662() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1662");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setDefaultJtaTimeout((long) (byte) 10);
        atomikosProperties0.setCheckpointInterval((long) (byte) 0);
        atomikosProperties0.setTransactionManagerUniqueName("");
        boolean boolean7 = atomikosProperties0.isEnableLogging();
        atomikosProperties0.setCheckpointInterval((long) ' ');
        java.util.Properties properties10 = atomikosProperties0.asProperties();
        java.util.Set<java.lang.Object> objSet11 = properties10.keySet();
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(properties10);
        org.junit.Assert.assertNotNull(objSet11);
    }

    @Test
    public void test1663() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1663");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Properties properties2 = new java.util.Properties(properties0);
        java.util.Properties properties3 = null;
        java.util.Properties properties4 = new java.util.Properties(properties3);
        java.lang.Object obj6 = properties2.put((java.lang.Object) properties4, (java.lang.Object) (short) 1);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties7 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties7.setThreadedTwoPhaseCommit(true);
        atomikosProperties7.setMaxActives((int) (byte) 0);
        boolean boolean12 = properties2.containsValue((java.lang.Object) atomikosProperties7);
        int int13 = properties2.size();
        java.io.Writer writer14 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties2.store(writer14, "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=true, com.atomikos.icatch.checkpoint_interval=0, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.tm_unique_name=, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(obj6);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 1 + "'", int13 == 1);
    }

    @Test
    public void test1664() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1664");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Properties properties2 = new java.util.Properties(properties0);
        java.util.Properties properties3 = null;
        java.util.Properties properties4 = new java.util.Properties(properties3);
        java.lang.Object obj6 = properties2.put((java.lang.Object) properties4, (java.lang.Object) (short) 1);
        boolean boolean7 = properties2.isEmpty();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties8 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties8.setDefaultJtaTimeout((long) (byte) 10);
        atomikosProperties8.setCheckpointInterval((long) (byte) 0);
        atomikosProperties8.setTransactionManagerUniqueName("");
        java.util.Properties properties15 = atomikosProperties8.asProperties();
        java.lang.Object obj16 = properties2.remove((java.lang.Object) properties15);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties17 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties17.setDefaultJtaTimeout((long) (byte) 10);
        atomikosProperties17.setCheckpointInterval((long) (byte) 0);
        atomikosProperties17.setTransactionManagerUniqueName("");
        java.lang.Object obj24 = properties15.remove((java.lang.Object) atomikosProperties17);
        java.util.Properties properties25 = null;
        java.util.Properties properties26 = new java.util.Properties(properties25);
        java.util.Properties properties27 = new java.util.Properties(properties25);
        java.util.Properties properties28 = null;
        java.util.Properties properties29 = new java.util.Properties(properties28);
        java.lang.Object obj31 = properties27.put((java.lang.Object) properties29, (java.lang.Object) (short) 1);
        java.util.Enumeration<java.lang.Object> objEnumeration32 = properties29.elements();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet33 = properties29.entrySet();
        java.util.Set<java.lang.Object> objSet34 = properties29.keySet();
        java.util.Properties properties35 = null;
        java.util.Properties properties36 = new java.util.Properties(properties35);
        java.util.Properties properties37 = new java.util.Properties(properties35);
        java.util.Properties properties38 = null;
        java.util.Properties properties39 = new java.util.Properties(properties38);
        java.lang.Object obj41 = properties37.put((java.lang.Object) properties39, (java.lang.Object) (short) 1);
        properties39.clear();
        int int43 = properties39.size();
        java.util.Properties properties44 = new java.util.Properties(properties39);
        java.util.Properties properties45 = null;
        java.util.Properties properties46 = new java.util.Properties(properties45);
        java.util.Properties properties47 = new java.util.Properties(properties45);
        java.util.Properties properties48 = null;
        java.util.Properties properties49 = new java.util.Properties(properties48);
        java.lang.Object obj51 = properties47.put((java.lang.Object) properties49, (java.lang.Object) (short) 1);
        properties49.clear();
        java.lang.String str54 = properties49.getProperty("");
        java.util.Properties properties55 = null;
        java.util.Properties properties56 = new java.util.Properties(properties55);
        java.util.Properties properties57 = new java.util.Properties(properties55);
        java.util.Properties properties58 = null;
        java.util.Properties properties59 = new java.util.Properties(properties58);
        java.lang.Object obj61 = properties57.put((java.lang.Object) properties59, (java.lang.Object) (short) 1);
        properties49.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties57);
        java.lang.Object obj63 = properties29.put((java.lang.Object) properties39, (java.lang.Object) properties57);
        java.util.Enumeration<java.lang.Object> objEnumeration64 = properties39.elements();
        java.lang.Object obj66 = properties15.put((java.lang.Object) properties39, (java.lang.Object) "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=0, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.tm_unique_name=, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
        java.util.Properties properties67 = new java.util.Properties(properties15);
        java.util.Properties properties68 = new java.util.Properties(properties67);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties69 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties69.setDefaultJtaTimeout((long) (byte) 10);
        atomikosProperties69.setCheckpointInterval((long) (byte) 0);
        atomikosProperties69.setEnableLogging(true);
        java.lang.String str76 = atomikosProperties69.getLogBaseName();
        atomikosProperties69.setTransactionManagerUniqueName("{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=0, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.tm_unique_name=, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties79 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties79.setDefaultJtaTimeout((long) (byte) 10);
        atomikosProperties79.setSerialJtaTransactions(false);
        atomikosProperties79.setMaxTimeout((long) (short) -1);
        long long86 = atomikosProperties79.getDefaultJtaTimeout();
        boolean boolean87 = atomikosProperties79.isThreadedTwoPhaseCommit();
        int int88 = atomikosProperties79.getMaxActives();
        java.lang.String str89 = atomikosProperties79.getTransactionManagerUniqueName();
        boolean boolean90 = atomikosProperties79.isSerialJtaTransactions();
        atomikosProperties79.setLogBaseName("{tmlog=}");
        java.util.Properties properties93 = atomikosProperties79.asProperties();
        boolean boolean94 = properties68.remove((java.lang.Object) "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=0, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.tm_unique_name=, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}", (java.lang.Object) properties93);
        org.junit.Assert.assertNull(obj6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(properties15);
        org.junit.Assert.assertNull(obj16);
        org.junit.Assert.assertNull(obj24);
        org.junit.Assert.assertNull(obj31);
        org.junit.Assert.assertNotNull(objEnumeration32);
        org.junit.Assert.assertNotNull(objEntrySet33);
        org.junit.Assert.assertNotNull(objSet34);
        org.junit.Assert.assertNull(obj41);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 0 + "'", int43 == 0);
        org.junit.Assert.assertNull(obj51);
        org.junit.Assert.assertNull(str54);
        org.junit.Assert.assertNull(obj61);
        org.junit.Assert.assertNull(obj63);
        org.junit.Assert.assertNotNull(objEnumeration64);
        org.junit.Assert.assertNull(obj66);
        org.junit.Assert.assertEquals("'" + str76 + "' != '" + "tmlog" + "'", str76, "tmlog");
        org.junit.Assert.assertTrue("'" + long86 + "' != '" + 10L + "'", long86 == 10L);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + false + "'", boolean87 == false);
        org.junit.Assert.assertTrue("'" + int88 + "' != '" + 50 + "'", int88 == 50);
        org.junit.Assert.assertNull(str89);
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + false + "'", boolean90 == false);
        org.junit.Assert.assertNotNull(properties93);
        org.junit.Assert.assertTrue("'" + boolean94 + "' != '" + false + "'", boolean94 == false);
    }

    @Test
    public void test1665() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1665");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        int int1 = atomikosProperties0.getMaxActives();
        long long2 = atomikosProperties0.getMaxTimeout();
        java.util.Properties properties3 = atomikosProperties0.asProperties();
        java.util.Properties properties4 = atomikosProperties0.asProperties();
        boolean boolean5 = atomikosProperties0.isEnableLogging();
        atomikosProperties0.setCheckpointInterval(0L);
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 50 + "'", int1 == 50);
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + 300000L + "'", long2 == 300000L);
        org.junit.Assert.assertNotNull(properties3);
        org.junit.Assert.assertNotNull(properties4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
    }

    @Test
    public void test1666() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1666");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setDefaultJtaTimeout((long) (byte) 10);
        long long3 = atomikosProperties0.getDefaultJtaTimeout();
        atomikosProperties0.setTransactionManagerUniqueName("");
        boolean boolean6 = atomikosProperties0.isEnableLogging();
        atomikosProperties0.setDefaultJtaTimeout((long) '4');
        java.lang.String str9 = atomikosProperties0.getTransactionManagerUniqueName();
        atomikosProperties0.setThreadedTwoPhaseCommit(true);
        java.util.Properties properties12 = atomikosProperties0.asProperties();
        java.util.Properties properties13 = new java.util.Properties(properties12);
        java.util.Properties properties14 = new java.util.Properties(properties12);
        java.io.OutputStream outputStream15 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties14.storeToXML(outputStream15, "{tmlog={}}");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + long3 + "' != '" + 10L + "'", long3 == 10L);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "" + "'", str9, "");
        org.junit.Assert.assertNotNull(properties12);
    }

    @Test
    public void test1667() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1667");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setDefaultJtaTimeout((long) (byte) 10);
        long long3 = atomikosProperties0.getDefaultJtaTimeout();
        atomikosProperties0.setTransactionManagerUniqueName("");
        boolean boolean6 = atomikosProperties0.isEnableLogging();
        java.lang.String str7 = atomikosProperties0.getLogBaseDir();
        java.util.Properties properties8 = atomikosProperties0.asProperties();
        boolean boolean9 = atomikosProperties0.isEnableLogging();
        long long10 = atomikosProperties0.getDefaultJtaTimeout();
        atomikosProperties0.setMaxActives((int) (short) 10);
        boolean boolean13 = atomikosProperties0.isForceShutdownOnVmExit();
        boolean boolean14 = atomikosProperties0.isForceShutdownOnVmExit();
        org.junit.Assert.assertTrue("'" + long3 + "' != '" + 10L + "'", long3 == 10L);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNotNull(properties8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertTrue("'" + long10 + "' != '" + 10L + "'", long10 == 10L);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
    }

    @Test
    public void test1668() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1668");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Properties properties2 = new java.util.Properties(properties0);
        java.util.Properties properties3 = null;
        java.util.Properties properties4 = new java.util.Properties(properties3);
        java.lang.Object obj6 = properties2.put((java.lang.Object) properties4, (java.lang.Object) (short) 1);
        java.util.Properties properties8 = null;
        java.util.Properties properties9 = new java.util.Properties(properties8);
        java.util.Properties properties10 = new java.util.Properties(properties8);
        java.util.Properties properties11 = null;
        java.util.Properties properties12 = new java.util.Properties(properties11);
        java.lang.Object obj14 = properties10.put((java.lang.Object) properties12, (java.lang.Object) (short) 1);
        boolean boolean15 = properties4.remove((java.lang.Object) false, (java.lang.Object) (short) 1);
        java.util.Enumeration<java.lang.Object> objEnumeration16 = properties4.elements();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties17 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties17.setDefaultJtaTimeout((long) (byte) 10);
        atomikosProperties17.setCheckpointInterval((long) (byte) 0);
        atomikosProperties17.setTransactionManagerUniqueName("");
        java.util.Properties properties24 = atomikosProperties17.asProperties();
        boolean boolean25 = atomikosProperties17.isForceShutdownOnVmExit();
        boolean boolean26 = properties4.containsValue((java.lang.Object) atomikosProperties17);
        boolean boolean27 = atomikosProperties17.isSerialJtaTransactions();
        atomikosProperties17.setSerialJtaTransactions(true);
        java.util.Properties properties30 = atomikosProperties17.asProperties();
        org.junit.Assert.assertNull(obj6);
        org.junit.Assert.assertNull(obj14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(objEnumeration16);
        org.junit.Assert.assertNotNull(properties24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNotNull(properties30);
    }

    @Test
    public void test1669() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1669");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setDefaultJtaTimeout((long) (byte) 10);
        long long3 = atomikosProperties0.getDefaultJtaTimeout();
        atomikosProperties0.setTransactionManagerUniqueName("");
        boolean boolean6 = atomikosProperties0.isEnableLogging();
        java.lang.String str7 = atomikosProperties0.getLogBaseDir();
        java.util.Properties properties8 = atomikosProperties0.asProperties();
        boolean boolean9 = properties8.isEmpty();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties10 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties10.setDefaultJtaTimeout((long) (byte) 10);
        atomikosProperties10.setCheckpointInterval((long) (byte) 0);
        atomikosProperties10.setTransactionManagerUniqueName("");
        java.util.Properties properties17 = atomikosProperties10.asProperties();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties18 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties18.setThreadedTwoPhaseCommit(true);
        atomikosProperties18.setMaxActives((int) '#');
        atomikosProperties18.setForceShutdownOnVmExit(true);
        java.lang.String str25 = atomikosProperties18.getLogBaseDir();
        java.lang.Object obj26 = properties17.remove((java.lang.Object) atomikosProperties18);
        java.util.Collection<java.lang.Object> objCollection27 = properties17.values();
        boolean boolean28 = properties8.contains((java.lang.Object) properties17);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties29 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties29.setDefaultJtaTimeout((long) (byte) 10);
        long long32 = atomikosProperties29.getDefaultJtaTimeout();
        atomikosProperties29.setSerialJtaTransactions(true);
        java.util.Properties properties35 = atomikosProperties29.asProperties();
        java.util.Properties properties36 = atomikosProperties29.asProperties();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties37 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties37.setDefaultJtaTimeout((long) (byte) 10);
        boolean boolean40 = atomikosProperties37.isForceShutdownOnVmExit();
        atomikosProperties37.setTransactionManagerUniqueName("{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=true, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=true, com.atomikos.icatch.max_actives=35, com.atomikos.icatch.log_base_name=tmlog}");
        atomikosProperties37.setThreadedTwoPhaseCommit(false);
        boolean boolean45 = properties17.remove((java.lang.Object) properties36, (java.lang.Object) atomikosProperties37);
        atomikosProperties37.setService("");
        java.lang.Class<?> wildcardClass48 = atomikosProperties37.getClass();
        org.junit.Assert.assertTrue("'" + long3 + "' != '" + 10L + "'", long3 == 10L);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNotNull(properties8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(properties17);
        org.junit.Assert.assertNull(str25);
        org.junit.Assert.assertNull(obj26);
        org.junit.Assert.assertNotNull(objCollection27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + long32 + "' != '" + 10L + "'", long32 == 10L);
        org.junit.Assert.assertNotNull(properties35);
        org.junit.Assert.assertNotNull(properties36);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNotNull(wildcardClass48);
    }

    @Test
    public void test1670() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1670");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setDefaultJtaTimeout((long) (byte) 10);
        atomikosProperties0.setCheckpointInterval((long) (byte) 0);
        atomikosProperties0.setTransactionManagerUniqueName("");
        boolean boolean7 = atomikosProperties0.isEnableLogging();
        atomikosProperties0.setLogBaseDir("hi!");
        atomikosProperties0.setForceShutdownOnVmExit(false);
        long long12 = atomikosProperties0.getMaxTimeout();
        atomikosProperties0.setSerialJtaTransactions(true);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertTrue("'" + long12 + "' != '" + 300000L + "'", long12 == 300000L);
    }

    @Test
    public void test1671() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1671");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Properties properties2 = new java.util.Properties(properties0);
        java.util.Properties properties3 = null;
        java.util.Properties properties4 = new java.util.Properties(properties3);
        java.lang.Object obj6 = properties2.put((java.lang.Object) properties4, (java.lang.Object) (short) 1);
        java.util.Enumeration<java.lang.Object> objEnumeration7 = properties4.elements();
        java.util.Properties properties8 = new java.util.Properties(properties4);
        boolean boolean9 = properties4.isEmpty();
        java.util.Properties properties10 = null;
        java.util.Properties properties11 = new java.util.Properties(properties10);
        java.util.Properties properties12 = new java.util.Properties(properties10);
        java.util.Properties properties13 = null;
        java.util.Properties properties14 = new java.util.Properties(properties13);
        java.lang.Object obj16 = properties12.put((java.lang.Object) properties14, (java.lang.Object) (short) 1);
        java.util.Properties properties18 = null;
        java.util.Properties properties19 = new java.util.Properties(properties18);
        java.util.Properties properties20 = new java.util.Properties(properties18);
        java.util.Properties properties21 = null;
        java.util.Properties properties22 = new java.util.Properties(properties21);
        java.lang.Object obj24 = properties20.put((java.lang.Object) properties22, (java.lang.Object) (short) 1);
        boolean boolean25 = properties14.remove((java.lang.Object) false, (java.lang.Object) (short) 1);
        java.util.Set<java.lang.String> strSet26 = properties14.stringPropertyNames();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties27 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties27.setThreadedTwoPhaseCommit(true);
        atomikosProperties27.setMaxActives((int) (byte) 0);
        atomikosProperties27.setEnableLogging(true);
        atomikosProperties27.setForceShutdownOnVmExit(false);
        java.lang.Object obj36 = properties14.get((java.lang.Object) false);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties37 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties37.setDefaultJtaTimeout((long) (byte) 10);
        long long40 = atomikosProperties37.getDefaultJtaTimeout();
        atomikosProperties37.setTransactionManagerUniqueName("");
        long long43 = atomikosProperties37.getDefaultJtaTimeout();
        boolean boolean44 = atomikosProperties37.isEnableLogging();
        atomikosProperties37.setService("{}");
        atomikosProperties37.setTransactionManagerUniqueName("{tmlog={com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=0, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.tm_unique_name=, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}, 4=true}");
        java.util.Properties properties49 = null;
        java.util.Properties properties50 = new java.util.Properties(properties49);
        java.util.Properties properties51 = new java.util.Properties(properties49);
        java.util.Properties properties52 = null;
        java.util.Properties properties53 = new java.util.Properties(properties52);
        java.lang.Object obj55 = properties51.put((java.lang.Object) properties53, (java.lang.Object) (short) 1);
        java.util.Properties properties57 = null;
        java.util.Properties properties58 = new java.util.Properties(properties57);
        java.util.Properties properties59 = new java.util.Properties(properties57);
        java.util.Properties properties60 = null;
        java.util.Properties properties61 = new java.util.Properties(properties60);
        java.lang.Object obj63 = properties59.put((java.lang.Object) properties61, (java.lang.Object) (short) 1);
        boolean boolean64 = properties53.remove((java.lang.Object) false, (java.lang.Object) (short) 1);
        java.lang.Object obj66 = properties53.remove((java.lang.Object) '#');
        java.util.Set<java.lang.Object> objSet67 = properties53.keySet();
        properties53.clear();
        java.util.Properties properties69 = null;
        java.util.Properties properties70 = new java.util.Properties(properties69);
        java.util.Properties properties71 = new java.util.Properties(properties69);
        java.util.Properties properties72 = null;
        java.util.Properties properties73 = new java.util.Properties(properties72);
        java.lang.Object obj75 = properties71.put((java.lang.Object) properties73, (java.lang.Object) (short) 1);
        java.util.Enumeration<java.lang.Object> objEnumeration76 = properties73.elements();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet77 = properties73.entrySet();
        boolean boolean78 = properties53.equals((java.lang.Object) properties73);
        java.util.Enumeration<java.lang.Object> objEnumeration79 = properties73.elements();
        boolean boolean80 = properties14.remove((java.lang.Object) "{tmlog={com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=0, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.tm_unique_name=, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}, 4=true}", (java.lang.Object) objEnumeration79);
        java.util.Properties properties81 = new java.util.Properties(properties14);
        properties4.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties81);
        boolean boolean83 = properties4.isEmpty();
        java.util.Properties properties84 = new java.util.Properties(properties4);
        org.junit.Assert.assertNull(obj6);
        org.junit.Assert.assertNotNull(objEnumeration7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertNull(obj16);
        org.junit.Assert.assertNull(obj24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(strSet26);
        org.junit.Assert.assertNull(obj36);
        org.junit.Assert.assertTrue("'" + long40 + "' != '" + 10L + "'", long40 == 10L);
        org.junit.Assert.assertTrue("'" + long43 + "' != '" + 10L + "'", long43 == 10L);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertNull(obj55);
        org.junit.Assert.assertNull(obj63);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertNull(obj66);
        org.junit.Assert.assertNotNull(objSet67);
        org.junit.Assert.assertNull(obj75);
        org.junit.Assert.assertNotNull(objEnumeration76);
        org.junit.Assert.assertNotNull(objEntrySet77);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + true + "'", boolean78 == true);
        org.junit.Assert.assertNotNull(objEnumeration79);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", boolean80 == false);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + true + "'", boolean83 == true);
    }

    @Test
    public void test1672() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1672");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setDefaultJtaTimeout((long) (byte) 10);
        long long3 = atomikosProperties0.getDefaultJtaTimeout();
        atomikosProperties0.setTransactionManagerUniqueName("hi!");
        atomikosProperties0.setLogBaseName("tmlog");
        atomikosProperties0.setCheckpointInterval(300000L);
        long long10 = atomikosProperties0.getMaxTimeout();
        atomikosProperties0.setSerialJtaTransactions(false);
        atomikosProperties0.setCheckpointInterval((long) (short) 100);
        atomikosProperties0.setEnableLogging(true);
        boolean boolean17 = atomikosProperties0.isSerialJtaTransactions();
        java.util.Properties properties18 = atomikosProperties0.asProperties();
        java.lang.Object obj21 = properties18.setProperty("", "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=100, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=true, com.atomikos.icatch.tm_unique_name=, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name={com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.tm_unique_name=, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}}");
        org.junit.Assert.assertTrue("'" + long3 + "' != '" + 10L + "'", long3 == 10L);
        org.junit.Assert.assertTrue("'" + long10 + "' != '" + 300000L + "'", long10 == 300000L);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(properties18);
        org.junit.Assert.assertNull(obj21);
    }

    @Test
    public void test1673() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1673");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setDefaultJtaTimeout((long) (byte) 10);
        atomikosProperties0.setCheckpointInterval((long) (byte) 0);
        atomikosProperties0.setTransactionManagerUniqueName("");
        boolean boolean7 = atomikosProperties0.isEnableLogging();
        atomikosProperties0.setSerialJtaTransactions(false);
        atomikosProperties0.setLogBaseDir("");
        int int12 = atomikosProperties0.getMaxActives();
        atomikosProperties0.setService("tmlog");
        atomikosProperties0.setForceShutdownOnVmExit(false);
        java.lang.String str17 = atomikosProperties0.getService();
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 50 + "'", int12 == 50);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "tmlog" + "'", str17, "tmlog");
    }

    @Test
    public void test1674() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1674");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Properties properties2 = new java.util.Properties(properties0);
        java.util.Properties properties3 = null;
        java.util.Properties properties4 = new java.util.Properties(properties3);
        java.lang.Object obj6 = properties2.put((java.lang.Object) properties4, (java.lang.Object) (short) 1);
        java.util.Properties properties8 = null;
        java.util.Properties properties9 = new java.util.Properties(properties8);
        java.util.Properties properties10 = new java.util.Properties(properties8);
        java.util.Properties properties11 = null;
        java.util.Properties properties12 = new java.util.Properties(properties11);
        java.lang.Object obj14 = properties10.put((java.lang.Object) properties12, (java.lang.Object) (short) 1);
        boolean boolean15 = properties4.remove((java.lang.Object) false, (java.lang.Object) (short) 1);
        java.util.Properties properties16 = new java.util.Properties(properties4);
        int int17 = properties16.size();
        java.util.Properties properties18 = null;
        java.util.Properties properties19 = new java.util.Properties(properties18);
        java.util.Properties properties20 = new java.util.Properties(properties18);
        java.util.Properties properties21 = null;
        java.util.Properties properties22 = new java.util.Properties(properties21);
        java.lang.Object obj24 = properties20.put((java.lang.Object) properties22, (java.lang.Object) (short) 1);
        properties22.clear();
        java.lang.String str27 = properties22.getProperty("");
        java.util.Properties properties28 = null;
        java.util.Properties properties29 = new java.util.Properties(properties28);
        java.util.Properties properties30 = new java.util.Properties(properties28);
        java.util.Properties properties31 = null;
        java.util.Properties properties32 = new java.util.Properties(properties31);
        java.lang.Object obj34 = properties30.put((java.lang.Object) properties32, (java.lang.Object) (short) 1);
        properties22.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties30);
        java.lang.Object obj36 = properties16.remove((java.lang.Object) properties22);
        java.lang.Object obj39 = properties22.setProperty("tmlog", "hi!");
        java.util.Properties properties40 = null;
        java.util.Properties properties41 = new java.util.Properties(properties40);
        java.util.Properties properties42 = new java.util.Properties(properties40);
        java.util.Properties properties43 = null;
        java.util.Properties properties44 = new java.util.Properties(properties43);
        java.lang.Object obj46 = properties42.put((java.lang.Object) properties44, (java.lang.Object) (short) 1);
        java.util.Properties properties48 = null;
        java.util.Properties properties49 = new java.util.Properties(properties48);
        java.util.Properties properties50 = new java.util.Properties(properties48);
        java.util.Properties properties51 = null;
        java.util.Properties properties52 = new java.util.Properties(properties51);
        java.lang.Object obj54 = properties50.put((java.lang.Object) properties52, (java.lang.Object) (short) 1);
        boolean boolean55 = properties44.remove((java.lang.Object) false, (java.lang.Object) (short) 1);
        java.util.Set<java.lang.String> strSet56 = properties44.stringPropertyNames();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties57 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties57.setDefaultJtaTimeout((long) (byte) 10);
        long long60 = atomikosProperties57.getDefaultJtaTimeout();
        java.lang.Object obj61 = properties44.get((java.lang.Object) atomikosProperties57);
        java.util.Properties properties62 = null;
        java.util.Properties properties63 = new java.util.Properties(properties62);
        java.util.Properties properties64 = new java.util.Properties(properties62);
        java.util.Properties properties65 = null;
        java.util.Properties properties66 = new java.util.Properties(properties65);
        java.lang.Object obj68 = properties64.put((java.lang.Object) properties66, (java.lang.Object) (short) 1);
        java.util.Properties properties70 = null;
        java.util.Properties properties71 = new java.util.Properties(properties70);
        java.util.Properties properties72 = new java.util.Properties(properties70);
        java.util.Properties properties73 = null;
        java.util.Properties properties74 = new java.util.Properties(properties73);
        java.lang.Object obj76 = properties72.put((java.lang.Object) properties74, (java.lang.Object) (short) 1);
        boolean boolean77 = properties66.remove((java.lang.Object) false, (java.lang.Object) (short) 1);
        java.lang.Object obj79 = properties66.remove((java.lang.Object) '#');
        java.util.Set<java.lang.Object> objSet80 = properties66.keySet();
        boolean boolean81 = properties44.containsKey((java.lang.Object) properties66);
        java.lang.Object obj84 = properties66.setProperty("{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.tm_unique_name=, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}", "{}");
        java.util.Enumeration<java.lang.Object> objEnumeration85 = properties66.keys();
        boolean boolean86 = properties22.containsValue((java.lang.Object) properties66);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties87 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties87.setDefaultJtaTimeout((long) (byte) 10);
        long long90 = atomikosProperties87.getDefaultJtaTimeout();
        atomikosProperties87.setTransactionManagerUniqueName("hi!");
        atomikosProperties87.setLogBaseName("tmlog");
        atomikosProperties87.setTransactionManagerUniqueName("{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=0, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.tm_unique_name=, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
        atomikosProperties87.setLogBaseName("{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=100, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=true, com.atomikos.icatch.tm_unique_name=, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name={com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.tm_unique_name=, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}}");
        boolean boolean99 = properties66.containsValue((java.lang.Object) atomikosProperties87);
        org.junit.Assert.assertNull(obj6);
        org.junit.Assert.assertNull(obj14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 0 + "'", int17 == 0);
        org.junit.Assert.assertNull(obj24);
        org.junit.Assert.assertNull(str27);
        org.junit.Assert.assertNull(obj34);
        org.junit.Assert.assertNull(obj36);
        org.junit.Assert.assertNull(obj39);
        org.junit.Assert.assertNull(obj46);
        org.junit.Assert.assertNull(obj54);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertNotNull(strSet56);
        org.junit.Assert.assertTrue("'" + long60 + "' != '" + 10L + "'", long60 == 10L);
        org.junit.Assert.assertNull(obj61);
        org.junit.Assert.assertNull(obj68);
        org.junit.Assert.assertNull(obj76);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + false + "'", boolean77 == false);
        org.junit.Assert.assertNull(obj79);
        org.junit.Assert.assertNotNull(objSet80);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + false + "'", boolean81 == false);
        org.junit.Assert.assertNull(obj84);
        org.junit.Assert.assertNotNull(objEnumeration85);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + false + "'", boolean86 == false);
        org.junit.Assert.assertTrue("'" + long90 + "' != '" + 10L + "'", long90 == 10L);
        org.junit.Assert.assertTrue("'" + boolean99 + "' != '" + false + "'", boolean99 == false);
    }

    @Test
    public void test1675() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1675");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Properties properties2 = new java.util.Properties(properties0);
        java.util.Properties properties3 = null;
        java.util.Properties properties4 = new java.util.Properties(properties3);
        java.lang.Object obj6 = properties2.put((java.lang.Object) properties4, (java.lang.Object) (short) 1);
        java.util.Enumeration<java.lang.Object> objEnumeration7 = properties4.elements();
        java.util.Properties properties8 = new java.util.Properties(properties4);
        java.util.Properties properties9 = new java.util.Properties(properties8);
        java.util.Enumeration<java.lang.Object> objEnumeration10 = properties8.elements();
        java.util.Properties properties11 = new java.util.Properties(properties8);
        java.io.OutputStream outputStream12 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties8.save(outputStream12, "");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(obj6);
        org.junit.Assert.assertNotNull(objEnumeration7);
        org.junit.Assert.assertNotNull(objEnumeration10);
    }

    @Test
    public void test1676() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1676");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setThreadedTwoPhaseCommit(true);
        atomikosProperties0.setMaxActives((int) '#');
        atomikosProperties0.setForceShutdownOnVmExit(true);
        java.lang.String str7 = atomikosProperties0.getLogBaseDir();
        java.util.Properties properties8 = atomikosProperties0.asProperties();
        java.util.Properties properties9 = null;
        java.util.Properties properties10 = new java.util.Properties(properties9);
        java.util.Properties properties11 = new java.util.Properties(properties9);
        java.util.Properties properties12 = null;
        java.util.Properties properties13 = new java.util.Properties(properties12);
        java.lang.Object obj15 = properties11.put((java.lang.Object) properties13, (java.lang.Object) (short) 1);
        boolean boolean16 = properties11.isEmpty();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties17 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties17.setDefaultJtaTimeout((long) (byte) 10);
        atomikosProperties17.setCheckpointInterval((long) (byte) 0);
        atomikosProperties17.setTransactionManagerUniqueName("");
        java.util.Properties properties24 = atomikosProperties17.asProperties();
        java.lang.Object obj25 = properties11.remove((java.lang.Object) properties24);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties26 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties26.setDefaultJtaTimeout((long) (byte) 10);
        atomikosProperties26.setCheckpointInterval((long) (byte) 0);
        atomikosProperties26.setTransactionManagerUniqueName("");
        java.lang.Object obj33 = properties24.remove((java.lang.Object) atomikosProperties26);
        boolean boolean34 = properties8.containsKey((java.lang.Object) properties24);
        java.lang.String str36 = properties8.getProperty("{com.atomikos.icatch.enable_logging=false, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=true, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNotNull(properties8);
        org.junit.Assert.assertNull(obj15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(properties24);
        org.junit.Assert.assertNull(obj25);
        org.junit.Assert.assertNull(obj33);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNull(str36);
    }

    @Test
    public void test1677() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1677");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        boolean boolean1 = atomikosProperties0.isForceShutdownOnVmExit();
        java.util.Properties properties2 = atomikosProperties0.asProperties();
        java.util.Properties properties3 = null;
        java.util.Properties properties4 = new java.util.Properties(properties3);
        java.util.Properties properties5 = new java.util.Properties(properties3);
        java.util.Properties properties6 = null;
        java.util.Properties properties7 = new java.util.Properties(properties6);
        java.lang.Object obj9 = properties5.put((java.lang.Object) properties7, (java.lang.Object) (short) 1);
        properties7.clear();
        int int11 = properties7.size();
        java.util.Properties properties12 = null;
        java.util.Properties properties13 = new java.util.Properties(properties12);
        java.util.Properties properties14 = new java.util.Properties(properties12);
        java.util.Properties properties15 = null;
        java.util.Properties properties16 = new java.util.Properties(properties15);
        java.lang.Object obj18 = properties14.put((java.lang.Object) properties16, (java.lang.Object) (short) 1);
        java.util.Properties properties19 = new java.util.Properties(properties16);
        java.util.Properties properties20 = new java.util.Properties(properties16);
        boolean boolean22 = properties7.remove((java.lang.Object) properties16, (java.lang.Object) 10.0f);
        boolean boolean23 = properties2.containsKey((java.lang.Object) 10.0f);
        java.util.Properties properties24 = new java.util.Properties(properties2);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties25 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties25.setDefaultJtaTimeout((long) (byte) 10);
        long long28 = atomikosProperties25.getDefaultJtaTimeout();
        atomikosProperties25.setTransactionManagerUniqueName("hi!");
        atomikosProperties25.setLogBaseName("tmlog");
        boolean boolean33 = atomikosProperties25.isSerialJtaTransactions();
        java.util.Properties properties34 = atomikosProperties25.asProperties();
        java.util.Properties properties35 = null;
        java.util.Properties properties36 = new java.util.Properties(properties35);
        java.util.Properties properties37 = new java.util.Properties(properties35);
        boolean boolean39 = properties37.containsValue((java.lang.Object) (short) 100);
        java.util.Properties properties40 = new java.util.Properties(properties37);
        java.lang.String str42 = properties40.getProperty("hi!");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties43 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties43.setDefaultJtaTimeout((long) (byte) 10);
        long long46 = atomikosProperties43.getDefaultJtaTimeout();
        atomikosProperties43.setTransactionManagerUniqueName("hi!");
        atomikosProperties43.setLogBaseName("tmlog");
        boolean boolean51 = atomikosProperties43.isSerialJtaTransactions();
        java.util.Properties properties52 = atomikosProperties43.asProperties();
        boolean boolean53 = properties40.equals((java.lang.Object) atomikosProperties43);
        java.lang.Object obj54 = properties2.putIfAbsent((java.lang.Object) properties34, (java.lang.Object) properties40);
        java.util.Properties properties55 = new java.util.Properties(properties2);
        java.io.OutputStream outputStream56 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties2.storeToXML(outputStream56, "{tmlog={com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=0, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.tm_unique_name=, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}, 4=true}");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertNotNull(properties2);
        org.junit.Assert.assertNull(obj9);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertNull(obj18);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + long28 + "' != '" + 10L + "'", long28 == 10L);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNotNull(properties34);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNull(str42);
        org.junit.Assert.assertTrue("'" + long46 + "' != '" + 10L + "'", long46 == 10L);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertNotNull(properties52);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertNull(obj54);
    }

    @Test
    public void test1678() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1678");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setDefaultJtaTimeout((long) (byte) 10);
        atomikosProperties0.setSerialJtaTransactions(false);
        atomikosProperties0.setService("{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.tm_unique_name=, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
        atomikosProperties0.setService("tmlog");
        atomikosProperties0.setMaxTimeout((long) 1);
        java.lang.String str11 = atomikosProperties0.getService();
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "tmlog" + "'", str11, "tmlog");
    }

    @Test
    public void test1679() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1679");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Properties properties2 = new java.util.Properties(properties0);
        java.util.Properties properties3 = null;
        java.util.Properties properties4 = new java.util.Properties(properties3);
        java.lang.Object obj6 = properties2.put((java.lang.Object) properties4, (java.lang.Object) (short) 1);
        java.util.Enumeration<java.lang.Object> objEnumeration7 = properties4.elements();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet8 = properties4.entrySet();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties9 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties9.setDefaultJtaTimeout((long) (byte) 10);
        long long12 = atomikosProperties9.getDefaultJtaTimeout();
        atomikosProperties9.setTransactionManagerUniqueName("");
        boolean boolean15 = atomikosProperties9.isEnableLogging();
        boolean boolean16 = properties4.containsKey((java.lang.Object) boolean15);
        java.io.PrintWriter printWriter17 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties4.list(printWriter17);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(obj6);
        org.junit.Assert.assertNotNull(objEnumeration7);
        org.junit.Assert.assertNotNull(objEntrySet8);
        org.junit.Assert.assertTrue("'" + long12 + "' != '" + 10L + "'", long12 == 10L);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
    }

    @Test
    public void test1680() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1680");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Properties properties2 = new java.util.Properties(properties0);
        java.util.Properties properties3 = null;
        java.util.Properties properties4 = new java.util.Properties(properties3);
        java.lang.Object obj6 = properties2.put((java.lang.Object) properties4, (java.lang.Object) (short) 1);
        properties4.clear();
        int int8 = properties4.size();
        java.util.Properties properties9 = new java.util.Properties(properties4);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties10 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        int int11 = atomikosProperties10.getMaxActives();
        long long12 = atomikosProperties10.getMaxTimeout();
        java.util.Properties properties13 = atomikosProperties10.asProperties();
        java.util.Properties properties14 = atomikosProperties10.asProperties();
        java.util.Properties properties15 = null;
        java.util.Properties properties16 = new java.util.Properties(properties15);
        java.util.Properties properties17 = new java.util.Properties(properties15);
        java.util.Properties properties18 = null;
        java.util.Properties properties19 = new java.util.Properties(properties18);
        java.lang.Object obj21 = properties17.put((java.lang.Object) properties19, (java.lang.Object) (short) 1);
        java.util.Enumeration<java.lang.Object> objEnumeration22 = properties19.elements();
        java.lang.Object obj23 = properties4.replace((java.lang.Object) atomikosProperties10, (java.lang.Object) properties19);
        java.util.Properties properties24 = atomikosProperties10.asProperties();
        long long25 = atomikosProperties10.getCheckpointInterval();
        org.junit.Assert.assertNull(obj6);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 50 + "'", int11 == 50);
        org.junit.Assert.assertTrue("'" + long12 + "' != '" + 300000L + "'", long12 == 300000L);
        org.junit.Assert.assertNotNull(properties13);
        org.junit.Assert.assertNotNull(properties14);
        org.junit.Assert.assertNull(obj21);
        org.junit.Assert.assertNotNull(objEnumeration22);
        org.junit.Assert.assertNull(obj23);
        org.junit.Assert.assertNotNull(properties24);
        org.junit.Assert.assertTrue("'" + long25 + "' != '" + 500L + "'", long25 == 500L);
    }

    @Test
    public void test1681() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1681");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        int int1 = atomikosProperties0.getMaxActives();
        java.util.Properties properties2 = atomikosProperties0.asProperties();
        java.util.Properties properties3 = null;
        java.util.Properties properties4 = new java.util.Properties(properties3);
        java.util.Properties properties5 = new java.util.Properties(properties3);
        boolean boolean7 = properties5.containsValue((java.lang.Object) (short) 100);
        java.util.Properties properties8 = null;
        java.util.Properties properties9 = new java.util.Properties(properties8);
        java.util.Properties properties10 = new java.util.Properties(properties8);
        java.util.Properties properties11 = null;
        java.util.Properties properties12 = new java.util.Properties(properties11);
        java.lang.Object obj14 = properties10.put((java.lang.Object) properties12, (java.lang.Object) (short) 1);
        java.util.Enumeration<java.lang.Object> objEnumeration15 = properties12.elements();
        java.lang.Object obj16 = properties5.remove((java.lang.Object) properties12);
        java.util.Properties properties17 = null;
        java.util.Properties properties18 = new java.util.Properties(properties17);
        java.util.Properties properties19 = new java.util.Properties(properties17);
        java.util.Properties properties20 = null;
        java.util.Properties properties21 = new java.util.Properties(properties20);
        java.lang.Object obj23 = properties19.put((java.lang.Object) properties21, (java.lang.Object) (short) 1);
        java.util.Enumeration<java.lang.Object> objEnumeration24 = properties21.elements();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet25 = properties21.entrySet();
        java.util.Set<java.lang.Object> objSet26 = properties21.keySet();
        java.util.Properties properties27 = null;
        java.util.Properties properties28 = new java.util.Properties(properties27);
        java.util.Properties properties29 = new java.util.Properties(properties27);
        java.util.Properties properties30 = null;
        java.util.Properties properties31 = new java.util.Properties(properties30);
        java.lang.Object obj33 = properties29.put((java.lang.Object) properties31, (java.lang.Object) (short) 1);
        properties31.clear();
        int int35 = properties31.size();
        java.util.Properties properties36 = new java.util.Properties(properties31);
        java.util.Properties properties37 = null;
        java.util.Properties properties38 = new java.util.Properties(properties37);
        java.util.Properties properties39 = new java.util.Properties(properties37);
        java.util.Properties properties40 = null;
        java.util.Properties properties41 = new java.util.Properties(properties40);
        java.lang.Object obj43 = properties39.put((java.lang.Object) properties41, (java.lang.Object) (short) 1);
        properties41.clear();
        java.lang.String str46 = properties41.getProperty("");
        java.util.Properties properties47 = null;
        java.util.Properties properties48 = new java.util.Properties(properties47);
        java.util.Properties properties49 = new java.util.Properties(properties47);
        java.util.Properties properties50 = null;
        java.util.Properties properties51 = new java.util.Properties(properties50);
        java.lang.Object obj53 = properties49.put((java.lang.Object) properties51, (java.lang.Object) (short) 1);
        properties41.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties49);
        java.lang.Object obj55 = properties21.put((java.lang.Object) properties31, (java.lang.Object) properties49);
        java.util.Properties properties56 = null;
        java.util.Properties properties57 = new java.util.Properties(properties56);
        java.util.Properties properties58 = new java.util.Properties(properties56);
        java.util.Properties properties59 = null;
        java.util.Properties properties60 = new java.util.Properties(properties59);
        java.lang.Object obj62 = properties58.put((java.lang.Object) properties60, (java.lang.Object) (short) 1);
        java.util.Properties properties63 = new java.util.Properties(properties60);
        java.util.Properties properties64 = new java.util.Properties(properties60);
        java.util.Set<java.lang.Object> objSet65 = properties64.keySet();
        java.lang.Object obj66 = properties5.replace((java.lang.Object) properties21, (java.lang.Object) objSet65);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties67 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        int int68 = atomikosProperties67.getMaxActives();
        long long69 = atomikosProperties67.getMaxTimeout();
        java.util.Properties properties70 = atomikosProperties67.asProperties();
        atomikosProperties67.setService("hi!");
        boolean boolean73 = properties2.remove((java.lang.Object) properties5, (java.lang.Object) "hi!");
        java.util.Properties properties74 = new java.util.Properties(properties2);
        int int75 = properties2.size();
        java.lang.String str77 = properties2.getProperty("{tmlog={com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=0, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.tm_unique_name=, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}, 4=true}");
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 50 + "'", int1 == 50);
        org.junit.Assert.assertNotNull(properties2);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNull(obj14);
        org.junit.Assert.assertNotNull(objEnumeration15);
        org.junit.Assert.assertNull(obj16);
        org.junit.Assert.assertNull(obj23);
        org.junit.Assert.assertNotNull(objEnumeration24);
        org.junit.Assert.assertNotNull(objEntrySet25);
        org.junit.Assert.assertNotNull(objSet26);
        org.junit.Assert.assertNull(obj33);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 0 + "'", int35 == 0);
        org.junit.Assert.assertNull(obj43);
        org.junit.Assert.assertNull(str46);
        org.junit.Assert.assertNull(obj53);
        org.junit.Assert.assertNull(obj55);
        org.junit.Assert.assertNull(obj62);
        org.junit.Assert.assertNotNull(objSet65);
        org.junit.Assert.assertNull(obj66);
        org.junit.Assert.assertTrue("'" + int68 + "' != '" + 50 + "'", int68 == 50);
        org.junit.Assert.assertTrue("'" + long69 + "' != '" + 300000L + "'", long69 == 300000L);
        org.junit.Assert.assertNotNull(properties70);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertTrue("'" + int75 + "' != '" + 9 + "'", int75 == 9);
        org.junit.Assert.assertNull(str77);
    }

    @Test
    public void test1682() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1682");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setDefaultJtaTimeout((long) (byte) 10);
        long long3 = atomikosProperties0.getDefaultJtaTimeout();
        atomikosProperties0.setTransactionManagerUniqueName("");
        boolean boolean6 = atomikosProperties0.isEnableLogging();
        boolean boolean7 = atomikosProperties0.isEnableLogging();
        org.junit.Assert.assertTrue("'" + long3 + "' != '" + 10L + "'", long3 == 10L);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
    }

    @Test
    public void test1683() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1683");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setThreadedTwoPhaseCommit(true);
        atomikosProperties0.setMaxActives((int) '#');
        atomikosProperties0.setEnableLogging(true);
        int int7 = atomikosProperties0.getMaxActives();
        boolean boolean8 = atomikosProperties0.isEnableLogging();
        java.util.Properties properties9 = atomikosProperties0.asProperties();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties10 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties10.setDefaultJtaTimeout((long) (byte) 10);
        atomikosProperties10.setCheckpointInterval((long) (byte) 0);
        atomikosProperties10.setTransactionManagerUniqueName("");
        java.util.Properties properties17 = atomikosProperties10.asProperties();
        java.lang.String str18 = atomikosProperties10.getLogBaseName();
        java.util.Properties properties19 = atomikosProperties10.asProperties();
        java.util.Enumeration<java.lang.Object> objEnumeration20 = properties19.keys();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties22 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties22.setDefaultJtaTimeout((long) (byte) 10);
        long long25 = atomikosProperties22.getDefaultJtaTimeout();
        atomikosProperties22.setTransactionManagerUniqueName("");
        atomikosProperties22.setCheckpointInterval(100L);
        boolean boolean30 = properties19.remove((java.lang.Object) "hi!", (java.lang.Object) atomikosProperties22);
        java.util.Collection<java.lang.Object> objCollection31 = properties19.values();
        java.util.Properties properties32 = new java.util.Properties();
        java.util.Enumeration<?> wildcardEnumeration33 = properties32.propertyNames();
        java.util.Properties properties35 = null;
        java.util.Properties properties36 = new java.util.Properties(properties35);
        java.util.Properties properties37 = new java.util.Properties(properties35);
        java.util.Properties properties38 = null;
        java.util.Properties properties39 = new java.util.Properties(properties38);
        java.lang.Object obj41 = properties37.put((java.lang.Object) properties39, (java.lang.Object) (short) 1);
        java.util.Properties properties42 = new java.util.Properties(properties39);
        java.util.Enumeration<java.lang.Object> objEnumeration43 = properties42.elements();
        java.lang.Object obj44 = properties32.put((java.lang.Object) (-1.0f), (java.lang.Object) objEnumeration43);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties45 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties45.setDefaultJtaTimeout((long) (byte) 10);
        atomikosProperties45.setCheckpointInterval((long) (byte) 0);
        atomikosProperties45.setTransactionManagerUniqueName("");
        boolean boolean52 = atomikosProperties45.isEnableLogging();
        java.util.Properties properties53 = atomikosProperties45.asProperties();
        java.util.Enumeration<java.lang.Object> objEnumeration54 = properties53.keys();
        boolean boolean55 = properties32.contains((java.lang.Object) objEnumeration54);
        java.util.Properties properties56 = new java.util.Properties(properties32);
        boolean boolean57 = properties9.remove((java.lang.Object) objCollection31, (java.lang.Object) properties32);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties58 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties58.setDefaultJtaTimeout((long) (byte) 10);
        atomikosProperties58.setCheckpointInterval((long) (byte) 0);
        atomikosProperties58.setTransactionManagerUniqueName("");
        boolean boolean65 = atomikosProperties58.isEnableLogging();
        atomikosProperties58.setSerialJtaTransactions(false);
        atomikosProperties58.setLogBaseDir("");
        java.lang.String str70 = atomikosProperties58.getTransactionManagerUniqueName();
        atomikosProperties58.setEnableLogging(true);
        java.util.Properties properties73 = atomikosProperties58.asProperties();
        boolean boolean74 = properties32.containsValue((java.lang.Object) properties73);
        java.io.InputStream inputStream75 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties32.load(inputStream75);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 35 + "'", int7 == 35);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(properties9);
        org.junit.Assert.assertNotNull(properties17);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "tmlog" + "'", str18, "tmlog");
        org.junit.Assert.assertNotNull(properties19);
        org.junit.Assert.assertNotNull(objEnumeration20);
        org.junit.Assert.assertTrue("'" + long25 + "' != '" + 10L + "'", long25 == 10L);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(objCollection31);
        org.junit.Assert.assertNotNull(wildcardEnumeration33);
        org.junit.Assert.assertNull(obj41);
        org.junit.Assert.assertNotNull(objEnumeration43);
        org.junit.Assert.assertNull(obj44);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertNotNull(properties53);
        org.junit.Assert.assertNotNull(objEnumeration54);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65 == true);
        org.junit.Assert.assertEquals("'" + str70 + "' != '" + "" + "'", str70, "");
        org.junit.Assert.assertNotNull(properties73);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
    }

    @Test
    public void test1684() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1684");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Properties properties2 = new java.util.Properties(properties0);
        boolean boolean4 = properties2.containsValue((java.lang.Object) (short) 100);
        java.util.Properties properties5 = new java.util.Properties(properties2);
        java.util.Enumeration<java.lang.Object> objEnumeration6 = properties5.keys();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties7 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties7.setDefaultJtaTimeout((long) (byte) 10);
        atomikosProperties7.setCheckpointInterval((long) (byte) 0);
        atomikosProperties7.setEnableLogging(true);
        long long14 = atomikosProperties7.getDefaultJtaTimeout();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties15 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties15.setThreadedTwoPhaseCommit(true);
        atomikosProperties15.setMaxActives((int) (byte) 0);
        atomikosProperties15.setDefaultJtaTimeout((long) 10);
        atomikosProperties15.setDefaultJtaTimeout((long) (short) 10);
        boolean boolean24 = atomikosProperties15.isSerialJtaTransactions();
        boolean boolean25 = properties5.remove((java.lang.Object) atomikosProperties7, (java.lang.Object) atomikosProperties15);
        java.util.Collection<java.lang.Object> objCollection26 = properties5.values();
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(objEnumeration6);
        org.junit.Assert.assertTrue("'" + long14 + "' != '" + 10L + "'", long14 == 10L);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(objCollection26);
    }

    @Test
    public void test1685() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1685");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setDefaultJtaTimeout((long) (byte) 10);
        long long3 = atomikosProperties0.getDefaultJtaTimeout();
        atomikosProperties0.setTransactionManagerUniqueName("");
        boolean boolean6 = atomikosProperties0.isEnableLogging();
        java.lang.String str7 = atomikosProperties0.getTransactionManagerUniqueName();
        atomikosProperties0.setSerialJtaTransactions(false);
        java.util.Properties properties10 = atomikosProperties0.asProperties();
        atomikosProperties0.setMaxTimeout((long) '4');
        org.junit.Assert.assertTrue("'" + long3 + "' != '" + 10L + "'", long3 == 10L);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertNotNull(properties10);
    }

    @Test
    public void test1686() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1686");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setThreadedTwoPhaseCommit(true);
        atomikosProperties0.setMaxActives((int) '#');
        atomikosProperties0.setForceShutdownOnVmExit(true);
        java.lang.String str7 = atomikosProperties0.getLogBaseDir();
        java.util.Properties properties8 = atomikosProperties0.asProperties();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties9 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties9.setThreadedTwoPhaseCommit(true);
        atomikosProperties9.setMaxActives((int) '#');
        atomikosProperties9.setEnableLogging(true);
        boolean boolean16 = properties8.containsKey((java.lang.Object) true);
        java.lang.Object obj19 = properties8.setProperty("tmlog", "");
        java.lang.String str21 = properties8.getProperty("{=}");
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNotNull(properties8);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNull(obj19);
        org.junit.Assert.assertNull(str21);
    }

    @Test
    public void test1687() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1687");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Properties properties2 = new java.util.Properties(properties0);
        java.util.Properties properties3 = null;
        java.util.Properties properties4 = new java.util.Properties(properties3);
        java.lang.Object obj6 = properties2.put((java.lang.Object) properties4, (java.lang.Object) (short) 1);
        properties4.clear();
        int int8 = properties4.size();
        java.util.Properties properties9 = new java.util.Properties(properties4);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties10 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        int int11 = atomikosProperties10.getMaxActives();
        long long12 = atomikosProperties10.getMaxTimeout();
        java.util.Properties properties13 = atomikosProperties10.asProperties();
        java.util.Properties properties14 = atomikosProperties10.asProperties();
        java.util.Properties properties15 = null;
        java.util.Properties properties16 = new java.util.Properties(properties15);
        java.util.Properties properties17 = new java.util.Properties(properties15);
        java.util.Properties properties18 = null;
        java.util.Properties properties19 = new java.util.Properties(properties18);
        java.lang.Object obj21 = properties17.put((java.lang.Object) properties19, (java.lang.Object) (short) 1);
        java.util.Enumeration<java.lang.Object> objEnumeration22 = properties19.elements();
        java.lang.Object obj23 = properties4.replace((java.lang.Object) atomikosProperties10, (java.lang.Object) properties19);
        atomikosProperties10.setLogBaseName("");
        java.lang.String str26 = atomikosProperties10.getTransactionManagerUniqueName();
        atomikosProperties10.setMaxActives(1);
        java.util.Properties properties29 = atomikosProperties10.asProperties();
        java.lang.Object obj32 = properties29.setProperty("tmlog", "tmlog");
        java.util.Collection<java.lang.Object> objCollection33 = properties29.values();
        java.io.Reader reader34 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties29.load(reader34);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(obj6);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 50 + "'", int11 == 50);
        org.junit.Assert.assertTrue("'" + long12 + "' != '" + 300000L + "'", long12 == 300000L);
        org.junit.Assert.assertNotNull(properties13);
        org.junit.Assert.assertNotNull(properties14);
        org.junit.Assert.assertNull(obj21);
        org.junit.Assert.assertNotNull(objEnumeration22);
        org.junit.Assert.assertNull(obj23);
        org.junit.Assert.assertNull(str26);
        org.junit.Assert.assertNotNull(properties29);
        org.junit.Assert.assertNull(obj32);
        org.junit.Assert.assertNotNull(objCollection33);
    }

    @Test
    public void test1688() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1688");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Properties properties2 = new java.util.Properties(properties0);
        java.util.Properties properties3 = null;
        java.util.Properties properties4 = new java.util.Properties(properties3);
        java.lang.Object obj6 = properties2.put((java.lang.Object) properties4, (java.lang.Object) (short) 1);
        properties4.clear();
        java.lang.String str9 = properties4.getProperty("");
        java.util.Properties properties10 = null;
        java.util.Properties properties11 = new java.util.Properties(properties10);
        java.util.Properties properties12 = new java.util.Properties(properties10);
        java.util.Properties properties13 = null;
        java.util.Properties properties14 = new java.util.Properties(properties13);
        java.lang.Object obj16 = properties12.put((java.lang.Object) properties14, (java.lang.Object) (short) 1);
        properties4.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties12);
        java.util.Properties properties18 = null;
        java.util.Properties properties19 = new java.util.Properties(properties18);
        java.util.Properties properties20 = new java.util.Properties(properties18);
        boolean boolean22 = properties20.containsValue((java.lang.Object) (short) 100);
        java.util.Properties properties23 = null;
        java.util.Properties properties24 = new java.util.Properties(properties23);
        java.util.Properties properties25 = new java.util.Properties(properties23);
        java.util.Properties properties26 = null;
        java.util.Properties properties27 = new java.util.Properties(properties26);
        java.lang.Object obj29 = properties25.put((java.lang.Object) properties27, (java.lang.Object) (short) 1);
        java.util.Enumeration<java.lang.Object> objEnumeration30 = properties27.elements();
        java.lang.Object obj31 = properties20.remove((java.lang.Object) properties27);
        java.lang.Object obj34 = properties27.setProperty("", "");
        java.util.Properties properties35 = null;
        java.util.Properties properties36 = new java.util.Properties(properties35);
        java.util.Properties properties37 = new java.util.Properties(properties35);
        java.util.Properties properties38 = null;
        java.util.Properties properties39 = new java.util.Properties(properties38);
        java.lang.Object obj41 = properties37.put((java.lang.Object) properties39, (java.lang.Object) (short) 1);
        java.util.Properties properties43 = null;
        java.util.Properties properties44 = new java.util.Properties(properties43);
        java.util.Properties properties45 = new java.util.Properties(properties43);
        java.util.Properties properties46 = null;
        java.util.Properties properties47 = new java.util.Properties(properties46);
        java.lang.Object obj49 = properties45.put((java.lang.Object) properties47, (java.lang.Object) (short) 1);
        boolean boolean50 = properties39.remove((java.lang.Object) false, (java.lang.Object) (short) 1);
        java.util.Properties properties51 = new java.util.Properties(properties39);
        properties27.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties51);
        java.lang.Object obj55 = properties51.setProperty("hi!", "hi!");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties56 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties56.setDefaultJtaTimeout((long) (byte) 10);
        atomikosProperties56.setCheckpointInterval((long) (byte) 0);
        atomikosProperties56.setTransactionManagerUniqueName("");
        java.util.Properties properties63 = atomikosProperties56.asProperties();
        java.lang.String str64 = atomikosProperties56.getTransactionManagerUniqueName();
        atomikosProperties56.setDefaultJtaTimeout((long) (-1));
        java.lang.Object obj67 = properties12.replace((java.lang.Object) "hi!", (java.lang.Object) atomikosProperties56);
        java.util.Properties properties68 = atomikosProperties56.asProperties();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties69 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties69.setDefaultJtaTimeout((long) (byte) 10);
        atomikosProperties69.setCheckpointInterval((long) (byte) 0);
        atomikosProperties69.setTransactionManagerUniqueName("");
        boolean boolean76 = atomikosProperties69.isEnableLogging();
        atomikosProperties69.setLogBaseDir("hi!");
        atomikosProperties69.setMaxTimeout((long) 50);
        atomikosProperties69.setLogBaseDir("");
        boolean boolean83 = properties68.contains((java.lang.Object) atomikosProperties69);
        int int84 = atomikosProperties69.getMaxActives();
        org.junit.Assert.assertNull(obj6);
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertNull(obj16);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNull(obj29);
        org.junit.Assert.assertNotNull(objEnumeration30);
        org.junit.Assert.assertNull(obj31);
        org.junit.Assert.assertNull(obj34);
        org.junit.Assert.assertNull(obj41);
        org.junit.Assert.assertNull(obj49);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertNull(obj55);
        org.junit.Assert.assertNotNull(properties63);
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "" + "'", str64, "");
        org.junit.Assert.assertNull(obj67);
        org.junit.Assert.assertNotNull(properties68);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + true + "'", boolean76 == true);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + false + "'", boolean83 == false);
        org.junit.Assert.assertTrue("'" + int84 + "' != '" + 50 + "'", int84 == 50);
    }

    @Test
    public void test1689() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1689");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setThreadedTwoPhaseCommit(true);
        atomikosProperties0.setMaxActives((int) '#');
        atomikosProperties0.setEnableLogging(true);
        int int7 = atomikosProperties0.getMaxActives();
        boolean boolean8 = atomikosProperties0.isEnableLogging();
        java.util.Properties properties9 = atomikosProperties0.asProperties();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties10 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties10.setDefaultJtaTimeout((long) (byte) 10);
        atomikosProperties10.setCheckpointInterval((long) (byte) 0);
        atomikosProperties10.setTransactionManagerUniqueName("");
        java.util.Properties properties17 = atomikosProperties10.asProperties();
        java.lang.String str18 = atomikosProperties10.getLogBaseName();
        java.util.Properties properties19 = atomikosProperties10.asProperties();
        java.util.Enumeration<java.lang.Object> objEnumeration20 = properties19.keys();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties22 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties22.setDefaultJtaTimeout((long) (byte) 10);
        long long25 = atomikosProperties22.getDefaultJtaTimeout();
        atomikosProperties22.setTransactionManagerUniqueName("");
        atomikosProperties22.setCheckpointInterval(100L);
        boolean boolean30 = properties19.remove((java.lang.Object) "hi!", (java.lang.Object) atomikosProperties22);
        java.util.Collection<java.lang.Object> objCollection31 = properties19.values();
        java.util.Properties properties32 = new java.util.Properties();
        java.util.Enumeration<?> wildcardEnumeration33 = properties32.propertyNames();
        java.util.Properties properties35 = null;
        java.util.Properties properties36 = new java.util.Properties(properties35);
        java.util.Properties properties37 = new java.util.Properties(properties35);
        java.util.Properties properties38 = null;
        java.util.Properties properties39 = new java.util.Properties(properties38);
        java.lang.Object obj41 = properties37.put((java.lang.Object) properties39, (java.lang.Object) (short) 1);
        java.util.Properties properties42 = new java.util.Properties(properties39);
        java.util.Enumeration<java.lang.Object> objEnumeration43 = properties42.elements();
        java.lang.Object obj44 = properties32.put((java.lang.Object) (-1.0f), (java.lang.Object) objEnumeration43);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties45 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties45.setDefaultJtaTimeout((long) (byte) 10);
        atomikosProperties45.setCheckpointInterval((long) (byte) 0);
        atomikosProperties45.setTransactionManagerUniqueName("");
        boolean boolean52 = atomikosProperties45.isEnableLogging();
        java.util.Properties properties53 = atomikosProperties45.asProperties();
        java.util.Enumeration<java.lang.Object> objEnumeration54 = properties53.keys();
        boolean boolean55 = properties32.contains((java.lang.Object) objEnumeration54);
        java.util.Properties properties56 = new java.util.Properties(properties32);
        boolean boolean57 = properties9.remove((java.lang.Object) objCollection31, (java.lang.Object) properties32);
        java.lang.Object obj58 = properties32.clone();
        java.lang.String str61 = properties32.getProperty("{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.log_base_dir={}, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}", "");
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 35 + "'", int7 == 35);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(properties9);
        org.junit.Assert.assertNotNull(properties17);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "tmlog" + "'", str18, "tmlog");
        org.junit.Assert.assertNotNull(properties19);
        org.junit.Assert.assertNotNull(objEnumeration20);
        org.junit.Assert.assertTrue("'" + long25 + "' != '" + 10L + "'", long25 == 10L);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(objCollection31);
        org.junit.Assert.assertNotNull(wildcardEnumeration33);
        org.junit.Assert.assertNull(obj41);
        org.junit.Assert.assertNotNull(objEnumeration43);
        org.junit.Assert.assertNull(obj44);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertNotNull(properties53);
        org.junit.Assert.assertNotNull(objEnumeration54);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertNotNull(obj58);
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "" + "'", str61, "");
    }

    @Test
    public void test1690() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1690");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setDefaultJtaTimeout((long) (byte) 10);
        atomikosProperties0.setCheckpointInterval((long) (byte) 0);
        atomikosProperties0.setEnableLogging(true);
        java.lang.String str7 = atomikosProperties0.getLogBaseName();
        atomikosProperties0.setCheckpointInterval((long) ' ');
        atomikosProperties0.setService("{}");
        java.lang.String str12 = atomikosProperties0.getLogBaseName();
        boolean boolean13 = atomikosProperties0.isThreadedTwoPhaseCommit();
        atomikosProperties0.setMaxTimeout((long) 'a');
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "tmlog" + "'", str7, "tmlog");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "tmlog" + "'", str12, "tmlog");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
    }

    @Test
    public void test1691() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1691");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setDefaultJtaTimeout((long) (byte) 10);
        atomikosProperties0.setCheckpointInterval((long) (byte) 0);
        atomikosProperties0.setTransactionManagerUniqueName("");
        boolean boolean7 = atomikosProperties0.isEnableLogging();
        java.util.Properties properties8 = atomikosProperties0.asProperties();
        java.util.Properties properties9 = new java.util.Properties(properties8);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties10 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties10.setDefaultJtaTimeout((long) (byte) 10);
        atomikosProperties10.setSerialJtaTransactions(false);
        atomikosProperties10.setMaxTimeout((long) (short) -1);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties17 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties17.setDefaultJtaTimeout((long) (byte) 10);
        atomikosProperties17.setCheckpointInterval((long) (byte) 0);
        atomikosProperties17.setTransactionManagerUniqueName("");
        java.util.Properties properties24 = atomikosProperties17.asProperties();
        java.lang.String str25 = atomikosProperties17.getLogBaseName();
        java.util.Properties properties26 = atomikosProperties17.asProperties();
        java.lang.Object obj27 = properties8.getOrDefault((java.lang.Object) (short) -1, (java.lang.Object) atomikosProperties17);
        java.io.OutputStream outputStream28 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties8.save(outputStream28, "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=0, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.tm_unique_name=, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(properties8);
        org.junit.Assert.assertNotNull(properties24);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "tmlog" + "'", str25, "tmlog");
        org.junit.Assert.assertNotNull(properties26);
        org.junit.Assert.assertNotNull(obj27);
    }

    @Test
    public void test1692() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1692");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Properties properties2 = new java.util.Properties(properties0);
        java.util.Properties properties3 = null;
        java.util.Properties properties4 = new java.util.Properties(properties3);
        java.lang.Object obj6 = properties2.put((java.lang.Object) properties4, (java.lang.Object) (short) 1);
        java.util.Properties properties8 = null;
        java.util.Properties properties9 = new java.util.Properties(properties8);
        java.util.Properties properties10 = new java.util.Properties(properties8);
        java.util.Properties properties11 = null;
        java.util.Properties properties12 = new java.util.Properties(properties11);
        java.lang.Object obj14 = properties10.put((java.lang.Object) properties12, (java.lang.Object) (short) 1);
        boolean boolean15 = properties4.remove((java.lang.Object) false, (java.lang.Object) (short) 1);
        java.util.Set<java.lang.String> strSet16 = properties4.stringPropertyNames();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties17 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties17.setDefaultJtaTimeout((long) (byte) 10);
        long long20 = atomikosProperties17.getDefaultJtaTimeout();
        java.lang.Object obj21 = properties4.get((java.lang.Object) atomikosProperties17);
        atomikosProperties17.setCheckpointInterval((long) (short) 100);
        java.util.Properties properties24 = atomikosProperties17.asProperties();
        java.lang.String str25 = atomikosProperties17.getLogBaseName();
        boolean boolean26 = atomikosProperties17.isSerialJtaTransactions();
        atomikosProperties17.setForceShutdownOnVmExit(false);
        boolean boolean29 = atomikosProperties17.isSerialJtaTransactions();
        java.lang.String str30 = atomikosProperties17.getService();
        org.junit.Assert.assertNull(obj6);
        org.junit.Assert.assertNull(obj14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(strSet16);
        org.junit.Assert.assertTrue("'" + long20 + "' != '" + 10L + "'", long20 == 10L);
        org.junit.Assert.assertNull(obj21);
        org.junit.Assert.assertNotNull(properties24);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "tmlog" + "'", str25, "tmlog");
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNull(str30);
    }

    @Test
    public void test1693() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1693");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Properties properties2 = new java.util.Properties(properties0);
        java.util.Properties properties3 = null;
        java.util.Properties properties4 = new java.util.Properties(properties3);
        java.lang.Object obj6 = properties2.put((java.lang.Object) properties4, (java.lang.Object) (short) 1);
        java.util.Properties properties8 = null;
        java.util.Properties properties9 = new java.util.Properties(properties8);
        java.util.Properties properties10 = new java.util.Properties(properties8);
        java.util.Properties properties11 = null;
        java.util.Properties properties12 = new java.util.Properties(properties11);
        java.lang.Object obj14 = properties10.put((java.lang.Object) properties12, (java.lang.Object) (short) 1);
        boolean boolean15 = properties4.remove((java.lang.Object) false, (java.lang.Object) (short) 1);
        java.util.Set<java.lang.String> strSet16 = properties4.stringPropertyNames();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties17 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties17.setDefaultJtaTimeout((long) (byte) 10);
        long long20 = atomikosProperties17.getDefaultJtaTimeout();
        java.lang.Object obj21 = properties4.get((java.lang.Object) atomikosProperties17);
        java.util.Properties properties22 = null;
        java.util.Properties properties23 = new java.util.Properties(properties22);
        java.util.Properties properties24 = new java.util.Properties(properties22);
        java.util.Properties properties25 = null;
        java.util.Properties properties26 = new java.util.Properties(properties25);
        java.lang.Object obj28 = properties24.put((java.lang.Object) properties26, (java.lang.Object) (short) 1);
        java.util.Properties properties30 = null;
        java.util.Properties properties31 = new java.util.Properties(properties30);
        java.util.Properties properties32 = new java.util.Properties(properties30);
        java.util.Properties properties33 = null;
        java.util.Properties properties34 = new java.util.Properties(properties33);
        java.lang.Object obj36 = properties32.put((java.lang.Object) properties34, (java.lang.Object) (short) 1);
        boolean boolean37 = properties26.remove((java.lang.Object) false, (java.lang.Object) (short) 1);
        java.lang.Object obj39 = properties26.remove((java.lang.Object) '#');
        java.util.Set<java.lang.Object> objSet40 = properties26.keySet();
        boolean boolean41 = properties4.containsKey((java.lang.Object) properties26);
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet42 = properties4.entrySet();
        java.util.Properties properties43 = null;
        java.util.Properties properties44 = new java.util.Properties(properties43);
        java.util.Properties properties45 = new java.util.Properties(properties43);
        java.util.Properties properties46 = null;
        java.util.Properties properties47 = new java.util.Properties(properties46);
        java.lang.Object obj49 = properties45.put((java.lang.Object) properties47, (java.lang.Object) (short) 1);
        boolean boolean50 = properties45.isEmpty();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties51 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties51.setDefaultJtaTimeout((long) (byte) 10);
        atomikosProperties51.setCheckpointInterval((long) (byte) 0);
        atomikosProperties51.setTransactionManagerUniqueName("");
        java.util.Properties properties58 = atomikosProperties51.asProperties();
        java.lang.Object obj59 = properties45.remove((java.lang.Object) properties58);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties60 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties60.setDefaultJtaTimeout((long) (byte) 10);
        atomikosProperties60.setCheckpointInterval((long) (byte) 0);
        atomikosProperties60.setTransactionManagerUniqueName("");
        java.util.Properties properties67 = atomikosProperties60.asProperties();
        java.lang.String str68 = atomikosProperties60.getTransactionManagerUniqueName();
        atomikosProperties60.setDefaultJtaTimeout((long) (-1));
        java.lang.String str71 = atomikosProperties60.getService();
        java.util.Properties properties72 = null;
        java.util.Properties properties73 = new java.util.Properties(properties72);
        java.util.Properties properties74 = new java.util.Properties(properties72);
        boolean boolean76 = properties74.containsValue((java.lang.Object) (short) 100);
        java.util.Properties properties77 = null;
        java.util.Properties properties78 = new java.util.Properties(properties77);
        java.util.Properties properties79 = new java.util.Properties(properties77);
        java.util.Properties properties80 = null;
        java.util.Properties properties81 = new java.util.Properties(properties80);
        java.lang.Object obj83 = properties79.put((java.lang.Object) properties81, (java.lang.Object) (short) 1);
        java.util.Enumeration<java.lang.Object> objEnumeration84 = properties81.elements();
        java.lang.Object obj85 = properties74.remove((java.lang.Object) properties81);
        boolean boolean86 = properties81.isEmpty();
        boolean boolean87 = properties4.replace((java.lang.Object) properties58, (java.lang.Object) atomikosProperties60, (java.lang.Object) boolean86);
        atomikosProperties60.setMaxTimeout((long) 35);
        atomikosProperties60.setEnableLogging(true);
        int int92 = atomikosProperties60.getMaxActives();
        atomikosProperties60.setEnableLogging(false);
        atomikosProperties60.setCheckpointInterval(0L);
        org.junit.Assert.assertNull(obj6);
        org.junit.Assert.assertNull(obj14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(strSet16);
        org.junit.Assert.assertTrue("'" + long20 + "' != '" + 10L + "'", long20 == 10L);
        org.junit.Assert.assertNull(obj21);
        org.junit.Assert.assertNull(obj28);
        org.junit.Assert.assertNull(obj36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNull(obj39);
        org.junit.Assert.assertNotNull(objSet40);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(objEntrySet42);
        org.junit.Assert.assertNull(obj49);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertNotNull(properties58);
        org.junit.Assert.assertNull(obj59);
        org.junit.Assert.assertNotNull(properties67);
        org.junit.Assert.assertEquals("'" + str68 + "' != '" + "" + "'", str68, "");
        org.junit.Assert.assertNull(str71);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
        org.junit.Assert.assertNull(obj83);
        org.junit.Assert.assertNotNull(objEnumeration84);
        org.junit.Assert.assertNull(obj85);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + true + "'", boolean86 == true);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + false + "'", boolean87 == false);
        org.junit.Assert.assertTrue("'" + int92 + "' != '" + 50 + "'", int92 == 50);
    }

    @Test
    public void test1694() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1694");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setThreadedTwoPhaseCommit(true);
        atomikosProperties0.setMaxActives((int) '#');
        atomikosProperties0.setForceShutdownOnVmExit(true);
        java.lang.String str7 = atomikosProperties0.getLogBaseDir();
        java.util.Properties properties8 = atomikosProperties0.asProperties();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties9 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        boolean boolean10 = atomikosProperties9.isSerialJtaTransactions();
        boolean boolean11 = properties8.equals((java.lang.Object) atomikosProperties9);
        long long12 = atomikosProperties9.getMaxTimeout();
        atomikosProperties9.setThreadedTwoPhaseCommit(true);
        boolean boolean15 = atomikosProperties9.isThreadedTwoPhaseCommit();
        java.util.Properties properties16 = atomikosProperties9.asProperties();
        java.lang.Object obj17 = null;
        java.lang.Object obj18 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj19 = properties16.put(obj17, obj18);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNotNull(properties8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + long12 + "' != '" + 300000L + "'", long12 == 300000L);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(properties16);
    }

    @Test
    public void test1695() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1695");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Properties properties2 = new java.util.Properties(properties0);
        java.util.Properties properties3 = null;
        java.util.Properties properties4 = new java.util.Properties(properties3);
        java.lang.Object obj6 = properties2.put((java.lang.Object) properties4, (java.lang.Object) (short) 1);
        properties4.clear();
        java.lang.String str9 = properties4.getProperty("");
        java.util.Properties properties10 = new java.util.Properties(properties4);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties11 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties11.setDefaultJtaTimeout((long) (byte) 10);
        atomikosProperties11.setCheckpointInterval((long) (byte) 0);
        atomikosProperties11.setTransactionManagerUniqueName("");
        java.util.Properties properties18 = atomikosProperties11.asProperties();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties19 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties19.setThreadedTwoPhaseCommit(true);
        atomikosProperties19.setMaxActives((int) '#');
        atomikosProperties19.setForceShutdownOnVmExit(true);
        java.lang.String str26 = atomikosProperties19.getLogBaseDir();
        java.lang.Object obj27 = properties18.remove((java.lang.Object) atomikosProperties19);
        java.util.Collection<java.lang.Object> objCollection28 = properties18.values();
        java.util.Properties properties29 = null;
        java.util.Properties properties30 = new java.util.Properties(properties29);
        java.util.Properties properties31 = new java.util.Properties(properties29);
        java.util.Properties properties32 = null;
        java.util.Properties properties33 = new java.util.Properties(properties32);
        java.lang.Object obj35 = properties31.put((java.lang.Object) properties33, (java.lang.Object) (short) 1);
        java.util.Properties properties36 = new java.util.Properties(properties33);
        int int37 = properties33.size();
        java.lang.Object obj39 = properties33.get((java.lang.Object) (short) 100);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties40 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        int int41 = atomikosProperties40.getMaxActives();
        long long42 = atomikosProperties40.getMaxTimeout();
        java.util.Properties properties43 = atomikosProperties40.asProperties();
        java.util.Properties properties44 = null;
        java.util.Properties properties45 = new java.util.Properties(properties44);
        java.util.Properties properties46 = new java.util.Properties(properties44);
        java.util.Properties properties47 = null;
        java.util.Properties properties48 = new java.util.Properties(properties47);
        java.lang.Object obj50 = properties46.put((java.lang.Object) properties48, (java.lang.Object) (short) 1);
        java.util.Properties properties51 = new java.util.Properties(properties48);
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet52 = properties48.entrySet();
        java.lang.Object obj53 = properties43.remove((java.lang.Object) properties48);
        java.util.Enumeration<?> wildcardEnumeration54 = properties43.propertyNames();
        java.util.Properties properties55 = new java.util.Properties(properties43);
        boolean boolean56 = properties10.replace((java.lang.Object) objCollection28, (java.lang.Object) properties33, (java.lang.Object) properties55);
        java.util.Properties properties57 = new java.util.Properties(properties55);
        java.lang.Object obj60 = properties55.setProperty("{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=0, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog, {}={}}", "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=0, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog, {}={}}");
        java.lang.Object obj63 = properties55.setProperty("", "");
        java.util.Set<java.lang.String> strSet64 = properties55.stringPropertyNames();
        java.lang.String str67 = properties55.getProperty("{=}", "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.max_actives=0, com.atomikos.icatch.log_base_name=tmlog}");
        org.junit.Assert.assertNull(obj6);
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertNotNull(properties18);
        org.junit.Assert.assertNull(str26);
        org.junit.Assert.assertNull(obj27);
        org.junit.Assert.assertNotNull(objCollection28);
        org.junit.Assert.assertNull(obj35);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 0 + "'", int37 == 0);
        org.junit.Assert.assertNull(obj39);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 50 + "'", int41 == 50);
        org.junit.Assert.assertTrue("'" + long42 + "' != '" + 300000L + "'", long42 == 300000L);
        org.junit.Assert.assertNotNull(properties43);
        org.junit.Assert.assertNull(obj50);
        org.junit.Assert.assertNotNull(objEntrySet52);
        org.junit.Assert.assertNull(obj53);
        org.junit.Assert.assertNotNull(wildcardEnumeration54);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertNull(obj60);
        org.junit.Assert.assertNull(obj63);
        org.junit.Assert.assertNotNull(strSet64);
        org.junit.Assert.assertEquals("'" + str67 + "' != '" + "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.max_actives=0, com.atomikos.icatch.log_base_name=tmlog}" + "'", str67, "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.max_actives=0, com.atomikos.icatch.log_base_name=tmlog}");
    }

    @Test
    public void test1696() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1696");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setDefaultJtaTimeout((long) (byte) 10);
        atomikosProperties0.setCheckpointInterval((long) (byte) 0);
        atomikosProperties0.setTransactionManagerUniqueName("");
        java.util.Properties properties7 = atomikosProperties0.asProperties();
        java.lang.String str8 = atomikosProperties0.getTransactionManagerUniqueName();
        atomikosProperties0.setDefaultJtaTimeout((long) (-1));
        java.util.Properties properties11 = atomikosProperties0.asProperties();
        java.util.Properties properties12 = null;
        java.util.Properties properties13 = new java.util.Properties(properties12);
        java.util.Properties properties14 = new java.util.Properties(properties12);
        java.util.Properties properties15 = null;
        java.util.Properties properties16 = new java.util.Properties(properties15);
        java.lang.Object obj18 = properties14.put((java.lang.Object) properties16, (java.lang.Object) (short) 1);
        properties16.clear();
        int int20 = properties16.size();
        java.util.Properties properties21 = null;
        java.util.Properties properties22 = new java.util.Properties(properties21);
        java.util.Properties properties23 = new java.util.Properties(properties21);
        java.util.Properties properties24 = null;
        java.util.Properties properties25 = new java.util.Properties(properties24);
        java.lang.Object obj27 = properties23.put((java.lang.Object) properties25, (java.lang.Object) (short) 1);
        java.util.Properties properties28 = new java.util.Properties(properties25);
        java.util.Properties properties29 = new java.util.Properties(properties25);
        boolean boolean31 = properties16.remove((java.lang.Object) properties25, (java.lang.Object) 10.0f);
        java.util.Enumeration<java.lang.Object> objEnumeration32 = properties25.elements();
        java.util.Properties properties33 = new java.util.Properties(properties25);
        java.util.Collection<java.lang.Object> objCollection34 = properties25.values();
        java.util.Properties properties35 = null;
        java.util.Properties properties36 = new java.util.Properties(properties35);
        java.util.Properties properties37 = new java.util.Properties(properties35);
        java.util.Properties properties38 = null;
        java.util.Properties properties39 = new java.util.Properties(properties38);
        java.lang.Object obj41 = properties37.put((java.lang.Object) properties39, (java.lang.Object) (short) 1);
        properties39.clear();
        int int43 = properties39.size();
        java.util.Properties properties44 = null;
        java.util.Properties properties45 = new java.util.Properties(properties44);
        java.util.Properties properties46 = new java.util.Properties(properties44);
        java.util.Properties properties47 = null;
        java.util.Properties properties48 = new java.util.Properties(properties47);
        java.lang.Object obj50 = properties46.put((java.lang.Object) properties48, (java.lang.Object) (short) 1);
        java.util.Properties properties51 = new java.util.Properties(properties48);
        java.util.Properties properties52 = new java.util.Properties(properties48);
        boolean boolean54 = properties39.remove((java.lang.Object) properties48, (java.lang.Object) 10.0f);
        java.util.Enumeration<java.lang.Object> objEnumeration55 = properties48.elements();
        java.util.Enumeration<java.lang.Object> objEnumeration56 = properties48.elements();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties57 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties57.setThreadedTwoPhaseCommit(true);
        atomikosProperties57.setMaxActives((int) (byte) 0);
        atomikosProperties57.setEnableLogging(true);
        atomikosProperties57.setForceShutdownOnVmExit(false);
        boolean boolean66 = properties48.equals((java.lang.Object) false);
        java.util.Enumeration<java.lang.Object> objEnumeration67 = properties48.keys();
        java.lang.Object obj68 = properties11.put((java.lang.Object) properties25, (java.lang.Object) properties48);
        java.util.Collection<java.lang.Object> objCollection69 = properties25.values();
        org.junit.Assert.assertNotNull(properties7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "" + "'", str8, "");
        org.junit.Assert.assertNotNull(properties11);
        org.junit.Assert.assertNull(obj18);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 0 + "'", int20 == 0);
        org.junit.Assert.assertNull(obj27);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(objEnumeration32);
        org.junit.Assert.assertNotNull(objCollection34);
        org.junit.Assert.assertNull(obj41);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 0 + "'", int43 == 0);
        org.junit.Assert.assertNull(obj50);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertNotNull(objEnumeration55);
        org.junit.Assert.assertNotNull(objEnumeration56);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertNotNull(objEnumeration67);
        org.junit.Assert.assertNull(obj68);
        org.junit.Assert.assertNotNull(objCollection69);
    }

    @Test
    public void test1697() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1697");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setDefaultJtaTimeout((long) (byte) 10);
        atomikosProperties0.setCheckpointInterval((long) (byte) 0);
        atomikosProperties0.setTransactionManagerUniqueName("");
        java.util.Properties properties7 = atomikosProperties0.asProperties();
        java.lang.String str8 = atomikosProperties0.getTransactionManagerUniqueName();
        atomikosProperties0.setDefaultJtaTimeout((long) (-1));
        java.lang.String str11 = atomikosProperties0.getService();
        atomikosProperties0.setLogBaseDir("{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.tm_unique_name=, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
        boolean boolean14 = atomikosProperties0.isSerialJtaTransactions();
        boolean boolean15 = atomikosProperties0.isThreadedTwoPhaseCommit();
        org.junit.Assert.assertNotNull(properties7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "" + "'", str8, "");
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
    }

    @Test
    public void test1698() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1698");
        java.util.Properties properties0 = new java.util.Properties();
        java.util.Enumeration<?> wildcardEnumeration1 = properties0.propertyNames();
        java.lang.Object obj2 = properties0.clone();
        java.util.Properties properties3 = new java.util.Properties(properties0);
        java.util.Properties properties4 = new java.util.Properties(properties3);
        java.util.Properties properties5 = null;
        java.util.Properties properties6 = new java.util.Properties(properties5);
        java.util.Properties properties7 = new java.util.Properties(properties5);
        java.util.Properties properties8 = null;
        java.util.Properties properties9 = new java.util.Properties(properties8);
        java.lang.Object obj11 = properties7.put((java.lang.Object) properties9, (java.lang.Object) (short) 1);
        properties9.clear();
        int int13 = properties9.size();
        java.lang.Object obj16 = properties9.setProperty("hi!", "hi!");
        java.lang.Object obj19 = properties9.setProperty("tmlog", "tmlog");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties20 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties20.setThreadedTwoPhaseCommit(true);
        atomikosProperties20.setMaxActives((int) '#');
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties25 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties25.setDefaultJtaTimeout((long) (byte) 10);
        atomikosProperties25.setCheckpointInterval((long) (byte) 0);
        atomikosProperties25.setTransactionManagerUniqueName("");
        java.util.Properties properties32 = atomikosProperties25.asProperties();
        java.lang.String str33 = atomikosProperties25.getLogBaseName();
        atomikosProperties25.setCheckpointInterval(100L);
        atomikosProperties25.setLogBaseName("");
        atomikosProperties25.setCheckpointInterval((long) (byte) 1);
        java.lang.Object obj40 = properties9.getOrDefault((java.lang.Object) atomikosProperties20, (java.lang.Object) (byte) 1);
        java.lang.Object obj41 = properties3.remove((java.lang.Object) properties9);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties42 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties42.setThreadedTwoPhaseCommit(true);
        boolean boolean45 = atomikosProperties42.isEnableLogging();
        boolean boolean46 = atomikosProperties42.isEnableLogging();
        java.util.Properties properties47 = null;
        java.util.Properties properties48 = new java.util.Properties(properties47);
        java.util.Properties properties49 = new java.util.Properties(properties47);
        java.util.Properties properties50 = null;
        java.util.Properties properties51 = new java.util.Properties(properties50);
        java.lang.Object obj53 = properties49.put((java.lang.Object) properties51, (java.lang.Object) (short) 1);
        boolean boolean54 = properties49.isEmpty();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties55 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties55.setDefaultJtaTimeout((long) (byte) 10);
        atomikosProperties55.setCheckpointInterval((long) (byte) 0);
        atomikosProperties55.setTransactionManagerUniqueName("");
        java.util.Properties properties62 = atomikosProperties55.asProperties();
        java.lang.Object obj63 = properties49.remove((java.lang.Object) properties62);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties64 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties64.setDefaultJtaTimeout((long) (byte) 10);
        atomikosProperties64.setCheckpointInterval((long) (byte) 0);
        atomikosProperties64.setTransactionManagerUniqueName("");
        java.lang.Object obj71 = properties62.remove((java.lang.Object) atomikosProperties64);
        java.util.Enumeration<java.lang.Object> objEnumeration72 = properties62.keys();
        java.lang.Object obj73 = properties3.putIfAbsent((java.lang.Object) atomikosProperties42, (java.lang.Object) properties62);
        java.io.OutputStream outputStream74 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties62.save(outputStream74, "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.max_actives=0, com.atomikos.icatch.log_base_name=tmlog}");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardEnumeration1);
        org.junit.Assert.assertNotNull(obj2);
        org.junit.Assert.assertEquals(obj2.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj2), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj2), "{}");
        org.junit.Assert.assertNull(obj11);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertNull(obj16);
        org.junit.Assert.assertNull(obj19);
        org.junit.Assert.assertNotNull(properties32);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "tmlog" + "'", str33, "tmlog");
        org.junit.Assert.assertEquals("'" + obj40 + "' != '" + (byte) 1 + "'", obj40, (byte) 1);
        org.junit.Assert.assertNull(obj41);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertNull(obj53);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertNotNull(properties62);
        org.junit.Assert.assertNull(obj63);
        org.junit.Assert.assertNull(obj71);
        org.junit.Assert.assertNotNull(objEnumeration72);
        org.junit.Assert.assertNull(obj73);
    }

    @Test
    public void test1699() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1699");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setDefaultJtaTimeout((long) (byte) 10);
        atomikosProperties0.setCheckpointInterval((long) (byte) 0);
        atomikosProperties0.setTransactionManagerUniqueName("");
        boolean boolean7 = atomikosProperties0.isEnableLogging();
        java.util.Properties properties8 = atomikosProperties0.asProperties();
        java.util.Properties properties9 = new java.util.Properties(properties8);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties10 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties10.setDefaultJtaTimeout((long) (byte) 10);
        atomikosProperties10.setSerialJtaTransactions(false);
        atomikosProperties10.setMaxTimeout((long) (short) -1);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties17 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties17.setDefaultJtaTimeout((long) (byte) 10);
        atomikosProperties17.setCheckpointInterval((long) (byte) 0);
        atomikosProperties17.setTransactionManagerUniqueName("");
        java.util.Properties properties24 = atomikosProperties17.asProperties();
        java.lang.String str25 = atomikosProperties17.getLogBaseName();
        java.util.Properties properties26 = atomikosProperties17.asProperties();
        java.lang.Object obj27 = properties8.getOrDefault((java.lang.Object) (short) -1, (java.lang.Object) atomikosProperties17);
        long long28 = atomikosProperties17.getCheckpointInterval();
        boolean boolean29 = atomikosProperties17.isEnableLogging();
        atomikosProperties17.setMaxTimeout(500L);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(properties8);
        org.junit.Assert.assertNotNull(properties24);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "tmlog" + "'", str25, "tmlog");
        org.junit.Assert.assertNotNull(properties26);
        org.junit.Assert.assertNotNull(obj27);
        org.junit.Assert.assertTrue("'" + long28 + "' != '" + 0L + "'", long28 == 0L);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
    }

    @Test
    public void test1700() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1700");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setDefaultJtaTimeout((long) (byte) 10);
        atomikosProperties0.setCheckpointInterval((long) (byte) 0);
        atomikosProperties0.setTransactionManagerUniqueName("");
        boolean boolean7 = atomikosProperties0.isEnableLogging();
        java.util.Properties properties8 = atomikosProperties0.asProperties();
        java.util.Properties properties9 = new java.util.Properties(properties8);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties10 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties10.setDefaultJtaTimeout((long) (byte) 10);
        atomikosProperties10.setSerialJtaTransactions(false);
        atomikosProperties10.setMaxTimeout((long) (short) -1);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties17 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties17.setDefaultJtaTimeout((long) (byte) 10);
        atomikosProperties17.setCheckpointInterval((long) (byte) 0);
        atomikosProperties17.setTransactionManagerUniqueName("");
        java.util.Properties properties24 = atomikosProperties17.asProperties();
        java.lang.String str25 = atomikosProperties17.getLogBaseName();
        java.util.Properties properties26 = atomikosProperties17.asProperties();
        java.lang.Object obj27 = properties8.getOrDefault((java.lang.Object) (short) -1, (java.lang.Object) atomikosProperties17);
        java.util.Properties properties28 = atomikosProperties17.asProperties();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet29 = properties28.entrySet();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet30 = properties28.entrySet();
        java.io.OutputStream outputStream31 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties28.save(outputStream31, "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.tm_unique_name=hi!, {com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=0, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.tm_unique_name=, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}=hi!, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(properties8);
        org.junit.Assert.assertNotNull(properties24);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "tmlog" + "'", str25, "tmlog");
        org.junit.Assert.assertNotNull(properties26);
        org.junit.Assert.assertNotNull(obj27);
        org.junit.Assert.assertNotNull(properties28);
        org.junit.Assert.assertNotNull(objEntrySet29);
        org.junit.Assert.assertNotNull(objEntrySet30);
    }

    @Test
    public void test1701() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1701");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Properties properties2 = new java.util.Properties(properties0);
        java.util.Properties properties3 = null;
        java.util.Properties properties4 = new java.util.Properties(properties3);
        java.lang.Object obj6 = properties2.put((java.lang.Object) properties4, (java.lang.Object) (short) 1);
        java.util.Properties properties8 = null;
        java.util.Properties properties9 = new java.util.Properties(properties8);
        java.util.Properties properties10 = new java.util.Properties(properties8);
        java.util.Properties properties11 = null;
        java.util.Properties properties12 = new java.util.Properties(properties11);
        java.lang.Object obj14 = properties10.put((java.lang.Object) properties12, (java.lang.Object) (short) 1);
        boolean boolean15 = properties4.remove((java.lang.Object) false, (java.lang.Object) (short) 1);
        java.util.Set<java.lang.String> strSet16 = properties4.stringPropertyNames();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties17 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties17.setDefaultJtaTimeout((long) (byte) 10);
        long long20 = atomikosProperties17.getDefaultJtaTimeout();
        java.lang.Object obj21 = properties4.get((java.lang.Object) atomikosProperties17);
        java.util.Properties properties22 = null;
        java.util.Properties properties23 = new java.util.Properties(properties22);
        java.util.Properties properties24 = new java.util.Properties(properties22);
        java.util.Properties properties25 = null;
        java.util.Properties properties26 = new java.util.Properties(properties25);
        java.lang.Object obj28 = properties24.put((java.lang.Object) properties26, (java.lang.Object) (short) 1);
        java.util.Properties properties30 = null;
        java.util.Properties properties31 = new java.util.Properties(properties30);
        java.util.Properties properties32 = new java.util.Properties(properties30);
        java.util.Properties properties33 = null;
        java.util.Properties properties34 = new java.util.Properties(properties33);
        java.lang.Object obj36 = properties32.put((java.lang.Object) properties34, (java.lang.Object) (short) 1);
        boolean boolean37 = properties26.remove((java.lang.Object) false, (java.lang.Object) (short) 1);
        java.lang.Object obj39 = properties26.remove((java.lang.Object) '#');
        java.util.Set<java.lang.Object> objSet40 = properties26.keySet();
        boolean boolean41 = properties4.containsKey((java.lang.Object) properties26);
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet42 = properties4.entrySet();
        java.util.Properties properties43 = null;
        java.util.Properties properties44 = new java.util.Properties(properties43);
        java.util.Properties properties45 = new java.util.Properties(properties43);
        java.util.Properties properties46 = null;
        java.util.Properties properties47 = new java.util.Properties(properties46);
        java.lang.Object obj49 = properties45.put((java.lang.Object) properties47, (java.lang.Object) (short) 1);
        boolean boolean50 = properties45.isEmpty();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties51 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties51.setDefaultJtaTimeout((long) (byte) 10);
        atomikosProperties51.setCheckpointInterval((long) (byte) 0);
        atomikosProperties51.setTransactionManagerUniqueName("");
        java.util.Properties properties58 = atomikosProperties51.asProperties();
        java.lang.Object obj59 = properties45.remove((java.lang.Object) properties58);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties60 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties60.setDefaultJtaTimeout((long) (byte) 10);
        atomikosProperties60.setCheckpointInterval((long) (byte) 0);
        atomikosProperties60.setTransactionManagerUniqueName("");
        java.util.Properties properties67 = atomikosProperties60.asProperties();
        java.lang.String str68 = atomikosProperties60.getTransactionManagerUniqueName();
        atomikosProperties60.setDefaultJtaTimeout((long) (-1));
        java.lang.String str71 = atomikosProperties60.getService();
        java.util.Properties properties72 = null;
        java.util.Properties properties73 = new java.util.Properties(properties72);
        java.util.Properties properties74 = new java.util.Properties(properties72);
        boolean boolean76 = properties74.containsValue((java.lang.Object) (short) 100);
        java.util.Properties properties77 = null;
        java.util.Properties properties78 = new java.util.Properties(properties77);
        java.util.Properties properties79 = new java.util.Properties(properties77);
        java.util.Properties properties80 = null;
        java.util.Properties properties81 = new java.util.Properties(properties80);
        java.lang.Object obj83 = properties79.put((java.lang.Object) properties81, (java.lang.Object) (short) 1);
        java.util.Enumeration<java.lang.Object> objEnumeration84 = properties81.elements();
        java.lang.Object obj85 = properties74.remove((java.lang.Object) properties81);
        boolean boolean86 = properties81.isEmpty();
        boolean boolean87 = properties4.replace((java.lang.Object) properties58, (java.lang.Object) atomikosProperties60, (java.lang.Object) boolean86);
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet88 = properties4.entrySet();
        java.lang.Class<?> wildcardClass89 = objEntrySet88.getClass();
        org.junit.Assert.assertNull(obj6);
        org.junit.Assert.assertNull(obj14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(strSet16);
        org.junit.Assert.assertTrue("'" + long20 + "' != '" + 10L + "'", long20 == 10L);
        org.junit.Assert.assertNull(obj21);
        org.junit.Assert.assertNull(obj28);
        org.junit.Assert.assertNull(obj36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNull(obj39);
        org.junit.Assert.assertNotNull(objSet40);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(objEntrySet42);
        org.junit.Assert.assertNull(obj49);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertNotNull(properties58);
        org.junit.Assert.assertNull(obj59);
        org.junit.Assert.assertNotNull(properties67);
        org.junit.Assert.assertEquals("'" + str68 + "' != '" + "" + "'", str68, "");
        org.junit.Assert.assertNull(str71);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
        org.junit.Assert.assertNull(obj83);
        org.junit.Assert.assertNotNull(objEnumeration84);
        org.junit.Assert.assertNull(obj85);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + true + "'", boolean86 == true);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + false + "'", boolean87 == false);
        org.junit.Assert.assertNotNull(objEntrySet88);
        org.junit.Assert.assertNotNull(wildcardClass89);
    }

    @Test
    public void test1702() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1702");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Properties properties2 = new java.util.Properties(properties0);
        java.util.Properties properties3 = null;
        java.util.Properties properties4 = new java.util.Properties(properties3);
        java.lang.Object obj6 = properties2.put((java.lang.Object) properties4, (java.lang.Object) (short) 1);
        properties4.clear();
        int int8 = properties4.size();
        java.util.Properties properties9 = new java.util.Properties(properties4);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties10 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        int int11 = atomikosProperties10.getMaxActives();
        long long12 = atomikosProperties10.getMaxTimeout();
        java.util.Properties properties13 = atomikosProperties10.asProperties();
        java.util.Properties properties14 = atomikosProperties10.asProperties();
        java.util.Properties properties15 = null;
        java.util.Properties properties16 = new java.util.Properties(properties15);
        java.util.Properties properties17 = new java.util.Properties(properties15);
        java.util.Properties properties18 = null;
        java.util.Properties properties19 = new java.util.Properties(properties18);
        java.lang.Object obj21 = properties17.put((java.lang.Object) properties19, (java.lang.Object) (short) 1);
        java.util.Enumeration<java.lang.Object> objEnumeration22 = properties19.elements();
        java.lang.Object obj23 = properties4.replace((java.lang.Object) atomikosProperties10, (java.lang.Object) properties19);
        java.util.Properties properties24 = atomikosProperties10.asProperties();
        atomikosProperties10.setSerialJtaTransactions(false);
        atomikosProperties10.setThreadedTwoPhaseCommit(false);
        org.junit.Assert.assertNull(obj6);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 50 + "'", int11 == 50);
        org.junit.Assert.assertTrue("'" + long12 + "' != '" + 300000L + "'", long12 == 300000L);
        org.junit.Assert.assertNotNull(properties13);
        org.junit.Assert.assertNotNull(properties14);
        org.junit.Assert.assertNull(obj21);
        org.junit.Assert.assertNotNull(objEnumeration22);
        org.junit.Assert.assertNull(obj23);
        org.junit.Assert.assertNotNull(properties24);
    }

    @Test
    public void test1703() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1703");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setDefaultJtaTimeout((long) (byte) 10);
        atomikosProperties0.setCheckpointInterval((long) (byte) 0);
        atomikosProperties0.setTransactionManagerUniqueName("");
        java.util.Properties properties7 = atomikosProperties0.asProperties();
        java.lang.String str8 = atomikosProperties0.getLogBaseName();
        atomikosProperties0.setCheckpointInterval(100L);
        atomikosProperties0.setLogBaseName("");
        atomikosProperties0.setCheckpointInterval((long) (byte) 1);
        java.lang.String str15 = atomikosProperties0.getTransactionManagerUniqueName();
        atomikosProperties0.setLogBaseName("{=}");
        long long18 = atomikosProperties0.getMaxTimeout();
        org.junit.Assert.assertNotNull(properties7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "tmlog" + "'", str8, "tmlog");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "" + "'", str15, "");
        org.junit.Assert.assertTrue("'" + long18 + "' != '" + 300000L + "'", long18 == 300000L);
    }

    @Test
    public void test1704() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1704");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        int int1 = atomikosProperties0.getMaxActives();
        long long2 = atomikosProperties0.getMaxTimeout();
        java.util.Properties properties3 = atomikosProperties0.asProperties();
        java.util.Properties properties4 = atomikosProperties0.asProperties();
        java.util.Properties properties5 = null;
        java.util.Properties properties6 = new java.util.Properties(properties5);
        java.util.Properties properties7 = new java.util.Properties(properties5);
        boolean boolean9 = properties7.containsValue((java.lang.Object) (short) 100);
        java.util.Properties properties10 = null;
        java.util.Properties properties11 = new java.util.Properties(properties10);
        java.util.Properties properties12 = new java.util.Properties(properties10);
        java.util.Properties properties13 = null;
        java.util.Properties properties14 = new java.util.Properties(properties13);
        java.lang.Object obj16 = properties12.put((java.lang.Object) properties14, (java.lang.Object) (short) 1);
        java.util.Enumeration<java.lang.Object> objEnumeration17 = properties14.elements();
        java.lang.Object obj18 = properties7.remove((java.lang.Object) properties14);
        boolean boolean19 = properties14.isEmpty();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet20 = properties14.entrySet();
        java.util.Properties properties21 = new java.util.Properties(properties14);
        boolean boolean22 = properties4.contains((java.lang.Object) properties21);
        java.lang.String str24 = properties4.getProperty("{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.tm_unique_name=, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
        properties4.clear();
        java.util.Collection<java.lang.Object> objCollection26 = properties4.values();
        java.lang.Object obj27 = null;
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties28 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties28.setDefaultJtaTimeout((long) (byte) 10);
        long long31 = atomikosProperties28.getDefaultJtaTimeout();
        atomikosProperties28.setTransactionManagerUniqueName("");
        boolean boolean34 = atomikosProperties28.isEnableLogging();
        atomikosProperties28.setDefaultJtaTimeout((long) '4');
        boolean boolean37 = atomikosProperties28.isSerialJtaTransactions();
        java.util.Properties properties38 = atomikosProperties28.asProperties();
        atomikosProperties28.setThreadedTwoPhaseCommit(true);
        java.lang.String str41 = atomikosProperties28.getService();
        java.lang.String str42 = atomikosProperties28.getLogBaseDir();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj43 = properties4.getOrDefault(obj27, (java.lang.Object) atomikosProperties28);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 50 + "'", int1 == 50);
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + 300000L + "'", long2 == 300000L);
        org.junit.Assert.assertNotNull(properties3);
        org.junit.Assert.assertNotNull(properties4);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNull(obj16);
        org.junit.Assert.assertNotNull(objEnumeration17);
        org.junit.Assert.assertNull(obj18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(objEntrySet20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNull(str24);
        org.junit.Assert.assertNotNull(objCollection26);
        org.junit.Assert.assertTrue("'" + long31 + "' != '" + 10L + "'", long31 == 10L);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertNotNull(properties38);
        org.junit.Assert.assertNull(str41);
        org.junit.Assert.assertNull(str42);
    }

    @Test
    public void test1705() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1705");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setThreadedTwoPhaseCommit(true);
        atomikosProperties0.setMaxActives((int) '#');
        java.lang.String str5 = atomikosProperties0.getLogBaseName();
        atomikosProperties0.setThreadedTwoPhaseCommit(false);
        atomikosProperties0.setMaxTimeout((long) (byte) 100);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "tmlog" + "'", str5, "tmlog");
    }

    @Test
    public void test1706() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1706");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Properties properties2 = new java.util.Properties(properties0);
        java.util.Properties properties3 = null;
        java.util.Properties properties4 = new java.util.Properties(properties3);
        java.lang.Object obj6 = properties2.put((java.lang.Object) properties4, (java.lang.Object) (short) 1);
        java.util.Properties properties8 = null;
        java.util.Properties properties9 = new java.util.Properties(properties8);
        java.util.Properties properties10 = new java.util.Properties(properties8);
        java.util.Properties properties11 = null;
        java.util.Properties properties12 = new java.util.Properties(properties11);
        java.lang.Object obj14 = properties10.put((java.lang.Object) properties12, (java.lang.Object) (short) 1);
        boolean boolean15 = properties4.remove((java.lang.Object) false, (java.lang.Object) (short) 1);
        java.lang.Object obj17 = properties4.remove((java.lang.Object) '#');
        java.util.Set<java.lang.Object> objSet18 = properties4.keySet();
        properties4.clear();
        java.util.Properties properties20 = null;
        java.util.Properties properties21 = new java.util.Properties(properties20);
        java.util.Properties properties22 = new java.util.Properties(properties20);
        java.util.Properties properties23 = null;
        java.util.Properties properties24 = new java.util.Properties(properties23);
        java.lang.Object obj26 = properties22.put((java.lang.Object) properties24, (java.lang.Object) (short) 1);
        java.util.Enumeration<java.lang.Object> objEnumeration27 = properties24.elements();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet28 = properties24.entrySet();
        boolean boolean29 = properties4.equals((java.lang.Object) properties24);
        java.lang.Object obj30 = properties4.clone();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties31 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties31.setDefaultJtaTimeout((long) (byte) 10);
        atomikosProperties31.setCheckpointInterval((long) (byte) 0);
        atomikosProperties31.setEnableLogging(true);
        atomikosProperties31.setThreadedTwoPhaseCommit(false);
        boolean boolean40 = atomikosProperties31.isForceShutdownOnVmExit();
        boolean boolean41 = properties4.containsKey((java.lang.Object) atomikosProperties31);
        atomikosProperties31.setSerialJtaTransactions(true);
        org.junit.Assert.assertNull(obj6);
        org.junit.Assert.assertNull(obj14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNull(obj17);
        org.junit.Assert.assertNotNull(objSet18);
        org.junit.Assert.assertNull(obj26);
        org.junit.Assert.assertNotNull(objEnumeration27);
        org.junit.Assert.assertNotNull(objEntrySet28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNotNull(obj30);
        org.junit.Assert.assertEquals(obj30.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj30), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj30), "{}");
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
    }

    @Test
    public void test1707() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1707");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setThreadedTwoPhaseCommit(true);
        atomikosProperties0.setMaxActives((int) '#');
        boolean boolean5 = atomikosProperties0.isSerialJtaTransactions();
        long long6 = atomikosProperties0.getDefaultJtaTimeout();
        java.lang.String str7 = atomikosProperties0.getLogBaseName();
        atomikosProperties0.setMaxActives((int) 'a');
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertTrue("'" + long6 + "' != '" + 10000L + "'", long6 == 10000L);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "tmlog" + "'", str7, "tmlog");
    }

    @Test
    public void test1708() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1708");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setThreadedTwoPhaseCommit(true);
        atomikosProperties0.setMaxActives((int) (byte) 0);
        atomikosProperties0.setEnableLogging(true);
        atomikosProperties0.setMaxActives((int) (byte) 1);
        atomikosProperties0.setTransactionManagerUniqueName("hi!");
        java.lang.String str11 = atomikosProperties0.getLogBaseName();
        atomikosProperties0.setSerialJtaTransactions(false);
        java.util.Properties properties14 = atomikosProperties0.asProperties();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties15 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties15.setThreadedTwoPhaseCommit(true);
        atomikosProperties15.setMaxActives((int) '#');
        atomikosProperties15.setForceShutdownOnVmExit(true);
        java.lang.String str22 = atomikosProperties15.getLogBaseDir();
        java.util.Properties properties23 = atomikosProperties15.asProperties();
        java.util.Properties properties24 = null;
        java.util.Properties properties25 = new java.util.Properties(properties24);
        java.util.Properties properties26 = new java.util.Properties(properties24);
        java.util.Properties properties27 = null;
        java.util.Properties properties28 = new java.util.Properties(properties27);
        java.lang.Object obj30 = properties26.put((java.lang.Object) properties28, (java.lang.Object) (short) 1);
        boolean boolean31 = properties26.isEmpty();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties32 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties32.setDefaultJtaTimeout((long) (byte) 10);
        atomikosProperties32.setCheckpointInterval((long) (byte) 0);
        atomikosProperties32.setTransactionManagerUniqueName("");
        java.util.Properties properties39 = atomikosProperties32.asProperties();
        java.lang.Object obj40 = properties26.remove((java.lang.Object) properties39);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties41 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties41.setDefaultJtaTimeout((long) (byte) 10);
        atomikosProperties41.setCheckpointInterval((long) (byte) 0);
        atomikosProperties41.setTransactionManagerUniqueName("");
        java.lang.Object obj48 = properties39.remove((java.lang.Object) atomikosProperties41);
        boolean boolean49 = properties23.containsKey((java.lang.Object) properties39);
        java.util.Properties properties50 = new java.util.Properties(properties39);
        java.util.Properties properties51 = null;
        java.util.Properties properties52 = new java.util.Properties(properties51);
        java.util.Properties properties53 = new java.util.Properties(properties51);
        java.util.Properties properties54 = null;
        java.util.Properties properties55 = new java.util.Properties(properties54);
        java.lang.Object obj57 = properties53.put((java.lang.Object) properties55, (java.lang.Object) (short) 1);
        java.util.Properties properties59 = null;
        java.util.Properties properties60 = new java.util.Properties(properties59);
        java.util.Properties properties61 = new java.util.Properties(properties59);
        java.util.Properties properties62 = null;
        java.util.Properties properties63 = new java.util.Properties(properties62);
        java.lang.Object obj65 = properties61.put((java.lang.Object) properties63, (java.lang.Object) (short) 1);
        boolean boolean66 = properties55.remove((java.lang.Object) false, (java.lang.Object) (short) 1);
        java.util.Set<java.lang.String> strSet67 = properties55.stringPropertyNames();
        java.util.Enumeration<java.lang.Object> objEnumeration68 = properties55.elements();
        java.lang.String str69 = properties55.toString();
        java.util.Enumeration<?> wildcardEnumeration70 = properties55.propertyNames();
        boolean boolean71 = properties39.equals((java.lang.Object) properties55);
        java.lang.Object obj72 = properties39.clone();
        boolean boolean73 = properties14.equals((java.lang.Object) properties39);
        java.lang.Object obj76 = properties14.setProperty("{tmlog={com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=0, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.tm_unique_name=, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}, 4=true}", "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=0, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "tmlog" + "'", str11, "tmlog");
        org.junit.Assert.assertNotNull(properties14);
        org.junit.Assert.assertNull(str22);
        org.junit.Assert.assertNotNull(properties23);
        org.junit.Assert.assertNull(obj30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(properties39);
        org.junit.Assert.assertNull(obj40);
        org.junit.Assert.assertNull(obj48);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNull(obj57);
        org.junit.Assert.assertNull(obj65);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertNotNull(strSet67);
        org.junit.Assert.assertNotNull(objEnumeration68);
        org.junit.Assert.assertEquals("'" + str69 + "' != '" + "{}" + "'", str69, "{}");
        org.junit.Assert.assertNotNull(wildcardEnumeration70);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertNotNull(obj72);
// flaky:         org.junit.Assert.assertEquals(obj72.toString(), "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=0, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.tm_unique_name=, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
// flaky:         org.junit.Assert.assertEquals(java.lang.String.valueOf(obj72), "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=0, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.tm_unique_name=, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
// flaky:         org.junit.Assert.assertEquals(java.util.Objects.toString(obj72), "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=0, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.tm_unique_name=, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertNull(obj76);
    }

    @Test
    public void test1709() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1709");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setThreadedTwoPhaseCommit(true);
        atomikosProperties0.setMaxActives((int) '#');
        atomikosProperties0.setCheckpointInterval((long) 50);
        long long7 = atomikosProperties0.getCheckpointInterval();
        java.lang.String str8 = atomikosProperties0.getService();
        boolean boolean9 = atomikosProperties0.isThreadedTwoPhaseCommit();
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + 50L + "'", long7 == 50L);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
    }

    @Test
    public void test1710() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1710");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Properties properties2 = new java.util.Properties(properties0);
        java.util.Properties properties3 = null;
        java.util.Properties properties4 = new java.util.Properties(properties3);
        java.lang.Object obj6 = properties2.put((java.lang.Object) properties4, (java.lang.Object) (short) 1);
        properties4.clear();
        java.lang.String str9 = properties4.getProperty("");
        java.util.Properties properties10 = null;
        java.util.Properties properties11 = new java.util.Properties(properties10);
        java.util.Properties properties12 = new java.util.Properties(properties10);
        java.util.Properties properties13 = null;
        java.util.Properties properties14 = new java.util.Properties(properties13);
        java.lang.Object obj16 = properties12.put((java.lang.Object) properties14, (java.lang.Object) (short) 1);
        properties4.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties12);
        java.io.Reader reader18 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties4.load(reader18);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(obj6);
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertNull(obj16);
    }

    @Test
    public void test1711() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1711");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Properties properties2 = new java.util.Properties(properties0);
        java.util.Properties properties3 = null;
        java.util.Properties properties4 = new java.util.Properties(properties3);
        java.lang.Object obj6 = properties2.put((java.lang.Object) properties4, (java.lang.Object) (short) 1);
        java.util.Enumeration<java.lang.Object> objEnumeration7 = properties4.elements();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet8 = properties4.entrySet();
        java.util.Set<java.lang.Object> objSet9 = properties4.keySet();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties10 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties10.setDefaultJtaTimeout((long) (byte) 10);
        atomikosProperties10.setCheckpointInterval((long) (byte) 0);
        atomikosProperties10.setEnableLogging(true);
        java.lang.Object obj17 = properties4.get((java.lang.Object) atomikosProperties10);
        java.util.Properties properties18 = atomikosProperties10.asProperties();
        java.lang.String str19 = atomikosProperties10.getLogBaseName();
        atomikosProperties10.setForceShutdownOnVmExit(false);
        java.util.Properties properties22 = atomikosProperties10.asProperties();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties23 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties23.setDefaultJtaTimeout((long) (byte) 10);
        atomikosProperties23.setCheckpointInterval((long) (byte) 0);
        atomikosProperties23.setTransactionManagerUniqueName("");
        java.util.Properties properties30 = atomikosProperties23.asProperties();
        java.lang.String str31 = atomikosProperties23.getLogBaseName();
        atomikosProperties23.setCheckpointInterval(100L);
        atomikosProperties23.setLogBaseName("");
        atomikosProperties23.setCheckpointInterval((long) (byte) 1);
        boolean boolean38 = atomikosProperties23.isSerialJtaTransactions();
        java.lang.Object obj39 = properties22.remove((java.lang.Object) boolean38);
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet40 = properties22.entrySet();
        org.junit.Assert.assertNull(obj6);
        org.junit.Assert.assertNotNull(objEnumeration7);
        org.junit.Assert.assertNotNull(objEntrySet8);
        org.junit.Assert.assertNotNull(objSet9);
        org.junit.Assert.assertNull(obj17);
        org.junit.Assert.assertNotNull(properties18);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "tmlog" + "'", str19, "tmlog");
        org.junit.Assert.assertNotNull(properties22);
        org.junit.Assert.assertNotNull(properties30);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "tmlog" + "'", str31, "tmlog");
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertNull(obj39);
        org.junit.Assert.assertNotNull(objEntrySet40);
    }

    @Test
    public void test1712() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1712");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Properties properties2 = new java.util.Properties(properties0);
        java.util.Properties properties3 = null;
        java.util.Properties properties4 = new java.util.Properties(properties3);
        java.lang.Object obj6 = properties2.put((java.lang.Object) properties4, (java.lang.Object) (short) 1);
        boolean boolean7 = properties2.isEmpty();
        java.util.Properties properties8 = null;
        java.util.Properties properties9 = new java.util.Properties(properties8);
        java.util.Properties properties10 = new java.util.Properties(properties8);
        boolean boolean11 = properties2.containsKey((java.lang.Object) properties10);
        java.util.Properties properties12 = new java.util.Properties(properties10);
        java.lang.Object obj13 = properties12.clone();
        java.util.Properties properties15 = null;
        java.util.Properties properties16 = new java.util.Properties(properties15);
        java.util.Properties properties17 = new java.util.Properties(properties15);
        java.util.Properties properties18 = null;
        java.util.Properties properties19 = new java.util.Properties(properties18);
        java.lang.Object obj21 = properties17.put((java.lang.Object) properties19, (java.lang.Object) (short) 1);
        boolean boolean22 = properties17.isEmpty();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties23 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties23.setDefaultJtaTimeout((long) (byte) 10);
        atomikosProperties23.setCheckpointInterval((long) (byte) 0);
        atomikosProperties23.setTransactionManagerUniqueName("");
        java.util.Properties properties30 = atomikosProperties23.asProperties();
        java.lang.Object obj31 = properties17.remove((java.lang.Object) properties30);
        java.lang.Object obj32 = properties12.putIfAbsent((java.lang.Object) 1L, (java.lang.Object) properties17);
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet33 = properties17.entrySet();
        java.util.Properties properties34 = new java.util.Properties(properties17);
        java.io.OutputStream outputStream35 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties17.save(outputStream35, "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.max_actives=0, com.atomikos.icatch.log_base_name=tmlog}");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(obj6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNotNull(obj13);
        org.junit.Assert.assertEquals(obj13.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj13), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj13), "{}");
        org.junit.Assert.assertNull(obj21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(properties30);
        org.junit.Assert.assertNull(obj31);
        org.junit.Assert.assertNull(obj32);
        org.junit.Assert.assertNotNull(objEntrySet33);
    }

    @Test
    public void test1713() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1713");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setDefaultJtaTimeout((long) (byte) 10);
        long long3 = atomikosProperties0.getDefaultJtaTimeout();
        atomikosProperties0.setSerialJtaTransactions(true);
        long long6 = atomikosProperties0.getMaxTimeout();
        org.junit.Assert.assertTrue("'" + long3 + "' != '" + 10L + "'", long3 == 10L);
        org.junit.Assert.assertTrue("'" + long6 + "' != '" + 300000L + "'", long6 == 300000L);
    }

    @Test
    public void test1714() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1714");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Properties properties2 = new java.util.Properties(properties0);
        java.util.Properties properties3 = null;
        java.util.Properties properties4 = new java.util.Properties(properties3);
        java.lang.Object obj6 = properties2.put((java.lang.Object) properties4, (java.lang.Object) (short) 1);
        java.util.Properties properties8 = null;
        java.util.Properties properties9 = new java.util.Properties(properties8);
        java.util.Properties properties10 = new java.util.Properties(properties8);
        java.util.Properties properties11 = null;
        java.util.Properties properties12 = new java.util.Properties(properties11);
        java.lang.Object obj14 = properties10.put((java.lang.Object) properties12, (java.lang.Object) (short) 1);
        boolean boolean15 = properties4.remove((java.lang.Object) false, (java.lang.Object) (short) 1);
        java.util.Set<java.lang.String> strSet16 = properties4.stringPropertyNames();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties17 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties17.setDefaultJtaTimeout((long) (byte) 10);
        atomikosProperties17.setCheckpointInterval((long) (byte) 0);
        atomikosProperties17.setTransactionManagerUniqueName("");
        boolean boolean24 = atomikosProperties17.isEnableLogging();
        atomikosProperties17.setSerialJtaTransactions(false);
        atomikosProperties17.setLogBaseDir("");
        java.util.Properties properties29 = null;
        java.util.Properties properties30 = new java.util.Properties(properties29);
        java.util.Properties properties31 = new java.util.Properties(properties29);
        java.util.Properties properties32 = null;
        java.util.Properties properties33 = new java.util.Properties(properties32);
        java.lang.Object obj35 = properties31.put((java.lang.Object) properties33, (java.lang.Object) (short) 1);
        java.util.Properties properties36 = new java.util.Properties(properties33);
        boolean boolean37 = properties4.remove((java.lang.Object) "", (java.lang.Object) properties36);
        java.util.Properties properties38 = null;
        java.util.Properties properties39 = new java.util.Properties(properties38);
        java.util.Properties properties40 = new java.util.Properties(properties38);
        java.lang.Object obj41 = properties40.clone();
        boolean boolean42 = properties4.contains(obj41);
        java.util.Collection<java.lang.Object> objCollection43 = properties4.values();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties44 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties44.setDefaultJtaTimeout((long) (byte) 10);
        atomikosProperties44.setCheckpointInterval((long) (byte) 0);
        atomikosProperties44.setTransactionManagerUniqueName("");
        java.util.Properties properties51 = atomikosProperties44.asProperties();
        java.lang.String str52 = atomikosProperties44.getLogBaseName();
        atomikosProperties44.setCheckpointInterval(100L);
        java.lang.String str55 = atomikosProperties44.getTransactionManagerUniqueName();
        atomikosProperties44.setLogBaseName("{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.tm_unique_name=, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
        atomikosProperties44.setThreadedTwoPhaseCommit(true);
        atomikosProperties44.setEnableLogging(false);
        java.lang.Object obj62 = properties4.get((java.lang.Object) atomikosProperties44);
        int int63 = properties4.size();
        java.util.Properties properties64 = null;
        java.util.Properties properties65 = new java.util.Properties(properties64);
        java.util.Properties properties66 = new java.util.Properties(properties64);
        boolean boolean68 = properties66.containsValue((java.lang.Object) (short) 100);
        java.lang.Object obj69 = properties66.clone();
        java.util.Enumeration<?> wildcardEnumeration70 = properties66.propertyNames();
        java.lang.Object obj71 = properties4.get((java.lang.Object) wildcardEnumeration70);
        java.util.Set<java.lang.String> strSet72 = properties4.stringPropertyNames();
        java.util.Enumeration<?> wildcardEnumeration73 = properties4.propertyNames();
        java.io.InputStream inputStream74 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties4.loadFromXML(inputStream74);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(obj6);
        org.junit.Assert.assertNull(obj14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(strSet16);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNull(obj35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(obj41);
        org.junit.Assert.assertEquals(obj41.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj41), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj41), "{}");
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(objCollection43);
        org.junit.Assert.assertNotNull(properties51);
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "tmlog" + "'", str52, "tmlog");
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "" + "'", str55, "");
        org.junit.Assert.assertNull(obj62);
        org.junit.Assert.assertTrue("'" + int63 + "' != '" + 0 + "'", int63 == 0);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertNotNull(obj69);
        org.junit.Assert.assertEquals(obj69.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj69), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj69), "{}");
        org.junit.Assert.assertNotNull(wildcardEnumeration70);
        org.junit.Assert.assertNull(obj71);
        org.junit.Assert.assertNotNull(strSet72);
        org.junit.Assert.assertNotNull(wildcardEnumeration73);
    }

    @Test
    public void test1715() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1715");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Properties properties2 = new java.util.Properties(properties0);
        java.util.Properties properties3 = null;
        java.util.Properties properties4 = new java.util.Properties(properties3);
        java.lang.Object obj6 = properties2.put((java.lang.Object) properties4, (java.lang.Object) (short) 1);
        java.util.Properties properties8 = null;
        java.util.Properties properties9 = new java.util.Properties(properties8);
        java.util.Properties properties10 = new java.util.Properties(properties8);
        java.util.Properties properties11 = null;
        java.util.Properties properties12 = new java.util.Properties(properties11);
        java.lang.Object obj14 = properties10.put((java.lang.Object) properties12, (java.lang.Object) (short) 1);
        boolean boolean15 = properties4.remove((java.lang.Object) false, (java.lang.Object) (short) 1);
        java.util.Set<java.lang.String> strSet16 = properties4.stringPropertyNames();
        java.lang.Object obj17 = properties4.clone();
        java.util.Properties properties18 = new java.util.Properties(properties4);
        java.util.Enumeration<java.lang.Object> objEnumeration19 = properties4.keys();
        java.lang.String str20 = properties4.toString();
        java.lang.String str21 = properties4.toString();
        java.io.Writer writer22 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties4.store(writer22, "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=0, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(obj6);
        org.junit.Assert.assertNull(obj14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(strSet16);
        org.junit.Assert.assertNotNull(obj17);
        org.junit.Assert.assertEquals(obj17.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj17), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj17), "{}");
        org.junit.Assert.assertNotNull(objEnumeration19);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "{}" + "'", str20, "{}");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "{}" + "'", str21, "{}");
    }

    @Test
    public void test1716() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1716");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setThreadedTwoPhaseCommit(true);
        atomikosProperties0.setMaxActives((int) '#');
        java.lang.String str5 = atomikosProperties0.getLogBaseName();
        atomikosProperties0.setThreadedTwoPhaseCommit(false);
        java.util.Properties properties8 = atomikosProperties0.asProperties();
        java.io.PrintWriter printWriter9 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties8.list(printWriter9);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "tmlog" + "'", str5, "tmlog");
        org.junit.Assert.assertNotNull(properties8);
    }

    @Test
    public void test1717() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1717");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Properties properties2 = new java.util.Properties(properties0);
        java.util.Properties properties3 = null;
        java.util.Properties properties4 = new java.util.Properties(properties3);
        java.lang.Object obj6 = properties2.put((java.lang.Object) properties4, (java.lang.Object) (short) 1);
        java.util.Properties properties8 = null;
        java.util.Properties properties9 = new java.util.Properties(properties8);
        java.util.Properties properties10 = new java.util.Properties(properties8);
        java.util.Properties properties11 = null;
        java.util.Properties properties12 = new java.util.Properties(properties11);
        java.lang.Object obj14 = properties10.put((java.lang.Object) properties12, (java.lang.Object) (short) 1);
        boolean boolean15 = properties4.remove((java.lang.Object) false, (java.lang.Object) (short) 1);
        java.util.Set<java.lang.String> strSet16 = properties4.stringPropertyNames();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties17 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties17.setDefaultJtaTimeout((long) (byte) 10);
        atomikosProperties17.setCheckpointInterval((long) (byte) 0);
        atomikosProperties17.setTransactionManagerUniqueName("");
        boolean boolean24 = atomikosProperties17.isEnableLogging();
        atomikosProperties17.setSerialJtaTransactions(false);
        atomikosProperties17.setLogBaseDir("");
        java.util.Properties properties29 = null;
        java.util.Properties properties30 = new java.util.Properties(properties29);
        java.util.Properties properties31 = new java.util.Properties(properties29);
        java.util.Properties properties32 = null;
        java.util.Properties properties33 = new java.util.Properties(properties32);
        java.lang.Object obj35 = properties31.put((java.lang.Object) properties33, (java.lang.Object) (short) 1);
        java.util.Properties properties36 = new java.util.Properties(properties33);
        boolean boolean37 = properties4.remove((java.lang.Object) "", (java.lang.Object) properties36);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties38 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties38.setDefaultJtaTimeout((long) (byte) 10);
        atomikosProperties38.setCheckpointInterval((long) (byte) 0);
        atomikosProperties38.setEnableLogging(true);
        long long45 = atomikosProperties38.getDefaultJtaTimeout();
        java.lang.Object obj46 = properties4.remove((java.lang.Object) atomikosProperties38);
        properties4.clear();
        java.io.PrintWriter printWriter48 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties4.list(printWriter48);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(obj6);
        org.junit.Assert.assertNull(obj14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(strSet16);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNull(obj35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertTrue("'" + long45 + "' != '" + 10L + "'", long45 == 10L);
        org.junit.Assert.assertNull(obj46);
    }

    @Test
    public void test1718() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1718");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        int int1 = atomikosProperties0.getMaxActives();
        long long2 = atomikosProperties0.getMaxTimeout();
        java.util.Properties properties3 = atomikosProperties0.asProperties();
        java.util.Properties properties4 = atomikosProperties0.asProperties();
        java.util.Properties properties5 = null;
        java.util.Properties properties6 = new java.util.Properties(properties5);
        java.util.Properties properties7 = new java.util.Properties(properties5);
        java.util.Properties properties8 = null;
        java.util.Properties properties9 = new java.util.Properties(properties8);
        java.lang.Object obj11 = properties7.put((java.lang.Object) properties9, (java.lang.Object) (short) 1);
        boolean boolean12 = properties7.isEmpty();
        java.util.Properties properties13 = null;
        java.util.Properties properties14 = new java.util.Properties(properties13);
        java.util.Properties properties15 = new java.util.Properties(properties13);
        boolean boolean16 = properties7.containsKey((java.lang.Object) properties15);
        java.util.Properties properties17 = new java.util.Properties(properties15);
        java.lang.Object obj18 = properties17.clone();
        java.util.Properties properties20 = null;
        java.util.Properties properties21 = new java.util.Properties(properties20);
        java.util.Properties properties22 = new java.util.Properties(properties20);
        java.util.Properties properties23 = null;
        java.util.Properties properties24 = new java.util.Properties(properties23);
        java.lang.Object obj26 = properties22.put((java.lang.Object) properties24, (java.lang.Object) (short) 1);
        boolean boolean27 = properties22.isEmpty();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties28 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties28.setDefaultJtaTimeout((long) (byte) 10);
        atomikosProperties28.setCheckpointInterval((long) (byte) 0);
        atomikosProperties28.setTransactionManagerUniqueName("");
        java.util.Properties properties35 = atomikosProperties28.asProperties();
        java.lang.Object obj36 = properties22.remove((java.lang.Object) properties35);
        java.lang.Object obj37 = properties17.putIfAbsent((java.lang.Object) 1L, (java.lang.Object) properties22);
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet38 = properties17.entrySet();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties39 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        boolean boolean40 = atomikosProperties39.isForceShutdownOnVmExit();
        java.util.Properties properties41 = atomikosProperties39.asProperties();
        java.util.Properties properties42 = null;
        java.util.Properties properties43 = new java.util.Properties(properties42);
        java.util.Properties properties44 = new java.util.Properties(properties42);
        java.util.Properties properties45 = null;
        java.util.Properties properties46 = new java.util.Properties(properties45);
        java.lang.Object obj48 = properties44.put((java.lang.Object) properties46, (java.lang.Object) (short) 1);
        properties46.clear();
        int int50 = properties46.size();
        java.util.Properties properties51 = null;
        java.util.Properties properties52 = new java.util.Properties(properties51);
        java.util.Properties properties53 = new java.util.Properties(properties51);
        java.util.Properties properties54 = null;
        java.util.Properties properties55 = new java.util.Properties(properties54);
        java.lang.Object obj57 = properties53.put((java.lang.Object) properties55, (java.lang.Object) (short) 1);
        java.util.Properties properties58 = new java.util.Properties(properties55);
        java.util.Properties properties59 = new java.util.Properties(properties55);
        boolean boolean61 = properties46.remove((java.lang.Object) properties55, (java.lang.Object) 10.0f);
        boolean boolean62 = properties41.containsKey((java.lang.Object) 10.0f);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties64 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties64.setDefaultJtaTimeout((long) (byte) 10);
        atomikosProperties64.setCheckpointInterval((long) (byte) 0);
        atomikosProperties64.setEnableLogging(true);
        java.lang.Object obj71 = properties41.getOrDefault((java.lang.Object) (byte) 0, (java.lang.Object) true);
        java.util.Properties properties72 = new java.util.Properties(properties41);
        boolean boolean73 = properties17.containsKey((java.lang.Object) properties72);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties74 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties74.setDefaultJtaTimeout((long) (byte) 10);
        long long77 = atomikosProperties74.getDefaultJtaTimeout();
        atomikosProperties74.setTransactionManagerUniqueName("hi!");
        atomikosProperties74.setTransactionManagerUniqueName("{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=0, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.tm_unique_name=, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
        atomikosProperties74.setService("");
        boolean boolean84 = properties4.remove((java.lang.Object) properties72, (java.lang.Object) "");
        java.util.Set<java.lang.String> strSet85 = properties72.stringPropertyNames();
        java.util.Enumeration<java.lang.Object> objEnumeration86 = properties72.elements();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties87 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties87.setDefaultJtaTimeout((long) (byte) 10);
        long long90 = atomikosProperties87.getDefaultJtaTimeout();
        atomikosProperties87.setSerialJtaTransactions(true);
        boolean boolean93 = properties72.containsKey((java.lang.Object) true);
        java.io.OutputStream outputStream94 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties72.save(outputStream94, "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=0, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.tm_unique_name=, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 50 + "'", int1 == 50);
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + 300000L + "'", long2 == 300000L);
        org.junit.Assert.assertNotNull(properties3);
        org.junit.Assert.assertNotNull(properties4);
        org.junit.Assert.assertNull(obj11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(obj18);
        org.junit.Assert.assertEquals(obj18.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj18), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj18), "{}");
        org.junit.Assert.assertNull(obj26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(properties35);
        org.junit.Assert.assertNull(obj36);
        org.junit.Assert.assertNull(obj37);
        org.junit.Assert.assertNotNull(objEntrySet38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(properties41);
        org.junit.Assert.assertNull(obj48);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + 0 + "'", int50 == 0);
        org.junit.Assert.assertNull(obj57);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertEquals("'" + obj71 + "' != '" + true + "'", obj71, true);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertTrue("'" + long77 + "' != '" + 10L + "'", long77 == 10L);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + false + "'", boolean84 == false);
        org.junit.Assert.assertNotNull(strSet85);
        org.junit.Assert.assertNotNull(objEnumeration86);
        org.junit.Assert.assertTrue("'" + long90 + "' != '" + 10L + "'", long90 == 10L);
        org.junit.Assert.assertTrue("'" + boolean93 + "' != '" + false + "'", boolean93 == false);
    }

    @Test
    public void test1719() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1719");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Properties properties2 = new java.util.Properties(properties0);
        boolean boolean4 = properties2.containsValue((java.lang.Object) (short) 100);
        java.util.Properties properties5 = null;
        java.util.Properties properties6 = new java.util.Properties(properties5);
        java.util.Properties properties7 = new java.util.Properties(properties5);
        java.util.Properties properties8 = null;
        java.util.Properties properties9 = new java.util.Properties(properties8);
        java.lang.Object obj11 = properties7.put((java.lang.Object) properties9, (java.lang.Object) (short) 1);
        java.util.Enumeration<java.lang.Object> objEnumeration12 = properties9.elements();
        java.lang.Object obj13 = properties2.remove((java.lang.Object) properties9);
        java.lang.Object obj16 = properties9.setProperty("", "");
        java.util.Properties properties17 = null;
        java.util.Properties properties18 = new java.util.Properties(properties17);
        java.util.Properties properties19 = new java.util.Properties(properties17);
        java.util.Properties properties20 = null;
        java.util.Properties properties21 = new java.util.Properties(properties20);
        java.lang.Object obj23 = properties19.put((java.lang.Object) properties21, (java.lang.Object) (short) 1);
        java.util.Properties properties25 = null;
        java.util.Properties properties26 = new java.util.Properties(properties25);
        java.util.Properties properties27 = new java.util.Properties(properties25);
        java.util.Properties properties28 = null;
        java.util.Properties properties29 = new java.util.Properties(properties28);
        java.lang.Object obj31 = properties27.put((java.lang.Object) properties29, (java.lang.Object) (short) 1);
        boolean boolean32 = properties21.remove((java.lang.Object) false, (java.lang.Object) (short) 1);
        java.util.Properties properties33 = new java.util.Properties(properties21);
        properties9.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties33);
        java.io.PrintWriter printWriter35 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties33.list(printWriter35);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNull(obj11);
        org.junit.Assert.assertNotNull(objEnumeration12);
        org.junit.Assert.assertNull(obj13);
        org.junit.Assert.assertNull(obj16);
        org.junit.Assert.assertNull(obj23);
        org.junit.Assert.assertNull(obj31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
    }

    @Test
    public void test1720() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1720");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Properties properties2 = new java.util.Properties(properties0);
        java.util.Properties properties3 = null;
        java.util.Properties properties4 = new java.util.Properties(properties3);
        java.lang.Object obj6 = properties2.put((java.lang.Object) properties4, (java.lang.Object) (short) 1);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties7 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties7.setThreadedTwoPhaseCommit(true);
        atomikosProperties7.setMaxActives((int) (byte) 0);
        boolean boolean12 = properties2.containsValue((java.lang.Object) atomikosProperties7);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties13 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties13.setDefaultJtaTimeout((long) (byte) 10);
        atomikosProperties13.setCheckpointInterval((long) (byte) 0);
        atomikosProperties13.setTransactionManagerUniqueName("");
        boolean boolean20 = atomikosProperties13.isEnableLogging();
        atomikosProperties13.setLogBaseDir("hi!");
        atomikosProperties13.setForceShutdownOnVmExit(false);
        java.util.Properties properties25 = null;
        java.util.Properties properties26 = new java.util.Properties(properties25);
        java.util.Properties properties27 = new java.util.Properties(properties25);
        java.util.Properties properties28 = null;
        java.util.Properties properties29 = new java.util.Properties(properties28);
        java.lang.Object obj31 = properties27.put((java.lang.Object) properties29, (java.lang.Object) (short) 1);
        boolean boolean32 = properties27.isEmpty();
        java.util.Properties properties33 = null;
        java.util.Properties properties34 = new java.util.Properties(properties33);
        java.util.Properties properties35 = new java.util.Properties(properties33);
        boolean boolean36 = properties27.containsKey((java.lang.Object) properties35);
        java.util.Properties properties37 = new java.util.Properties(properties35);
        java.util.Properties properties38 = new java.util.Properties(properties37);
        java.lang.Object obj39 = properties2.put((java.lang.Object) atomikosProperties13, (java.lang.Object) properties37);
        java.lang.String str40 = atomikosProperties13.getLogBaseDir();
        atomikosProperties13.setSerialJtaTransactions(true);
        atomikosProperties13.setTransactionManagerUniqueName("{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=true, com.atomikos.icatch.checkpoint_interval=0, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.tm_unique_name=, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
        org.junit.Assert.assertNull(obj6);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNull(obj31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNull(obj39);
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "hi!" + "'", str40, "hi!");
    }

    @Test
    public void test1721() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1721");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setDefaultJtaTimeout((long) (byte) 10);
        long long3 = atomikosProperties0.getDefaultJtaTimeout();
        atomikosProperties0.setTransactionManagerUniqueName("hi!");
        atomikosProperties0.setLogBaseName("tmlog");
        boolean boolean8 = atomikosProperties0.isSerialJtaTransactions();
        java.util.Properties properties9 = atomikosProperties0.asProperties();
        long long10 = atomikosProperties0.getMaxTimeout();
        java.lang.String str11 = atomikosProperties0.getService();
        atomikosProperties0.setMaxActives(35);
        boolean boolean14 = atomikosProperties0.isForceShutdownOnVmExit();
        org.junit.Assert.assertTrue("'" + long3 + "' != '" + 10L + "'", long3 == 10L);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(properties9);
        org.junit.Assert.assertTrue("'" + long10 + "' != '" + 300000L + "'", long10 == 300000L);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
    }

    @Test
    public void test1722() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1722");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Properties properties2 = new java.util.Properties(properties0);
        java.util.Properties properties3 = null;
        java.util.Properties properties4 = new java.util.Properties(properties3);
        java.lang.Object obj6 = properties2.put((java.lang.Object) properties4, (java.lang.Object) (short) 1);
        java.util.Properties properties7 = new java.util.Properties(properties4);
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet8 = properties4.entrySet();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties9 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties9.setThreadedTwoPhaseCommit(true);
        atomikosProperties9.setMaxActives((int) (byte) 0);
        atomikosProperties9.setEnableLogging(true);
        atomikosProperties9.setMaxActives((int) (byte) 1);
        boolean boolean18 = properties4.containsValue((java.lang.Object) atomikosProperties9);
        java.lang.Object obj19 = properties4.clone();
        java.util.Properties properties20 = null;
        java.util.Properties properties21 = new java.util.Properties(properties20);
        java.util.Properties properties22 = new java.util.Properties(properties20);
        java.util.Properties properties23 = null;
        java.util.Properties properties24 = new java.util.Properties(properties23);
        java.lang.Object obj26 = properties22.put((java.lang.Object) properties24, (java.lang.Object) (short) 1);
        properties24.clear();
        int int28 = properties24.size();
        java.util.Properties properties29 = new java.util.Properties(properties24);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties30 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        int int31 = atomikosProperties30.getMaxActives();
        long long32 = atomikosProperties30.getMaxTimeout();
        java.util.Properties properties33 = atomikosProperties30.asProperties();
        java.util.Properties properties34 = atomikosProperties30.asProperties();
        java.util.Properties properties35 = null;
        java.util.Properties properties36 = new java.util.Properties(properties35);
        java.util.Properties properties37 = new java.util.Properties(properties35);
        java.util.Properties properties38 = null;
        java.util.Properties properties39 = new java.util.Properties(properties38);
        java.lang.Object obj41 = properties37.put((java.lang.Object) properties39, (java.lang.Object) (short) 1);
        java.util.Enumeration<java.lang.Object> objEnumeration42 = properties39.elements();
        java.lang.Object obj43 = properties24.replace((java.lang.Object) atomikosProperties30, (java.lang.Object) properties39);
        java.util.Set<java.lang.String> strSet44 = properties24.stringPropertyNames();
        properties24.clear();
        java.util.Properties properties46 = new java.util.Properties(properties24);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties47 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        boolean boolean48 = atomikosProperties47.isSerialJtaTransactions();
        boolean boolean49 = atomikosProperties47.isForceShutdownOnVmExit();
        java.util.Properties properties50 = atomikosProperties47.asProperties();
        java.lang.Object obj51 = properties4.putIfAbsent((java.lang.Object) properties46, (java.lang.Object) atomikosProperties47);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties52 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties52.setDefaultJtaTimeout((long) (byte) 10);
        long long55 = atomikosProperties52.getDefaultJtaTimeout();
        atomikosProperties52.setTransactionManagerUniqueName("");
        boolean boolean58 = atomikosProperties52.isEnableLogging();
        atomikosProperties52.setDefaultJtaTimeout((long) '4');
        boolean boolean61 = atomikosProperties52.isSerialJtaTransactions();
        java.util.Properties properties62 = atomikosProperties52.asProperties();
        atomikosProperties52.setThreadedTwoPhaseCommit(true);
        java.util.Properties properties65 = atomikosProperties52.asProperties();
        long long66 = atomikosProperties52.getDefaultJtaTimeout();
        boolean boolean67 = properties46.equals((java.lang.Object) long66);
        org.junit.Assert.assertNull(obj6);
        org.junit.Assert.assertNotNull(objEntrySet8);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(obj19);
        org.junit.Assert.assertEquals(obj19.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj19), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj19), "{}");
        org.junit.Assert.assertNull(obj26);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 0 + "'", int28 == 0);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 50 + "'", int31 == 50);
        org.junit.Assert.assertTrue("'" + long32 + "' != '" + 300000L + "'", long32 == 300000L);
        org.junit.Assert.assertNotNull(properties33);
        org.junit.Assert.assertNotNull(properties34);
        org.junit.Assert.assertNull(obj41);
        org.junit.Assert.assertNotNull(objEnumeration42);
        org.junit.Assert.assertNull(obj43);
        org.junit.Assert.assertNotNull(strSet44);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNotNull(properties50);
        org.junit.Assert.assertNull(obj51);
        org.junit.Assert.assertTrue("'" + long55 + "' != '" + 10L + "'", long55 == 10L);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertNotNull(properties62);
        org.junit.Assert.assertNotNull(properties65);
        org.junit.Assert.assertTrue("'" + long66 + "' != '" + 52L + "'", long66 == 52L);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
    }

    @Test
    public void test1723() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1723");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Properties properties2 = new java.util.Properties(properties0);
        java.util.Properties properties3 = null;
        java.util.Properties properties4 = new java.util.Properties(properties3);
        java.lang.Object obj6 = properties2.put((java.lang.Object) properties4, (java.lang.Object) (short) 1);
        java.util.Properties properties8 = null;
        java.util.Properties properties9 = new java.util.Properties(properties8);
        java.util.Properties properties10 = new java.util.Properties(properties8);
        java.util.Properties properties11 = null;
        java.util.Properties properties12 = new java.util.Properties(properties11);
        java.lang.Object obj14 = properties10.put((java.lang.Object) properties12, (java.lang.Object) (short) 1);
        boolean boolean15 = properties4.remove((java.lang.Object) false, (java.lang.Object) (short) 1);
        java.util.Set<java.lang.String> strSet16 = properties4.stringPropertyNames();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties17 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties17.setDefaultJtaTimeout((long) (byte) 10);
        atomikosProperties17.setCheckpointInterval((long) (byte) 0);
        atomikosProperties17.setTransactionManagerUniqueName("");
        boolean boolean24 = atomikosProperties17.isEnableLogging();
        atomikosProperties17.setSerialJtaTransactions(false);
        atomikosProperties17.setLogBaseDir("");
        java.util.Properties properties29 = null;
        java.util.Properties properties30 = new java.util.Properties(properties29);
        java.util.Properties properties31 = new java.util.Properties(properties29);
        java.util.Properties properties32 = null;
        java.util.Properties properties33 = new java.util.Properties(properties32);
        java.lang.Object obj35 = properties31.put((java.lang.Object) properties33, (java.lang.Object) (short) 1);
        java.util.Properties properties36 = new java.util.Properties(properties33);
        boolean boolean37 = properties4.remove((java.lang.Object) "", (java.lang.Object) properties36);
        java.util.Properties properties38 = null;
        java.util.Properties properties39 = new java.util.Properties(properties38);
        java.util.Properties properties40 = new java.util.Properties(properties38);
        java.lang.Object obj41 = properties40.clone();
        boolean boolean42 = properties4.contains(obj41);
        java.util.Collection<java.lang.Object> objCollection43 = properties4.values();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties44 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties44.setDefaultJtaTimeout((long) (byte) 10);
        atomikosProperties44.setCheckpointInterval((long) (byte) 0);
        atomikosProperties44.setTransactionManagerUniqueName("");
        java.util.Properties properties51 = atomikosProperties44.asProperties();
        java.lang.String str52 = atomikosProperties44.getLogBaseName();
        atomikosProperties44.setCheckpointInterval(100L);
        java.lang.String str55 = atomikosProperties44.getTransactionManagerUniqueName();
        atomikosProperties44.setLogBaseName("{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.tm_unique_name=, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
        atomikosProperties44.setThreadedTwoPhaseCommit(true);
        atomikosProperties44.setEnableLogging(false);
        java.lang.Object obj62 = properties4.get((java.lang.Object) atomikosProperties44);
        java.util.Properties properties63 = atomikosProperties44.asProperties();
        java.util.Properties properties64 = atomikosProperties44.asProperties();
        boolean boolean65 = properties64.isEmpty();
        java.util.Properties properties66 = null;
        java.util.Properties properties67 = new java.util.Properties(properties66);
        java.util.Properties properties68 = new java.util.Properties(properties66);
        boolean boolean70 = properties68.containsValue((java.lang.Object) (short) 100);
        java.util.Properties properties71 = new java.util.Properties(properties68);
        java.lang.String str73 = properties71.getProperty("hi!");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties74 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties74.setDefaultJtaTimeout((long) (byte) 10);
        long long77 = atomikosProperties74.getDefaultJtaTimeout();
        atomikosProperties74.setTransactionManagerUniqueName("hi!");
        atomikosProperties74.setLogBaseName("tmlog");
        boolean boolean82 = atomikosProperties74.isSerialJtaTransactions();
        java.util.Properties properties83 = atomikosProperties74.asProperties();
        boolean boolean84 = properties71.equals((java.lang.Object) atomikosProperties74);
        java.util.Enumeration<java.lang.Object> objEnumeration85 = properties71.elements();
        java.util.Properties properties86 = new java.util.Properties(properties71);
        properties64.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties71);
        java.util.Enumeration<java.lang.Object> objEnumeration88 = properties71.elements();
        org.junit.Assert.assertNull(obj6);
        org.junit.Assert.assertNull(obj14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(strSet16);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNull(obj35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(obj41);
        org.junit.Assert.assertEquals(obj41.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj41), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj41), "{}");
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(objCollection43);
        org.junit.Assert.assertNotNull(properties51);
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "tmlog" + "'", str52, "tmlog");
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "" + "'", str55, "");
        org.junit.Assert.assertNull(obj62);
        org.junit.Assert.assertNotNull(properties63);
        org.junit.Assert.assertNotNull(properties64);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertNull(str73);
        org.junit.Assert.assertTrue("'" + long77 + "' != '" + 10L + "'", long77 == 10L);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + true + "'", boolean82 == true);
        org.junit.Assert.assertNotNull(properties83);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + false + "'", boolean84 == false);
        org.junit.Assert.assertNotNull(objEnumeration85);
        org.junit.Assert.assertNotNull(objEnumeration88);
    }

    @Test
    public void test1724() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1724");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        int int1 = atomikosProperties0.getMaxActives();
        java.util.Properties properties2 = atomikosProperties0.asProperties();
        java.util.Properties properties3 = null;
        java.util.Properties properties4 = new java.util.Properties(properties3);
        java.util.Properties properties5 = new java.util.Properties(properties3);
        boolean boolean7 = properties5.containsValue((java.lang.Object) (short) 100);
        java.util.Properties properties8 = null;
        java.util.Properties properties9 = new java.util.Properties(properties8);
        java.util.Properties properties10 = new java.util.Properties(properties8);
        java.util.Properties properties11 = null;
        java.util.Properties properties12 = new java.util.Properties(properties11);
        java.lang.Object obj14 = properties10.put((java.lang.Object) properties12, (java.lang.Object) (short) 1);
        java.util.Enumeration<java.lang.Object> objEnumeration15 = properties12.elements();
        java.lang.Object obj16 = properties5.remove((java.lang.Object) properties12);
        java.util.Properties properties17 = null;
        java.util.Properties properties18 = new java.util.Properties(properties17);
        java.util.Properties properties19 = new java.util.Properties(properties17);
        java.util.Properties properties20 = null;
        java.util.Properties properties21 = new java.util.Properties(properties20);
        java.lang.Object obj23 = properties19.put((java.lang.Object) properties21, (java.lang.Object) (short) 1);
        java.util.Enumeration<java.lang.Object> objEnumeration24 = properties21.elements();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet25 = properties21.entrySet();
        java.util.Set<java.lang.Object> objSet26 = properties21.keySet();
        java.util.Properties properties27 = null;
        java.util.Properties properties28 = new java.util.Properties(properties27);
        java.util.Properties properties29 = new java.util.Properties(properties27);
        java.util.Properties properties30 = null;
        java.util.Properties properties31 = new java.util.Properties(properties30);
        java.lang.Object obj33 = properties29.put((java.lang.Object) properties31, (java.lang.Object) (short) 1);
        properties31.clear();
        int int35 = properties31.size();
        java.util.Properties properties36 = new java.util.Properties(properties31);
        java.util.Properties properties37 = null;
        java.util.Properties properties38 = new java.util.Properties(properties37);
        java.util.Properties properties39 = new java.util.Properties(properties37);
        java.util.Properties properties40 = null;
        java.util.Properties properties41 = new java.util.Properties(properties40);
        java.lang.Object obj43 = properties39.put((java.lang.Object) properties41, (java.lang.Object) (short) 1);
        properties41.clear();
        java.lang.String str46 = properties41.getProperty("");
        java.util.Properties properties47 = null;
        java.util.Properties properties48 = new java.util.Properties(properties47);
        java.util.Properties properties49 = new java.util.Properties(properties47);
        java.util.Properties properties50 = null;
        java.util.Properties properties51 = new java.util.Properties(properties50);
        java.lang.Object obj53 = properties49.put((java.lang.Object) properties51, (java.lang.Object) (short) 1);
        properties41.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties49);
        java.lang.Object obj55 = properties21.put((java.lang.Object) properties31, (java.lang.Object) properties49);
        java.util.Properties properties56 = null;
        java.util.Properties properties57 = new java.util.Properties(properties56);
        java.util.Properties properties58 = new java.util.Properties(properties56);
        java.util.Properties properties59 = null;
        java.util.Properties properties60 = new java.util.Properties(properties59);
        java.lang.Object obj62 = properties58.put((java.lang.Object) properties60, (java.lang.Object) (short) 1);
        java.util.Properties properties63 = new java.util.Properties(properties60);
        java.util.Properties properties64 = new java.util.Properties(properties60);
        java.util.Set<java.lang.Object> objSet65 = properties64.keySet();
        java.lang.Object obj66 = properties5.replace((java.lang.Object) properties21, (java.lang.Object) objSet65);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties67 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        int int68 = atomikosProperties67.getMaxActives();
        long long69 = atomikosProperties67.getMaxTimeout();
        java.util.Properties properties70 = atomikosProperties67.asProperties();
        atomikosProperties67.setService("hi!");
        boolean boolean73 = properties2.remove((java.lang.Object) properties5, (java.lang.Object) "hi!");
        java.lang.Object obj74 = properties2.clone();
        boolean boolean75 = properties2.isEmpty();
        java.lang.Class<?> wildcardClass76 = properties2.getClass();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 50 + "'", int1 == 50);
        org.junit.Assert.assertNotNull(properties2);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNull(obj14);
        org.junit.Assert.assertNotNull(objEnumeration15);
        org.junit.Assert.assertNull(obj16);
        org.junit.Assert.assertNull(obj23);
        org.junit.Assert.assertNotNull(objEnumeration24);
        org.junit.Assert.assertNotNull(objEntrySet25);
        org.junit.Assert.assertNotNull(objSet26);
        org.junit.Assert.assertNull(obj33);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 0 + "'", int35 == 0);
        org.junit.Assert.assertNull(obj43);
        org.junit.Assert.assertNull(str46);
        org.junit.Assert.assertNull(obj53);
        org.junit.Assert.assertNull(obj55);
        org.junit.Assert.assertNull(obj62);
        org.junit.Assert.assertNotNull(objSet65);
        org.junit.Assert.assertNull(obj66);
        org.junit.Assert.assertTrue("'" + int68 + "' != '" + 50 + "'", int68 == 50);
        org.junit.Assert.assertTrue("'" + long69 + "' != '" + 300000L + "'", long69 == 300000L);
        org.junit.Assert.assertNotNull(properties70);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertNotNull(obj74);
// flaky:         org.junit.Assert.assertEquals(obj74.toString(), "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
// flaky:         org.junit.Assert.assertEquals(java.lang.String.valueOf(obj74), "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
// flaky:         org.junit.Assert.assertEquals(java.util.Objects.toString(obj74), "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
        org.junit.Assert.assertNotNull(wildcardClass76);
    }

    @Test
    public void test1725() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1725");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setDefaultJtaTimeout((long) (byte) 10);
        atomikosProperties0.setCheckpointInterval((long) (byte) 0);
        atomikosProperties0.setTransactionManagerUniqueName("");
        java.util.Properties properties7 = atomikosProperties0.asProperties();
        java.util.Properties properties8 = atomikosProperties0.asProperties();
        atomikosProperties0.setEnableLogging(false);
        org.junit.Assert.assertNotNull(properties7);
        org.junit.Assert.assertNotNull(properties8);
    }

    @Test
    public void test1726() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1726");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setThreadedTwoPhaseCommit(true);
        atomikosProperties0.setMaxActives((int) (byte) 0);
        java.lang.String str5 = atomikosProperties0.getLogBaseDir();
        int int6 = atomikosProperties0.getMaxActives();
        boolean boolean7 = atomikosProperties0.isForceShutdownOnVmExit();
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
    }

    @Test
    public void test1727() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1727");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Properties properties2 = new java.util.Properties(properties0);
        java.util.Properties properties3 = null;
        java.util.Properties properties4 = new java.util.Properties(properties3);
        java.lang.Object obj6 = properties2.put((java.lang.Object) properties4, (java.lang.Object) (short) 1);
        boolean boolean7 = properties2.isEmpty();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties8 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties8.setDefaultJtaTimeout((long) (byte) 10);
        atomikosProperties8.setCheckpointInterval((long) (byte) 0);
        atomikosProperties8.setTransactionManagerUniqueName("");
        java.util.Properties properties15 = atomikosProperties8.asProperties();
        java.lang.Object obj16 = properties2.remove((java.lang.Object) properties15);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties17 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties17.setDefaultJtaTimeout((long) (byte) 10);
        atomikosProperties17.setCheckpointInterval((long) (byte) 0);
        atomikosProperties17.setTransactionManagerUniqueName("");
        java.lang.Object obj24 = properties15.remove((java.lang.Object) atomikosProperties17);
        java.util.Properties properties25 = null;
        java.util.Properties properties26 = new java.util.Properties(properties25);
        java.util.Properties properties27 = new java.util.Properties(properties25);
        java.util.Properties properties28 = null;
        java.util.Properties properties29 = new java.util.Properties(properties28);
        java.lang.Object obj31 = properties27.put((java.lang.Object) properties29, (java.lang.Object) (short) 1);
        java.util.Enumeration<java.lang.Object> objEnumeration32 = properties29.elements();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet33 = properties29.entrySet();
        java.util.Set<java.lang.Object> objSet34 = properties29.keySet();
        java.util.Properties properties35 = null;
        java.util.Properties properties36 = new java.util.Properties(properties35);
        java.util.Properties properties37 = new java.util.Properties(properties35);
        java.util.Properties properties38 = null;
        java.util.Properties properties39 = new java.util.Properties(properties38);
        java.lang.Object obj41 = properties37.put((java.lang.Object) properties39, (java.lang.Object) (short) 1);
        properties39.clear();
        int int43 = properties39.size();
        java.util.Properties properties44 = new java.util.Properties(properties39);
        java.util.Properties properties45 = null;
        java.util.Properties properties46 = new java.util.Properties(properties45);
        java.util.Properties properties47 = new java.util.Properties(properties45);
        java.util.Properties properties48 = null;
        java.util.Properties properties49 = new java.util.Properties(properties48);
        java.lang.Object obj51 = properties47.put((java.lang.Object) properties49, (java.lang.Object) (short) 1);
        properties49.clear();
        java.lang.String str54 = properties49.getProperty("");
        java.util.Properties properties55 = null;
        java.util.Properties properties56 = new java.util.Properties(properties55);
        java.util.Properties properties57 = new java.util.Properties(properties55);
        java.util.Properties properties58 = null;
        java.util.Properties properties59 = new java.util.Properties(properties58);
        java.lang.Object obj61 = properties57.put((java.lang.Object) properties59, (java.lang.Object) (short) 1);
        properties49.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties57);
        java.lang.Object obj63 = properties29.put((java.lang.Object) properties39, (java.lang.Object) properties57);
        java.util.Enumeration<java.lang.Object> objEnumeration64 = properties39.elements();
        java.lang.Object obj66 = properties15.put((java.lang.Object) properties39, (java.lang.Object) "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=0, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.tm_unique_name=, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
        java.util.Collection<java.lang.Object> objCollection67 = properties15.values();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties68 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties68.setThreadedTwoPhaseCommit(true);
        java.lang.String str71 = atomikosProperties68.getService();
        boolean boolean72 = atomikosProperties68.isSerialJtaTransactions();
        boolean boolean73 = atomikosProperties68.isEnableLogging();
        int int74 = atomikosProperties68.getMaxActives();
        boolean boolean75 = properties15.containsValue((java.lang.Object) int74);
        org.junit.Assert.assertNull(obj6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(properties15);
        org.junit.Assert.assertNull(obj16);
        org.junit.Assert.assertNull(obj24);
        org.junit.Assert.assertNull(obj31);
        org.junit.Assert.assertNotNull(objEnumeration32);
        org.junit.Assert.assertNotNull(objEntrySet33);
        org.junit.Assert.assertNotNull(objSet34);
        org.junit.Assert.assertNull(obj41);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 0 + "'", int43 == 0);
        org.junit.Assert.assertNull(obj51);
        org.junit.Assert.assertNull(str54);
        org.junit.Assert.assertNull(obj61);
        org.junit.Assert.assertNull(obj63);
        org.junit.Assert.assertNotNull(objEnumeration64);
        org.junit.Assert.assertNull(obj66);
        org.junit.Assert.assertNotNull(objCollection67);
        org.junit.Assert.assertNull(str71);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + true + "'", boolean72 == true);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + true + "'", boolean73 == true);
        org.junit.Assert.assertTrue("'" + int74 + "' != '" + 50 + "'", int74 == 50);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
    }

    @Test
    public void test1728() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1728");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Properties properties2 = new java.util.Properties(properties0);
        java.util.Properties properties3 = null;
        java.util.Properties properties4 = new java.util.Properties(properties3);
        java.lang.Object obj6 = properties2.put((java.lang.Object) properties4, (java.lang.Object) (short) 1);
        properties4.clear();
        int int8 = properties4.size();
        java.util.Properties properties9 = null;
        java.util.Properties properties10 = new java.util.Properties(properties9);
        java.util.Properties properties11 = new java.util.Properties(properties9);
        java.util.Properties properties12 = null;
        java.util.Properties properties13 = new java.util.Properties(properties12);
        java.lang.Object obj15 = properties11.put((java.lang.Object) properties13, (java.lang.Object) (short) 1);
        java.util.Properties properties16 = new java.util.Properties(properties13);
        java.util.Properties properties17 = new java.util.Properties(properties13);
        boolean boolean19 = properties4.remove((java.lang.Object) properties13, (java.lang.Object) 10.0f);
        java.util.Enumeration<java.lang.Object> objEnumeration20 = properties13.elements();
        java.util.Properties properties21 = new java.util.Properties(properties13);
        java.util.Properties properties22 = new java.util.Properties(properties21);
        java.util.Set<java.lang.Object> objSet23 = properties21.keySet();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties24 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties24.setThreadedTwoPhaseCommit(true);
        atomikosProperties24.setMaxActives((int) (byte) 0);
        atomikosProperties24.setForceShutdownOnVmExit(false);
        atomikosProperties24.setLogBaseName("{tmlog={com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=0, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.tm_unique_name=, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}, 4=true}");
        atomikosProperties24.setSerialJtaTransactions(true);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties35 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties35.setThreadedTwoPhaseCommit(true);
        atomikosProperties35.setMaxActives((int) '#');
        atomikosProperties35.setEnableLogging(true);
        int int42 = atomikosProperties35.getMaxActives();
        boolean boolean43 = atomikosProperties35.isEnableLogging();
        long long44 = atomikosProperties35.getCheckpointInterval();
        java.lang.Object obj45 = properties21.replace((java.lang.Object) atomikosProperties24, (java.lang.Object) atomikosProperties35);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties46 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        int int47 = atomikosProperties46.getMaxActives();
        long long48 = atomikosProperties46.getMaxTimeout();
        java.lang.String str49 = atomikosProperties46.getLogBaseDir();
        java.lang.String str50 = atomikosProperties46.getTransactionManagerUniqueName();
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean51 = properties21.containsValue((java.lang.Object) str50);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(obj6);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertNull(obj15);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(objEnumeration20);
        org.junit.Assert.assertNotNull(objSet23);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 35 + "'", int42 == 35);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertTrue("'" + long44 + "' != '" + 500L + "'", long44 == 500L);
        org.junit.Assert.assertNull(obj45);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 50 + "'", int47 == 50);
        org.junit.Assert.assertTrue("'" + long48 + "' != '" + 300000L + "'", long48 == 300000L);
        org.junit.Assert.assertNull(str49);
        org.junit.Assert.assertNull(str50);
    }

    @Test
    public void test1729() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1729");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Properties properties2 = new java.util.Properties(properties0);
        java.util.Properties properties3 = null;
        java.util.Properties properties4 = new java.util.Properties(properties3);
        java.lang.Object obj6 = properties2.put((java.lang.Object) properties4, (java.lang.Object) (short) 1);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties7 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties7.setThreadedTwoPhaseCommit(true);
        atomikosProperties7.setMaxActives((int) (byte) 0);
        boolean boolean12 = properties2.containsValue((java.lang.Object) atomikosProperties7);
        java.util.Properties properties13 = atomikosProperties7.asProperties();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties14 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties14.setThreadedTwoPhaseCommit(true);
        boolean boolean17 = atomikosProperties14.isEnableLogging();
        boolean boolean18 = atomikosProperties14.isEnableLogging();
        java.lang.Object obj19 = properties13.get((java.lang.Object) boolean18);
        org.junit.Assert.assertNull(obj6);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(properties13);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNull(obj19);
    }

    @Test
    public void test1730() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1730");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setDefaultJtaTimeout((long) (byte) 10);
        long long3 = atomikosProperties0.getDefaultJtaTimeout();
        atomikosProperties0.setTransactionManagerUniqueName("");
        boolean boolean6 = atomikosProperties0.isEnableLogging();
        atomikosProperties0.setDefaultJtaTimeout((long) '4');
        boolean boolean9 = atomikosProperties0.isSerialJtaTransactions();
        atomikosProperties0.setForceShutdownOnVmExit(false);
        atomikosProperties0.setLogBaseDir("{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=0, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog, {}={}}");
        java.lang.String str14 = atomikosProperties0.getLogBaseDir();
        org.junit.Assert.assertTrue("'" + long3 + "' != '" + 10L + "'", long3 == 10L);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=0, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog, {}={}}" + "'", str14, "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=0, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog, {}={}}");
    }

    @Test
    public void test1731() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1731");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setDefaultJtaTimeout((long) (byte) 10);
        atomikosProperties0.setCheckpointInterval((long) (byte) 0);
        atomikosProperties0.setTransactionManagerUniqueName("");
        java.util.Properties properties7 = atomikosProperties0.asProperties();
        java.lang.String str8 = atomikosProperties0.getLogBaseName();
        atomikosProperties0.setCheckpointInterval(100L);
        atomikosProperties0.setLogBaseName("");
        atomikosProperties0.setCheckpointInterval((long) (byte) 1);
        boolean boolean15 = atomikosProperties0.isSerialJtaTransactions();
        java.lang.String str16 = atomikosProperties0.getLogBaseDir();
        java.lang.String str17 = atomikosProperties0.getLogBaseName();
        java.lang.String str18 = atomikosProperties0.getLogBaseDir();
        java.lang.String str19 = atomikosProperties0.getLogBaseName();
        java.lang.String str20 = atomikosProperties0.getLogBaseName();
        org.junit.Assert.assertNotNull(properties7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "tmlog" + "'", str8, "tmlog");
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNull(str16);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "" + "'", str17, "");
        org.junit.Assert.assertNull(str18);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "" + "'", str19, "");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "" + "'", str20, "");
    }

    @Test
    public void test1732() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1732");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Properties properties2 = new java.util.Properties(properties0);
        java.util.Properties properties3 = null;
        java.util.Properties properties4 = new java.util.Properties(properties3);
        java.lang.Object obj6 = properties2.put((java.lang.Object) properties4, (java.lang.Object) (short) 1);
        properties4.clear();
        int int8 = properties4.size();
        java.util.Properties properties9 = null;
        java.util.Properties properties10 = new java.util.Properties(properties9);
        java.util.Properties properties11 = new java.util.Properties(properties9);
        java.util.Properties properties12 = null;
        java.util.Properties properties13 = new java.util.Properties(properties12);
        java.lang.Object obj15 = properties11.put((java.lang.Object) properties13, (java.lang.Object) (short) 1);
        java.util.Properties properties16 = new java.util.Properties(properties13);
        java.util.Properties properties17 = new java.util.Properties(properties13);
        boolean boolean19 = properties4.remove((java.lang.Object) properties13, (java.lang.Object) 10.0f);
        java.util.Enumeration<java.lang.Object> objEnumeration20 = properties13.elements();
        java.util.Properties properties21 = new java.util.Properties(properties13);
        boolean boolean23 = properties13.contains((java.lang.Object) (byte) 100);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties24 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        int int25 = atomikosProperties24.getMaxActives();
        atomikosProperties24.setLogBaseName("");
        atomikosProperties24.setMaxActives((-1));
        java.lang.Object obj30 = properties13.remove((java.lang.Object) atomikosProperties24);
        java.util.Properties properties31 = null;
        java.util.Properties properties32 = new java.util.Properties(properties31);
        java.util.Properties properties33 = new java.util.Properties(properties31);
        java.util.Properties properties34 = null;
        java.util.Properties properties35 = new java.util.Properties(properties34);
        java.lang.Object obj37 = properties33.put((java.lang.Object) properties35, (java.lang.Object) (short) 1);
        java.util.Properties properties39 = null;
        java.util.Properties properties40 = new java.util.Properties(properties39);
        java.util.Properties properties41 = new java.util.Properties(properties39);
        java.util.Properties properties42 = null;
        java.util.Properties properties43 = new java.util.Properties(properties42);
        java.lang.Object obj45 = properties41.put((java.lang.Object) properties43, (java.lang.Object) (short) 1);
        boolean boolean46 = properties35.remove((java.lang.Object) false, (java.lang.Object) (short) 1);
        java.lang.Object obj48 = properties35.remove((java.lang.Object) '#');
        java.util.Set<java.lang.Object> objSet49 = properties35.keySet();
        properties35.clear();
        java.lang.String str51 = properties35.toString();
        java.util.Properties properties52 = null;
        java.util.Properties properties53 = new java.util.Properties(properties52);
        java.util.Properties properties54 = new java.util.Properties(properties52);
        java.util.Properties properties55 = null;
        java.util.Properties properties56 = new java.util.Properties(properties55);
        java.lang.Object obj58 = properties54.put((java.lang.Object) properties56, (java.lang.Object) (short) 1);
        boolean boolean59 = properties54.isEmpty();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties60 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties60.setDefaultJtaTimeout((long) (byte) 10);
        atomikosProperties60.setCheckpointInterval((long) (byte) 0);
        atomikosProperties60.setTransactionManagerUniqueName("");
        java.util.Properties properties67 = atomikosProperties60.asProperties();
        java.lang.Object obj68 = properties54.remove((java.lang.Object) properties67);
        java.lang.Object obj69 = properties13.replace((java.lang.Object) properties35, (java.lang.Object) properties54);
        java.util.Set<java.lang.String> strSet70 = properties35.stringPropertyNames();
        java.lang.Object obj71 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj72 = properties35.remove(obj71);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(obj6);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertNull(obj15);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(objEnumeration20);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 50 + "'", int25 == 50);
        org.junit.Assert.assertNull(obj30);
        org.junit.Assert.assertNull(obj37);
        org.junit.Assert.assertNull(obj45);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNull(obj48);
        org.junit.Assert.assertNotNull(objSet49);
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "{}" + "'", str51, "{}");
        org.junit.Assert.assertNull(obj58);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertNotNull(properties67);
        org.junit.Assert.assertNull(obj68);
        org.junit.Assert.assertNull(obj69);
        org.junit.Assert.assertNotNull(strSet70);
    }

    @Test
    public void test1733() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1733");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        boolean boolean1 = atomikosProperties0.isForceShutdownOnVmExit();
        java.util.Properties properties2 = atomikosProperties0.asProperties();
        java.util.Properties properties3 = null;
        java.util.Properties properties4 = new java.util.Properties(properties3);
        java.util.Properties properties5 = new java.util.Properties(properties3);
        java.util.Properties properties6 = null;
        java.util.Properties properties7 = new java.util.Properties(properties6);
        java.lang.Object obj9 = properties5.put((java.lang.Object) properties7, (java.lang.Object) (short) 1);
        properties7.clear();
        int int11 = properties7.size();
        java.util.Properties properties12 = null;
        java.util.Properties properties13 = new java.util.Properties(properties12);
        java.util.Properties properties14 = new java.util.Properties(properties12);
        java.util.Properties properties15 = null;
        java.util.Properties properties16 = new java.util.Properties(properties15);
        java.lang.Object obj18 = properties14.put((java.lang.Object) properties16, (java.lang.Object) (short) 1);
        java.util.Properties properties19 = new java.util.Properties(properties16);
        java.util.Properties properties20 = new java.util.Properties(properties16);
        boolean boolean22 = properties7.remove((java.lang.Object) properties16, (java.lang.Object) 10.0f);
        boolean boolean23 = properties2.containsKey((java.lang.Object) 10.0f);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties25 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties25.setDefaultJtaTimeout((long) (byte) 10);
        atomikosProperties25.setCheckpointInterval((long) (byte) 0);
        atomikosProperties25.setEnableLogging(true);
        java.lang.Object obj32 = properties2.getOrDefault((java.lang.Object) (byte) 0, (java.lang.Object) true);
        java.util.Properties properties33 = new java.util.Properties(properties2);
        java.util.Properties properties34 = new java.util.Properties(properties2);
        java.util.Properties properties35 = null;
        java.util.Properties properties36 = new java.util.Properties(properties35);
        java.util.Properties properties37 = new java.util.Properties(properties35);
        java.util.Properties properties38 = null;
        java.util.Properties properties39 = new java.util.Properties(properties38);
        java.lang.Object obj41 = properties37.put((java.lang.Object) properties39, (java.lang.Object) (short) 1);
        boolean boolean42 = properties37.isEmpty();
        java.util.Properties properties43 = null;
        java.util.Properties properties44 = new java.util.Properties(properties43);
        java.util.Properties properties45 = new java.util.Properties(properties43);
        boolean boolean46 = properties37.containsKey((java.lang.Object) properties45);
        java.util.Properties properties47 = new java.util.Properties(properties37);
        properties2.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties47);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties49 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties49.setDefaultJtaTimeout((long) (byte) 10);
        atomikosProperties49.setCheckpointInterval((long) (byte) 0);
        atomikosProperties49.setTransactionManagerUniqueName("");
        java.util.Properties properties56 = atomikosProperties49.asProperties();
        java.lang.String str57 = atomikosProperties49.getLogBaseName();
        java.util.Properties properties58 = atomikosProperties49.asProperties();
        atomikosProperties49.setEnableLogging(true);
        atomikosProperties49.setForceShutdownOnVmExit(false);
        long long63 = atomikosProperties49.getMaxTimeout();
        java.lang.String str64 = atomikosProperties49.getLogBaseName();
        boolean boolean65 = atomikosProperties49.isEnableLogging();
        java.lang.Object obj66 = properties2.remove((java.lang.Object) boolean65);
        boolean boolean67 = properties2.isEmpty();
        java.io.OutputStream outputStream68 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties2.store(outputStream68, "tmlog");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertNotNull(properties2);
        org.junit.Assert.assertNull(obj9);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertNull(obj18);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertEquals("'" + obj32 + "' != '" + true + "'", obj32, true);
        org.junit.Assert.assertNull(obj41);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertNotNull(properties56);
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "tmlog" + "'", str57, "tmlog");
        org.junit.Assert.assertNotNull(properties58);
        org.junit.Assert.assertTrue("'" + long63 + "' != '" + 300000L + "'", long63 == 300000L);
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "tmlog" + "'", str64, "tmlog");
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65 == true);
        org.junit.Assert.assertNull(obj66);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
    }

    @Test
    public void test1734() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1734");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setDefaultJtaTimeout((long) (byte) 10);
        atomikosProperties0.setCheckpointInterval((long) (byte) 0);
        long long5 = atomikosProperties0.getMaxTimeout();
        atomikosProperties0.setLogBaseName("");
        long long8 = atomikosProperties0.getDefaultJtaTimeout();
        long long9 = atomikosProperties0.getMaxTimeout();
        java.util.Properties properties10 = atomikosProperties0.asProperties();
        atomikosProperties0.setMaxActives((int) (byte) 10);
        org.junit.Assert.assertTrue("'" + long5 + "' != '" + 300000L + "'", long5 == 300000L);
        org.junit.Assert.assertTrue("'" + long8 + "' != '" + 10L + "'", long8 == 10L);
        org.junit.Assert.assertTrue("'" + long9 + "' != '" + 300000L + "'", long9 == 300000L);
        org.junit.Assert.assertNotNull(properties10);
    }

    @Test
    public void test1735() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1735");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        int int1 = atomikosProperties0.getMaxActives();
        long long2 = atomikosProperties0.getMaxTimeout();
        java.util.Properties properties3 = atomikosProperties0.asProperties();
        java.util.Properties properties4 = null;
        java.util.Properties properties5 = new java.util.Properties(properties4);
        java.util.Properties properties6 = new java.util.Properties(properties4);
        java.util.Properties properties7 = null;
        java.util.Properties properties8 = new java.util.Properties(properties7);
        java.lang.Object obj10 = properties6.put((java.lang.Object) properties8, (java.lang.Object) (short) 1);
        java.util.Properties properties11 = new java.util.Properties(properties8);
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet12 = properties8.entrySet();
        java.lang.Object obj13 = properties3.remove((java.lang.Object) properties8);
        java.io.PrintStream printStream14 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties8.list(printStream14);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 50 + "'", int1 == 50);
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + 300000L + "'", long2 == 300000L);
        org.junit.Assert.assertNotNull(properties3);
        org.junit.Assert.assertNull(obj10);
        org.junit.Assert.assertNotNull(objEntrySet12);
        org.junit.Assert.assertNull(obj13);
    }

    @Test
    public void test1736() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1736");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Properties properties2 = new java.util.Properties(properties0);
        java.util.Properties properties3 = null;
        java.util.Properties properties4 = new java.util.Properties(properties3);
        java.lang.Object obj6 = properties2.put((java.lang.Object) properties4, (java.lang.Object) (short) 1);
        java.util.Properties properties8 = null;
        java.util.Properties properties9 = new java.util.Properties(properties8);
        java.util.Properties properties10 = new java.util.Properties(properties8);
        java.util.Properties properties11 = null;
        java.util.Properties properties12 = new java.util.Properties(properties11);
        java.lang.Object obj14 = properties10.put((java.lang.Object) properties12, (java.lang.Object) (short) 1);
        boolean boolean15 = properties4.remove((java.lang.Object) false, (java.lang.Object) (short) 1);
        java.util.Properties properties16 = new java.util.Properties(properties4);
        java.util.Properties properties17 = new java.util.Properties(properties4);
        java.util.Set<java.lang.String> strSet18 = properties4.stringPropertyNames();
        java.util.Properties properties19 = new java.util.Properties(properties4);
        java.io.OutputStream outputStream20 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties19.save(outputStream20, "{{tmlog={com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=0, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.tm_unique_name=, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}, 4=true}={com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=0, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog, {}={}}}");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(obj6);
        org.junit.Assert.assertNull(obj14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(strSet18);
    }

    @Test
    public void test1737() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1737");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Properties properties2 = new java.util.Properties(properties0);
        java.util.Properties properties3 = null;
        java.util.Properties properties4 = new java.util.Properties(properties3);
        java.lang.Object obj6 = properties2.put((java.lang.Object) properties4, (java.lang.Object) (short) 1);
        java.util.Enumeration<java.lang.Object> objEnumeration7 = properties4.elements();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet8 = properties4.entrySet();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties9 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties9.setDefaultJtaTimeout((long) (byte) 10);
        long long12 = atomikosProperties9.getDefaultJtaTimeout();
        atomikosProperties9.setTransactionManagerUniqueName("");
        boolean boolean15 = atomikosProperties9.isEnableLogging();
        boolean boolean16 = properties4.containsKey((java.lang.Object) boolean15);
        java.util.Properties properties17 = null;
        java.util.Properties properties18 = new java.util.Properties(properties17);
        java.util.Properties properties19 = new java.util.Properties(properties17);
        java.util.Properties properties20 = null;
        java.util.Properties properties21 = new java.util.Properties(properties20);
        java.lang.Object obj23 = properties19.put((java.lang.Object) properties21, (java.lang.Object) (short) 1);
        java.util.Properties properties25 = null;
        java.util.Properties properties26 = new java.util.Properties(properties25);
        java.util.Properties properties27 = new java.util.Properties(properties25);
        java.util.Properties properties28 = null;
        java.util.Properties properties29 = new java.util.Properties(properties28);
        java.lang.Object obj31 = properties27.put((java.lang.Object) properties29, (java.lang.Object) (short) 1);
        boolean boolean32 = properties21.remove((java.lang.Object) false, (java.lang.Object) (short) 1);
        java.util.Set<java.lang.String> strSet33 = properties21.stringPropertyNames();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties34 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties34.setThreadedTwoPhaseCommit(true);
        atomikosProperties34.setMaxActives((int) (byte) 0);
        atomikosProperties34.setEnableLogging(true);
        atomikosProperties34.setForceShutdownOnVmExit(false);
        java.lang.Object obj43 = properties21.get((java.lang.Object) false);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties44 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties44.setDefaultJtaTimeout((long) (byte) 10);
        atomikosProperties44.setCheckpointInterval((long) (byte) 0);
        atomikosProperties44.setTransactionManagerUniqueName("");
        java.util.Properties properties51 = atomikosProperties44.asProperties();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties52 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties52.setThreadedTwoPhaseCommit(true);
        atomikosProperties52.setMaxActives((int) '#');
        atomikosProperties52.setForceShutdownOnVmExit(true);
        java.lang.String str59 = atomikosProperties52.getLogBaseDir();
        java.lang.Object obj60 = properties51.remove((java.lang.Object) atomikosProperties52);
        java.util.Collection<java.lang.Object> objCollection61 = properties51.values();
        boolean boolean62 = properties4.remove((java.lang.Object) false, (java.lang.Object) properties51);
        java.util.Properties properties63 = new java.util.Properties(properties51);
        java.util.Set<java.lang.Object> objSet64 = properties63.keySet();
        org.junit.Assert.assertNull(obj6);
        org.junit.Assert.assertNotNull(objEnumeration7);
        org.junit.Assert.assertNotNull(objEntrySet8);
        org.junit.Assert.assertTrue("'" + long12 + "' != '" + 10L + "'", long12 == 10L);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNull(obj23);
        org.junit.Assert.assertNull(obj31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(strSet33);
        org.junit.Assert.assertNull(obj43);
        org.junit.Assert.assertNotNull(properties51);
        org.junit.Assert.assertNull(str59);
        org.junit.Assert.assertNull(obj60);
        org.junit.Assert.assertNotNull(objCollection61);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertNotNull(objSet64);
    }

    @Test
    public void test1738() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1738");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Properties properties2 = new java.util.Properties(properties0);
        java.util.Properties properties3 = null;
        java.util.Properties properties4 = new java.util.Properties(properties3);
        java.lang.Object obj6 = properties2.put((java.lang.Object) properties4, (java.lang.Object) (short) 1);
        java.util.Properties properties8 = null;
        java.util.Properties properties9 = new java.util.Properties(properties8);
        java.util.Properties properties10 = new java.util.Properties(properties8);
        java.util.Properties properties11 = null;
        java.util.Properties properties12 = new java.util.Properties(properties11);
        java.lang.Object obj14 = properties10.put((java.lang.Object) properties12, (java.lang.Object) (short) 1);
        boolean boolean15 = properties4.remove((java.lang.Object) false, (java.lang.Object) (short) 1);
        java.util.Set<java.lang.String> strSet16 = properties4.stringPropertyNames();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties17 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties17.setDefaultJtaTimeout((long) (byte) 10);
        atomikosProperties17.setCheckpointInterval((long) (byte) 0);
        atomikosProperties17.setTransactionManagerUniqueName("");
        boolean boolean24 = atomikosProperties17.isEnableLogging();
        atomikosProperties17.setSerialJtaTransactions(false);
        atomikosProperties17.setLogBaseDir("");
        java.util.Properties properties29 = null;
        java.util.Properties properties30 = new java.util.Properties(properties29);
        java.util.Properties properties31 = new java.util.Properties(properties29);
        java.util.Properties properties32 = null;
        java.util.Properties properties33 = new java.util.Properties(properties32);
        java.lang.Object obj35 = properties31.put((java.lang.Object) properties33, (java.lang.Object) (short) 1);
        java.util.Properties properties36 = new java.util.Properties(properties33);
        boolean boolean37 = properties4.remove((java.lang.Object) "", (java.lang.Object) properties36);
        java.lang.String str39 = properties4.getProperty("{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.tm_unique_name=, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties40 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties40.setDefaultJtaTimeout((long) (byte) 10);
        atomikosProperties40.setCheckpointInterval((long) (byte) 0);
        atomikosProperties40.setTransactionManagerUniqueName("");
        boolean boolean47 = atomikosProperties40.isEnableLogging();
        atomikosProperties40.setSerialJtaTransactions(false);
        java.lang.Object obj50 = properties4.remove((java.lang.Object) atomikosProperties40);
        java.util.Set<java.lang.Object> objSet51 = properties4.keySet();
        java.util.Properties properties52 = null;
        java.util.Properties properties53 = new java.util.Properties(properties52);
        java.util.Properties properties54 = new java.util.Properties(properties52);
        java.util.Properties properties55 = null;
        java.util.Properties properties56 = new java.util.Properties(properties55);
        java.lang.Object obj58 = properties54.put((java.lang.Object) properties56, (java.lang.Object) (short) 1);
        java.util.Properties properties60 = null;
        java.util.Properties properties61 = new java.util.Properties(properties60);
        java.util.Properties properties62 = new java.util.Properties(properties60);
        java.util.Properties properties63 = null;
        java.util.Properties properties64 = new java.util.Properties(properties63);
        java.lang.Object obj66 = properties62.put((java.lang.Object) properties64, (java.lang.Object) (short) 1);
        boolean boolean67 = properties56.remove((java.lang.Object) false, (java.lang.Object) (short) 1);
        java.util.Set<java.lang.String> strSet68 = properties56.stringPropertyNames();
        java.util.Enumeration<java.lang.Object> objEnumeration69 = properties56.elements();
        java.lang.String str70 = properties56.toString();
        java.util.Enumeration<?> wildcardEnumeration71 = properties56.propertyNames();
        boolean boolean72 = properties4.contains((java.lang.Object) properties56);
        properties4.clear();
        java.io.InputStream inputStream74 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties4.loadFromXML(inputStream74);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(obj6);
        org.junit.Assert.assertNull(obj14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(strSet16);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNull(obj35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNull(str39);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertNull(obj50);
        org.junit.Assert.assertNotNull(objSet51);
        org.junit.Assert.assertNull(obj58);
        org.junit.Assert.assertNull(obj66);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertNotNull(strSet68);
        org.junit.Assert.assertNotNull(objEnumeration69);
        org.junit.Assert.assertEquals("'" + str70 + "' != '" + "{}" + "'", str70, "{}");
        org.junit.Assert.assertNotNull(wildcardEnumeration71);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
    }

    @Test
    public void test1739() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1739");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Properties properties2 = new java.util.Properties(properties0);
        java.util.Properties properties3 = null;
        java.util.Properties properties4 = new java.util.Properties(properties3);
        java.lang.Object obj6 = properties2.put((java.lang.Object) properties4, (java.lang.Object) (short) 1);
        java.util.Properties properties8 = null;
        java.util.Properties properties9 = new java.util.Properties(properties8);
        java.util.Properties properties10 = new java.util.Properties(properties8);
        java.util.Properties properties11 = null;
        java.util.Properties properties12 = new java.util.Properties(properties11);
        java.lang.Object obj14 = properties10.put((java.lang.Object) properties12, (java.lang.Object) (short) 1);
        boolean boolean15 = properties4.remove((java.lang.Object) false, (java.lang.Object) (short) 1);
        java.util.Set<java.lang.String> strSet16 = properties4.stringPropertyNames();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties17 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties17.setDefaultJtaTimeout((long) (byte) 10);
        atomikosProperties17.setCheckpointInterval((long) (byte) 0);
        atomikosProperties17.setTransactionManagerUniqueName("");
        boolean boolean24 = atomikosProperties17.isEnableLogging();
        atomikosProperties17.setSerialJtaTransactions(false);
        atomikosProperties17.setLogBaseDir("");
        java.util.Properties properties29 = null;
        java.util.Properties properties30 = new java.util.Properties(properties29);
        java.util.Properties properties31 = new java.util.Properties(properties29);
        java.util.Properties properties32 = null;
        java.util.Properties properties33 = new java.util.Properties(properties32);
        java.lang.Object obj35 = properties31.put((java.lang.Object) properties33, (java.lang.Object) (short) 1);
        java.util.Properties properties36 = new java.util.Properties(properties33);
        boolean boolean37 = properties4.remove((java.lang.Object) "", (java.lang.Object) properties36);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties38 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties38.setDefaultJtaTimeout((long) (byte) 10);
        atomikosProperties38.setCheckpointInterval((long) (byte) 0);
        atomikosProperties38.setEnableLogging(true);
        long long45 = atomikosProperties38.getDefaultJtaTimeout();
        java.lang.Object obj46 = properties4.remove((java.lang.Object) atomikosProperties38);
        properties4.clear();
        java.lang.Object obj48 = properties4.clone();
        java.lang.String str49 = properties4.toString();
        java.util.Properties properties50 = null;
        java.util.Properties properties51 = new java.util.Properties(properties50);
        java.util.Properties properties52 = new java.util.Properties(properties50);
        java.util.Properties properties53 = null;
        java.util.Properties properties54 = new java.util.Properties(properties53);
        java.lang.Object obj56 = properties52.put((java.lang.Object) properties54, (java.lang.Object) (short) 1);
        java.util.Enumeration<java.lang.Object> objEnumeration57 = properties54.elements();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet58 = properties54.entrySet();
        java.util.Set<java.lang.Object> objSet59 = properties54.keySet();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties60 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties60.setDefaultJtaTimeout((long) (byte) 10);
        atomikosProperties60.setCheckpointInterval((long) (byte) 0);
        atomikosProperties60.setEnableLogging(true);
        java.lang.Object obj67 = properties54.get((java.lang.Object) atomikosProperties60);
        java.util.Properties properties68 = atomikosProperties60.asProperties();
        java.lang.String str69 = atomikosProperties60.getLogBaseName();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties70 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties70.setDefaultJtaTimeout((long) (byte) 10);
        atomikosProperties70.setCheckpointInterval((long) (byte) 0);
        atomikosProperties70.setTransactionManagerUniqueName("");
        java.util.Properties properties77 = atomikosProperties70.asProperties();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties78 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties78.setThreadedTwoPhaseCommit(true);
        atomikosProperties78.setMaxActives((int) '#');
        atomikosProperties78.setForceShutdownOnVmExit(true);
        java.lang.String str85 = atomikosProperties78.getLogBaseDir();
        java.lang.Object obj86 = properties77.remove((java.lang.Object) atomikosProperties78);
        java.util.Enumeration<?> wildcardEnumeration87 = properties77.propertyNames();
        java.lang.Object obj88 = properties4.replace((java.lang.Object) str69, (java.lang.Object) properties77);
        java.lang.Object obj89 = properties4.clone();
        org.junit.Assert.assertNull(obj6);
        org.junit.Assert.assertNull(obj14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(strSet16);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNull(obj35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertTrue("'" + long45 + "' != '" + 10L + "'", long45 == 10L);
        org.junit.Assert.assertNull(obj46);
        org.junit.Assert.assertNotNull(obj48);
        org.junit.Assert.assertEquals(obj48.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj48), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj48), "{}");
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "{}" + "'", str49, "{}");
        org.junit.Assert.assertNull(obj56);
        org.junit.Assert.assertNotNull(objEnumeration57);
        org.junit.Assert.assertNotNull(objEntrySet58);
        org.junit.Assert.assertNotNull(objSet59);
        org.junit.Assert.assertNull(obj67);
        org.junit.Assert.assertNotNull(properties68);
        org.junit.Assert.assertEquals("'" + str69 + "' != '" + "tmlog" + "'", str69, "tmlog");
        org.junit.Assert.assertNotNull(properties77);
        org.junit.Assert.assertNull(str85);
        org.junit.Assert.assertNull(obj86);
        org.junit.Assert.assertNotNull(wildcardEnumeration87);
        org.junit.Assert.assertNull(obj88);
        org.junit.Assert.assertNotNull(obj89);
        org.junit.Assert.assertEquals(obj89.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj89), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj89), "{}");
    }

    @Test
    public void test1740() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1740");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setDefaultJtaTimeout((long) (byte) 10);
        atomikosProperties0.setSerialJtaTransactions(false);
        atomikosProperties0.setService("{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.tm_unique_name=, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
        atomikosProperties0.setService("tmlog");
        atomikosProperties0.setThreadedTwoPhaseCommit(true);
        boolean boolean11 = atomikosProperties0.isForceShutdownOnVmExit();
        long long12 = atomikosProperties0.getMaxTimeout();
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + long12 + "' != '" + 300000L + "'", long12 == 300000L);
    }

    @Test
    public void test1741() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1741");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Properties properties2 = new java.util.Properties(properties0);
        java.util.Properties properties3 = null;
        java.util.Properties properties4 = new java.util.Properties(properties3);
        java.lang.Object obj6 = properties2.put((java.lang.Object) properties4, (java.lang.Object) (short) 1);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties7 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties7.setThreadedTwoPhaseCommit(true);
        atomikosProperties7.setMaxActives((int) (byte) 0);
        boolean boolean12 = properties2.containsValue((java.lang.Object) atomikosProperties7);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties13 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties13.setDefaultJtaTimeout((long) (byte) 10);
        atomikosProperties13.setSerialJtaTransactions(false);
        boolean boolean18 = properties2.containsValue((java.lang.Object) atomikosProperties13);
        java.lang.Object obj21 = properties2.putIfAbsent((java.lang.Object) 10, (java.lang.Object) (byte) -1);
        java.util.Properties properties22 = null;
        java.util.Properties properties23 = new java.util.Properties(properties22);
        java.util.Properties properties24 = new java.util.Properties(properties22);
        java.util.Properties properties25 = null;
        java.util.Properties properties26 = new java.util.Properties(properties25);
        java.lang.Object obj28 = properties24.put((java.lang.Object) properties26, (java.lang.Object) (short) 1);
        boolean boolean29 = properties24.isEmpty();
        properties24.clear();
        java.util.Properties properties31 = new java.util.Properties(properties24);
        properties2.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties24);
        java.io.Writer writer33 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties2.store(writer33, "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=true, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=true, com.atomikos.icatch.max_actives=35, com.atomikos.icatch.log_base_name=tmlog}");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(obj6);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNull(obj21);
        org.junit.Assert.assertNull(obj28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
    }

    @Test
    public void test1742() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1742");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setDefaultJtaTimeout((long) (byte) 10);
        atomikosProperties0.setSerialJtaTransactions(false);
        atomikosProperties0.setService("hi!");
        long long7 = atomikosProperties0.getCheckpointInterval();
        long long8 = atomikosProperties0.getMaxTimeout();
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + 500L + "'", long7 == 500L);
        org.junit.Assert.assertTrue("'" + long8 + "' != '" + 300000L + "'", long8 == 300000L);
    }

    @Test
    public void test1743() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1743");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setDefaultJtaTimeout((long) (byte) 10);
        atomikosProperties0.setCheckpointInterval((long) (byte) 0);
        atomikosProperties0.setTransactionManagerUniqueName("");
        java.util.Properties properties7 = atomikosProperties0.asProperties();
        java.lang.String str8 = atomikosProperties0.getTransactionManagerUniqueName();
        atomikosProperties0.setDefaultJtaTimeout((long) (-1));
        java.util.Properties properties11 = atomikosProperties0.asProperties();
        java.util.Properties properties12 = new java.util.Properties(properties11);
        java.util.Properties properties13 = null;
        java.util.Properties properties14 = new java.util.Properties(properties13);
        java.util.Properties properties15 = new java.util.Properties(properties13);
        boolean boolean17 = properties15.containsValue((java.lang.Object) (short) 100);
        java.util.Properties properties18 = null;
        java.util.Properties properties19 = new java.util.Properties(properties18);
        java.util.Properties properties20 = new java.util.Properties(properties18);
        java.util.Properties properties21 = null;
        java.util.Properties properties22 = new java.util.Properties(properties21);
        java.lang.Object obj24 = properties20.put((java.lang.Object) properties22, (java.lang.Object) (short) 1);
        java.util.Enumeration<java.lang.Object> objEnumeration25 = properties22.elements();
        java.lang.Object obj26 = properties15.remove((java.lang.Object) properties22);
        java.lang.Object obj29 = properties22.setProperty("", "");
        properties22.clear();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties31 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        boolean boolean32 = atomikosProperties31.isForceShutdownOnVmExit();
        java.lang.String str33 = atomikosProperties31.getLogBaseName();
        java.lang.String str34 = atomikosProperties31.getService();
        atomikosProperties31.setLogBaseName("{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.tm_unique_name=, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
        long long37 = atomikosProperties31.getMaxTimeout();
        atomikosProperties31.setEnableLogging(false);
        java.lang.Object obj40 = properties12.put((java.lang.Object) properties22, (java.lang.Object) false);
        java.lang.Object obj41 = properties22.clone();
        java.lang.String str42 = properties22.toString();
        java.util.Properties properties43 = new java.util.Properties(properties22);
        java.util.Set<java.lang.Object> objSet44 = properties43.keySet();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties45 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties45.setDefaultJtaTimeout((long) (byte) 10);
        boolean boolean48 = atomikosProperties45.isForceShutdownOnVmExit();
        atomikosProperties45.setMaxActives(0);
        java.lang.String str51 = atomikosProperties45.getLogBaseName();
        boolean boolean52 = atomikosProperties45.isSerialJtaTransactions();
        atomikosProperties45.setForceShutdownOnVmExit(true);
        java.lang.String str55 = atomikosProperties45.getTransactionManagerUniqueName();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties56 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties56.setDefaultJtaTimeout((long) (byte) 10);
        long long59 = atomikosProperties56.getDefaultJtaTimeout();
        atomikosProperties56.setTransactionManagerUniqueName("");
        boolean boolean62 = atomikosProperties56.isEnableLogging();
        java.lang.String str63 = atomikosProperties56.getLogBaseDir();
        java.util.Properties properties64 = atomikosProperties56.asProperties();
        atomikosProperties56.setForceShutdownOnVmExit(true);
        long long67 = atomikosProperties56.getCheckpointInterval();
        atomikosProperties56.setForceShutdownOnVmExit(true);
        atomikosProperties56.setLogBaseDir("");
        java.lang.String str72 = atomikosProperties56.getService();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj73 = properties43.replace((java.lang.Object) atomikosProperties45, (java.lang.Object) str72);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(properties7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "" + "'", str8, "");
        org.junit.Assert.assertNotNull(properties11);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNull(obj24);
        org.junit.Assert.assertNotNull(objEnumeration25);
        org.junit.Assert.assertNull(obj26);
        org.junit.Assert.assertNull(obj29);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "tmlog" + "'", str33, "tmlog");
        org.junit.Assert.assertNull(str34);
        org.junit.Assert.assertTrue("'" + long37 + "' != '" + 300000L + "'", long37 == 300000L);
        org.junit.Assert.assertNull(obj40);
        org.junit.Assert.assertNotNull(obj41);
        org.junit.Assert.assertEquals(obj41.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj41), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj41), "{}");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "{}" + "'", str42, "{}");
        org.junit.Assert.assertNotNull(objSet44);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "tmlog" + "'", str51, "tmlog");
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertNull(str55);
        org.junit.Assert.assertTrue("'" + long59 + "' != '" + 10L + "'", long59 == 10L);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + true + "'", boolean62 == true);
        org.junit.Assert.assertNull(str63);
        org.junit.Assert.assertNotNull(properties64);
        org.junit.Assert.assertTrue("'" + long67 + "' != '" + 500L + "'", long67 == 500L);
        org.junit.Assert.assertNull(str72);
    }

    @Test
    public void test1744() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1744");
        java.util.Properties properties0 = new java.util.Properties();
        java.util.Enumeration<?> wildcardEnumeration1 = properties0.propertyNames();
        java.util.Properties properties3 = null;
        java.util.Properties properties4 = new java.util.Properties(properties3);
        java.util.Properties properties5 = new java.util.Properties(properties3);
        java.util.Properties properties6 = null;
        java.util.Properties properties7 = new java.util.Properties(properties6);
        java.lang.Object obj9 = properties5.put((java.lang.Object) properties7, (java.lang.Object) (short) 1);
        java.util.Properties properties10 = new java.util.Properties(properties7);
        java.util.Enumeration<java.lang.Object> objEnumeration11 = properties10.elements();
        java.lang.Object obj12 = properties0.put((java.lang.Object) (-1.0f), (java.lang.Object) objEnumeration11);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties13 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties13.setDefaultJtaTimeout((long) (byte) 10);
        atomikosProperties13.setCheckpointInterval((long) (byte) 0);
        atomikosProperties13.setTransactionManagerUniqueName("");
        boolean boolean20 = atomikosProperties13.isEnableLogging();
        java.util.Properties properties21 = atomikosProperties13.asProperties();
        java.util.Enumeration<java.lang.Object> objEnumeration22 = properties21.keys();
        boolean boolean23 = properties0.contains((java.lang.Object) objEnumeration22);
        java.util.Properties properties24 = new java.util.Properties(properties0);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties25 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties25.setThreadedTwoPhaseCommit(true);
        atomikosProperties25.setMaxActives((int) '#');
        atomikosProperties25.setForceShutdownOnVmExit(true);
        java.lang.String str32 = atomikosProperties25.getLogBaseDir();
        java.util.Properties properties33 = atomikosProperties25.asProperties();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties34 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        boolean boolean35 = atomikosProperties34.isSerialJtaTransactions();
        boolean boolean36 = properties33.equals((java.lang.Object) atomikosProperties34);
        boolean boolean37 = properties0.equals((java.lang.Object) properties33);
        java.lang.String str39 = properties0.getProperty("{=}");
        java.util.Properties properties40 = new java.util.Properties(properties0);
        java.util.Properties properties41 = null;
        java.util.Properties properties42 = new java.util.Properties(properties41);
        java.util.Properties properties43 = new java.util.Properties(properties41);
        java.util.Properties properties44 = null;
        java.util.Properties properties45 = new java.util.Properties(properties44);
        java.lang.Object obj47 = properties43.put((java.lang.Object) properties45, (java.lang.Object) (short) 1);
        properties45.clear();
        int int49 = properties45.size();
        java.util.Properties properties50 = new java.util.Properties(properties45);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties51 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        int int52 = atomikosProperties51.getMaxActives();
        long long53 = atomikosProperties51.getMaxTimeout();
        java.util.Properties properties54 = atomikosProperties51.asProperties();
        java.util.Properties properties55 = atomikosProperties51.asProperties();
        java.util.Properties properties56 = null;
        java.util.Properties properties57 = new java.util.Properties(properties56);
        java.util.Properties properties58 = new java.util.Properties(properties56);
        java.util.Properties properties59 = null;
        java.util.Properties properties60 = new java.util.Properties(properties59);
        java.lang.Object obj62 = properties58.put((java.lang.Object) properties60, (java.lang.Object) (short) 1);
        java.util.Enumeration<java.lang.Object> objEnumeration63 = properties60.elements();
        java.lang.Object obj64 = properties45.replace((java.lang.Object) atomikosProperties51, (java.lang.Object) properties60);
        java.util.Properties properties65 = atomikosProperties51.asProperties();
        boolean boolean66 = properties40.equals((java.lang.Object) atomikosProperties51);
        // The following exception was thrown during execution in test generation
        try {
            java.util.Enumeration<?> wildcardEnumeration67 = properties40.propertyNames();
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: java.lang.Float cannot be cast to java.lang.String");
        } catch (java.lang.ClassCastException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardEnumeration1);
        org.junit.Assert.assertNull(obj9);
        org.junit.Assert.assertNotNull(objEnumeration11);
        org.junit.Assert.assertNull(obj12);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNotNull(properties21);
        org.junit.Assert.assertNotNull(objEnumeration22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNull(str32);
        org.junit.Assert.assertNotNull(properties33);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNull(str39);
        org.junit.Assert.assertNull(obj47);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 0 + "'", int49 == 0);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + 50 + "'", int52 == 50);
        org.junit.Assert.assertTrue("'" + long53 + "' != '" + 300000L + "'", long53 == 300000L);
        org.junit.Assert.assertNotNull(properties54);
        org.junit.Assert.assertNotNull(properties55);
        org.junit.Assert.assertNull(obj62);
        org.junit.Assert.assertNotNull(objEnumeration63);
        org.junit.Assert.assertNull(obj64);
        org.junit.Assert.assertNotNull(properties65);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
    }

    @Test
    public void test1745() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1745");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Properties properties2 = new java.util.Properties(properties0);
        java.util.Properties properties3 = null;
        java.util.Properties properties4 = new java.util.Properties(properties3);
        java.lang.Object obj6 = properties2.put((java.lang.Object) properties4, (java.lang.Object) (short) 1);
        java.util.Properties properties7 = null;
        java.util.Properties properties8 = new java.util.Properties(properties7);
        java.util.Properties properties9 = new java.util.Properties(properties7);
        java.util.Properties properties10 = null;
        java.util.Properties properties11 = new java.util.Properties(properties10);
        java.lang.Object obj13 = properties9.put((java.lang.Object) properties11, (java.lang.Object) (short) 1);
        properties11.clear();
        int int15 = properties11.size();
        java.util.Properties properties16 = null;
        java.util.Properties properties17 = new java.util.Properties(properties16);
        java.util.Properties properties18 = new java.util.Properties(properties16);
        java.util.Properties properties19 = null;
        java.util.Properties properties20 = new java.util.Properties(properties19);
        java.lang.Object obj22 = properties18.put((java.lang.Object) properties20, (java.lang.Object) (short) 1);
        java.util.Properties properties23 = new java.util.Properties(properties20);
        java.util.Properties properties24 = new java.util.Properties(properties20);
        boolean boolean26 = properties11.remove((java.lang.Object) properties20, (java.lang.Object) 10.0f);
        java.util.Enumeration<java.lang.Object> objEnumeration27 = properties20.elements();
        java.util.Properties properties28 = new java.util.Properties(properties20);
        java.util.Set<java.lang.Object> objSet29 = properties28.keySet();
        boolean boolean30 = properties4.contains((java.lang.Object) objSet29);
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet31 = properties4.entrySet();
        java.io.Reader reader32 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties4.load(reader32);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(obj6);
        org.junit.Assert.assertNull(obj13);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0);
        org.junit.Assert.assertNull(obj22);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(objEnumeration27);
        org.junit.Assert.assertNotNull(objSet29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(objEntrySet31);
    }

    @Test
    public void test1746() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1746");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        int int1 = atomikosProperties0.getMaxActives();
        long long2 = atomikosProperties0.getMaxTimeout();
        java.util.Properties properties3 = atomikosProperties0.asProperties();
        long long4 = atomikosProperties0.getDefaultJtaTimeout();
        boolean boolean5 = atomikosProperties0.isEnableLogging();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 50 + "'", int1 == 50);
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + 300000L + "'", long2 == 300000L);
        org.junit.Assert.assertNotNull(properties3);
        org.junit.Assert.assertTrue("'" + long4 + "' != '" + 10000L + "'", long4 == 10000L);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
    }

    @Test
    public void test1747() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1747");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setThreadedTwoPhaseCommit(true);
        atomikosProperties0.setMaxActives((int) '#');
        java.lang.String str5 = atomikosProperties0.getLogBaseName();
        atomikosProperties0.setThreadedTwoPhaseCommit(false);
        java.util.Properties properties8 = atomikosProperties0.asProperties();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties9 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties9.setThreadedTwoPhaseCommit(true);
        boolean boolean12 = atomikosProperties9.isEnableLogging();
        atomikosProperties9.setCheckpointInterval((long) 35);
        java.lang.String str15 = atomikosProperties9.getService();
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean16 = properties8.containsKey((java.lang.Object) str15);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "tmlog" + "'", str5, "tmlog");
        org.junit.Assert.assertNotNull(properties8);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNull(str15);
    }

    @Test
    public void test1748() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1748");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Properties properties2 = new java.util.Properties(properties0);
        java.util.Properties properties3 = null;
        java.util.Properties properties4 = new java.util.Properties(properties3);
        java.lang.Object obj6 = properties2.put((java.lang.Object) properties4, (java.lang.Object) (short) 1);
        properties4.clear();
        int int8 = properties4.size();
        java.util.Properties properties9 = null;
        java.util.Properties properties10 = new java.util.Properties(properties9);
        java.util.Properties properties11 = new java.util.Properties(properties9);
        java.util.Properties properties12 = null;
        java.util.Properties properties13 = new java.util.Properties(properties12);
        java.lang.Object obj15 = properties11.put((java.lang.Object) properties13, (java.lang.Object) (short) 1);
        java.util.Properties properties16 = new java.util.Properties(properties13);
        java.util.Properties properties17 = new java.util.Properties(properties13);
        boolean boolean19 = properties4.remove((java.lang.Object) properties13, (java.lang.Object) 10.0f);
        java.util.Enumeration<java.lang.Object> objEnumeration20 = properties13.elements();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties21 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties21.setDefaultJtaTimeout((long) (byte) 10);
        atomikosProperties21.setCheckpointInterval((long) (byte) 0);
        long long26 = atomikosProperties21.getMaxTimeout();
        atomikosProperties21.setSerialJtaTransactions(true);
        java.util.Properties properties29 = new java.util.Properties();
        java.util.Enumeration<?> wildcardEnumeration30 = properties29.propertyNames();
        java.lang.Object obj31 = properties13.replace((java.lang.Object) atomikosProperties21, (java.lang.Object) properties29);
        java.util.Properties properties32 = null;
        java.util.Properties properties33 = new java.util.Properties(properties32);
        java.util.Properties properties34 = new java.util.Properties(properties32);
        java.util.Properties properties35 = null;
        java.util.Properties properties36 = new java.util.Properties(properties35);
        java.lang.Object obj38 = properties34.put((java.lang.Object) properties36, (java.lang.Object) (short) 1);
        boolean boolean39 = properties34.isEmpty();
        java.util.Properties properties40 = null;
        java.util.Properties properties41 = new java.util.Properties(properties40);
        java.util.Properties properties42 = new java.util.Properties(properties40);
        boolean boolean43 = properties34.containsKey((java.lang.Object) properties42);
        java.util.Properties properties44 = new java.util.Properties(properties42);
        java.util.Properties properties45 = null;
        java.util.Properties properties46 = new java.util.Properties(properties45);
        java.util.Properties properties47 = new java.util.Properties(properties45);
        java.util.Properties properties48 = null;
        java.util.Properties properties49 = new java.util.Properties(properties48);
        java.lang.Object obj51 = properties47.put((java.lang.Object) properties49, (java.lang.Object) (short) 1);
        boolean boolean52 = properties47.isEmpty();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties53 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties53.setDefaultJtaTimeout((long) (byte) 10);
        atomikosProperties53.setCheckpointInterval((long) (byte) 0);
        atomikosProperties53.setTransactionManagerUniqueName("");
        java.util.Properties properties60 = atomikosProperties53.asProperties();
        java.lang.Object obj61 = properties47.remove((java.lang.Object) properties60);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties62 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties62.setDefaultJtaTimeout((long) (byte) 10);
        atomikosProperties62.setCheckpointInterval((long) (byte) 0);
        atomikosProperties62.setTransactionManagerUniqueName("");
        java.lang.Object obj69 = properties60.remove((java.lang.Object) atomikosProperties62);
        java.util.Enumeration<java.lang.Object> objEnumeration70 = properties60.elements();
        java.lang.Object obj71 = properties44.get((java.lang.Object) properties60);
        properties13.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties60);
        java.util.Properties properties73 = new java.util.Properties(properties13);
        java.lang.Object obj74 = properties73.clone();
        java.util.Set<java.lang.String> strSet75 = properties73.stringPropertyNames();
        java.util.Enumeration<java.lang.Object> objEnumeration76 = properties73.keys();
        org.junit.Assert.assertNull(obj6);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertNull(obj15);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(objEnumeration20);
        org.junit.Assert.assertTrue("'" + long26 + "' != '" + 300000L + "'", long26 == 300000L);
        org.junit.Assert.assertNotNull(wildcardEnumeration30);
        org.junit.Assert.assertNull(obj31);
        org.junit.Assert.assertNull(obj38);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNull(obj51);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNotNull(properties60);
        org.junit.Assert.assertNull(obj61);
        org.junit.Assert.assertNull(obj69);
        org.junit.Assert.assertNotNull(objEnumeration70);
        org.junit.Assert.assertNull(obj71);
        org.junit.Assert.assertNotNull(obj74);
        org.junit.Assert.assertEquals(obj74.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj74), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj74), "{}");
        org.junit.Assert.assertNotNull(strSet75);
        org.junit.Assert.assertNotNull(objEnumeration76);
    }

    @Test
    public void test1749() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1749");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Properties properties2 = new java.util.Properties(properties0);
        java.util.Properties properties3 = null;
        java.util.Properties properties4 = new java.util.Properties(properties3);
        java.lang.Object obj6 = properties2.put((java.lang.Object) properties4, (java.lang.Object) (short) 1);
        boolean boolean7 = properties2.isEmpty();
        java.util.Properties properties8 = null;
        java.util.Properties properties9 = new java.util.Properties(properties8);
        java.util.Properties properties10 = new java.util.Properties(properties8);
        boolean boolean11 = properties2.containsKey((java.lang.Object) properties10);
        java.util.Properties properties12 = new java.util.Properties(properties2);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties13 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties13.setDefaultJtaTimeout((long) (byte) 10);
        atomikosProperties13.setCheckpointInterval((long) (byte) 0);
        atomikosProperties13.setTransactionManagerUniqueName("");
        java.util.Properties properties20 = atomikosProperties13.asProperties();
        java.lang.String str21 = atomikosProperties13.getTransactionManagerUniqueName();
        atomikosProperties13.setDefaultJtaTimeout((long) (-1));
        java.util.Properties properties24 = atomikosProperties13.asProperties();
        java.util.Properties properties25 = null;
        java.util.Properties properties26 = new java.util.Properties(properties25);
        java.util.Properties properties27 = new java.util.Properties(properties25);
        java.util.Properties properties28 = null;
        java.util.Properties properties29 = new java.util.Properties(properties28);
        java.lang.Object obj31 = properties27.put((java.lang.Object) properties29, (java.lang.Object) (short) 1);
        java.util.Properties properties33 = null;
        java.util.Properties properties34 = new java.util.Properties(properties33);
        java.util.Properties properties35 = new java.util.Properties(properties33);
        java.util.Properties properties36 = null;
        java.util.Properties properties37 = new java.util.Properties(properties36);
        java.lang.Object obj39 = properties35.put((java.lang.Object) properties37, (java.lang.Object) (short) 1);
        boolean boolean40 = properties29.remove((java.lang.Object) false, (java.lang.Object) (short) 1);
        java.lang.Object obj42 = properties29.remove((java.lang.Object) '#');
        java.util.Set<java.lang.Object> objSet43 = properties29.keySet();
        properties29.clear();
        java.util.Properties properties45 = null;
        java.util.Properties properties46 = new java.util.Properties(properties45);
        java.util.Properties properties47 = new java.util.Properties(properties45);
        java.util.Properties properties48 = null;
        java.util.Properties properties49 = new java.util.Properties(properties48);
        java.lang.Object obj51 = properties47.put((java.lang.Object) properties49, (java.lang.Object) (short) 1);
        java.util.Enumeration<java.lang.Object> objEnumeration52 = properties49.elements();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet53 = properties49.entrySet();
        boolean boolean54 = properties29.equals((java.lang.Object) properties49);
        java.util.Enumeration<java.lang.Object> objEnumeration55 = properties49.elements();
        int int56 = properties49.size();
        java.util.Collection<java.lang.Object> objCollection57 = properties49.values();
        java.lang.Object obj58 = properties2.putIfAbsent((java.lang.Object) atomikosProperties13, (java.lang.Object) properties49);
        atomikosProperties13.setService("{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=100, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=true, com.atomikos.icatch.tm_unique_name=, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name={com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.tm_unique_name=, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}}");
        java.util.Properties properties61 = atomikosProperties13.asProperties();
        java.util.Properties properties62 = atomikosProperties13.asProperties();
        java.io.InputStream inputStream63 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties62.loadFromXML(inputStream63);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(obj6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNotNull(properties20);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "" + "'", str21, "");
        org.junit.Assert.assertNotNull(properties24);
        org.junit.Assert.assertNull(obj31);
        org.junit.Assert.assertNull(obj39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNull(obj42);
        org.junit.Assert.assertNotNull(objSet43);
        org.junit.Assert.assertNull(obj51);
        org.junit.Assert.assertNotNull(objEnumeration52);
        org.junit.Assert.assertNotNull(objEntrySet53);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertNotNull(objEnumeration55);
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + 0 + "'", int56 == 0);
        org.junit.Assert.assertNotNull(objCollection57);
        org.junit.Assert.assertNull(obj58);
        org.junit.Assert.assertNotNull(properties61);
        org.junit.Assert.assertNotNull(properties62);
    }

    @Test
    public void test1750() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1750");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setDefaultJtaTimeout((long) (byte) 10);
        atomikosProperties0.setCheckpointInterval((long) (byte) 0);
        atomikosProperties0.setTransactionManagerUniqueName("");
        java.util.Properties properties7 = atomikosProperties0.asProperties();
        java.util.Properties properties8 = atomikosProperties0.asProperties();
        java.util.Properties properties9 = null;
        java.util.Properties properties10 = new java.util.Properties(properties9);
        java.util.Properties properties11 = new java.util.Properties(properties9);
        java.util.Properties properties12 = null;
        java.util.Properties properties13 = new java.util.Properties(properties12);
        java.lang.Object obj15 = properties11.put((java.lang.Object) properties13, (java.lang.Object) (short) 1);
        properties13.clear();
        int int17 = properties13.size();
        java.lang.Object obj20 = properties13.setProperty("hi!", "hi!");
        java.lang.Object obj23 = properties13.setProperty("tmlog", "tmlog");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties24 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties24.setDefaultJtaTimeout((long) (byte) 10);
        atomikosProperties24.setCheckpointInterval((long) (byte) 0);
        atomikosProperties24.setTransactionManagerUniqueName("");
        boolean boolean31 = atomikosProperties24.isEnableLogging();
        java.lang.String str32 = atomikosProperties24.getLogBaseName();
        atomikosProperties24.setThreadedTwoPhaseCommit(false);
        java.lang.Object obj35 = properties8.put((java.lang.Object) properties13, (java.lang.Object) atomikosProperties24);
        atomikosProperties24.setCheckpointInterval((long) (byte) 0);
        java.lang.String str38 = atomikosProperties24.getTransactionManagerUniqueName();
        long long39 = atomikosProperties24.getDefaultJtaTimeout();
        long long40 = atomikosProperties24.getDefaultJtaTimeout();
        atomikosProperties24.setService("{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=100, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=true, com.atomikos.icatch.tm_unique_name=, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name={com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.tm_unique_name=, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}}");
        org.junit.Assert.assertNotNull(properties7);
        org.junit.Assert.assertNotNull(properties8);
        org.junit.Assert.assertNull(obj15);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 0 + "'", int17 == 0);
        org.junit.Assert.assertNull(obj20);
        org.junit.Assert.assertNull(obj23);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "tmlog" + "'", str32, "tmlog");
        org.junit.Assert.assertNull(obj35);
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "" + "'", str38, "");
        org.junit.Assert.assertTrue("'" + long39 + "' != '" + 10L + "'", long39 == 10L);
        org.junit.Assert.assertTrue("'" + long40 + "' != '" + 10L + "'", long40 == 10L);
    }

    @Test
    public void test1751() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1751");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Properties properties2 = new java.util.Properties(properties0);
        boolean boolean4 = properties2.containsValue((java.lang.Object) (short) 100);
        java.util.Properties properties5 = new java.util.Properties(properties2);
        java.lang.String str7 = properties5.getProperty("hi!");
        java.lang.Object obj8 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean9 = properties5.containsValue(obj8);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNull(str7);
    }

    @Test
    public void test1752() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1752");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Properties properties2 = new java.util.Properties(properties0);
        java.util.Properties properties3 = null;
        java.util.Properties properties4 = new java.util.Properties(properties3);
        java.lang.Object obj6 = properties2.put((java.lang.Object) properties4, (java.lang.Object) (short) 1);
        boolean boolean7 = properties2.isEmpty();
        properties2.clear();
        int int9 = properties2.size();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties10 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties10.setDefaultJtaTimeout((long) (byte) 10);
        long long13 = atomikosProperties10.getDefaultJtaTimeout();
        atomikosProperties10.setTransactionManagerUniqueName("");
        boolean boolean16 = atomikosProperties10.isEnableLogging();
        java.lang.String str17 = atomikosProperties10.getLogBaseName();
        atomikosProperties10.setMaxTimeout(10L);
        long long20 = atomikosProperties10.getDefaultJtaTimeout();
        java.util.Properties properties21 = atomikosProperties10.asProperties();
        java.util.Properties properties22 = null;
        java.util.Properties properties23 = new java.util.Properties(properties22);
        java.util.Properties properties24 = new java.util.Properties(properties22);
        java.util.Properties properties25 = null;
        java.util.Properties properties26 = new java.util.Properties(properties25);
        java.lang.Object obj28 = properties24.put((java.lang.Object) properties26, (java.lang.Object) (short) 1);
        java.util.Properties properties30 = null;
        java.util.Properties properties31 = new java.util.Properties(properties30);
        java.util.Properties properties32 = new java.util.Properties(properties30);
        java.util.Properties properties33 = null;
        java.util.Properties properties34 = new java.util.Properties(properties33);
        java.lang.Object obj36 = properties32.put((java.lang.Object) properties34, (java.lang.Object) (short) 1);
        boolean boolean37 = properties26.remove((java.lang.Object) false, (java.lang.Object) (short) 1);
        java.util.Set<java.lang.String> strSet38 = properties26.stringPropertyNames();
        java.lang.Object obj39 = properties26.clone();
        java.util.Properties properties40 = new java.util.Properties(properties26);
        java.util.Enumeration<java.lang.Object> objEnumeration41 = properties26.keys();
        boolean boolean42 = properties2.remove((java.lang.Object) atomikosProperties10, (java.lang.Object) properties26);
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet43 = properties2.entrySet();
        org.junit.Assert.assertNull(obj6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertTrue("'" + long13 + "' != '" + 10L + "'", long13 == 10L);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "tmlog" + "'", str17, "tmlog");
        org.junit.Assert.assertTrue("'" + long20 + "' != '" + 10L + "'", long20 == 10L);
        org.junit.Assert.assertNotNull(properties21);
        org.junit.Assert.assertNull(obj28);
        org.junit.Assert.assertNull(obj36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(strSet38);
        org.junit.Assert.assertNotNull(obj39);
        org.junit.Assert.assertEquals(obj39.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj39), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj39), "{}");
        org.junit.Assert.assertNotNull(objEnumeration41);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(objEntrySet43);
    }

    @Test
    public void test1753() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1753");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setThreadedTwoPhaseCommit(true);
        boolean boolean3 = atomikosProperties0.isEnableLogging();
        boolean boolean4 = atomikosProperties0.isEnableLogging();
        java.util.Properties properties5 = atomikosProperties0.asProperties();
        java.io.InputStream inputStream6 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties5.loadFromXML(inputStream6);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(properties5);
    }

    @Test
    public void test1754() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1754");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Properties properties2 = new java.util.Properties(properties0);
        java.util.Properties properties3 = null;
        java.util.Properties properties4 = new java.util.Properties(properties3);
        java.lang.Object obj6 = properties2.put((java.lang.Object) properties4, (java.lang.Object) (short) 1);
        java.util.Properties properties8 = null;
        java.util.Properties properties9 = new java.util.Properties(properties8);
        java.util.Properties properties10 = new java.util.Properties(properties8);
        java.util.Properties properties11 = null;
        java.util.Properties properties12 = new java.util.Properties(properties11);
        java.lang.Object obj14 = properties10.put((java.lang.Object) properties12, (java.lang.Object) (short) 1);
        boolean boolean15 = properties4.remove((java.lang.Object) false, (java.lang.Object) (short) 1);
        java.lang.Object obj17 = properties4.remove((java.lang.Object) '#');
        java.util.Properties properties18 = null;
        java.util.Properties properties19 = new java.util.Properties(properties18);
        java.util.Properties properties20 = new java.util.Properties(properties18);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties21 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        int int22 = atomikosProperties21.getMaxActives();
        long long23 = atomikosProperties21.getMaxTimeout();
        java.lang.String str24 = atomikosProperties21.getLogBaseDir();
        atomikosProperties21.setCheckpointInterval(100L);
        boolean boolean27 = properties20.equals((java.lang.Object) atomikosProperties21);
        java.util.Properties properties28 = null;
        java.util.Properties properties29 = new java.util.Properties(properties28);
        java.util.Properties properties30 = new java.util.Properties(properties28);
        java.util.Properties properties31 = null;
        java.util.Properties properties32 = new java.util.Properties(properties31);
        java.lang.Object obj34 = properties30.put((java.lang.Object) properties32, (java.lang.Object) (short) 1);
        boolean boolean35 = properties30.isEmpty();
        java.util.Properties properties36 = null;
        java.util.Properties properties37 = new java.util.Properties(properties36);
        java.util.Properties properties38 = new java.util.Properties(properties36);
        boolean boolean39 = properties30.containsKey((java.lang.Object) properties38);
        java.util.Properties properties40 = null;
        java.util.Properties properties41 = new java.util.Properties(properties40);
        java.util.Properties properties42 = new java.util.Properties(properties40);
        java.util.Properties properties43 = null;
        java.util.Properties properties44 = new java.util.Properties(properties43);
        java.lang.Object obj46 = properties42.put((java.lang.Object) properties44, (java.lang.Object) (short) 1);
        java.util.Properties properties48 = null;
        java.util.Properties properties49 = new java.util.Properties(properties48);
        java.util.Properties properties50 = new java.util.Properties(properties48);
        java.util.Properties properties51 = null;
        java.util.Properties properties52 = new java.util.Properties(properties51);
        java.lang.Object obj54 = properties50.put((java.lang.Object) properties52, (java.lang.Object) (short) 1);
        boolean boolean55 = properties44.remove((java.lang.Object) false, (java.lang.Object) (short) 1);
        java.util.Set<java.lang.String> strSet56 = properties44.stringPropertyNames();
        boolean boolean57 = properties38.containsKey((java.lang.Object) strSet56);
        java.util.Properties properties58 = null;
        java.util.Properties properties59 = new java.util.Properties(properties58);
        java.util.Properties properties60 = new java.util.Properties(properties58);
        java.util.Properties properties61 = null;
        java.util.Properties properties62 = new java.util.Properties(properties61);
        java.lang.Object obj64 = properties60.put((java.lang.Object) properties62, (java.lang.Object) (short) 1);
        properties62.clear();
        java.lang.String str67 = properties62.getProperty("");
        java.util.Properties properties68 = null;
        java.util.Properties properties69 = new java.util.Properties(properties68);
        java.util.Properties properties70 = new java.util.Properties(properties68);
        java.util.Properties properties71 = null;
        java.util.Properties properties72 = new java.util.Properties(properties71);
        java.lang.Object obj74 = properties70.put((java.lang.Object) properties72, (java.lang.Object) (short) 1);
        properties62.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties70);
        boolean boolean76 = properties38.containsKey((java.lang.Object) properties62);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties78 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties78.setThreadedTwoPhaseCommit(true);
        boolean boolean81 = atomikosProperties78.isEnableLogging();
        java.lang.Object obj82 = properties38.put((java.lang.Object) '4', (java.lang.Object) boolean81);
        java.util.Properties properties83 = new java.util.Properties(properties38);
        boolean boolean84 = properties38.isEmpty();
        java.lang.Object obj85 = properties20.get((java.lang.Object) properties38);
        java.lang.Object obj86 = null;
        java.lang.Object obj87 = properties4.getOrDefault((java.lang.Object) properties20, obj86);
        properties20.clear();
        java.util.Properties properties89 = new java.util.Properties(properties20);
        java.lang.Class<?> wildcardClass90 = properties89.getClass();
        org.junit.Assert.assertNull(obj6);
        org.junit.Assert.assertNull(obj14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNull(obj17);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 50 + "'", int22 == 50);
        org.junit.Assert.assertTrue("'" + long23 + "' != '" + 300000L + "'", long23 == 300000L);
        org.junit.Assert.assertNull(str24);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNull(obj34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNull(obj46);
        org.junit.Assert.assertNull(obj54);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertNotNull(strSet56);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertNull(obj64);
        org.junit.Assert.assertNull(str67);
        org.junit.Assert.assertNull(obj74);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + true + "'", boolean81 == true);
        org.junit.Assert.assertNull(obj82);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + false + "'", boolean84 == false);
        org.junit.Assert.assertNull(obj85);
        org.junit.Assert.assertNull(obj87);
        org.junit.Assert.assertNotNull(wildcardClass90);
    }

    @Test
    public void test1755() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1755");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setDefaultJtaTimeout((long) (byte) 10);
        atomikosProperties0.setCheckpointInterval((long) (byte) 0);
        atomikosProperties0.setTransactionManagerUniqueName("");
        java.util.Properties properties7 = atomikosProperties0.asProperties();
        java.lang.String str8 = atomikosProperties0.getLogBaseName();
        java.util.Properties properties9 = atomikosProperties0.asProperties();
        java.util.Enumeration<java.lang.Object> objEnumeration10 = properties9.keys();
        java.util.Properties properties11 = null;
        java.util.Properties properties12 = new java.util.Properties(properties11);
        java.util.Properties properties13 = new java.util.Properties(properties11);
        java.util.Properties properties14 = null;
        java.util.Properties properties15 = new java.util.Properties(properties14);
        java.lang.Object obj17 = properties13.put((java.lang.Object) properties15, (java.lang.Object) (short) 1);
        java.util.Properties properties18 = new java.util.Properties(properties15);
        java.util.Properties properties19 = new java.util.Properties(properties15);
        java.util.Set<java.lang.Object> objSet20 = properties19.keySet();
        java.util.Properties properties21 = new java.util.Properties(properties19);
        int int22 = properties21.size();
        java.util.Properties properties23 = null;
        java.util.Properties properties24 = new java.util.Properties(properties23);
        java.util.Properties properties25 = new java.util.Properties(properties23);
        java.util.Properties properties26 = null;
        java.util.Properties properties27 = new java.util.Properties(properties26);
        java.lang.Object obj29 = properties25.put((java.lang.Object) properties27, (java.lang.Object) (short) 1);
        java.util.Properties properties31 = null;
        java.util.Properties properties32 = new java.util.Properties(properties31);
        java.util.Properties properties33 = new java.util.Properties(properties31);
        java.util.Properties properties34 = null;
        java.util.Properties properties35 = new java.util.Properties(properties34);
        java.lang.Object obj37 = properties33.put((java.lang.Object) properties35, (java.lang.Object) (short) 1);
        boolean boolean38 = properties27.remove((java.lang.Object) false, (java.lang.Object) (short) 1);
        java.util.Set<java.lang.String> strSet39 = properties27.stringPropertyNames();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties40 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties40.setDefaultJtaTimeout((long) (byte) 10);
        long long43 = atomikosProperties40.getDefaultJtaTimeout();
        java.lang.Object obj44 = properties27.get((java.lang.Object) atomikosProperties40);
        atomikosProperties40.setCheckpointInterval((long) (short) 100);
        java.util.Properties properties47 = atomikosProperties40.asProperties();
        java.lang.String str48 = atomikosProperties40.getLogBaseName();
        atomikosProperties40.setLogBaseDir("{}");
        java.util.Properties properties51 = null;
        java.util.Properties properties52 = new java.util.Properties(properties51);
        int int53 = properties52.size();
        java.lang.Object obj54 = properties21.getOrDefault((java.lang.Object) atomikosProperties40, (java.lang.Object) properties52);
        java.util.Properties properties55 = new java.util.Properties(properties21);
        java.util.Collection<java.lang.Object> objCollection56 = properties21.values();
        java.util.Properties properties57 = null;
        java.util.Properties properties58 = new java.util.Properties(properties57);
        java.util.Properties properties59 = new java.util.Properties(properties57);
        java.util.Properties properties60 = null;
        java.util.Properties properties61 = new java.util.Properties(properties60);
        java.lang.Object obj63 = properties59.put((java.lang.Object) properties61, (java.lang.Object) (short) 1);
        properties61.clear();
        int int65 = properties61.size();
        java.util.Properties properties66 = null;
        java.util.Properties properties67 = new java.util.Properties(properties66);
        java.util.Properties properties68 = new java.util.Properties(properties66);
        java.util.Properties properties69 = null;
        java.util.Properties properties70 = new java.util.Properties(properties69);
        java.lang.Object obj72 = properties68.put((java.lang.Object) properties70, (java.lang.Object) (short) 1);
        java.util.Properties properties73 = new java.util.Properties(properties70);
        java.util.Properties properties74 = new java.util.Properties(properties70);
        boolean boolean76 = properties61.remove((java.lang.Object) properties70, (java.lang.Object) 10.0f);
        java.util.Enumeration<java.lang.Object> objEnumeration77 = properties70.elements();
        java.util.Properties properties78 = new java.util.Properties(properties70);
        java.lang.Object obj79 = properties9.put((java.lang.Object) properties21, (java.lang.Object) properties70);
        int int80 = properties9.size();
        org.junit.Assert.assertNotNull(properties7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "tmlog" + "'", str8, "tmlog");
        org.junit.Assert.assertNotNull(properties9);
        org.junit.Assert.assertNotNull(objEnumeration10);
        org.junit.Assert.assertNull(obj17);
        org.junit.Assert.assertNotNull(objSet20);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 0 + "'", int22 == 0);
        org.junit.Assert.assertNull(obj29);
        org.junit.Assert.assertNull(obj37);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(strSet39);
        org.junit.Assert.assertTrue("'" + long43 + "' != '" + 10L + "'", long43 == 10L);
        org.junit.Assert.assertNull(obj44);
        org.junit.Assert.assertNotNull(properties47);
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "tmlog" + "'", str48, "tmlog");
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 0 + "'", int53 == 0);
        org.junit.Assert.assertNotNull(obj54);
        org.junit.Assert.assertEquals(obj54.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj54), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj54), "{}");
        org.junit.Assert.assertNotNull(objCollection56);
        org.junit.Assert.assertNull(obj63);
        org.junit.Assert.assertTrue("'" + int65 + "' != '" + 0 + "'", int65 == 0);
        org.junit.Assert.assertNull(obj72);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
        org.junit.Assert.assertNotNull(objEnumeration77);
        org.junit.Assert.assertNull(obj79);
        org.junit.Assert.assertTrue("'" + int80 + "' != '" + 11 + "'", int80 == 11);
    }

    @Test
    public void test1756() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1756");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Properties properties2 = new java.util.Properties(properties0);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties3 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        int int4 = atomikosProperties3.getMaxActives();
        long long5 = atomikosProperties3.getMaxTimeout();
        java.lang.String str6 = atomikosProperties3.getLogBaseDir();
        atomikosProperties3.setCheckpointInterval(100L);
        boolean boolean9 = properties2.equals((java.lang.Object) atomikosProperties3);
        java.util.Properties properties10 = null;
        java.util.Properties properties11 = new java.util.Properties(properties10);
        java.util.Properties properties12 = new java.util.Properties(properties10);
        java.util.Properties properties13 = null;
        java.util.Properties properties14 = new java.util.Properties(properties13);
        java.lang.Object obj16 = properties12.put((java.lang.Object) properties14, (java.lang.Object) (short) 1);
        boolean boolean17 = properties12.isEmpty();
        java.util.Properties properties18 = null;
        java.util.Properties properties19 = new java.util.Properties(properties18);
        java.util.Properties properties20 = new java.util.Properties(properties18);
        boolean boolean21 = properties12.containsKey((java.lang.Object) properties20);
        java.util.Properties properties22 = null;
        java.util.Properties properties23 = new java.util.Properties(properties22);
        java.util.Properties properties24 = new java.util.Properties(properties22);
        java.util.Properties properties25 = null;
        java.util.Properties properties26 = new java.util.Properties(properties25);
        java.lang.Object obj28 = properties24.put((java.lang.Object) properties26, (java.lang.Object) (short) 1);
        java.util.Properties properties30 = null;
        java.util.Properties properties31 = new java.util.Properties(properties30);
        java.util.Properties properties32 = new java.util.Properties(properties30);
        java.util.Properties properties33 = null;
        java.util.Properties properties34 = new java.util.Properties(properties33);
        java.lang.Object obj36 = properties32.put((java.lang.Object) properties34, (java.lang.Object) (short) 1);
        boolean boolean37 = properties26.remove((java.lang.Object) false, (java.lang.Object) (short) 1);
        java.util.Set<java.lang.String> strSet38 = properties26.stringPropertyNames();
        boolean boolean39 = properties20.containsKey((java.lang.Object) strSet38);
        java.util.Properties properties40 = null;
        java.util.Properties properties41 = new java.util.Properties(properties40);
        java.util.Properties properties42 = new java.util.Properties(properties40);
        java.util.Properties properties43 = null;
        java.util.Properties properties44 = new java.util.Properties(properties43);
        java.lang.Object obj46 = properties42.put((java.lang.Object) properties44, (java.lang.Object) (short) 1);
        properties44.clear();
        java.lang.String str49 = properties44.getProperty("");
        java.util.Properties properties50 = null;
        java.util.Properties properties51 = new java.util.Properties(properties50);
        java.util.Properties properties52 = new java.util.Properties(properties50);
        java.util.Properties properties53 = null;
        java.util.Properties properties54 = new java.util.Properties(properties53);
        java.lang.Object obj56 = properties52.put((java.lang.Object) properties54, (java.lang.Object) (short) 1);
        properties44.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties52);
        boolean boolean58 = properties20.containsKey((java.lang.Object) properties44);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties60 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties60.setThreadedTwoPhaseCommit(true);
        boolean boolean63 = atomikosProperties60.isEnableLogging();
        java.lang.Object obj64 = properties20.put((java.lang.Object) '4', (java.lang.Object) boolean63);
        java.util.Properties properties65 = new java.util.Properties(properties20);
        boolean boolean66 = properties20.isEmpty();
        java.lang.Object obj67 = properties2.get((java.lang.Object) properties20);
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet68 = properties20.entrySet();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties69 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties69.setDefaultJtaTimeout((long) (byte) 10);
        atomikosProperties69.setCheckpointInterval((long) (byte) 0);
        atomikosProperties69.setEnableLogging(true);
        boolean boolean76 = atomikosProperties69.isThreadedTwoPhaseCommit();
        java.lang.String str77 = atomikosProperties69.getLogBaseDir();
        java.util.Properties properties78 = atomikosProperties69.asProperties();
        boolean boolean79 = properties20.contains((java.lang.Object) atomikosProperties69);
        java.lang.String str80 = atomikosProperties69.getLogBaseDir();
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 50 + "'", int4 == 50);
        org.junit.Assert.assertTrue("'" + long5 + "' != '" + 300000L + "'", long5 == 300000L);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNull(obj16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNull(obj28);
        org.junit.Assert.assertNull(obj36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(strSet38);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNull(obj46);
        org.junit.Assert.assertNull(str49);
        org.junit.Assert.assertNull(obj56);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertNull(obj64);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertNull(obj67);
        org.junit.Assert.assertNotNull(objEntrySet68);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
        org.junit.Assert.assertNull(str77);
        org.junit.Assert.assertNotNull(properties78);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + false + "'", boolean79 == false);
        org.junit.Assert.assertNull(str80);
    }

    @Test
    public void test1757() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1757");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setDefaultJtaTimeout((long) (byte) 10);
        atomikosProperties0.setCheckpointInterval((long) (byte) 0);
        atomikosProperties0.setTransactionManagerUniqueName("");
        java.util.Properties properties7 = atomikosProperties0.asProperties();
        java.lang.String str8 = atomikosProperties0.getTransactionManagerUniqueName();
        atomikosProperties0.setLogBaseDir("{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=0, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.tm_unique_name=, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
        atomikosProperties0.setCheckpointInterval((long) (byte) 0);
        atomikosProperties0.setTransactionManagerUniqueName("{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.tm_unique_name=, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
        boolean boolean15 = atomikosProperties0.isThreadedTwoPhaseCommit();
        boolean boolean16 = atomikosProperties0.isThreadedTwoPhaseCommit();
        atomikosProperties0.setForceShutdownOnVmExit(true);
        atomikosProperties0.setLogBaseName("{[]={com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=0, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.tm_unique_name=, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}}");
        long long21 = atomikosProperties0.getCheckpointInterval();
        long long22 = atomikosProperties0.getMaxTimeout();
        org.junit.Assert.assertNotNull(properties7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "" + "'", str8, "");
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + long21 + "' != '" + 0L + "'", long21 == 0L);
        org.junit.Assert.assertTrue("'" + long22 + "' != '" + 300000L + "'", long22 == 300000L);
    }

    @Test
    public void test1758() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1758");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Properties properties2 = new java.util.Properties(properties0);
        java.util.Properties properties3 = null;
        java.util.Properties properties4 = new java.util.Properties(properties3);
        java.lang.Object obj6 = properties2.put((java.lang.Object) properties4, (java.lang.Object) (short) 1);
        java.util.Properties properties7 = new java.util.Properties(properties4);
        java.util.Properties properties8 = new java.util.Properties(properties4);
        java.util.Set<java.lang.Object> objSet9 = properties8.keySet();
        java.util.Properties properties10 = new java.util.Properties(properties8);
        java.util.Properties properties11 = null;
        java.util.Properties properties12 = new java.util.Properties(properties11);
        java.util.Properties properties13 = new java.util.Properties(properties11);
        java.util.Properties properties14 = null;
        java.util.Properties properties15 = new java.util.Properties(properties14);
        java.lang.Object obj17 = properties13.put((java.lang.Object) properties15, (java.lang.Object) (short) 1);
        java.util.Properties properties19 = null;
        java.util.Properties properties20 = new java.util.Properties(properties19);
        java.util.Properties properties21 = new java.util.Properties(properties19);
        java.util.Properties properties22 = null;
        java.util.Properties properties23 = new java.util.Properties(properties22);
        java.lang.Object obj25 = properties21.put((java.lang.Object) properties23, (java.lang.Object) (short) 1);
        boolean boolean26 = properties15.remove((java.lang.Object) false, (java.lang.Object) (short) 1);
        java.util.Set<java.lang.String> strSet27 = properties15.stringPropertyNames();
        java.lang.Object obj28 = properties15.clone();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties29 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties29.setDefaultJtaTimeout((long) (byte) 10);
        atomikosProperties29.setCheckpointInterval((long) (byte) 0);
        atomikosProperties29.setTransactionManagerUniqueName("");
        java.util.Properties properties36 = atomikosProperties29.asProperties();
        java.lang.Object obj39 = properties36.setProperty("{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=0, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.tm_unique_name=, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}", "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=0, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.tm_unique_name=, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
        boolean boolean40 = properties15.equals((java.lang.Object) properties36);
        java.util.Set<java.lang.Object> objSet41 = properties15.keySet();
        boolean boolean42 = properties8.equals((java.lang.Object) properties15);
        java.io.Reader reader43 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties15.load(reader43);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(obj6);
        org.junit.Assert.assertNotNull(objSet9);
        org.junit.Assert.assertNull(obj17);
        org.junit.Assert.assertNull(obj25);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(strSet27);
        org.junit.Assert.assertNotNull(obj28);
        org.junit.Assert.assertEquals(obj28.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj28), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj28), "{}");
        org.junit.Assert.assertNotNull(properties36);
        org.junit.Assert.assertNull(obj39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(objSet41);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
    }

    @Test
    public void test1759() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1759");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Properties properties2 = new java.util.Properties(properties0);
        java.util.Properties properties3 = null;
        java.util.Properties properties4 = new java.util.Properties(properties3);
        java.lang.Object obj6 = properties2.put((java.lang.Object) properties4, (java.lang.Object) (short) 1);
        java.util.Properties properties7 = new java.util.Properties(properties4);
        java.util.Properties properties8 = new java.util.Properties(properties4);
        java.util.Set<java.lang.Object> objSet9 = properties8.keySet();
        java.util.Properties properties10 = new java.util.Properties(properties8);
        java.util.Properties properties11 = null;
        java.util.Properties properties12 = new java.util.Properties(properties11);
        java.util.Properties properties13 = new java.util.Properties(properties11);
        java.util.Properties properties14 = null;
        java.util.Properties properties15 = new java.util.Properties(properties14);
        java.lang.Object obj17 = properties13.put((java.lang.Object) properties15, (java.lang.Object) (short) 1);
        java.util.Properties properties19 = null;
        java.util.Properties properties20 = new java.util.Properties(properties19);
        java.util.Properties properties21 = new java.util.Properties(properties19);
        java.util.Properties properties22 = null;
        java.util.Properties properties23 = new java.util.Properties(properties22);
        java.lang.Object obj25 = properties21.put((java.lang.Object) properties23, (java.lang.Object) (short) 1);
        boolean boolean26 = properties15.remove((java.lang.Object) false, (java.lang.Object) (short) 1);
        java.util.Set<java.lang.String> strSet27 = properties15.stringPropertyNames();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties28 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties28.setDefaultJtaTimeout((long) (byte) 10);
        atomikosProperties28.setCheckpointInterval((long) (byte) 0);
        atomikosProperties28.setTransactionManagerUniqueName("");
        boolean boolean35 = atomikosProperties28.isEnableLogging();
        atomikosProperties28.setSerialJtaTransactions(false);
        atomikosProperties28.setLogBaseDir("");
        java.util.Properties properties40 = null;
        java.util.Properties properties41 = new java.util.Properties(properties40);
        java.util.Properties properties42 = new java.util.Properties(properties40);
        java.util.Properties properties43 = null;
        java.util.Properties properties44 = new java.util.Properties(properties43);
        java.lang.Object obj46 = properties42.put((java.lang.Object) properties44, (java.lang.Object) (short) 1);
        java.util.Properties properties47 = new java.util.Properties(properties44);
        boolean boolean48 = properties15.remove((java.lang.Object) "", (java.lang.Object) properties47);
        java.util.Properties properties49 = null;
        java.util.Properties properties50 = new java.util.Properties(properties49);
        java.util.Properties properties51 = new java.util.Properties(properties49);
        java.lang.Object obj52 = properties51.clone();
        boolean boolean53 = properties15.contains(obj52);
        properties8.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties15);
        java.lang.Object obj56 = properties8.get((java.lang.Object) 10L);
        java.util.Collection<java.lang.Object> objCollection57 = properties8.values();
        java.util.Properties properties58 = null;
        java.util.Properties properties59 = new java.util.Properties(properties58);
        java.util.Properties properties60 = new java.util.Properties(properties58);
        java.util.Properties properties61 = null;
        java.util.Properties properties62 = new java.util.Properties(properties61);
        java.lang.Object obj64 = properties60.put((java.lang.Object) properties62, (java.lang.Object) (short) 1);
        java.util.Properties properties66 = null;
        java.util.Properties properties67 = new java.util.Properties(properties66);
        java.util.Properties properties68 = new java.util.Properties(properties66);
        java.util.Properties properties69 = null;
        java.util.Properties properties70 = new java.util.Properties(properties69);
        java.lang.Object obj72 = properties68.put((java.lang.Object) properties70, (java.lang.Object) (short) 1);
        boolean boolean73 = properties62.remove((java.lang.Object) false, (java.lang.Object) (short) 1);
        java.util.Properties properties74 = new java.util.Properties(properties62);
        int int75 = properties74.size();
        java.util.Collection<java.lang.Object> objCollection76 = properties74.values();
        java.lang.Object obj77 = properties8.remove((java.lang.Object) objCollection76);
        org.junit.Assert.assertNull(obj6);
        org.junit.Assert.assertNotNull(objSet9);
        org.junit.Assert.assertNull(obj17);
        org.junit.Assert.assertNull(obj25);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(strSet27);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertNull(obj46);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNotNull(obj52);
        org.junit.Assert.assertEquals(obj52.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj52), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj52), "{}");
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertNull(obj56);
        org.junit.Assert.assertNotNull(objCollection57);
        org.junit.Assert.assertNull(obj64);
        org.junit.Assert.assertNull(obj72);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertTrue("'" + int75 + "' != '" + 0 + "'", int75 == 0);
        org.junit.Assert.assertNotNull(objCollection76);
        org.junit.Assert.assertNull(obj77);
    }

    @Test
    public void test1760() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1760");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        int int1 = atomikosProperties0.getMaxActives();
        long long2 = atomikosProperties0.getMaxTimeout();
        java.util.Properties properties3 = atomikosProperties0.asProperties();
        java.util.Properties properties4 = atomikosProperties0.asProperties();
        java.lang.String str5 = atomikosProperties0.getTransactionManagerUniqueName();
        atomikosProperties0.setService("{}");
        boolean boolean8 = atomikosProperties0.isSerialJtaTransactions();
        atomikosProperties0.setThreadedTwoPhaseCommit(false);
        atomikosProperties0.setLogBaseDir("{{tmlog={com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=0, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.tm_unique_name=, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}, 4=true}={com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=0, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog, {}={}}}");
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 50 + "'", int1 == 50);
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + 300000L + "'", long2 == 300000L);
        org.junit.Assert.assertNotNull(properties3);
        org.junit.Assert.assertNotNull(properties4);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
    }

    @Test
    public void test1761() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1761");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setDefaultJtaTimeout((long) (byte) 10);
        atomikosProperties0.setCheckpointInterval((long) (byte) 0);
        atomikosProperties0.setTransactionManagerUniqueName("");
        boolean boolean7 = atomikosProperties0.isEnableLogging();
        atomikosProperties0.setSerialJtaTransactions(false);
        atomikosProperties0.setLogBaseDir("");
        java.lang.String str12 = atomikosProperties0.getTransactionManagerUniqueName();
        atomikosProperties0.setEnableLogging(true);
        java.util.Properties properties15 = atomikosProperties0.asProperties();
        boolean boolean16 = atomikosProperties0.isThreadedTwoPhaseCommit();
        atomikosProperties0.setCheckpointInterval(10L);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "" + "'", str12, "");
        org.junit.Assert.assertNotNull(properties15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
    }

    @Test
    public void test1762() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1762");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Properties properties2 = new java.util.Properties(properties0);
        java.util.Properties properties3 = null;
        java.util.Properties properties4 = new java.util.Properties(properties3);
        java.lang.Object obj6 = properties2.put((java.lang.Object) properties4, (java.lang.Object) (short) 1);
        java.util.Properties properties8 = null;
        java.util.Properties properties9 = new java.util.Properties(properties8);
        java.util.Properties properties10 = new java.util.Properties(properties8);
        java.util.Properties properties11 = null;
        java.util.Properties properties12 = new java.util.Properties(properties11);
        java.lang.Object obj14 = properties10.put((java.lang.Object) properties12, (java.lang.Object) (short) 1);
        boolean boolean15 = properties4.remove((java.lang.Object) false, (java.lang.Object) (short) 1);
        java.util.Set<java.lang.String> strSet16 = properties4.stringPropertyNames();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties17 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties17.setDefaultJtaTimeout((long) (byte) 10);
        long long20 = atomikosProperties17.getDefaultJtaTimeout();
        java.lang.Object obj21 = properties4.get((java.lang.Object) atomikosProperties17);
        atomikosProperties17.setCheckpointInterval((long) (short) 100);
        java.lang.String str24 = atomikosProperties17.getLogBaseName();
        boolean boolean25 = atomikosProperties17.isThreadedTwoPhaseCommit();
        atomikosProperties17.setLogBaseDir("hi!");
        atomikosProperties17.setDefaultJtaTimeout(0L);
        org.junit.Assert.assertNull(obj6);
        org.junit.Assert.assertNull(obj14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(strSet16);
        org.junit.Assert.assertTrue("'" + long20 + "' != '" + 10L + "'", long20 == 10L);
        org.junit.Assert.assertNull(obj21);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "tmlog" + "'", str24, "tmlog");
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
    }

    @Test
    public void test1763() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1763");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setDefaultJtaTimeout((long) (byte) 10);
        boolean boolean3 = atomikosProperties0.isForceShutdownOnVmExit();
        atomikosProperties0.setCheckpointInterval(500L);
        java.lang.String str6 = atomikosProperties0.getService();
        java.lang.String str7 = atomikosProperties0.getService();
        java.util.Properties properties8 = atomikosProperties0.asProperties();
        java.lang.Class<?> wildcardClass9 = atomikosProperties0.getClass();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNotNull(properties8);
        org.junit.Assert.assertNotNull(wildcardClass9);
    }

    @Test
    public void test1764() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1764");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Properties properties2 = new java.util.Properties(properties0);
        java.util.Properties properties3 = null;
        java.util.Properties properties4 = new java.util.Properties(properties3);
        java.lang.Object obj6 = properties2.put((java.lang.Object) properties4, (java.lang.Object) (short) 1);
        java.util.Properties properties7 = new java.util.Properties(properties4);
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet8 = properties4.entrySet();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties9 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties9.setThreadedTwoPhaseCommit(true);
        atomikosProperties9.setMaxActives((int) (byte) 0);
        atomikosProperties9.setEnableLogging(true);
        atomikosProperties9.setMaxActives((int) (byte) 1);
        boolean boolean18 = properties4.containsValue((java.lang.Object) atomikosProperties9);
        java.util.Properties properties19 = new java.util.Properties(properties4);
        java.lang.String str21 = properties4.getProperty("tmlog");
        java.lang.Object obj24 = properties4.setProperty("{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=52, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.tm_unique_name=, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}", "{[]={com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=0, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.tm_unique_name=, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}}");
        org.junit.Assert.assertNull(obj6);
        org.junit.Assert.assertNotNull(objEntrySet8);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNull(str21);
        org.junit.Assert.assertNull(obj24);
    }

    @Test
    public void test1765() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1765");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Properties properties2 = new java.util.Properties(properties0);
        java.util.Properties properties3 = null;
        java.util.Properties properties4 = new java.util.Properties(properties3);
        java.lang.Object obj6 = properties2.put((java.lang.Object) properties4, (java.lang.Object) (short) 1);
        java.util.Properties properties8 = null;
        java.util.Properties properties9 = new java.util.Properties(properties8);
        java.util.Properties properties10 = new java.util.Properties(properties8);
        java.util.Properties properties11 = null;
        java.util.Properties properties12 = new java.util.Properties(properties11);
        java.lang.Object obj14 = properties10.put((java.lang.Object) properties12, (java.lang.Object) (short) 1);
        boolean boolean15 = properties4.remove((java.lang.Object) false, (java.lang.Object) (short) 1);
        java.util.Set<java.lang.String> strSet16 = properties4.stringPropertyNames();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties17 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties17.setDefaultJtaTimeout((long) (byte) 10);
        atomikosProperties17.setCheckpointInterval((long) (byte) 0);
        atomikosProperties17.setTransactionManagerUniqueName("");
        boolean boolean24 = atomikosProperties17.isEnableLogging();
        atomikosProperties17.setSerialJtaTransactions(false);
        atomikosProperties17.setLogBaseDir("");
        java.util.Properties properties29 = null;
        java.util.Properties properties30 = new java.util.Properties(properties29);
        java.util.Properties properties31 = new java.util.Properties(properties29);
        java.util.Properties properties32 = null;
        java.util.Properties properties33 = new java.util.Properties(properties32);
        java.lang.Object obj35 = properties31.put((java.lang.Object) properties33, (java.lang.Object) (short) 1);
        java.util.Properties properties36 = new java.util.Properties(properties33);
        boolean boolean37 = properties4.remove((java.lang.Object) "", (java.lang.Object) properties36);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties38 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties38.setDefaultJtaTimeout((long) (byte) 10);
        atomikosProperties38.setCheckpointInterval((long) (byte) 0);
        atomikosProperties38.setEnableLogging(true);
        long long45 = atomikosProperties38.getDefaultJtaTimeout();
        java.lang.Object obj46 = properties4.remove((java.lang.Object) atomikosProperties38);
        properties4.clear();
        java.lang.Object obj48 = properties4.clone();
        java.lang.String str49 = properties4.toString();
        java.util.Properties properties50 = null;
        java.util.Properties properties51 = new java.util.Properties(properties50);
        java.util.Properties properties52 = new java.util.Properties(properties50);
        java.util.Properties properties53 = null;
        java.util.Properties properties54 = new java.util.Properties(properties53);
        java.lang.Object obj56 = properties52.put((java.lang.Object) properties54, (java.lang.Object) (short) 1);
        java.util.Enumeration<java.lang.Object> objEnumeration57 = properties54.elements();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet58 = properties54.entrySet();
        java.util.Set<java.lang.Object> objSet59 = properties54.keySet();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties60 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties60.setDefaultJtaTimeout((long) (byte) 10);
        atomikosProperties60.setCheckpointInterval((long) (byte) 0);
        atomikosProperties60.setEnableLogging(true);
        java.lang.Object obj67 = properties54.get((java.lang.Object) atomikosProperties60);
        java.util.Properties properties68 = atomikosProperties60.asProperties();
        java.lang.String str69 = atomikosProperties60.getLogBaseName();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties70 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties70.setDefaultJtaTimeout((long) (byte) 10);
        atomikosProperties70.setCheckpointInterval((long) (byte) 0);
        atomikosProperties70.setTransactionManagerUniqueName("");
        java.util.Properties properties77 = atomikosProperties70.asProperties();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties78 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties78.setThreadedTwoPhaseCommit(true);
        atomikosProperties78.setMaxActives((int) '#');
        atomikosProperties78.setForceShutdownOnVmExit(true);
        java.lang.String str85 = atomikosProperties78.getLogBaseDir();
        java.lang.Object obj86 = properties77.remove((java.lang.Object) atomikosProperties78);
        java.util.Enumeration<?> wildcardEnumeration87 = properties77.propertyNames();
        java.lang.Object obj88 = properties4.replace((java.lang.Object) str69, (java.lang.Object) properties77);
        properties4.clear();
        org.junit.Assert.assertNull(obj6);
        org.junit.Assert.assertNull(obj14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(strSet16);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNull(obj35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertTrue("'" + long45 + "' != '" + 10L + "'", long45 == 10L);
        org.junit.Assert.assertNull(obj46);
        org.junit.Assert.assertNotNull(obj48);
        org.junit.Assert.assertEquals(obj48.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj48), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj48), "{}");
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "{}" + "'", str49, "{}");
        org.junit.Assert.assertNull(obj56);
        org.junit.Assert.assertNotNull(objEnumeration57);
        org.junit.Assert.assertNotNull(objEntrySet58);
        org.junit.Assert.assertNotNull(objSet59);
        org.junit.Assert.assertNull(obj67);
        org.junit.Assert.assertNotNull(properties68);
        org.junit.Assert.assertEquals("'" + str69 + "' != '" + "tmlog" + "'", str69, "tmlog");
        org.junit.Assert.assertNotNull(properties77);
        org.junit.Assert.assertNull(str85);
        org.junit.Assert.assertNull(obj86);
        org.junit.Assert.assertNotNull(wildcardEnumeration87);
        org.junit.Assert.assertNull(obj88);
    }

    @Test
    public void test1766() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1766");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setDefaultJtaTimeout((long) (byte) 10);
        boolean boolean3 = atomikosProperties0.isForceShutdownOnVmExit();
        atomikosProperties0.setMaxActives(0);
        atomikosProperties0.setDefaultJtaTimeout((long) (byte) 10);
        java.util.Properties properties8 = atomikosProperties0.asProperties();
        long long9 = atomikosProperties0.getDefaultJtaTimeout();
        atomikosProperties0.setSerialJtaTransactions(true);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(properties8);
        org.junit.Assert.assertTrue("'" + long9 + "' != '" + 10L + "'", long9 == 10L);
    }

    @Test
    public void test1767() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1767");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Properties properties2 = new java.util.Properties(properties0);
        java.util.Properties properties3 = null;
        java.util.Properties properties4 = new java.util.Properties(properties3);
        java.lang.Object obj6 = properties2.put((java.lang.Object) properties4, (java.lang.Object) (short) 1);
        properties4.clear();
        int int8 = properties4.size();
        java.util.Properties properties9 = new java.util.Properties(properties4);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties10 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        int int11 = atomikosProperties10.getMaxActives();
        long long12 = atomikosProperties10.getMaxTimeout();
        java.util.Properties properties13 = atomikosProperties10.asProperties();
        java.util.Properties properties14 = atomikosProperties10.asProperties();
        java.util.Properties properties15 = null;
        java.util.Properties properties16 = new java.util.Properties(properties15);
        java.util.Properties properties17 = new java.util.Properties(properties15);
        java.util.Properties properties18 = null;
        java.util.Properties properties19 = new java.util.Properties(properties18);
        java.lang.Object obj21 = properties17.put((java.lang.Object) properties19, (java.lang.Object) (short) 1);
        java.util.Enumeration<java.lang.Object> objEnumeration22 = properties19.elements();
        java.lang.Object obj23 = properties4.replace((java.lang.Object) atomikosProperties10, (java.lang.Object) properties19);
        java.util.Set<java.lang.String> strSet24 = properties4.stringPropertyNames();
        properties4.clear();
        java.util.Properties properties26 = new java.util.Properties(properties4);
        java.lang.String str27 = properties4.toString();
        java.util.Properties properties28 = null;
        java.util.Properties properties29 = new java.util.Properties(properties28);
        java.util.Properties properties30 = new java.util.Properties(properties28);
        java.util.Properties properties31 = null;
        java.util.Properties properties32 = new java.util.Properties(properties31);
        java.lang.Object obj34 = properties30.put((java.lang.Object) properties32, (java.lang.Object) (short) 1);
        boolean boolean35 = properties30.isEmpty();
        java.util.Properties properties36 = null;
        java.util.Properties properties37 = new java.util.Properties(properties36);
        java.util.Properties properties38 = new java.util.Properties(properties36);
        boolean boolean39 = properties30.containsKey((java.lang.Object) properties38);
        java.util.Properties properties40 = new java.util.Properties(properties38);
        boolean boolean41 = properties4.containsKey((java.lang.Object) properties38);
        java.lang.Object obj42 = properties4.clone();
        java.io.PrintStream printStream43 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties4.list(printStream43);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(obj6);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 50 + "'", int11 == 50);
        org.junit.Assert.assertTrue("'" + long12 + "' != '" + 300000L + "'", long12 == 300000L);
        org.junit.Assert.assertNotNull(properties13);
        org.junit.Assert.assertNotNull(properties14);
        org.junit.Assert.assertNull(obj21);
        org.junit.Assert.assertNotNull(objEnumeration22);
        org.junit.Assert.assertNull(obj23);
        org.junit.Assert.assertNotNull(strSet24);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "{}" + "'", str27, "{}");
        org.junit.Assert.assertNull(obj34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(obj42);
        org.junit.Assert.assertEquals(obj42.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj42), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj42), "{}");
    }

    @Test
    public void test1768() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1768");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setDefaultJtaTimeout((long) (byte) 10);
        atomikosProperties0.setCheckpointInterval((long) (byte) 0);
        atomikosProperties0.setTransactionManagerUniqueName("");
        java.util.Properties properties7 = atomikosProperties0.asProperties();
        java.lang.String str8 = atomikosProperties0.getLogBaseName();
        java.util.Properties properties9 = atomikosProperties0.asProperties();
        java.lang.String str10 = atomikosProperties0.getLogBaseDir();
        java.util.Properties properties11 = atomikosProperties0.asProperties();
        atomikosProperties0.setMaxActives((int) (byte) 10);
        atomikosProperties0.setLogBaseDir("{tmlog={com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=0, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.tm_unique_name=, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}, 4=true}");
        org.junit.Assert.assertNotNull(properties7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "tmlog" + "'", str8, "tmlog");
        org.junit.Assert.assertNotNull(properties9);
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertNotNull(properties11);
    }

    @Test
    public void test1769() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1769");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Properties properties2 = new java.util.Properties(properties0);
        java.util.Properties properties3 = null;
        java.util.Properties properties4 = new java.util.Properties(properties3);
        java.lang.Object obj6 = properties2.put((java.lang.Object) properties4, (java.lang.Object) (short) 1);
        properties4.clear();
        int int8 = properties4.size();
        java.util.Properties properties9 = null;
        java.util.Properties properties10 = new java.util.Properties(properties9);
        java.util.Properties properties11 = new java.util.Properties(properties9);
        java.util.Properties properties12 = null;
        java.util.Properties properties13 = new java.util.Properties(properties12);
        java.lang.Object obj15 = properties11.put((java.lang.Object) properties13, (java.lang.Object) (short) 1);
        java.util.Properties properties16 = new java.util.Properties(properties13);
        java.util.Properties properties17 = new java.util.Properties(properties13);
        boolean boolean19 = properties4.remove((java.lang.Object) properties13, (java.lang.Object) 10.0f);
        java.util.Enumeration<java.lang.Object> objEnumeration20 = properties13.elements();
        java.util.Properties properties21 = new java.util.Properties(properties13);
        java.util.Properties properties22 = new java.util.Properties(properties21);
        java.util.Set<java.lang.Object> objSet23 = properties21.keySet();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties24 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties24.setThreadedTwoPhaseCommit(true);
        atomikosProperties24.setMaxActives((int) (byte) 0);
        atomikosProperties24.setForceShutdownOnVmExit(false);
        atomikosProperties24.setLogBaseName("{tmlog={com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=0, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.tm_unique_name=, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}, 4=true}");
        atomikosProperties24.setSerialJtaTransactions(true);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties35 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties35.setThreadedTwoPhaseCommit(true);
        atomikosProperties35.setMaxActives((int) '#');
        atomikosProperties35.setEnableLogging(true);
        int int42 = atomikosProperties35.getMaxActives();
        boolean boolean43 = atomikosProperties35.isEnableLogging();
        long long44 = atomikosProperties35.getCheckpointInterval();
        java.lang.Object obj45 = properties21.replace((java.lang.Object) atomikosProperties24, (java.lang.Object) atomikosProperties35);
        atomikosProperties35.setEnableLogging(false);
        atomikosProperties35.setMaxActives((int) (byte) 1);
        org.junit.Assert.assertNull(obj6);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertNull(obj15);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(objEnumeration20);
        org.junit.Assert.assertNotNull(objSet23);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 35 + "'", int42 == 35);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertTrue("'" + long44 + "' != '" + 500L + "'", long44 == 500L);
        org.junit.Assert.assertNull(obj45);
    }

    @Test
    public void test1770() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1770");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Properties properties2 = new java.util.Properties(properties0);
        java.util.Properties properties3 = null;
        java.util.Properties properties4 = new java.util.Properties(properties3);
        java.lang.Object obj6 = properties2.put((java.lang.Object) properties4, (java.lang.Object) (short) 1);
        boolean boolean7 = properties2.isEmpty();
        java.util.Properties properties8 = null;
        java.util.Properties properties9 = new java.util.Properties(properties8);
        java.util.Properties properties10 = new java.util.Properties(properties8);
        boolean boolean11 = properties2.containsKey((java.lang.Object) properties10);
        java.util.Properties properties12 = new java.util.Properties(properties10);
        java.lang.Object obj13 = properties12.clone();
        java.util.Properties properties15 = null;
        java.util.Properties properties16 = new java.util.Properties(properties15);
        java.util.Properties properties17 = new java.util.Properties(properties15);
        java.util.Properties properties18 = null;
        java.util.Properties properties19 = new java.util.Properties(properties18);
        java.lang.Object obj21 = properties17.put((java.lang.Object) properties19, (java.lang.Object) (short) 1);
        boolean boolean22 = properties17.isEmpty();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties23 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties23.setDefaultJtaTimeout((long) (byte) 10);
        atomikosProperties23.setCheckpointInterval((long) (byte) 0);
        atomikosProperties23.setTransactionManagerUniqueName("");
        java.util.Properties properties30 = atomikosProperties23.asProperties();
        java.lang.Object obj31 = properties17.remove((java.lang.Object) properties30);
        java.lang.Object obj32 = properties12.putIfAbsent((java.lang.Object) 1L, (java.lang.Object) properties17);
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet33 = properties17.entrySet();
        java.util.Properties properties34 = null;
        java.util.Properties properties35 = new java.util.Properties(properties34);
        java.util.Properties properties36 = new java.util.Properties(properties34);
        java.util.Properties properties37 = null;
        java.util.Properties properties38 = new java.util.Properties(properties37);
        java.lang.Object obj40 = properties36.put((java.lang.Object) properties38, (java.lang.Object) (short) 1);
        properties38.clear();
        int int42 = properties38.size();
        java.util.Properties properties43 = null;
        java.util.Properties properties44 = new java.util.Properties(properties43);
        java.util.Properties properties45 = new java.util.Properties(properties43);
        java.util.Properties properties46 = null;
        java.util.Properties properties47 = new java.util.Properties(properties46);
        java.lang.Object obj49 = properties45.put((java.lang.Object) properties47, (java.lang.Object) (short) 1);
        java.util.Properties properties50 = new java.util.Properties(properties47);
        java.util.Properties properties51 = new java.util.Properties(properties47);
        boolean boolean53 = properties38.remove((java.lang.Object) properties47, (java.lang.Object) 10.0f);
        java.util.Enumeration<java.lang.Object> objEnumeration54 = properties47.elements();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties55 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties55.setDefaultJtaTimeout((long) (byte) 10);
        atomikosProperties55.setCheckpointInterval((long) (byte) 0);
        long long60 = atomikosProperties55.getMaxTimeout();
        atomikosProperties55.setSerialJtaTransactions(true);
        java.util.Properties properties63 = new java.util.Properties();
        java.util.Enumeration<?> wildcardEnumeration64 = properties63.propertyNames();
        java.lang.Object obj65 = properties47.replace((java.lang.Object) atomikosProperties55, (java.lang.Object) properties63);
        java.lang.String str66 = properties47.toString();
        properties47.clear();
        boolean boolean68 = properties17.contains((java.lang.Object) properties47);
        java.util.Set<java.lang.Object> objSet69 = properties47.keySet();
        org.junit.Assert.assertNull(obj6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNotNull(obj13);
        org.junit.Assert.assertEquals(obj13.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj13), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj13), "{}");
        org.junit.Assert.assertNull(obj21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(properties30);
        org.junit.Assert.assertNull(obj31);
        org.junit.Assert.assertNull(obj32);
        org.junit.Assert.assertNotNull(objEntrySet33);
        org.junit.Assert.assertNull(obj40);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 0 + "'", int42 == 0);
        org.junit.Assert.assertNull(obj49);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertNotNull(objEnumeration54);
        org.junit.Assert.assertTrue("'" + long60 + "' != '" + 300000L + "'", long60 == 300000L);
        org.junit.Assert.assertNotNull(wildcardEnumeration64);
        org.junit.Assert.assertNull(obj65);
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "{}" + "'", str66, "{}");
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertNotNull(objSet69);
    }

    @Test
    public void test1771() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1771");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Properties properties2 = new java.util.Properties(properties0);
        boolean boolean4 = properties2.containsValue((java.lang.Object) (short) 100);
        java.util.Properties properties5 = null;
        java.util.Properties properties6 = new java.util.Properties(properties5);
        java.util.Properties properties7 = new java.util.Properties(properties5);
        java.util.Properties properties8 = null;
        java.util.Properties properties9 = new java.util.Properties(properties8);
        java.lang.Object obj11 = properties7.put((java.lang.Object) properties9, (java.lang.Object) (short) 1);
        java.util.Enumeration<java.lang.Object> objEnumeration12 = properties9.elements();
        java.lang.Object obj13 = properties2.remove((java.lang.Object) properties9);
        java.lang.Object obj16 = properties9.setProperty("", "");
        java.util.Properties properties17 = null;
        java.util.Properties properties18 = new java.util.Properties(properties17);
        java.util.Properties properties19 = new java.util.Properties(properties17);
        java.util.Properties properties20 = null;
        java.util.Properties properties21 = new java.util.Properties(properties20);
        java.lang.Object obj23 = properties19.put((java.lang.Object) properties21, (java.lang.Object) (short) 1);
        java.util.Properties properties25 = null;
        java.util.Properties properties26 = new java.util.Properties(properties25);
        java.util.Properties properties27 = new java.util.Properties(properties25);
        java.util.Properties properties28 = null;
        java.util.Properties properties29 = new java.util.Properties(properties28);
        java.lang.Object obj31 = properties27.put((java.lang.Object) properties29, (java.lang.Object) (short) 1);
        boolean boolean32 = properties21.remove((java.lang.Object) false, (java.lang.Object) (short) 1);
        java.util.Properties properties33 = new java.util.Properties(properties21);
        properties9.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties33);
        java.util.Properties properties35 = null;
        java.util.Properties properties36 = new java.util.Properties(properties35);
        java.util.Properties properties37 = new java.util.Properties(properties35);
        java.util.Properties properties38 = null;
        java.util.Properties properties39 = new java.util.Properties(properties38);
        java.lang.Object obj41 = properties37.put((java.lang.Object) properties39, (java.lang.Object) (short) 1);
        properties39.clear();
        int int43 = properties39.size();
        java.util.Properties properties44 = null;
        java.util.Properties properties45 = new java.util.Properties(properties44);
        java.util.Properties properties46 = new java.util.Properties(properties44);
        java.util.Properties properties47 = null;
        java.util.Properties properties48 = new java.util.Properties(properties47);
        java.lang.Object obj50 = properties46.put((java.lang.Object) properties48, (java.lang.Object) (short) 1);
        java.util.Properties properties51 = new java.util.Properties(properties48);
        java.util.Properties properties52 = new java.util.Properties(properties48);
        boolean boolean54 = properties39.remove((java.lang.Object) properties48, (java.lang.Object) 10.0f);
        java.util.Enumeration<java.lang.Object> objEnumeration55 = properties48.elements();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties56 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties56.setDefaultJtaTimeout((long) (byte) 10);
        atomikosProperties56.setCheckpointInterval((long) (byte) 0);
        long long61 = atomikosProperties56.getMaxTimeout();
        atomikosProperties56.setSerialJtaTransactions(true);
        java.util.Properties properties64 = new java.util.Properties();
        java.util.Enumeration<?> wildcardEnumeration65 = properties64.propertyNames();
        java.lang.Object obj66 = properties48.replace((java.lang.Object) atomikosProperties56, (java.lang.Object) properties64);
        boolean boolean67 = properties9.contains((java.lang.Object) properties64);
        java.util.Set<java.lang.Object> objSet68 = properties9.keySet();
        java.io.OutputStream outputStream69 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties9.storeToXML(outputStream69, "{tmlog=}");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNull(obj11);
        org.junit.Assert.assertNotNull(objEnumeration12);
        org.junit.Assert.assertNull(obj13);
        org.junit.Assert.assertNull(obj16);
        org.junit.Assert.assertNull(obj23);
        org.junit.Assert.assertNull(obj31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNull(obj41);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 0 + "'", int43 == 0);
        org.junit.Assert.assertNull(obj50);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertNotNull(objEnumeration55);
        org.junit.Assert.assertTrue("'" + long61 + "' != '" + 300000L + "'", long61 == 300000L);
        org.junit.Assert.assertNotNull(wildcardEnumeration65);
        org.junit.Assert.assertNull(obj66);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertNotNull(objSet68);
    }

    @Test
    public void test1772() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1772");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setDefaultJtaTimeout((long) (byte) 10);
        atomikosProperties0.setCheckpointInterval((long) (byte) 0);
        atomikosProperties0.setTransactionManagerUniqueName("");
        java.util.Properties properties7 = atomikosProperties0.asProperties();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties8 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties8.setThreadedTwoPhaseCommit(true);
        atomikosProperties8.setMaxActives((int) '#');
        atomikosProperties8.setForceShutdownOnVmExit(true);
        java.lang.String str15 = atomikosProperties8.getLogBaseDir();
        java.lang.Object obj16 = properties7.remove((java.lang.Object) atomikosProperties8);
        long long17 = atomikosProperties8.getDefaultJtaTimeout();
        atomikosProperties8.setMaxActives((int) (short) 0);
        atomikosProperties8.setTransactionManagerUniqueName("");
        java.util.Properties properties22 = atomikosProperties8.asProperties();
        java.lang.Object obj25 = properties22.setProperty("{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.tm_unique_name=, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}", "hi!");
        org.junit.Assert.assertNotNull(properties7);
        org.junit.Assert.assertNull(str15);
        org.junit.Assert.assertNull(obj16);
        org.junit.Assert.assertTrue("'" + long17 + "' != '" + 10000L + "'", long17 == 10000L);
        org.junit.Assert.assertNotNull(properties22);
        org.junit.Assert.assertNull(obj25);
    }

    @Test
    public void test1773() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1773");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setThreadedTwoPhaseCommit(true);
        atomikosProperties0.setMaxActives((int) '#');
        atomikosProperties0.setForceShutdownOnVmExit(true);
        java.lang.String str7 = atomikosProperties0.getLogBaseDir();
        java.util.Properties properties8 = atomikosProperties0.asProperties();
        boolean boolean9 = atomikosProperties0.isThreadedTwoPhaseCommit();
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNotNull(properties8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
    }

    @Test
    public void test1774() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1774");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Properties properties2 = new java.util.Properties(properties0);
        java.util.Properties properties3 = null;
        java.util.Properties properties4 = new java.util.Properties(properties3);
        java.lang.Object obj6 = properties2.put((java.lang.Object) properties4, (java.lang.Object) (short) 1);
        properties4.clear();
        int int8 = properties4.size();
        java.util.Properties properties9 = new java.util.Properties(properties4);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties10 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        int int11 = atomikosProperties10.getMaxActives();
        long long12 = atomikosProperties10.getMaxTimeout();
        java.util.Properties properties13 = atomikosProperties10.asProperties();
        java.util.Properties properties14 = atomikosProperties10.asProperties();
        java.util.Properties properties15 = null;
        java.util.Properties properties16 = new java.util.Properties(properties15);
        java.util.Properties properties17 = new java.util.Properties(properties15);
        java.util.Properties properties18 = null;
        java.util.Properties properties19 = new java.util.Properties(properties18);
        java.lang.Object obj21 = properties17.put((java.lang.Object) properties19, (java.lang.Object) (short) 1);
        java.util.Enumeration<java.lang.Object> objEnumeration22 = properties19.elements();
        java.lang.Object obj23 = properties4.replace((java.lang.Object) atomikosProperties10, (java.lang.Object) properties19);
        java.util.Set<java.lang.String> strSet24 = properties4.stringPropertyNames();
        properties4.clear();
        java.util.Properties properties26 = new java.util.Properties(properties4);
        java.lang.String str27 = properties4.toString();
        java.util.Properties properties28 = null;
        java.util.Properties properties29 = new java.util.Properties(properties28);
        java.util.Properties properties30 = new java.util.Properties(properties28);
        java.util.Properties properties31 = null;
        java.util.Properties properties32 = new java.util.Properties(properties31);
        java.lang.Object obj34 = properties30.put((java.lang.Object) properties32, (java.lang.Object) (short) 1);
        boolean boolean35 = properties30.isEmpty();
        java.util.Properties properties36 = null;
        java.util.Properties properties37 = new java.util.Properties(properties36);
        java.util.Properties properties38 = new java.util.Properties(properties36);
        boolean boolean39 = properties30.containsKey((java.lang.Object) properties38);
        java.util.Properties properties40 = new java.util.Properties(properties38);
        boolean boolean41 = properties4.containsKey((java.lang.Object) properties38);
        java.util.Properties properties42 = new java.util.Properties(properties4);
        java.lang.String str43 = properties42.toString();
        java.util.Map<java.lang.Object, java.lang.Object> objMap44 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties42.putAll(objMap44);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(obj6);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 50 + "'", int11 == 50);
        org.junit.Assert.assertTrue("'" + long12 + "' != '" + 300000L + "'", long12 == 300000L);
        org.junit.Assert.assertNotNull(properties13);
        org.junit.Assert.assertNotNull(properties14);
        org.junit.Assert.assertNull(obj21);
        org.junit.Assert.assertNotNull(objEnumeration22);
        org.junit.Assert.assertNull(obj23);
        org.junit.Assert.assertNotNull(strSet24);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "{}" + "'", str27, "{}");
        org.junit.Assert.assertNull(obj34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "{}" + "'", str43, "{}");
    }

    @Test
    public void test1775() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1775");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setDefaultJtaTimeout((long) (byte) 10);
        atomikosProperties0.setCheckpointInterval((long) (byte) 0);
        atomikosProperties0.setTransactionManagerUniqueName("");
        java.util.Properties properties7 = atomikosProperties0.asProperties();
        java.lang.String str8 = atomikosProperties0.getTransactionManagerUniqueName();
        java.util.Properties properties9 = atomikosProperties0.asProperties();
        java.util.Properties properties10 = new java.util.Properties(properties9);
        properties9.clear();
        java.util.Set<java.lang.Object> objSet12 = properties9.keySet();
        java.lang.String str15 = properties9.getProperty("{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=0, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.tm_unique_name=, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}", "{com.atomikos.icatch.enable_logging=false, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=true, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
        org.junit.Assert.assertNotNull(properties7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "" + "'", str8, "");
        org.junit.Assert.assertNotNull(properties9);
        org.junit.Assert.assertNotNull(objSet12);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "{com.atomikos.icatch.enable_logging=false, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=true, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}" + "'", str15, "{com.atomikos.icatch.enable_logging=false, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=true, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
    }

    @Test
    public void test1776() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1776");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        int int1 = atomikosProperties0.getMaxActives();
        long long2 = atomikosProperties0.getMaxTimeout();
        java.util.Properties properties3 = atomikosProperties0.asProperties();
        java.util.Properties properties4 = atomikosProperties0.asProperties();
        long long5 = atomikosProperties0.getMaxTimeout();
        java.util.Properties properties6 = atomikosProperties0.asProperties();
        properties6.clear();
        java.util.Enumeration<java.lang.Object> objEnumeration8 = properties6.elements();
        java.util.Properties properties9 = null;
        java.util.Properties properties10 = new java.util.Properties(properties9);
        java.util.Properties properties11 = new java.util.Properties(properties9);
        java.util.Properties properties12 = null;
        java.util.Properties properties13 = new java.util.Properties(properties12);
        java.lang.Object obj15 = properties11.put((java.lang.Object) properties13, (java.lang.Object) (short) 1);
        java.util.Properties properties17 = null;
        java.util.Properties properties18 = new java.util.Properties(properties17);
        java.util.Properties properties19 = new java.util.Properties(properties17);
        java.util.Properties properties20 = null;
        java.util.Properties properties21 = new java.util.Properties(properties20);
        java.lang.Object obj23 = properties19.put((java.lang.Object) properties21, (java.lang.Object) (short) 1);
        boolean boolean24 = properties13.remove((java.lang.Object) false, (java.lang.Object) (short) 1);
        java.util.Properties properties25 = new java.util.Properties(properties13);
        boolean boolean26 = properties13.isEmpty();
        java.util.Properties properties27 = new java.util.Properties(properties13);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties28 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        boolean boolean29 = atomikosProperties28.isForceShutdownOnVmExit();
        java.lang.String str30 = atomikosProperties28.getLogBaseName();
        java.lang.String str31 = atomikosProperties28.getService();
        atomikosProperties28.setLogBaseName("{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.tm_unique_name=, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
        long long34 = atomikosProperties28.getMaxTimeout();
        atomikosProperties28.setMaxTimeout((long) 0);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties37 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties37.setThreadedTwoPhaseCommit(true);
        java.lang.String str40 = atomikosProperties37.getService();
        java.util.Properties properties41 = atomikosProperties37.asProperties();
        java.lang.Object obj42 = properties13.put((java.lang.Object) 0, (java.lang.Object) properties41);
        boolean boolean43 = properties6.containsValue((java.lang.Object) properties13);
        java.lang.String str45 = properties6.getProperty("");
        java.io.OutputStream outputStream46 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties6.save(outputStream46, "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.tm_unique_name=, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 50 + "'", int1 == 50);
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + 300000L + "'", long2 == 300000L);
        org.junit.Assert.assertNotNull(properties3);
        org.junit.Assert.assertNotNull(properties4);
        org.junit.Assert.assertTrue("'" + long5 + "' != '" + 300000L + "'", long5 == 300000L);
        org.junit.Assert.assertNotNull(properties6);
        org.junit.Assert.assertNotNull(objEnumeration8);
        org.junit.Assert.assertNull(obj15);
        org.junit.Assert.assertNull(obj23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "tmlog" + "'", str30, "tmlog");
        org.junit.Assert.assertNull(str31);
        org.junit.Assert.assertTrue("'" + long34 + "' != '" + 300000L + "'", long34 == 300000L);
        org.junit.Assert.assertNull(str40);
        org.junit.Assert.assertNotNull(properties41);
        org.junit.Assert.assertNull(obj42);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNull(str45);
    }

    @Test
    public void test1777() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1777");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Properties properties2 = new java.util.Properties(properties0);
        java.util.Properties properties3 = null;
        java.util.Properties properties4 = new java.util.Properties(properties3);
        java.lang.Object obj6 = properties2.put((java.lang.Object) properties4, (java.lang.Object) (short) 1);
        properties4.clear();
        int int8 = properties4.size();
        java.util.Properties properties9 = null;
        java.util.Properties properties10 = new java.util.Properties(properties9);
        java.util.Properties properties11 = new java.util.Properties(properties9);
        java.util.Properties properties12 = null;
        java.util.Properties properties13 = new java.util.Properties(properties12);
        java.lang.Object obj15 = properties11.put((java.lang.Object) properties13, (java.lang.Object) (short) 1);
        java.util.Properties properties16 = new java.util.Properties(properties13);
        java.util.Properties properties17 = new java.util.Properties(properties13);
        boolean boolean19 = properties4.remove((java.lang.Object) properties13, (java.lang.Object) 10.0f);
        java.util.Enumeration<java.lang.Object> objEnumeration20 = properties13.elements();
        java.util.Properties properties21 = new java.util.Properties(properties13);
        boolean boolean23 = properties13.contains((java.lang.Object) (byte) 100);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties24 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        int int25 = atomikosProperties24.getMaxActives();
        atomikosProperties24.setLogBaseName("");
        atomikosProperties24.setMaxActives((-1));
        java.lang.Object obj30 = properties13.remove((java.lang.Object) atomikosProperties24);
        java.util.Properties properties31 = null;
        java.util.Properties properties32 = new java.util.Properties(properties31);
        java.util.Properties properties33 = new java.util.Properties(properties31);
        java.util.Properties properties34 = null;
        java.util.Properties properties35 = new java.util.Properties(properties34);
        java.lang.Object obj37 = properties33.put((java.lang.Object) properties35, (java.lang.Object) (short) 1);
        java.util.Properties properties39 = null;
        java.util.Properties properties40 = new java.util.Properties(properties39);
        java.util.Properties properties41 = new java.util.Properties(properties39);
        java.util.Properties properties42 = null;
        java.util.Properties properties43 = new java.util.Properties(properties42);
        java.lang.Object obj45 = properties41.put((java.lang.Object) properties43, (java.lang.Object) (short) 1);
        boolean boolean46 = properties35.remove((java.lang.Object) false, (java.lang.Object) (short) 1);
        java.lang.Object obj48 = properties35.remove((java.lang.Object) '#');
        java.util.Set<java.lang.Object> objSet49 = properties35.keySet();
        properties35.clear();
        java.lang.String str51 = properties35.toString();
        java.util.Properties properties52 = null;
        java.util.Properties properties53 = new java.util.Properties(properties52);
        java.util.Properties properties54 = new java.util.Properties(properties52);
        java.util.Properties properties55 = null;
        java.util.Properties properties56 = new java.util.Properties(properties55);
        java.lang.Object obj58 = properties54.put((java.lang.Object) properties56, (java.lang.Object) (short) 1);
        boolean boolean59 = properties54.isEmpty();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties60 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties60.setDefaultJtaTimeout((long) (byte) 10);
        atomikosProperties60.setCheckpointInterval((long) (byte) 0);
        atomikosProperties60.setTransactionManagerUniqueName("");
        java.util.Properties properties67 = atomikosProperties60.asProperties();
        java.lang.Object obj68 = properties54.remove((java.lang.Object) properties67);
        java.lang.Object obj69 = properties13.replace((java.lang.Object) properties35, (java.lang.Object) properties54);
        java.util.Set<java.lang.String> strSet70 = properties35.stringPropertyNames();
        int int71 = properties35.size();
        org.junit.Assert.assertNull(obj6);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertNull(obj15);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(objEnumeration20);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 50 + "'", int25 == 50);
        org.junit.Assert.assertNull(obj30);
        org.junit.Assert.assertNull(obj37);
        org.junit.Assert.assertNull(obj45);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNull(obj48);
        org.junit.Assert.assertNotNull(objSet49);
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "{}" + "'", str51, "{}");
        org.junit.Assert.assertNull(obj58);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertNotNull(properties67);
        org.junit.Assert.assertNull(obj68);
        org.junit.Assert.assertNull(obj69);
        org.junit.Assert.assertNotNull(strSet70);
        org.junit.Assert.assertTrue("'" + int71 + "' != '" + 0 + "'", int71 == 0);
    }

    @Test
    public void test1778() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1778");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setDefaultJtaTimeout((long) (byte) 10);
        atomikosProperties0.setCheckpointInterval((long) (byte) 0);
        atomikosProperties0.setTransactionManagerUniqueName("");
        boolean boolean7 = atomikosProperties0.isEnableLogging();
        atomikosProperties0.setCheckpointInterval((long) ' ');
        java.util.Properties properties10 = atomikosProperties0.asProperties();
        java.lang.String str11 = atomikosProperties0.getLogBaseName();
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(properties10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "tmlog" + "'", str11, "tmlog");
    }

    @Test
    public void test1779() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1779");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Properties properties2 = new java.util.Properties(properties0);
        boolean boolean4 = properties2.containsValue((java.lang.Object) (short) 100);
        java.util.Properties properties5 = new java.util.Properties(properties2);
        java.lang.String str7 = properties5.getProperty("hi!");
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet8 = properties5.entrySet();
        java.util.Enumeration<java.lang.Object> objEnumeration9 = properties5.keys();
        java.util.Properties properties10 = new java.util.Properties(properties5);
        java.util.Properties properties11 = null;
        java.util.Properties properties12 = new java.util.Properties(properties11);
        java.util.Properties properties13 = new java.util.Properties(properties11);
        java.util.Properties properties14 = null;
        java.util.Properties properties15 = new java.util.Properties(properties14);
        java.lang.Object obj17 = properties13.put((java.lang.Object) properties15, (java.lang.Object) (short) 1);
        properties15.clear();
        int int19 = properties15.size();
        java.lang.Object obj22 = properties15.setProperty("hi!", "hi!");
        java.lang.Object obj25 = properties15.setProperty("tmlog", "tmlog");
        java.util.Enumeration<java.lang.Object> objEnumeration26 = properties15.elements();
        java.util.Properties properties27 = new java.util.Properties(properties15);
        boolean boolean28 = properties10.equals((java.lang.Object) properties15);
        java.io.InputStream inputStream29 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties15.load(inputStream29);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNotNull(objEntrySet8);
        org.junit.Assert.assertNotNull(objEnumeration9);
        org.junit.Assert.assertNull(obj17);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 0 + "'", int19 == 0);
        org.junit.Assert.assertNull(obj22);
        org.junit.Assert.assertNull(obj25);
        org.junit.Assert.assertNotNull(objEnumeration26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
    }

    @Test
    public void test1780() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1780");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Properties properties2 = new java.util.Properties(properties0);
        java.util.Properties properties3 = null;
        java.util.Properties properties4 = new java.util.Properties(properties3);
        java.lang.Object obj6 = properties2.put((java.lang.Object) properties4, (java.lang.Object) (short) 1);
        java.util.Properties properties7 = new java.util.Properties(properties4);
        java.util.Enumeration<java.lang.Object> objEnumeration8 = properties7.elements();
        java.util.Enumeration<java.lang.Object> objEnumeration9 = properties7.elements();
        java.util.Properties properties10 = new java.util.Properties(properties7);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties11 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties11.setDefaultJtaTimeout((long) (byte) 10);
        boolean boolean14 = atomikosProperties11.isForceShutdownOnVmExit();
        atomikosProperties11.setMaxActives(0);
        atomikosProperties11.setDefaultJtaTimeout((long) (byte) 10);
        java.util.Properties properties19 = atomikosProperties11.asProperties();
        boolean boolean20 = properties10.equals((java.lang.Object) properties19);
        java.io.OutputStream outputStream21 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties19.save(outputStream21, "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.log_base_dir={}, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(obj6);
        org.junit.Assert.assertNotNull(objEnumeration8);
        org.junit.Assert.assertNotNull(objEnumeration9);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(properties19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
    }

    @Test
    public void test1781() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1781");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setThreadedTwoPhaseCommit(true);
        atomikosProperties0.setMaxActives((int) '#');
        atomikosProperties0.setForceShutdownOnVmExit(true);
        java.lang.String str7 = atomikosProperties0.getLogBaseDir();
        java.util.Properties properties8 = atomikosProperties0.asProperties();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties9 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        boolean boolean10 = atomikosProperties9.isSerialJtaTransactions();
        boolean boolean11 = properties8.equals((java.lang.Object) atomikosProperties9);
        long long12 = atomikosProperties9.getMaxTimeout();
        atomikosProperties9.setCheckpointInterval((long) 97);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNotNull(properties8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + long12 + "' != '" + 300000L + "'", long12 == 300000L);
    }

    @Test
    public void test1782() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1782");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Properties properties2 = new java.util.Properties(properties0);
        java.util.Properties properties3 = null;
        java.util.Properties properties4 = new java.util.Properties(properties3);
        java.lang.Object obj6 = properties2.put((java.lang.Object) properties4, (java.lang.Object) (short) 1);
        properties4.clear();
        java.lang.String str9 = properties4.getProperty("");
        java.util.Properties properties10 = null;
        java.util.Properties properties11 = new java.util.Properties(properties10);
        java.util.Properties properties12 = new java.util.Properties(properties10);
        java.util.Properties properties13 = null;
        java.util.Properties properties14 = new java.util.Properties(properties13);
        java.lang.Object obj16 = properties12.put((java.lang.Object) properties14, (java.lang.Object) (short) 1);
        properties4.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties12);
        java.util.Enumeration<java.lang.Object> objEnumeration18 = properties4.keys();
        java.util.Enumeration<java.lang.Object> objEnumeration19 = properties4.elements();
        java.util.Properties properties20 = null;
        java.util.Properties properties21 = new java.util.Properties(properties20);
        java.util.Properties properties22 = new java.util.Properties(properties20);
        boolean boolean24 = properties22.containsValue((java.lang.Object) (short) 100);
        java.util.Properties properties25 = new java.util.Properties(properties22);
        java.util.Enumeration<java.lang.Object> objEnumeration26 = properties25.keys();
        java.lang.Object obj27 = properties4.get((java.lang.Object) properties25);
        properties25.clear();
        org.junit.Assert.assertNull(obj6);
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertNull(obj16);
        org.junit.Assert.assertNotNull(objEnumeration18);
        org.junit.Assert.assertNotNull(objEnumeration19);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(objEnumeration26);
        org.junit.Assert.assertEquals("'" + obj27 + "' != '" + (short) 1 + "'", obj27, (short) 1);
    }

    @Test
    public void test1783() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1783");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Properties properties2 = new java.util.Properties(properties0);
        java.util.Properties properties3 = null;
        java.util.Properties properties4 = new java.util.Properties(properties3);
        java.lang.Object obj6 = properties2.put((java.lang.Object) properties4, (java.lang.Object) (short) 1);
        java.util.Enumeration<java.lang.Object> objEnumeration7 = properties4.elements();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet8 = properties4.entrySet();
        java.util.Set<java.lang.Object> objSet9 = properties4.keySet();
        java.util.Properties properties10 = null;
        java.util.Properties properties11 = new java.util.Properties(properties10);
        java.util.Properties properties12 = new java.util.Properties(properties10);
        java.util.Properties properties13 = null;
        java.util.Properties properties14 = new java.util.Properties(properties13);
        java.lang.Object obj16 = properties12.put((java.lang.Object) properties14, (java.lang.Object) (short) 1);
        properties14.clear();
        int int18 = properties14.size();
        java.util.Properties properties19 = new java.util.Properties(properties14);
        java.util.Properties properties20 = null;
        java.util.Properties properties21 = new java.util.Properties(properties20);
        java.util.Properties properties22 = new java.util.Properties(properties20);
        java.util.Properties properties23 = null;
        java.util.Properties properties24 = new java.util.Properties(properties23);
        java.lang.Object obj26 = properties22.put((java.lang.Object) properties24, (java.lang.Object) (short) 1);
        properties24.clear();
        java.lang.String str29 = properties24.getProperty("");
        java.util.Properties properties30 = null;
        java.util.Properties properties31 = new java.util.Properties(properties30);
        java.util.Properties properties32 = new java.util.Properties(properties30);
        java.util.Properties properties33 = null;
        java.util.Properties properties34 = new java.util.Properties(properties33);
        java.lang.Object obj36 = properties32.put((java.lang.Object) properties34, (java.lang.Object) (short) 1);
        properties24.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties32);
        java.lang.Object obj38 = properties4.put((java.lang.Object) properties14, (java.lang.Object) properties32);
        java.util.Collection<java.lang.Object> objCollection39 = properties32.values();
        java.io.Reader reader40 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties32.load(reader40);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(obj6);
        org.junit.Assert.assertNotNull(objEnumeration7);
        org.junit.Assert.assertNotNull(objEntrySet8);
        org.junit.Assert.assertNotNull(objSet9);
        org.junit.Assert.assertNull(obj16);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 0 + "'", int18 == 0);
        org.junit.Assert.assertNull(obj26);
        org.junit.Assert.assertNull(str29);
        org.junit.Assert.assertNull(obj36);
        org.junit.Assert.assertNull(obj38);
        org.junit.Assert.assertNotNull(objCollection39);
    }

    @Test
    public void test1784() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1784");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        boolean boolean1 = atomikosProperties0.isForceShutdownOnVmExit();
        java.util.Properties properties2 = atomikosProperties0.asProperties();
        java.util.Properties properties3 = null;
        java.util.Properties properties4 = new java.util.Properties(properties3);
        java.util.Properties properties5 = new java.util.Properties(properties3);
        java.util.Properties properties6 = null;
        java.util.Properties properties7 = new java.util.Properties(properties6);
        java.lang.Object obj9 = properties5.put((java.lang.Object) properties7, (java.lang.Object) (short) 1);
        properties7.clear();
        int int11 = properties7.size();
        java.util.Properties properties12 = null;
        java.util.Properties properties13 = new java.util.Properties(properties12);
        java.util.Properties properties14 = new java.util.Properties(properties12);
        java.util.Properties properties15 = null;
        java.util.Properties properties16 = new java.util.Properties(properties15);
        java.lang.Object obj18 = properties14.put((java.lang.Object) properties16, (java.lang.Object) (short) 1);
        java.util.Properties properties19 = new java.util.Properties(properties16);
        java.util.Properties properties20 = new java.util.Properties(properties16);
        boolean boolean22 = properties7.remove((java.lang.Object) properties16, (java.lang.Object) 10.0f);
        boolean boolean23 = properties2.containsKey((java.lang.Object) 10.0f);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties25 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties25.setDefaultJtaTimeout((long) (byte) 10);
        atomikosProperties25.setCheckpointInterval((long) (byte) 0);
        atomikosProperties25.setEnableLogging(true);
        java.lang.Object obj32 = properties2.getOrDefault((java.lang.Object) (byte) 0, (java.lang.Object) true);
        java.util.Properties properties33 = new java.util.Properties(properties2);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties34 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties34.setDefaultJtaTimeout((long) (byte) 10);
        atomikosProperties34.setCheckpointInterval((long) (byte) 0);
        long long39 = atomikosProperties34.getMaxTimeout();
        java.util.Properties properties40 = null;
        java.util.Properties properties41 = new java.util.Properties(properties40);
        java.util.Properties properties42 = new java.util.Properties(properties40);
        java.util.Properties properties43 = null;
        java.util.Properties properties44 = new java.util.Properties(properties43);
        java.lang.Object obj46 = properties42.put((java.lang.Object) properties44, (java.lang.Object) (short) 1);
        java.util.Properties properties48 = null;
        java.util.Properties properties49 = new java.util.Properties(properties48);
        java.util.Properties properties50 = new java.util.Properties(properties48);
        java.util.Properties properties51 = null;
        java.util.Properties properties52 = new java.util.Properties(properties51);
        java.lang.Object obj54 = properties50.put((java.lang.Object) properties52, (java.lang.Object) (short) 1);
        boolean boolean55 = properties44.remove((java.lang.Object) false, (java.lang.Object) (short) 1);
        java.lang.Object obj57 = properties44.remove((java.lang.Object) '#');
        java.util.Set<java.lang.Object> objSet58 = properties44.keySet();
        properties44.clear();
        java.util.Properties properties60 = null;
        java.util.Properties properties61 = new java.util.Properties(properties60);
        java.util.Properties properties62 = new java.util.Properties(properties60);
        java.util.Properties properties63 = null;
        java.util.Properties properties64 = new java.util.Properties(properties63);
        java.lang.Object obj66 = properties62.put((java.lang.Object) properties64, (java.lang.Object) (short) 1);
        java.util.Enumeration<java.lang.Object> objEnumeration67 = properties64.elements();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet68 = properties64.entrySet();
        boolean boolean69 = properties44.equals((java.lang.Object) properties64);
        java.util.Enumeration<java.lang.Object> objEnumeration70 = properties64.elements();
        java.lang.Object obj71 = properties33.put((java.lang.Object) atomikosProperties34, (java.lang.Object) properties64);
        java.util.Set<java.lang.String> strSet72 = properties64.stringPropertyNames();
        java.util.Collection<java.lang.Object> objCollection73 = properties64.values();
        int int74 = properties64.size();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties75 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        boolean boolean76 = atomikosProperties75.isForceShutdownOnVmExit();
        java.lang.String str77 = atomikosProperties75.getLogBaseName();
        java.lang.String str78 = atomikosProperties75.getService();
        atomikosProperties75.setLogBaseName("{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.tm_unique_name=, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
        boolean boolean81 = properties64.equals((java.lang.Object) atomikosProperties75);
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertNotNull(properties2);
        org.junit.Assert.assertNull(obj9);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertNull(obj18);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertEquals("'" + obj32 + "' != '" + true + "'", obj32, true);
        org.junit.Assert.assertTrue("'" + long39 + "' != '" + 300000L + "'", long39 == 300000L);
        org.junit.Assert.assertNull(obj46);
        org.junit.Assert.assertNull(obj54);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertNull(obj57);
        org.junit.Assert.assertNotNull(objSet58);
        org.junit.Assert.assertNull(obj66);
        org.junit.Assert.assertNotNull(objEnumeration67);
        org.junit.Assert.assertNotNull(objEntrySet68);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + true + "'", boolean69 == true);
        org.junit.Assert.assertNotNull(objEnumeration70);
        org.junit.Assert.assertNull(obj71);
        org.junit.Assert.assertNotNull(strSet72);
        org.junit.Assert.assertNotNull(objCollection73);
        org.junit.Assert.assertTrue("'" + int74 + "' != '" + 0 + "'", int74 == 0);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
        org.junit.Assert.assertEquals("'" + str77 + "' != '" + "tmlog" + "'", str77, "tmlog");
        org.junit.Assert.assertNull(str78);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + false + "'", boolean81 == false);
    }

    @Test
    public void test1785() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1785");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Properties properties2 = new java.util.Properties(properties0);
        java.util.Properties properties3 = null;
        java.util.Properties properties4 = new java.util.Properties(properties3);
        java.lang.Object obj6 = properties2.put((java.lang.Object) properties4, (java.lang.Object) (short) 1);
        java.util.Properties properties8 = null;
        java.util.Properties properties9 = new java.util.Properties(properties8);
        java.util.Properties properties10 = new java.util.Properties(properties8);
        java.util.Properties properties11 = null;
        java.util.Properties properties12 = new java.util.Properties(properties11);
        java.lang.Object obj14 = properties10.put((java.lang.Object) properties12, (java.lang.Object) (short) 1);
        boolean boolean15 = properties4.remove((java.lang.Object) false, (java.lang.Object) (short) 1);
        java.util.Set<java.lang.String> strSet16 = properties4.stringPropertyNames();
        java.lang.Object obj17 = properties4.clone();
        java.util.Properties properties18 = new java.util.Properties(properties4);
        java.util.Enumeration<java.lang.Object> objEnumeration19 = properties4.keys();
        java.util.Properties properties20 = null;
        java.util.Properties properties21 = new java.util.Properties(properties20);
        java.util.Properties properties22 = new java.util.Properties(properties20);
        java.util.Properties properties23 = null;
        java.util.Properties properties24 = new java.util.Properties(properties23);
        java.lang.Object obj26 = properties22.put((java.lang.Object) properties24, (java.lang.Object) (short) 1);
        properties24.clear();
        java.lang.String str29 = properties24.getProperty("");
        java.util.Properties properties30 = new java.util.Properties(properties24);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties31 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties31.setDefaultJtaTimeout((long) (byte) 10);
        atomikosProperties31.setCheckpointInterval((long) (byte) 0);
        atomikosProperties31.setTransactionManagerUniqueName("");
        java.util.Properties properties38 = atomikosProperties31.asProperties();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties39 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties39.setThreadedTwoPhaseCommit(true);
        atomikosProperties39.setMaxActives((int) '#');
        atomikosProperties39.setForceShutdownOnVmExit(true);
        java.lang.String str46 = atomikosProperties39.getLogBaseDir();
        java.lang.Object obj47 = properties38.remove((java.lang.Object) atomikosProperties39);
        java.util.Collection<java.lang.Object> objCollection48 = properties38.values();
        java.util.Properties properties49 = null;
        java.util.Properties properties50 = new java.util.Properties(properties49);
        java.util.Properties properties51 = new java.util.Properties(properties49);
        java.util.Properties properties52 = null;
        java.util.Properties properties53 = new java.util.Properties(properties52);
        java.lang.Object obj55 = properties51.put((java.lang.Object) properties53, (java.lang.Object) (short) 1);
        java.util.Properties properties56 = new java.util.Properties(properties53);
        int int57 = properties53.size();
        java.lang.Object obj59 = properties53.get((java.lang.Object) (short) 100);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties60 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        int int61 = atomikosProperties60.getMaxActives();
        long long62 = atomikosProperties60.getMaxTimeout();
        java.util.Properties properties63 = atomikosProperties60.asProperties();
        java.util.Properties properties64 = null;
        java.util.Properties properties65 = new java.util.Properties(properties64);
        java.util.Properties properties66 = new java.util.Properties(properties64);
        java.util.Properties properties67 = null;
        java.util.Properties properties68 = new java.util.Properties(properties67);
        java.lang.Object obj70 = properties66.put((java.lang.Object) properties68, (java.lang.Object) (short) 1);
        java.util.Properties properties71 = new java.util.Properties(properties68);
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet72 = properties68.entrySet();
        java.lang.Object obj73 = properties63.remove((java.lang.Object) properties68);
        java.util.Enumeration<?> wildcardEnumeration74 = properties63.propertyNames();
        java.util.Properties properties75 = new java.util.Properties(properties63);
        boolean boolean76 = properties30.replace((java.lang.Object) objCollection48, (java.lang.Object) properties53, (java.lang.Object) properties75);
        boolean boolean77 = properties4.equals((java.lang.Object) properties75);
        java.io.InputStream inputStream78 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties4.loadFromXML(inputStream78);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(obj6);
        org.junit.Assert.assertNull(obj14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(strSet16);
        org.junit.Assert.assertNotNull(obj17);
        org.junit.Assert.assertEquals(obj17.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj17), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj17), "{}");
        org.junit.Assert.assertNotNull(objEnumeration19);
        org.junit.Assert.assertNull(obj26);
        org.junit.Assert.assertNull(str29);
        org.junit.Assert.assertNotNull(properties38);
        org.junit.Assert.assertNull(str46);
        org.junit.Assert.assertNull(obj47);
        org.junit.Assert.assertNotNull(objCollection48);
        org.junit.Assert.assertNull(obj55);
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + 0 + "'", int57 == 0);
        org.junit.Assert.assertNull(obj59);
        org.junit.Assert.assertTrue("'" + int61 + "' != '" + 50 + "'", int61 == 50);
        org.junit.Assert.assertTrue("'" + long62 + "' != '" + 300000L + "'", long62 == 300000L);
        org.junit.Assert.assertNotNull(properties63);
        org.junit.Assert.assertNull(obj70);
        org.junit.Assert.assertNotNull(objEntrySet72);
        org.junit.Assert.assertNull(obj73);
        org.junit.Assert.assertNotNull(wildcardEnumeration74);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + true + "'", boolean77 == true);
    }

    @Test
    public void test1786() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1786");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setDefaultJtaTimeout((long) (byte) 10);
        atomikosProperties0.setCheckpointInterval((long) (byte) 0);
        atomikosProperties0.setTransactionManagerUniqueName("");
        java.util.Properties properties7 = atomikosProperties0.asProperties();
        java.lang.String str8 = atomikosProperties0.getTransactionManagerUniqueName();
        java.util.Properties properties9 = atomikosProperties0.asProperties();
        java.util.Properties properties10 = new java.util.Properties(properties9);
        java.util.Properties properties11 = new java.util.Properties(properties10);
        java.io.OutputStream outputStream12 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties11.storeToXML(outputStream12, "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}", "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=true, com.atomikos.icatch.max_actives=35, com.atomikos.icatch.log_base_name=tmlog}");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(properties7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "" + "'", str8, "");
        org.junit.Assert.assertNotNull(properties9);
    }

    @Test
    public void test1787() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1787");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setDefaultJtaTimeout((long) (byte) 10);
        atomikosProperties0.setCheckpointInterval((long) (byte) 0);
        atomikosProperties0.setTransactionManagerUniqueName("");
        java.util.Properties properties7 = atomikosProperties0.asProperties();
        java.util.Properties properties8 = atomikosProperties0.asProperties();
        java.util.Properties properties9 = null;
        java.util.Properties properties10 = new java.util.Properties(properties9);
        java.util.Properties properties11 = new java.util.Properties(properties9);
        java.util.Properties properties12 = null;
        java.util.Properties properties13 = new java.util.Properties(properties12);
        java.lang.Object obj15 = properties11.put((java.lang.Object) properties13, (java.lang.Object) (short) 1);
        properties13.clear();
        int int17 = properties13.size();
        java.lang.Object obj20 = properties13.setProperty("hi!", "hi!");
        java.lang.Object obj23 = properties13.setProperty("tmlog", "tmlog");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties24 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties24.setDefaultJtaTimeout((long) (byte) 10);
        atomikosProperties24.setCheckpointInterval((long) (byte) 0);
        atomikosProperties24.setTransactionManagerUniqueName("");
        boolean boolean31 = atomikosProperties24.isEnableLogging();
        java.lang.String str32 = atomikosProperties24.getLogBaseName();
        atomikosProperties24.setThreadedTwoPhaseCommit(false);
        java.lang.Object obj35 = properties8.put((java.lang.Object) properties13, (java.lang.Object) atomikosProperties24);
        java.util.Properties properties36 = new java.util.Properties(properties8);
        java.util.Properties properties37 = new java.util.Properties(properties8);
        boolean boolean38 = properties37.isEmpty();
        org.junit.Assert.assertNotNull(properties7);
        org.junit.Assert.assertNotNull(properties8);
        org.junit.Assert.assertNull(obj15);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 0 + "'", int17 == 0);
        org.junit.Assert.assertNull(obj20);
        org.junit.Assert.assertNull(obj23);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "tmlog" + "'", str32, "tmlog");
        org.junit.Assert.assertNull(obj35);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
    }

    @Test
    public void test1788() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1788");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Properties properties2 = new java.util.Properties(properties0);
        java.util.Properties properties3 = null;
        java.util.Properties properties4 = new java.util.Properties(properties3);
        java.lang.Object obj6 = properties2.put((java.lang.Object) properties4, (java.lang.Object) (short) 1);
        java.util.Properties properties7 = new java.util.Properties(properties4);
        java.util.Properties properties8 = new java.util.Properties(properties4);
        java.util.Set<java.lang.Object> objSet9 = properties8.keySet();
        java.util.Properties properties10 = new java.util.Properties(properties8);
        int int11 = properties10.size();
        java.util.Properties properties12 = null;
        java.util.Properties properties13 = new java.util.Properties(properties12);
        java.util.Properties properties14 = new java.util.Properties(properties12);
        java.util.Properties properties15 = null;
        java.util.Properties properties16 = new java.util.Properties(properties15);
        java.lang.Object obj18 = properties14.put((java.lang.Object) properties16, (java.lang.Object) (short) 1);
        java.util.Properties properties20 = null;
        java.util.Properties properties21 = new java.util.Properties(properties20);
        java.util.Properties properties22 = new java.util.Properties(properties20);
        java.util.Properties properties23 = null;
        java.util.Properties properties24 = new java.util.Properties(properties23);
        java.lang.Object obj26 = properties22.put((java.lang.Object) properties24, (java.lang.Object) (short) 1);
        boolean boolean27 = properties16.remove((java.lang.Object) false, (java.lang.Object) (short) 1);
        java.util.Set<java.lang.String> strSet28 = properties16.stringPropertyNames();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties29 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties29.setDefaultJtaTimeout((long) (byte) 10);
        long long32 = atomikosProperties29.getDefaultJtaTimeout();
        java.lang.Object obj33 = properties16.get((java.lang.Object) atomikosProperties29);
        atomikosProperties29.setCheckpointInterval((long) (short) 100);
        java.util.Properties properties36 = atomikosProperties29.asProperties();
        java.lang.String str37 = atomikosProperties29.getLogBaseName();
        atomikosProperties29.setLogBaseDir("{}");
        java.util.Properties properties40 = null;
        java.util.Properties properties41 = new java.util.Properties(properties40);
        int int42 = properties41.size();
        java.lang.Object obj43 = properties10.getOrDefault((java.lang.Object) atomikosProperties29, (java.lang.Object) properties41);
        java.util.Properties properties44 = null;
        java.util.Properties properties45 = new java.util.Properties(properties44);
        java.util.Properties properties46 = new java.util.Properties(properties44);
        java.util.Properties properties47 = null;
        java.util.Properties properties48 = new java.util.Properties(properties47);
        java.lang.Object obj50 = properties46.put((java.lang.Object) properties48, (java.lang.Object) (short) 1);
        properties48.clear();
        int int52 = properties48.size();
        java.util.Properties properties53 = null;
        java.util.Properties properties54 = new java.util.Properties(properties53);
        java.util.Properties properties55 = new java.util.Properties(properties53);
        java.util.Properties properties56 = null;
        java.util.Properties properties57 = new java.util.Properties(properties56);
        java.lang.Object obj59 = properties55.put((java.lang.Object) properties57, (java.lang.Object) (short) 1);
        java.util.Properties properties60 = new java.util.Properties(properties57);
        java.util.Properties properties61 = new java.util.Properties(properties57);
        boolean boolean63 = properties48.remove((java.lang.Object) properties57, (java.lang.Object) 10.0f);
        java.util.Enumeration<java.lang.Object> objEnumeration64 = properties57.elements();
        java.util.Properties properties65 = new java.util.Properties(properties57);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties66 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        int int67 = atomikosProperties66.getMaxActives();
        long long68 = atomikosProperties66.getMaxTimeout();
        java.util.Properties properties69 = atomikosProperties66.asProperties();
        int int70 = atomikosProperties66.getMaxActives();
        java.lang.Object obj72 = properties65.putIfAbsent((java.lang.Object) atomikosProperties66, (java.lang.Object) 1);
        atomikosProperties66.setLogBaseDir("{}");
        java.util.Properties properties75 = atomikosProperties66.asProperties();
        properties10.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties75);
        java.util.Properties properties77 = null;
        java.util.Properties properties78 = new java.util.Properties(properties77);
        java.util.Properties properties79 = new java.util.Properties(properties77);
        java.util.Properties properties80 = null;
        java.util.Properties properties81 = new java.util.Properties(properties80);
        java.lang.Object obj83 = properties79.put((java.lang.Object) properties81, (java.lang.Object) (short) 1);
        boolean boolean84 = properties79.isEmpty();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties85 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties85.setDefaultJtaTimeout((long) (byte) 10);
        atomikosProperties85.setCheckpointInterval((long) (byte) 0);
        atomikosProperties85.setTransactionManagerUniqueName("");
        java.util.Properties properties92 = atomikosProperties85.asProperties();
        java.lang.Object obj93 = properties79.remove((java.lang.Object) properties92);
        java.util.Collection<java.lang.Object> objCollection94 = properties92.values();
        boolean boolean95 = properties10.contains((java.lang.Object) objCollection94);
        java.lang.String str96 = properties10.toString();
        java.util.Properties properties97 = new java.util.Properties(properties10);
        java.io.InputStream inputStream98 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties97.load(inputStream98);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(obj6);
        org.junit.Assert.assertNotNull(objSet9);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertNull(obj18);
        org.junit.Assert.assertNull(obj26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(strSet28);
        org.junit.Assert.assertTrue("'" + long32 + "' != '" + 10L + "'", long32 == 10L);
        org.junit.Assert.assertNull(obj33);
        org.junit.Assert.assertNotNull(properties36);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "tmlog" + "'", str37, "tmlog");
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 0 + "'", int42 == 0);
        org.junit.Assert.assertNotNull(obj43);
        org.junit.Assert.assertEquals(obj43.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj43), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj43), "{}");
        org.junit.Assert.assertNull(obj50);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + 0 + "'", int52 == 0);
        org.junit.Assert.assertNull(obj59);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertNotNull(objEnumeration64);
        org.junit.Assert.assertTrue("'" + int67 + "' != '" + 50 + "'", int67 == 50);
        org.junit.Assert.assertTrue("'" + long68 + "' != '" + 300000L + "'", long68 == 300000L);
        org.junit.Assert.assertNotNull(properties69);
        org.junit.Assert.assertTrue("'" + int70 + "' != '" + 50 + "'", int70 == 50);
        org.junit.Assert.assertNull(obj72);
        org.junit.Assert.assertNotNull(properties75);
        org.junit.Assert.assertNull(obj83);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + false + "'", boolean84 == false);
        org.junit.Assert.assertNotNull(properties92);
        org.junit.Assert.assertNull(obj93);
        org.junit.Assert.assertNotNull(objCollection94);
        org.junit.Assert.assertTrue("'" + boolean95 + "' != '" + false + "'", boolean95 == false);
// flaky:         org.junit.Assert.assertEquals("'" + str96 + "' != '" + "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.log_base_dir={}, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}" + "'", str96, "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.log_base_dir={}, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
    }

    @Test
    public void test1789() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1789");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Properties properties2 = new java.util.Properties(properties0);
        java.util.Properties properties3 = null;
        java.util.Properties properties4 = new java.util.Properties(properties3);
        java.lang.Object obj6 = properties2.put((java.lang.Object) properties4, (java.lang.Object) (short) 1);
        java.util.Properties properties7 = new java.util.Properties(properties4);
        java.util.Enumeration<java.lang.Object> objEnumeration8 = properties7.elements();
        java.util.Enumeration<java.lang.Object> objEnumeration9 = properties7.elements();
        java.util.Properties properties10 = new java.util.Properties(properties7);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties11 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties11.setDefaultJtaTimeout((long) (byte) 10);
        boolean boolean14 = atomikosProperties11.isForceShutdownOnVmExit();
        atomikosProperties11.setMaxActives(0);
        atomikosProperties11.setDefaultJtaTimeout((long) (byte) 10);
        java.util.Properties properties19 = atomikosProperties11.asProperties();
        boolean boolean20 = properties10.equals((java.lang.Object) properties19);
        java.lang.String str21 = properties19.toString();
        java.lang.String str23 = properties19.getProperty("{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=0, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=true, com.atomikos.icatch.max_actives=100, com.atomikos.icatch.log_base_name=tmlog}");
        org.junit.Assert.assertNull(obj6);
        org.junit.Assert.assertNotNull(objEnumeration8);
        org.junit.Assert.assertNotNull(objEnumeration9);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(properties19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
// flaky:         org.junit.Assert.assertEquals("'" + str21 + "' != '" + "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.max_actives=0, com.atomikos.icatch.log_base_name=tmlog}" + "'", str21, "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.max_actives=0, com.atomikos.icatch.log_base_name=tmlog}");
        org.junit.Assert.assertNull(str23);
    }

    @Test
    public void test1790() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1790");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Properties properties2 = new java.util.Properties(properties0);
        java.util.Properties properties3 = null;
        java.util.Properties properties4 = new java.util.Properties(properties3);
        java.lang.Object obj6 = properties2.put((java.lang.Object) properties4, (java.lang.Object) (short) 1);
        properties4.clear();
        int int8 = properties4.size();
        java.util.Properties properties9 = new java.util.Properties(properties4);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties10 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        int int11 = atomikosProperties10.getMaxActives();
        long long12 = atomikosProperties10.getMaxTimeout();
        java.util.Properties properties13 = atomikosProperties10.asProperties();
        java.util.Properties properties14 = atomikosProperties10.asProperties();
        java.util.Properties properties15 = null;
        java.util.Properties properties16 = new java.util.Properties(properties15);
        java.util.Properties properties17 = new java.util.Properties(properties15);
        java.util.Properties properties18 = null;
        java.util.Properties properties19 = new java.util.Properties(properties18);
        java.lang.Object obj21 = properties17.put((java.lang.Object) properties19, (java.lang.Object) (short) 1);
        java.util.Enumeration<java.lang.Object> objEnumeration22 = properties19.elements();
        java.lang.Object obj23 = properties4.replace((java.lang.Object) atomikosProperties10, (java.lang.Object) properties19);
        java.util.Set<java.lang.String> strSet24 = properties4.stringPropertyNames();
        properties4.clear();
        java.util.Properties properties26 = new java.util.Properties(properties4);
        java.lang.String str27 = properties4.toString();
        java.io.Writer writer28 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties4.store(writer28, "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=0, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=true, com.atomikos.icatch.max_actives=100, com.atomikos.icatch.log_base_name=tmlog}");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(obj6);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 50 + "'", int11 == 50);
        org.junit.Assert.assertTrue("'" + long12 + "' != '" + 300000L + "'", long12 == 300000L);
        org.junit.Assert.assertNotNull(properties13);
        org.junit.Assert.assertNotNull(properties14);
        org.junit.Assert.assertNull(obj21);
        org.junit.Assert.assertNotNull(objEnumeration22);
        org.junit.Assert.assertNull(obj23);
        org.junit.Assert.assertNotNull(strSet24);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "{}" + "'", str27, "{}");
    }

    @Test
    public void test1791() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1791");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        int int1 = atomikosProperties0.getMaxActives();
        long long2 = atomikosProperties0.getMaxTimeout();
        java.lang.String str3 = atomikosProperties0.getLogBaseDir();
        atomikosProperties0.setCheckpointInterval(100L);
        long long6 = atomikosProperties0.getDefaultJtaTimeout();
        atomikosProperties0.setSerialJtaTransactions(false);
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 50 + "'", int1 == 50);
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + 300000L + "'", long2 == 300000L);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertTrue("'" + long6 + "' != '" + 10000L + "'", long6 == 10000L);
    }

    @Test
    public void test1792() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1792");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setDefaultJtaTimeout((long) (byte) 10);
        long long3 = atomikosProperties0.getDefaultJtaTimeout();
        atomikosProperties0.setTransactionManagerUniqueName("hi!");
        atomikosProperties0.setLogBaseName("tmlog");
        atomikosProperties0.setCheckpointInterval(300000L);
        atomikosProperties0.setService("hi!");
        atomikosProperties0.setForceShutdownOnVmExit(true);
        int int14 = atomikosProperties0.getMaxActives();
        atomikosProperties0.setEnableLogging(true);
        atomikosProperties0.setLogBaseDir("");
        atomikosProperties0.setMaxTimeout((long) 50);
        org.junit.Assert.assertTrue("'" + long3 + "' != '" + 10L + "'", long3 == 10L);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 50 + "'", int14 == 50);
    }

    @Test
    public void test1793() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1793");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        boolean boolean1 = atomikosProperties0.isForceShutdownOnVmExit();
        java.util.Properties properties2 = atomikosProperties0.asProperties();
        java.util.Properties properties3 = null;
        java.util.Properties properties4 = new java.util.Properties(properties3);
        java.util.Properties properties5 = new java.util.Properties(properties3);
        java.util.Properties properties6 = null;
        java.util.Properties properties7 = new java.util.Properties(properties6);
        java.lang.Object obj9 = properties5.put((java.lang.Object) properties7, (java.lang.Object) (short) 1);
        properties7.clear();
        int int11 = properties7.size();
        java.util.Properties properties12 = null;
        java.util.Properties properties13 = new java.util.Properties(properties12);
        java.util.Properties properties14 = new java.util.Properties(properties12);
        java.util.Properties properties15 = null;
        java.util.Properties properties16 = new java.util.Properties(properties15);
        java.lang.Object obj18 = properties14.put((java.lang.Object) properties16, (java.lang.Object) (short) 1);
        java.util.Properties properties19 = new java.util.Properties(properties16);
        java.util.Properties properties20 = new java.util.Properties(properties16);
        boolean boolean22 = properties7.remove((java.lang.Object) properties16, (java.lang.Object) 10.0f);
        boolean boolean23 = properties2.containsKey((java.lang.Object) 10.0f);
        java.util.Properties properties24 = new java.util.Properties(properties2);
        java.util.Properties properties25 = new java.util.Properties(properties2);
        java.util.Enumeration<java.lang.Object> objEnumeration26 = properties2.keys();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties27 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties27.setDefaultJtaTimeout((long) (byte) 10);
        long long30 = atomikosProperties27.getDefaultJtaTimeout();
        atomikosProperties27.setTransactionManagerUniqueName("");
        boolean boolean33 = atomikosProperties27.isEnableLogging();
        java.lang.String str34 = atomikosProperties27.getLogBaseName();
        atomikosProperties27.setMaxTimeout(10L);
        long long37 = atomikosProperties27.getDefaultJtaTimeout();
        java.util.Properties properties38 = atomikosProperties27.asProperties();
        boolean boolean39 = properties2.equals((java.lang.Object) properties38);
        java.io.InputStream inputStream40 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties38.load(inputStream40);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertNotNull(properties2);
        org.junit.Assert.assertNull(obj9);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertNull(obj18);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(objEnumeration26);
        org.junit.Assert.assertTrue("'" + long30 + "' != '" + 10L + "'", long30 == 10L);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "tmlog" + "'", str34, "tmlog");
        org.junit.Assert.assertTrue("'" + long37 + "' != '" + 10L + "'", long37 == 10L);
        org.junit.Assert.assertNotNull(properties38);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
    }

    @Test
    public void test1794() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1794");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setDefaultJtaTimeout((long) (byte) 10);
        atomikosProperties0.setCheckpointInterval((long) (byte) 0);
        atomikosProperties0.setEnableLogging(true);
        java.lang.String str7 = atomikosProperties0.getLogBaseName();
        atomikosProperties0.setCheckpointInterval((long) ' ');
        atomikosProperties0.setMaxActives(10);
        boolean boolean12 = atomikosProperties0.isThreadedTwoPhaseCommit();
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "tmlog" + "'", str7, "tmlog");
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
    }

    @Test
    public void test1795() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1795");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Properties properties2 = new java.util.Properties(properties0);
        java.util.Properties properties3 = null;
        java.util.Properties properties4 = new java.util.Properties(properties3);
        java.lang.Object obj6 = properties2.put((java.lang.Object) properties4, (java.lang.Object) (short) 1);
        boolean boolean7 = properties2.isEmpty();
        java.util.Properties properties8 = null;
        java.util.Properties properties9 = new java.util.Properties(properties8);
        java.util.Properties properties10 = new java.util.Properties(properties8);
        boolean boolean11 = properties2.containsKey((java.lang.Object) properties10);
        java.util.Properties properties12 = new java.util.Properties(properties10);
        java.lang.Object obj13 = properties12.clone();
        java.util.Properties properties15 = null;
        java.util.Properties properties16 = new java.util.Properties(properties15);
        java.util.Properties properties17 = new java.util.Properties(properties15);
        java.util.Properties properties18 = null;
        java.util.Properties properties19 = new java.util.Properties(properties18);
        java.lang.Object obj21 = properties17.put((java.lang.Object) properties19, (java.lang.Object) (short) 1);
        boolean boolean22 = properties17.isEmpty();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties23 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties23.setDefaultJtaTimeout((long) (byte) 10);
        atomikosProperties23.setCheckpointInterval((long) (byte) 0);
        atomikosProperties23.setTransactionManagerUniqueName("");
        java.util.Properties properties30 = atomikosProperties23.asProperties();
        java.lang.Object obj31 = properties17.remove((java.lang.Object) properties30);
        java.lang.Object obj32 = properties12.putIfAbsent((java.lang.Object) 1L, (java.lang.Object) properties17);
        java.util.Properties properties33 = null;
        java.util.Properties properties34 = new java.util.Properties(properties33);
        java.util.Properties properties35 = new java.util.Properties(properties33);
        java.util.Properties properties36 = null;
        java.util.Properties properties37 = new java.util.Properties(properties36);
        java.lang.Object obj39 = properties35.put((java.lang.Object) properties37, (java.lang.Object) (short) 1);
        java.util.Properties properties41 = null;
        java.util.Properties properties42 = new java.util.Properties(properties41);
        java.util.Properties properties43 = new java.util.Properties(properties41);
        java.util.Properties properties44 = null;
        java.util.Properties properties45 = new java.util.Properties(properties44);
        java.lang.Object obj47 = properties43.put((java.lang.Object) properties45, (java.lang.Object) (short) 1);
        boolean boolean48 = properties37.remove((java.lang.Object) false, (java.lang.Object) (short) 1);
        boolean boolean49 = properties12.containsValue((java.lang.Object) (short) 1);
        java.util.Properties properties50 = null;
        java.util.Properties properties51 = new java.util.Properties(properties50);
        java.util.Properties properties52 = new java.util.Properties(properties50);
        java.util.Properties properties53 = null;
        java.util.Properties properties54 = new java.util.Properties(properties53);
        java.lang.Object obj56 = properties52.put((java.lang.Object) properties54, (java.lang.Object) (short) 1);
        properties54.clear();
        java.lang.String str59 = properties54.getProperty("");
        java.util.Properties properties60 = null;
        java.util.Properties properties61 = new java.util.Properties(properties60);
        java.util.Properties properties62 = new java.util.Properties(properties60);
        java.util.Properties properties63 = null;
        java.util.Properties properties64 = new java.util.Properties(properties63);
        java.lang.Object obj66 = properties62.put((java.lang.Object) properties64, (java.lang.Object) (short) 1);
        properties54.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties62);
        boolean boolean68 = properties12.containsKey((java.lang.Object) properties54);
        // The following exception was thrown during execution in test generation
        try {
            java.util.Enumeration<?> wildcardEnumeration69 = properties54.propertyNames();
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: java.util.Properties cannot be cast to java.lang.String");
        } catch (java.lang.ClassCastException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(obj6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNotNull(obj13);
        org.junit.Assert.assertEquals(obj13.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj13), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj13), "{}");
        org.junit.Assert.assertNull(obj21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(properties30);
        org.junit.Assert.assertNull(obj31);
        org.junit.Assert.assertNull(obj32);
        org.junit.Assert.assertNull(obj39);
        org.junit.Assert.assertNull(obj47);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNull(obj56);
        org.junit.Assert.assertNull(str59);
        org.junit.Assert.assertNull(obj66);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
    }

    @Test
    public void test1796() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1796");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Properties properties2 = new java.util.Properties(properties0);
        java.util.Properties properties3 = null;
        java.util.Properties properties4 = new java.util.Properties(properties3);
        java.lang.Object obj6 = properties2.put((java.lang.Object) properties4, (java.lang.Object) (short) 1);
        properties4.clear();
        java.lang.String str9 = properties4.getProperty("");
        java.util.Properties properties10 = null;
        java.util.Properties properties11 = new java.util.Properties(properties10);
        java.util.Properties properties12 = new java.util.Properties(properties10);
        java.util.Properties properties13 = null;
        java.util.Properties properties14 = new java.util.Properties(properties13);
        java.lang.Object obj16 = properties12.put((java.lang.Object) properties14, (java.lang.Object) (short) 1);
        properties4.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties12);
        java.util.Properties properties18 = null;
        java.util.Properties properties19 = new java.util.Properties(properties18);
        java.util.Properties properties20 = new java.util.Properties(properties18);
        boolean boolean22 = properties20.containsValue((java.lang.Object) (short) 100);
        java.util.Properties properties23 = null;
        java.util.Properties properties24 = new java.util.Properties(properties23);
        java.util.Properties properties25 = new java.util.Properties(properties23);
        java.util.Properties properties26 = null;
        java.util.Properties properties27 = new java.util.Properties(properties26);
        java.lang.Object obj29 = properties25.put((java.lang.Object) properties27, (java.lang.Object) (short) 1);
        java.util.Enumeration<java.lang.Object> objEnumeration30 = properties27.elements();
        java.lang.Object obj31 = properties20.remove((java.lang.Object) properties27);
        java.lang.Object obj34 = properties27.setProperty("", "");
        java.util.Properties properties35 = null;
        java.util.Properties properties36 = new java.util.Properties(properties35);
        java.util.Properties properties37 = new java.util.Properties(properties35);
        java.util.Properties properties38 = null;
        java.util.Properties properties39 = new java.util.Properties(properties38);
        java.lang.Object obj41 = properties37.put((java.lang.Object) properties39, (java.lang.Object) (short) 1);
        java.util.Properties properties43 = null;
        java.util.Properties properties44 = new java.util.Properties(properties43);
        java.util.Properties properties45 = new java.util.Properties(properties43);
        java.util.Properties properties46 = null;
        java.util.Properties properties47 = new java.util.Properties(properties46);
        java.lang.Object obj49 = properties45.put((java.lang.Object) properties47, (java.lang.Object) (short) 1);
        boolean boolean50 = properties39.remove((java.lang.Object) false, (java.lang.Object) (short) 1);
        java.util.Properties properties51 = new java.util.Properties(properties39);
        properties27.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties51);
        java.lang.Object obj55 = properties51.setProperty("hi!", "hi!");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties56 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties56.setDefaultJtaTimeout((long) (byte) 10);
        atomikosProperties56.setCheckpointInterval((long) (byte) 0);
        atomikosProperties56.setTransactionManagerUniqueName("");
        java.util.Properties properties63 = atomikosProperties56.asProperties();
        java.lang.String str64 = atomikosProperties56.getTransactionManagerUniqueName();
        atomikosProperties56.setDefaultJtaTimeout((long) (-1));
        java.lang.Object obj67 = properties12.replace((java.lang.Object) "hi!", (java.lang.Object) atomikosProperties56);
        java.util.Properties properties68 = atomikosProperties56.asProperties();
        java.io.Writer writer69 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties68.store(writer69, "{=}");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(obj6);
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertNull(obj16);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNull(obj29);
        org.junit.Assert.assertNotNull(objEnumeration30);
        org.junit.Assert.assertNull(obj31);
        org.junit.Assert.assertNull(obj34);
        org.junit.Assert.assertNull(obj41);
        org.junit.Assert.assertNull(obj49);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertNull(obj55);
        org.junit.Assert.assertNotNull(properties63);
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "" + "'", str64, "");
        org.junit.Assert.assertNull(obj67);
        org.junit.Assert.assertNotNull(properties68);
    }

    @Test
    public void test1797() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1797");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Properties properties2 = new java.util.Properties(properties0);
        java.util.Properties properties3 = null;
        java.util.Properties properties4 = new java.util.Properties(properties3);
        java.lang.Object obj6 = properties2.put((java.lang.Object) properties4, (java.lang.Object) (short) 1);
        boolean boolean7 = properties2.isEmpty();
        java.util.Properties properties8 = null;
        java.util.Properties properties9 = new java.util.Properties(properties8);
        java.util.Properties properties10 = new java.util.Properties(properties8);
        boolean boolean11 = properties2.containsKey((java.lang.Object) properties10);
        java.util.Properties properties12 = new java.util.Properties(properties10);
        java.lang.Object obj13 = properties12.clone();
        java.util.Set<java.lang.String> strSet14 = properties12.stringPropertyNames();
        java.util.Properties properties15 = new java.util.Properties(properties12);
        java.lang.Object obj18 = properties12.setProperty("tmlog", "{}");
        java.io.PrintStream printStream19 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties12.list(printStream19);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(obj6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNotNull(obj13);
        org.junit.Assert.assertEquals(obj13.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj13), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj13), "{}");
        org.junit.Assert.assertNotNull(strSet14);
        org.junit.Assert.assertNull(obj18);
    }

    @Test
    public void test1798() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1798");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        boolean boolean1 = atomikosProperties0.isForceShutdownOnVmExit();
        java.util.Properties properties2 = atomikosProperties0.asProperties();
        java.util.Set<java.lang.String> strSet3 = properties2.stringPropertyNames();
        java.io.PrintStream printStream4 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties2.list(printStream4);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertNotNull(properties2);
        org.junit.Assert.assertNotNull(strSet3);
    }

    @Test
    public void test1799() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1799");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setDefaultJtaTimeout((long) (byte) 10);
        atomikosProperties0.setCheckpointInterval((long) (byte) 0);
        atomikosProperties0.setTransactionManagerUniqueName("");
        java.util.Properties properties7 = atomikosProperties0.asProperties();
        java.util.Properties properties8 = atomikosProperties0.asProperties();
        atomikosProperties0.setCheckpointInterval((long) (-1));
        atomikosProperties0.setThreadedTwoPhaseCommit(false);
        org.junit.Assert.assertNotNull(properties7);
        org.junit.Assert.assertNotNull(properties8);
    }

    @Test
    public void test1800() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1800");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        int int1 = atomikosProperties0.getMaxActives();
        long long2 = atomikosProperties0.getMaxTimeout();
        java.lang.String str3 = atomikosProperties0.getLogBaseDir();
        atomikosProperties0.setCheckpointInterval(100L);
        atomikosProperties0.setThreadedTwoPhaseCommit(false);
        atomikosProperties0.setCheckpointInterval((long) (byte) 10);
        atomikosProperties0.setTransactionManagerUniqueName("{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 50 + "'", int1 == 50);
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + 300000L + "'", long2 == 300000L);
        org.junit.Assert.assertNull(str3);
    }

    @Test
    public void test1801() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1801");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setEnableLogging(false);
        atomikosProperties0.setThreadedTwoPhaseCommit(true);
        java.lang.String str5 = atomikosProperties0.getLogBaseName();
        java.util.Properties properties6 = atomikosProperties0.asProperties();
        atomikosProperties0.setMaxActives((int) (byte) 0);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "tmlog" + "'", str5, "tmlog");
        org.junit.Assert.assertNotNull(properties6);
    }

    @Test
    public void test1802() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1802");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        int int1 = atomikosProperties0.getMaxActives();
        long long2 = atomikosProperties0.getMaxTimeout();
        java.util.Properties properties3 = atomikosProperties0.asProperties();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties4 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties4.setDefaultJtaTimeout((long) (byte) 10);
        long long7 = atomikosProperties4.getDefaultJtaTimeout();
        atomikosProperties4.setTransactionManagerUniqueName("hi!");
        atomikosProperties4.setLogBaseName("tmlog");
        atomikosProperties4.setTransactionManagerUniqueName("{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=0, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.tm_unique_name=, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
        atomikosProperties4.setThreadedTwoPhaseCommit(false);
        java.lang.Object obj16 = properties3.get((java.lang.Object) false);
        java.lang.Object obj19 = properties3.setProperty("{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.tm_unique_name=, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}", "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.tm_unique_name=, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
        java.util.Properties properties20 = new java.util.Properties(properties3);
        java.io.OutputStream outputStream21 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties20.storeToXML(outputStream21, "{{tmlog={com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=0, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.tm_unique_name=, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}, 4=true}={com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=0, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog, {}={}}}");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 50 + "'", int1 == 50);
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + 300000L + "'", long2 == 300000L);
        org.junit.Assert.assertNotNull(properties3);
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + 10L + "'", long7 == 10L);
        org.junit.Assert.assertNull(obj16);
        org.junit.Assert.assertNull(obj19);
    }

    @Test
    public void test1803() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1803");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        boolean boolean1 = atomikosProperties0.isForceShutdownOnVmExit();
        java.util.Properties properties2 = atomikosProperties0.asProperties();
        atomikosProperties0.setMaxTimeout((long) '4');
        atomikosProperties0.setTransactionManagerUniqueName("hi!");
        atomikosProperties0.setDefaultJtaTimeout(52L);
        boolean boolean9 = atomikosProperties0.isEnableLogging();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertNotNull(properties2);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
    }

    @Test
    public void test1804() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1804");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setDefaultJtaTimeout((long) (byte) 10);
        atomikosProperties0.setCheckpointInterval((long) (byte) 0);
        long long5 = atomikosProperties0.getMaxTimeout();
        atomikosProperties0.setSerialJtaTransactions(true);
        atomikosProperties0.setForceShutdownOnVmExit(false);
        java.lang.String str10 = atomikosProperties0.getLogBaseDir();
        java.lang.String str11 = atomikosProperties0.getService();
        long long12 = atomikosProperties0.getMaxTimeout();
        org.junit.Assert.assertTrue("'" + long5 + "' != '" + 300000L + "'", long5 == 300000L);
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertTrue("'" + long12 + "' != '" + 300000L + "'", long12 == 300000L);
    }

    @Test
    public void test1805() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1805");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setDefaultJtaTimeout((long) (byte) 10);
        atomikosProperties0.setSerialJtaTransactions(false);
        atomikosProperties0.setMaxTimeout((long) (short) -1);
        long long7 = atomikosProperties0.getDefaultJtaTimeout();
        atomikosProperties0.setService("{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.tm_unique_name=, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
        boolean boolean10 = atomikosProperties0.isSerialJtaTransactions();
        java.lang.String str11 = atomikosProperties0.getTransactionManagerUniqueName();
        java.lang.String str12 = atomikosProperties0.getLogBaseDir();
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + 10L + "'", long7 == 10L);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertNull(str12);
    }

    @Test
    public void test1806() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1806");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Properties properties2 = new java.util.Properties(properties0);
        boolean boolean4 = properties2.containsValue((java.lang.Object) (short) 100);
        java.util.Properties properties5 = null;
        java.util.Properties properties6 = new java.util.Properties(properties5);
        java.util.Properties properties7 = new java.util.Properties(properties5);
        java.util.Properties properties8 = null;
        java.util.Properties properties9 = new java.util.Properties(properties8);
        java.lang.Object obj11 = properties7.put((java.lang.Object) properties9, (java.lang.Object) (short) 1);
        java.util.Enumeration<java.lang.Object> objEnumeration12 = properties9.elements();
        java.lang.Object obj13 = properties2.remove((java.lang.Object) properties9);
        java.io.OutputStream outputStream14 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties2.storeToXML(outputStream14, "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=52, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.tm_unique_name=, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}", "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=0, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.tm_unique_name=, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNull(obj11);
        org.junit.Assert.assertNotNull(objEnumeration12);
        org.junit.Assert.assertNull(obj13);
    }

    @Test
    public void test1807() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1807");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Properties properties2 = new java.util.Properties(properties0);
        boolean boolean4 = properties2.containsValue((java.lang.Object) (short) 100);
        java.util.Enumeration<java.lang.Object> objEnumeration5 = properties2.keys();
        java.util.Properties properties6 = null;
        java.util.Properties properties7 = new java.util.Properties(properties6);
        java.util.Properties properties8 = new java.util.Properties(properties6);
        java.util.Properties properties9 = null;
        java.util.Properties properties10 = new java.util.Properties(properties9);
        java.lang.Object obj12 = properties8.put((java.lang.Object) properties10, (java.lang.Object) (short) 1);
        boolean boolean13 = properties8.isEmpty();
        java.util.Properties properties14 = null;
        java.util.Properties properties15 = new java.util.Properties(properties14);
        java.util.Properties properties16 = new java.util.Properties(properties14);
        boolean boolean17 = properties8.containsKey((java.lang.Object) properties16);
        java.util.Properties properties18 = new java.util.Properties(properties16);
        java.lang.Object obj19 = properties18.clone();
        java.lang.Object obj20 = properties2.remove(obj19);
        properties2.clear();
        java.util.Properties properties23 = null;
        java.util.Properties properties24 = new java.util.Properties(properties23);
        java.util.Properties properties25 = new java.util.Properties(properties23);
        java.util.Properties properties26 = null;
        java.util.Properties properties27 = new java.util.Properties(properties26);
        java.lang.Object obj29 = properties25.put((java.lang.Object) properties27, (java.lang.Object) (short) 1);
        java.util.Enumeration<java.lang.Object> objEnumeration30 = properties27.elements();
        java.lang.String str31 = properties27.toString();
        boolean boolean32 = properties2.remove((java.lang.Object) (short) 10, (java.lang.Object) str31);
        java.util.Properties properties33 = null;
        java.util.Properties properties34 = new java.util.Properties(properties33);
        java.util.Properties properties35 = new java.util.Properties(properties33);
        boolean boolean37 = properties35.containsValue((java.lang.Object) (short) 100);
        java.util.Enumeration<java.lang.Object> objEnumeration38 = properties35.keys();
        java.lang.Object obj39 = properties2.get((java.lang.Object) objEnumeration38);
        java.util.Properties properties40 = new java.util.Properties(properties2);
        java.io.OutputStream outputStream41 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties40.store(outputStream41, "");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(objEnumeration5);
        org.junit.Assert.assertNull(obj12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(obj19);
        org.junit.Assert.assertEquals(obj19.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj19), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj19), "{}");
        org.junit.Assert.assertNull(obj20);
        org.junit.Assert.assertNull(obj29);
        org.junit.Assert.assertNotNull(objEnumeration30);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "{}" + "'", str31, "{}");
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(objEnumeration38);
        org.junit.Assert.assertNull(obj39);
    }

    @Test
    public void test1808() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1808");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Properties properties2 = new java.util.Properties(properties0);
        java.util.Properties properties3 = null;
        java.util.Properties properties4 = new java.util.Properties(properties3);
        java.lang.Object obj6 = properties2.put((java.lang.Object) properties4, (java.lang.Object) (short) 1);
        java.util.Properties properties8 = null;
        java.util.Properties properties9 = new java.util.Properties(properties8);
        java.util.Properties properties10 = new java.util.Properties(properties8);
        java.util.Properties properties11 = null;
        java.util.Properties properties12 = new java.util.Properties(properties11);
        java.lang.Object obj14 = properties10.put((java.lang.Object) properties12, (java.lang.Object) (short) 1);
        boolean boolean15 = properties4.remove((java.lang.Object) false, (java.lang.Object) (short) 1);
        java.util.Set<java.lang.String> strSet16 = properties4.stringPropertyNames();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties17 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties17.setDefaultJtaTimeout((long) (byte) 10);
        atomikosProperties17.setCheckpointInterval((long) (byte) 0);
        atomikosProperties17.setTransactionManagerUniqueName("");
        boolean boolean24 = atomikosProperties17.isEnableLogging();
        atomikosProperties17.setSerialJtaTransactions(false);
        atomikosProperties17.setLogBaseDir("");
        java.util.Properties properties29 = null;
        java.util.Properties properties30 = new java.util.Properties(properties29);
        java.util.Properties properties31 = new java.util.Properties(properties29);
        java.util.Properties properties32 = null;
        java.util.Properties properties33 = new java.util.Properties(properties32);
        java.lang.Object obj35 = properties31.put((java.lang.Object) properties33, (java.lang.Object) (short) 1);
        java.util.Properties properties36 = new java.util.Properties(properties33);
        boolean boolean37 = properties4.remove((java.lang.Object) "", (java.lang.Object) properties36);
        java.lang.String str39 = properties4.getProperty("{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.tm_unique_name=, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties40 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties40.setDefaultJtaTimeout((long) (byte) 10);
        atomikosProperties40.setCheckpointInterval((long) (byte) 0);
        atomikosProperties40.setTransactionManagerUniqueName("");
        boolean boolean47 = atomikosProperties40.isEnableLogging();
        atomikosProperties40.setSerialJtaTransactions(false);
        java.lang.Object obj50 = properties4.remove((java.lang.Object) atomikosProperties40);
        int int51 = atomikosProperties40.getMaxActives();
        atomikosProperties40.setTransactionManagerUniqueName("{tmlog={com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=0, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.tm_unique_name=, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}, 4=true}");
        atomikosProperties40.setForceShutdownOnVmExit(false);
        java.util.Properties properties56 = atomikosProperties40.asProperties();
        org.junit.Assert.assertNull(obj6);
        org.junit.Assert.assertNull(obj14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(strSet16);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNull(obj35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNull(str39);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertNull(obj50);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + 50 + "'", int51 == 50);
        org.junit.Assert.assertNotNull(properties56);
    }

    @Test
    public void test1809() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1809");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Properties properties2 = new java.util.Properties(properties0);
        java.util.Properties properties3 = null;
        java.util.Properties properties4 = new java.util.Properties(properties3);
        java.lang.Object obj6 = properties2.put((java.lang.Object) properties4, (java.lang.Object) (short) 1);
        properties4.clear();
        int int8 = properties4.size();
        java.util.Properties properties9 = new java.util.Properties(properties4);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties10 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        int int11 = atomikosProperties10.getMaxActives();
        long long12 = atomikosProperties10.getMaxTimeout();
        java.util.Properties properties13 = atomikosProperties10.asProperties();
        java.util.Properties properties14 = atomikosProperties10.asProperties();
        java.util.Properties properties15 = null;
        java.util.Properties properties16 = new java.util.Properties(properties15);
        java.util.Properties properties17 = new java.util.Properties(properties15);
        java.util.Properties properties18 = null;
        java.util.Properties properties19 = new java.util.Properties(properties18);
        java.lang.Object obj21 = properties17.put((java.lang.Object) properties19, (java.lang.Object) (short) 1);
        java.util.Enumeration<java.lang.Object> objEnumeration22 = properties19.elements();
        java.lang.Object obj23 = properties4.replace((java.lang.Object) atomikosProperties10, (java.lang.Object) properties19);
        java.util.Properties properties24 = new java.util.Properties(properties4);
        org.junit.Assert.assertNull(obj6);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 50 + "'", int11 == 50);
        org.junit.Assert.assertTrue("'" + long12 + "' != '" + 300000L + "'", long12 == 300000L);
        org.junit.Assert.assertNotNull(properties13);
        org.junit.Assert.assertNotNull(properties14);
        org.junit.Assert.assertNull(obj21);
        org.junit.Assert.assertNotNull(objEnumeration22);
        org.junit.Assert.assertNull(obj23);
    }

    @Test
    public void test1810() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1810");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setDefaultJtaTimeout((long) (byte) 10);
        atomikosProperties0.setCheckpointInterval((long) (byte) 0);
        atomikosProperties0.setTransactionManagerUniqueName("");
        java.util.Properties properties7 = atomikosProperties0.asProperties();
        java.lang.String str8 = atomikosProperties0.getTransactionManagerUniqueName();
        atomikosProperties0.setDefaultJtaTimeout((long) (-1));
        java.util.Properties properties11 = atomikosProperties0.asProperties();
        java.util.Properties properties12 = new java.util.Properties(properties11);
        java.io.OutputStream outputStream13 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties12.store(outputStream13, "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(properties7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "" + "'", str8, "");
        org.junit.Assert.assertNotNull(properties11);
    }

    @Test
    public void test1811() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1811");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setDefaultJtaTimeout((long) (byte) 10);
        long long3 = atomikosProperties0.getDefaultJtaTimeout();
        atomikosProperties0.setTransactionManagerUniqueName("");
        java.util.Properties properties6 = atomikosProperties0.asProperties();
        properties6.clear();
        int int8 = properties6.size();
        java.util.Set<java.lang.Object> objSet9 = properties6.keySet();
        java.lang.String str10 = properties6.toString();
        org.junit.Assert.assertTrue("'" + long3 + "' != '" + 10L + "'", long3 == 10L);
        org.junit.Assert.assertNotNull(properties6);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertNotNull(objSet9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "{}" + "'", str10, "{}");
    }

    @Test
    public void test1812() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1812");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Properties properties2 = new java.util.Properties(properties0);
        java.util.Properties properties3 = null;
        java.util.Properties properties4 = new java.util.Properties(properties3);
        java.lang.Object obj6 = properties2.put((java.lang.Object) properties4, (java.lang.Object) (short) 1);
        java.util.Properties properties8 = null;
        java.util.Properties properties9 = new java.util.Properties(properties8);
        java.util.Properties properties10 = new java.util.Properties(properties8);
        java.util.Properties properties11 = null;
        java.util.Properties properties12 = new java.util.Properties(properties11);
        java.lang.Object obj14 = properties10.put((java.lang.Object) properties12, (java.lang.Object) (short) 1);
        boolean boolean15 = properties4.remove((java.lang.Object) false, (java.lang.Object) (short) 1);
        java.util.Set<java.lang.String> strSet16 = properties4.stringPropertyNames();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties17 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties17.setDefaultJtaTimeout((long) (byte) 10);
        long long20 = atomikosProperties17.getDefaultJtaTimeout();
        java.lang.Object obj21 = properties4.get((java.lang.Object) atomikosProperties17);
        java.util.Properties properties22 = null;
        java.util.Properties properties23 = new java.util.Properties(properties22);
        java.util.Properties properties24 = new java.util.Properties(properties22);
        java.util.Properties properties25 = null;
        java.util.Properties properties26 = new java.util.Properties(properties25);
        java.lang.Object obj28 = properties24.put((java.lang.Object) properties26, (java.lang.Object) (short) 1);
        java.util.Properties properties30 = null;
        java.util.Properties properties31 = new java.util.Properties(properties30);
        java.util.Properties properties32 = new java.util.Properties(properties30);
        java.util.Properties properties33 = null;
        java.util.Properties properties34 = new java.util.Properties(properties33);
        java.lang.Object obj36 = properties32.put((java.lang.Object) properties34, (java.lang.Object) (short) 1);
        boolean boolean37 = properties26.remove((java.lang.Object) false, (java.lang.Object) (short) 1);
        java.lang.Object obj39 = properties26.remove((java.lang.Object) '#');
        java.util.Set<java.lang.Object> objSet40 = properties26.keySet();
        boolean boolean41 = properties4.containsKey((java.lang.Object) properties26);
        java.util.Set<java.lang.String> strSet42 = properties4.stringPropertyNames();
        java.util.Enumeration<java.lang.Object> objEnumeration43 = properties4.elements();
        java.io.OutputStream outputStream44 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties4.store(outputStream44, "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=100, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=true, com.atomikos.icatch.tm_unique_name=, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name={com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.tm_unique_name=, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}}");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(obj6);
        org.junit.Assert.assertNull(obj14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(strSet16);
        org.junit.Assert.assertTrue("'" + long20 + "' != '" + 10L + "'", long20 == 10L);
        org.junit.Assert.assertNull(obj21);
        org.junit.Assert.assertNull(obj28);
        org.junit.Assert.assertNull(obj36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNull(obj39);
        org.junit.Assert.assertNotNull(objSet40);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(strSet42);
        org.junit.Assert.assertNotNull(objEnumeration43);
    }

    @Test
    public void test1813() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1813");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setDefaultJtaTimeout((long) (byte) 10);
        long long3 = atomikosProperties0.getDefaultJtaTimeout();
        atomikosProperties0.setTransactionManagerUniqueName("");
        boolean boolean6 = atomikosProperties0.isEnableLogging();
        java.lang.String str7 = atomikosProperties0.getTransactionManagerUniqueName();
        atomikosProperties0.setThreadedTwoPhaseCommit(false);
        java.util.Properties properties10 = atomikosProperties0.asProperties();
        java.lang.String str11 = atomikosProperties0.getTransactionManagerUniqueName();
        java.lang.String str12 = atomikosProperties0.getLogBaseDir();
        java.lang.String str13 = atomikosProperties0.getLogBaseDir();
        org.junit.Assert.assertTrue("'" + long3 + "' != '" + 10L + "'", long3 == 10L);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertNotNull(properties10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNull(str13);
    }

    @Test
    public void test1814() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1814");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setDefaultJtaTimeout((long) (byte) 10);
        long long3 = atomikosProperties0.getDefaultJtaTimeout();
        atomikosProperties0.setTransactionManagerUniqueName("");
        boolean boolean6 = atomikosProperties0.isEnableLogging();
        atomikosProperties0.setDefaultJtaTimeout((long) '4');
        java.lang.String str9 = atomikosProperties0.getTransactionManagerUniqueName();
        atomikosProperties0.setThreadedTwoPhaseCommit(true);
        java.lang.String str12 = atomikosProperties0.getTransactionManagerUniqueName();
        boolean boolean13 = atomikosProperties0.isThreadedTwoPhaseCommit();
        boolean boolean14 = atomikosProperties0.isForceShutdownOnVmExit();
        atomikosProperties0.setMaxActives((int) (short) -1);
        java.lang.String str17 = atomikosProperties0.getTransactionManagerUniqueName();
        long long18 = atomikosProperties0.getDefaultJtaTimeout();
        org.junit.Assert.assertTrue("'" + long3 + "' != '" + 10L + "'", long3 == 10L);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "" + "'", str9, "");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "" + "'", str12, "");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "" + "'", str17, "");
        org.junit.Assert.assertTrue("'" + long18 + "' != '" + 52L + "'", long18 == 52L);
    }

    @Test
    public void test1815() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1815");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Properties properties2 = new java.util.Properties(properties0);
        java.util.Properties properties3 = null;
        java.util.Properties properties4 = new java.util.Properties(properties3);
        java.lang.Object obj6 = properties2.put((java.lang.Object) properties4, (java.lang.Object) (short) 1);
        properties4.clear();
        int int8 = properties4.size();
        java.util.Properties properties9 = null;
        java.util.Properties properties10 = new java.util.Properties(properties9);
        java.util.Properties properties11 = new java.util.Properties(properties9);
        java.util.Properties properties12 = null;
        java.util.Properties properties13 = new java.util.Properties(properties12);
        java.lang.Object obj15 = properties11.put((java.lang.Object) properties13, (java.lang.Object) (short) 1);
        java.util.Properties properties16 = new java.util.Properties(properties13);
        java.util.Properties properties17 = new java.util.Properties(properties13);
        boolean boolean19 = properties4.remove((java.lang.Object) properties13, (java.lang.Object) 10.0f);
        java.util.Enumeration<java.lang.Object> objEnumeration20 = properties13.elements();
        java.util.Properties properties21 = new java.util.Properties(properties13);
        boolean boolean23 = properties13.contains((java.lang.Object) (byte) 100);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties24 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        int int25 = atomikosProperties24.getMaxActives();
        atomikosProperties24.setLogBaseName("");
        atomikosProperties24.setMaxActives((-1));
        java.lang.Object obj30 = properties13.remove((java.lang.Object) atomikosProperties24);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties31 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties31.setDefaultJtaTimeout((long) (byte) 10);
        long long34 = atomikosProperties31.getDefaultJtaTimeout();
        java.lang.String str35 = atomikosProperties31.getTransactionManagerUniqueName();
        atomikosProperties31.setThreadedTwoPhaseCommit(true);
        java.util.Properties properties38 = atomikosProperties31.asProperties();
        java.lang.Class<?> wildcardClass39 = atomikosProperties31.getClass();
        boolean boolean40 = properties13.equals((java.lang.Object) wildcardClass39);
        java.lang.Object obj41 = properties13.clone();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties42 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties42.setDefaultJtaTimeout((long) (byte) 10);
        long long45 = atomikosProperties42.getDefaultJtaTimeout();
        atomikosProperties42.setTransactionManagerUniqueName("");
        boolean boolean48 = atomikosProperties42.isEnableLogging();
        atomikosProperties42.setDefaultJtaTimeout((long) '4');
        java.lang.String str51 = atomikosProperties42.getTransactionManagerUniqueName();
        atomikosProperties42.setThreadedTwoPhaseCommit(true);
        java.util.Properties properties54 = atomikosProperties42.asProperties();
        java.util.Properties properties55 = atomikosProperties42.asProperties();
        java.util.Set<java.lang.Object> objSet56 = properties55.keySet();
        java.lang.Object obj57 = properties13.get((java.lang.Object) properties55);
        java.io.Writer writer58 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties55.store(writer58, "{tmlog=}");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(obj6);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertNull(obj15);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(objEnumeration20);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 50 + "'", int25 == 50);
        org.junit.Assert.assertNull(obj30);
        org.junit.Assert.assertTrue("'" + long34 + "' != '" + 10L + "'", long34 == 10L);
        org.junit.Assert.assertNull(str35);
        org.junit.Assert.assertNotNull(properties38);
        org.junit.Assert.assertNotNull(wildcardClass39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(obj41);
        org.junit.Assert.assertEquals(obj41.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj41), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj41), "{}");
        org.junit.Assert.assertTrue("'" + long45 + "' != '" + 10L + "'", long45 == 10L);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "" + "'", str51, "");
        org.junit.Assert.assertNotNull(properties54);
        org.junit.Assert.assertNotNull(properties55);
        org.junit.Assert.assertNotNull(objSet56);
        org.junit.Assert.assertNull(obj57);
    }

    @Test
    public void test1816() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1816");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setDefaultJtaTimeout((long) (byte) 10);
        atomikosProperties0.setCheckpointInterval((long) (byte) 0);
        atomikosProperties0.setTransactionManagerUniqueName("");
        java.util.Properties properties7 = atomikosProperties0.asProperties();
        java.lang.String str8 = atomikosProperties0.getLogBaseName();
        java.util.Properties properties9 = atomikosProperties0.asProperties();
        java.lang.String str10 = atomikosProperties0.getLogBaseDir();
        atomikosProperties0.setThreadedTwoPhaseCommit(false);
        org.junit.Assert.assertNotNull(properties7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "tmlog" + "'", str8, "tmlog");
        org.junit.Assert.assertNotNull(properties9);
        org.junit.Assert.assertNull(str10);
    }

    @Test
    public void test1817() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1817");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        int int1 = atomikosProperties0.getMaxActives();
        long long2 = atomikosProperties0.getMaxTimeout();
        java.util.Properties properties3 = atomikosProperties0.asProperties();
        java.util.Properties properties4 = atomikosProperties0.asProperties();
        long long5 = atomikosProperties0.getMaxTimeout();
        java.util.Properties properties6 = atomikosProperties0.asProperties();
        long long7 = atomikosProperties0.getCheckpointInterval();
        long long8 = atomikosProperties0.getCheckpointInterval();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 50 + "'", int1 == 50);
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + 300000L + "'", long2 == 300000L);
        org.junit.Assert.assertNotNull(properties3);
        org.junit.Assert.assertNotNull(properties4);
        org.junit.Assert.assertTrue("'" + long5 + "' != '" + 300000L + "'", long5 == 300000L);
        org.junit.Assert.assertNotNull(properties6);
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + 500L + "'", long7 == 500L);
        org.junit.Assert.assertTrue("'" + long8 + "' != '" + 500L + "'", long8 == 500L);
    }

    @Test
    public void test1818() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1818");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setDefaultJtaTimeout((long) (byte) 10);
        atomikosProperties0.setCheckpointInterval((long) (byte) 0);
        atomikosProperties0.setTransactionManagerUniqueName("");
        java.util.Properties properties7 = atomikosProperties0.asProperties();
        java.lang.String str8 = atomikosProperties0.getTransactionManagerUniqueName();
        atomikosProperties0.setDefaultJtaTimeout((long) (-1));
        java.util.Properties properties11 = atomikosProperties0.asProperties();
        java.util.Properties properties12 = new java.util.Properties(properties11);
        java.io.OutputStream outputStream13 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties12.storeToXML(outputStream13, "{}", "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(properties7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "" + "'", str8, "");
        org.junit.Assert.assertNotNull(properties11);
    }

    @Test
    public void test1819() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1819");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setDefaultJtaTimeout((long) (byte) 10);
        atomikosProperties0.setCheckpointInterval((long) (byte) 0);
        atomikosProperties0.setTransactionManagerUniqueName("");
        java.util.Properties properties7 = atomikosProperties0.asProperties();
        java.lang.String str8 = atomikosProperties0.getLogBaseName();
        java.util.Properties properties9 = atomikosProperties0.asProperties();
        atomikosProperties0.setEnableLogging(true);
        atomikosProperties0.setForceShutdownOnVmExit(false);
        long long14 = atomikosProperties0.getMaxTimeout();
        atomikosProperties0.setForceShutdownOnVmExit(true);
        java.util.Properties properties17 = atomikosProperties0.asProperties();
        long long18 = atomikosProperties0.getMaxTimeout();
        atomikosProperties0.setService("{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.tm_unique_name=, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
        java.lang.String str21 = atomikosProperties0.getLogBaseDir();
        org.junit.Assert.assertNotNull(properties7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "tmlog" + "'", str8, "tmlog");
        org.junit.Assert.assertNotNull(properties9);
        org.junit.Assert.assertTrue("'" + long14 + "' != '" + 300000L + "'", long14 == 300000L);
        org.junit.Assert.assertNotNull(properties17);
        org.junit.Assert.assertTrue("'" + long18 + "' != '" + 300000L + "'", long18 == 300000L);
        org.junit.Assert.assertNull(str21);
    }

    @Test
    public void test1820() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1820");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Properties properties2 = new java.util.Properties(properties0);
        java.util.Properties properties3 = null;
        java.util.Properties properties4 = new java.util.Properties(properties3);
        java.lang.Object obj6 = properties2.put((java.lang.Object) properties4, (java.lang.Object) (short) 1);
        java.util.Properties properties8 = null;
        java.util.Properties properties9 = new java.util.Properties(properties8);
        java.util.Properties properties10 = new java.util.Properties(properties8);
        java.util.Properties properties11 = null;
        java.util.Properties properties12 = new java.util.Properties(properties11);
        java.lang.Object obj14 = properties10.put((java.lang.Object) properties12, (java.lang.Object) (short) 1);
        boolean boolean15 = properties4.remove((java.lang.Object) false, (java.lang.Object) (short) 1);
        java.util.Properties properties16 = new java.util.Properties(properties4);
        int int17 = properties16.size();
        java.util.Properties properties18 = null;
        java.util.Properties properties19 = new java.util.Properties(properties18);
        java.util.Properties properties20 = new java.util.Properties(properties18);
        java.util.Properties properties21 = null;
        java.util.Properties properties22 = new java.util.Properties(properties21);
        java.lang.Object obj24 = properties20.put((java.lang.Object) properties22, (java.lang.Object) (short) 1);
        java.util.Enumeration<java.lang.Object> objEnumeration25 = properties22.elements();
        java.util.Properties properties26 = new java.util.Properties(properties22);
        boolean boolean27 = properties16.contains((java.lang.Object) properties22);
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet28 = properties16.entrySet();
        java.io.InputStream inputStream29 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties16.loadFromXML(inputStream29);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(obj6);
        org.junit.Assert.assertNull(obj14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 0 + "'", int17 == 0);
        org.junit.Assert.assertNull(obj24);
        org.junit.Assert.assertNotNull(objEnumeration25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(objEntrySet28);
    }

    @Test
    public void test1821() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1821");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Properties properties2 = new java.util.Properties(properties0);
        boolean boolean4 = properties2.containsValue((java.lang.Object) (short) 100);
        java.util.Properties properties5 = new java.util.Properties(properties2);
        java.lang.String str7 = properties5.getProperty("hi!");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties8 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties8.setDefaultJtaTimeout((long) (byte) 10);
        long long11 = atomikosProperties8.getDefaultJtaTimeout();
        atomikosProperties8.setTransactionManagerUniqueName("hi!");
        atomikosProperties8.setLogBaseName("tmlog");
        boolean boolean16 = atomikosProperties8.isSerialJtaTransactions();
        java.util.Properties properties17 = atomikosProperties8.asProperties();
        boolean boolean18 = properties5.equals((java.lang.Object) atomikosProperties8);
        java.util.Set<java.lang.Object> objSet19 = properties5.keySet();
        java.util.Properties properties20 = null;
        java.util.Properties properties21 = new java.util.Properties(properties20);
        java.util.Properties properties22 = new java.util.Properties(properties20);
        boolean boolean24 = properties22.containsValue((java.lang.Object) (short) 100);
        java.util.Properties properties25 = null;
        java.util.Properties properties26 = new java.util.Properties(properties25);
        java.util.Properties properties27 = new java.util.Properties(properties25);
        java.util.Properties properties28 = null;
        java.util.Properties properties29 = new java.util.Properties(properties28);
        java.lang.Object obj31 = properties27.put((java.lang.Object) properties29, (java.lang.Object) (short) 1);
        java.util.Enumeration<java.lang.Object> objEnumeration32 = properties29.elements();
        java.lang.Object obj33 = properties22.remove((java.lang.Object) properties29);
        java.util.Enumeration<?> wildcardEnumeration34 = properties22.propertyNames();
        properties5.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties22);
        java.util.Collection<java.lang.Object> objCollection36 = properties22.values();
        java.lang.Class<?> wildcardClass37 = properties22.getClass();
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertTrue("'" + long11 + "' != '" + 10L + "'", long11 == 10L);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(properties17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(objSet19);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNull(obj31);
        org.junit.Assert.assertNotNull(objEnumeration32);
        org.junit.Assert.assertNull(obj33);
        org.junit.Assert.assertNotNull(wildcardEnumeration34);
        org.junit.Assert.assertNotNull(objCollection36);
        org.junit.Assert.assertNotNull(wildcardClass37);
    }

    @Test
    public void test1822() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1822");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setThreadedTwoPhaseCommit(true);
        atomikosProperties0.setMaxActives((int) (byte) 0);
        atomikosProperties0.setEnableLogging(true);
        atomikosProperties0.setMaxActives((int) (byte) 1);
        atomikosProperties0.setTransactionManagerUniqueName("hi!");
        java.lang.String str11 = atomikosProperties0.getLogBaseName();
        atomikosProperties0.setService("{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=0, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.tm_unique_name=, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
        long long14 = atomikosProperties0.getMaxTimeout();
        java.lang.String str15 = atomikosProperties0.getLogBaseName();
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "tmlog" + "'", str11, "tmlog");
        org.junit.Assert.assertTrue("'" + long14 + "' != '" + 300000L + "'", long14 == 300000L);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "tmlog" + "'", str15, "tmlog");
    }

    @Test
    public void test1823() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1823");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Properties properties2 = new java.util.Properties(properties0);
        boolean boolean4 = properties2.containsValue((java.lang.Object) (short) 100);
        java.util.Properties properties5 = null;
        java.util.Properties properties6 = new java.util.Properties(properties5);
        java.util.Properties properties7 = new java.util.Properties(properties5);
        java.util.Properties properties8 = null;
        java.util.Properties properties9 = new java.util.Properties(properties8);
        java.lang.Object obj11 = properties7.put((java.lang.Object) properties9, (java.lang.Object) (short) 1);
        java.util.Enumeration<java.lang.Object> objEnumeration12 = properties9.elements();
        java.lang.Object obj13 = properties2.remove((java.lang.Object) properties9);
        java.lang.Object obj16 = properties9.setProperty("", "");
        java.util.Properties properties17 = null;
        java.util.Properties properties18 = new java.util.Properties(properties17);
        java.util.Properties properties19 = new java.util.Properties(properties17);
        java.util.Properties properties20 = null;
        java.util.Properties properties21 = new java.util.Properties(properties20);
        java.lang.Object obj23 = properties19.put((java.lang.Object) properties21, (java.lang.Object) (short) 1);
        java.util.Properties properties25 = null;
        java.util.Properties properties26 = new java.util.Properties(properties25);
        java.util.Properties properties27 = new java.util.Properties(properties25);
        java.util.Properties properties28 = null;
        java.util.Properties properties29 = new java.util.Properties(properties28);
        java.lang.Object obj31 = properties27.put((java.lang.Object) properties29, (java.lang.Object) (short) 1);
        boolean boolean32 = properties21.remove((java.lang.Object) false, (java.lang.Object) (short) 1);
        java.util.Properties properties33 = new java.util.Properties(properties21);
        properties9.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties33);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties35 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties35.setDefaultJtaTimeout((long) (byte) 10);
        atomikosProperties35.setCheckpointInterval((long) (byte) 0);
        atomikosProperties35.setTransactionManagerUniqueName("");
        java.util.Properties properties42 = atomikosProperties35.asProperties();
        java.util.Properties properties43 = atomikosProperties35.asProperties();
        java.util.Collection<java.lang.Object> objCollection44 = properties43.values();
        java.util.Properties properties45 = null;
        java.util.Properties properties46 = new java.util.Properties(properties45);
        java.util.Properties properties47 = new java.util.Properties(properties45);
        java.util.Properties properties48 = null;
        java.util.Properties properties49 = new java.util.Properties(properties48);
        java.lang.Object obj51 = properties47.put((java.lang.Object) properties49, (java.lang.Object) (short) 1);
        properties49.clear();
        int int53 = properties49.size();
        java.util.Properties properties54 = null;
        java.util.Properties properties55 = new java.util.Properties(properties54);
        java.util.Properties properties56 = new java.util.Properties(properties54);
        java.util.Properties properties57 = null;
        java.util.Properties properties58 = new java.util.Properties(properties57);
        java.lang.Object obj60 = properties56.put((java.lang.Object) properties58, (java.lang.Object) (short) 1);
        java.util.Properties properties61 = new java.util.Properties(properties58);
        java.util.Properties properties62 = new java.util.Properties(properties58);
        boolean boolean64 = properties49.remove((java.lang.Object) properties58, (java.lang.Object) 10.0f);
        java.util.Enumeration<java.lang.Object> objEnumeration65 = properties58.elements();
        java.util.Properties properties66 = new java.util.Properties(properties58);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties67 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        int int68 = atomikosProperties67.getMaxActives();
        long long69 = atomikosProperties67.getMaxTimeout();
        java.util.Properties properties70 = atomikosProperties67.asProperties();
        int int71 = atomikosProperties67.getMaxActives();
        java.lang.Object obj73 = properties66.putIfAbsent((java.lang.Object) atomikosProperties67, (java.lang.Object) 1);
        atomikosProperties67.setLogBaseDir("{}");
        atomikosProperties67.setDefaultJtaTimeout((long) (short) 10);
        boolean boolean78 = atomikosProperties67.isThreadedTwoPhaseCommit();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties79 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties79.setDefaultJtaTimeout((long) (byte) 10);
        atomikosProperties79.setCheckpointInterval((long) (byte) 0);
        atomikosProperties79.setTransactionManagerUniqueName("");
        java.util.Properties properties86 = atomikosProperties79.asProperties();
        java.lang.String str87 = atomikosProperties79.getLogBaseName();
        atomikosProperties79.setCheckpointInterval(100L);
        java.lang.String str90 = atomikosProperties79.getTransactionManagerUniqueName();
        boolean boolean91 = properties9.replace((java.lang.Object) objCollection44, (java.lang.Object) boolean78, (java.lang.Object) str90);
        java.lang.String str92 = properties9.toString();
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNull(obj11);
        org.junit.Assert.assertNotNull(objEnumeration12);
        org.junit.Assert.assertNull(obj13);
        org.junit.Assert.assertNull(obj16);
        org.junit.Assert.assertNull(obj23);
        org.junit.Assert.assertNull(obj31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(properties42);
        org.junit.Assert.assertNotNull(properties43);
        org.junit.Assert.assertNotNull(objCollection44);
        org.junit.Assert.assertNull(obj51);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 0 + "'", int53 == 0);
        org.junit.Assert.assertNull(obj60);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertNotNull(objEnumeration65);
        org.junit.Assert.assertTrue("'" + int68 + "' != '" + 50 + "'", int68 == 50);
        org.junit.Assert.assertTrue("'" + long69 + "' != '" + 300000L + "'", long69 == 300000L);
        org.junit.Assert.assertNotNull(properties70);
        org.junit.Assert.assertTrue("'" + int71 + "' != '" + 50 + "'", int71 == 50);
        org.junit.Assert.assertNull(obj73);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + false + "'", boolean78 == false);
        org.junit.Assert.assertNotNull(properties86);
        org.junit.Assert.assertEquals("'" + str87 + "' != '" + "tmlog" + "'", str87, "tmlog");
        org.junit.Assert.assertEquals("'" + str90 + "' != '" + "" + "'", str90, "");
        org.junit.Assert.assertTrue("'" + boolean91 + "' != '" + false + "'", boolean91 == false);
        org.junit.Assert.assertEquals("'" + str92 + "' != '" + "{=}" + "'", str92, "{=}");
    }

    @Test
    public void test1824() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1824");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Properties properties2 = new java.util.Properties(properties0);
        java.util.Properties properties3 = null;
        java.util.Properties properties4 = new java.util.Properties(properties3);
        java.lang.Object obj6 = properties2.put((java.lang.Object) properties4, (java.lang.Object) (short) 1);
        boolean boolean7 = properties2.isEmpty();
        java.util.Properties properties8 = null;
        java.util.Properties properties9 = new java.util.Properties(properties8);
        java.util.Properties properties10 = new java.util.Properties(properties8);
        boolean boolean11 = properties2.containsKey((java.lang.Object) properties10);
        java.util.Properties properties12 = null;
        java.util.Properties properties13 = new java.util.Properties(properties12);
        java.util.Properties properties14 = new java.util.Properties(properties12);
        java.util.Properties properties15 = null;
        java.util.Properties properties16 = new java.util.Properties(properties15);
        java.lang.Object obj18 = properties14.put((java.lang.Object) properties16, (java.lang.Object) (short) 1);
        java.util.Properties properties20 = null;
        java.util.Properties properties21 = new java.util.Properties(properties20);
        java.util.Properties properties22 = new java.util.Properties(properties20);
        java.util.Properties properties23 = null;
        java.util.Properties properties24 = new java.util.Properties(properties23);
        java.lang.Object obj26 = properties22.put((java.lang.Object) properties24, (java.lang.Object) (short) 1);
        boolean boolean27 = properties16.remove((java.lang.Object) false, (java.lang.Object) (short) 1);
        java.util.Set<java.lang.String> strSet28 = properties16.stringPropertyNames();
        boolean boolean29 = properties10.containsKey((java.lang.Object) strSet28);
        java.util.Properties properties30 = null;
        java.util.Properties properties31 = new java.util.Properties(properties30);
        java.util.Properties properties32 = new java.util.Properties(properties30);
        java.util.Properties properties33 = null;
        java.util.Properties properties34 = new java.util.Properties(properties33);
        java.lang.Object obj36 = properties32.put((java.lang.Object) properties34, (java.lang.Object) (short) 1);
        properties34.clear();
        java.lang.String str39 = properties34.getProperty("");
        java.util.Properties properties40 = null;
        java.util.Properties properties41 = new java.util.Properties(properties40);
        java.util.Properties properties42 = new java.util.Properties(properties40);
        java.util.Properties properties43 = null;
        java.util.Properties properties44 = new java.util.Properties(properties43);
        java.lang.Object obj46 = properties42.put((java.lang.Object) properties44, (java.lang.Object) (short) 1);
        properties34.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties42);
        boolean boolean48 = properties10.containsKey((java.lang.Object) properties34);
        java.util.Properties properties50 = null;
        java.util.Properties properties51 = new java.util.Properties(properties50);
        java.util.Properties properties52 = new java.util.Properties(properties50);
        java.util.Properties properties53 = null;
        java.util.Properties properties54 = new java.util.Properties(properties53);
        java.lang.Object obj56 = properties52.put((java.lang.Object) properties54, (java.lang.Object) (short) 1);
        properties54.clear();
        int int58 = properties54.size();
        java.lang.Object obj61 = properties54.setProperty("hi!", "hi!");
        java.lang.Object obj64 = properties54.setProperty("tmlog", "tmlog");
        java.lang.Object obj65 = properties34.putIfAbsent((java.lang.Object) (short) 10, (java.lang.Object) "tmlog");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties66 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        int int67 = atomikosProperties66.getMaxActives();
        long long68 = atomikosProperties66.getMaxTimeout();
        java.util.Properties properties69 = atomikosProperties66.asProperties();
        boolean boolean70 = properties34.containsValue((java.lang.Object) properties69);
        properties69.clear();
        java.util.Properties properties72 = new java.util.Properties(properties69);
        org.junit.Assert.assertNull(obj6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNull(obj18);
        org.junit.Assert.assertNull(obj26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(strSet28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNull(obj36);
        org.junit.Assert.assertNull(str39);
        org.junit.Assert.assertNull(obj46);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNull(obj56);
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + 0 + "'", int58 == 0);
        org.junit.Assert.assertNull(obj61);
        org.junit.Assert.assertNull(obj64);
        org.junit.Assert.assertNull(obj65);
        org.junit.Assert.assertTrue("'" + int67 + "' != '" + 50 + "'", int67 == 50);
        org.junit.Assert.assertTrue("'" + long68 + "' != '" + 300000L + "'", long68 == 300000L);
        org.junit.Assert.assertNotNull(properties69);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
    }

    @Test
    public void test1825() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1825");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setDefaultJtaTimeout((long) (byte) 10);
        atomikosProperties0.setSerialJtaTransactions(false);
        atomikosProperties0.setService("{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.tm_unique_name=, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
        java.lang.String str7 = atomikosProperties0.getTransactionManagerUniqueName();
        atomikosProperties0.setTransactionManagerUniqueName("{tmlog={com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=0, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.tm_unique_name=, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}, 4=true}");
        atomikosProperties0.setThreadedTwoPhaseCommit(false);
        org.junit.Assert.assertNull(str7);
    }

    @Test
    public void test1826() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1826");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setDefaultJtaTimeout((long) (byte) 10);
        long long3 = atomikosProperties0.getDefaultJtaTimeout();
        atomikosProperties0.setTransactionManagerUniqueName("");
        long long6 = atomikosProperties0.getDefaultJtaTimeout();
        boolean boolean7 = atomikosProperties0.isEnableLogging();
        atomikosProperties0.setService("{}");
        java.lang.String str10 = atomikosProperties0.getLogBaseDir();
        atomikosProperties0.setMaxTimeout((long) 0);
        org.junit.Assert.assertTrue("'" + long3 + "' != '" + 10L + "'", long3 == 10L);
        org.junit.Assert.assertTrue("'" + long6 + "' != '" + 10L + "'", long6 == 10L);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNull(str10);
    }

    @Test
    public void test1827() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1827");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setThreadedTwoPhaseCommit(true);
        atomikosProperties0.setMaxActives((int) '#');
        atomikosProperties0.setForceShutdownOnVmExit(true);
        java.lang.String str7 = atomikosProperties0.getLogBaseDir();
        java.util.Properties properties8 = atomikosProperties0.asProperties();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties9 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        boolean boolean10 = atomikosProperties9.isSerialJtaTransactions();
        boolean boolean11 = properties8.equals((java.lang.Object) atomikosProperties9);
        long long12 = atomikosProperties9.getMaxTimeout();
        atomikosProperties9.setMaxTimeout((long) 0);
        boolean boolean15 = atomikosProperties9.isForceShutdownOnVmExit();
        atomikosProperties9.setMaxActives((int) (byte) 10);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNotNull(properties8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + long12 + "' != '" + 300000L + "'", long12 == 300000L);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
    }

    @Test
    public void test1828() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1828");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Properties properties2 = new java.util.Properties(properties0);
        java.util.Properties properties3 = null;
        java.util.Properties properties4 = new java.util.Properties(properties3);
        java.lang.Object obj6 = properties2.put((java.lang.Object) properties4, (java.lang.Object) (short) 1);
        boolean boolean7 = properties2.isEmpty();
        java.util.Properties properties8 = null;
        java.util.Properties properties9 = new java.util.Properties(properties8);
        java.util.Properties properties10 = new java.util.Properties(properties8);
        boolean boolean11 = properties2.containsKey((java.lang.Object) properties10);
        java.util.Properties properties12 = null;
        java.util.Properties properties13 = new java.util.Properties(properties12);
        java.util.Properties properties14 = new java.util.Properties(properties12);
        java.util.Properties properties15 = null;
        java.util.Properties properties16 = new java.util.Properties(properties15);
        java.lang.Object obj18 = properties14.put((java.lang.Object) properties16, (java.lang.Object) (short) 1);
        java.util.Properties properties20 = null;
        java.util.Properties properties21 = new java.util.Properties(properties20);
        java.util.Properties properties22 = new java.util.Properties(properties20);
        java.util.Properties properties23 = null;
        java.util.Properties properties24 = new java.util.Properties(properties23);
        java.lang.Object obj26 = properties22.put((java.lang.Object) properties24, (java.lang.Object) (short) 1);
        boolean boolean27 = properties16.remove((java.lang.Object) false, (java.lang.Object) (short) 1);
        java.util.Set<java.lang.String> strSet28 = properties16.stringPropertyNames();
        boolean boolean29 = properties10.containsKey((java.lang.Object) strSet28);
        java.util.Properties properties30 = null;
        java.util.Properties properties31 = new java.util.Properties(properties30);
        java.util.Properties properties32 = new java.util.Properties(properties30);
        java.util.Properties properties33 = null;
        java.util.Properties properties34 = new java.util.Properties(properties33);
        java.lang.Object obj36 = properties32.put((java.lang.Object) properties34, (java.lang.Object) (short) 1);
        properties34.clear();
        java.lang.String str39 = properties34.getProperty("");
        java.util.Properties properties40 = null;
        java.util.Properties properties41 = new java.util.Properties(properties40);
        java.util.Properties properties42 = new java.util.Properties(properties40);
        java.util.Properties properties43 = null;
        java.util.Properties properties44 = new java.util.Properties(properties43);
        java.lang.Object obj46 = properties42.put((java.lang.Object) properties44, (java.lang.Object) (short) 1);
        properties34.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties42);
        boolean boolean48 = properties10.containsKey((java.lang.Object) properties34);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties50 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties50.setThreadedTwoPhaseCommit(true);
        boolean boolean53 = atomikosProperties50.isEnableLogging();
        java.lang.Object obj54 = properties10.put((java.lang.Object) '4', (java.lang.Object) boolean53);
        java.util.Properties properties55 = new java.util.Properties(properties10);
        boolean boolean56 = properties10.isEmpty();
        java.lang.Object obj59 = properties10.setProperty("tmlog", "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=0, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.tm_unique_name=, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
        java.lang.String str60 = properties10.toString();
        java.lang.Object obj61 = properties10.clone();
        java.io.Reader reader62 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties10.load(reader62);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(obj6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNull(obj18);
        org.junit.Assert.assertNull(obj26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(strSet28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNull(obj36);
        org.junit.Assert.assertNull(str39);
        org.junit.Assert.assertNull(obj46);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertNull(obj54);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertNull(obj59);
// flaky:         org.junit.Assert.assertEquals("'" + str60 + "' != '" + "{tmlog={com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=0, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.tm_unique_name=, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}, 4=true}" + "'", str60, "{tmlog={com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=0, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.tm_unique_name=, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}, 4=true}");
        org.junit.Assert.assertNotNull(obj61);
// flaky:         org.junit.Assert.assertEquals(obj61.toString(), "{tmlog={com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=0, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.tm_unique_name=, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}, 4=true}");
// flaky:         org.junit.Assert.assertEquals(java.lang.String.valueOf(obj61), "{tmlog={com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=0, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.tm_unique_name=, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}, 4=true}");
// flaky:         org.junit.Assert.assertEquals(java.util.Objects.toString(obj61), "{tmlog={com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=0, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.tm_unique_name=, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}, 4=true}");
    }

    @Test
    public void test1829() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1829");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setDefaultJtaTimeout((long) (byte) 10);
        long long3 = atomikosProperties0.getDefaultJtaTimeout();
        atomikosProperties0.setTransactionManagerUniqueName("");
        boolean boolean6 = atomikosProperties0.isEnableLogging();
        java.lang.String str7 = atomikosProperties0.getLogBaseDir();
        java.util.Properties properties8 = atomikosProperties0.asProperties();
        boolean boolean9 = properties8.isEmpty();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties10 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties10.setDefaultJtaTimeout((long) (byte) 10);
        atomikosProperties10.setCheckpointInterval((long) (byte) 0);
        atomikosProperties10.setTransactionManagerUniqueName("");
        java.util.Properties properties17 = atomikosProperties10.asProperties();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties18 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties18.setThreadedTwoPhaseCommit(true);
        atomikosProperties18.setMaxActives((int) '#');
        atomikosProperties18.setForceShutdownOnVmExit(true);
        java.lang.String str25 = atomikosProperties18.getLogBaseDir();
        java.lang.Object obj26 = properties17.remove((java.lang.Object) atomikosProperties18);
        java.util.Collection<java.lang.Object> objCollection27 = properties17.values();
        boolean boolean28 = properties8.contains((java.lang.Object) properties17);
        java.util.Properties properties29 = new java.util.Properties(properties8);
        java.util.Properties properties30 = new java.util.Properties(properties8);
        java.io.PrintStream printStream31 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties30.list(printStream31);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + long3 + "' != '" + 10L + "'", long3 == 10L);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNotNull(properties8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(properties17);
        org.junit.Assert.assertNull(str25);
        org.junit.Assert.assertNull(obj26);
        org.junit.Assert.assertNotNull(objCollection27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
    }

    @Test
    public void test1830() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1830");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Properties properties2 = new java.util.Properties(properties0);
        java.util.Properties properties3 = null;
        java.util.Properties properties4 = new java.util.Properties(properties3);
        java.lang.Object obj6 = properties2.put((java.lang.Object) properties4, (java.lang.Object) (short) 1);
        java.util.Properties properties7 = new java.util.Properties(properties4);
        java.util.Properties properties8 = new java.util.Properties(properties4);
        java.util.Properties properties9 = new java.util.Properties(properties4);
        java.lang.String str12 = properties4.getProperty("{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=0, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=true, com.atomikos.icatch.max_actives=100, com.atomikos.icatch.log_base_name=tmlog}", "{com.atomikos.icatch.enable_logging=false, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=true, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
        org.junit.Assert.assertNull(obj6);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "{com.atomikos.icatch.enable_logging=false, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=true, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}" + "'", str12, "{com.atomikos.icatch.enable_logging=false, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=true, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
    }

    @Test
    public void test1831() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1831");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Properties properties2 = new java.util.Properties(properties0);
        java.util.Properties properties3 = null;
        java.util.Properties properties4 = new java.util.Properties(properties3);
        java.lang.Object obj6 = properties2.put((java.lang.Object) properties4, (java.lang.Object) (short) 1);
        java.util.Properties properties8 = null;
        java.util.Properties properties9 = new java.util.Properties(properties8);
        java.util.Properties properties10 = new java.util.Properties(properties8);
        java.util.Properties properties11 = null;
        java.util.Properties properties12 = new java.util.Properties(properties11);
        java.lang.Object obj14 = properties10.put((java.lang.Object) properties12, (java.lang.Object) (short) 1);
        boolean boolean15 = properties4.remove((java.lang.Object) false, (java.lang.Object) (short) 1);
        java.util.Set<java.lang.String> strSet16 = properties4.stringPropertyNames();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties17 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties17.setDefaultJtaTimeout((long) (byte) 10);
        long long20 = atomikosProperties17.getDefaultJtaTimeout();
        java.lang.Object obj21 = properties4.get((java.lang.Object) atomikosProperties17);
        java.util.Enumeration<java.lang.Object> objEnumeration22 = properties4.elements();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties23 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties23.setThreadedTwoPhaseCommit(true);
        atomikosProperties23.setMaxActives((int) '#');
        atomikosProperties23.setEnableLogging(true);
        int int30 = atomikosProperties23.getMaxActives();
        boolean boolean31 = properties4.containsValue((java.lang.Object) atomikosProperties23);
        boolean boolean32 = atomikosProperties23.isForceShutdownOnVmExit();
        atomikosProperties23.setEnableLogging(true);
        atomikosProperties23.setService("{}");
        boolean boolean37 = atomikosProperties23.isForceShutdownOnVmExit();
        org.junit.Assert.assertNull(obj6);
        org.junit.Assert.assertNull(obj14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(strSet16);
        org.junit.Assert.assertTrue("'" + long20 + "' != '" + 10L + "'", long20 == 10L);
        org.junit.Assert.assertNull(obj21);
        org.junit.Assert.assertNotNull(objEnumeration22);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 35 + "'", int30 == 35);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
    }

    @Test
    public void test1832() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1832");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Properties properties2 = new java.util.Properties(properties0);
        java.util.Properties properties3 = null;
        java.util.Properties properties4 = new java.util.Properties(properties3);
        java.lang.Object obj6 = properties2.put((java.lang.Object) properties4, (java.lang.Object) (short) 1);
        java.util.Properties properties8 = null;
        java.util.Properties properties9 = new java.util.Properties(properties8);
        java.util.Properties properties10 = new java.util.Properties(properties8);
        java.util.Properties properties11 = null;
        java.util.Properties properties12 = new java.util.Properties(properties11);
        java.lang.Object obj14 = properties10.put((java.lang.Object) properties12, (java.lang.Object) (short) 1);
        boolean boolean15 = properties4.remove((java.lang.Object) false, (java.lang.Object) (short) 1);
        java.util.Set<java.lang.String> strSet16 = properties4.stringPropertyNames();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties17 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties17.setDefaultJtaTimeout((long) (byte) 10);
        long long20 = atomikosProperties17.getDefaultJtaTimeout();
        java.lang.Object obj21 = properties4.get((java.lang.Object) atomikosProperties17);
        atomikosProperties17.setCheckpointInterval((long) (short) 100);
        java.util.Properties properties24 = atomikosProperties17.asProperties();
        java.util.Enumeration<?> wildcardEnumeration25 = properties24.propertyNames();
        java.lang.String str27 = properties24.getProperty("{tmlog={com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=0, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.tm_unique_name=, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}, 4=true}");
        java.util.Properties properties28 = new java.util.Properties(properties24);
        java.util.Enumeration<?> wildcardEnumeration29 = properties24.propertyNames();
        java.io.PrintStream printStream30 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties24.list(printStream30);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(obj6);
        org.junit.Assert.assertNull(obj14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(strSet16);
        org.junit.Assert.assertTrue("'" + long20 + "' != '" + 10L + "'", long20 == 10L);
        org.junit.Assert.assertNull(obj21);
        org.junit.Assert.assertNotNull(properties24);
        org.junit.Assert.assertNotNull(wildcardEnumeration25);
        org.junit.Assert.assertNull(str27);
        org.junit.Assert.assertNotNull(wildcardEnumeration29);
    }

    @Test
    public void test1833() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1833");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        boolean boolean1 = atomikosProperties0.isForceShutdownOnVmExit();
        java.util.Properties properties2 = atomikosProperties0.asProperties();
        java.util.Properties properties3 = null;
        java.util.Properties properties4 = new java.util.Properties(properties3);
        java.util.Properties properties5 = new java.util.Properties(properties3);
        java.util.Properties properties6 = null;
        java.util.Properties properties7 = new java.util.Properties(properties6);
        java.lang.Object obj9 = properties5.put((java.lang.Object) properties7, (java.lang.Object) (short) 1);
        properties7.clear();
        int int11 = properties7.size();
        java.util.Properties properties12 = null;
        java.util.Properties properties13 = new java.util.Properties(properties12);
        java.util.Properties properties14 = new java.util.Properties(properties12);
        java.util.Properties properties15 = null;
        java.util.Properties properties16 = new java.util.Properties(properties15);
        java.lang.Object obj18 = properties14.put((java.lang.Object) properties16, (java.lang.Object) (short) 1);
        java.util.Properties properties19 = new java.util.Properties(properties16);
        java.util.Properties properties20 = new java.util.Properties(properties16);
        boolean boolean22 = properties7.remove((java.lang.Object) properties16, (java.lang.Object) 10.0f);
        boolean boolean23 = properties2.containsKey((java.lang.Object) 10.0f);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties25 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties25.setDefaultJtaTimeout((long) (byte) 10);
        atomikosProperties25.setCheckpointInterval((long) (byte) 0);
        atomikosProperties25.setEnableLogging(true);
        java.lang.Object obj32 = properties2.getOrDefault((java.lang.Object) (byte) 0, (java.lang.Object) true);
        java.util.Properties properties33 = new java.util.Properties(properties2);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties34 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties34.setDefaultJtaTimeout((long) (byte) 10);
        atomikosProperties34.setCheckpointInterval((long) (byte) 0);
        long long39 = atomikosProperties34.getMaxTimeout();
        java.util.Properties properties40 = null;
        java.util.Properties properties41 = new java.util.Properties(properties40);
        java.util.Properties properties42 = new java.util.Properties(properties40);
        java.util.Properties properties43 = null;
        java.util.Properties properties44 = new java.util.Properties(properties43);
        java.lang.Object obj46 = properties42.put((java.lang.Object) properties44, (java.lang.Object) (short) 1);
        java.util.Properties properties48 = null;
        java.util.Properties properties49 = new java.util.Properties(properties48);
        java.util.Properties properties50 = new java.util.Properties(properties48);
        java.util.Properties properties51 = null;
        java.util.Properties properties52 = new java.util.Properties(properties51);
        java.lang.Object obj54 = properties50.put((java.lang.Object) properties52, (java.lang.Object) (short) 1);
        boolean boolean55 = properties44.remove((java.lang.Object) false, (java.lang.Object) (short) 1);
        java.lang.Object obj57 = properties44.remove((java.lang.Object) '#');
        java.util.Set<java.lang.Object> objSet58 = properties44.keySet();
        properties44.clear();
        java.util.Properties properties60 = null;
        java.util.Properties properties61 = new java.util.Properties(properties60);
        java.util.Properties properties62 = new java.util.Properties(properties60);
        java.util.Properties properties63 = null;
        java.util.Properties properties64 = new java.util.Properties(properties63);
        java.lang.Object obj66 = properties62.put((java.lang.Object) properties64, (java.lang.Object) (short) 1);
        java.util.Enumeration<java.lang.Object> objEnumeration67 = properties64.elements();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet68 = properties64.entrySet();
        boolean boolean69 = properties44.equals((java.lang.Object) properties64);
        java.util.Enumeration<java.lang.Object> objEnumeration70 = properties64.elements();
        java.lang.Object obj71 = properties33.put((java.lang.Object) atomikosProperties34, (java.lang.Object) properties64);
        java.lang.String str72 = atomikosProperties34.getService();
        java.util.Properties properties73 = atomikosProperties34.asProperties();
        java.util.Properties properties74 = atomikosProperties34.asProperties();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties75 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties75.setDefaultJtaTimeout((long) (byte) 10);
        atomikosProperties75.setCheckpointInterval((long) (byte) 0);
        atomikosProperties75.setTransactionManagerUniqueName("");
        java.util.Properties properties82 = atomikosProperties75.asProperties();
        java.lang.String str83 = atomikosProperties75.getLogBaseName();
        java.util.Properties properties84 = atomikosProperties75.asProperties();
        java.lang.String str85 = atomikosProperties75.getLogBaseDir();
        java.lang.String str86 = atomikosProperties75.getLogBaseDir();
        java.lang.String str87 = atomikosProperties75.getService();
        java.util.Properties properties88 = atomikosProperties75.asProperties();
        boolean boolean89 = properties74.containsValue((java.lang.Object) atomikosProperties75);
        java.lang.Object obj90 = properties74.clone();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertNotNull(properties2);
        org.junit.Assert.assertNull(obj9);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertNull(obj18);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertEquals("'" + obj32 + "' != '" + true + "'", obj32, true);
        org.junit.Assert.assertTrue("'" + long39 + "' != '" + 300000L + "'", long39 == 300000L);
        org.junit.Assert.assertNull(obj46);
        org.junit.Assert.assertNull(obj54);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertNull(obj57);
        org.junit.Assert.assertNotNull(objSet58);
        org.junit.Assert.assertNull(obj66);
        org.junit.Assert.assertNotNull(objEnumeration67);
        org.junit.Assert.assertNotNull(objEntrySet68);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + true + "'", boolean69 == true);
        org.junit.Assert.assertNotNull(objEnumeration70);
        org.junit.Assert.assertNull(obj71);
        org.junit.Assert.assertNull(str72);
        org.junit.Assert.assertNotNull(properties73);
        org.junit.Assert.assertNotNull(properties74);
        org.junit.Assert.assertNotNull(properties82);
        org.junit.Assert.assertEquals("'" + str83 + "' != '" + "tmlog" + "'", str83, "tmlog");
        org.junit.Assert.assertNotNull(properties84);
        org.junit.Assert.assertNull(str85);
        org.junit.Assert.assertNull(str86);
        org.junit.Assert.assertNull(str87);
        org.junit.Assert.assertNotNull(properties88);
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + false + "'", boolean89 == false);
        org.junit.Assert.assertNotNull(obj90);
// flaky:         org.junit.Assert.assertEquals(obj90.toString(), "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=0, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
// flaky:         org.junit.Assert.assertEquals(java.lang.String.valueOf(obj90), "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=0, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
// flaky:         org.junit.Assert.assertEquals(java.util.Objects.toString(obj90), "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=0, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
    }

    @Test
    public void test1834() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1834");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setDefaultJtaTimeout((long) (byte) 10);
        atomikosProperties0.setCheckpointInterval((long) (byte) 0);
        atomikosProperties0.setTransactionManagerUniqueName("");
        boolean boolean7 = atomikosProperties0.isEnableLogging();
        java.lang.String str8 = atomikosProperties0.getLogBaseName();
        atomikosProperties0.setThreadedTwoPhaseCommit(false);
        atomikosProperties0.setSerialJtaTransactions(true);
        java.lang.String str13 = atomikosProperties0.getTransactionManagerUniqueName();
        long long14 = atomikosProperties0.getMaxTimeout();
        boolean boolean15 = atomikosProperties0.isSerialJtaTransactions();
        atomikosProperties0.setMaxTimeout(10000L);
        atomikosProperties0.setCheckpointInterval(0L);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "tmlog" + "'", str8, "tmlog");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "" + "'", str13, "");
        org.junit.Assert.assertTrue("'" + long14 + "' != '" + 300000L + "'", long14 == 300000L);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
    }

    @Test
    public void test1835() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1835");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        boolean boolean1 = atomikosProperties0.isForceShutdownOnVmExit();
        java.util.Properties properties2 = atomikosProperties0.asProperties();
        java.util.Properties properties3 = null;
        java.util.Properties properties4 = new java.util.Properties(properties3);
        java.util.Properties properties5 = new java.util.Properties(properties3);
        java.util.Properties properties6 = null;
        java.util.Properties properties7 = new java.util.Properties(properties6);
        java.lang.Object obj9 = properties5.put((java.lang.Object) properties7, (java.lang.Object) (short) 1);
        properties7.clear();
        int int11 = properties7.size();
        java.util.Properties properties12 = null;
        java.util.Properties properties13 = new java.util.Properties(properties12);
        java.util.Properties properties14 = new java.util.Properties(properties12);
        java.util.Properties properties15 = null;
        java.util.Properties properties16 = new java.util.Properties(properties15);
        java.lang.Object obj18 = properties14.put((java.lang.Object) properties16, (java.lang.Object) (short) 1);
        java.util.Properties properties19 = new java.util.Properties(properties16);
        java.util.Properties properties20 = new java.util.Properties(properties16);
        boolean boolean22 = properties7.remove((java.lang.Object) properties16, (java.lang.Object) 10.0f);
        boolean boolean23 = properties2.containsKey((java.lang.Object) 10.0f);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties25 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties25.setDefaultJtaTimeout((long) (byte) 10);
        atomikosProperties25.setCheckpointInterval((long) (byte) 0);
        atomikosProperties25.setEnableLogging(true);
        java.lang.Object obj32 = properties2.getOrDefault((java.lang.Object) (byte) 0, (java.lang.Object) true);
        java.util.Properties properties33 = new java.util.Properties(properties2);
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet34 = properties2.entrySet();
        java.util.Properties properties35 = new java.util.Properties(properties2);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties36 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties36.setDefaultJtaTimeout((long) (byte) 10);
        long long39 = atomikosProperties36.getDefaultJtaTimeout();
        atomikosProperties36.setTransactionManagerUniqueName("hi!");
        atomikosProperties36.setTransactionManagerUniqueName("{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=0, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.tm_unique_name=, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
        atomikosProperties36.setEnableLogging(false);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties46 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties46.setDefaultJtaTimeout((long) (byte) 10);
        long long49 = atomikosProperties46.getDefaultJtaTimeout();
        atomikosProperties46.setTransactionManagerUniqueName("");
        boolean boolean52 = atomikosProperties46.isEnableLogging();
        atomikosProperties46.setDefaultJtaTimeout((long) '4');
        java.lang.String str55 = atomikosProperties46.getTransactionManagerUniqueName();
        atomikosProperties46.setThreadedTwoPhaseCommit(true);
        java.lang.String str58 = atomikosProperties46.getTransactionManagerUniqueName();
        boolean boolean59 = atomikosProperties46.isThreadedTwoPhaseCommit();
        java.lang.Object obj60 = properties2.put((java.lang.Object) atomikosProperties36, (java.lang.Object) boolean59);
        java.lang.String str61 = atomikosProperties36.getLogBaseName();
        long long62 = atomikosProperties36.getDefaultJtaTimeout();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertNotNull(properties2);
        org.junit.Assert.assertNull(obj9);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertNull(obj18);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertEquals("'" + obj32 + "' != '" + true + "'", obj32, true);
        org.junit.Assert.assertNotNull(objEntrySet34);
        org.junit.Assert.assertTrue("'" + long39 + "' != '" + 10L + "'", long39 == 10L);
        org.junit.Assert.assertTrue("'" + long49 + "' != '" + 10L + "'", long49 == 10L);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "" + "'", str55, "");
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "" + "'", str58, "");
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertNull(obj60);
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "tmlog" + "'", str61, "tmlog");
        org.junit.Assert.assertTrue("'" + long62 + "' != '" + 10L + "'", long62 == 10L);
    }

    @Test
    public void test1836() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1836");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Properties properties2 = new java.util.Properties(properties0);
        java.util.Properties properties3 = null;
        java.util.Properties properties4 = new java.util.Properties(properties3);
        java.lang.Object obj6 = properties2.put((java.lang.Object) properties4, (java.lang.Object) (short) 1);
        java.util.Properties properties8 = null;
        java.util.Properties properties9 = new java.util.Properties(properties8);
        java.util.Properties properties10 = new java.util.Properties(properties8);
        java.util.Properties properties11 = null;
        java.util.Properties properties12 = new java.util.Properties(properties11);
        java.lang.Object obj14 = properties10.put((java.lang.Object) properties12, (java.lang.Object) (short) 1);
        boolean boolean15 = properties4.remove((java.lang.Object) false, (java.lang.Object) (short) 1);
        java.util.Set<java.lang.String> strSet16 = properties4.stringPropertyNames();
        boolean boolean18 = properties4.containsValue((java.lang.Object) 50);
        java.util.Properties properties19 = new java.util.Properties(properties4);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties20 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties20.setDefaultJtaTimeout((long) (byte) 10);
        atomikosProperties20.setCheckpointInterval((long) (byte) 0);
        atomikosProperties20.setTransactionManagerUniqueName("");
        java.util.Properties properties27 = atomikosProperties20.asProperties();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties28 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties28.setThreadedTwoPhaseCommit(true);
        atomikosProperties28.setMaxActives((int) '#');
        atomikosProperties28.setForceShutdownOnVmExit(true);
        java.lang.String str35 = atomikosProperties28.getLogBaseDir();
        java.lang.Object obj36 = properties27.remove((java.lang.Object) atomikosProperties28);
        properties19.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties27);
        int int38 = properties19.size();
        java.util.Properties properties39 = new java.util.Properties(properties19);
        java.lang.Class<?> wildcardClass40 = properties19.getClass();
        org.junit.Assert.assertNull(obj6);
        org.junit.Assert.assertNull(obj14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(strSet16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(properties27);
        org.junit.Assert.assertNull(str35);
        org.junit.Assert.assertNull(obj36);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 10 + "'", int38 == 10);
        org.junit.Assert.assertNotNull(wildcardClass40);
    }

    @Test
    public void test1837() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1837");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Properties properties2 = new java.util.Properties(properties0);
        java.util.Properties properties3 = null;
        java.util.Properties properties4 = new java.util.Properties(properties3);
        java.lang.Object obj6 = properties2.put((java.lang.Object) properties4, (java.lang.Object) (short) 1);
        properties4.clear();
        int int8 = properties4.size();
        java.util.Properties properties9 = new java.util.Properties(properties4);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties10 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        int int11 = atomikosProperties10.getMaxActives();
        long long12 = atomikosProperties10.getMaxTimeout();
        java.util.Properties properties13 = atomikosProperties10.asProperties();
        java.util.Properties properties14 = atomikosProperties10.asProperties();
        java.util.Properties properties15 = null;
        java.util.Properties properties16 = new java.util.Properties(properties15);
        java.util.Properties properties17 = new java.util.Properties(properties15);
        java.util.Properties properties18 = null;
        java.util.Properties properties19 = new java.util.Properties(properties18);
        java.lang.Object obj21 = properties17.put((java.lang.Object) properties19, (java.lang.Object) (short) 1);
        java.util.Enumeration<java.lang.Object> objEnumeration22 = properties19.elements();
        java.lang.Object obj23 = properties4.replace((java.lang.Object) atomikosProperties10, (java.lang.Object) properties19);
        java.util.Set<java.lang.String> strSet24 = properties4.stringPropertyNames();
        properties4.clear();
        java.util.Properties properties26 = new java.util.Properties(properties4);
        java.lang.String str27 = properties4.toString();
        java.util.Properties properties28 = null;
        java.util.Properties properties29 = new java.util.Properties(properties28);
        java.util.Properties properties30 = new java.util.Properties(properties28);
        java.util.Properties properties31 = null;
        java.util.Properties properties32 = new java.util.Properties(properties31);
        java.lang.Object obj34 = properties30.put((java.lang.Object) properties32, (java.lang.Object) (short) 1);
        boolean boolean35 = properties30.isEmpty();
        java.util.Properties properties36 = null;
        java.util.Properties properties37 = new java.util.Properties(properties36);
        java.util.Properties properties38 = new java.util.Properties(properties36);
        boolean boolean39 = properties30.containsKey((java.lang.Object) properties38);
        java.util.Properties properties40 = new java.util.Properties(properties38);
        boolean boolean41 = properties4.containsKey((java.lang.Object) properties38);
        java.util.Properties properties42 = new java.util.Properties(properties4);
        java.io.InputStream inputStream43 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties42.loadFromXML(inputStream43);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(obj6);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 50 + "'", int11 == 50);
        org.junit.Assert.assertTrue("'" + long12 + "' != '" + 300000L + "'", long12 == 300000L);
        org.junit.Assert.assertNotNull(properties13);
        org.junit.Assert.assertNotNull(properties14);
        org.junit.Assert.assertNull(obj21);
        org.junit.Assert.assertNotNull(objEnumeration22);
        org.junit.Assert.assertNull(obj23);
        org.junit.Assert.assertNotNull(strSet24);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "{}" + "'", str27, "{}");
        org.junit.Assert.assertNull(obj34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
    }

    @Test
    public void test1838() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1838");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Properties properties2 = new java.util.Properties(properties0);
        java.util.Properties properties3 = null;
        java.util.Properties properties4 = new java.util.Properties(properties3);
        java.lang.Object obj6 = properties2.put((java.lang.Object) properties4, (java.lang.Object) (short) 1);
        properties4.clear();
        int int8 = properties4.size();
        java.util.Properties properties9 = null;
        java.util.Properties properties10 = new java.util.Properties(properties9);
        java.util.Properties properties11 = new java.util.Properties(properties9);
        java.util.Properties properties12 = null;
        java.util.Properties properties13 = new java.util.Properties(properties12);
        java.lang.Object obj15 = properties11.put((java.lang.Object) properties13, (java.lang.Object) (short) 1);
        java.util.Properties properties16 = new java.util.Properties(properties13);
        java.util.Properties properties17 = new java.util.Properties(properties13);
        boolean boolean19 = properties4.remove((java.lang.Object) properties13, (java.lang.Object) 10.0f);
        java.util.Enumeration<java.lang.Object> objEnumeration20 = properties13.elements();
        java.util.Properties properties21 = new java.util.Properties(properties13);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties22 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        int int23 = atomikosProperties22.getMaxActives();
        long long24 = atomikosProperties22.getMaxTimeout();
        java.util.Properties properties25 = atomikosProperties22.asProperties();
        int int26 = atomikosProperties22.getMaxActives();
        java.lang.Object obj28 = properties21.putIfAbsent((java.lang.Object) atomikosProperties22, (java.lang.Object) 1);
        atomikosProperties22.setLogBaseDir("{}");
        java.util.Properties properties31 = atomikosProperties22.asProperties();
        java.util.Properties properties32 = null;
        java.util.Properties properties33 = new java.util.Properties(properties32);
        java.util.Properties properties34 = new java.util.Properties(properties32);
        java.util.Properties properties35 = null;
        java.util.Properties properties36 = new java.util.Properties(properties35);
        java.lang.Object obj38 = properties34.put((java.lang.Object) properties36, (java.lang.Object) (short) 1);
        java.util.Properties properties40 = null;
        java.util.Properties properties41 = new java.util.Properties(properties40);
        java.util.Properties properties42 = new java.util.Properties(properties40);
        java.util.Properties properties43 = null;
        java.util.Properties properties44 = new java.util.Properties(properties43);
        java.lang.Object obj46 = properties42.put((java.lang.Object) properties44, (java.lang.Object) (short) 1);
        boolean boolean47 = properties36.remove((java.lang.Object) false, (java.lang.Object) (short) 1);
        java.util.Set<java.lang.String> strSet48 = properties36.stringPropertyNames();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties49 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties49.setDefaultJtaTimeout((long) (byte) 10);
        long long52 = atomikosProperties49.getDefaultJtaTimeout();
        java.lang.Object obj53 = properties36.get((java.lang.Object) atomikosProperties49);
        long long54 = atomikosProperties49.getCheckpointInterval();
        atomikosProperties49.setService("hi!");
        java.util.Properties properties57 = null;
        java.util.Properties properties58 = new java.util.Properties(properties57);
        java.util.Properties properties59 = new java.util.Properties(properties57);
        java.util.Properties properties60 = null;
        java.util.Properties properties61 = new java.util.Properties(properties60);
        java.lang.Object obj63 = properties59.put((java.lang.Object) properties61, (java.lang.Object) (short) 1);
        java.util.Properties properties64 = new java.util.Properties(properties61);
        java.util.Properties properties65 = new java.util.Properties(properties61);
        java.util.Set<java.lang.Object> objSet66 = properties65.keySet();
        int int67 = properties65.size();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties68 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties68.setDefaultJtaTimeout((long) (byte) 10);
        atomikosProperties68.setSerialJtaTransactions(false);
        atomikosProperties68.setMaxTimeout((long) (short) -1);
        long long75 = atomikosProperties68.getDefaultJtaTimeout();
        atomikosProperties68.setService("{tmlog={com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=0, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.tm_unique_name=, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}, 4=true}");
        boolean boolean78 = atomikosProperties68.isEnableLogging();
        atomikosProperties68.setForceShutdownOnVmExit(true);
        atomikosProperties68.setLogBaseName("hi!");
        boolean boolean83 = properties31.replace((java.lang.Object) atomikosProperties49, (java.lang.Object) int67, (java.lang.Object) "hi!");
        atomikosProperties49.setDefaultJtaTimeout((long) (short) 100);
        org.junit.Assert.assertNull(obj6);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertNull(obj15);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(objEnumeration20);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 50 + "'", int23 == 50);
        org.junit.Assert.assertTrue("'" + long24 + "' != '" + 300000L + "'", long24 == 300000L);
        org.junit.Assert.assertNotNull(properties25);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 50 + "'", int26 == 50);
        org.junit.Assert.assertNull(obj28);
        org.junit.Assert.assertNotNull(properties31);
        org.junit.Assert.assertNull(obj38);
        org.junit.Assert.assertNull(obj46);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNotNull(strSet48);
        org.junit.Assert.assertTrue("'" + long52 + "' != '" + 10L + "'", long52 == 10L);
        org.junit.Assert.assertNull(obj53);
        org.junit.Assert.assertTrue("'" + long54 + "' != '" + 500L + "'", long54 == 500L);
        org.junit.Assert.assertNull(obj63);
        org.junit.Assert.assertNotNull(objSet66);
        org.junit.Assert.assertTrue("'" + int67 + "' != '" + 0 + "'", int67 == 0);
        org.junit.Assert.assertTrue("'" + long75 + "' != '" + 10L + "'", long75 == 10L);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + true + "'", boolean78 == true);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + false + "'", boolean83 == false);
    }

    @Test
    public void test1839() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1839");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setDefaultJtaTimeout((long) (byte) 10);
        atomikosProperties0.setCheckpointInterval((long) (byte) 0);
        atomikosProperties0.setEnableLogging(true);
        boolean boolean7 = atomikosProperties0.isThreadedTwoPhaseCommit();
        java.lang.String str8 = atomikosProperties0.getLogBaseDir();
        java.util.Properties properties9 = atomikosProperties0.asProperties();
        atomikosProperties0.setDefaultJtaTimeout((long) 32);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNotNull(properties9);
    }

    @Test
    public void test1840() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1840");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Properties properties2 = new java.util.Properties(properties0);
        java.util.Properties properties3 = null;
        java.util.Properties properties4 = new java.util.Properties(properties3);
        java.lang.Object obj6 = properties2.put((java.lang.Object) properties4, (java.lang.Object) (short) 1);
        properties4.clear();
        java.util.Properties properties8 = null;
        java.util.Properties properties9 = new java.util.Properties(properties8);
        java.util.Properties properties10 = new java.util.Properties(properties8);
        java.util.Properties properties11 = null;
        java.util.Properties properties12 = new java.util.Properties(properties11);
        java.lang.Object obj14 = properties10.put((java.lang.Object) properties12, (java.lang.Object) (short) 1);
        java.util.Collection<java.lang.Object> objCollection15 = properties12.values();
        boolean boolean16 = properties4.containsKey((java.lang.Object) objCollection15);
        boolean boolean17 = properties4.isEmpty();
        java.util.Enumeration<java.lang.Object> objEnumeration18 = properties4.elements();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties19 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties19.setDefaultJtaTimeout((long) (byte) 10);
        long long22 = atomikosProperties19.getDefaultJtaTimeout();
        atomikosProperties19.setTransactionManagerUniqueName("");
        boolean boolean25 = atomikosProperties19.isEnableLogging();
        java.lang.String str26 = atomikosProperties19.getLogBaseDir();
        java.util.Properties properties27 = atomikosProperties19.asProperties();
        boolean boolean28 = atomikosProperties19.isEnableLogging();
        java.util.Properties properties29 = atomikosProperties19.asProperties();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties30 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties30.setDefaultJtaTimeout((long) (byte) 10);
        atomikosProperties30.setCheckpointInterval((long) (byte) 0);
        atomikosProperties30.setTransactionManagerUniqueName("");
        boolean boolean37 = atomikosProperties30.isEnableLogging();
        java.util.Properties properties38 = atomikosProperties30.asProperties();
        java.util.Enumeration<java.lang.Object> objEnumeration39 = properties38.keys();
        java.util.Properties properties40 = null;
        java.util.Properties properties41 = new java.util.Properties(properties40);
        java.util.Properties properties42 = new java.util.Properties(properties40);
        java.util.Properties properties43 = null;
        java.util.Properties properties44 = new java.util.Properties(properties43);
        java.lang.Object obj46 = properties42.put((java.lang.Object) properties44, (java.lang.Object) (short) 1);
        java.util.Properties properties48 = null;
        java.util.Properties properties49 = new java.util.Properties(properties48);
        java.util.Properties properties50 = new java.util.Properties(properties48);
        java.util.Properties properties51 = null;
        java.util.Properties properties52 = new java.util.Properties(properties51);
        java.lang.Object obj54 = properties50.put((java.lang.Object) properties52, (java.lang.Object) (short) 1);
        boolean boolean55 = properties44.remove((java.lang.Object) false, (java.lang.Object) (short) 1);
        java.util.Set<java.lang.String> strSet56 = properties44.stringPropertyNames();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties57 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties57.setDefaultJtaTimeout((long) (byte) 10);
        long long60 = atomikosProperties57.getDefaultJtaTimeout();
        java.lang.Object obj61 = properties44.get((java.lang.Object) atomikosProperties57);
        atomikosProperties57.setCheckpointInterval((long) (short) 100);
        java.util.Properties properties64 = atomikosProperties57.asProperties();
        java.util.Enumeration<?> wildcardEnumeration65 = properties64.propertyNames();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet66 = properties64.entrySet();
        java.lang.Object obj67 = properties29.getOrDefault((java.lang.Object) objEnumeration39, (java.lang.Object) properties64);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties68 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties68.setDefaultJtaTimeout((long) (byte) 10);
        atomikosProperties68.setCheckpointInterval((long) (byte) 0);
        long long73 = atomikosProperties68.getMaxTimeout();
        atomikosProperties68.setSerialJtaTransactions(true);
        atomikosProperties68.setForceShutdownOnVmExit(false);
        atomikosProperties68.setForceShutdownOnVmExit(false);
        atomikosProperties68.setTransactionManagerUniqueName("hi!");
        boolean boolean82 = properties4.remove(obj67, (java.lang.Object) "hi!");
        java.util.Properties properties83 = new java.util.Properties(properties4);
        java.io.InputStream inputStream84 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties83.loadFromXML(inputStream84);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(obj6);
        org.junit.Assert.assertNull(obj14);
        org.junit.Assert.assertNotNull(objCollection15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(objEnumeration18);
        org.junit.Assert.assertTrue("'" + long22 + "' != '" + 10L + "'", long22 == 10L);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNull(str26);
        org.junit.Assert.assertNotNull(properties27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNotNull(properties29);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertNotNull(properties38);
        org.junit.Assert.assertNotNull(objEnumeration39);
        org.junit.Assert.assertNull(obj46);
        org.junit.Assert.assertNull(obj54);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertNotNull(strSet56);
        org.junit.Assert.assertTrue("'" + long60 + "' != '" + 10L + "'", long60 == 10L);
        org.junit.Assert.assertNull(obj61);
        org.junit.Assert.assertNotNull(properties64);
        org.junit.Assert.assertNotNull(wildcardEnumeration65);
        org.junit.Assert.assertNotNull(objEntrySet66);
        org.junit.Assert.assertNotNull(obj67);
// flaky:         org.junit.Assert.assertEquals(obj67.toString(), "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=100, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
// flaky:         org.junit.Assert.assertEquals(java.lang.String.valueOf(obj67), "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=100, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
// flaky:         org.junit.Assert.assertEquals(java.util.Objects.toString(obj67), "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=100, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
        org.junit.Assert.assertTrue("'" + long73 + "' != '" + 300000L + "'", long73 == 300000L);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + false + "'", boolean82 == false);
    }

    @Test
    public void test1841() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1841");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setDefaultJtaTimeout((long) (byte) 10);
        long long3 = atomikosProperties0.getDefaultJtaTimeout();
        atomikosProperties0.setTransactionManagerUniqueName("hi!");
        atomikosProperties0.setLogBaseName("tmlog");
        boolean boolean8 = atomikosProperties0.isSerialJtaTransactions();
        java.util.Properties properties9 = atomikosProperties0.asProperties();
        atomikosProperties0.setEnableLogging(false);
        java.util.Properties properties12 = atomikosProperties0.asProperties();
        atomikosProperties0.setService("{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=0, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.tm_unique_name=, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
        atomikosProperties0.setLogBaseDir("{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=0, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.tm_unique_name=, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
        org.junit.Assert.assertTrue("'" + long3 + "' != '" + 10L + "'", long3 == 10L);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(properties9);
        org.junit.Assert.assertNotNull(properties12);
    }

    @Test
    public void test1842() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1842");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Properties properties2 = new java.util.Properties(properties0);
        java.util.Properties properties3 = null;
        java.util.Properties properties4 = new java.util.Properties(properties3);
        java.lang.Object obj6 = properties2.put((java.lang.Object) properties4, (java.lang.Object) (short) 1);
        boolean boolean7 = properties2.isEmpty();
        java.util.Properties properties8 = null;
        java.util.Properties properties9 = new java.util.Properties(properties8);
        java.util.Properties properties10 = new java.util.Properties(properties8);
        boolean boolean11 = properties2.containsKey((java.lang.Object) properties10);
        java.util.Properties properties12 = new java.util.Properties(properties10);
        java.util.Properties properties13 = null;
        java.util.Properties properties14 = new java.util.Properties(properties13);
        java.util.Properties properties15 = new java.util.Properties(properties13);
        java.util.Properties properties16 = null;
        java.util.Properties properties17 = new java.util.Properties(properties16);
        java.lang.Object obj19 = properties15.put((java.lang.Object) properties17, (java.lang.Object) (short) 1);
        boolean boolean20 = properties15.isEmpty();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties21 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties21.setDefaultJtaTimeout((long) (byte) 10);
        atomikosProperties21.setCheckpointInterval((long) (byte) 0);
        atomikosProperties21.setTransactionManagerUniqueName("");
        java.util.Properties properties28 = atomikosProperties21.asProperties();
        java.lang.Object obj29 = properties15.remove((java.lang.Object) properties28);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties30 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties30.setDefaultJtaTimeout((long) (byte) 10);
        atomikosProperties30.setCheckpointInterval((long) (byte) 0);
        atomikosProperties30.setTransactionManagerUniqueName("");
        java.lang.Object obj37 = properties28.remove((java.lang.Object) atomikosProperties30);
        java.util.Enumeration<java.lang.Object> objEnumeration38 = properties28.elements();
        java.lang.Object obj39 = properties12.get((java.lang.Object) properties28);
        java.util.Properties properties40 = null;
        java.util.Properties properties41 = new java.util.Properties(properties40);
        java.util.Properties properties42 = new java.util.Properties(properties40);
        java.util.Properties properties43 = null;
        java.util.Properties properties44 = new java.util.Properties(properties43);
        java.lang.Object obj46 = properties42.put((java.lang.Object) properties44, (java.lang.Object) (short) 1);
        properties44.clear();
        int int48 = properties44.size();
        java.util.Properties properties49 = new java.util.Properties(properties44);
        java.lang.Object obj51 = properties44.get((java.lang.Object) (byte) -1);
        boolean boolean52 = properties44.isEmpty();
        java.lang.Object obj53 = properties12.get((java.lang.Object) properties44);
        java.util.Enumeration<java.lang.Object> objEnumeration54 = properties12.elements();
        java.lang.String str56 = properties12.getProperty("hi!");
        org.junit.Assert.assertNull(obj6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNull(obj19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(properties28);
        org.junit.Assert.assertNull(obj29);
        org.junit.Assert.assertNull(obj37);
        org.junit.Assert.assertNotNull(objEnumeration38);
        org.junit.Assert.assertNull(obj39);
        org.junit.Assert.assertNull(obj46);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 0 + "'", int48 == 0);
        org.junit.Assert.assertNull(obj51);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertNull(obj53);
        org.junit.Assert.assertNotNull(objEnumeration54);
        org.junit.Assert.assertNull(str56);
    }

    @Test
    public void test1843() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1843");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setDefaultJtaTimeout((long) (byte) 10);
        atomikosProperties0.setCheckpointInterval((long) (byte) 0);
        atomikosProperties0.setTransactionManagerUniqueName("");
        boolean boolean7 = atomikosProperties0.isEnableLogging();
        atomikosProperties0.setLogBaseDir("hi!");
        atomikosProperties0.setMaxTimeout((long) 50);
        atomikosProperties0.setLogBaseName("{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.tm_unique_name=, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
        boolean boolean14 = atomikosProperties0.isEnableLogging();
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
    }

    @Test
    public void test1844() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1844");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Properties properties2 = new java.util.Properties(properties0);
        java.util.Properties properties3 = null;
        java.util.Properties properties4 = new java.util.Properties(properties3);
        java.lang.Object obj6 = properties2.put((java.lang.Object) properties4, (java.lang.Object) (short) 1);
        java.util.Properties properties8 = null;
        java.util.Properties properties9 = new java.util.Properties(properties8);
        java.util.Properties properties10 = new java.util.Properties(properties8);
        java.util.Properties properties11 = null;
        java.util.Properties properties12 = new java.util.Properties(properties11);
        java.lang.Object obj14 = properties10.put((java.lang.Object) properties12, (java.lang.Object) (short) 1);
        boolean boolean15 = properties4.remove((java.lang.Object) false, (java.lang.Object) (short) 1);
        java.util.Set<java.lang.String> strSet16 = properties4.stringPropertyNames();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties17 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties17.setDefaultJtaTimeout((long) (byte) 10);
        long long20 = atomikosProperties17.getDefaultJtaTimeout();
        java.lang.Object obj21 = properties4.get((java.lang.Object) atomikosProperties17);
        int int22 = properties4.size();
        java.util.Properties properties23 = new java.util.Properties(properties4);
        java.util.Properties properties24 = new java.util.Properties(properties23);
        java.util.Enumeration<java.lang.Object> objEnumeration25 = properties23.keys();
        java.util.Properties properties26 = null;
        java.util.Properties properties27 = new java.util.Properties(properties26);
        java.util.Properties properties28 = new java.util.Properties(properties26);
        java.util.Properties properties29 = null;
        java.util.Properties properties30 = new java.util.Properties(properties29);
        java.lang.Object obj32 = properties28.put((java.lang.Object) properties30, (java.lang.Object) (short) 1);
        java.util.Properties properties34 = null;
        java.util.Properties properties35 = new java.util.Properties(properties34);
        java.util.Properties properties36 = new java.util.Properties(properties34);
        java.util.Properties properties37 = null;
        java.util.Properties properties38 = new java.util.Properties(properties37);
        java.lang.Object obj40 = properties36.put((java.lang.Object) properties38, (java.lang.Object) (short) 1);
        boolean boolean41 = properties30.remove((java.lang.Object) false, (java.lang.Object) (short) 1);
        java.util.Set<java.lang.String> strSet42 = properties30.stringPropertyNames();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties43 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties43.setDefaultJtaTimeout((long) (byte) 10);
        long long46 = atomikosProperties43.getDefaultJtaTimeout();
        java.lang.Object obj47 = properties30.get((java.lang.Object) atomikosProperties43);
        boolean boolean48 = properties23.equals((java.lang.Object) properties30);
        java.io.InputStream inputStream49 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties30.loadFromXML(inputStream49);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(obj6);
        org.junit.Assert.assertNull(obj14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(strSet16);
        org.junit.Assert.assertTrue("'" + long20 + "' != '" + 10L + "'", long20 == 10L);
        org.junit.Assert.assertNull(obj21);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 0 + "'", int22 == 0);
        org.junit.Assert.assertNotNull(objEnumeration25);
        org.junit.Assert.assertNull(obj32);
        org.junit.Assert.assertNull(obj40);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(strSet42);
        org.junit.Assert.assertTrue("'" + long46 + "' != '" + 10L + "'", long46 == 10L);
        org.junit.Assert.assertNull(obj47);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
    }

    @Test
    public void test1845() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1845");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setDefaultJtaTimeout((long) (byte) 10);
        long long3 = atomikosProperties0.getDefaultJtaTimeout();
        atomikosProperties0.setTransactionManagerUniqueName("");
        boolean boolean6 = atomikosProperties0.isEnableLogging();
        atomikosProperties0.setLogBaseName("tmlog");
        boolean boolean9 = atomikosProperties0.isThreadedTwoPhaseCommit();
        long long10 = atomikosProperties0.getCheckpointInterval();
        java.util.Properties properties11 = atomikosProperties0.asProperties();
        atomikosProperties0.setTransactionManagerUniqueName("{tmlog=}");
        org.junit.Assert.assertTrue("'" + long3 + "' != '" + 10L + "'", long3 == 10L);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + long10 + "' != '" + 500L + "'", long10 == 500L);
        org.junit.Assert.assertNotNull(properties11);
    }

    @Test
    public void test1846() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1846");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Properties properties2 = new java.util.Properties(properties0);
        java.util.Properties properties3 = null;
        java.util.Properties properties4 = new java.util.Properties(properties3);
        java.lang.Object obj6 = properties2.put((java.lang.Object) properties4, (java.lang.Object) (short) 1);
        boolean boolean7 = properties2.isEmpty();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties8 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties8.setDefaultJtaTimeout((long) (byte) 10);
        atomikosProperties8.setCheckpointInterval((long) (byte) 0);
        atomikosProperties8.setTransactionManagerUniqueName("");
        java.util.Properties properties15 = atomikosProperties8.asProperties();
        java.lang.Object obj16 = properties2.remove((java.lang.Object) properties15);
        java.util.Collection<java.lang.Object> objCollection17 = properties15.values();
        java.util.Properties properties18 = new java.util.Properties(properties15);
        java.util.Properties properties19 = null;
        java.util.Properties properties20 = new java.util.Properties(properties19);
        java.util.Properties properties21 = new java.util.Properties(properties19);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties22 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        int int23 = atomikosProperties22.getMaxActives();
        long long24 = atomikosProperties22.getMaxTimeout();
        java.lang.String str25 = atomikosProperties22.getLogBaseDir();
        atomikosProperties22.setCheckpointInterval(100L);
        boolean boolean28 = properties21.equals((java.lang.Object) atomikosProperties22);
        boolean boolean29 = atomikosProperties22.isForceShutdownOnVmExit();
        atomikosProperties22.setDefaultJtaTimeout((long) 100);
        java.util.Properties properties32 = null;
        java.util.Properties properties33 = new java.util.Properties(properties32);
        java.util.Properties properties34 = new java.util.Properties(properties32);
        java.util.Properties properties35 = null;
        java.util.Properties properties36 = new java.util.Properties(properties35);
        java.lang.Object obj38 = properties34.put((java.lang.Object) properties36, (java.lang.Object) (short) 1);
        properties36.clear();
        int int40 = properties36.size();
        java.util.Properties properties41 = new java.util.Properties(properties36);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties42 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        int int43 = atomikosProperties42.getMaxActives();
        long long44 = atomikosProperties42.getMaxTimeout();
        java.util.Properties properties45 = atomikosProperties42.asProperties();
        java.util.Properties properties46 = atomikosProperties42.asProperties();
        java.util.Properties properties47 = null;
        java.util.Properties properties48 = new java.util.Properties(properties47);
        java.util.Properties properties49 = new java.util.Properties(properties47);
        java.util.Properties properties50 = null;
        java.util.Properties properties51 = new java.util.Properties(properties50);
        java.lang.Object obj53 = properties49.put((java.lang.Object) properties51, (java.lang.Object) (short) 1);
        java.util.Enumeration<java.lang.Object> objEnumeration54 = properties51.elements();
        java.lang.Object obj55 = properties36.replace((java.lang.Object) atomikosProperties42, (java.lang.Object) properties51);
        atomikosProperties42.setLogBaseName("");
        java.lang.String str58 = atomikosProperties42.getTransactionManagerUniqueName();
        atomikosProperties42.setDefaultJtaTimeout((long) (short) 1);
        atomikosProperties42.setTransactionManagerUniqueName("{}");
        java.util.Properties properties63 = null;
        java.util.Properties properties64 = new java.util.Properties(properties63);
        java.util.Properties properties65 = new java.util.Properties(properties63);
        java.util.Properties properties66 = null;
        java.util.Properties properties67 = new java.util.Properties(properties66);
        java.lang.Object obj69 = properties65.put((java.lang.Object) properties67, (java.lang.Object) (short) 1);
        properties67.clear();
        java.lang.String str72 = properties67.getProperty("");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties73 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties73.setDefaultJtaTimeout((long) (byte) 10);
        atomikosProperties73.setSerialJtaTransactions(false);
        atomikosProperties73.setMaxTimeout((long) (short) -1);
        long long80 = atomikosProperties73.getDefaultJtaTimeout();
        java.util.Properties properties81 = atomikosProperties73.asProperties();
        java.lang.Object obj82 = properties67.get((java.lang.Object) properties81);
        java.util.Properties properties83 = new java.util.Properties(properties67);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties84 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties84.setDefaultJtaTimeout((long) (byte) 10);
        atomikosProperties84.setCheckpointInterval((long) (byte) 0);
        atomikosProperties84.setTransactionManagerUniqueName("");
        java.util.Properties properties91 = atomikosProperties84.asProperties();
        java.lang.String str92 = atomikosProperties84.getTransactionManagerUniqueName();
        atomikosProperties84.setDefaultJtaTimeout((long) (-1));
        java.util.Properties properties95 = atomikosProperties84.asProperties();
        boolean boolean96 = properties95.isEmpty();
        boolean boolean97 = properties83.containsKey((java.lang.Object) boolean96);
        boolean boolean98 = properties18.replace((java.lang.Object) atomikosProperties22, (java.lang.Object) atomikosProperties42, (java.lang.Object) properties83);
        long long99 = atomikosProperties42.getCheckpointInterval();
        org.junit.Assert.assertNull(obj6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(properties15);
        org.junit.Assert.assertNull(obj16);
        org.junit.Assert.assertNotNull(objCollection17);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 50 + "'", int23 == 50);
        org.junit.Assert.assertTrue("'" + long24 + "' != '" + 300000L + "'", long24 == 300000L);
        org.junit.Assert.assertNull(str25);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNull(obj38);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 0 + "'", int40 == 0);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 50 + "'", int43 == 50);
        org.junit.Assert.assertTrue("'" + long44 + "' != '" + 300000L + "'", long44 == 300000L);
        org.junit.Assert.assertNotNull(properties45);
        org.junit.Assert.assertNotNull(properties46);
        org.junit.Assert.assertNull(obj53);
        org.junit.Assert.assertNotNull(objEnumeration54);
        org.junit.Assert.assertNull(obj55);
        org.junit.Assert.assertNull(str58);
        org.junit.Assert.assertNull(obj69);
        org.junit.Assert.assertNull(str72);
        org.junit.Assert.assertTrue("'" + long80 + "' != '" + 10L + "'", long80 == 10L);
        org.junit.Assert.assertNotNull(properties81);
        org.junit.Assert.assertNull(obj82);
        org.junit.Assert.assertNotNull(properties91);
        org.junit.Assert.assertEquals("'" + str92 + "' != '" + "" + "'", str92, "");
        org.junit.Assert.assertNotNull(properties95);
        org.junit.Assert.assertTrue("'" + boolean96 + "' != '" + false + "'", boolean96 == false);
        org.junit.Assert.assertTrue("'" + boolean97 + "' != '" + false + "'", boolean97 == false);
        org.junit.Assert.assertTrue("'" + boolean98 + "' != '" + false + "'", boolean98 == false);
        org.junit.Assert.assertTrue("'" + long99 + "' != '" + 500L + "'", long99 == 500L);
    }

    @Test
    public void test1847() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1847");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setDefaultJtaTimeout((long) (byte) 10);
        long long3 = atomikosProperties0.getDefaultJtaTimeout();
        atomikosProperties0.setTransactionManagerUniqueName("");
        boolean boolean6 = atomikosProperties0.isEnableLogging();
        java.lang.String str7 = atomikosProperties0.getLogBaseDir();
        java.util.Properties properties8 = atomikosProperties0.asProperties();
        boolean boolean9 = properties8.isEmpty();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties10 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties10.setDefaultJtaTimeout((long) (byte) 10);
        atomikosProperties10.setCheckpointInterval((long) (byte) 0);
        atomikosProperties10.setTransactionManagerUniqueName("");
        java.util.Properties properties17 = atomikosProperties10.asProperties();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties18 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties18.setThreadedTwoPhaseCommit(true);
        atomikosProperties18.setMaxActives((int) '#');
        atomikosProperties18.setForceShutdownOnVmExit(true);
        java.lang.String str25 = atomikosProperties18.getLogBaseDir();
        java.lang.Object obj26 = properties17.remove((java.lang.Object) atomikosProperties18);
        java.util.Collection<java.lang.Object> objCollection27 = properties17.values();
        boolean boolean28 = properties8.contains((java.lang.Object) properties17);
        java.util.Properties properties29 = new java.util.Properties(properties8);
        java.util.Properties properties30 = new java.util.Properties(properties8);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties31 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties31.setDefaultJtaTimeout((long) (byte) 10);
        atomikosProperties31.setCheckpointInterval((long) (byte) 0);
        atomikosProperties31.setTransactionManagerUniqueName("");
        java.util.Properties properties38 = atomikosProperties31.asProperties();
        java.util.Properties properties39 = atomikosProperties31.asProperties();
        java.util.Properties properties40 = null;
        java.util.Properties properties41 = new java.util.Properties(properties40);
        java.util.Properties properties42 = new java.util.Properties(properties40);
        java.util.Properties properties43 = null;
        java.util.Properties properties44 = new java.util.Properties(properties43);
        java.lang.Object obj46 = properties42.put((java.lang.Object) properties44, (java.lang.Object) (short) 1);
        properties44.clear();
        int int48 = properties44.size();
        java.lang.Object obj51 = properties44.setProperty("hi!", "hi!");
        java.lang.Object obj54 = properties44.setProperty("tmlog", "tmlog");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties55 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties55.setDefaultJtaTimeout((long) (byte) 10);
        atomikosProperties55.setCheckpointInterval((long) (byte) 0);
        atomikosProperties55.setTransactionManagerUniqueName("");
        boolean boolean62 = atomikosProperties55.isEnableLogging();
        java.lang.String str63 = atomikosProperties55.getLogBaseName();
        atomikosProperties55.setThreadedTwoPhaseCommit(false);
        java.lang.Object obj66 = properties39.put((java.lang.Object) properties44, (java.lang.Object) atomikosProperties55);
        java.util.Enumeration<java.lang.Object> objEnumeration67 = properties44.keys();
        java.lang.Object obj68 = properties8.remove((java.lang.Object) properties44);
        org.junit.Assert.assertTrue("'" + long3 + "' != '" + 10L + "'", long3 == 10L);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNotNull(properties8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(properties17);
        org.junit.Assert.assertNull(str25);
        org.junit.Assert.assertNull(obj26);
        org.junit.Assert.assertNotNull(objCollection27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(properties38);
        org.junit.Assert.assertNotNull(properties39);
        org.junit.Assert.assertNull(obj46);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 0 + "'", int48 == 0);
        org.junit.Assert.assertNull(obj51);
        org.junit.Assert.assertNull(obj54);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + true + "'", boolean62 == true);
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "tmlog" + "'", str63, "tmlog");
        org.junit.Assert.assertNull(obj66);
        org.junit.Assert.assertNotNull(objEnumeration67);
        org.junit.Assert.assertNull(obj68);
    }

    @Test
    public void test1848() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1848");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Properties properties2 = new java.util.Properties(properties0);
        java.util.Properties properties3 = null;
        java.util.Properties properties4 = new java.util.Properties(properties3);
        java.lang.Object obj6 = properties2.put((java.lang.Object) properties4, (java.lang.Object) (short) 1);
        properties4.clear();
        int int8 = properties4.size();
        java.util.Properties properties9 = new java.util.Properties(properties4);
        java.io.PrintStream printStream10 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties9.list(printStream10);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(obj6);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
    }

    @Test
    public void test1849() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1849");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        boolean boolean1 = atomikosProperties0.isForceShutdownOnVmExit();
        java.util.Properties properties2 = atomikosProperties0.asProperties();
        atomikosProperties0.setMaxTimeout((long) '4');
        atomikosProperties0.setTransactionManagerUniqueName("hi!");
        java.util.Properties properties7 = atomikosProperties0.asProperties();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertNotNull(properties2);
        org.junit.Assert.assertNotNull(properties7);
    }

    @Test
    public void test1850() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1850");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Properties properties2 = new java.util.Properties(properties0);
        java.lang.Object obj3 = properties2.clone();
        java.util.Enumeration<java.lang.Object> objEnumeration4 = properties2.elements();
        java.io.InputStream inputStream5 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties2.loadFromXML(inputStream5);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(obj3);
        org.junit.Assert.assertEquals(obj3.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj3), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj3), "{}");
        org.junit.Assert.assertNotNull(objEnumeration4);
    }

    @Test
    public void test1851() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1851");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Properties properties2 = new java.util.Properties(properties0);
        java.util.Properties properties3 = null;
        java.util.Properties properties4 = new java.util.Properties(properties3);
        java.lang.Object obj6 = properties2.put((java.lang.Object) properties4, (java.lang.Object) (short) 1);
        properties4.clear();
        java.lang.String str9 = properties4.getProperty("");
        java.util.Properties properties10 = new java.util.Properties(properties4);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties11 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties11.setDefaultJtaTimeout((long) (byte) 10);
        atomikosProperties11.setCheckpointInterval((long) (byte) 0);
        atomikosProperties11.setTransactionManagerUniqueName("");
        java.util.Properties properties18 = atomikosProperties11.asProperties();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties19 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties19.setThreadedTwoPhaseCommit(true);
        atomikosProperties19.setMaxActives((int) '#');
        atomikosProperties19.setForceShutdownOnVmExit(true);
        java.lang.String str26 = atomikosProperties19.getLogBaseDir();
        java.lang.Object obj27 = properties18.remove((java.lang.Object) atomikosProperties19);
        java.util.Collection<java.lang.Object> objCollection28 = properties18.values();
        java.util.Properties properties29 = null;
        java.util.Properties properties30 = new java.util.Properties(properties29);
        java.util.Properties properties31 = new java.util.Properties(properties29);
        java.util.Properties properties32 = null;
        java.util.Properties properties33 = new java.util.Properties(properties32);
        java.lang.Object obj35 = properties31.put((java.lang.Object) properties33, (java.lang.Object) (short) 1);
        java.util.Properties properties36 = new java.util.Properties(properties33);
        int int37 = properties33.size();
        java.lang.Object obj39 = properties33.get((java.lang.Object) (short) 100);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties40 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        int int41 = atomikosProperties40.getMaxActives();
        long long42 = atomikosProperties40.getMaxTimeout();
        java.util.Properties properties43 = atomikosProperties40.asProperties();
        java.util.Properties properties44 = null;
        java.util.Properties properties45 = new java.util.Properties(properties44);
        java.util.Properties properties46 = new java.util.Properties(properties44);
        java.util.Properties properties47 = null;
        java.util.Properties properties48 = new java.util.Properties(properties47);
        java.lang.Object obj50 = properties46.put((java.lang.Object) properties48, (java.lang.Object) (short) 1);
        java.util.Properties properties51 = new java.util.Properties(properties48);
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet52 = properties48.entrySet();
        java.lang.Object obj53 = properties43.remove((java.lang.Object) properties48);
        java.util.Enumeration<?> wildcardEnumeration54 = properties43.propertyNames();
        java.util.Properties properties55 = new java.util.Properties(properties43);
        boolean boolean56 = properties10.replace((java.lang.Object) objCollection28, (java.lang.Object) properties33, (java.lang.Object) properties55);
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet57 = properties55.entrySet();
        java.util.Collection<java.lang.Object> objCollection58 = properties55.values();
        java.io.OutputStream outputStream59 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties55.store(outputStream59, "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.log_base_dir={}, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(obj6);
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertNotNull(properties18);
        org.junit.Assert.assertNull(str26);
        org.junit.Assert.assertNull(obj27);
        org.junit.Assert.assertNotNull(objCollection28);
        org.junit.Assert.assertNull(obj35);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 0 + "'", int37 == 0);
        org.junit.Assert.assertNull(obj39);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 50 + "'", int41 == 50);
        org.junit.Assert.assertTrue("'" + long42 + "' != '" + 300000L + "'", long42 == 300000L);
        org.junit.Assert.assertNotNull(properties43);
        org.junit.Assert.assertNull(obj50);
        org.junit.Assert.assertNotNull(objEntrySet52);
        org.junit.Assert.assertNull(obj53);
        org.junit.Assert.assertNotNull(wildcardEnumeration54);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertNotNull(objEntrySet57);
        org.junit.Assert.assertNotNull(objCollection58);
    }

    @Test
    public void test1852() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1852");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setDefaultJtaTimeout((long) (byte) 10);
        atomikosProperties0.setCheckpointInterval((long) (byte) 0);
        atomikosProperties0.setTransactionManagerUniqueName("");
        java.util.Properties properties7 = atomikosProperties0.asProperties();
        java.lang.String str8 = atomikosProperties0.getLogBaseName();
        java.util.Properties properties9 = atomikosProperties0.asProperties();
        atomikosProperties0.setEnableLogging(true);
        atomikosProperties0.setForceShutdownOnVmExit(false);
        java.util.Properties properties14 = atomikosProperties0.asProperties();
        java.io.PrintWriter printWriter15 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties14.list(printWriter15);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(properties7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "tmlog" + "'", str8, "tmlog");
        org.junit.Assert.assertNotNull(properties9);
        org.junit.Assert.assertNotNull(properties14);
    }

    @Test
    public void test1853() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1853");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Properties properties2 = new java.util.Properties(properties0);
        java.util.Properties properties3 = null;
        java.util.Properties properties4 = new java.util.Properties(properties3);
        java.lang.Object obj6 = properties2.put((java.lang.Object) properties4, (java.lang.Object) (short) 1);
        properties4.clear();
        java.lang.String str9 = properties4.getProperty("");
        java.util.Properties properties10 = null;
        java.util.Properties properties11 = new java.util.Properties(properties10);
        java.util.Properties properties12 = new java.util.Properties(properties10);
        java.util.Properties properties13 = null;
        java.util.Properties properties14 = new java.util.Properties(properties13);
        java.lang.Object obj16 = properties12.put((java.lang.Object) properties14, (java.lang.Object) (short) 1);
        properties4.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties12);
        java.util.Enumeration<java.lang.Object> objEnumeration18 = properties4.keys();
        java.util.Enumeration<java.lang.Object> objEnumeration19 = properties4.elements();
        java.util.Properties properties20 = new java.util.Properties(properties4);
        java.util.Properties properties21 = new java.util.Properties(properties20);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties22 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties22.setDefaultJtaTimeout((long) (byte) 10);
        long long25 = atomikosProperties22.getDefaultJtaTimeout();
        atomikosProperties22.setTransactionManagerUniqueName("hi!");
        atomikosProperties22.setTransactionManagerUniqueName("{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=0, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.tm_unique_name=, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
        atomikosProperties22.setMaxActives(1);
        boolean boolean32 = properties21.containsKey((java.lang.Object) atomikosProperties22);
        java.lang.Object obj33 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean34 = properties21.contains(obj33);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(obj6);
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertNull(obj16);
        org.junit.Assert.assertNotNull(objEnumeration18);
        org.junit.Assert.assertNotNull(objEnumeration19);
        org.junit.Assert.assertTrue("'" + long25 + "' != '" + 10L + "'", long25 == 10L);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
    }

    @Test
    public void test1854() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1854");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Properties properties2 = new java.util.Properties(properties0);
        java.util.Properties properties3 = null;
        java.util.Properties properties4 = new java.util.Properties(properties3);
        java.lang.Object obj6 = properties2.put((java.lang.Object) properties4, (java.lang.Object) (short) 1);
        java.util.Enumeration<java.lang.Object> objEnumeration7 = properties4.elements();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet8 = properties4.entrySet();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties9 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties9.setDefaultJtaTimeout((long) (byte) 10);
        long long12 = atomikosProperties9.getDefaultJtaTimeout();
        atomikosProperties9.setTransactionManagerUniqueName("");
        boolean boolean15 = atomikosProperties9.isEnableLogging();
        boolean boolean16 = properties4.containsKey((java.lang.Object) boolean15);
        java.util.Properties properties17 = null;
        java.util.Properties properties18 = new java.util.Properties(properties17);
        java.util.Properties properties19 = new java.util.Properties(properties17);
        java.util.Properties properties20 = null;
        java.util.Properties properties21 = new java.util.Properties(properties20);
        java.lang.Object obj23 = properties19.put((java.lang.Object) properties21, (java.lang.Object) (short) 1);
        java.util.Properties properties25 = null;
        java.util.Properties properties26 = new java.util.Properties(properties25);
        java.util.Properties properties27 = new java.util.Properties(properties25);
        java.util.Properties properties28 = null;
        java.util.Properties properties29 = new java.util.Properties(properties28);
        java.lang.Object obj31 = properties27.put((java.lang.Object) properties29, (java.lang.Object) (short) 1);
        boolean boolean32 = properties21.remove((java.lang.Object) false, (java.lang.Object) (short) 1);
        java.util.Set<java.lang.String> strSet33 = properties21.stringPropertyNames();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties34 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties34.setThreadedTwoPhaseCommit(true);
        atomikosProperties34.setMaxActives((int) (byte) 0);
        atomikosProperties34.setEnableLogging(true);
        atomikosProperties34.setForceShutdownOnVmExit(false);
        java.lang.Object obj43 = properties21.get((java.lang.Object) false);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties44 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties44.setDefaultJtaTimeout((long) (byte) 10);
        atomikosProperties44.setCheckpointInterval((long) (byte) 0);
        atomikosProperties44.setTransactionManagerUniqueName("");
        java.util.Properties properties51 = atomikosProperties44.asProperties();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties52 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties52.setThreadedTwoPhaseCommit(true);
        atomikosProperties52.setMaxActives((int) '#');
        atomikosProperties52.setForceShutdownOnVmExit(true);
        java.lang.String str59 = atomikosProperties52.getLogBaseDir();
        java.lang.Object obj60 = properties51.remove((java.lang.Object) atomikosProperties52);
        java.util.Collection<java.lang.Object> objCollection61 = properties51.values();
        boolean boolean62 = properties4.remove((java.lang.Object) false, (java.lang.Object) properties51);
        java.lang.String str65 = properties51.getProperty("{=}", "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=0, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
        org.junit.Assert.assertNull(obj6);
        org.junit.Assert.assertNotNull(objEnumeration7);
        org.junit.Assert.assertNotNull(objEntrySet8);
        org.junit.Assert.assertTrue("'" + long12 + "' != '" + 10L + "'", long12 == 10L);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNull(obj23);
        org.junit.Assert.assertNull(obj31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(strSet33);
        org.junit.Assert.assertNull(obj43);
        org.junit.Assert.assertNotNull(properties51);
        org.junit.Assert.assertNull(str59);
        org.junit.Assert.assertNull(obj60);
        org.junit.Assert.assertNotNull(objCollection61);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=0, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}" + "'", str65, "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=0, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
    }

    @Test
    public void test1855() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1855");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Properties properties2 = new java.util.Properties(properties0);
        boolean boolean4 = properties2.containsValue((java.lang.Object) (short) 100);
        java.util.Properties properties5 = new java.util.Properties(properties2);
        java.lang.String str7 = properties5.getProperty("hi!");
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet8 = properties5.entrySet();
        java.util.Enumeration<java.lang.Object> objEnumeration9 = properties5.keys();
        java.util.Properties properties10 = null;
        java.util.Properties properties11 = new java.util.Properties(properties10);
        java.util.Properties properties12 = new java.util.Properties(properties10);
        java.util.Properties properties13 = null;
        java.util.Properties properties14 = new java.util.Properties(properties13);
        java.lang.Object obj16 = properties12.put((java.lang.Object) properties14, (java.lang.Object) (short) 1);
        properties14.clear();
        java.lang.String str19 = properties14.getProperty("");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties20 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties20.setDefaultJtaTimeout((long) (byte) 10);
        atomikosProperties20.setSerialJtaTransactions(false);
        atomikosProperties20.setMaxTimeout((long) (short) -1);
        long long27 = atomikosProperties20.getDefaultJtaTimeout();
        java.util.Properties properties28 = atomikosProperties20.asProperties();
        java.lang.Object obj29 = properties14.get((java.lang.Object) properties28);
        java.util.Properties properties30 = new java.util.Properties(properties14);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties31 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties31.setDefaultJtaTimeout((long) (byte) 10);
        atomikosProperties31.setCheckpointInterval((long) (byte) 0);
        atomikosProperties31.setTransactionManagerUniqueName("");
        java.util.Properties properties38 = atomikosProperties31.asProperties();
        java.lang.String str39 = atomikosProperties31.getTransactionManagerUniqueName();
        atomikosProperties31.setDefaultJtaTimeout((long) (-1));
        java.util.Properties properties42 = atomikosProperties31.asProperties();
        boolean boolean43 = properties42.isEmpty();
        boolean boolean44 = properties30.containsKey((java.lang.Object) boolean43);
        java.util.Properties properties45 = null;
        java.util.Properties properties46 = new java.util.Properties(properties45);
        java.util.Properties properties47 = new java.util.Properties(properties45);
        java.util.Properties properties48 = null;
        java.util.Properties properties49 = new java.util.Properties(properties48);
        java.lang.Object obj51 = properties47.put((java.lang.Object) properties49, (java.lang.Object) (short) 1);
        java.lang.Object obj54 = properties49.setProperty("tmlog", "{}");
        int int55 = properties49.size();
        java.lang.Object obj56 = properties5.putIfAbsent((java.lang.Object) boolean43, (java.lang.Object) properties49);
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet57 = properties5.entrySet();
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNotNull(objEntrySet8);
        org.junit.Assert.assertNotNull(objEnumeration9);
        org.junit.Assert.assertNull(obj16);
        org.junit.Assert.assertNull(str19);
        org.junit.Assert.assertTrue("'" + long27 + "' != '" + 10L + "'", long27 == 10L);
        org.junit.Assert.assertNotNull(properties28);
        org.junit.Assert.assertNull(obj29);
        org.junit.Assert.assertNotNull(properties38);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "" + "'", str39, "");
        org.junit.Assert.assertNotNull(properties42);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNull(obj51);
        org.junit.Assert.assertNull(obj54);
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + 1 + "'", int55 == 1);
        org.junit.Assert.assertNull(obj56);
        org.junit.Assert.assertNotNull(objEntrySet57);
    }

    @Test
    public void test1856() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1856");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setThreadedTwoPhaseCommit(true);
        atomikosProperties0.setMaxActives((int) (byte) 0);
        atomikosProperties0.setEnableLogging(true);
        atomikosProperties0.setForceShutdownOnVmExit(false);
        java.util.Properties properties9 = atomikosProperties0.asProperties();
        boolean boolean10 = atomikosProperties0.isThreadedTwoPhaseCommit();
        int int11 = atomikosProperties0.getMaxActives();
        atomikosProperties0.setService("");
        atomikosProperties0.setLogBaseName("{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=0, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog, {}={}}");
        atomikosProperties0.setSerialJtaTransactions(false);
        atomikosProperties0.setLogBaseName("{tmlog={com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=0, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.tm_unique_name=, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}, 4=true}");
        org.junit.Assert.assertNotNull(properties9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
    }

    @Test
    public void test1857() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1857");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Properties properties2 = new java.util.Properties(properties0);
        java.util.Properties properties3 = null;
        java.util.Properties properties4 = new java.util.Properties(properties3);
        java.lang.Object obj6 = properties2.put((java.lang.Object) properties4, (java.lang.Object) (short) 1);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties7 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties7.setThreadedTwoPhaseCommit(true);
        atomikosProperties7.setMaxActives((int) (byte) 0);
        boolean boolean12 = properties2.containsValue((java.lang.Object) atomikosProperties7);
        java.lang.String str13 = atomikosProperties7.getLogBaseDir();
        java.lang.String str14 = atomikosProperties7.getLogBaseDir();
        atomikosProperties7.setMaxTimeout((long) (byte) 1);
        boolean boolean17 = atomikosProperties7.isSerialJtaTransactions();
        org.junit.Assert.assertNull(obj6);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
    }

    @Test
    public void test1858() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1858");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setThreadedTwoPhaseCommit(true);
        atomikosProperties0.setMaxActives((int) (byte) 0);
        atomikosProperties0.setEnableLogging(true);
        atomikosProperties0.setForceShutdownOnVmExit(false);
        java.util.Properties properties9 = atomikosProperties0.asProperties();
        boolean boolean10 = atomikosProperties0.isThreadedTwoPhaseCommit();
        java.lang.String str11 = atomikosProperties0.getService();
        java.util.Properties properties12 = atomikosProperties0.asProperties();
        java.util.Collection<java.lang.Object> objCollection13 = properties12.values();
        java.util.Properties properties14 = null;
        java.util.Properties properties15 = new java.util.Properties(properties14);
        java.util.Properties properties16 = new java.util.Properties(properties14);
        java.util.Properties properties17 = null;
        java.util.Properties properties18 = new java.util.Properties(properties17);
        java.lang.Object obj20 = properties16.put((java.lang.Object) properties18, (java.lang.Object) (short) 1);
        java.util.Properties properties21 = new java.util.Properties(properties18);
        java.util.Properties properties22 = new java.util.Properties(properties18);
        java.util.Set<java.lang.Object> objSet23 = properties22.keySet();
        java.util.Properties properties24 = new java.util.Properties(properties22);
        java.util.Properties properties25 = new java.util.Properties(properties22);
        java.util.Properties properties26 = null;
        java.util.Properties properties27 = new java.util.Properties(properties26);
        java.util.Properties properties28 = new java.util.Properties(properties26);
        java.util.Properties properties29 = null;
        java.util.Properties properties30 = new java.util.Properties(properties29);
        java.lang.Object obj32 = properties28.put((java.lang.Object) properties30, (java.lang.Object) (short) 1);
        properties30.clear();
        int int34 = properties30.size();
        java.util.Properties properties35 = new java.util.Properties(properties30);
        java.util.Collection<java.lang.Object> objCollection36 = properties30.values();
        java.lang.String str38 = properties30.getProperty("hi!");
        java.util.Properties properties39 = new java.util.Properties();
        java.util.Enumeration<?> wildcardEnumeration40 = properties39.propertyNames();
        java.util.Properties properties42 = null;
        java.util.Properties properties43 = new java.util.Properties(properties42);
        java.util.Properties properties44 = new java.util.Properties(properties42);
        java.util.Properties properties45 = null;
        java.util.Properties properties46 = new java.util.Properties(properties45);
        java.lang.Object obj48 = properties44.put((java.lang.Object) properties46, (java.lang.Object) (short) 1);
        java.util.Properties properties49 = new java.util.Properties(properties46);
        java.util.Enumeration<java.lang.Object> objEnumeration50 = properties49.elements();
        java.lang.Object obj51 = properties39.put((java.lang.Object) (-1.0f), (java.lang.Object) objEnumeration50);
        java.lang.Object obj52 = properties30.remove((java.lang.Object) (-1.0f));
        java.util.Enumeration<java.lang.Object> objEnumeration53 = properties30.elements();
        java.lang.Object obj54 = properties25.get((java.lang.Object) properties30);
        java.lang.Object obj55 = properties12.remove((java.lang.Object) properties25);
        java.lang.String str58 = properties25.getProperty("", "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=0, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.tm_unique_name=, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
        org.junit.Assert.assertNotNull(properties9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertNotNull(properties12);
        org.junit.Assert.assertNotNull(objCollection13);
        org.junit.Assert.assertNull(obj20);
        org.junit.Assert.assertNotNull(objSet23);
        org.junit.Assert.assertNull(obj32);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 0 + "'", int34 == 0);
        org.junit.Assert.assertNotNull(objCollection36);
        org.junit.Assert.assertNull(str38);
        org.junit.Assert.assertNotNull(wildcardEnumeration40);
        org.junit.Assert.assertNull(obj48);
        org.junit.Assert.assertNotNull(objEnumeration50);
        org.junit.Assert.assertNull(obj51);
        org.junit.Assert.assertNull(obj52);
        org.junit.Assert.assertNotNull(objEnumeration53);
        org.junit.Assert.assertNull(obj54);
        org.junit.Assert.assertNull(obj55);
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=0, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.tm_unique_name=, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}" + "'", str58, "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=0, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.tm_unique_name=, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
    }

    @Test
    public void test1859() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1859");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Properties properties2 = new java.util.Properties(properties0);
        java.util.Properties properties3 = null;
        java.util.Properties properties4 = new java.util.Properties(properties3);
        java.lang.Object obj6 = properties2.put((java.lang.Object) properties4, (java.lang.Object) (short) 1);
        properties4.clear();
        int int8 = properties4.size();
        java.util.Properties properties9 = null;
        java.util.Properties properties10 = new java.util.Properties(properties9);
        java.util.Properties properties11 = new java.util.Properties(properties9);
        java.util.Properties properties12 = null;
        java.util.Properties properties13 = new java.util.Properties(properties12);
        java.lang.Object obj15 = properties11.put((java.lang.Object) properties13, (java.lang.Object) (short) 1);
        java.util.Properties properties16 = new java.util.Properties(properties13);
        java.util.Properties properties17 = new java.util.Properties(properties13);
        boolean boolean19 = properties4.remove((java.lang.Object) properties13, (java.lang.Object) 10.0f);
        java.util.Enumeration<java.lang.Object> objEnumeration20 = properties13.elements();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties21 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties21.setDefaultJtaTimeout((long) (byte) 10);
        atomikosProperties21.setCheckpointInterval((long) (byte) 0);
        long long26 = atomikosProperties21.getMaxTimeout();
        atomikosProperties21.setSerialJtaTransactions(true);
        java.util.Properties properties29 = new java.util.Properties();
        java.util.Enumeration<?> wildcardEnumeration30 = properties29.propertyNames();
        java.lang.Object obj31 = properties13.replace((java.lang.Object) atomikosProperties21, (java.lang.Object) properties29);
        java.lang.String str32 = properties13.toString();
        java.util.Properties properties33 = null;
        java.util.Properties properties34 = new java.util.Properties(properties33);
        java.util.Properties properties35 = new java.util.Properties(properties33);
        java.util.Properties properties36 = null;
        java.util.Properties properties37 = new java.util.Properties(properties36);
        java.lang.Object obj39 = properties35.put((java.lang.Object) properties37, (java.lang.Object) (short) 1);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties40 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties40.setThreadedTwoPhaseCommit(true);
        atomikosProperties40.setMaxActives((int) (byte) 0);
        boolean boolean45 = properties35.containsValue((java.lang.Object) atomikosProperties40);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties46 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties46.setDefaultJtaTimeout((long) (byte) 10);
        atomikosProperties46.setSerialJtaTransactions(false);
        boolean boolean51 = properties35.containsValue((java.lang.Object) atomikosProperties46);
        java.lang.Object obj54 = properties35.putIfAbsent((java.lang.Object) 10, (java.lang.Object) (byte) -1);
        java.lang.Object obj55 = null;
        java.lang.Object obj56 = properties13.getOrDefault((java.lang.Object) 10, obj55);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties57 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties57.setDefaultJtaTimeout((long) (byte) 10);
        long long60 = atomikosProperties57.getDefaultJtaTimeout();
        atomikosProperties57.setTransactionManagerUniqueName("");
        boolean boolean63 = atomikosProperties57.isEnableLogging();
        atomikosProperties57.setDefaultJtaTimeout((long) '4');
        long long66 = atomikosProperties57.getCheckpointInterval();
        long long67 = atomikosProperties57.getDefaultJtaTimeout();
        java.lang.Object obj68 = properties13.get((java.lang.Object) atomikosProperties57);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties69 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties69.setDefaultJtaTimeout((long) (byte) 10);
        atomikosProperties69.setCheckpointInterval((long) (byte) 0);
        atomikosProperties69.setTransactionManagerUniqueName("");
        boolean boolean76 = atomikosProperties69.isEnableLogging();
        long long77 = atomikosProperties69.getDefaultJtaTimeout();
        atomikosProperties69.setForceShutdownOnVmExit(true);
        atomikosProperties69.setThreadedTwoPhaseCommit(true);
        boolean boolean82 = properties13.equals((java.lang.Object) true);
        java.lang.String str85 = properties13.getProperty("{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.log_base_dir=hi!, com.atomikos.icatch.threaded_2pc=true, com.atomikos.icatch.max_actives=35, com.atomikos.icatch.log_base_name=tmlog}", "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.log_base_dir=hi!, com.atomikos.icatch.threaded_2pc=true, com.atomikos.icatch.max_actives=35, com.atomikos.icatch.log_base_name=tmlog}");
        org.junit.Assert.assertNull(obj6);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertNull(obj15);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(objEnumeration20);
        org.junit.Assert.assertTrue("'" + long26 + "' != '" + 300000L + "'", long26 == 300000L);
        org.junit.Assert.assertNotNull(wildcardEnumeration30);
        org.junit.Assert.assertNull(obj31);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "{}" + "'", str32, "{}");
        org.junit.Assert.assertNull(obj39);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertNull(obj54);
        org.junit.Assert.assertNull(obj56);
        org.junit.Assert.assertTrue("'" + long60 + "' != '" + 10L + "'", long60 == 10L);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertTrue("'" + long66 + "' != '" + 500L + "'", long66 == 500L);
        org.junit.Assert.assertTrue("'" + long67 + "' != '" + 52L + "'", long67 == 52L);
        org.junit.Assert.assertNull(obj68);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + true + "'", boolean76 == true);
        org.junit.Assert.assertTrue("'" + long77 + "' != '" + 10L + "'", long77 == 10L);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + false + "'", boolean82 == false);
        org.junit.Assert.assertEquals("'" + str85 + "' != '" + "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.log_base_dir=hi!, com.atomikos.icatch.threaded_2pc=true, com.atomikos.icatch.max_actives=35, com.atomikos.icatch.log_base_name=tmlog}" + "'", str85, "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.log_base_dir=hi!, com.atomikos.icatch.threaded_2pc=true, com.atomikos.icatch.max_actives=35, com.atomikos.icatch.log_base_name=tmlog}");
    }

    @Test
    public void test1860() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1860");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Properties properties2 = new java.util.Properties(properties0);
        java.util.Properties properties3 = null;
        java.util.Properties properties4 = new java.util.Properties(properties3);
        java.lang.Object obj6 = properties2.put((java.lang.Object) properties4, (java.lang.Object) (short) 1);
        java.util.Properties properties8 = null;
        java.util.Properties properties9 = new java.util.Properties(properties8);
        java.util.Properties properties10 = new java.util.Properties(properties8);
        java.util.Properties properties11 = null;
        java.util.Properties properties12 = new java.util.Properties(properties11);
        java.lang.Object obj14 = properties10.put((java.lang.Object) properties12, (java.lang.Object) (short) 1);
        boolean boolean15 = properties4.remove((java.lang.Object) false, (java.lang.Object) (short) 1);
        java.util.Enumeration<java.lang.Object> objEnumeration16 = properties4.keys();
        java.util.Properties properties17 = null;
        java.util.Properties properties18 = new java.util.Properties(properties17);
        java.util.Properties properties19 = new java.util.Properties(properties17);
        java.util.Properties properties20 = null;
        java.util.Properties properties21 = new java.util.Properties(properties20);
        java.lang.Object obj23 = properties19.put((java.lang.Object) properties21, (java.lang.Object) (short) 1);
        boolean boolean24 = properties19.isEmpty();
        java.util.Properties properties25 = null;
        java.util.Properties properties26 = new java.util.Properties(properties25);
        java.util.Properties properties27 = new java.util.Properties(properties25);
        boolean boolean28 = properties19.containsKey((java.lang.Object) properties27);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties29 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties29.setThreadedTwoPhaseCommit(true);
        atomikosProperties29.setMaxActives((int) (byte) 0);
        java.lang.Object obj34 = properties4.getOrDefault((java.lang.Object) boolean28, (java.lang.Object) (byte) 0);
        java.util.Properties properties35 = new java.util.Properties(properties4);
        java.util.Properties properties36 = null;
        java.util.Properties properties37 = new java.util.Properties(properties36);
        java.util.Properties properties38 = new java.util.Properties(properties36);
        java.util.Properties properties39 = null;
        java.util.Properties properties40 = new java.util.Properties(properties39);
        java.lang.Object obj42 = properties38.put((java.lang.Object) properties40, (java.lang.Object) (short) 1);
        properties40.clear();
        int int44 = properties40.size();
        java.util.Properties properties45 = null;
        java.util.Properties properties46 = new java.util.Properties(properties45);
        java.util.Properties properties47 = new java.util.Properties(properties45);
        java.util.Properties properties48 = null;
        java.util.Properties properties49 = new java.util.Properties(properties48);
        java.lang.Object obj51 = properties47.put((java.lang.Object) properties49, (java.lang.Object) (short) 1);
        java.util.Properties properties52 = new java.util.Properties(properties49);
        java.util.Properties properties53 = new java.util.Properties(properties49);
        boolean boolean55 = properties40.remove((java.lang.Object) properties49, (java.lang.Object) 10.0f);
        java.util.Enumeration<java.lang.Object> objEnumeration56 = properties49.elements();
        java.util.Properties properties57 = new java.util.Properties(properties49);
        boolean boolean59 = properties49.contains((java.lang.Object) (byte) 100);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties60 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        int int61 = atomikosProperties60.getMaxActives();
        atomikosProperties60.setLogBaseName("");
        atomikosProperties60.setMaxActives((-1));
        java.lang.Object obj66 = properties49.remove((java.lang.Object) atomikosProperties60);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties67 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties67.setDefaultJtaTimeout((long) (byte) 10);
        long long70 = atomikosProperties67.getDefaultJtaTimeout();
        java.lang.String str71 = atomikosProperties67.getTransactionManagerUniqueName();
        atomikosProperties67.setThreadedTwoPhaseCommit(true);
        java.util.Properties properties74 = atomikosProperties67.asProperties();
        java.lang.Class<?> wildcardClass75 = atomikosProperties67.getClass();
        boolean boolean76 = properties49.equals((java.lang.Object) wildcardClass75);
        java.lang.Object obj77 = properties49.clone();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties78 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties78.setDefaultJtaTimeout((long) (byte) 10);
        long long81 = atomikosProperties78.getDefaultJtaTimeout();
        atomikosProperties78.setTransactionManagerUniqueName("");
        boolean boolean84 = atomikosProperties78.isEnableLogging();
        atomikosProperties78.setDefaultJtaTimeout((long) '4');
        java.lang.String str87 = atomikosProperties78.getTransactionManagerUniqueName();
        atomikosProperties78.setThreadedTwoPhaseCommit(true);
        java.util.Properties properties90 = atomikosProperties78.asProperties();
        java.util.Properties properties91 = atomikosProperties78.asProperties();
        java.util.Set<java.lang.Object> objSet92 = properties91.keySet();
        java.lang.Object obj93 = properties49.get((java.lang.Object) properties91);
        boolean boolean94 = properties35.containsValue((java.lang.Object) properties49);
        java.lang.String str96 = properties49.getProperty("{=}");
        org.junit.Assert.assertNull(obj6);
        org.junit.Assert.assertNull(obj14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(objEnumeration16);
        org.junit.Assert.assertNull(obj23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertEquals("'" + obj34 + "' != '" + (byte) 0 + "'", obj34, (byte) 0);
        org.junit.Assert.assertNull(obj42);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 0 + "'", int44 == 0);
        org.junit.Assert.assertNull(obj51);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertNotNull(objEnumeration56);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertTrue("'" + int61 + "' != '" + 50 + "'", int61 == 50);
        org.junit.Assert.assertNull(obj66);
        org.junit.Assert.assertTrue("'" + long70 + "' != '" + 10L + "'", long70 == 10L);
        org.junit.Assert.assertNull(str71);
        org.junit.Assert.assertNotNull(properties74);
        org.junit.Assert.assertNotNull(wildcardClass75);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
        org.junit.Assert.assertNotNull(obj77);
        org.junit.Assert.assertEquals(obj77.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj77), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj77), "{}");
        org.junit.Assert.assertTrue("'" + long81 + "' != '" + 10L + "'", long81 == 10L);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + true + "'", boolean84 == true);
        org.junit.Assert.assertEquals("'" + str87 + "' != '" + "" + "'", str87, "");
        org.junit.Assert.assertNotNull(properties90);
        org.junit.Assert.assertNotNull(properties91);
        org.junit.Assert.assertNotNull(objSet92);
        org.junit.Assert.assertNull(obj93);
        org.junit.Assert.assertTrue("'" + boolean94 + "' != '" + false + "'", boolean94 == false);
        org.junit.Assert.assertNull(str96);
    }

    @Test
    public void test1861() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1861");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Properties properties2 = new java.util.Properties(properties0);
        java.util.Properties properties3 = null;
        java.util.Properties properties4 = new java.util.Properties(properties3);
        java.lang.Object obj6 = properties2.put((java.lang.Object) properties4, (java.lang.Object) (short) 1);
        java.util.Enumeration<java.lang.Object> objEnumeration7 = properties4.elements();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet8 = properties4.entrySet();
        java.util.Set<java.lang.Object> objSet9 = properties4.keySet();
        java.util.Properties properties10 = null;
        java.util.Properties properties11 = new java.util.Properties(properties10);
        java.util.Properties properties12 = new java.util.Properties(properties10);
        java.util.Properties properties13 = null;
        java.util.Properties properties14 = new java.util.Properties(properties13);
        java.lang.Object obj16 = properties12.put((java.lang.Object) properties14, (java.lang.Object) (short) 1);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties17 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties17.setThreadedTwoPhaseCommit(true);
        atomikosProperties17.setMaxActives((int) (byte) 0);
        boolean boolean22 = properties12.containsValue((java.lang.Object) atomikosProperties17);
        atomikosProperties17.setCheckpointInterval((long) 9);
        atomikosProperties17.setEnableLogging(false);
        java.lang.Object obj27 = properties4.get((java.lang.Object) atomikosProperties17);
        java.util.Properties properties28 = new java.util.Properties(properties4);
        java.util.Enumeration<java.lang.Object> objEnumeration29 = properties28.elements();
        org.junit.Assert.assertNull(obj6);
        org.junit.Assert.assertNotNull(objEnumeration7);
        org.junit.Assert.assertNotNull(objEntrySet8);
        org.junit.Assert.assertNotNull(objSet9);
        org.junit.Assert.assertNull(obj16);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNull(obj27);
        org.junit.Assert.assertNotNull(objEnumeration29);
    }

    @Test
    public void test1862() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1862");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Properties properties2 = new java.util.Properties(properties0);
        java.util.Properties properties3 = null;
        java.util.Properties properties4 = new java.util.Properties(properties3);
        java.lang.Object obj6 = properties2.put((java.lang.Object) properties4, (java.lang.Object) (short) 1);
        properties4.clear();
        int int8 = properties4.size();
        java.util.Properties properties9 = new java.util.Properties(properties4);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties10 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        int int11 = atomikosProperties10.getMaxActives();
        long long12 = atomikosProperties10.getMaxTimeout();
        java.util.Properties properties13 = atomikosProperties10.asProperties();
        java.util.Properties properties14 = atomikosProperties10.asProperties();
        java.util.Properties properties15 = null;
        java.util.Properties properties16 = new java.util.Properties(properties15);
        java.util.Properties properties17 = new java.util.Properties(properties15);
        java.util.Properties properties18 = null;
        java.util.Properties properties19 = new java.util.Properties(properties18);
        java.lang.Object obj21 = properties17.put((java.lang.Object) properties19, (java.lang.Object) (short) 1);
        java.util.Enumeration<java.lang.Object> objEnumeration22 = properties19.elements();
        java.lang.Object obj23 = properties4.replace((java.lang.Object) atomikosProperties10, (java.lang.Object) properties19);
        atomikosProperties10.setLogBaseName("");
        java.lang.String str26 = atomikosProperties10.getTransactionManagerUniqueName();
        atomikosProperties10.setMaxActives(1);
        atomikosProperties10.setMaxActives((int) (byte) 100);
        java.lang.String str31 = atomikosProperties10.getService();
        java.lang.String str32 = atomikosProperties10.getLogBaseDir();
        org.junit.Assert.assertNull(obj6);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 50 + "'", int11 == 50);
        org.junit.Assert.assertTrue("'" + long12 + "' != '" + 300000L + "'", long12 == 300000L);
        org.junit.Assert.assertNotNull(properties13);
        org.junit.Assert.assertNotNull(properties14);
        org.junit.Assert.assertNull(obj21);
        org.junit.Assert.assertNotNull(objEnumeration22);
        org.junit.Assert.assertNull(obj23);
        org.junit.Assert.assertNull(str26);
        org.junit.Assert.assertNull(str31);
        org.junit.Assert.assertNull(str32);
    }

    @Test
    public void test1863() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1863");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        int int1 = atomikosProperties0.getMaxActives();
        long long2 = atomikosProperties0.getMaxTimeout();
        java.util.Properties properties3 = atomikosProperties0.asProperties();
        atomikosProperties0.setService("hi!");
        atomikosProperties0.setMaxTimeout((long) 1);
        atomikosProperties0.setService("{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=100, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=true, com.atomikos.icatch.tm_unique_name=, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name={com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.tm_unique_name=, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}}");
        boolean boolean10 = atomikosProperties0.isThreadedTwoPhaseCommit();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 50 + "'", int1 == 50);
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + 300000L + "'", long2 == 300000L);
        org.junit.Assert.assertNotNull(properties3);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
    }

    @Test
    public void test1864() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1864");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Properties properties2 = new java.util.Properties(properties0);
        java.util.Properties properties3 = null;
        java.util.Properties properties4 = new java.util.Properties(properties3);
        java.lang.Object obj6 = properties2.put((java.lang.Object) properties4, (java.lang.Object) (short) 1);
        boolean boolean7 = properties2.isEmpty();
        java.util.Properties properties8 = null;
        java.util.Properties properties9 = new java.util.Properties(properties8);
        java.util.Properties properties10 = new java.util.Properties(properties8);
        boolean boolean11 = properties2.containsKey((java.lang.Object) properties10);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties12 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        int int13 = atomikosProperties12.getMaxActives();
        long long14 = atomikosProperties12.getMaxTimeout();
        java.util.Properties properties15 = atomikosProperties12.asProperties();
        java.util.Properties properties16 = atomikosProperties12.asProperties();
        java.util.Properties properties17 = null;
        java.util.Properties properties18 = new java.util.Properties(properties17);
        java.util.Properties properties19 = new java.util.Properties(properties17);
        java.util.Properties properties20 = null;
        java.util.Properties properties21 = new java.util.Properties(properties20);
        java.lang.Object obj23 = properties19.put((java.lang.Object) properties21, (java.lang.Object) (short) 1);
        boolean boolean24 = properties19.isEmpty();
        java.util.Properties properties25 = null;
        java.util.Properties properties26 = new java.util.Properties(properties25);
        java.util.Properties properties27 = new java.util.Properties(properties25);
        boolean boolean28 = properties19.containsKey((java.lang.Object) properties27);
        java.util.Properties properties29 = new java.util.Properties(properties27);
        java.lang.Object obj30 = properties29.clone();
        java.util.Properties properties32 = null;
        java.util.Properties properties33 = new java.util.Properties(properties32);
        java.util.Properties properties34 = new java.util.Properties(properties32);
        java.util.Properties properties35 = null;
        java.util.Properties properties36 = new java.util.Properties(properties35);
        java.lang.Object obj38 = properties34.put((java.lang.Object) properties36, (java.lang.Object) (short) 1);
        boolean boolean39 = properties34.isEmpty();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties40 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties40.setDefaultJtaTimeout((long) (byte) 10);
        atomikosProperties40.setCheckpointInterval((long) (byte) 0);
        atomikosProperties40.setTransactionManagerUniqueName("");
        java.util.Properties properties47 = atomikosProperties40.asProperties();
        java.lang.Object obj48 = properties34.remove((java.lang.Object) properties47);
        java.lang.Object obj49 = properties29.putIfAbsent((java.lang.Object) 1L, (java.lang.Object) properties34);
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet50 = properties29.entrySet();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties51 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        boolean boolean52 = atomikosProperties51.isForceShutdownOnVmExit();
        java.util.Properties properties53 = atomikosProperties51.asProperties();
        java.util.Properties properties54 = null;
        java.util.Properties properties55 = new java.util.Properties(properties54);
        java.util.Properties properties56 = new java.util.Properties(properties54);
        java.util.Properties properties57 = null;
        java.util.Properties properties58 = new java.util.Properties(properties57);
        java.lang.Object obj60 = properties56.put((java.lang.Object) properties58, (java.lang.Object) (short) 1);
        properties58.clear();
        int int62 = properties58.size();
        java.util.Properties properties63 = null;
        java.util.Properties properties64 = new java.util.Properties(properties63);
        java.util.Properties properties65 = new java.util.Properties(properties63);
        java.util.Properties properties66 = null;
        java.util.Properties properties67 = new java.util.Properties(properties66);
        java.lang.Object obj69 = properties65.put((java.lang.Object) properties67, (java.lang.Object) (short) 1);
        java.util.Properties properties70 = new java.util.Properties(properties67);
        java.util.Properties properties71 = new java.util.Properties(properties67);
        boolean boolean73 = properties58.remove((java.lang.Object) properties67, (java.lang.Object) 10.0f);
        boolean boolean74 = properties53.containsKey((java.lang.Object) 10.0f);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties76 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties76.setDefaultJtaTimeout((long) (byte) 10);
        atomikosProperties76.setCheckpointInterval((long) (byte) 0);
        atomikosProperties76.setEnableLogging(true);
        java.lang.Object obj83 = properties53.getOrDefault((java.lang.Object) (byte) 0, (java.lang.Object) true);
        java.util.Properties properties84 = new java.util.Properties(properties53);
        boolean boolean85 = properties29.containsKey((java.lang.Object) properties84);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties86 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties86.setDefaultJtaTimeout((long) (byte) 10);
        long long89 = atomikosProperties86.getDefaultJtaTimeout();
        atomikosProperties86.setTransactionManagerUniqueName("hi!");
        atomikosProperties86.setTransactionManagerUniqueName("{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=0, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.tm_unique_name=, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
        atomikosProperties86.setService("");
        boolean boolean96 = properties16.remove((java.lang.Object) properties84, (java.lang.Object) "");
        java.lang.Object obj97 = properties2.get((java.lang.Object) properties16);
        boolean boolean98 = properties2.isEmpty();
        org.junit.Assert.assertNull(obj6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 50 + "'", int13 == 50);
        org.junit.Assert.assertTrue("'" + long14 + "' != '" + 300000L + "'", long14 == 300000L);
        org.junit.Assert.assertNotNull(properties15);
        org.junit.Assert.assertNotNull(properties16);
        org.junit.Assert.assertNull(obj23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNotNull(obj30);
        org.junit.Assert.assertEquals(obj30.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj30), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj30), "{}");
        org.junit.Assert.assertNull(obj38);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(properties47);
        org.junit.Assert.assertNull(obj48);
        org.junit.Assert.assertNull(obj49);
        org.junit.Assert.assertNotNull(objEntrySet50);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNotNull(properties53);
        org.junit.Assert.assertNull(obj60);
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + 0 + "'", int62 == 0);
        org.junit.Assert.assertNull(obj69);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
        org.junit.Assert.assertEquals("'" + obj83 + "' != '" + true + "'", obj83, true);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + false + "'", boolean85 == false);
        org.junit.Assert.assertTrue("'" + long89 + "' != '" + 10L + "'", long89 == 10L);
        org.junit.Assert.assertTrue("'" + boolean96 + "' != '" + false + "'", boolean96 == false);
        org.junit.Assert.assertNull(obj97);
        org.junit.Assert.assertTrue("'" + boolean98 + "' != '" + false + "'", boolean98 == false);
    }

    @Test
    public void test1865() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1865");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Properties properties2 = new java.util.Properties(properties0);
        boolean boolean4 = properties2.containsValue((java.lang.Object) (short) 100);
        java.util.Enumeration<java.lang.Object> objEnumeration5 = properties2.keys();
        java.util.Properties properties6 = null;
        java.util.Properties properties7 = new java.util.Properties(properties6);
        java.util.Properties properties8 = new java.util.Properties(properties6);
        java.util.Properties properties9 = null;
        java.util.Properties properties10 = new java.util.Properties(properties9);
        java.lang.Object obj12 = properties8.put((java.lang.Object) properties10, (java.lang.Object) (short) 1);
        java.util.Properties properties14 = null;
        java.util.Properties properties15 = new java.util.Properties(properties14);
        java.util.Properties properties16 = new java.util.Properties(properties14);
        java.util.Properties properties17 = null;
        java.util.Properties properties18 = new java.util.Properties(properties17);
        java.lang.Object obj20 = properties16.put((java.lang.Object) properties18, (java.lang.Object) (short) 1);
        boolean boolean21 = properties10.remove((java.lang.Object) false, (java.lang.Object) (short) 1);
        java.util.Set<java.lang.String> strSet22 = properties10.stringPropertyNames();
        java.util.Enumeration<java.lang.Object> objEnumeration23 = properties10.elements();
        properties10.clear();
        java.util.Set<java.lang.String> strSet25 = properties10.stringPropertyNames();
        properties2.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties10);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties27 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties27.setDefaultJtaTimeout((long) (byte) 10);
        atomikosProperties27.setCheckpointInterval((long) (byte) 0);
        atomikosProperties27.setTransactionManagerUniqueName("");
        boolean boolean34 = atomikosProperties27.isEnableLogging();
        java.util.Properties properties35 = atomikosProperties27.asProperties();
        java.util.Properties properties36 = new java.util.Properties(properties35);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties37 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties37.setThreadedTwoPhaseCommit(true);
        atomikosProperties37.setMaxActives((int) (byte) 0);
        atomikosProperties37.setEnableLogging(true);
        atomikosProperties37.setForceShutdownOnVmExit(false);
        boolean boolean46 = atomikosProperties37.isThreadedTwoPhaseCommit();
        atomikosProperties37.setForceShutdownOnVmExit(false);
        java.util.Properties properties49 = null;
        java.util.Properties properties50 = new java.util.Properties(properties49);
        java.util.Properties properties51 = new java.util.Properties(properties49);
        java.util.Properties properties52 = null;
        java.util.Properties properties53 = new java.util.Properties(properties52);
        java.lang.Object obj55 = properties51.put((java.lang.Object) properties53, (java.lang.Object) (short) 1);
        java.util.Properties properties57 = null;
        java.util.Properties properties58 = new java.util.Properties(properties57);
        java.util.Properties properties59 = new java.util.Properties(properties57);
        java.util.Properties properties60 = null;
        java.util.Properties properties61 = new java.util.Properties(properties60);
        java.lang.Object obj63 = properties59.put((java.lang.Object) properties61, (java.lang.Object) (short) 1);
        boolean boolean64 = properties53.remove((java.lang.Object) false, (java.lang.Object) (short) 1);
        java.util.Enumeration<java.lang.Object> objEnumeration65 = properties53.keys();
        java.util.Properties properties66 = null;
        java.util.Properties properties67 = new java.util.Properties(properties66);
        java.util.Properties properties68 = new java.util.Properties(properties66);
        java.util.Properties properties69 = null;
        java.util.Properties properties70 = new java.util.Properties(properties69);
        java.lang.Object obj72 = properties68.put((java.lang.Object) properties70, (java.lang.Object) (short) 1);
        boolean boolean73 = properties68.isEmpty();
        java.util.Properties properties74 = null;
        java.util.Properties properties75 = new java.util.Properties(properties74);
        java.util.Properties properties76 = new java.util.Properties(properties74);
        boolean boolean77 = properties68.containsKey((java.lang.Object) properties76);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties78 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties78.setThreadedTwoPhaseCommit(true);
        atomikosProperties78.setMaxActives((int) (byte) 0);
        java.lang.Object obj83 = properties53.getOrDefault((java.lang.Object) boolean77, (java.lang.Object) (byte) 0);
        java.util.Set<java.lang.String> strSet84 = properties53.stringPropertyNames();
        java.lang.Object obj85 = properties36.putIfAbsent((java.lang.Object) atomikosProperties37, (java.lang.Object) strSet84);
        java.lang.Object obj86 = properties2.get((java.lang.Object) properties36);
        java.lang.Object obj89 = properties2.setProperty("{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}", "tmlog");
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(objEnumeration5);
        org.junit.Assert.assertNull(obj12);
        org.junit.Assert.assertNull(obj20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(strSet22);
        org.junit.Assert.assertNotNull(objEnumeration23);
        org.junit.Assert.assertNotNull(strSet25);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertNotNull(properties35);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertNull(obj55);
        org.junit.Assert.assertNull(obj63);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertNotNull(objEnumeration65);
        org.junit.Assert.assertNull(obj72);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + true + "'", boolean77 == true);
        org.junit.Assert.assertEquals("'" + obj83 + "' != '" + (byte) 0 + "'", obj83, (byte) 0);
        org.junit.Assert.assertNotNull(strSet84);
        org.junit.Assert.assertNull(obj85);
        org.junit.Assert.assertNull(obj86);
        org.junit.Assert.assertNull(obj89);
    }

    @Test
    public void test1866() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1866");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setThreadedTwoPhaseCommit(true);
        atomikosProperties0.setMaxActives((int) '#');
        atomikosProperties0.setForceShutdownOnVmExit(true);
        java.lang.String str7 = atomikosProperties0.getLogBaseDir();
        java.util.Properties properties8 = atomikosProperties0.asProperties();
        java.util.Collection<java.lang.Object> objCollection9 = properties8.values();
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNotNull(properties8);
        org.junit.Assert.assertNotNull(objCollection9);
    }

    @Test
    public void test1867() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1867");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setDefaultJtaTimeout((long) (byte) 10);
        atomikosProperties0.setCheckpointInterval((long) (byte) 0);
        atomikosProperties0.setTransactionManagerUniqueName("");
        boolean boolean7 = atomikosProperties0.isEnableLogging();
        atomikosProperties0.setLogBaseDir("hi!");
        atomikosProperties0.setForceShutdownOnVmExit(false);
        java.util.Properties properties12 = atomikosProperties0.asProperties();
        java.lang.Object obj15 = properties12.setProperty("{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}", "hi!");
        java.io.OutputStream outputStream16 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties12.save(outputStream16, "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=0, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.tm_unique_name=, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(properties12);
        org.junit.Assert.assertNull(obj15);
    }

    @Test
    public void test1868() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1868");
        java.util.Properties properties0 = new java.util.Properties();
        java.util.Enumeration<?> wildcardEnumeration1 = properties0.propertyNames();
        java.util.Properties properties3 = null;
        java.util.Properties properties4 = new java.util.Properties(properties3);
        java.util.Properties properties5 = new java.util.Properties(properties3);
        java.util.Properties properties6 = null;
        java.util.Properties properties7 = new java.util.Properties(properties6);
        java.lang.Object obj9 = properties5.put((java.lang.Object) properties7, (java.lang.Object) (short) 1);
        java.util.Properties properties10 = new java.util.Properties(properties7);
        java.util.Enumeration<java.lang.Object> objEnumeration11 = properties10.elements();
        java.lang.Object obj12 = properties0.put((java.lang.Object) (-1.0f), (java.lang.Object) objEnumeration11);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties13 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties13.setDefaultJtaTimeout((long) (byte) 10);
        atomikosProperties13.setCheckpointInterval((long) (byte) 0);
        atomikosProperties13.setTransactionManagerUniqueName("");
        boolean boolean20 = atomikosProperties13.isEnableLogging();
        java.util.Properties properties21 = atomikosProperties13.asProperties();
        java.util.Enumeration<java.lang.Object> objEnumeration22 = properties21.keys();
        boolean boolean23 = properties0.contains((java.lang.Object) objEnumeration22);
        java.util.Properties properties24 = new java.util.Properties(properties0);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties25 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties25.setThreadedTwoPhaseCommit(true);
        atomikosProperties25.setMaxActives((int) '#');
        atomikosProperties25.setForceShutdownOnVmExit(true);
        java.lang.String str32 = atomikosProperties25.getLogBaseDir();
        java.util.Properties properties33 = atomikosProperties25.asProperties();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties34 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        boolean boolean35 = atomikosProperties34.isSerialJtaTransactions();
        boolean boolean36 = properties33.equals((java.lang.Object) atomikosProperties34);
        boolean boolean37 = properties0.equals((java.lang.Object) properties33);
        java.io.PrintWriter printWriter38 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties33.list(printWriter38);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardEnumeration1);
        org.junit.Assert.assertNull(obj9);
        org.junit.Assert.assertNotNull(objEnumeration11);
        org.junit.Assert.assertNull(obj12);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNotNull(properties21);
        org.junit.Assert.assertNotNull(objEnumeration22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNull(str32);
        org.junit.Assert.assertNotNull(properties33);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
    }

    @Test
    public void test1869() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1869");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Properties properties2 = new java.util.Properties(properties0);
        boolean boolean4 = properties2.containsValue((java.lang.Object) (short) 100);
        java.lang.Object obj5 = properties2.clone();
        java.util.Enumeration<?> wildcardEnumeration6 = properties2.propertyNames();
        int int7 = properties2.size();
        java.util.Properties properties8 = null;
        java.util.Properties properties9 = new java.util.Properties(properties8);
        java.util.Properties properties10 = new java.util.Properties(properties8);
        java.util.Properties properties11 = null;
        java.util.Properties properties12 = new java.util.Properties(properties11);
        java.lang.Object obj14 = properties10.put((java.lang.Object) properties12, (java.lang.Object) (short) 1);
        java.util.Enumeration<java.lang.Object> objEnumeration15 = properties12.elements();
        java.util.Properties properties16 = new java.util.Properties(properties12);
        java.util.Properties properties17 = new java.util.Properties(properties16);
        java.util.Enumeration<java.lang.Object> objEnumeration18 = properties16.elements();
        boolean boolean19 = properties2.containsValue((java.lang.Object) objEnumeration18);
        java.lang.String str20 = properties2.toString();
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(obj5);
        org.junit.Assert.assertEquals(obj5.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj5), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj5), "{}");
        org.junit.Assert.assertNotNull(wildcardEnumeration6);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertNull(obj14);
        org.junit.Assert.assertNotNull(objEnumeration15);
        org.junit.Assert.assertNotNull(objEnumeration18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "{}" + "'", str20, "{}");
    }

    @Test
    public void test1870() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1870");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setDefaultJtaTimeout((long) (byte) 10);
        long long3 = atomikosProperties0.getDefaultJtaTimeout();
        atomikosProperties0.setTransactionManagerUniqueName("hi!");
        atomikosProperties0.setLogBaseName("tmlog");
        boolean boolean8 = atomikosProperties0.isSerialJtaTransactions();
        java.util.Properties properties9 = atomikosProperties0.asProperties();
        atomikosProperties0.setEnableLogging(false);
        java.util.Properties properties12 = atomikosProperties0.asProperties();
        atomikosProperties0.setLogBaseName("{tmlog={com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=0, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.tm_unique_name=, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}, 4=true}");
        org.junit.Assert.assertTrue("'" + long3 + "' != '" + 10L + "'", long3 == 10L);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(properties9);
        org.junit.Assert.assertNotNull(properties12);
    }

    @Test
    public void test1871() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1871");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Properties properties2 = new java.util.Properties(properties0);
        java.util.Properties properties3 = null;
        java.util.Properties properties4 = new java.util.Properties(properties3);
        java.lang.Object obj6 = properties2.put((java.lang.Object) properties4, (java.lang.Object) (short) 1);
        boolean boolean7 = properties2.isEmpty();
        java.util.Properties properties8 = null;
        java.util.Properties properties9 = new java.util.Properties(properties8);
        java.util.Properties properties10 = new java.util.Properties(properties8);
        boolean boolean11 = properties2.containsKey((java.lang.Object) properties10);
        java.util.Properties properties12 = new java.util.Properties(properties10);
        java.util.Properties properties13 = null;
        java.util.Properties properties14 = new java.util.Properties(properties13);
        java.util.Properties properties15 = new java.util.Properties(properties13);
        java.util.Properties properties16 = null;
        java.util.Properties properties17 = new java.util.Properties(properties16);
        java.lang.Object obj19 = properties15.put((java.lang.Object) properties17, (java.lang.Object) (short) 1);
        boolean boolean20 = properties15.isEmpty();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties21 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties21.setDefaultJtaTimeout((long) (byte) 10);
        atomikosProperties21.setCheckpointInterval((long) (byte) 0);
        atomikosProperties21.setTransactionManagerUniqueName("");
        java.util.Properties properties28 = atomikosProperties21.asProperties();
        java.lang.Object obj29 = properties15.remove((java.lang.Object) properties28);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties30 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties30.setDefaultJtaTimeout((long) (byte) 10);
        atomikosProperties30.setCheckpointInterval((long) (byte) 0);
        atomikosProperties30.setTransactionManagerUniqueName("");
        java.lang.Object obj37 = properties28.remove((java.lang.Object) atomikosProperties30);
        java.util.Enumeration<java.lang.Object> objEnumeration38 = properties28.elements();
        java.lang.Object obj39 = properties12.get((java.lang.Object) properties28);
        java.util.Enumeration<java.lang.Object> objEnumeration40 = properties12.keys();
        java.io.OutputStream outputStream41 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties12.storeToXML(outputStream41, "{=}");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(obj6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNull(obj19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(properties28);
        org.junit.Assert.assertNull(obj29);
        org.junit.Assert.assertNull(obj37);
        org.junit.Assert.assertNotNull(objEnumeration38);
        org.junit.Assert.assertNull(obj39);
        org.junit.Assert.assertNotNull(objEnumeration40);
    }

    @Test
    public void test1872() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1872");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Properties properties2 = new java.util.Properties(properties0);
        java.util.Properties properties3 = null;
        java.util.Properties properties4 = new java.util.Properties(properties3);
        java.lang.Object obj6 = properties2.put((java.lang.Object) properties4, (java.lang.Object) (short) 1);
        properties4.clear();
        int int8 = properties4.size();
        java.util.Properties properties9 = new java.util.Properties(properties4);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties10 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        int int11 = atomikosProperties10.getMaxActives();
        long long12 = atomikosProperties10.getMaxTimeout();
        java.util.Properties properties13 = atomikosProperties10.asProperties();
        java.util.Properties properties14 = atomikosProperties10.asProperties();
        java.util.Properties properties15 = null;
        java.util.Properties properties16 = new java.util.Properties(properties15);
        java.util.Properties properties17 = new java.util.Properties(properties15);
        java.util.Properties properties18 = null;
        java.util.Properties properties19 = new java.util.Properties(properties18);
        java.lang.Object obj21 = properties17.put((java.lang.Object) properties19, (java.lang.Object) (short) 1);
        java.util.Enumeration<java.lang.Object> objEnumeration22 = properties19.elements();
        java.lang.Object obj23 = properties4.replace((java.lang.Object) atomikosProperties10, (java.lang.Object) properties19);
        java.util.Set<java.lang.String> strSet24 = properties4.stringPropertyNames();
        properties4.clear();
        java.util.Properties properties26 = new java.util.Properties(properties4);
        java.lang.String str27 = properties4.toString();
        java.util.Properties properties28 = null;
        java.util.Properties properties29 = new java.util.Properties(properties28);
        java.util.Properties properties30 = new java.util.Properties(properties28);
        java.util.Properties properties31 = null;
        java.util.Properties properties32 = new java.util.Properties(properties31);
        java.lang.Object obj34 = properties30.put((java.lang.Object) properties32, (java.lang.Object) (short) 1);
        boolean boolean35 = properties30.isEmpty();
        java.util.Properties properties36 = null;
        java.util.Properties properties37 = new java.util.Properties(properties36);
        java.util.Properties properties38 = new java.util.Properties(properties36);
        boolean boolean39 = properties30.containsKey((java.lang.Object) properties38);
        java.util.Properties properties40 = new java.util.Properties(properties38);
        boolean boolean41 = properties4.containsKey((java.lang.Object) properties38);
        java.lang.Object obj42 = properties4.clone();
        java.io.Writer writer43 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties4.store(writer43, "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=0, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(obj6);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 50 + "'", int11 == 50);
        org.junit.Assert.assertTrue("'" + long12 + "' != '" + 300000L + "'", long12 == 300000L);
        org.junit.Assert.assertNotNull(properties13);
        org.junit.Assert.assertNotNull(properties14);
        org.junit.Assert.assertNull(obj21);
        org.junit.Assert.assertNotNull(objEnumeration22);
        org.junit.Assert.assertNull(obj23);
        org.junit.Assert.assertNotNull(strSet24);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "{}" + "'", str27, "{}");
        org.junit.Assert.assertNull(obj34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(obj42);
        org.junit.Assert.assertEquals(obj42.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj42), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj42), "{}");
    }

    @Test
    public void test1873() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1873");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Properties properties2 = new java.util.Properties(properties0);
        java.util.Properties properties3 = null;
        java.util.Properties properties4 = new java.util.Properties(properties3);
        java.lang.Object obj6 = properties2.put((java.lang.Object) properties4, (java.lang.Object) (short) 1);
        java.util.Properties properties8 = null;
        java.util.Properties properties9 = new java.util.Properties(properties8);
        java.util.Properties properties10 = new java.util.Properties(properties8);
        java.util.Properties properties11 = null;
        java.util.Properties properties12 = new java.util.Properties(properties11);
        java.lang.Object obj14 = properties10.put((java.lang.Object) properties12, (java.lang.Object) (short) 1);
        boolean boolean15 = properties4.remove((java.lang.Object) false, (java.lang.Object) (short) 1);
        java.util.Set<java.lang.String> strSet16 = properties4.stringPropertyNames();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties17 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties17.setDefaultJtaTimeout((long) (byte) 10);
        long long20 = atomikosProperties17.getDefaultJtaTimeout();
        java.lang.Object obj21 = properties4.get((java.lang.Object) atomikosProperties17);
        atomikosProperties17.setCheckpointInterval((long) (short) 100);
        java.util.Properties properties24 = atomikosProperties17.asProperties();
        java.util.Collection<java.lang.Object> objCollection25 = properties24.values();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet26 = properties24.entrySet();
        java.io.InputStream inputStream27 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties24.loadFromXML(inputStream27);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(obj6);
        org.junit.Assert.assertNull(obj14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(strSet16);
        org.junit.Assert.assertTrue("'" + long20 + "' != '" + 10L + "'", long20 == 10L);
        org.junit.Assert.assertNull(obj21);
        org.junit.Assert.assertNotNull(properties24);
        org.junit.Assert.assertNotNull(objCollection25);
        org.junit.Assert.assertNotNull(objEntrySet26);
    }

    @Test
    public void test1874() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1874");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setThreadedTwoPhaseCommit(true);
        atomikosProperties0.setMaxActives((int) '#');
        atomikosProperties0.setForceShutdownOnVmExit(true);
        java.lang.String str7 = atomikosProperties0.getLogBaseDir();
        java.util.Properties properties8 = atomikosProperties0.asProperties();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties9 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        boolean boolean10 = atomikosProperties9.isSerialJtaTransactions();
        boolean boolean11 = properties8.equals((java.lang.Object) atomikosProperties9);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties12 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties12.setDefaultJtaTimeout((long) (byte) 10);
        long long15 = atomikosProperties12.getDefaultJtaTimeout();
        atomikosProperties12.setSerialJtaTransactions(true);
        java.util.Properties properties18 = atomikosProperties12.asProperties();
        java.util.Properties properties19 = atomikosProperties12.asProperties();
        boolean boolean20 = properties8.contains((java.lang.Object) properties19);
        java.lang.Object obj23 = properties19.setProperty("{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.tm_unique_name=, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}", "");
        java.io.OutputStream outputStream24 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties19.storeToXML(outputStream24, "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=100, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=true, com.atomikos.icatch.tm_unique_name=, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name={com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.tm_unique_name=, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}}", "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNotNull(properties8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + long15 + "' != '" + 10L + "'", long15 == 10L);
        org.junit.Assert.assertNotNull(properties18);
        org.junit.Assert.assertNotNull(properties19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNull(obj23);
    }

    @Test
    public void test1875() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1875");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Properties properties2 = new java.util.Properties(properties0);
        java.util.Properties properties3 = null;
        java.util.Properties properties4 = new java.util.Properties(properties3);
        java.lang.Object obj6 = properties2.put((java.lang.Object) properties4, (java.lang.Object) (short) 1);
        java.util.Properties properties8 = null;
        java.util.Properties properties9 = new java.util.Properties(properties8);
        java.util.Properties properties10 = new java.util.Properties(properties8);
        java.util.Properties properties11 = null;
        java.util.Properties properties12 = new java.util.Properties(properties11);
        java.lang.Object obj14 = properties10.put((java.lang.Object) properties12, (java.lang.Object) (short) 1);
        boolean boolean15 = properties4.remove((java.lang.Object) false, (java.lang.Object) (short) 1);
        java.util.Enumeration<java.lang.Object> objEnumeration16 = properties4.keys();
        java.util.Properties properties17 = null;
        java.util.Properties properties18 = new java.util.Properties(properties17);
        java.util.Properties properties19 = new java.util.Properties(properties17);
        java.util.Properties properties20 = null;
        java.util.Properties properties21 = new java.util.Properties(properties20);
        java.lang.Object obj23 = properties19.put((java.lang.Object) properties21, (java.lang.Object) (short) 1);
        boolean boolean24 = properties19.isEmpty();
        java.util.Properties properties25 = null;
        java.util.Properties properties26 = new java.util.Properties(properties25);
        java.util.Properties properties27 = new java.util.Properties(properties25);
        boolean boolean28 = properties19.containsKey((java.lang.Object) properties27);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties29 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties29.setThreadedTwoPhaseCommit(true);
        atomikosProperties29.setMaxActives((int) (byte) 0);
        java.lang.Object obj34 = properties4.getOrDefault((java.lang.Object) boolean28, (java.lang.Object) (byte) 0);
        java.util.Properties properties35 = null;
        java.util.Properties properties36 = new java.util.Properties(properties35);
        java.util.Properties properties37 = new java.util.Properties(properties35);
        java.util.Properties properties38 = null;
        java.util.Properties properties39 = new java.util.Properties(properties38);
        java.lang.Object obj41 = properties37.put((java.lang.Object) properties39, (java.lang.Object) (short) 1);
        java.util.Properties properties43 = null;
        java.util.Properties properties44 = new java.util.Properties(properties43);
        java.util.Properties properties45 = new java.util.Properties(properties43);
        java.util.Properties properties46 = null;
        java.util.Properties properties47 = new java.util.Properties(properties46);
        java.lang.Object obj49 = properties45.put((java.lang.Object) properties47, (java.lang.Object) (short) 1);
        boolean boolean50 = properties39.remove((java.lang.Object) false, (java.lang.Object) (short) 1);
        java.util.Enumeration<java.lang.Object> objEnumeration51 = properties39.keys();
        java.util.Properties properties52 = null;
        java.util.Properties properties53 = new java.util.Properties(properties52);
        java.util.Properties properties54 = new java.util.Properties(properties52);
        java.util.Properties properties55 = null;
        java.util.Properties properties56 = new java.util.Properties(properties55);
        java.lang.Object obj58 = properties54.put((java.lang.Object) properties56, (java.lang.Object) (short) 1);
        boolean boolean59 = properties54.isEmpty();
        java.util.Properties properties60 = null;
        java.util.Properties properties61 = new java.util.Properties(properties60);
        java.util.Properties properties62 = new java.util.Properties(properties60);
        boolean boolean63 = properties54.containsKey((java.lang.Object) properties62);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties64 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties64.setThreadedTwoPhaseCommit(true);
        atomikosProperties64.setMaxActives((int) (byte) 0);
        java.lang.Object obj69 = properties39.getOrDefault((java.lang.Object) boolean63, (java.lang.Object) (byte) 0);
        boolean boolean70 = properties4.equals((java.lang.Object) (byte) 0);
        java.util.Properties properties71 = null;
        java.util.Properties properties72 = new java.util.Properties(properties71);
        java.util.Properties properties73 = new java.util.Properties(properties71);
        java.util.Properties properties74 = null;
        java.util.Properties properties75 = new java.util.Properties(properties74);
        java.lang.Object obj77 = properties73.put((java.lang.Object) properties75, (java.lang.Object) (short) 1);
        properties75.clear();
        int int79 = properties75.size();
        java.lang.Object obj82 = properties75.setProperty("hi!", "hi!");
        java.lang.Object obj85 = properties75.setProperty("tmlog", "tmlog");
        java.util.Enumeration<java.lang.Object> objEnumeration86 = properties75.elements();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties87 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties87.setDefaultJtaTimeout((long) (byte) 10);
        atomikosProperties87.setSerialJtaTransactions(false);
        java.lang.Object obj92 = properties4.putIfAbsent((java.lang.Object) objEnumeration86, (java.lang.Object) false);
        int int93 = properties4.size();
        java.lang.Object obj94 = properties4.clone();
        java.util.Properties properties95 = new java.util.Properties(properties4);
        java.util.Set<java.lang.String> strSet96 = properties95.stringPropertyNames();
        java.lang.Object obj97 = properties95.clone();
        java.io.PrintStream printStream98 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties95.list(printStream98);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(obj6);
        org.junit.Assert.assertNull(obj14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(objEnumeration16);
        org.junit.Assert.assertNull(obj23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertEquals("'" + obj34 + "' != '" + (byte) 0 + "'", obj34, (byte) 0);
        org.junit.Assert.assertNull(obj41);
        org.junit.Assert.assertNull(obj49);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertNotNull(objEnumeration51);
        org.junit.Assert.assertNull(obj58);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertEquals("'" + obj69 + "' != '" + (byte) 0 + "'", obj69, (byte) 0);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertNull(obj77);
        org.junit.Assert.assertTrue("'" + int79 + "' != '" + 0 + "'", int79 == 0);
        org.junit.Assert.assertNull(obj82);
        org.junit.Assert.assertNull(obj85);
        org.junit.Assert.assertNotNull(objEnumeration86);
        org.junit.Assert.assertNull(obj92);
        org.junit.Assert.assertTrue("'" + int93 + "' != '" + 1 + "'", int93 == 1);
        org.junit.Assert.assertNotNull(obj94);
        org.junit.Assert.assertNotNull(strSet96);
        org.junit.Assert.assertNotNull(obj97);
        org.junit.Assert.assertEquals(obj97.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj97), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj97), "{}");
    }

    @Test
    public void test1876() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1876");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setDefaultJtaTimeout((long) (byte) 10);
        atomikosProperties0.setCheckpointInterval((long) (byte) 0);
        atomikosProperties0.setEnableLogging(true);
        atomikosProperties0.setService("");
        atomikosProperties0.setTransactionManagerUniqueName("{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.tm_unique_name=, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
        java.lang.String str11 = atomikosProperties0.getService();
        java.lang.String str12 = atomikosProperties0.getTransactionManagerUniqueName();
        atomikosProperties0.setCheckpointInterval((long) (-1));
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.tm_unique_name=, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}" + "'", str12, "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.tm_unique_name=, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
    }

    @Test
    public void test1877() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1877");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Properties properties2 = new java.util.Properties(properties0);
        java.util.Properties properties3 = null;
        java.util.Properties properties4 = new java.util.Properties(properties3);
        java.lang.Object obj6 = properties2.put((java.lang.Object) properties4, (java.lang.Object) (short) 1);
        java.util.Properties properties8 = null;
        java.util.Properties properties9 = new java.util.Properties(properties8);
        java.util.Properties properties10 = new java.util.Properties(properties8);
        java.util.Properties properties11 = null;
        java.util.Properties properties12 = new java.util.Properties(properties11);
        java.lang.Object obj14 = properties10.put((java.lang.Object) properties12, (java.lang.Object) (short) 1);
        boolean boolean15 = properties4.remove((java.lang.Object) false, (java.lang.Object) (short) 1);
        java.util.Set<java.lang.String> strSet16 = properties4.stringPropertyNames();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties17 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties17.setDefaultJtaTimeout((long) (byte) 10);
        long long20 = atomikosProperties17.getDefaultJtaTimeout();
        java.lang.Object obj21 = properties4.get((java.lang.Object) atomikosProperties17);
        int int22 = properties4.size();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties23 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties23.setDefaultJtaTimeout((long) (byte) 10);
        atomikosProperties23.setCheckpointInterval((long) (byte) 0);
        atomikosProperties23.setTransactionManagerUniqueName("");
        java.util.Properties properties30 = atomikosProperties23.asProperties();
        java.lang.String str31 = atomikosProperties23.getTransactionManagerUniqueName();
        atomikosProperties23.setDefaultJtaTimeout((long) (-1));
        java.lang.String str34 = atomikosProperties23.getService();
        atomikosProperties23.setLogBaseDir("{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.tm_unique_name=, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
        boolean boolean37 = atomikosProperties23.isSerialJtaTransactions();
        atomikosProperties23.setThreadedTwoPhaseCommit(true);
        java.lang.Object obj40 = properties4.get((java.lang.Object) atomikosProperties23);
        atomikosProperties23.setThreadedTwoPhaseCommit(false);
        java.lang.Class<?> wildcardClass43 = atomikosProperties23.getClass();
        org.junit.Assert.assertNull(obj6);
        org.junit.Assert.assertNull(obj14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(strSet16);
        org.junit.Assert.assertTrue("'" + long20 + "' != '" + 10L + "'", long20 == 10L);
        org.junit.Assert.assertNull(obj21);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 0 + "'", int22 == 0);
        org.junit.Assert.assertNotNull(properties30);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "" + "'", str31, "");
        org.junit.Assert.assertNull(str34);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertNull(obj40);
        org.junit.Assert.assertNotNull(wildcardClass43);
    }

    @Test
    public void test1878() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1878");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        int int1 = atomikosProperties0.getMaxActives();
        long long2 = atomikosProperties0.getMaxTimeout();
        java.util.Properties properties3 = atomikosProperties0.asProperties();
        java.util.Properties properties4 = atomikosProperties0.asProperties();
        java.lang.Object obj7 = properties4.setProperty("", "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=true, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=true, com.atomikos.icatch.max_actives=35, com.atomikos.icatch.log_base_name=tmlog}");
        java.io.InputStream inputStream8 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties4.load(inputStream8);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 50 + "'", int1 == 50);
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + 300000L + "'", long2 == 300000L);
        org.junit.Assert.assertNotNull(properties3);
        org.junit.Assert.assertNotNull(properties4);
        org.junit.Assert.assertNull(obj7);
    }

    @Test
    public void test1879() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1879");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Properties properties2 = new java.util.Properties(properties0);
        java.util.Properties properties3 = null;
        java.util.Properties properties4 = new java.util.Properties(properties3);
        java.lang.Object obj6 = properties2.put((java.lang.Object) properties4, (java.lang.Object) (short) 1);
        properties4.clear();
        int int8 = properties4.size();
        java.util.Properties properties9 = new java.util.Properties(properties4);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties10 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        int int11 = atomikosProperties10.getMaxActives();
        long long12 = atomikosProperties10.getMaxTimeout();
        java.util.Properties properties13 = atomikosProperties10.asProperties();
        java.util.Properties properties14 = atomikosProperties10.asProperties();
        java.util.Properties properties15 = null;
        java.util.Properties properties16 = new java.util.Properties(properties15);
        java.util.Properties properties17 = new java.util.Properties(properties15);
        java.util.Properties properties18 = null;
        java.util.Properties properties19 = new java.util.Properties(properties18);
        java.lang.Object obj21 = properties17.put((java.lang.Object) properties19, (java.lang.Object) (short) 1);
        java.util.Enumeration<java.lang.Object> objEnumeration22 = properties19.elements();
        java.lang.Object obj23 = properties4.replace((java.lang.Object) atomikosProperties10, (java.lang.Object) properties19);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties25 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties25.setThreadedTwoPhaseCommit(true);
        java.lang.String str28 = atomikosProperties25.getService();
        boolean boolean29 = atomikosProperties25.isSerialJtaTransactions();
        java.lang.Object obj30 = properties19.getOrDefault((java.lang.Object) "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.tm_unique_name=, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}", (java.lang.Object) atomikosProperties25);
        java.lang.Class<?> wildcardClass31 = properties19.getClass();
        org.junit.Assert.assertNull(obj6);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 50 + "'", int11 == 50);
        org.junit.Assert.assertTrue("'" + long12 + "' != '" + 300000L + "'", long12 == 300000L);
        org.junit.Assert.assertNotNull(properties13);
        org.junit.Assert.assertNotNull(properties14);
        org.junit.Assert.assertNull(obj21);
        org.junit.Assert.assertNotNull(objEnumeration22);
        org.junit.Assert.assertNull(obj23);
        org.junit.Assert.assertNull(str28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNotNull(obj30);
        org.junit.Assert.assertNotNull(wildcardClass31);
    }

    @Test
    public void test1880() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1880");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Properties properties2 = new java.util.Properties(properties0);
        java.util.Properties properties3 = null;
        java.util.Properties properties4 = new java.util.Properties(properties3);
        java.lang.Object obj6 = properties2.put((java.lang.Object) properties4, (java.lang.Object) (short) 1);
        java.util.Properties properties8 = null;
        java.util.Properties properties9 = new java.util.Properties(properties8);
        java.util.Properties properties10 = new java.util.Properties(properties8);
        java.util.Properties properties11 = null;
        java.util.Properties properties12 = new java.util.Properties(properties11);
        java.lang.Object obj14 = properties10.put((java.lang.Object) properties12, (java.lang.Object) (short) 1);
        boolean boolean15 = properties4.remove((java.lang.Object) false, (java.lang.Object) (short) 1);
        java.util.Properties properties16 = new java.util.Properties(properties4);
        int int17 = properties16.size();
        java.util.Properties properties18 = null;
        java.util.Properties properties19 = new java.util.Properties(properties18);
        java.util.Properties properties20 = new java.util.Properties(properties18);
        java.util.Properties properties21 = null;
        java.util.Properties properties22 = new java.util.Properties(properties21);
        java.lang.Object obj24 = properties20.put((java.lang.Object) properties22, (java.lang.Object) (short) 1);
        properties22.clear();
        java.lang.String str27 = properties22.getProperty("");
        java.util.Properties properties28 = null;
        java.util.Properties properties29 = new java.util.Properties(properties28);
        java.util.Properties properties30 = new java.util.Properties(properties28);
        java.util.Properties properties31 = null;
        java.util.Properties properties32 = new java.util.Properties(properties31);
        java.lang.Object obj34 = properties30.put((java.lang.Object) properties32, (java.lang.Object) (short) 1);
        properties22.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties30);
        java.lang.Object obj36 = properties16.remove((java.lang.Object) properties22);
        java.util.Set<java.lang.Object> objSet37 = properties16.keySet();
        org.junit.Assert.assertNull(obj6);
        org.junit.Assert.assertNull(obj14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 0 + "'", int17 == 0);
        org.junit.Assert.assertNull(obj24);
        org.junit.Assert.assertNull(str27);
        org.junit.Assert.assertNull(obj34);
        org.junit.Assert.assertNull(obj36);
        org.junit.Assert.assertNotNull(objSet37);
    }

    @Test
    public void test1881() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1881");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Properties properties2 = new java.util.Properties(properties0);
        java.util.Properties properties3 = null;
        java.util.Properties properties4 = new java.util.Properties(properties3);
        java.lang.Object obj6 = properties2.put((java.lang.Object) properties4, (java.lang.Object) (short) 1);
        properties4.clear();
        int int8 = properties4.size();
        java.util.Properties properties9 = null;
        java.util.Properties properties10 = new java.util.Properties(properties9);
        java.util.Properties properties11 = new java.util.Properties(properties9);
        java.util.Properties properties12 = null;
        java.util.Properties properties13 = new java.util.Properties(properties12);
        java.lang.Object obj15 = properties11.put((java.lang.Object) properties13, (java.lang.Object) (short) 1);
        java.util.Properties properties16 = new java.util.Properties(properties13);
        java.util.Properties properties17 = new java.util.Properties(properties13);
        boolean boolean19 = properties4.remove((java.lang.Object) properties13, (java.lang.Object) 10.0f);
        java.util.Enumeration<java.lang.Object> objEnumeration20 = properties13.elements();
        java.util.Enumeration<java.lang.Object> objEnumeration21 = properties13.elements();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties22 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties22.setThreadedTwoPhaseCommit(true);
        atomikosProperties22.setMaxActives((int) (byte) 0);
        atomikosProperties22.setEnableLogging(true);
        atomikosProperties22.setForceShutdownOnVmExit(false);
        boolean boolean31 = properties13.equals((java.lang.Object) false);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties32 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        int int33 = atomikosProperties32.getMaxActives();
        java.util.Properties properties34 = atomikosProperties32.asProperties();
        java.util.Enumeration<java.lang.Object> objEnumeration35 = properties34.keys();
        java.util.Properties properties36 = null;
        java.util.Properties properties37 = new java.util.Properties(properties36);
        java.util.Properties properties38 = new java.util.Properties(properties36);
        java.util.Properties properties39 = null;
        java.util.Properties properties40 = new java.util.Properties(properties39);
        java.lang.Object obj42 = properties38.put((java.lang.Object) properties40, (java.lang.Object) (short) 1);
        properties40.clear();
        java.lang.String str45 = properties40.getProperty("");
        java.util.Properties properties46 = null;
        java.util.Properties properties47 = new java.util.Properties(properties46);
        java.util.Properties properties48 = new java.util.Properties(properties46);
        java.util.Properties properties49 = null;
        java.util.Properties properties50 = new java.util.Properties(properties49);
        java.lang.Object obj52 = properties48.put((java.lang.Object) properties50, (java.lang.Object) (short) 1);
        properties40.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties48);
        java.util.Enumeration<java.lang.Object> objEnumeration54 = properties40.keys();
        java.util.Enumeration<java.lang.Object> objEnumeration55 = properties40.elements();
        java.util.Properties properties56 = null;
        java.util.Properties properties57 = new java.util.Properties(properties56);
        java.util.Properties properties58 = new java.util.Properties(properties56);
        java.util.Properties properties59 = null;
        java.util.Properties properties60 = new java.util.Properties(properties59);
        java.lang.Object obj62 = properties58.put((java.lang.Object) properties60, (java.lang.Object) (short) 1);
        java.util.Properties properties64 = null;
        java.util.Properties properties65 = new java.util.Properties(properties64);
        java.util.Properties properties66 = new java.util.Properties(properties64);
        java.util.Properties properties67 = null;
        java.util.Properties properties68 = new java.util.Properties(properties67);
        java.lang.Object obj70 = properties66.put((java.lang.Object) properties68, (java.lang.Object) (short) 1);
        boolean boolean71 = properties60.remove((java.lang.Object) false, (java.lang.Object) (short) 1);
        java.util.Enumeration<java.lang.Object> objEnumeration72 = properties60.keys();
        java.util.Properties properties73 = null;
        java.util.Properties properties74 = new java.util.Properties(properties73);
        java.util.Properties properties75 = new java.util.Properties(properties73);
        java.util.Properties properties76 = null;
        java.util.Properties properties77 = new java.util.Properties(properties76);
        java.lang.Object obj79 = properties75.put((java.lang.Object) properties77, (java.lang.Object) (short) 1);
        boolean boolean80 = properties75.isEmpty();
        java.util.Properties properties81 = null;
        java.util.Properties properties82 = new java.util.Properties(properties81);
        java.util.Properties properties83 = new java.util.Properties(properties81);
        boolean boolean84 = properties75.containsKey((java.lang.Object) properties83);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties85 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties85.setThreadedTwoPhaseCommit(true);
        atomikosProperties85.setMaxActives((int) (byte) 0);
        java.lang.Object obj90 = properties60.getOrDefault((java.lang.Object) boolean84, (java.lang.Object) (byte) 0);
        boolean boolean91 = properties60.isEmpty();
        java.lang.Object obj92 = properties40.remove((java.lang.Object) properties60);
        boolean boolean93 = properties13.remove((java.lang.Object) properties34, (java.lang.Object) properties40);
        java.lang.Class<?> wildcardClass94 = properties34.getClass();
        org.junit.Assert.assertNull(obj6);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertNull(obj15);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(objEnumeration20);
        org.junit.Assert.assertNotNull(objEnumeration21);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 50 + "'", int33 == 50);
        org.junit.Assert.assertNotNull(properties34);
        org.junit.Assert.assertNotNull(objEnumeration35);
        org.junit.Assert.assertNull(obj42);
        org.junit.Assert.assertNull(str45);
        org.junit.Assert.assertNull(obj52);
        org.junit.Assert.assertNotNull(objEnumeration54);
        org.junit.Assert.assertNotNull(objEnumeration55);
        org.junit.Assert.assertNull(obj62);
        org.junit.Assert.assertNull(obj70);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertNotNull(objEnumeration72);
        org.junit.Assert.assertNull(obj79);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", boolean80 == false);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + true + "'", boolean84 == true);
        org.junit.Assert.assertEquals("'" + obj90 + "' != '" + (byte) 0 + "'", obj90, (byte) 0);
        org.junit.Assert.assertTrue("'" + boolean91 + "' != '" + true + "'", boolean91 == true);
        org.junit.Assert.assertEquals("'" + obj92 + "' != '" + (short) 1 + "'", obj92, (short) 1);
        org.junit.Assert.assertTrue("'" + boolean93 + "' != '" + false + "'", boolean93 == false);
        org.junit.Assert.assertNotNull(wildcardClass94);
    }

    @Test
    public void test1882() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1882");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        int int1 = atomikosProperties0.getMaxActives();
        long long2 = atomikosProperties0.getMaxTimeout();
        java.util.Properties properties3 = atomikosProperties0.asProperties();
        java.util.Properties properties4 = atomikosProperties0.asProperties();
        long long5 = atomikosProperties0.getMaxTimeout();
        java.util.Properties properties6 = atomikosProperties0.asProperties();
        java.util.Set<java.lang.Object> objSet7 = properties6.keySet();
        java.io.OutputStream outputStream8 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties6.store(outputStream8, "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.tm_unique_name=hi!, {com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=0, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.tm_unique_name=, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}=hi!, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 50 + "'", int1 == 50);
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + 300000L + "'", long2 == 300000L);
        org.junit.Assert.assertNotNull(properties3);
        org.junit.Assert.assertNotNull(properties4);
        org.junit.Assert.assertTrue("'" + long5 + "' != '" + 300000L + "'", long5 == 300000L);
        org.junit.Assert.assertNotNull(properties6);
        org.junit.Assert.assertNotNull(objSet7);
    }

    @Test
    public void test1883() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1883");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        boolean boolean1 = atomikosProperties0.isSerialJtaTransactions();
        boolean boolean2 = atomikosProperties0.isForceShutdownOnVmExit();
        java.util.Properties properties3 = atomikosProperties0.asProperties();
        atomikosProperties0.setService("{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=0, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(properties3);
    }

    @Test
    public void test1884() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1884");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Properties properties2 = new java.util.Properties(properties0);
        java.util.Properties properties3 = null;
        java.util.Properties properties4 = new java.util.Properties(properties3);
        java.lang.Object obj6 = properties2.put((java.lang.Object) properties4, (java.lang.Object) (short) 1);
        java.util.Properties properties8 = null;
        java.util.Properties properties9 = new java.util.Properties(properties8);
        java.util.Properties properties10 = new java.util.Properties(properties8);
        java.util.Properties properties11 = null;
        java.util.Properties properties12 = new java.util.Properties(properties11);
        java.lang.Object obj14 = properties10.put((java.lang.Object) properties12, (java.lang.Object) (short) 1);
        boolean boolean15 = properties4.remove((java.lang.Object) false, (java.lang.Object) (short) 1);
        java.util.Set<java.lang.String> strSet16 = properties4.stringPropertyNames();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties17 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties17.setDefaultJtaTimeout((long) (byte) 10);
        long long20 = atomikosProperties17.getDefaultJtaTimeout();
        java.lang.Object obj21 = properties4.get((java.lang.Object) atomikosProperties17);
        java.util.Properties properties22 = null;
        java.util.Properties properties23 = new java.util.Properties(properties22);
        java.util.Properties properties24 = new java.util.Properties(properties22);
        java.util.Properties properties25 = null;
        java.util.Properties properties26 = new java.util.Properties(properties25);
        java.lang.Object obj28 = properties24.put((java.lang.Object) properties26, (java.lang.Object) (short) 1);
        java.util.Properties properties30 = null;
        java.util.Properties properties31 = new java.util.Properties(properties30);
        java.util.Properties properties32 = new java.util.Properties(properties30);
        java.util.Properties properties33 = null;
        java.util.Properties properties34 = new java.util.Properties(properties33);
        java.lang.Object obj36 = properties32.put((java.lang.Object) properties34, (java.lang.Object) (short) 1);
        boolean boolean37 = properties26.remove((java.lang.Object) false, (java.lang.Object) (short) 1);
        java.lang.Object obj39 = properties26.remove((java.lang.Object) '#');
        java.util.Set<java.lang.Object> objSet40 = properties26.keySet();
        boolean boolean41 = properties4.containsKey((java.lang.Object) properties26);
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet42 = properties4.entrySet();
        java.util.Properties properties43 = null;
        java.util.Properties properties44 = new java.util.Properties(properties43);
        java.util.Properties properties45 = new java.util.Properties(properties43);
        java.util.Properties properties46 = null;
        java.util.Properties properties47 = new java.util.Properties(properties46);
        java.lang.Object obj49 = properties45.put((java.lang.Object) properties47, (java.lang.Object) (short) 1);
        boolean boolean50 = properties45.isEmpty();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties51 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties51.setDefaultJtaTimeout((long) (byte) 10);
        atomikosProperties51.setCheckpointInterval((long) (byte) 0);
        atomikosProperties51.setTransactionManagerUniqueName("");
        java.util.Properties properties58 = atomikosProperties51.asProperties();
        java.lang.Object obj59 = properties45.remove((java.lang.Object) properties58);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties60 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties60.setDefaultJtaTimeout((long) (byte) 10);
        atomikosProperties60.setCheckpointInterval((long) (byte) 0);
        atomikosProperties60.setTransactionManagerUniqueName("");
        java.util.Properties properties67 = atomikosProperties60.asProperties();
        java.lang.String str68 = atomikosProperties60.getTransactionManagerUniqueName();
        atomikosProperties60.setDefaultJtaTimeout((long) (-1));
        java.lang.String str71 = atomikosProperties60.getService();
        java.util.Properties properties72 = null;
        java.util.Properties properties73 = new java.util.Properties(properties72);
        java.util.Properties properties74 = new java.util.Properties(properties72);
        boolean boolean76 = properties74.containsValue((java.lang.Object) (short) 100);
        java.util.Properties properties77 = null;
        java.util.Properties properties78 = new java.util.Properties(properties77);
        java.util.Properties properties79 = new java.util.Properties(properties77);
        java.util.Properties properties80 = null;
        java.util.Properties properties81 = new java.util.Properties(properties80);
        java.lang.Object obj83 = properties79.put((java.lang.Object) properties81, (java.lang.Object) (short) 1);
        java.util.Enumeration<java.lang.Object> objEnumeration84 = properties81.elements();
        java.lang.Object obj85 = properties74.remove((java.lang.Object) properties81);
        boolean boolean86 = properties81.isEmpty();
        boolean boolean87 = properties4.replace((java.lang.Object) properties58, (java.lang.Object) atomikosProperties60, (java.lang.Object) boolean86);
        java.lang.String str88 = atomikosProperties60.getService();
        int int89 = atomikosProperties60.getMaxActives();
        long long90 = atomikosProperties60.getMaxTimeout();
        org.junit.Assert.assertNull(obj6);
        org.junit.Assert.assertNull(obj14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(strSet16);
        org.junit.Assert.assertTrue("'" + long20 + "' != '" + 10L + "'", long20 == 10L);
        org.junit.Assert.assertNull(obj21);
        org.junit.Assert.assertNull(obj28);
        org.junit.Assert.assertNull(obj36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNull(obj39);
        org.junit.Assert.assertNotNull(objSet40);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(objEntrySet42);
        org.junit.Assert.assertNull(obj49);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertNotNull(properties58);
        org.junit.Assert.assertNull(obj59);
        org.junit.Assert.assertNotNull(properties67);
        org.junit.Assert.assertEquals("'" + str68 + "' != '" + "" + "'", str68, "");
        org.junit.Assert.assertNull(str71);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
        org.junit.Assert.assertNull(obj83);
        org.junit.Assert.assertNotNull(objEnumeration84);
        org.junit.Assert.assertNull(obj85);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + true + "'", boolean86 == true);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + false + "'", boolean87 == false);
        org.junit.Assert.assertNull(str88);
        org.junit.Assert.assertTrue("'" + int89 + "' != '" + 50 + "'", int89 == 50);
        org.junit.Assert.assertTrue("'" + long90 + "' != '" + 300000L + "'", long90 == 300000L);
    }

    @Test
    public void test1885() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1885");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Properties properties2 = new java.util.Properties(properties0);
        java.util.Properties properties3 = null;
        java.util.Properties properties4 = new java.util.Properties(properties3);
        java.lang.Object obj6 = properties2.put((java.lang.Object) properties4, (java.lang.Object) (short) 1);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties7 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties7.setThreadedTwoPhaseCommit(true);
        atomikosProperties7.setMaxActives((int) (byte) 0);
        boolean boolean12 = properties2.containsValue((java.lang.Object) atomikosProperties7);
        java.lang.Object obj13 = properties2.clone();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties14 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties14.setThreadedTwoPhaseCommit(true);
        atomikosProperties14.setMaxActives((int) '#');
        atomikosProperties14.setForceShutdownOnVmExit(true);
        java.lang.String str21 = atomikosProperties14.getLogBaseDir();
        java.util.Properties properties22 = atomikosProperties14.asProperties();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties23 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties23.setDefaultJtaTimeout((long) (byte) 10);
        atomikosProperties23.setCheckpointInterval((long) (byte) 0);
        atomikosProperties23.setEnableLogging(true);
        long long30 = atomikosProperties23.getDefaultJtaTimeout();
        java.lang.Object obj31 = properties2.getOrDefault((java.lang.Object) atomikosProperties14, (java.lang.Object) atomikosProperties23);
        java.util.Properties properties32 = atomikosProperties23.asProperties();
        java.util.Properties properties33 = atomikosProperties23.asProperties();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties34 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties34.setThreadedTwoPhaseCommit(true);
        atomikosProperties34.setMaxActives((int) '#');
        atomikosProperties34.setForceShutdownOnVmExit(true);
        long long41 = atomikosProperties34.getCheckpointInterval();
        java.util.Properties properties42 = atomikosProperties34.asProperties();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties43 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties43.setDefaultJtaTimeout((long) (byte) 10);
        atomikosProperties43.setCheckpointInterval((long) (byte) 0);
        atomikosProperties43.setTransactionManagerUniqueName("");
        java.util.Properties properties50 = atomikosProperties43.asProperties();
        atomikosProperties43.setThreadedTwoPhaseCommit(false);
        atomikosProperties43.setMaxActives((int) (byte) 1);
        java.util.Properties properties55 = atomikosProperties43.asProperties();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet56 = properties55.entrySet();
        java.util.Properties properties57 = new java.util.Properties(properties55);
        java.util.Properties properties58 = new java.util.Properties(properties55);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties59 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties59.setDefaultJtaTimeout((long) (byte) 10);
        atomikosProperties59.setSerialJtaTransactions(false);
        atomikosProperties59.setService("{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.tm_unique_name=, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
        java.lang.String str66 = atomikosProperties59.getTransactionManagerUniqueName();
        java.util.Properties properties67 = atomikosProperties59.asProperties();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties68 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties68.setThreadedTwoPhaseCommit(true);
        atomikosProperties68.setMaxActives((int) '#');
        atomikosProperties68.setCheckpointInterval((long) 50);
        long long75 = atomikosProperties68.getCheckpointInterval();
        java.lang.Object obj76 = properties58.putIfAbsent((java.lang.Object) properties67, (java.lang.Object) atomikosProperties68);
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean77 = properties33.remove((java.lang.Object) properties42, obj76);
// flaky:             org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(obj6);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(obj13);
        org.junit.Assert.assertEquals(obj13.toString(), "{{}=1}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj13), "{{}=1}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj13), "{{}=1}");
        org.junit.Assert.assertNull(str21);
        org.junit.Assert.assertNotNull(properties22);
        org.junit.Assert.assertTrue("'" + long30 + "' != '" + 10L + "'", long30 == 10L);
        org.junit.Assert.assertNotNull(obj31);
        org.junit.Assert.assertNotNull(properties32);
        org.junit.Assert.assertNotNull(properties33);
        org.junit.Assert.assertTrue("'" + long41 + "' != '" + 500L + "'", long41 == 500L);
        org.junit.Assert.assertNotNull(properties42);
        org.junit.Assert.assertNotNull(properties50);
        org.junit.Assert.assertNotNull(properties55);
        org.junit.Assert.assertNotNull(objEntrySet56);
        org.junit.Assert.assertNull(str66);
        org.junit.Assert.assertNotNull(properties67);
        org.junit.Assert.assertTrue("'" + long75 + "' != '" + 50L + "'", long75 == 50L);
        org.junit.Assert.assertNull(obj76);
    }

    @Test
    public void test1886() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1886");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Properties properties2 = new java.util.Properties(properties0);
        java.util.Properties properties3 = null;
        java.util.Properties properties4 = new java.util.Properties(properties3);
        java.lang.Object obj6 = properties2.put((java.lang.Object) properties4, (java.lang.Object) (short) 1);
        boolean boolean7 = properties2.isEmpty();
        java.util.Properties properties8 = null;
        java.util.Properties properties9 = new java.util.Properties(properties8);
        java.util.Properties properties10 = new java.util.Properties(properties8);
        boolean boolean11 = properties2.containsKey((java.lang.Object) properties10);
        java.util.Properties properties12 = new java.util.Properties(properties10);
        java.lang.Object obj13 = properties12.clone();
        java.util.Properties properties15 = null;
        java.util.Properties properties16 = new java.util.Properties(properties15);
        java.util.Properties properties17 = new java.util.Properties(properties15);
        java.util.Properties properties18 = null;
        java.util.Properties properties19 = new java.util.Properties(properties18);
        java.lang.Object obj21 = properties17.put((java.lang.Object) properties19, (java.lang.Object) (short) 1);
        boolean boolean22 = properties17.isEmpty();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties23 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties23.setDefaultJtaTimeout((long) (byte) 10);
        atomikosProperties23.setCheckpointInterval((long) (byte) 0);
        atomikosProperties23.setTransactionManagerUniqueName("");
        java.util.Properties properties30 = atomikosProperties23.asProperties();
        java.lang.Object obj31 = properties17.remove((java.lang.Object) properties30);
        java.lang.Object obj32 = properties12.putIfAbsent((java.lang.Object) 1L, (java.lang.Object) properties17);
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet33 = properties17.entrySet();
        java.util.Properties properties34 = null;
        java.util.Properties properties35 = new java.util.Properties(properties34);
        java.util.Properties properties36 = new java.util.Properties(properties34);
        java.util.Properties properties37 = null;
        java.util.Properties properties38 = new java.util.Properties(properties37);
        java.lang.Object obj40 = properties36.put((java.lang.Object) properties38, (java.lang.Object) (short) 1);
        properties38.clear();
        int int42 = properties38.size();
        java.util.Properties properties43 = null;
        java.util.Properties properties44 = new java.util.Properties(properties43);
        java.util.Properties properties45 = new java.util.Properties(properties43);
        java.util.Properties properties46 = null;
        java.util.Properties properties47 = new java.util.Properties(properties46);
        java.lang.Object obj49 = properties45.put((java.lang.Object) properties47, (java.lang.Object) (short) 1);
        java.util.Properties properties50 = new java.util.Properties(properties47);
        java.util.Properties properties51 = new java.util.Properties(properties47);
        boolean boolean53 = properties38.remove((java.lang.Object) properties47, (java.lang.Object) 10.0f);
        java.util.Enumeration<java.lang.Object> objEnumeration54 = properties47.elements();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties55 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties55.setDefaultJtaTimeout((long) (byte) 10);
        atomikosProperties55.setCheckpointInterval((long) (byte) 0);
        long long60 = atomikosProperties55.getMaxTimeout();
        atomikosProperties55.setSerialJtaTransactions(true);
        java.util.Properties properties63 = new java.util.Properties();
        java.util.Enumeration<?> wildcardEnumeration64 = properties63.propertyNames();
        java.lang.Object obj65 = properties47.replace((java.lang.Object) atomikosProperties55, (java.lang.Object) properties63);
        java.lang.String str66 = properties47.toString();
        properties47.clear();
        boolean boolean68 = properties17.contains((java.lang.Object) properties47);
        java.lang.Object obj69 = null;
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties70 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties70.setThreadedTwoPhaseCommit(true);
        atomikosProperties70.setMaxActives((int) (byte) 0);
        atomikosProperties70.setEnableLogging(true);
        atomikosProperties70.setMaxActives((int) (byte) 1);
        atomikosProperties70.setTransactionManagerUniqueName("hi!");
        java.lang.String str81 = atomikosProperties70.getLogBaseName();
        atomikosProperties70.setSerialJtaTransactions(false);
        java.util.Properties properties84 = atomikosProperties70.asProperties();
        java.lang.String str85 = atomikosProperties70.getLogBaseDir();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj86 = properties17.putIfAbsent(obj69, (java.lang.Object) str85);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(obj6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNotNull(obj13);
        org.junit.Assert.assertEquals(obj13.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj13), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj13), "{}");
        org.junit.Assert.assertNull(obj21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(properties30);
        org.junit.Assert.assertNull(obj31);
        org.junit.Assert.assertNull(obj32);
        org.junit.Assert.assertNotNull(objEntrySet33);
        org.junit.Assert.assertNull(obj40);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 0 + "'", int42 == 0);
        org.junit.Assert.assertNull(obj49);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertNotNull(objEnumeration54);
        org.junit.Assert.assertTrue("'" + long60 + "' != '" + 300000L + "'", long60 == 300000L);
        org.junit.Assert.assertNotNull(wildcardEnumeration64);
        org.junit.Assert.assertNull(obj65);
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "{}" + "'", str66, "{}");
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertEquals("'" + str81 + "' != '" + "tmlog" + "'", str81, "tmlog");
        org.junit.Assert.assertNotNull(properties84);
        org.junit.Assert.assertNull(str85);
    }

    @Test
    public void test1887() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1887");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Properties properties2 = new java.util.Properties(properties0);
        boolean boolean4 = properties2.containsValue((java.lang.Object) (short) 100);
        java.util.Properties properties5 = new java.util.Properties(properties2);
        java.lang.String str7 = properties5.getProperty("hi!");
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet8 = properties5.entrySet();
        java.util.Enumeration<java.lang.Object> objEnumeration9 = properties5.keys();
        java.util.Properties properties10 = null;
        java.util.Properties properties11 = new java.util.Properties(properties10);
        java.util.Properties properties12 = new java.util.Properties(properties10);
        java.util.Properties properties13 = null;
        java.util.Properties properties14 = new java.util.Properties(properties13);
        java.lang.Object obj16 = properties12.put((java.lang.Object) properties14, (java.lang.Object) (short) 1);
        properties14.clear();
        java.lang.String str19 = properties14.getProperty("");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties20 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties20.setDefaultJtaTimeout((long) (byte) 10);
        atomikosProperties20.setSerialJtaTransactions(false);
        atomikosProperties20.setMaxTimeout((long) (short) -1);
        long long27 = atomikosProperties20.getDefaultJtaTimeout();
        java.util.Properties properties28 = atomikosProperties20.asProperties();
        java.lang.Object obj29 = properties14.get((java.lang.Object) properties28);
        java.util.Properties properties30 = new java.util.Properties(properties14);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties31 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties31.setDefaultJtaTimeout((long) (byte) 10);
        atomikosProperties31.setCheckpointInterval((long) (byte) 0);
        atomikosProperties31.setTransactionManagerUniqueName("");
        java.util.Properties properties38 = atomikosProperties31.asProperties();
        java.lang.String str39 = atomikosProperties31.getTransactionManagerUniqueName();
        atomikosProperties31.setDefaultJtaTimeout((long) (-1));
        java.util.Properties properties42 = atomikosProperties31.asProperties();
        boolean boolean43 = properties42.isEmpty();
        boolean boolean44 = properties30.containsKey((java.lang.Object) boolean43);
        java.util.Properties properties45 = null;
        java.util.Properties properties46 = new java.util.Properties(properties45);
        java.util.Properties properties47 = new java.util.Properties(properties45);
        java.util.Properties properties48 = null;
        java.util.Properties properties49 = new java.util.Properties(properties48);
        java.lang.Object obj51 = properties47.put((java.lang.Object) properties49, (java.lang.Object) (short) 1);
        java.lang.Object obj54 = properties49.setProperty("tmlog", "{}");
        int int55 = properties49.size();
        java.lang.Object obj56 = properties5.putIfAbsent((java.lang.Object) boolean43, (java.lang.Object) properties49);
        java.io.OutputStream outputStream57 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties49.storeToXML(outputStream57, "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=true, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=true, com.atomikos.icatch.max_actives=35, com.atomikos.icatch.log_base_name=tmlog}");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNotNull(objEntrySet8);
        org.junit.Assert.assertNotNull(objEnumeration9);
        org.junit.Assert.assertNull(obj16);
        org.junit.Assert.assertNull(str19);
        org.junit.Assert.assertTrue("'" + long27 + "' != '" + 10L + "'", long27 == 10L);
        org.junit.Assert.assertNotNull(properties28);
        org.junit.Assert.assertNull(obj29);
        org.junit.Assert.assertNotNull(properties38);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "" + "'", str39, "");
        org.junit.Assert.assertNotNull(properties42);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNull(obj51);
        org.junit.Assert.assertNull(obj54);
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + 1 + "'", int55 == 1);
        org.junit.Assert.assertNull(obj56);
    }

    @Test
    public void test1888() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1888");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setThreadedTwoPhaseCommit(true);
        atomikosProperties0.setMaxActives((int) (byte) 0);
        atomikosProperties0.setEnableLogging(true);
        atomikosProperties0.setForceShutdownOnVmExit(false);
        boolean boolean9 = atomikosProperties0.isThreadedTwoPhaseCommit();
        atomikosProperties0.setDefaultJtaTimeout(10L);
        atomikosProperties0.setEnableLogging(false);
        atomikosProperties0.setTransactionManagerUniqueName("hi!");
        java.util.Properties properties16 = atomikosProperties0.asProperties();
        java.lang.Object obj17 = null;
        java.util.Properties properties18 = null;
        java.util.Properties properties19 = new java.util.Properties(properties18);
        java.util.Properties properties20 = new java.util.Properties(properties18);
        java.util.Properties properties21 = null;
        java.util.Properties properties22 = new java.util.Properties(properties21);
        java.lang.Object obj24 = properties20.put((java.lang.Object) properties22, (java.lang.Object) (short) 1);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties25 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties25.setThreadedTwoPhaseCommit(true);
        atomikosProperties25.setMaxActives((int) (byte) 0);
        boolean boolean30 = properties20.containsValue((java.lang.Object) atomikosProperties25);
        atomikosProperties25.setCheckpointInterval((long) 9);
        atomikosProperties25.setEnableLogging(false);
        atomikosProperties25.setCheckpointInterval(1L);
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean37 = properties16.remove(obj17, (java.lang.Object) atomikosProperties25);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertNotNull(properties16);
        org.junit.Assert.assertNull(obj24);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
    }

    @Test
    public void test1889() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1889");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setDefaultJtaTimeout((long) (byte) 10);
        long long3 = atomikosProperties0.getDefaultJtaTimeout();
        atomikosProperties0.setTransactionManagerUniqueName("");
        boolean boolean6 = atomikosProperties0.isEnableLogging();
        java.lang.String str7 = atomikosProperties0.getTransactionManagerUniqueName();
        long long8 = atomikosProperties0.getCheckpointInterval();
        java.util.Properties properties9 = atomikosProperties0.asProperties();
        java.lang.String str11 = properties9.getProperty("{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.log_base_dir={}, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
        org.junit.Assert.assertTrue("'" + long3 + "' != '" + 10L + "'", long3 == 10L);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertTrue("'" + long8 + "' != '" + 500L + "'", long8 == 500L);
        org.junit.Assert.assertNotNull(properties9);
        org.junit.Assert.assertNull(str11);
    }

    @Test
    public void test1890() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1890");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Properties properties2 = new java.util.Properties(properties0);
        java.util.Properties properties3 = null;
        java.util.Properties properties4 = new java.util.Properties(properties3);
        java.lang.Object obj6 = properties2.put((java.lang.Object) properties4, (java.lang.Object) (short) 1);
        properties4.clear();
        int int8 = properties4.size();
        java.util.Properties properties9 = null;
        java.util.Properties properties10 = new java.util.Properties(properties9);
        java.util.Properties properties11 = new java.util.Properties(properties9);
        java.util.Properties properties12 = null;
        java.util.Properties properties13 = new java.util.Properties(properties12);
        java.lang.Object obj15 = properties11.put((java.lang.Object) properties13, (java.lang.Object) (short) 1);
        java.util.Properties properties16 = new java.util.Properties(properties13);
        java.util.Properties properties17 = new java.util.Properties(properties13);
        boolean boolean19 = properties4.remove((java.lang.Object) properties13, (java.lang.Object) 10.0f);
        java.util.Enumeration<java.lang.Object> objEnumeration20 = properties13.elements();
        java.util.Properties properties21 = null;
        java.util.Properties properties22 = new java.util.Properties(properties21);
        java.util.Properties properties23 = new java.util.Properties(properties21);
        java.util.Properties properties24 = null;
        java.util.Properties properties25 = new java.util.Properties(properties24);
        java.lang.Object obj27 = properties23.put((java.lang.Object) properties25, (java.lang.Object) (short) 1);
        properties25.clear();
        int int29 = properties25.size();
        java.util.Properties properties30 = new java.util.Properties(properties25);
        properties13.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties30);
        java.util.Set<java.lang.String> strSet32 = properties30.stringPropertyNames();
        java.util.Properties properties33 = new java.util.Properties(properties30);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties34 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties34.setDefaultJtaTimeout((long) (byte) 10);
        atomikosProperties34.setCheckpointInterval((long) (byte) 0);
        atomikosProperties34.setTransactionManagerUniqueName("");
        java.util.Properties properties41 = atomikosProperties34.asProperties();
        java.lang.String str42 = atomikosProperties34.getTransactionManagerUniqueName();
        atomikosProperties34.setDefaultJtaTimeout((long) (-1));
        java.lang.String str45 = atomikosProperties34.getTransactionManagerUniqueName();
        atomikosProperties34.setMaxActives(100);
        atomikosProperties34.setThreadedTwoPhaseCommit(false);
        atomikosProperties34.setCheckpointInterval((long) 11);
        atomikosProperties34.setSerialJtaTransactions(false);
        boolean boolean54 = properties33.containsKey((java.lang.Object) false);
        org.junit.Assert.assertNull(obj6);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertNull(obj15);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(objEnumeration20);
        org.junit.Assert.assertNull(obj27);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 0 + "'", int29 == 0);
        org.junit.Assert.assertNotNull(strSet32);
        org.junit.Assert.assertNotNull(properties41);
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "" + "'", str42, "");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "" + "'", str45, "");
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
    }

    @Test
    public void test1891() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1891");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setDefaultJtaTimeout((long) (byte) 10);
        atomikosProperties0.setCheckpointInterval((long) (byte) 0);
        atomikosProperties0.setTransactionManagerUniqueName("");
        java.util.Properties properties7 = atomikosProperties0.asProperties();
        java.lang.String str8 = atomikosProperties0.getLogBaseName();
        atomikosProperties0.setCheckpointInterval(100L);
        java.lang.String str11 = atomikosProperties0.getTransactionManagerUniqueName();
        atomikosProperties0.setLogBaseName("{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.tm_unique_name=, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
        atomikosProperties0.setThreadedTwoPhaseCommit(true);
        long long16 = atomikosProperties0.getCheckpointInterval();
        atomikosProperties0.setMaxActives((int) (short) 10);
        boolean boolean19 = atomikosProperties0.isEnableLogging();
        org.junit.Assert.assertNotNull(properties7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "tmlog" + "'", str8, "tmlog");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertTrue("'" + long16 + "' != '" + 100L + "'", long16 == 100L);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
    }

    @Test
    public void test1892() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1892");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setDefaultJtaTimeout((long) (byte) 10);
        atomikosProperties0.setCheckpointInterval((long) (byte) 0);
        atomikosProperties0.setTransactionManagerUniqueName("");
        boolean boolean7 = atomikosProperties0.isEnableLogging();
        java.util.Properties properties8 = atomikosProperties0.asProperties();
        java.lang.String str9 = atomikosProperties0.getLogBaseName();
        boolean boolean10 = atomikosProperties0.isEnableLogging();
        java.lang.String str11 = atomikosProperties0.getTransactionManagerUniqueName();
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(properties8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "tmlog" + "'", str9, "tmlog");
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
    }

    @Test
    public void test1893() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1893");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setDefaultJtaTimeout((long) (byte) 10);
        long long3 = atomikosProperties0.getDefaultJtaTimeout();
        atomikosProperties0.setTransactionManagerUniqueName("");
        boolean boolean6 = atomikosProperties0.isEnableLogging();
        java.lang.String str7 = atomikosProperties0.getLogBaseDir();
        java.util.Properties properties8 = atomikosProperties0.asProperties();
        boolean boolean9 = atomikosProperties0.isEnableLogging();
        atomikosProperties0.setLogBaseName("{}");
        java.lang.String str12 = atomikosProperties0.getService();
        java.lang.String str13 = atomikosProperties0.getTransactionManagerUniqueName();
        atomikosProperties0.setService("{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=52, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.tm_unique_name=, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
        long long16 = atomikosProperties0.getMaxTimeout();
        org.junit.Assert.assertTrue("'" + long3 + "' != '" + 10L + "'", long3 == 10L);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNotNull(properties8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "" + "'", str13, "");
        org.junit.Assert.assertTrue("'" + long16 + "' != '" + 300000L + "'", long16 == 300000L);
    }

    @Test
    public void test1894() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1894");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Properties properties2 = new java.util.Properties(properties0);
        java.util.Properties properties3 = null;
        java.util.Properties properties4 = new java.util.Properties(properties3);
        java.lang.Object obj6 = properties2.put((java.lang.Object) properties4, (java.lang.Object) (short) 1);
        boolean boolean7 = properties2.isEmpty();
        java.util.Properties properties8 = null;
        java.util.Properties properties9 = new java.util.Properties(properties8);
        java.util.Properties properties10 = new java.util.Properties(properties8);
        boolean boolean11 = properties2.containsKey((java.lang.Object) properties10);
        java.util.Properties properties12 = new java.util.Properties(properties10);
        java.lang.Object obj13 = properties12.clone();
        java.util.Set<java.lang.String> strSet14 = properties12.stringPropertyNames();
        java.lang.Object obj17 = properties12.setProperty("{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=0, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.tm_unique_name=, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}", "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=true, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=true, com.atomikos.icatch.max_actives=35, com.atomikos.icatch.log_base_name=tmlog}");
        java.util.Properties properties18 = null;
        java.util.Properties properties19 = new java.util.Properties(properties18);
        java.util.Properties properties20 = new java.util.Properties(properties18);
        java.util.Properties properties21 = null;
        java.util.Properties properties22 = new java.util.Properties(properties21);
        java.lang.Object obj24 = properties20.put((java.lang.Object) properties22, (java.lang.Object) (short) 1);
        java.util.Properties properties26 = null;
        java.util.Properties properties27 = new java.util.Properties(properties26);
        java.util.Properties properties28 = new java.util.Properties(properties26);
        java.util.Properties properties29 = null;
        java.util.Properties properties30 = new java.util.Properties(properties29);
        java.lang.Object obj32 = properties28.put((java.lang.Object) properties30, (java.lang.Object) (short) 1);
        boolean boolean33 = properties22.remove((java.lang.Object) false, (java.lang.Object) (short) 1);
        java.util.Properties properties34 = new java.util.Properties(properties22);
        int int35 = properties34.size();
        java.util.Properties properties36 = null;
        java.util.Properties properties37 = new java.util.Properties(properties36);
        java.util.Properties properties38 = new java.util.Properties(properties36);
        java.util.Properties properties39 = null;
        java.util.Properties properties40 = new java.util.Properties(properties39);
        java.lang.Object obj42 = properties38.put((java.lang.Object) properties40, (java.lang.Object) (short) 1);
        properties40.clear();
        java.lang.String str45 = properties40.getProperty("");
        java.util.Properties properties46 = null;
        java.util.Properties properties47 = new java.util.Properties(properties46);
        java.util.Properties properties48 = new java.util.Properties(properties46);
        java.util.Properties properties49 = null;
        java.util.Properties properties50 = new java.util.Properties(properties49);
        java.lang.Object obj52 = properties48.put((java.lang.Object) properties50, (java.lang.Object) (short) 1);
        properties40.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties48);
        java.lang.Object obj54 = properties34.remove((java.lang.Object) properties40);
        java.lang.Object obj57 = properties40.setProperty("tmlog", "hi!");
        properties12.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties40);
        java.lang.Object obj61 = properties12.setProperty("{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=true, com.atomikos.icatch.checkpoint_interval=0, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.tm_unique_name=, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}", "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
        java.io.OutputStream outputStream62 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties12.store(outputStream62, "");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(obj6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNotNull(obj13);
        org.junit.Assert.assertEquals(obj13.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj13), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj13), "{}");
        org.junit.Assert.assertNotNull(strSet14);
        org.junit.Assert.assertNull(obj17);
        org.junit.Assert.assertNull(obj24);
        org.junit.Assert.assertNull(obj32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 0 + "'", int35 == 0);
        org.junit.Assert.assertNull(obj42);
        org.junit.Assert.assertNull(str45);
        org.junit.Assert.assertNull(obj52);
        org.junit.Assert.assertNull(obj54);
        org.junit.Assert.assertNull(obj57);
        org.junit.Assert.assertNull(obj61);
    }

    @Test
    public void test1895() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1895");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setDefaultJtaTimeout((long) (byte) 10);
        long long3 = atomikosProperties0.getDefaultJtaTimeout();
        java.lang.String str4 = atomikosProperties0.getTransactionManagerUniqueName();
        atomikosProperties0.setThreadedTwoPhaseCommit(true);
        java.util.Properties properties7 = atomikosProperties0.asProperties();
        java.io.Writer writer8 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties7.store(writer8, "{=}");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + long3 + "' != '" + 10L + "'", long3 == 10L);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertNotNull(properties7);
    }

    @Test
    public void test1896() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1896");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Properties properties2 = new java.util.Properties(properties0);
        java.util.Properties properties3 = null;
        java.util.Properties properties4 = new java.util.Properties(properties3);
        java.lang.Object obj6 = properties2.put((java.lang.Object) properties4, (java.lang.Object) (short) 1);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties7 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties7.setThreadedTwoPhaseCommit(true);
        atomikosProperties7.setMaxActives((int) (byte) 0);
        boolean boolean12 = properties2.containsValue((java.lang.Object) atomikosProperties7);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties13 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties13.setDefaultJtaTimeout((long) (byte) 10);
        atomikosProperties13.setSerialJtaTransactions(false);
        boolean boolean18 = properties2.containsValue((java.lang.Object) atomikosProperties13);
        java.lang.Object obj21 = properties2.putIfAbsent((java.lang.Object) 10, (java.lang.Object) (byte) -1);
        java.util.Properties properties22 = null;
        java.util.Properties properties23 = new java.util.Properties(properties22);
        java.util.Properties properties24 = new java.util.Properties(properties22);
        java.util.Properties properties25 = null;
        java.util.Properties properties26 = new java.util.Properties(properties25);
        java.lang.Object obj28 = properties24.put((java.lang.Object) properties26, (java.lang.Object) (short) 1);
        boolean boolean29 = properties24.isEmpty();
        properties24.clear();
        java.util.Properties properties31 = new java.util.Properties(properties24);
        properties2.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties24);
        java.util.Map<java.lang.Object, java.lang.Object> objMap33 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties2.putAll(objMap33);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(obj6);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNull(obj21);
        org.junit.Assert.assertNull(obj28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
    }

    @Test
    public void test1897() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1897");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Properties properties2 = new java.util.Properties(properties0);
        java.util.Properties properties3 = null;
        java.util.Properties properties4 = new java.util.Properties(properties3);
        java.lang.Object obj6 = properties2.put((java.lang.Object) properties4, (java.lang.Object) (short) 1);
        properties4.clear();
        int int8 = properties4.size();
        java.util.Properties properties9 = null;
        java.util.Properties properties10 = new java.util.Properties(properties9);
        java.util.Properties properties11 = new java.util.Properties(properties9);
        java.util.Properties properties12 = null;
        java.util.Properties properties13 = new java.util.Properties(properties12);
        java.lang.Object obj15 = properties11.put((java.lang.Object) properties13, (java.lang.Object) (short) 1);
        java.util.Properties properties16 = new java.util.Properties(properties13);
        java.util.Properties properties17 = new java.util.Properties(properties13);
        boolean boolean19 = properties4.remove((java.lang.Object) properties13, (java.lang.Object) 10.0f);
        java.util.Enumeration<java.lang.Object> objEnumeration20 = properties13.elements();
        java.util.Properties properties21 = new java.util.Properties(properties13);
        java.util.Properties properties22 = new java.util.Properties(properties21);
        java.util.Set<java.lang.Object> objSet23 = properties21.keySet();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties24 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties24.setThreadedTwoPhaseCommit(true);
        atomikosProperties24.setMaxActives((int) (byte) 0);
        atomikosProperties24.setForceShutdownOnVmExit(false);
        atomikosProperties24.setLogBaseName("{tmlog={com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=0, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.tm_unique_name=, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}, 4=true}");
        atomikosProperties24.setSerialJtaTransactions(true);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties35 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties35.setThreadedTwoPhaseCommit(true);
        atomikosProperties35.setMaxActives((int) '#');
        atomikosProperties35.setEnableLogging(true);
        int int42 = atomikosProperties35.getMaxActives();
        boolean boolean43 = atomikosProperties35.isEnableLogging();
        long long44 = atomikosProperties35.getCheckpointInterval();
        java.lang.Object obj45 = properties21.replace((java.lang.Object) atomikosProperties24, (java.lang.Object) atomikosProperties35);
        atomikosProperties35.setEnableLogging(false);
        atomikosProperties35.setTransactionManagerUniqueName("{{tmlog={com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=0, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.tm_unique_name=, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}, 4=true}={com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=0, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog, {}={}}}");
        org.junit.Assert.assertNull(obj6);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertNull(obj15);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(objEnumeration20);
        org.junit.Assert.assertNotNull(objSet23);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 35 + "'", int42 == 35);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertTrue("'" + long44 + "' != '" + 500L + "'", long44 == 500L);
        org.junit.Assert.assertNull(obj45);
    }

    @Test
    public void test1898() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1898");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Properties properties2 = new java.util.Properties(properties0);
        java.util.Properties properties3 = null;
        java.util.Properties properties4 = new java.util.Properties(properties3);
        java.lang.Object obj6 = properties2.put((java.lang.Object) properties4, (java.lang.Object) (short) 1);
        boolean boolean7 = properties2.isEmpty();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties8 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties8.setDefaultJtaTimeout((long) (byte) 10);
        atomikosProperties8.setCheckpointInterval((long) (byte) 0);
        atomikosProperties8.setTransactionManagerUniqueName("");
        java.util.Properties properties15 = atomikosProperties8.asProperties();
        java.lang.Object obj16 = properties2.remove((java.lang.Object) properties15);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties17 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties17.setDefaultJtaTimeout((long) (byte) 10);
        atomikosProperties17.setCheckpointInterval((long) (byte) 0);
        atomikosProperties17.setTransactionManagerUniqueName("");
        java.lang.Object obj24 = properties15.remove((java.lang.Object) atomikosProperties17);
        java.util.Enumeration<java.lang.Object> objEnumeration25 = properties15.keys();
        properties15.clear();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties27 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties27.setDefaultJtaTimeout((long) (byte) 10);
        atomikosProperties27.setCheckpointInterval((long) (byte) 0);
        atomikosProperties27.setTransactionManagerUniqueName("");
        java.util.Properties properties34 = atomikosProperties27.asProperties();
        atomikosProperties27.setThreadedTwoPhaseCommit(false);
        atomikosProperties27.setMaxActives((int) (byte) 1);
        atomikosProperties27.setTransactionManagerUniqueName("{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=0, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.tm_unique_name=, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
        boolean boolean41 = properties15.containsValue((java.lang.Object) atomikosProperties27);
        java.io.PrintWriter printWriter42 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties15.list(printWriter42);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(obj6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(properties15);
        org.junit.Assert.assertNull(obj16);
        org.junit.Assert.assertNull(obj24);
        org.junit.Assert.assertNotNull(objEnumeration25);
        org.junit.Assert.assertNotNull(properties34);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
    }

    @Test
    public void test1899() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1899");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Properties properties2 = new java.util.Properties(properties0);
        java.util.Properties properties3 = null;
        java.util.Properties properties4 = new java.util.Properties(properties3);
        java.lang.Object obj6 = properties2.put((java.lang.Object) properties4, (java.lang.Object) (short) 1);
        properties4.clear();
        int int8 = properties4.size();
        java.lang.Object obj11 = properties4.setProperty("hi!", "hi!");
        java.lang.Object obj14 = properties4.setProperty("tmlog", "tmlog");
        java.io.OutputStream outputStream15 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties4.save(outputStream15, "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=0, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(obj6);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertNull(obj11);
        org.junit.Assert.assertNull(obj14);
    }

    @Test
    public void test1900() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1900");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Properties properties2 = new java.util.Properties(properties0);
        java.util.Properties properties3 = null;
        java.util.Properties properties4 = new java.util.Properties(properties3);
        java.lang.Object obj6 = properties2.put((java.lang.Object) properties4, (java.lang.Object) (short) 1);
        properties4.clear();
        int int8 = properties4.size();
        java.util.Properties properties9 = null;
        java.util.Properties properties10 = new java.util.Properties(properties9);
        java.util.Properties properties11 = new java.util.Properties(properties9);
        java.util.Properties properties12 = null;
        java.util.Properties properties13 = new java.util.Properties(properties12);
        java.lang.Object obj15 = properties11.put((java.lang.Object) properties13, (java.lang.Object) (short) 1);
        java.util.Properties properties16 = new java.util.Properties(properties13);
        java.util.Properties properties17 = new java.util.Properties(properties13);
        boolean boolean19 = properties4.remove((java.lang.Object) properties13, (java.lang.Object) 10.0f);
        java.util.Enumeration<java.lang.Object> objEnumeration20 = properties13.elements();
        java.util.Enumeration<java.lang.Object> objEnumeration21 = properties13.keys();
        java.lang.Object obj22 = properties13.clone();
        java.util.Properties properties23 = new java.util.Properties();
        java.util.Enumeration<?> wildcardEnumeration24 = properties23.propertyNames();
        java.util.Properties properties26 = null;
        java.util.Properties properties27 = new java.util.Properties(properties26);
        java.util.Properties properties28 = new java.util.Properties(properties26);
        java.util.Properties properties29 = null;
        java.util.Properties properties30 = new java.util.Properties(properties29);
        java.lang.Object obj32 = properties28.put((java.lang.Object) properties30, (java.lang.Object) (short) 1);
        java.util.Properties properties33 = new java.util.Properties(properties30);
        java.util.Enumeration<java.lang.Object> objEnumeration34 = properties33.elements();
        java.lang.Object obj35 = properties23.put((java.lang.Object) (-1.0f), (java.lang.Object) objEnumeration34);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties36 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties36.setDefaultJtaTimeout((long) (byte) 10);
        atomikosProperties36.setCheckpointInterval((long) (byte) 0);
        atomikosProperties36.setTransactionManagerUniqueName("");
        boolean boolean43 = atomikosProperties36.isEnableLogging();
        java.util.Properties properties44 = atomikosProperties36.asProperties();
        java.util.Enumeration<java.lang.Object> objEnumeration45 = properties44.keys();
        boolean boolean46 = properties23.contains((java.lang.Object) objEnumeration45);
        java.util.Properties properties47 = new java.util.Properties(properties23);
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet48 = properties23.entrySet();
        java.util.Properties properties49 = null;
        java.util.Properties properties50 = new java.util.Properties(properties49);
        java.util.Properties properties51 = new java.util.Properties(properties49);
        java.util.Properties properties52 = null;
        java.util.Properties properties53 = new java.util.Properties(properties52);
        java.lang.Object obj55 = properties51.put((java.lang.Object) properties53, (java.lang.Object) (short) 1);
        java.util.Enumeration<java.lang.Object> objEnumeration56 = properties53.elements();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet57 = properties53.entrySet();
        java.util.Set<java.lang.Object> objSet58 = properties53.keySet();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties59 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties59.setDefaultJtaTimeout((long) (byte) 10);
        atomikosProperties59.setCheckpointInterval((long) (byte) 0);
        atomikosProperties59.setEnableLogging(true);
        java.lang.Object obj66 = properties53.get((java.lang.Object) atomikosProperties59);
        java.util.Properties properties67 = atomikosProperties59.asProperties();
        java.lang.Object obj68 = properties13.put((java.lang.Object) objEntrySet48, (java.lang.Object) atomikosProperties59);
        org.junit.Assert.assertNull(obj6);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertNull(obj15);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(objEnumeration20);
        org.junit.Assert.assertNotNull(objEnumeration21);
        org.junit.Assert.assertNotNull(obj22);
        org.junit.Assert.assertEquals(obj22.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj22), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj22), "{}");
        org.junit.Assert.assertNotNull(wildcardEnumeration24);
        org.junit.Assert.assertNull(obj32);
        org.junit.Assert.assertNotNull(objEnumeration34);
        org.junit.Assert.assertNull(obj35);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNotNull(properties44);
        org.junit.Assert.assertNotNull(objEnumeration45);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(objEntrySet48);
        org.junit.Assert.assertNull(obj55);
        org.junit.Assert.assertNotNull(objEnumeration56);
        org.junit.Assert.assertNotNull(objEntrySet57);
        org.junit.Assert.assertNotNull(objSet58);
        org.junit.Assert.assertNull(obj66);
        org.junit.Assert.assertNotNull(properties67);
        org.junit.Assert.assertNull(obj68);
    }

    @Test
    public void test1901() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1901");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        int int1 = atomikosProperties0.getMaxActives();
        long long2 = atomikosProperties0.getMaxTimeout();
        java.util.Properties properties3 = atomikosProperties0.asProperties();
        java.util.Properties properties4 = atomikosProperties0.asProperties();
        java.util.Properties properties5 = null;
        java.util.Properties properties6 = new java.util.Properties(properties5);
        java.util.Properties properties7 = new java.util.Properties(properties5);
        boolean boolean9 = properties7.containsValue((java.lang.Object) (short) 100);
        java.util.Properties properties10 = null;
        java.util.Properties properties11 = new java.util.Properties(properties10);
        java.util.Properties properties12 = new java.util.Properties(properties10);
        java.util.Properties properties13 = null;
        java.util.Properties properties14 = new java.util.Properties(properties13);
        java.lang.Object obj16 = properties12.put((java.lang.Object) properties14, (java.lang.Object) (short) 1);
        java.util.Enumeration<java.lang.Object> objEnumeration17 = properties14.elements();
        java.lang.Object obj18 = properties7.remove((java.lang.Object) properties14);
        boolean boolean19 = properties14.isEmpty();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet20 = properties14.entrySet();
        java.util.Properties properties21 = new java.util.Properties(properties14);
        boolean boolean22 = properties4.contains((java.lang.Object) properties21);
        java.lang.String str24 = properties4.getProperty("{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.tm_unique_name=, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
        java.util.Set<java.lang.Object> objSet25 = properties4.keySet();
        boolean boolean26 = properties4.isEmpty();
        java.io.OutputStream outputStream27 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties4.save(outputStream27, "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.log_base_dir=hi!, com.atomikos.icatch.threaded_2pc=true, com.atomikos.icatch.max_actives=35, com.atomikos.icatch.log_base_name=tmlog}");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 50 + "'", int1 == 50);
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + 300000L + "'", long2 == 300000L);
        org.junit.Assert.assertNotNull(properties3);
        org.junit.Assert.assertNotNull(properties4);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNull(obj16);
        org.junit.Assert.assertNotNull(objEnumeration17);
        org.junit.Assert.assertNull(obj18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(objEntrySet20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNull(str24);
        org.junit.Assert.assertNotNull(objSet25);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
    }

    @Test
    public void test1902() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1902");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Properties properties2 = new java.util.Properties(properties0);
        java.util.Properties properties3 = null;
        java.util.Properties properties4 = new java.util.Properties(properties3);
        java.lang.Object obj6 = properties2.put((java.lang.Object) properties4, (java.lang.Object) (short) 1);
        java.util.Properties properties8 = null;
        java.util.Properties properties9 = new java.util.Properties(properties8);
        java.util.Properties properties10 = new java.util.Properties(properties8);
        java.util.Properties properties11 = null;
        java.util.Properties properties12 = new java.util.Properties(properties11);
        java.lang.Object obj14 = properties10.put((java.lang.Object) properties12, (java.lang.Object) (short) 1);
        boolean boolean15 = properties4.remove((java.lang.Object) false, (java.lang.Object) (short) 1);
        java.util.Properties properties16 = new java.util.Properties(properties4);
        boolean boolean17 = properties4.isEmpty();
        java.util.Enumeration<?> wildcardEnumeration18 = properties4.propertyNames();
        java.lang.String str20 = properties4.getProperty("{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=0, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.tm_unique_name=, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet21 = properties4.entrySet();
        org.junit.Assert.assertNull(obj6);
        org.junit.Assert.assertNull(obj14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(wildcardEnumeration18);
        org.junit.Assert.assertNull(str20);
        org.junit.Assert.assertNotNull(objEntrySet21);
    }

    @Test
    public void test1903() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1903");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        int int1 = atomikosProperties0.getMaxActives();
        long long2 = atomikosProperties0.getMaxTimeout();
        java.lang.String str3 = atomikosProperties0.getLogBaseDir();
        long long4 = atomikosProperties0.getCheckpointInterval();
        java.util.Properties properties5 = atomikosProperties0.asProperties();
        java.util.Properties properties6 = new java.util.Properties();
        java.util.Enumeration<?> wildcardEnumeration7 = properties6.propertyNames();
        java.lang.Object obj8 = properties6.clone();
        java.util.Properties properties9 = null;
        java.util.Properties properties10 = new java.util.Properties(properties9);
        java.util.Properties properties11 = new java.util.Properties(properties9);
        java.util.Properties properties12 = null;
        java.util.Properties properties13 = new java.util.Properties(properties12);
        java.lang.Object obj15 = properties11.put((java.lang.Object) properties13, (java.lang.Object) (short) 1);
        boolean boolean16 = properties11.isEmpty();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties17 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties17.setDefaultJtaTimeout((long) (byte) 10);
        atomikosProperties17.setCheckpointInterval((long) (byte) 0);
        atomikosProperties17.setTransactionManagerUniqueName("");
        java.util.Properties properties24 = atomikosProperties17.asProperties();
        java.lang.Object obj25 = properties11.remove((java.lang.Object) properties24);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties26 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties26.setDefaultJtaTimeout((long) (byte) 10);
        atomikosProperties26.setCheckpointInterval((long) (byte) 0);
        atomikosProperties26.setTransactionManagerUniqueName("");
        java.lang.Object obj33 = properties24.remove((java.lang.Object) atomikosProperties26);
        boolean boolean34 = properties6.containsKey((java.lang.Object) properties24);
        java.util.Properties properties35 = new java.util.Properties(properties24);
        java.lang.String str37 = properties35.getProperty("{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=0, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog, {}={}}");
        boolean boolean38 = properties5.containsKey((java.lang.Object) properties35);
        java.io.OutputStream outputStream39 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties5.store(outputStream39, "{[]={com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=0, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.tm_unique_name=, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}}");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 50 + "'", int1 == 50);
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + 300000L + "'", long2 == 300000L);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertTrue("'" + long4 + "' != '" + 500L + "'", long4 == 500L);
        org.junit.Assert.assertNotNull(properties5);
        org.junit.Assert.assertNotNull(wildcardEnumeration7);
        org.junit.Assert.assertNotNull(obj8);
        org.junit.Assert.assertEquals(obj8.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj8), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj8), "{}");
        org.junit.Assert.assertNull(obj15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(properties24);
        org.junit.Assert.assertNull(obj25);
        org.junit.Assert.assertNull(obj33);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNull(str37);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
    }

    @Test
    public void test1904() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1904");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setDefaultJtaTimeout((long) (byte) 10);
        atomikosProperties0.setCheckpointInterval((long) (byte) 0);
        atomikosProperties0.setTransactionManagerUniqueName("");
        java.util.Properties properties7 = atomikosProperties0.asProperties();
        java.util.Properties properties8 = atomikosProperties0.asProperties();
        java.util.Properties properties9 = null;
        java.util.Properties properties10 = new java.util.Properties(properties9);
        java.util.Properties properties11 = new java.util.Properties(properties9);
        java.util.Properties properties12 = null;
        java.util.Properties properties13 = new java.util.Properties(properties12);
        java.lang.Object obj15 = properties11.put((java.lang.Object) properties13, (java.lang.Object) (short) 1);
        properties13.clear();
        int int17 = properties13.size();
        java.lang.Object obj20 = properties13.setProperty("hi!", "hi!");
        java.lang.Object obj23 = properties13.setProperty("tmlog", "tmlog");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties24 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties24.setDefaultJtaTimeout((long) (byte) 10);
        atomikosProperties24.setCheckpointInterval((long) (byte) 0);
        atomikosProperties24.setTransactionManagerUniqueName("");
        boolean boolean31 = atomikosProperties24.isEnableLogging();
        java.lang.String str32 = atomikosProperties24.getLogBaseName();
        atomikosProperties24.setThreadedTwoPhaseCommit(false);
        java.lang.Object obj35 = properties8.put((java.lang.Object) properties13, (java.lang.Object) atomikosProperties24);
        atomikosProperties24.setCheckpointInterval((long) (byte) 0);
        java.lang.String str38 = atomikosProperties24.getTransactionManagerUniqueName();
        long long39 = atomikosProperties24.getDefaultJtaTimeout();
        boolean boolean40 = atomikosProperties24.isForceShutdownOnVmExit();
        org.junit.Assert.assertNotNull(properties7);
        org.junit.Assert.assertNotNull(properties8);
        org.junit.Assert.assertNull(obj15);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 0 + "'", int17 == 0);
        org.junit.Assert.assertNull(obj20);
        org.junit.Assert.assertNull(obj23);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "tmlog" + "'", str32, "tmlog");
        org.junit.Assert.assertNull(obj35);
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "" + "'", str38, "");
        org.junit.Assert.assertTrue("'" + long39 + "' != '" + 10L + "'", long39 == 10L);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
    }

    @Test
    public void test1905() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1905");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setThreadedTwoPhaseCommit(true);
        atomikosProperties0.setMaxActives((int) '#');
        atomikosProperties0.setForceShutdownOnVmExit(true);
        java.lang.String str7 = atomikosProperties0.getLogBaseDir();
        java.util.Properties properties8 = atomikosProperties0.asProperties();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties9 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties9.setThreadedTwoPhaseCommit(true);
        atomikosProperties9.setMaxActives((int) '#');
        atomikosProperties9.setEnableLogging(true);
        boolean boolean16 = properties8.containsKey((java.lang.Object) true);
        java.lang.String str18 = properties8.getProperty("{}");
        java.util.Properties properties19 = null;
        java.util.Properties properties20 = new java.util.Properties(properties19);
        java.util.Properties properties21 = new java.util.Properties(properties19);
        java.util.Properties properties22 = null;
        java.util.Properties properties23 = new java.util.Properties(properties22);
        java.lang.Object obj25 = properties21.put((java.lang.Object) properties23, (java.lang.Object) (short) 1);
        properties23.clear();
        int int27 = properties23.size();
        java.util.Properties properties28 = new java.util.Properties(properties23);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties29 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        int int30 = atomikosProperties29.getMaxActives();
        long long31 = atomikosProperties29.getMaxTimeout();
        java.util.Properties properties32 = atomikosProperties29.asProperties();
        java.util.Properties properties33 = atomikosProperties29.asProperties();
        java.util.Properties properties34 = null;
        java.util.Properties properties35 = new java.util.Properties(properties34);
        java.util.Properties properties36 = new java.util.Properties(properties34);
        java.util.Properties properties37 = null;
        java.util.Properties properties38 = new java.util.Properties(properties37);
        java.lang.Object obj40 = properties36.put((java.lang.Object) properties38, (java.lang.Object) (short) 1);
        java.util.Enumeration<java.lang.Object> objEnumeration41 = properties38.elements();
        java.lang.Object obj42 = properties23.replace((java.lang.Object) atomikosProperties29, (java.lang.Object) properties38);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties44 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties44.setThreadedTwoPhaseCommit(true);
        java.lang.String str47 = atomikosProperties44.getService();
        boolean boolean48 = atomikosProperties44.isSerialJtaTransactions();
        java.lang.Object obj49 = properties38.getOrDefault((java.lang.Object) "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.tm_unique_name=, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}", (java.lang.Object) atomikosProperties44);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties50 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties50.setDefaultJtaTimeout((long) (byte) 10);
        long long53 = atomikosProperties50.getDefaultJtaTimeout();
        java.lang.String str54 = atomikosProperties50.getTransactionManagerUniqueName();
        atomikosProperties50.setThreadedTwoPhaseCommit(true);
        java.lang.Object obj57 = properties8.putIfAbsent((java.lang.Object) atomikosProperties44, (java.lang.Object) atomikosProperties50);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties58 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties58.setDefaultJtaTimeout((long) (byte) 10);
        atomikosProperties58.setCheckpointInterval((long) (byte) 0);
        atomikosProperties58.setTransactionManagerUniqueName("");
        java.util.Properties properties65 = atomikosProperties58.asProperties();
        java.lang.String str66 = atomikosProperties58.getTransactionManagerUniqueName();
        atomikosProperties58.setDefaultJtaTimeout((long) (-1));
        java.lang.String str69 = atomikosProperties58.getTransactionManagerUniqueName();
        java.util.Properties properties70 = atomikosProperties58.asProperties();
        boolean boolean71 = properties8.containsValue((java.lang.Object) properties70);
        java.util.Map<java.lang.Object, java.lang.Object> objMap72 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties8.putAll(objMap72);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNotNull(properties8);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNull(str18);
        org.junit.Assert.assertNull(obj25);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 0 + "'", int27 == 0);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 50 + "'", int30 == 50);
        org.junit.Assert.assertTrue("'" + long31 + "' != '" + 300000L + "'", long31 == 300000L);
        org.junit.Assert.assertNotNull(properties32);
        org.junit.Assert.assertNotNull(properties33);
        org.junit.Assert.assertNull(obj40);
        org.junit.Assert.assertNotNull(objEnumeration41);
        org.junit.Assert.assertNull(obj42);
        org.junit.Assert.assertNull(str47);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertNotNull(obj49);
        org.junit.Assert.assertTrue("'" + long53 + "' != '" + 10L + "'", long53 == 10L);
        org.junit.Assert.assertNull(str54);
        org.junit.Assert.assertNull(obj57);
        org.junit.Assert.assertNotNull(properties65);
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "" + "'", str66, "");
        org.junit.Assert.assertEquals("'" + str69 + "' != '" + "" + "'", str69, "");
        org.junit.Assert.assertNotNull(properties70);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
    }

    @Test
    public void test1906() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1906");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Properties properties2 = new java.util.Properties(properties0);
        java.util.Properties properties3 = null;
        java.util.Properties properties4 = new java.util.Properties(properties3);
        java.lang.Object obj6 = properties2.put((java.lang.Object) properties4, (java.lang.Object) (short) 1);
        java.util.Properties properties8 = null;
        java.util.Properties properties9 = new java.util.Properties(properties8);
        java.util.Properties properties10 = new java.util.Properties(properties8);
        java.util.Properties properties11 = null;
        java.util.Properties properties12 = new java.util.Properties(properties11);
        java.lang.Object obj14 = properties10.put((java.lang.Object) properties12, (java.lang.Object) (short) 1);
        boolean boolean15 = properties4.remove((java.lang.Object) false, (java.lang.Object) (short) 1);
        java.util.Properties properties16 = new java.util.Properties(properties4);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties17 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties17.setDefaultJtaTimeout((long) (byte) 10);
        atomikosProperties17.setCheckpointInterval((long) (byte) 0);
        atomikosProperties17.setTransactionManagerUniqueName("");
        java.util.Properties properties24 = null;
        java.util.Properties properties25 = new java.util.Properties(properties24);
        java.util.Properties properties26 = new java.util.Properties(properties24);
        java.util.Properties properties27 = null;
        java.util.Properties properties28 = new java.util.Properties(properties27);
        java.lang.Object obj30 = properties26.put((java.lang.Object) properties28, (java.lang.Object) (short) 1);
        boolean boolean31 = properties26.isEmpty();
        java.util.Properties properties32 = null;
        java.util.Properties properties33 = new java.util.Properties(properties32);
        java.util.Properties properties34 = new java.util.Properties(properties32);
        boolean boolean35 = properties26.containsKey((java.lang.Object) properties34);
        java.util.Properties properties36 = new java.util.Properties(properties34);
        java.lang.Object obj37 = properties36.clone();
        java.util.Properties properties39 = null;
        java.util.Properties properties40 = new java.util.Properties(properties39);
        java.util.Properties properties41 = new java.util.Properties(properties39);
        java.util.Properties properties42 = null;
        java.util.Properties properties43 = new java.util.Properties(properties42);
        java.lang.Object obj45 = properties41.put((java.lang.Object) properties43, (java.lang.Object) (short) 1);
        boolean boolean46 = properties41.isEmpty();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties47 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties47.setDefaultJtaTimeout((long) (byte) 10);
        atomikosProperties47.setCheckpointInterval((long) (byte) 0);
        atomikosProperties47.setTransactionManagerUniqueName("");
        java.util.Properties properties54 = atomikosProperties47.asProperties();
        java.lang.Object obj55 = properties41.remove((java.lang.Object) properties54);
        java.lang.Object obj56 = properties36.putIfAbsent((java.lang.Object) 1L, (java.lang.Object) properties41);
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet57 = properties36.entrySet();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties58 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        boolean boolean59 = atomikosProperties58.isForceShutdownOnVmExit();
        java.util.Properties properties60 = atomikosProperties58.asProperties();
        java.util.Properties properties61 = null;
        java.util.Properties properties62 = new java.util.Properties(properties61);
        java.util.Properties properties63 = new java.util.Properties(properties61);
        java.util.Properties properties64 = null;
        java.util.Properties properties65 = new java.util.Properties(properties64);
        java.lang.Object obj67 = properties63.put((java.lang.Object) properties65, (java.lang.Object) (short) 1);
        properties65.clear();
        int int69 = properties65.size();
        java.util.Properties properties70 = null;
        java.util.Properties properties71 = new java.util.Properties(properties70);
        java.util.Properties properties72 = new java.util.Properties(properties70);
        java.util.Properties properties73 = null;
        java.util.Properties properties74 = new java.util.Properties(properties73);
        java.lang.Object obj76 = properties72.put((java.lang.Object) properties74, (java.lang.Object) (short) 1);
        java.util.Properties properties77 = new java.util.Properties(properties74);
        java.util.Properties properties78 = new java.util.Properties(properties74);
        boolean boolean80 = properties65.remove((java.lang.Object) properties74, (java.lang.Object) 10.0f);
        boolean boolean81 = properties60.containsKey((java.lang.Object) 10.0f);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties83 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties83.setDefaultJtaTimeout((long) (byte) 10);
        atomikosProperties83.setCheckpointInterval((long) (byte) 0);
        atomikosProperties83.setEnableLogging(true);
        java.lang.Object obj90 = properties60.getOrDefault((java.lang.Object) (byte) 0, (java.lang.Object) true);
        java.util.Properties properties91 = new java.util.Properties(properties60);
        boolean boolean92 = properties36.containsKey((java.lang.Object) properties91);
        java.lang.Object obj93 = properties4.replace((java.lang.Object) atomikosProperties17, (java.lang.Object) properties36);
        java.lang.String str95 = properties36.getProperty("{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
        org.junit.Assert.assertNull(obj6);
        org.junit.Assert.assertNull(obj14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNull(obj30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertNotNull(obj37);
        org.junit.Assert.assertEquals(obj37.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj37), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj37), "{}");
        org.junit.Assert.assertNull(obj45);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(properties54);
        org.junit.Assert.assertNull(obj55);
        org.junit.Assert.assertNull(obj56);
        org.junit.Assert.assertNotNull(objEntrySet57);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertNotNull(properties60);
        org.junit.Assert.assertNull(obj67);
        org.junit.Assert.assertTrue("'" + int69 + "' != '" + 0 + "'", int69 == 0);
        org.junit.Assert.assertNull(obj76);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", boolean80 == false);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + false + "'", boolean81 == false);
        org.junit.Assert.assertEquals("'" + obj90 + "' != '" + true + "'", obj90, true);
        org.junit.Assert.assertTrue("'" + boolean92 + "' != '" + false + "'", boolean92 == false);
        org.junit.Assert.assertNull(obj93);
        org.junit.Assert.assertNull(str95);
    }

    @Test
    public void test1907() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1907");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Properties properties2 = new java.util.Properties(properties0);
        java.util.Properties properties3 = null;
        java.util.Properties properties4 = new java.util.Properties(properties3);
        java.lang.Object obj6 = properties2.put((java.lang.Object) properties4, (java.lang.Object) (short) 1);
        properties4.clear();
        int int8 = properties4.size();
        java.util.Properties properties9 = null;
        java.util.Properties properties10 = new java.util.Properties(properties9);
        java.util.Properties properties11 = new java.util.Properties(properties9);
        java.util.Properties properties12 = null;
        java.util.Properties properties13 = new java.util.Properties(properties12);
        java.lang.Object obj15 = properties11.put((java.lang.Object) properties13, (java.lang.Object) (short) 1);
        java.util.Properties properties16 = new java.util.Properties(properties13);
        java.util.Properties properties17 = new java.util.Properties(properties13);
        boolean boolean19 = properties4.remove((java.lang.Object) properties13, (java.lang.Object) 10.0f);
        java.util.Enumeration<java.lang.Object> objEnumeration20 = properties13.elements();
        java.util.Properties properties21 = null;
        java.util.Properties properties22 = new java.util.Properties(properties21);
        java.util.Properties properties23 = new java.util.Properties(properties21);
        java.util.Properties properties24 = null;
        java.util.Properties properties25 = new java.util.Properties(properties24);
        java.lang.Object obj27 = properties23.put((java.lang.Object) properties25, (java.lang.Object) (short) 1);
        properties25.clear();
        int int29 = properties25.size();
        java.util.Properties properties30 = new java.util.Properties(properties25);
        properties13.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties30);
        java.util.Enumeration<java.lang.Object> objEnumeration32 = properties13.keys();
        java.io.Reader reader33 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties13.load(reader33);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(obj6);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertNull(obj15);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(objEnumeration20);
        org.junit.Assert.assertNull(obj27);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 0 + "'", int29 == 0);
        org.junit.Assert.assertNotNull(objEnumeration32);
    }

    @Test
    public void test1908() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1908");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setDefaultJtaTimeout((long) (byte) 10);
        atomikosProperties0.setCheckpointInterval((long) (byte) 0);
        atomikosProperties0.setTransactionManagerUniqueName("");
        java.util.Properties properties7 = atomikosProperties0.asProperties();
        java.lang.String str8 = atomikosProperties0.getTransactionManagerUniqueName();
        atomikosProperties0.setDefaultJtaTimeout((long) (-1));
        java.lang.String str11 = atomikosProperties0.getService();
        atomikosProperties0.setLogBaseDir("{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.tm_unique_name=, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
        boolean boolean14 = atomikosProperties0.isSerialJtaTransactions();
        java.util.Properties properties15 = atomikosProperties0.asProperties();
        java.util.Properties properties16 = atomikosProperties0.asProperties();
        long long17 = atomikosProperties0.getMaxTimeout();
        boolean boolean18 = atomikosProperties0.isThreadedTwoPhaseCommit();
        java.lang.String str19 = atomikosProperties0.getService();
        atomikosProperties0.setLogBaseDir("{=}");
        org.junit.Assert.assertNotNull(properties7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "" + "'", str8, "");
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(properties15);
        org.junit.Assert.assertNotNull(properties16);
        org.junit.Assert.assertTrue("'" + long17 + "' != '" + 300000L + "'", long17 == 300000L);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNull(str19);
    }

    @Test
    public void test1909() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1909");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Properties properties2 = new java.util.Properties(properties0);
        java.util.Properties properties3 = null;
        java.util.Properties properties4 = new java.util.Properties(properties3);
        java.lang.Object obj6 = properties2.put((java.lang.Object) properties4, (java.lang.Object) (short) 1);
        boolean boolean7 = properties2.isEmpty();
        java.util.Properties properties8 = null;
        java.util.Properties properties9 = new java.util.Properties(properties8);
        java.util.Properties properties10 = new java.util.Properties(properties8);
        boolean boolean11 = properties2.containsKey((java.lang.Object) properties10);
        java.util.Properties properties12 = null;
        java.util.Properties properties13 = new java.util.Properties(properties12);
        java.util.Properties properties14 = new java.util.Properties(properties12);
        java.util.Properties properties15 = null;
        java.util.Properties properties16 = new java.util.Properties(properties15);
        java.lang.Object obj18 = properties14.put((java.lang.Object) properties16, (java.lang.Object) (short) 1);
        java.util.Properties properties20 = null;
        java.util.Properties properties21 = new java.util.Properties(properties20);
        java.util.Properties properties22 = new java.util.Properties(properties20);
        java.util.Properties properties23 = null;
        java.util.Properties properties24 = new java.util.Properties(properties23);
        java.lang.Object obj26 = properties22.put((java.lang.Object) properties24, (java.lang.Object) (short) 1);
        boolean boolean27 = properties16.remove((java.lang.Object) false, (java.lang.Object) (short) 1);
        java.util.Set<java.lang.String> strSet28 = properties16.stringPropertyNames();
        boolean boolean29 = properties10.containsKey((java.lang.Object) strSet28);
        java.util.Properties properties30 = null;
        java.util.Properties properties31 = new java.util.Properties(properties30);
        java.util.Properties properties32 = new java.util.Properties(properties30);
        java.util.Properties properties33 = null;
        java.util.Properties properties34 = new java.util.Properties(properties33);
        java.lang.Object obj36 = properties32.put((java.lang.Object) properties34, (java.lang.Object) (short) 1);
        properties34.clear();
        java.lang.String str39 = properties34.getProperty("");
        java.util.Properties properties40 = null;
        java.util.Properties properties41 = new java.util.Properties(properties40);
        java.util.Properties properties42 = new java.util.Properties(properties40);
        java.util.Properties properties43 = null;
        java.util.Properties properties44 = new java.util.Properties(properties43);
        java.lang.Object obj46 = properties42.put((java.lang.Object) properties44, (java.lang.Object) (short) 1);
        properties34.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties42);
        boolean boolean48 = properties10.containsKey((java.lang.Object) properties34);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties50 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties50.setThreadedTwoPhaseCommit(true);
        boolean boolean53 = atomikosProperties50.isEnableLogging();
        java.lang.Object obj54 = properties10.put((java.lang.Object) '4', (java.lang.Object) boolean53);
        java.util.Properties properties55 = new java.util.Properties(properties10);
        boolean boolean56 = properties10.isEmpty();
        java.util.Properties properties57 = new java.util.Properties(properties10);
        java.io.InputStream inputStream58 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties10.loadFromXML(inputStream58);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(obj6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNull(obj18);
        org.junit.Assert.assertNull(obj26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(strSet28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNull(obj36);
        org.junit.Assert.assertNull(str39);
        org.junit.Assert.assertNull(obj46);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertNull(obj54);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
    }

    @Test
    public void test1910() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1910");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setThreadedTwoPhaseCommit(true);
        atomikosProperties0.setMaxActives((int) (byte) 0);
        atomikosProperties0.setEnableLogging(true);
        atomikosProperties0.setMaxActives((int) (byte) 1);
        atomikosProperties0.setTransactionManagerUniqueName("hi!");
        java.lang.String str11 = atomikosProperties0.getLogBaseName();
        atomikosProperties0.setSerialJtaTransactions(false);
        boolean boolean14 = atomikosProperties0.isSerialJtaTransactions();
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "tmlog" + "'", str11, "tmlog");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
    }

    @Test
    public void test1911() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1911");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Properties properties2 = new java.util.Properties(properties0);
        java.util.Properties properties3 = null;
        java.util.Properties properties4 = new java.util.Properties(properties3);
        java.lang.Object obj6 = properties2.put((java.lang.Object) properties4, (java.lang.Object) (short) 1);
        java.util.Properties properties7 = new java.util.Properties(properties4);
        java.util.Properties properties8 = new java.util.Properties(properties4);
        java.util.Set<java.lang.Object> objSet9 = properties8.keySet();
        java.util.Properties properties10 = new java.util.Properties(properties8);
        java.util.Properties properties11 = null;
        java.util.Properties properties12 = new java.util.Properties(properties11);
        java.util.Properties properties13 = new java.util.Properties(properties11);
        java.util.Properties properties14 = null;
        java.util.Properties properties15 = new java.util.Properties(properties14);
        java.lang.Object obj17 = properties13.put((java.lang.Object) properties15, (java.lang.Object) (short) 1);
        java.util.Properties properties19 = null;
        java.util.Properties properties20 = new java.util.Properties(properties19);
        java.util.Properties properties21 = new java.util.Properties(properties19);
        java.util.Properties properties22 = null;
        java.util.Properties properties23 = new java.util.Properties(properties22);
        java.lang.Object obj25 = properties21.put((java.lang.Object) properties23, (java.lang.Object) (short) 1);
        boolean boolean26 = properties15.remove((java.lang.Object) false, (java.lang.Object) (short) 1);
        java.util.Set<java.lang.String> strSet27 = properties15.stringPropertyNames();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties28 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties28.setDefaultJtaTimeout((long) (byte) 10);
        atomikosProperties28.setCheckpointInterval((long) (byte) 0);
        atomikosProperties28.setTransactionManagerUniqueName("");
        boolean boolean35 = atomikosProperties28.isEnableLogging();
        atomikosProperties28.setSerialJtaTransactions(false);
        atomikosProperties28.setLogBaseDir("");
        java.util.Properties properties40 = null;
        java.util.Properties properties41 = new java.util.Properties(properties40);
        java.util.Properties properties42 = new java.util.Properties(properties40);
        java.util.Properties properties43 = null;
        java.util.Properties properties44 = new java.util.Properties(properties43);
        java.lang.Object obj46 = properties42.put((java.lang.Object) properties44, (java.lang.Object) (short) 1);
        java.util.Properties properties47 = new java.util.Properties(properties44);
        boolean boolean48 = properties15.remove((java.lang.Object) "", (java.lang.Object) properties47);
        java.util.Properties properties49 = null;
        java.util.Properties properties50 = new java.util.Properties(properties49);
        java.util.Properties properties51 = new java.util.Properties(properties49);
        java.lang.Object obj52 = properties51.clone();
        boolean boolean53 = properties15.contains(obj52);
        properties8.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties15);
        java.lang.Object obj56 = properties8.get((java.lang.Object) 10L);
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet57 = properties8.entrySet();
        int int58 = properties8.size();
        java.io.OutputStream outputStream59 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties8.storeToXML(outputStream59, "{com.atomikos.icatch.enable_logging=false, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=true, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(obj6);
        org.junit.Assert.assertNotNull(objSet9);
        org.junit.Assert.assertNull(obj17);
        org.junit.Assert.assertNull(obj25);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(strSet27);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertNull(obj46);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNotNull(obj52);
        org.junit.Assert.assertEquals(obj52.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj52), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj52), "{}");
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertNull(obj56);
        org.junit.Assert.assertNotNull(objEntrySet57);
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + 0 + "'", int58 == 0);
    }

    @Test
    public void test1912() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1912");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setDefaultJtaTimeout((long) (byte) 10);
        atomikosProperties0.setCheckpointInterval((long) (byte) 0);
        atomikosProperties0.setTransactionManagerUniqueName("");
        java.util.Properties properties7 = atomikosProperties0.asProperties();
        java.lang.String str8 = atomikosProperties0.getLogBaseName();
        atomikosProperties0.setCheckpointInterval(100L);
        atomikosProperties0.setLogBaseName("");
        atomikosProperties0.setCheckpointInterval((long) (byte) 1);
        java.util.Properties properties15 = atomikosProperties0.asProperties();
        java.util.Map<java.lang.Object, java.lang.Object> objMap16 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties15.putAll(objMap16);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(properties7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "tmlog" + "'", str8, "tmlog");
        org.junit.Assert.assertNotNull(properties15);
    }

    @Test
    public void test1913() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1913");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setDefaultJtaTimeout((long) (byte) 10);
        atomikosProperties0.setSerialJtaTransactions(false);
        atomikosProperties0.setMaxTimeout((long) (short) -1);
        long long7 = atomikosProperties0.getDefaultJtaTimeout();
        java.util.Properties properties8 = atomikosProperties0.asProperties();
        java.lang.String str9 = atomikosProperties0.getLogBaseDir();
        boolean boolean10 = atomikosProperties0.isSerialJtaTransactions();
        atomikosProperties0.setForceShutdownOnVmExit(true);
        boolean boolean13 = atomikosProperties0.isEnableLogging();
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + 10L + "'", long7 == 10L);
        org.junit.Assert.assertNotNull(properties8);
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
    }

    @Test
    public void test1914() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1914");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setDefaultJtaTimeout((long) (byte) 10);
        atomikosProperties0.setCheckpointInterval((long) (byte) 0);
        atomikosProperties0.setTransactionManagerUniqueName("");
        java.util.Properties properties7 = atomikosProperties0.asProperties();
        java.lang.String str8 = atomikosProperties0.getTransactionManagerUniqueName();
        atomikosProperties0.setDefaultJtaTimeout((long) (-1));
        java.util.Properties properties11 = atomikosProperties0.asProperties();
        java.util.Properties properties12 = atomikosProperties0.asProperties();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties13 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        int int14 = atomikosProperties13.getMaxActives();
        long long15 = atomikosProperties13.getMaxTimeout();
        java.util.Properties properties16 = atomikosProperties13.asProperties();
        java.util.Properties properties17 = atomikosProperties13.asProperties();
        atomikosProperties13.setLogBaseDir("{}");
        atomikosProperties13.setLogBaseDir("{tmlog=}");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties22 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties22.setDefaultJtaTimeout((long) (byte) 10);
        long long25 = atomikosProperties22.getDefaultJtaTimeout();
        atomikosProperties22.setTransactionManagerUniqueName("");
        java.lang.String str28 = atomikosProperties22.getTransactionManagerUniqueName();
        atomikosProperties22.setDefaultJtaTimeout((long) ' ');
        atomikosProperties22.setSerialJtaTransactions(true);
        java.lang.String str33 = atomikosProperties22.getTransactionManagerUniqueName();
        boolean boolean34 = atomikosProperties22.isEnableLogging();
        java.util.Properties properties35 = atomikosProperties22.asProperties();
        java.lang.Object obj36 = properties12.getOrDefault((java.lang.Object) "{tmlog=}", (java.lang.Object) properties35);
        org.junit.Assert.assertNotNull(properties7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "" + "'", str8, "");
        org.junit.Assert.assertNotNull(properties11);
        org.junit.Assert.assertNotNull(properties12);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 50 + "'", int14 == 50);
        org.junit.Assert.assertTrue("'" + long15 + "' != '" + 300000L + "'", long15 == 300000L);
        org.junit.Assert.assertNotNull(properties16);
        org.junit.Assert.assertNotNull(properties17);
        org.junit.Assert.assertTrue("'" + long25 + "' != '" + 10L + "'", long25 == 10L);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "" + "'", str28, "");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "" + "'", str33, "");
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertNotNull(properties35);
        org.junit.Assert.assertNotNull(obj36);
// flaky:         org.junit.Assert.assertEquals(obj36.toString(), "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=32, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.tm_unique_name=, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
// flaky:         org.junit.Assert.assertEquals(java.lang.String.valueOf(obj36), "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=32, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.tm_unique_name=, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
// flaky:         org.junit.Assert.assertEquals(java.util.Objects.toString(obj36), "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=32, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.tm_unique_name=, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
    }

    @Test
    public void test1915() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1915");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Properties properties2 = new java.util.Properties(properties0);
        java.util.Properties properties3 = null;
        java.util.Properties properties4 = new java.util.Properties(properties3);
        java.lang.Object obj6 = properties2.put((java.lang.Object) properties4, (java.lang.Object) (short) 1);
        properties4.clear();
        java.lang.String str9 = properties4.getProperty("");
        java.util.Properties properties10 = new java.util.Properties(properties4);
        java.util.Properties properties11 = null;
        java.util.Properties properties12 = new java.util.Properties(properties11);
        java.util.Properties properties13 = new java.util.Properties(properties11);
        java.util.Properties properties14 = null;
        java.util.Properties properties15 = new java.util.Properties(properties14);
        java.lang.Object obj17 = properties13.put((java.lang.Object) properties15, (java.lang.Object) (short) 1);
        boolean boolean18 = properties13.isEmpty();
        java.util.Properties properties19 = null;
        java.util.Properties properties20 = new java.util.Properties(properties19);
        java.util.Properties properties21 = new java.util.Properties(properties19);
        boolean boolean22 = properties13.containsKey((java.lang.Object) properties21);
        java.util.Properties properties23 = new java.util.Properties(properties21);
        java.util.Properties properties24 = null;
        java.util.Properties properties25 = new java.util.Properties(properties24);
        java.util.Properties properties26 = new java.util.Properties(properties24);
        java.util.Properties properties27 = null;
        java.util.Properties properties28 = new java.util.Properties(properties27);
        java.lang.Object obj30 = properties26.put((java.lang.Object) properties28, (java.lang.Object) (short) 1);
        boolean boolean31 = properties26.isEmpty();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties32 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties32.setDefaultJtaTimeout((long) (byte) 10);
        atomikosProperties32.setCheckpointInterval((long) (byte) 0);
        atomikosProperties32.setTransactionManagerUniqueName("");
        java.util.Properties properties39 = atomikosProperties32.asProperties();
        java.lang.Object obj40 = properties26.remove((java.lang.Object) properties39);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties41 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties41.setDefaultJtaTimeout((long) (byte) 10);
        atomikosProperties41.setCheckpointInterval((long) (byte) 0);
        atomikosProperties41.setTransactionManagerUniqueName("");
        java.lang.Object obj48 = properties39.remove((java.lang.Object) atomikosProperties41);
        java.util.Enumeration<java.lang.Object> objEnumeration49 = properties39.elements();
        java.lang.Object obj50 = properties23.get((java.lang.Object) properties39);
        java.lang.Object obj51 = properties23.clone();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties52 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        boolean boolean53 = atomikosProperties52.isForceShutdownOnVmExit();
        java.util.Properties properties54 = atomikosProperties52.asProperties();
        java.util.Properties properties55 = null;
        java.util.Properties properties56 = new java.util.Properties(properties55);
        java.util.Properties properties57 = new java.util.Properties(properties55);
        java.util.Properties properties58 = null;
        java.util.Properties properties59 = new java.util.Properties(properties58);
        java.lang.Object obj61 = properties57.put((java.lang.Object) properties59, (java.lang.Object) (short) 1);
        properties59.clear();
        int int63 = properties59.size();
        java.util.Properties properties64 = null;
        java.util.Properties properties65 = new java.util.Properties(properties64);
        java.util.Properties properties66 = new java.util.Properties(properties64);
        java.util.Properties properties67 = null;
        java.util.Properties properties68 = new java.util.Properties(properties67);
        java.lang.Object obj70 = properties66.put((java.lang.Object) properties68, (java.lang.Object) (short) 1);
        java.util.Properties properties71 = new java.util.Properties(properties68);
        java.util.Properties properties72 = new java.util.Properties(properties68);
        boolean boolean74 = properties59.remove((java.lang.Object) properties68, (java.lang.Object) 10.0f);
        boolean boolean75 = properties54.containsKey((java.lang.Object) 10.0f);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties77 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties77.setDefaultJtaTimeout((long) (byte) 10);
        atomikosProperties77.setCheckpointInterval((long) (byte) 0);
        atomikosProperties77.setEnableLogging(true);
        java.lang.Object obj84 = properties54.getOrDefault((java.lang.Object) (byte) 0, (java.lang.Object) true);
        java.util.Properties properties85 = new java.util.Properties(properties54);
        java.lang.Object obj86 = properties10.getOrDefault((java.lang.Object) properties23, (java.lang.Object) properties85);
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet87 = properties23.entrySet();
        java.util.Collection<java.lang.Object> objCollection88 = properties23.values();
        java.io.OutputStream outputStream89 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties23.store(outputStream89, "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.max_actives=0, com.atomikos.icatch.log_base_name=tmlog}");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(obj6);
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertNull(obj17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNull(obj30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(properties39);
        org.junit.Assert.assertNull(obj40);
        org.junit.Assert.assertNull(obj48);
        org.junit.Assert.assertNotNull(objEnumeration49);
        org.junit.Assert.assertNull(obj50);
        org.junit.Assert.assertNotNull(obj51);
        org.junit.Assert.assertEquals(obj51.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj51), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj51), "{}");
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertNotNull(properties54);
        org.junit.Assert.assertNull(obj61);
        org.junit.Assert.assertTrue("'" + int63 + "' != '" + 0 + "'", int63 == 0);
        org.junit.Assert.assertNull(obj70);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
        org.junit.Assert.assertEquals("'" + obj84 + "' != '" + true + "'", obj84, true);
        org.junit.Assert.assertNotNull(obj86);
        org.junit.Assert.assertEquals(obj86.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj86), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj86), "{}");
        org.junit.Assert.assertNotNull(objEntrySet87);
        org.junit.Assert.assertNotNull(objCollection88);
    }

    @Test
    public void test1916() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1916");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Properties properties2 = new java.util.Properties(properties0);
        java.util.Properties properties3 = null;
        java.util.Properties properties4 = new java.util.Properties(properties3);
        java.lang.Object obj6 = properties2.put((java.lang.Object) properties4, (java.lang.Object) (short) 1);
        boolean boolean7 = properties2.isEmpty();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties8 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties8.setDefaultJtaTimeout((long) (byte) 10);
        atomikosProperties8.setCheckpointInterval((long) (byte) 0);
        atomikosProperties8.setTransactionManagerUniqueName("");
        java.util.Properties properties15 = atomikosProperties8.asProperties();
        java.lang.Object obj16 = properties2.remove((java.lang.Object) properties15);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties17 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties17.setDefaultJtaTimeout((long) (byte) 10);
        atomikosProperties17.setCheckpointInterval((long) (byte) 0);
        atomikosProperties17.setTransactionManagerUniqueName("");
        java.lang.Object obj24 = properties15.remove((java.lang.Object) atomikosProperties17);
        java.util.Properties properties25 = null;
        java.util.Properties properties26 = new java.util.Properties(properties25);
        java.util.Properties properties27 = new java.util.Properties(properties25);
        java.util.Properties properties28 = null;
        java.util.Properties properties29 = new java.util.Properties(properties28);
        java.lang.Object obj31 = properties27.put((java.lang.Object) properties29, (java.lang.Object) (short) 1);
        java.util.Enumeration<java.lang.Object> objEnumeration32 = properties29.elements();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet33 = properties29.entrySet();
        java.util.Set<java.lang.Object> objSet34 = properties29.keySet();
        java.util.Properties properties35 = null;
        java.util.Properties properties36 = new java.util.Properties(properties35);
        java.util.Properties properties37 = new java.util.Properties(properties35);
        java.util.Properties properties38 = null;
        java.util.Properties properties39 = new java.util.Properties(properties38);
        java.lang.Object obj41 = properties37.put((java.lang.Object) properties39, (java.lang.Object) (short) 1);
        properties39.clear();
        int int43 = properties39.size();
        java.util.Properties properties44 = new java.util.Properties(properties39);
        java.util.Properties properties45 = null;
        java.util.Properties properties46 = new java.util.Properties(properties45);
        java.util.Properties properties47 = new java.util.Properties(properties45);
        java.util.Properties properties48 = null;
        java.util.Properties properties49 = new java.util.Properties(properties48);
        java.lang.Object obj51 = properties47.put((java.lang.Object) properties49, (java.lang.Object) (short) 1);
        properties49.clear();
        java.lang.String str54 = properties49.getProperty("");
        java.util.Properties properties55 = null;
        java.util.Properties properties56 = new java.util.Properties(properties55);
        java.util.Properties properties57 = new java.util.Properties(properties55);
        java.util.Properties properties58 = null;
        java.util.Properties properties59 = new java.util.Properties(properties58);
        java.lang.Object obj61 = properties57.put((java.lang.Object) properties59, (java.lang.Object) (short) 1);
        properties49.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties57);
        java.lang.Object obj63 = properties29.put((java.lang.Object) properties39, (java.lang.Object) properties57);
        java.util.Enumeration<java.lang.Object> objEnumeration64 = properties39.elements();
        java.lang.Object obj66 = properties15.put((java.lang.Object) properties39, (java.lang.Object) "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=0, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.tm_unique_name=, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
        java.util.Properties properties67 = new java.util.Properties(properties15);
        java.util.Properties properties68 = new java.util.Properties(properties67);
        java.util.Properties properties69 = null;
        java.util.Properties properties70 = new java.util.Properties(properties69);
        java.util.Properties properties71 = new java.util.Properties(properties69);
        boolean boolean73 = properties71.containsValue((java.lang.Object) (short) 100);
        java.util.Properties properties74 = null;
        java.util.Properties properties75 = new java.util.Properties(properties74);
        java.util.Properties properties76 = new java.util.Properties(properties74);
        java.util.Properties properties77 = null;
        java.util.Properties properties78 = new java.util.Properties(properties77);
        java.lang.Object obj80 = properties76.put((java.lang.Object) properties78, (java.lang.Object) (short) 1);
        java.util.Enumeration<java.lang.Object> objEnumeration81 = properties78.elements();
        java.lang.Object obj82 = properties71.remove((java.lang.Object) properties78);
        boolean boolean83 = properties78.isEmpty();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet84 = properties78.entrySet();
        java.util.Properties properties85 = new java.util.Properties(properties78);
        java.util.Set<java.lang.String> strSet86 = properties78.stringPropertyNames();
        boolean boolean87 = properties67.contains((java.lang.Object) properties78);
        org.junit.Assert.assertNull(obj6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(properties15);
        org.junit.Assert.assertNull(obj16);
        org.junit.Assert.assertNull(obj24);
        org.junit.Assert.assertNull(obj31);
        org.junit.Assert.assertNotNull(objEnumeration32);
        org.junit.Assert.assertNotNull(objEntrySet33);
        org.junit.Assert.assertNotNull(objSet34);
        org.junit.Assert.assertNull(obj41);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 0 + "'", int43 == 0);
        org.junit.Assert.assertNull(obj51);
        org.junit.Assert.assertNull(str54);
        org.junit.Assert.assertNull(obj61);
        org.junit.Assert.assertNull(obj63);
        org.junit.Assert.assertNotNull(objEnumeration64);
        org.junit.Assert.assertNull(obj66);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertNull(obj80);
        org.junit.Assert.assertNotNull(objEnumeration81);
        org.junit.Assert.assertNull(obj82);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + true + "'", boolean83 == true);
        org.junit.Assert.assertNotNull(objEntrySet84);
        org.junit.Assert.assertNotNull(strSet86);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + false + "'", boolean87 == false);
    }

    @Test
    public void test1917() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1917");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Properties properties2 = new java.util.Properties(properties0);
        java.util.Properties properties3 = null;
        java.util.Properties properties4 = new java.util.Properties(properties3);
        java.lang.Object obj6 = properties2.put((java.lang.Object) properties4, (java.lang.Object) (short) 1);
        boolean boolean7 = properties2.isEmpty();
        java.util.Properties properties8 = null;
        java.util.Properties properties9 = new java.util.Properties(properties8);
        java.util.Properties properties10 = new java.util.Properties(properties8);
        boolean boolean11 = properties2.containsKey((java.lang.Object) properties10);
        java.util.Properties properties12 = new java.util.Properties(properties10);
        java.util.Properties properties13 = null;
        java.util.Properties properties14 = new java.util.Properties(properties13);
        java.util.Properties properties15 = new java.util.Properties(properties13);
        java.util.Properties properties16 = null;
        java.util.Properties properties17 = new java.util.Properties(properties16);
        java.lang.Object obj19 = properties15.put((java.lang.Object) properties17, (java.lang.Object) (short) 1);
        boolean boolean20 = properties15.isEmpty();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties21 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties21.setDefaultJtaTimeout((long) (byte) 10);
        atomikosProperties21.setCheckpointInterval((long) (byte) 0);
        atomikosProperties21.setTransactionManagerUniqueName("");
        java.util.Properties properties28 = atomikosProperties21.asProperties();
        java.lang.Object obj29 = properties15.remove((java.lang.Object) properties28);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties30 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties30.setDefaultJtaTimeout((long) (byte) 10);
        atomikosProperties30.setCheckpointInterval((long) (byte) 0);
        atomikosProperties30.setTransactionManagerUniqueName("");
        java.lang.Object obj37 = properties28.remove((java.lang.Object) atomikosProperties30);
        java.util.Enumeration<java.lang.Object> objEnumeration38 = properties28.elements();
        java.lang.Object obj39 = properties12.get((java.lang.Object) properties28);
        java.util.Properties properties40 = new java.util.Properties(properties12);
        java.io.OutputStream outputStream41 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties40.store(outputStream41, "{{tmlog={com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=0, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.tm_unique_name=, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}, 4=true}={com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=0, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog, {}={}}}");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(obj6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNull(obj19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(properties28);
        org.junit.Assert.assertNull(obj29);
        org.junit.Assert.assertNull(obj37);
        org.junit.Assert.assertNotNull(objEnumeration38);
        org.junit.Assert.assertNull(obj39);
    }

    @Test
    public void test1918() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1918");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Properties properties2 = new java.util.Properties(properties0);
        java.util.Properties properties3 = null;
        java.util.Properties properties4 = new java.util.Properties(properties3);
        java.lang.Object obj6 = properties2.put((java.lang.Object) properties4, (java.lang.Object) (short) 1);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties7 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties7.setThreadedTwoPhaseCommit(true);
        atomikosProperties7.setMaxActives((int) (byte) 0);
        boolean boolean12 = properties2.containsValue((java.lang.Object) atomikosProperties7);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties13 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties13.setDefaultJtaTimeout((long) (byte) 10);
        atomikosProperties13.setSerialJtaTransactions(false);
        boolean boolean18 = properties2.containsValue((java.lang.Object) atomikosProperties13);
        java.lang.Object obj21 = properties2.putIfAbsent((java.lang.Object) 10, (java.lang.Object) (byte) -1);
        java.util.Properties properties22 = null;
        java.util.Properties properties23 = new java.util.Properties(properties22);
        java.util.Properties properties24 = new java.util.Properties(properties22);
        java.util.Properties properties25 = null;
        java.util.Properties properties26 = new java.util.Properties(properties25);
        java.lang.Object obj28 = properties24.put((java.lang.Object) properties26, (java.lang.Object) (short) 1);
        boolean boolean29 = properties24.isEmpty();
        properties24.clear();
        java.util.Properties properties31 = new java.util.Properties(properties24);
        properties2.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties24);
        java.io.Writer writer33 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties24.store(writer33, "{tmlog={com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=0, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.tm_unique_name=, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}, 4=true}");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(obj6);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNull(obj21);
        org.junit.Assert.assertNull(obj28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
    }

    @Test
    public void test1919() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1919");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setThreadedTwoPhaseCommit(true);
        atomikosProperties0.setMaxActives((int) '#');
        atomikosProperties0.setForceShutdownOnVmExit(true);
        java.lang.String str7 = atomikosProperties0.getLogBaseDir();
        java.util.Properties properties8 = atomikosProperties0.asProperties();
        java.util.Properties properties9 = null;
        java.util.Properties properties10 = new java.util.Properties(properties9);
        java.util.Properties properties11 = new java.util.Properties(properties9);
        java.util.Properties properties12 = null;
        java.util.Properties properties13 = new java.util.Properties(properties12);
        java.lang.Object obj15 = properties11.put((java.lang.Object) properties13, (java.lang.Object) (short) 1);
        boolean boolean16 = properties11.isEmpty();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties17 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties17.setDefaultJtaTimeout((long) (byte) 10);
        atomikosProperties17.setCheckpointInterval((long) (byte) 0);
        atomikosProperties17.setTransactionManagerUniqueName("");
        java.util.Properties properties24 = atomikosProperties17.asProperties();
        java.lang.Object obj25 = properties11.remove((java.lang.Object) properties24);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties26 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties26.setDefaultJtaTimeout((long) (byte) 10);
        atomikosProperties26.setCheckpointInterval((long) (byte) 0);
        atomikosProperties26.setTransactionManagerUniqueName("");
        java.lang.Object obj33 = properties24.remove((java.lang.Object) atomikosProperties26);
        boolean boolean34 = properties8.containsKey((java.lang.Object) properties24);
        java.util.Properties properties35 = new java.util.Properties(properties24);
        java.util.Properties properties36 = new java.util.Properties(properties35);
        java.io.PrintWriter printWriter37 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties36.list(printWriter37);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNotNull(properties8);
        org.junit.Assert.assertNull(obj15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(properties24);
        org.junit.Assert.assertNull(obj25);
        org.junit.Assert.assertNull(obj33);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
    }

    @Test
    public void test1920() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1920");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Properties properties2 = new java.util.Properties(properties0);
        boolean boolean4 = properties2.containsValue((java.lang.Object) (short) 100);
        java.util.Properties properties5 = new java.util.Properties(properties2);
        java.lang.String str7 = properties5.getProperty("hi!");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties8 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties8.setDefaultJtaTimeout((long) (byte) 10);
        long long11 = atomikosProperties8.getDefaultJtaTimeout();
        atomikosProperties8.setTransactionManagerUniqueName("hi!");
        atomikosProperties8.setLogBaseName("tmlog");
        boolean boolean16 = atomikosProperties8.isSerialJtaTransactions();
        java.util.Properties properties17 = atomikosProperties8.asProperties();
        boolean boolean18 = properties5.equals((java.lang.Object) atomikosProperties8);
        java.util.Set<java.lang.Object> objSet19 = properties5.keySet();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties20 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties20.setDefaultJtaTimeout((long) (byte) 10);
        boolean boolean23 = atomikosProperties20.isForceShutdownOnVmExit();
        atomikosProperties20.setCheckpointInterval(500L);
        java.lang.String str26 = atomikosProperties20.getService();
        java.util.Properties properties27 = null;
        java.util.Properties properties28 = new java.util.Properties(properties27);
        java.util.Properties properties29 = new java.util.Properties(properties27);
        boolean boolean31 = properties29.containsValue((java.lang.Object) (short) 100);
        java.util.Properties properties32 = null;
        java.util.Properties properties33 = new java.util.Properties(properties32);
        java.util.Properties properties34 = new java.util.Properties(properties32);
        java.util.Properties properties35 = null;
        java.util.Properties properties36 = new java.util.Properties(properties35);
        java.lang.Object obj38 = properties34.put((java.lang.Object) properties36, (java.lang.Object) (short) 1);
        java.util.Enumeration<java.lang.Object> objEnumeration39 = properties36.elements();
        java.lang.Object obj40 = properties29.remove((java.lang.Object) properties36);
        boolean boolean41 = properties36.isEmpty();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet42 = properties36.entrySet();
        java.util.Properties properties43 = new java.util.Properties(properties36);
        java.util.Properties properties44 = null;
        java.util.Properties properties45 = new java.util.Properties(properties44);
        java.util.Properties properties46 = new java.util.Properties(properties44);
        java.util.Properties properties47 = null;
        java.util.Properties properties48 = new java.util.Properties(properties47);
        java.lang.Object obj50 = properties46.put((java.lang.Object) properties48, (java.lang.Object) (short) 1);
        java.util.Properties properties51 = new java.util.Properties(properties48);
        java.util.Properties properties52 = new java.util.Properties(properties48);
        java.util.Set<java.lang.Object> objSet53 = properties52.keySet();
        java.util.Properties properties54 = null;
        java.util.Properties properties55 = new java.util.Properties(properties54);
        java.util.Properties properties56 = new java.util.Properties(properties54);
        java.util.Properties properties57 = null;
        java.util.Properties properties58 = new java.util.Properties(properties57);
        java.lang.Object obj60 = properties56.put((java.lang.Object) properties58, (java.lang.Object) (short) 1);
        properties58.clear();
        int int62 = properties58.size();
        java.util.Properties properties63 = null;
        java.util.Properties properties64 = new java.util.Properties(properties63);
        java.util.Properties properties65 = new java.util.Properties(properties63);
        java.util.Properties properties66 = null;
        java.util.Properties properties67 = new java.util.Properties(properties66);
        java.lang.Object obj69 = properties65.put((java.lang.Object) properties67, (java.lang.Object) (short) 1);
        java.util.Properties properties70 = new java.util.Properties(properties67);
        java.util.Properties properties71 = new java.util.Properties(properties67);
        boolean boolean73 = properties58.remove((java.lang.Object) properties67, (java.lang.Object) 10.0f);
        java.util.Enumeration<java.lang.Object> objEnumeration74 = properties67.elements();
        java.util.Properties properties75 = new java.util.Properties(properties67);
        java.lang.Object obj76 = properties43.putIfAbsent((java.lang.Object) objSet53, (java.lang.Object) properties67);
        java.util.Enumeration<java.lang.Object> objEnumeration77 = properties43.elements();
        java.util.Enumeration<java.lang.Object> objEnumeration78 = properties43.elements();
        java.lang.Object obj79 = properties5.getOrDefault((java.lang.Object) atomikosProperties20, (java.lang.Object) objEnumeration78);
        java.lang.Class<?> wildcardClass80 = properties5.getClass();
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertTrue("'" + long11 + "' != '" + 10L + "'", long11 == 10L);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(properties17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(objSet19);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNull(str26);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNull(obj38);
        org.junit.Assert.assertNotNull(objEnumeration39);
        org.junit.Assert.assertNull(obj40);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertNotNull(objEntrySet42);
        org.junit.Assert.assertNull(obj50);
        org.junit.Assert.assertNotNull(objSet53);
        org.junit.Assert.assertNull(obj60);
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + 0 + "'", int62 == 0);
        org.junit.Assert.assertNull(obj69);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertNotNull(objEnumeration74);
        org.junit.Assert.assertNull(obj76);
        org.junit.Assert.assertNotNull(objEnumeration77);
        org.junit.Assert.assertNotNull(objEnumeration78);
        org.junit.Assert.assertNotNull(obj79);
        org.junit.Assert.assertNotNull(wildcardClass80);
    }

    @Test
    public void test1921() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1921");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Properties properties2 = new java.util.Properties(properties0);
        java.util.Properties properties3 = null;
        java.util.Properties properties4 = new java.util.Properties(properties3);
        java.lang.Object obj6 = properties2.put((java.lang.Object) properties4, (java.lang.Object) (short) 1);
        java.util.Properties properties8 = null;
        java.util.Properties properties9 = new java.util.Properties(properties8);
        java.util.Properties properties10 = new java.util.Properties(properties8);
        java.util.Properties properties11 = null;
        java.util.Properties properties12 = new java.util.Properties(properties11);
        java.lang.Object obj14 = properties10.put((java.lang.Object) properties12, (java.lang.Object) (short) 1);
        boolean boolean15 = properties4.remove((java.lang.Object) false, (java.lang.Object) (short) 1);
        java.util.Set<java.lang.String> strSet16 = properties4.stringPropertyNames();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties17 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties17.setDefaultJtaTimeout((long) (byte) 10);
        long long20 = atomikosProperties17.getDefaultJtaTimeout();
        java.lang.Object obj21 = properties4.get((java.lang.Object) atomikosProperties17);
        java.util.Properties properties22 = null;
        java.util.Properties properties23 = new java.util.Properties(properties22);
        java.util.Properties properties24 = new java.util.Properties(properties22);
        java.util.Properties properties25 = null;
        java.util.Properties properties26 = new java.util.Properties(properties25);
        java.lang.Object obj28 = properties24.put((java.lang.Object) properties26, (java.lang.Object) (short) 1);
        java.util.Properties properties30 = null;
        java.util.Properties properties31 = new java.util.Properties(properties30);
        java.util.Properties properties32 = new java.util.Properties(properties30);
        java.util.Properties properties33 = null;
        java.util.Properties properties34 = new java.util.Properties(properties33);
        java.lang.Object obj36 = properties32.put((java.lang.Object) properties34, (java.lang.Object) (short) 1);
        boolean boolean37 = properties26.remove((java.lang.Object) false, (java.lang.Object) (short) 1);
        java.lang.Object obj39 = properties26.remove((java.lang.Object) '#');
        java.util.Set<java.lang.Object> objSet40 = properties26.keySet();
        boolean boolean41 = properties4.containsKey((java.lang.Object) properties26);
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet42 = properties4.entrySet();
        java.util.Properties properties43 = null;
        java.util.Properties properties44 = new java.util.Properties(properties43);
        java.util.Properties properties45 = new java.util.Properties(properties43);
        java.util.Properties properties46 = null;
        java.util.Properties properties47 = new java.util.Properties(properties46);
        java.lang.Object obj49 = properties45.put((java.lang.Object) properties47, (java.lang.Object) (short) 1);
        boolean boolean50 = properties45.isEmpty();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties51 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties51.setDefaultJtaTimeout((long) (byte) 10);
        atomikosProperties51.setCheckpointInterval((long) (byte) 0);
        atomikosProperties51.setTransactionManagerUniqueName("");
        java.util.Properties properties58 = atomikosProperties51.asProperties();
        java.lang.Object obj59 = properties45.remove((java.lang.Object) properties58);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties60 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties60.setDefaultJtaTimeout((long) (byte) 10);
        atomikosProperties60.setCheckpointInterval((long) (byte) 0);
        atomikosProperties60.setTransactionManagerUniqueName("");
        java.util.Properties properties67 = atomikosProperties60.asProperties();
        java.lang.String str68 = atomikosProperties60.getTransactionManagerUniqueName();
        atomikosProperties60.setDefaultJtaTimeout((long) (-1));
        java.lang.String str71 = atomikosProperties60.getService();
        java.util.Properties properties72 = null;
        java.util.Properties properties73 = new java.util.Properties(properties72);
        java.util.Properties properties74 = new java.util.Properties(properties72);
        boolean boolean76 = properties74.containsValue((java.lang.Object) (short) 100);
        java.util.Properties properties77 = null;
        java.util.Properties properties78 = new java.util.Properties(properties77);
        java.util.Properties properties79 = new java.util.Properties(properties77);
        java.util.Properties properties80 = null;
        java.util.Properties properties81 = new java.util.Properties(properties80);
        java.lang.Object obj83 = properties79.put((java.lang.Object) properties81, (java.lang.Object) (short) 1);
        java.util.Enumeration<java.lang.Object> objEnumeration84 = properties81.elements();
        java.lang.Object obj85 = properties74.remove((java.lang.Object) properties81);
        boolean boolean86 = properties81.isEmpty();
        boolean boolean87 = properties4.replace((java.lang.Object) properties58, (java.lang.Object) atomikosProperties60, (java.lang.Object) boolean86);
        java.lang.String str88 = atomikosProperties60.getService();
        int int89 = atomikosProperties60.getMaxActives();
        boolean boolean90 = atomikosProperties60.isForceShutdownOnVmExit();
        atomikosProperties60.setDefaultJtaTimeout((long) ' ');
        org.junit.Assert.assertNull(obj6);
        org.junit.Assert.assertNull(obj14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(strSet16);
        org.junit.Assert.assertTrue("'" + long20 + "' != '" + 10L + "'", long20 == 10L);
        org.junit.Assert.assertNull(obj21);
        org.junit.Assert.assertNull(obj28);
        org.junit.Assert.assertNull(obj36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNull(obj39);
        org.junit.Assert.assertNotNull(objSet40);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(objEntrySet42);
        org.junit.Assert.assertNull(obj49);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertNotNull(properties58);
        org.junit.Assert.assertNull(obj59);
        org.junit.Assert.assertNotNull(properties67);
        org.junit.Assert.assertEquals("'" + str68 + "' != '" + "" + "'", str68, "");
        org.junit.Assert.assertNull(str71);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
        org.junit.Assert.assertNull(obj83);
        org.junit.Assert.assertNotNull(objEnumeration84);
        org.junit.Assert.assertNull(obj85);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + true + "'", boolean86 == true);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + false + "'", boolean87 == false);
        org.junit.Assert.assertNull(str88);
        org.junit.Assert.assertTrue("'" + int89 + "' != '" + 50 + "'", int89 == 50);
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + false + "'", boolean90 == false);
    }

    @Test
    public void test1922() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1922");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Properties properties2 = new java.util.Properties(properties0);
        java.util.Properties properties3 = null;
        java.util.Properties properties4 = new java.util.Properties(properties3);
        java.lang.Object obj6 = properties2.put((java.lang.Object) properties4, (java.lang.Object) (short) 1);
        properties4.clear();
        int int8 = properties4.size();
        java.util.Properties properties9 = null;
        java.util.Properties properties10 = new java.util.Properties(properties9);
        java.util.Properties properties11 = new java.util.Properties(properties9);
        java.util.Properties properties12 = null;
        java.util.Properties properties13 = new java.util.Properties(properties12);
        java.lang.Object obj15 = properties11.put((java.lang.Object) properties13, (java.lang.Object) (short) 1);
        java.util.Properties properties16 = new java.util.Properties(properties13);
        java.util.Properties properties17 = new java.util.Properties(properties13);
        boolean boolean19 = properties4.remove((java.lang.Object) properties13, (java.lang.Object) 10.0f);
        java.util.Enumeration<java.lang.Object> objEnumeration20 = properties13.elements();
        java.util.Properties properties21 = new java.util.Properties(properties13);
        java.util.Properties properties22 = null;
        java.util.Properties properties23 = new java.util.Properties(properties22);
        java.util.Properties properties24 = new java.util.Properties(properties22);
        java.lang.Object obj25 = properties24.clone();
        java.lang.Object obj28 = properties24.setProperty("tmlog", "");
        properties13.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties24);
        java.util.Enumeration<java.lang.Object> objEnumeration30 = properties24.elements();
        java.util.Properties properties31 = new java.util.Properties(properties24);
        java.io.OutputStream outputStream32 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties31.save(outputStream32, "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=52, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.tm_unique_name=, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(obj6);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertNull(obj15);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(objEnumeration20);
        org.junit.Assert.assertNotNull(obj25);
        org.junit.Assert.assertEquals(obj25.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj25), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj25), "{}");
        org.junit.Assert.assertNull(obj28);
        org.junit.Assert.assertNotNull(objEnumeration30);
    }

    @Test
    public void test1923() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1923");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Properties properties2 = new java.util.Properties(properties0);
        boolean boolean4 = properties2.containsValue((java.lang.Object) (short) 100);
        java.util.Properties properties5 = null;
        java.util.Properties properties6 = new java.util.Properties(properties5);
        java.util.Properties properties7 = new java.util.Properties(properties5);
        java.util.Properties properties8 = null;
        java.util.Properties properties9 = new java.util.Properties(properties8);
        java.lang.Object obj11 = properties7.put((java.lang.Object) properties9, (java.lang.Object) (short) 1);
        java.util.Enumeration<java.lang.Object> objEnumeration12 = properties9.elements();
        java.lang.Object obj13 = properties2.remove((java.lang.Object) properties9);
        java.util.Properties properties14 = null;
        java.util.Properties properties15 = new java.util.Properties(properties14);
        java.util.Properties properties16 = new java.util.Properties(properties14);
        java.util.Properties properties17 = null;
        java.util.Properties properties18 = new java.util.Properties(properties17);
        java.lang.Object obj20 = properties16.put((java.lang.Object) properties18, (java.lang.Object) (short) 1);
        java.util.Enumeration<java.lang.Object> objEnumeration21 = properties18.elements();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet22 = properties18.entrySet();
        java.util.Set<java.lang.Object> objSet23 = properties18.keySet();
        java.util.Properties properties24 = null;
        java.util.Properties properties25 = new java.util.Properties(properties24);
        java.util.Properties properties26 = new java.util.Properties(properties24);
        java.util.Properties properties27 = null;
        java.util.Properties properties28 = new java.util.Properties(properties27);
        java.lang.Object obj30 = properties26.put((java.lang.Object) properties28, (java.lang.Object) (short) 1);
        properties28.clear();
        int int32 = properties28.size();
        java.util.Properties properties33 = new java.util.Properties(properties28);
        java.util.Properties properties34 = null;
        java.util.Properties properties35 = new java.util.Properties(properties34);
        java.util.Properties properties36 = new java.util.Properties(properties34);
        java.util.Properties properties37 = null;
        java.util.Properties properties38 = new java.util.Properties(properties37);
        java.lang.Object obj40 = properties36.put((java.lang.Object) properties38, (java.lang.Object) (short) 1);
        properties38.clear();
        java.lang.String str43 = properties38.getProperty("");
        java.util.Properties properties44 = null;
        java.util.Properties properties45 = new java.util.Properties(properties44);
        java.util.Properties properties46 = new java.util.Properties(properties44);
        java.util.Properties properties47 = null;
        java.util.Properties properties48 = new java.util.Properties(properties47);
        java.lang.Object obj50 = properties46.put((java.lang.Object) properties48, (java.lang.Object) (short) 1);
        properties38.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties46);
        java.lang.Object obj52 = properties18.put((java.lang.Object) properties28, (java.lang.Object) properties46);
        java.util.Properties properties53 = null;
        java.util.Properties properties54 = new java.util.Properties(properties53);
        java.util.Properties properties55 = new java.util.Properties(properties53);
        java.util.Properties properties56 = null;
        java.util.Properties properties57 = new java.util.Properties(properties56);
        java.lang.Object obj59 = properties55.put((java.lang.Object) properties57, (java.lang.Object) (short) 1);
        java.util.Properties properties60 = new java.util.Properties(properties57);
        java.util.Properties properties61 = new java.util.Properties(properties57);
        java.util.Set<java.lang.Object> objSet62 = properties61.keySet();
        java.lang.Object obj63 = properties2.replace((java.lang.Object) properties18, (java.lang.Object) objSet62);
        java.util.Properties properties64 = null;
        java.util.Properties properties65 = new java.util.Properties(properties64);
        java.util.Properties properties66 = new java.util.Properties(properties64);
        java.util.Properties properties67 = null;
        java.util.Properties properties68 = new java.util.Properties(properties67);
        java.lang.Object obj70 = properties66.put((java.lang.Object) properties68, (java.lang.Object) (short) 1);
        boolean boolean71 = properties66.isEmpty();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties72 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties72.setDefaultJtaTimeout((long) (byte) 10);
        atomikosProperties72.setCheckpointInterval((long) (byte) 0);
        atomikosProperties72.setTransactionManagerUniqueName("");
        java.util.Properties properties79 = atomikosProperties72.asProperties();
        java.lang.Object obj80 = properties66.remove((java.lang.Object) properties79);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties81 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties81.setDefaultJtaTimeout((long) (byte) 10);
        atomikosProperties81.setCheckpointInterval((long) (byte) 0);
        atomikosProperties81.setTransactionManagerUniqueName("");
        java.lang.Object obj88 = properties79.remove((java.lang.Object) atomikosProperties81);
        java.lang.String str89 = properties79.toString();
        java.lang.Object obj90 = properties2.get((java.lang.Object) str89);
        int int91 = properties2.size();
        java.io.InputStream inputStream92 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties2.loadFromXML(inputStream92);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNull(obj11);
        org.junit.Assert.assertNotNull(objEnumeration12);
        org.junit.Assert.assertNull(obj13);
        org.junit.Assert.assertNull(obj20);
        org.junit.Assert.assertNotNull(objEnumeration21);
        org.junit.Assert.assertNotNull(objEntrySet22);
        org.junit.Assert.assertNotNull(objSet23);
        org.junit.Assert.assertNull(obj30);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 0 + "'", int32 == 0);
        org.junit.Assert.assertNull(obj40);
        org.junit.Assert.assertNull(str43);
        org.junit.Assert.assertNull(obj50);
        org.junit.Assert.assertNull(obj52);
        org.junit.Assert.assertNull(obj59);
        org.junit.Assert.assertNotNull(objSet62);
        org.junit.Assert.assertNull(obj63);
        org.junit.Assert.assertNull(obj70);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertNotNull(properties79);
        org.junit.Assert.assertNull(obj80);
        org.junit.Assert.assertNull(obj88);
// flaky:         org.junit.Assert.assertEquals("'" + str89 + "' != '" + "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=0, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.tm_unique_name=, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}" + "'", str89, "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=0, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.tm_unique_name=, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
        org.junit.Assert.assertNull(obj90);
        org.junit.Assert.assertTrue("'" + int91 + "' != '" + 0 + "'", int91 == 0);
    }

    @Test
    public void test1924() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1924");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Properties properties2 = new java.util.Properties(properties0);
        java.util.Properties properties3 = null;
        java.util.Properties properties4 = new java.util.Properties(properties3);
        java.lang.Object obj6 = properties2.put((java.lang.Object) properties4, (java.lang.Object) (short) 1);
        java.util.Properties properties8 = null;
        java.util.Properties properties9 = new java.util.Properties(properties8);
        java.util.Properties properties10 = new java.util.Properties(properties8);
        java.util.Properties properties11 = null;
        java.util.Properties properties12 = new java.util.Properties(properties11);
        java.lang.Object obj14 = properties10.put((java.lang.Object) properties12, (java.lang.Object) (short) 1);
        boolean boolean15 = properties4.remove((java.lang.Object) false, (java.lang.Object) (short) 1);
        java.util.Set<java.lang.String> strSet16 = properties4.stringPropertyNames();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties17 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties17.setDefaultJtaTimeout((long) (byte) 10);
        atomikosProperties17.setCheckpointInterval((long) (byte) 0);
        atomikosProperties17.setTransactionManagerUniqueName("");
        boolean boolean24 = atomikosProperties17.isEnableLogging();
        atomikosProperties17.setSerialJtaTransactions(false);
        atomikosProperties17.setLogBaseDir("");
        java.util.Properties properties29 = null;
        java.util.Properties properties30 = new java.util.Properties(properties29);
        java.util.Properties properties31 = new java.util.Properties(properties29);
        java.util.Properties properties32 = null;
        java.util.Properties properties33 = new java.util.Properties(properties32);
        java.lang.Object obj35 = properties31.put((java.lang.Object) properties33, (java.lang.Object) (short) 1);
        java.util.Properties properties36 = new java.util.Properties(properties33);
        boolean boolean37 = properties4.remove((java.lang.Object) "", (java.lang.Object) properties36);
        java.util.Properties properties38 = null;
        java.util.Properties properties39 = new java.util.Properties(properties38);
        java.util.Properties properties40 = new java.util.Properties(properties38);
        java.lang.Object obj41 = properties40.clone();
        boolean boolean42 = properties4.contains(obj41);
        java.util.Collection<java.lang.Object> objCollection43 = properties4.values();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties44 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties44.setDefaultJtaTimeout((long) (byte) 10);
        atomikosProperties44.setCheckpointInterval((long) (byte) 0);
        atomikosProperties44.setTransactionManagerUniqueName("");
        java.util.Properties properties51 = atomikosProperties44.asProperties();
        java.lang.String str52 = atomikosProperties44.getLogBaseName();
        atomikosProperties44.setCheckpointInterval(100L);
        java.lang.String str55 = atomikosProperties44.getTransactionManagerUniqueName();
        atomikosProperties44.setLogBaseName("{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.tm_unique_name=, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
        atomikosProperties44.setThreadedTwoPhaseCommit(true);
        atomikosProperties44.setEnableLogging(false);
        java.lang.Object obj62 = properties4.get((java.lang.Object) atomikosProperties44);
        int int63 = properties4.size();
        java.util.Properties properties64 = new java.util.Properties(properties4);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties65 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties65.setDefaultJtaTimeout((long) (byte) 10);
        long long68 = atomikosProperties65.getDefaultJtaTimeout();
        atomikosProperties65.setTransactionManagerUniqueName("");
        atomikosProperties65.setCheckpointInterval(100L);
        java.lang.Object obj73 = properties64.remove((java.lang.Object) 100L);
        java.lang.Class<?> wildcardClass74 = properties64.getClass();
        org.junit.Assert.assertNull(obj6);
        org.junit.Assert.assertNull(obj14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(strSet16);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNull(obj35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(obj41);
        org.junit.Assert.assertEquals(obj41.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj41), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj41), "{}");
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(objCollection43);
        org.junit.Assert.assertNotNull(properties51);
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "tmlog" + "'", str52, "tmlog");
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "" + "'", str55, "");
        org.junit.Assert.assertNull(obj62);
        org.junit.Assert.assertTrue("'" + int63 + "' != '" + 0 + "'", int63 == 0);
        org.junit.Assert.assertTrue("'" + long68 + "' != '" + 10L + "'", long68 == 10L);
        org.junit.Assert.assertNull(obj73);
        org.junit.Assert.assertNotNull(wildcardClass74);
    }

    @Test
    public void test1925() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1925");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setThreadedTwoPhaseCommit(true);
        atomikosProperties0.setMaxActives((int) (byte) 0);
        atomikosProperties0.setEnableLogging(true);
        atomikosProperties0.setForceShutdownOnVmExit(false);
        java.util.Properties properties9 = atomikosProperties0.asProperties();
        boolean boolean10 = atomikosProperties0.isThreadedTwoPhaseCommit();
        int int11 = atomikosProperties0.getMaxActives();
        java.lang.String str12 = atomikosProperties0.getLogBaseDir();
        org.junit.Assert.assertNotNull(properties9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertNull(str12);
    }

    @Test
    public void test1926() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1926");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setDefaultJtaTimeout((long) (byte) 10);
        atomikosProperties0.setCheckpointInterval((long) (byte) 0);
        atomikosProperties0.setTransactionManagerUniqueName("");
        java.util.Properties properties7 = atomikosProperties0.asProperties();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties8 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties8.setThreadedTwoPhaseCommit(true);
        atomikosProperties8.setMaxActives((int) '#');
        atomikosProperties8.setForceShutdownOnVmExit(true);
        java.lang.String str15 = atomikosProperties8.getLogBaseDir();
        java.lang.Object obj16 = properties7.remove((java.lang.Object) atomikosProperties8);
        long long17 = atomikosProperties8.getDefaultJtaTimeout();
        java.util.Properties properties18 = atomikosProperties8.asProperties();
        java.util.Set<java.lang.Object> objSet19 = properties18.keySet();
        org.junit.Assert.assertNotNull(properties7);
        org.junit.Assert.assertNull(str15);
        org.junit.Assert.assertNull(obj16);
        org.junit.Assert.assertTrue("'" + long17 + "' != '" + 10000L + "'", long17 == 10000L);
        org.junit.Assert.assertNotNull(properties18);
        org.junit.Assert.assertNotNull(objSet19);
    }

    @Test
    public void test1927() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1927");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setDefaultJtaTimeout((long) (byte) 10);
        long long3 = atomikosProperties0.getDefaultJtaTimeout();
        atomikosProperties0.setTransactionManagerUniqueName("");
        boolean boolean6 = atomikosProperties0.isEnableLogging();
        java.lang.String str7 = atomikosProperties0.getTransactionManagerUniqueName();
        long long8 = atomikosProperties0.getCheckpointInterval();
        java.util.Properties properties9 = atomikosProperties0.asProperties();
        atomikosProperties0.setMaxActives((-1));
        atomikosProperties0.setCheckpointInterval(500L);
        org.junit.Assert.assertTrue("'" + long3 + "' != '" + 10L + "'", long3 == 10L);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertTrue("'" + long8 + "' != '" + 500L + "'", long8 == 500L);
        org.junit.Assert.assertNotNull(properties9);
    }

    @Test
    public void test1928() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1928");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setDefaultJtaTimeout((long) (byte) 10);
        atomikosProperties0.setCheckpointInterval((long) (byte) 0);
        atomikosProperties0.setTransactionManagerUniqueName("");
        java.util.Properties properties7 = atomikosProperties0.asProperties();
        java.lang.String str8 = atomikosProperties0.getTransactionManagerUniqueName();
        java.util.Properties properties9 = atomikosProperties0.asProperties();
        java.util.Properties properties10 = new java.util.Properties(properties9);
        java.util.Properties properties11 = null;
        java.util.Properties properties12 = new java.util.Properties(properties11);
        java.util.Properties properties13 = new java.util.Properties(properties11);
        java.util.Properties properties14 = null;
        java.util.Properties properties15 = new java.util.Properties(properties14);
        java.lang.Object obj17 = properties13.put((java.lang.Object) properties15, (java.lang.Object) (short) 1);
        java.util.Properties properties19 = null;
        java.util.Properties properties20 = new java.util.Properties(properties19);
        java.util.Properties properties21 = new java.util.Properties(properties19);
        java.util.Properties properties22 = null;
        java.util.Properties properties23 = new java.util.Properties(properties22);
        java.lang.Object obj25 = properties21.put((java.lang.Object) properties23, (java.lang.Object) (short) 1);
        boolean boolean26 = properties15.remove((java.lang.Object) false, (java.lang.Object) (short) 1);
        java.util.Set<java.lang.String> strSet27 = properties15.stringPropertyNames();
        java.lang.Object obj28 = properties15.clone();
        java.util.Properties properties29 = new java.util.Properties(properties15);
        java.lang.Object obj30 = properties9.remove((java.lang.Object) properties29);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties31 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties31.setDefaultJtaTimeout((long) (byte) 10);
        atomikosProperties31.setCheckpointInterval((long) (byte) 0);
        atomikosProperties31.setTransactionManagerUniqueName("");
        boolean boolean38 = atomikosProperties31.isEnableLogging();
        java.util.Properties properties39 = atomikosProperties31.asProperties();
        java.util.Enumeration<java.lang.Object> objEnumeration40 = properties39.keys();
        java.util.Properties properties41 = null;
        java.util.Properties properties42 = new java.util.Properties(properties41);
        java.util.Properties properties43 = new java.util.Properties(properties41);
        java.util.Properties properties44 = null;
        java.util.Properties properties45 = new java.util.Properties(properties44);
        java.lang.Object obj47 = properties43.put((java.lang.Object) properties45, (java.lang.Object) (short) 1);
        boolean boolean48 = properties43.isEmpty();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties49 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties49.setDefaultJtaTimeout((long) (byte) 10);
        atomikosProperties49.setCheckpointInterval((long) (byte) 0);
        atomikosProperties49.setTransactionManagerUniqueName("");
        java.util.Properties properties56 = atomikosProperties49.asProperties();
        java.lang.Object obj57 = properties43.remove((java.lang.Object) properties56);
        boolean boolean58 = properties39.equals((java.lang.Object) properties56);
        java.util.Enumeration<?> wildcardEnumeration59 = properties39.propertyNames();
        boolean boolean60 = properties9.equals((java.lang.Object) wildcardEnumeration59);
        org.junit.Assert.assertNotNull(properties7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "" + "'", str8, "");
        org.junit.Assert.assertNotNull(properties9);
        org.junit.Assert.assertNull(obj17);
        org.junit.Assert.assertNull(obj25);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(strSet27);
        org.junit.Assert.assertNotNull(obj28);
        org.junit.Assert.assertEquals(obj28.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj28), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj28), "{}");
        org.junit.Assert.assertNull(obj30);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertNotNull(properties39);
        org.junit.Assert.assertNotNull(objEnumeration40);
        org.junit.Assert.assertNull(obj47);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNotNull(properties56);
        org.junit.Assert.assertNull(obj57);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertNotNull(wildcardEnumeration59);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
    }

    @Test
    public void test1929() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1929");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setDefaultJtaTimeout((long) (byte) 10);
        atomikosProperties0.setCheckpointInterval((long) (byte) 0);
        atomikosProperties0.setTransactionManagerUniqueName("");
        java.util.Properties properties7 = atomikosProperties0.asProperties();
        java.lang.String str8 = atomikosProperties0.getTransactionManagerUniqueName();
        atomikosProperties0.setDefaultJtaTimeout((long) (-1));
        java.lang.String str11 = atomikosProperties0.getTransactionManagerUniqueName();
        java.util.Properties properties12 = atomikosProperties0.asProperties();
        atomikosProperties0.setCheckpointInterval((long) 9);
        atomikosProperties0.setMaxTimeout((long) 97);
        boolean boolean17 = atomikosProperties0.isForceShutdownOnVmExit();
        org.junit.Assert.assertNotNull(properties7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "" + "'", str8, "");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertNotNull(properties12);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
    }

    @Test
    public void test1930() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1930");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Properties properties2 = new java.util.Properties(properties0);
        boolean boolean4 = properties2.containsValue((java.lang.Object) (short) 100);
        java.util.Properties properties5 = new java.util.Properties(properties2);
        java.lang.String str7 = properties5.getProperty("hi!");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties8 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties8.setDefaultJtaTimeout((long) (byte) 10);
        long long11 = atomikosProperties8.getDefaultJtaTimeout();
        atomikosProperties8.setTransactionManagerUniqueName("hi!");
        atomikosProperties8.setLogBaseName("tmlog");
        boolean boolean16 = atomikosProperties8.isSerialJtaTransactions();
        java.util.Properties properties17 = atomikosProperties8.asProperties();
        boolean boolean18 = properties5.equals((java.lang.Object) atomikosProperties8);
        java.io.OutputStream outputStream19 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties5.storeToXML(outputStream19, "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=true, com.atomikos.icatch.checkpoint_interval=0, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.tm_unique_name=, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}", "{{tmlog={com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=0, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.tm_unique_name=, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}, 4=true}={com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=0, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog, {}={}}}");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertTrue("'" + long11 + "' != '" + 10L + "'", long11 == 10L);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(properties17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
    }

    @Test
    public void test1931() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1931");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setDefaultJtaTimeout((long) (byte) 10);
        long long3 = atomikosProperties0.getDefaultJtaTimeout();
        atomikosProperties0.setTransactionManagerUniqueName("");
        boolean boolean6 = atomikosProperties0.isEnableLogging();
        atomikosProperties0.setDefaultJtaTimeout((long) '4');
        java.lang.String str9 = atomikosProperties0.getTransactionManagerUniqueName();
        atomikosProperties0.setForceShutdownOnVmExit(true);
        atomikosProperties0.setCheckpointInterval(35L);
        org.junit.Assert.assertTrue("'" + long3 + "' != '" + 10L + "'", long3 == 10L);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "" + "'", str9, "");
    }

    @Test
    public void test1932() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1932");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Properties properties2 = new java.util.Properties(properties0);
        java.util.Properties properties3 = null;
        java.util.Properties properties4 = new java.util.Properties(properties3);
        java.lang.Object obj6 = properties2.put((java.lang.Object) properties4, (java.lang.Object) (short) 1);
        properties4.clear();
        java.lang.String str9 = properties4.getProperty("");
        java.util.Properties properties10 = null;
        java.util.Properties properties11 = new java.util.Properties(properties10);
        java.util.Properties properties12 = new java.util.Properties(properties10);
        java.util.Properties properties13 = null;
        java.util.Properties properties14 = new java.util.Properties(properties13);
        java.lang.Object obj16 = properties12.put((java.lang.Object) properties14, (java.lang.Object) (short) 1);
        properties4.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties12);
        java.util.Properties properties18 = null;
        java.util.Properties properties19 = new java.util.Properties(properties18);
        java.util.Properties properties20 = new java.util.Properties(properties18);
        boolean boolean22 = properties20.containsValue((java.lang.Object) (short) 100);
        java.util.Properties properties23 = null;
        java.util.Properties properties24 = new java.util.Properties(properties23);
        java.util.Properties properties25 = new java.util.Properties(properties23);
        java.util.Properties properties26 = null;
        java.util.Properties properties27 = new java.util.Properties(properties26);
        java.lang.Object obj29 = properties25.put((java.lang.Object) properties27, (java.lang.Object) (short) 1);
        java.util.Enumeration<java.lang.Object> objEnumeration30 = properties27.elements();
        java.lang.Object obj31 = properties20.remove((java.lang.Object) properties27);
        java.lang.Object obj34 = properties27.setProperty("", "");
        java.util.Properties properties35 = null;
        java.util.Properties properties36 = new java.util.Properties(properties35);
        java.util.Properties properties37 = new java.util.Properties(properties35);
        java.util.Properties properties38 = null;
        java.util.Properties properties39 = new java.util.Properties(properties38);
        java.lang.Object obj41 = properties37.put((java.lang.Object) properties39, (java.lang.Object) (short) 1);
        java.util.Properties properties43 = null;
        java.util.Properties properties44 = new java.util.Properties(properties43);
        java.util.Properties properties45 = new java.util.Properties(properties43);
        java.util.Properties properties46 = null;
        java.util.Properties properties47 = new java.util.Properties(properties46);
        java.lang.Object obj49 = properties45.put((java.lang.Object) properties47, (java.lang.Object) (short) 1);
        boolean boolean50 = properties39.remove((java.lang.Object) false, (java.lang.Object) (short) 1);
        java.util.Properties properties51 = new java.util.Properties(properties39);
        properties27.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties51);
        java.lang.Object obj55 = properties51.setProperty("hi!", "hi!");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties56 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties56.setDefaultJtaTimeout((long) (byte) 10);
        atomikosProperties56.setCheckpointInterval((long) (byte) 0);
        atomikosProperties56.setTransactionManagerUniqueName("");
        java.util.Properties properties63 = atomikosProperties56.asProperties();
        java.lang.String str64 = atomikosProperties56.getTransactionManagerUniqueName();
        atomikosProperties56.setDefaultJtaTimeout((long) (-1));
        java.lang.Object obj67 = properties12.replace((java.lang.Object) "hi!", (java.lang.Object) atomikosProperties56);
        java.util.Properties properties68 = atomikosProperties56.asProperties();
        java.util.Properties properties69 = new java.util.Properties(properties68);
        properties69.clear();
        java.util.Properties properties71 = new java.util.Properties(properties69);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties72 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties72.setDefaultJtaTimeout((long) (byte) 10);
        long long75 = atomikosProperties72.getDefaultJtaTimeout();
        atomikosProperties72.setTransactionManagerUniqueName("");
        boolean boolean78 = atomikosProperties72.isEnableLogging();
        java.lang.String str79 = atomikosProperties72.getLogBaseDir();
        java.util.Properties properties80 = atomikosProperties72.asProperties();
        atomikosProperties72.setForceShutdownOnVmExit(true);
        long long83 = atomikosProperties72.getCheckpointInterval();
        atomikosProperties72.setTransactionManagerUniqueName("{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=0, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog, {}={}}");
        boolean boolean86 = properties69.containsKey((java.lang.Object) atomikosProperties72);
        atomikosProperties72.setSerialJtaTransactions(true);
        org.junit.Assert.assertNull(obj6);
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertNull(obj16);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNull(obj29);
        org.junit.Assert.assertNotNull(objEnumeration30);
        org.junit.Assert.assertNull(obj31);
        org.junit.Assert.assertNull(obj34);
        org.junit.Assert.assertNull(obj41);
        org.junit.Assert.assertNull(obj49);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertNull(obj55);
        org.junit.Assert.assertNotNull(properties63);
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "" + "'", str64, "");
        org.junit.Assert.assertNull(obj67);
        org.junit.Assert.assertNotNull(properties68);
        org.junit.Assert.assertTrue("'" + long75 + "' != '" + 10L + "'", long75 == 10L);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + true + "'", boolean78 == true);
        org.junit.Assert.assertNull(str79);
        org.junit.Assert.assertNotNull(properties80);
        org.junit.Assert.assertTrue("'" + long83 + "' != '" + 500L + "'", long83 == 500L);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + false + "'", boolean86 == false);
    }

    @Test
    public void test1933() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1933");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        int int1 = atomikosProperties0.getMaxActives();
        long long2 = atomikosProperties0.getMaxTimeout();
        java.util.Properties properties3 = atomikosProperties0.asProperties();
        java.util.Properties properties4 = atomikosProperties0.asProperties();
        java.util.Properties properties5 = null;
        java.util.Properties properties6 = new java.util.Properties(properties5);
        java.util.Properties properties7 = new java.util.Properties(properties5);
        java.util.Properties properties8 = null;
        java.util.Properties properties9 = new java.util.Properties(properties8);
        java.lang.Object obj11 = properties7.put((java.lang.Object) properties9, (java.lang.Object) (short) 1);
        boolean boolean12 = properties7.isEmpty();
        java.util.Properties properties13 = null;
        java.util.Properties properties14 = new java.util.Properties(properties13);
        java.util.Properties properties15 = new java.util.Properties(properties13);
        boolean boolean16 = properties7.containsKey((java.lang.Object) properties15);
        java.util.Properties properties17 = new java.util.Properties(properties15);
        java.lang.Object obj18 = properties17.clone();
        java.util.Properties properties20 = null;
        java.util.Properties properties21 = new java.util.Properties(properties20);
        java.util.Properties properties22 = new java.util.Properties(properties20);
        java.util.Properties properties23 = null;
        java.util.Properties properties24 = new java.util.Properties(properties23);
        java.lang.Object obj26 = properties22.put((java.lang.Object) properties24, (java.lang.Object) (short) 1);
        boolean boolean27 = properties22.isEmpty();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties28 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties28.setDefaultJtaTimeout((long) (byte) 10);
        atomikosProperties28.setCheckpointInterval((long) (byte) 0);
        atomikosProperties28.setTransactionManagerUniqueName("");
        java.util.Properties properties35 = atomikosProperties28.asProperties();
        java.lang.Object obj36 = properties22.remove((java.lang.Object) properties35);
        java.lang.Object obj37 = properties17.putIfAbsent((java.lang.Object) 1L, (java.lang.Object) properties22);
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet38 = properties17.entrySet();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties39 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        boolean boolean40 = atomikosProperties39.isForceShutdownOnVmExit();
        java.util.Properties properties41 = atomikosProperties39.asProperties();
        java.util.Properties properties42 = null;
        java.util.Properties properties43 = new java.util.Properties(properties42);
        java.util.Properties properties44 = new java.util.Properties(properties42);
        java.util.Properties properties45 = null;
        java.util.Properties properties46 = new java.util.Properties(properties45);
        java.lang.Object obj48 = properties44.put((java.lang.Object) properties46, (java.lang.Object) (short) 1);
        properties46.clear();
        int int50 = properties46.size();
        java.util.Properties properties51 = null;
        java.util.Properties properties52 = new java.util.Properties(properties51);
        java.util.Properties properties53 = new java.util.Properties(properties51);
        java.util.Properties properties54 = null;
        java.util.Properties properties55 = new java.util.Properties(properties54);
        java.lang.Object obj57 = properties53.put((java.lang.Object) properties55, (java.lang.Object) (short) 1);
        java.util.Properties properties58 = new java.util.Properties(properties55);
        java.util.Properties properties59 = new java.util.Properties(properties55);
        boolean boolean61 = properties46.remove((java.lang.Object) properties55, (java.lang.Object) 10.0f);
        boolean boolean62 = properties41.containsKey((java.lang.Object) 10.0f);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties64 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties64.setDefaultJtaTimeout((long) (byte) 10);
        atomikosProperties64.setCheckpointInterval((long) (byte) 0);
        atomikosProperties64.setEnableLogging(true);
        java.lang.Object obj71 = properties41.getOrDefault((java.lang.Object) (byte) 0, (java.lang.Object) true);
        java.util.Properties properties72 = new java.util.Properties(properties41);
        boolean boolean73 = properties17.containsKey((java.lang.Object) properties72);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties74 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties74.setDefaultJtaTimeout((long) (byte) 10);
        long long77 = atomikosProperties74.getDefaultJtaTimeout();
        atomikosProperties74.setTransactionManagerUniqueName("hi!");
        atomikosProperties74.setTransactionManagerUniqueName("{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=0, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.tm_unique_name=, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
        atomikosProperties74.setService("");
        boolean boolean84 = properties4.remove((java.lang.Object) properties72, (java.lang.Object) "");
        java.util.Set<java.lang.String> strSet85 = properties72.stringPropertyNames();
        java.util.Collection<java.lang.Object> objCollection86 = properties72.values();
        java.util.Properties properties87 = new java.util.Properties(properties72);
        java.io.OutputStream outputStream88 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties87.store(outputStream88, "{{tmlog={com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=0, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.tm_unique_name=, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}, 4=true}={com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=0, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog, {}={}}}");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 50 + "'", int1 == 50);
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + 300000L + "'", long2 == 300000L);
        org.junit.Assert.assertNotNull(properties3);
        org.junit.Assert.assertNotNull(properties4);
        org.junit.Assert.assertNull(obj11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(obj18);
        org.junit.Assert.assertEquals(obj18.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj18), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj18), "{}");
        org.junit.Assert.assertNull(obj26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(properties35);
        org.junit.Assert.assertNull(obj36);
        org.junit.Assert.assertNull(obj37);
        org.junit.Assert.assertNotNull(objEntrySet38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(properties41);
        org.junit.Assert.assertNull(obj48);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + 0 + "'", int50 == 0);
        org.junit.Assert.assertNull(obj57);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertEquals("'" + obj71 + "' != '" + true + "'", obj71, true);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertTrue("'" + long77 + "' != '" + 10L + "'", long77 == 10L);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + false + "'", boolean84 == false);
        org.junit.Assert.assertNotNull(strSet85);
        org.junit.Assert.assertNotNull(objCollection86);
    }

    @Test
    public void test1934() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1934");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setThreadedTwoPhaseCommit(true);
        long long3 = atomikosProperties0.getCheckpointInterval();
        java.lang.String str4 = atomikosProperties0.getLogBaseName();
        boolean boolean5 = atomikosProperties0.isSerialJtaTransactions();
        atomikosProperties0.setLogBaseDir("{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=0, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=true, com.atomikos.icatch.max_actives=100, com.atomikos.icatch.log_base_name=tmlog}");
        atomikosProperties0.setTransactionManagerUniqueName("{}");
        org.junit.Assert.assertTrue("'" + long3 + "' != '" + 500L + "'", long3 == 500L);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "tmlog" + "'", str4, "tmlog");
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
    }

    @Test
    public void test1935() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1935");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Properties properties2 = new java.util.Properties(properties0);
        java.util.Properties properties3 = null;
        java.util.Properties properties4 = new java.util.Properties(properties3);
        java.lang.Object obj6 = properties2.put((java.lang.Object) properties4, (java.lang.Object) (short) 1);
        boolean boolean7 = properties2.isEmpty();
        java.util.Properties properties8 = null;
        java.util.Properties properties9 = new java.util.Properties(properties8);
        java.util.Properties properties10 = new java.util.Properties(properties8);
        boolean boolean11 = properties2.containsKey((java.lang.Object) properties10);
        java.util.Properties properties12 = new java.util.Properties(properties10);
        java.lang.Object obj13 = properties12.clone();
        java.lang.Object obj14 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj15 = properties12.remove(obj14);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(obj6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNotNull(obj13);
        org.junit.Assert.assertEquals(obj13.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj13), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj13), "{}");
    }

    @Test
    public void test1936() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1936");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Properties properties2 = new java.util.Properties(properties0);
        java.util.Properties properties3 = null;
        java.util.Properties properties4 = new java.util.Properties(properties3);
        java.lang.Object obj6 = properties2.put((java.lang.Object) properties4, (java.lang.Object) (short) 1);
        properties4.clear();
        int int8 = properties4.size();
        java.util.Properties properties9 = null;
        java.util.Properties properties10 = new java.util.Properties(properties9);
        java.util.Properties properties11 = new java.util.Properties(properties9);
        java.util.Properties properties12 = null;
        java.util.Properties properties13 = new java.util.Properties(properties12);
        java.lang.Object obj15 = properties11.put((java.lang.Object) properties13, (java.lang.Object) (short) 1);
        java.util.Properties properties16 = new java.util.Properties(properties13);
        java.util.Properties properties17 = new java.util.Properties(properties13);
        boolean boolean19 = properties4.remove((java.lang.Object) properties13, (java.lang.Object) 10.0f);
        java.util.Enumeration<java.lang.Object> objEnumeration20 = properties13.elements();
        java.util.Enumeration<java.lang.Object> objEnumeration21 = properties13.keys();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties22 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties22.setDefaultJtaTimeout((long) (byte) 10);
        long long25 = atomikosProperties22.getDefaultJtaTimeout();
        atomikosProperties22.setTransactionManagerUniqueName("");
        boolean boolean28 = atomikosProperties22.isEnableLogging();
        java.lang.String str29 = atomikosProperties22.getLogBaseDir();
        java.util.Properties properties30 = atomikosProperties22.asProperties();
        boolean boolean31 = properties30.isEmpty();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties32 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties32.setDefaultJtaTimeout((long) (byte) 10);
        atomikosProperties32.setCheckpointInterval((long) (byte) 0);
        atomikosProperties32.setTransactionManagerUniqueName("");
        java.util.Properties properties39 = atomikosProperties32.asProperties();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties40 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties40.setThreadedTwoPhaseCommit(true);
        atomikosProperties40.setMaxActives((int) '#');
        atomikosProperties40.setForceShutdownOnVmExit(true);
        java.lang.String str47 = atomikosProperties40.getLogBaseDir();
        java.lang.Object obj48 = properties39.remove((java.lang.Object) atomikosProperties40);
        java.util.Collection<java.lang.Object> objCollection49 = properties39.values();
        boolean boolean50 = properties30.contains((java.lang.Object) properties39);
        java.util.Properties properties51 = new java.util.Properties(properties30);
        boolean boolean52 = properties51.isEmpty();
        boolean boolean53 = properties13.equals((java.lang.Object) properties51);
        java.util.Enumeration<java.lang.Object> objEnumeration54 = properties51.elements();
        org.junit.Assert.assertNull(obj6);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertNull(obj15);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(objEnumeration20);
        org.junit.Assert.assertNotNull(objEnumeration21);
        org.junit.Assert.assertTrue("'" + long25 + "' != '" + 10L + "'", long25 == 10L);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNull(str29);
        org.junit.Assert.assertNotNull(properties30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(properties39);
        org.junit.Assert.assertNull(str47);
        org.junit.Assert.assertNull(obj48);
        org.junit.Assert.assertNotNull(objCollection49);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertNotNull(objEnumeration54);
    }

    @Test
    public void test1937() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1937");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Properties properties2 = new java.util.Properties(properties0);
        java.util.Properties properties3 = null;
        java.util.Properties properties4 = new java.util.Properties(properties3);
        java.lang.Object obj6 = properties2.put((java.lang.Object) properties4, (java.lang.Object) (short) 1);
        properties4.clear();
        int int8 = properties4.size();
        java.util.Properties properties9 = new java.util.Properties(properties4);
        java.lang.Object obj11 = properties4.get((java.lang.Object) (byte) -1);
        java.util.Enumeration<?> wildcardEnumeration12 = properties4.propertyNames();
        boolean boolean13 = properties4.isEmpty();
        java.util.Properties properties14 = null;
        java.util.Properties properties15 = new java.util.Properties(properties14);
        java.util.Properties properties16 = new java.util.Properties(properties14);
        java.util.Properties properties17 = null;
        java.util.Properties properties18 = new java.util.Properties(properties17);
        java.lang.Object obj20 = properties16.put((java.lang.Object) properties18, (java.lang.Object) (short) 1);
        properties18.clear();
        int int22 = properties18.size();
        java.util.Properties properties23 = null;
        java.util.Properties properties24 = new java.util.Properties(properties23);
        java.util.Properties properties25 = new java.util.Properties(properties23);
        java.util.Properties properties26 = null;
        java.util.Properties properties27 = new java.util.Properties(properties26);
        java.lang.Object obj29 = properties25.put((java.lang.Object) properties27, (java.lang.Object) (short) 1);
        java.util.Properties properties30 = new java.util.Properties(properties27);
        java.util.Properties properties31 = new java.util.Properties(properties27);
        boolean boolean33 = properties18.remove((java.lang.Object) properties27, (java.lang.Object) 10.0f);
        java.util.Enumeration<java.lang.Object> objEnumeration34 = properties27.elements();
        java.util.Properties properties35 = new java.util.Properties(properties27);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties36 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        int int37 = atomikosProperties36.getMaxActives();
        long long38 = atomikosProperties36.getMaxTimeout();
        java.util.Properties properties39 = atomikosProperties36.asProperties();
        int int40 = atomikosProperties36.getMaxActives();
        java.lang.Object obj42 = properties35.putIfAbsent((java.lang.Object) atomikosProperties36, (java.lang.Object) 1);
        properties4.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties35);
        java.io.OutputStream outputStream44 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties35.storeToXML(outputStream44, "", "{tmlog={}}");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(obj6);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertNull(obj11);
        org.junit.Assert.assertNotNull(wildcardEnumeration12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNull(obj20);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 0 + "'", int22 == 0);
        org.junit.Assert.assertNull(obj29);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(objEnumeration34);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 50 + "'", int37 == 50);
        org.junit.Assert.assertTrue("'" + long38 + "' != '" + 300000L + "'", long38 == 300000L);
        org.junit.Assert.assertNotNull(properties39);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 50 + "'", int40 == 50);
        org.junit.Assert.assertNull(obj42);
    }

    @Test
    public void test1938() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1938");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        boolean boolean1 = atomikosProperties0.isSerialJtaTransactions();
        boolean boolean2 = atomikosProperties0.isForceShutdownOnVmExit();
        java.util.Properties properties3 = atomikosProperties0.asProperties();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties4 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties4.setDefaultJtaTimeout((long) (byte) 10);
        atomikosProperties4.setSerialJtaTransactions(false);
        atomikosProperties4.setMaxTimeout((long) (short) -1);
        long long11 = atomikosProperties4.getDefaultJtaTimeout();
        java.util.Properties properties12 = atomikosProperties4.asProperties();
        java.util.Properties properties13 = null;
        java.util.Properties properties14 = new java.util.Properties(properties13);
        java.util.Properties properties15 = new java.util.Properties(properties13);
        java.util.Properties properties16 = null;
        java.util.Properties properties17 = new java.util.Properties(properties16);
        java.lang.Object obj19 = properties15.put((java.lang.Object) properties17, (java.lang.Object) (short) 1);
        properties17.clear();
        java.lang.String str22 = properties17.getProperty("");
        java.util.Properties properties23 = null;
        java.util.Properties properties24 = new java.util.Properties(properties23);
        java.util.Properties properties25 = new java.util.Properties(properties23);
        java.util.Properties properties26 = null;
        java.util.Properties properties27 = new java.util.Properties(properties26);
        java.lang.Object obj29 = properties25.put((java.lang.Object) properties27, (java.lang.Object) (short) 1);
        properties17.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties25);
        java.util.Enumeration<java.lang.Object> objEnumeration31 = properties17.keys();
        java.util.Properties properties33 = null;
        java.util.Properties properties34 = new java.util.Properties(properties33);
        java.util.Properties properties35 = new java.util.Properties(properties33);
        java.util.Properties properties36 = null;
        java.util.Properties properties37 = new java.util.Properties(properties36);
        java.lang.Object obj39 = properties35.put((java.lang.Object) properties37, (java.lang.Object) (short) 1);
        java.util.Properties properties41 = null;
        java.util.Properties properties42 = new java.util.Properties(properties41);
        java.util.Properties properties43 = new java.util.Properties(properties41);
        java.util.Properties properties44 = null;
        java.util.Properties properties45 = new java.util.Properties(properties44);
        java.lang.Object obj47 = properties43.put((java.lang.Object) properties45, (java.lang.Object) (short) 1);
        boolean boolean48 = properties37.remove((java.lang.Object) false, (java.lang.Object) (short) 1);
        java.lang.Object obj50 = properties37.remove((java.lang.Object) '#');
        java.util.Set<java.lang.Object> objSet51 = properties37.keySet();
        properties37.clear();
        java.util.Properties properties53 = null;
        java.util.Properties properties54 = new java.util.Properties(properties53);
        java.util.Properties properties55 = new java.util.Properties(properties53);
        java.util.Properties properties56 = null;
        java.util.Properties properties57 = new java.util.Properties(properties56);
        java.lang.Object obj59 = properties55.put((java.lang.Object) properties57, (java.lang.Object) (short) 1);
        java.util.Enumeration<java.lang.Object> objEnumeration60 = properties57.elements();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet61 = properties57.entrySet();
        boolean boolean62 = properties37.equals((java.lang.Object) properties57);
        java.lang.Object obj63 = properties37.clone();
        java.lang.Object obj64 = properties17.putIfAbsent((java.lang.Object) (-1.0d), (java.lang.Object) properties37);
        java.lang.Object obj65 = properties37.clone();
        java.lang.Object obj66 = properties3.putIfAbsent((java.lang.Object) atomikosProperties4, (java.lang.Object) properties37);
        java.util.Enumeration<?> wildcardEnumeration67 = properties37.propertyNames();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(properties3);
        org.junit.Assert.assertTrue("'" + long11 + "' != '" + 10L + "'", long11 == 10L);
        org.junit.Assert.assertNotNull(properties12);
        org.junit.Assert.assertNull(obj19);
        org.junit.Assert.assertNull(str22);
        org.junit.Assert.assertNull(obj29);
        org.junit.Assert.assertNotNull(objEnumeration31);
        org.junit.Assert.assertNull(obj39);
        org.junit.Assert.assertNull(obj47);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNull(obj50);
        org.junit.Assert.assertNotNull(objSet51);
        org.junit.Assert.assertNull(obj59);
        org.junit.Assert.assertNotNull(objEnumeration60);
        org.junit.Assert.assertNotNull(objEntrySet61);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + true + "'", boolean62 == true);
        org.junit.Assert.assertNotNull(obj63);
        org.junit.Assert.assertEquals(obj63.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj63), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj63), "{}");
        org.junit.Assert.assertNull(obj64);
        org.junit.Assert.assertNotNull(obj65);
        org.junit.Assert.assertEquals(obj65.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj65), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj65), "{}");
        org.junit.Assert.assertNull(obj66);
        org.junit.Assert.assertNotNull(wildcardEnumeration67);
    }

    @Test
    public void test1939() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1939");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Properties properties2 = new java.util.Properties(properties0);
        boolean boolean4 = properties2.containsValue((java.lang.Object) (short) 100);
        java.lang.Object obj5 = properties2.clone();
        java.lang.Object obj8 = properties2.setProperty("{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=0, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.tm_unique_name=, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}", "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.tm_unique_name=, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
        java.util.Properties properties9 = new java.util.Properties(properties2);
        java.io.InputStream inputStream10 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties9.load(inputStream10);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(obj5);
        org.junit.Assert.assertEquals(obj5.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj5), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj5), "{}");
        org.junit.Assert.assertNull(obj8);
    }

    @Test
    public void test1940() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1940");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setThreadedTwoPhaseCommit(true);
        atomikosProperties0.setMaxActives((int) '#');
        atomikosProperties0.setForceShutdownOnVmExit(true);
        java.lang.String str7 = atomikosProperties0.getLogBaseDir();
        java.util.Properties properties8 = atomikosProperties0.asProperties();
        java.util.Properties properties9 = null;
        java.util.Properties properties10 = new java.util.Properties(properties9);
        java.util.Properties properties11 = new java.util.Properties(properties9);
        java.util.Properties properties12 = null;
        java.util.Properties properties13 = new java.util.Properties(properties12);
        java.lang.Object obj15 = properties11.put((java.lang.Object) properties13, (java.lang.Object) (short) 1);
        boolean boolean16 = properties11.isEmpty();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties17 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties17.setDefaultJtaTimeout((long) (byte) 10);
        atomikosProperties17.setCheckpointInterval((long) (byte) 0);
        atomikosProperties17.setTransactionManagerUniqueName("");
        java.util.Properties properties24 = atomikosProperties17.asProperties();
        java.lang.Object obj25 = properties11.remove((java.lang.Object) properties24);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties26 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties26.setDefaultJtaTimeout((long) (byte) 10);
        atomikosProperties26.setCheckpointInterval((long) (byte) 0);
        atomikosProperties26.setTransactionManagerUniqueName("");
        java.lang.Object obj33 = properties24.remove((java.lang.Object) atomikosProperties26);
        boolean boolean34 = properties8.containsKey((java.lang.Object) properties24);
        java.util.Properties properties35 = new java.util.Properties(properties24);
        java.util.Properties properties36 = new java.util.Properties(properties35);
        java.util.Properties properties37 = null;
        java.util.Properties properties38 = new java.util.Properties(properties37);
        java.util.Properties properties39 = new java.util.Properties(properties37);
        java.util.Properties properties40 = null;
        java.util.Properties properties41 = new java.util.Properties(properties40);
        java.lang.Object obj43 = properties39.put((java.lang.Object) properties41, (java.lang.Object) (short) 1);
        java.util.Enumeration<java.lang.Object> objEnumeration44 = properties41.elements();
        java.util.Properties properties45 = new java.util.Properties(properties41);
        java.util.Properties properties46 = new java.util.Properties(properties45);
        java.util.Properties properties47 = null;
        java.util.Properties properties48 = new java.util.Properties(properties47);
        java.util.Properties properties49 = new java.util.Properties(properties47);
        java.util.Properties properties50 = null;
        java.util.Properties properties51 = new java.util.Properties(properties50);
        java.lang.Object obj53 = properties49.put((java.lang.Object) properties51, (java.lang.Object) (short) 1);
        properties51.clear();
        int int55 = properties51.size();
        java.util.Properties properties56 = null;
        java.util.Properties properties57 = new java.util.Properties(properties56);
        java.util.Properties properties58 = new java.util.Properties(properties56);
        java.util.Properties properties59 = null;
        java.util.Properties properties60 = new java.util.Properties(properties59);
        java.lang.Object obj62 = properties58.put((java.lang.Object) properties60, (java.lang.Object) (short) 1);
        java.util.Properties properties63 = new java.util.Properties(properties60);
        java.util.Properties properties64 = new java.util.Properties(properties60);
        boolean boolean66 = properties51.remove((java.lang.Object) properties60, (java.lang.Object) 10.0f);
        java.util.Enumeration<java.lang.Object> objEnumeration67 = properties60.elements();
        java.util.Properties properties68 = new java.util.Properties(properties60);
        java.util.Properties properties69 = new java.util.Properties(properties68);
        java.util.Properties properties70 = new java.util.Properties(properties69);
        java.lang.Object obj71 = properties45.get((java.lang.Object) properties70);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties72 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties72.setThreadedTwoPhaseCommit(true);
        atomikosProperties72.setMaxActives((int) (byte) 0);
        atomikosProperties72.setEnableLogging(true);
        atomikosProperties72.setMaxActives((int) (byte) 1);
        atomikosProperties72.setTransactionManagerUniqueName("hi!");
        java.lang.String str83 = atomikosProperties72.getLogBaseName();
        java.util.Properties properties84 = atomikosProperties72.asProperties();
        java.lang.String str86 = properties84.getProperty("{}");
        java.util.Properties properties87 = new java.util.Properties(properties84);
        java.lang.Object obj88 = properties35.putIfAbsent((java.lang.Object) properties70, (java.lang.Object) properties84);
        java.lang.String str91 = properties84.getProperty("{{tmlog={com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=0, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.tm_unique_name=, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}, 4=true}={com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=0, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog, {}={}}}", "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=52, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.tm_unique_name=, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNotNull(properties8);
        org.junit.Assert.assertNull(obj15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(properties24);
        org.junit.Assert.assertNull(obj25);
        org.junit.Assert.assertNull(obj33);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNull(obj43);
        org.junit.Assert.assertNotNull(objEnumeration44);
        org.junit.Assert.assertNull(obj53);
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + 0 + "'", int55 == 0);
        org.junit.Assert.assertNull(obj62);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertNotNull(objEnumeration67);
        org.junit.Assert.assertNull(obj71);
        org.junit.Assert.assertEquals("'" + str83 + "' != '" + "tmlog" + "'", str83, "tmlog");
        org.junit.Assert.assertNotNull(properties84);
        org.junit.Assert.assertNull(str86);
        org.junit.Assert.assertNull(obj88);
        org.junit.Assert.assertEquals("'" + str91 + "' != '" + "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=52, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.tm_unique_name=, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}" + "'", str91, "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=52, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.tm_unique_name=, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
    }

    @Test
    public void test1941() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1941");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        int int1 = atomikosProperties0.getMaxActives();
        long long2 = atomikosProperties0.getMaxTimeout();
        java.util.Properties properties3 = atomikosProperties0.asProperties();
        java.util.Properties properties4 = null;
        java.util.Properties properties5 = new java.util.Properties(properties4);
        java.util.Properties properties6 = new java.util.Properties(properties4);
        java.util.Properties properties7 = null;
        java.util.Properties properties8 = new java.util.Properties(properties7);
        java.lang.Object obj10 = properties6.put((java.lang.Object) properties8, (java.lang.Object) (short) 1);
        java.util.Properties properties11 = new java.util.Properties(properties8);
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet12 = properties8.entrySet();
        java.lang.Object obj13 = properties3.remove((java.lang.Object) properties8);
        java.util.Enumeration<?> wildcardEnumeration14 = properties3.propertyNames();
        java.io.PrintStream printStream15 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties3.list(printStream15);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 50 + "'", int1 == 50);
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + 300000L + "'", long2 == 300000L);
        org.junit.Assert.assertNotNull(properties3);
        org.junit.Assert.assertNull(obj10);
        org.junit.Assert.assertNotNull(objEntrySet12);
        org.junit.Assert.assertNull(obj13);
        org.junit.Assert.assertNotNull(wildcardEnumeration14);
    }

    @Test
    public void test1942() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1942");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        boolean boolean1 = atomikosProperties0.isForceShutdownOnVmExit();
        java.util.Properties properties2 = atomikosProperties0.asProperties();
        java.util.Properties properties3 = null;
        java.util.Properties properties4 = new java.util.Properties(properties3);
        java.util.Properties properties5 = new java.util.Properties(properties3);
        java.util.Properties properties6 = null;
        java.util.Properties properties7 = new java.util.Properties(properties6);
        java.lang.Object obj9 = properties5.put((java.lang.Object) properties7, (java.lang.Object) (short) 1);
        properties7.clear();
        int int11 = properties7.size();
        java.util.Properties properties12 = null;
        java.util.Properties properties13 = new java.util.Properties(properties12);
        java.util.Properties properties14 = new java.util.Properties(properties12);
        java.util.Properties properties15 = null;
        java.util.Properties properties16 = new java.util.Properties(properties15);
        java.lang.Object obj18 = properties14.put((java.lang.Object) properties16, (java.lang.Object) (short) 1);
        java.util.Properties properties19 = new java.util.Properties(properties16);
        java.util.Properties properties20 = new java.util.Properties(properties16);
        boolean boolean22 = properties7.remove((java.lang.Object) properties16, (java.lang.Object) 10.0f);
        boolean boolean23 = properties2.containsKey((java.lang.Object) 10.0f);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties25 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties25.setDefaultJtaTimeout((long) (byte) 10);
        atomikosProperties25.setCheckpointInterval((long) (byte) 0);
        atomikosProperties25.setEnableLogging(true);
        java.lang.Object obj32 = properties2.getOrDefault((java.lang.Object) (byte) 0, (java.lang.Object) true);
        java.util.Properties properties33 = new java.util.Properties(properties2);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties34 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties34.setDefaultJtaTimeout((long) (byte) 10);
        atomikosProperties34.setCheckpointInterval((long) (byte) 0);
        long long39 = atomikosProperties34.getMaxTimeout();
        java.util.Properties properties40 = null;
        java.util.Properties properties41 = new java.util.Properties(properties40);
        java.util.Properties properties42 = new java.util.Properties(properties40);
        java.util.Properties properties43 = null;
        java.util.Properties properties44 = new java.util.Properties(properties43);
        java.lang.Object obj46 = properties42.put((java.lang.Object) properties44, (java.lang.Object) (short) 1);
        java.util.Properties properties48 = null;
        java.util.Properties properties49 = new java.util.Properties(properties48);
        java.util.Properties properties50 = new java.util.Properties(properties48);
        java.util.Properties properties51 = null;
        java.util.Properties properties52 = new java.util.Properties(properties51);
        java.lang.Object obj54 = properties50.put((java.lang.Object) properties52, (java.lang.Object) (short) 1);
        boolean boolean55 = properties44.remove((java.lang.Object) false, (java.lang.Object) (short) 1);
        java.lang.Object obj57 = properties44.remove((java.lang.Object) '#');
        java.util.Set<java.lang.Object> objSet58 = properties44.keySet();
        properties44.clear();
        java.util.Properties properties60 = null;
        java.util.Properties properties61 = new java.util.Properties(properties60);
        java.util.Properties properties62 = new java.util.Properties(properties60);
        java.util.Properties properties63 = null;
        java.util.Properties properties64 = new java.util.Properties(properties63);
        java.lang.Object obj66 = properties62.put((java.lang.Object) properties64, (java.lang.Object) (short) 1);
        java.util.Enumeration<java.lang.Object> objEnumeration67 = properties64.elements();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet68 = properties64.entrySet();
        boolean boolean69 = properties44.equals((java.lang.Object) properties64);
        java.util.Enumeration<java.lang.Object> objEnumeration70 = properties64.elements();
        java.lang.Object obj71 = properties33.put((java.lang.Object) atomikosProperties34, (java.lang.Object) properties64);
        boolean boolean72 = properties64.isEmpty();
        java.util.Enumeration<java.lang.Object> objEnumeration73 = properties64.keys();
        java.util.Properties properties74 = new java.util.Properties(properties64);
        java.io.PrintStream printStream75 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties64.list(printStream75);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertNotNull(properties2);
        org.junit.Assert.assertNull(obj9);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertNull(obj18);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertEquals("'" + obj32 + "' != '" + true + "'", obj32, true);
        org.junit.Assert.assertTrue("'" + long39 + "' != '" + 300000L + "'", long39 == 300000L);
        org.junit.Assert.assertNull(obj46);
        org.junit.Assert.assertNull(obj54);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertNull(obj57);
        org.junit.Assert.assertNotNull(objSet58);
        org.junit.Assert.assertNull(obj66);
        org.junit.Assert.assertNotNull(objEnumeration67);
        org.junit.Assert.assertNotNull(objEntrySet68);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + true + "'", boolean69 == true);
        org.junit.Assert.assertNotNull(objEnumeration70);
        org.junit.Assert.assertNull(obj71);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + true + "'", boolean72 == true);
        org.junit.Assert.assertNotNull(objEnumeration73);
    }

    @Test
    public void test1943() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1943");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Properties properties2 = new java.util.Properties(properties0);
        java.util.Properties properties3 = null;
        java.util.Properties properties4 = new java.util.Properties(properties3);
        java.lang.Object obj6 = properties2.put((java.lang.Object) properties4, (java.lang.Object) (short) 1);
        properties4.clear();
        java.lang.String str9 = properties4.getProperty("");
        java.util.Properties properties10 = new java.util.Properties(properties4);
        java.util.Properties properties11 = null;
        java.util.Properties properties12 = new java.util.Properties(properties11);
        java.util.Properties properties13 = new java.util.Properties(properties11);
        java.util.Properties properties14 = null;
        java.util.Properties properties15 = new java.util.Properties(properties14);
        java.lang.Object obj17 = properties13.put((java.lang.Object) properties15, (java.lang.Object) (short) 1);
        boolean boolean18 = properties13.isEmpty();
        java.util.Properties properties19 = null;
        java.util.Properties properties20 = new java.util.Properties(properties19);
        java.util.Properties properties21 = new java.util.Properties(properties19);
        boolean boolean22 = properties13.containsKey((java.lang.Object) properties21);
        java.util.Properties properties23 = new java.util.Properties(properties21);
        java.util.Properties properties24 = null;
        java.util.Properties properties25 = new java.util.Properties(properties24);
        java.util.Properties properties26 = new java.util.Properties(properties24);
        java.util.Properties properties27 = null;
        java.util.Properties properties28 = new java.util.Properties(properties27);
        java.lang.Object obj30 = properties26.put((java.lang.Object) properties28, (java.lang.Object) (short) 1);
        boolean boolean31 = properties26.isEmpty();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties32 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties32.setDefaultJtaTimeout((long) (byte) 10);
        atomikosProperties32.setCheckpointInterval((long) (byte) 0);
        atomikosProperties32.setTransactionManagerUniqueName("");
        java.util.Properties properties39 = atomikosProperties32.asProperties();
        java.lang.Object obj40 = properties26.remove((java.lang.Object) properties39);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties41 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties41.setDefaultJtaTimeout((long) (byte) 10);
        atomikosProperties41.setCheckpointInterval((long) (byte) 0);
        atomikosProperties41.setTransactionManagerUniqueName("");
        java.lang.Object obj48 = properties39.remove((java.lang.Object) atomikosProperties41);
        java.util.Enumeration<java.lang.Object> objEnumeration49 = properties39.elements();
        java.lang.Object obj50 = properties23.get((java.lang.Object) properties39);
        java.lang.Object obj51 = properties23.clone();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties52 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        boolean boolean53 = atomikosProperties52.isForceShutdownOnVmExit();
        java.util.Properties properties54 = atomikosProperties52.asProperties();
        java.util.Properties properties55 = null;
        java.util.Properties properties56 = new java.util.Properties(properties55);
        java.util.Properties properties57 = new java.util.Properties(properties55);
        java.util.Properties properties58 = null;
        java.util.Properties properties59 = new java.util.Properties(properties58);
        java.lang.Object obj61 = properties57.put((java.lang.Object) properties59, (java.lang.Object) (short) 1);
        properties59.clear();
        int int63 = properties59.size();
        java.util.Properties properties64 = null;
        java.util.Properties properties65 = new java.util.Properties(properties64);
        java.util.Properties properties66 = new java.util.Properties(properties64);
        java.util.Properties properties67 = null;
        java.util.Properties properties68 = new java.util.Properties(properties67);
        java.lang.Object obj70 = properties66.put((java.lang.Object) properties68, (java.lang.Object) (short) 1);
        java.util.Properties properties71 = new java.util.Properties(properties68);
        java.util.Properties properties72 = new java.util.Properties(properties68);
        boolean boolean74 = properties59.remove((java.lang.Object) properties68, (java.lang.Object) 10.0f);
        boolean boolean75 = properties54.containsKey((java.lang.Object) 10.0f);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties77 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties77.setDefaultJtaTimeout((long) (byte) 10);
        atomikosProperties77.setCheckpointInterval((long) (byte) 0);
        atomikosProperties77.setEnableLogging(true);
        java.lang.Object obj84 = properties54.getOrDefault((java.lang.Object) (byte) 0, (java.lang.Object) true);
        java.util.Properties properties85 = new java.util.Properties(properties54);
        java.lang.Object obj86 = properties10.getOrDefault((java.lang.Object) properties23, (java.lang.Object) properties85);
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet87 = properties23.entrySet();
        java.util.Collection<java.lang.Object> objCollection88 = properties23.values();
        boolean boolean89 = properties23.isEmpty();
        java.io.PrintStream printStream90 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties23.list(printStream90);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(obj6);
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertNull(obj17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNull(obj30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(properties39);
        org.junit.Assert.assertNull(obj40);
        org.junit.Assert.assertNull(obj48);
        org.junit.Assert.assertNotNull(objEnumeration49);
        org.junit.Assert.assertNull(obj50);
        org.junit.Assert.assertNotNull(obj51);
        org.junit.Assert.assertEquals(obj51.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj51), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj51), "{}");
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertNotNull(properties54);
        org.junit.Assert.assertNull(obj61);
        org.junit.Assert.assertTrue("'" + int63 + "' != '" + 0 + "'", int63 == 0);
        org.junit.Assert.assertNull(obj70);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
        org.junit.Assert.assertEquals("'" + obj84 + "' != '" + true + "'", obj84, true);
        org.junit.Assert.assertNotNull(obj86);
        org.junit.Assert.assertEquals(obj86.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj86), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj86), "{}");
        org.junit.Assert.assertNotNull(objEntrySet87);
        org.junit.Assert.assertNotNull(objCollection88);
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + true + "'", boolean89 == true);
    }

    @Test
    public void test1944() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1944");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Properties properties2 = new java.util.Properties(properties0);
        java.util.Properties properties3 = null;
        java.util.Properties properties4 = new java.util.Properties(properties3);
        java.lang.Object obj6 = properties2.put((java.lang.Object) properties4, (java.lang.Object) (short) 1);
        java.util.Properties properties8 = null;
        java.util.Properties properties9 = new java.util.Properties(properties8);
        java.util.Properties properties10 = new java.util.Properties(properties8);
        java.util.Properties properties11 = null;
        java.util.Properties properties12 = new java.util.Properties(properties11);
        java.lang.Object obj14 = properties10.put((java.lang.Object) properties12, (java.lang.Object) (short) 1);
        boolean boolean15 = properties4.remove((java.lang.Object) false, (java.lang.Object) (short) 1);
        java.util.Set<java.lang.String> strSet16 = properties4.stringPropertyNames();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties17 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties17.setDefaultJtaTimeout((long) (byte) 10);
        long long20 = atomikosProperties17.getDefaultJtaTimeout();
        java.lang.Object obj21 = properties4.get((java.lang.Object) atomikosProperties17);
        atomikosProperties17.setCheckpointInterval(52L);
        boolean boolean24 = atomikosProperties17.isEnableLogging();
        org.junit.Assert.assertNull(obj6);
        org.junit.Assert.assertNull(obj14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(strSet16);
        org.junit.Assert.assertTrue("'" + long20 + "' != '" + 10L + "'", long20 == 10L);
        org.junit.Assert.assertNull(obj21);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
    }

    @Test
    public void test1945() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1945");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        int int1 = atomikosProperties0.getMaxActives();
        long long2 = atomikosProperties0.getMaxTimeout();
        java.util.Properties properties3 = atomikosProperties0.asProperties();
        java.util.Set<java.lang.String> strSet4 = properties3.stringPropertyNames();
        java.util.Enumeration<java.lang.Object> objEnumeration5 = properties3.keys();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 50 + "'", int1 == 50);
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + 300000L + "'", long2 == 300000L);
        org.junit.Assert.assertNotNull(properties3);
        org.junit.Assert.assertNotNull(strSet4);
        org.junit.Assert.assertNotNull(objEnumeration5);
    }

    @Test
    public void test1946() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1946");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Properties properties2 = new java.util.Properties(properties0);
        java.util.Properties properties3 = null;
        java.util.Properties properties4 = new java.util.Properties(properties3);
        java.lang.Object obj6 = properties2.put((java.lang.Object) properties4, (java.lang.Object) (short) 1);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties7 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties7.setThreadedTwoPhaseCommit(true);
        atomikosProperties7.setMaxActives((int) (byte) 0);
        boolean boolean12 = properties2.containsValue((java.lang.Object) atomikosProperties7);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties13 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties13.setDefaultJtaTimeout((long) (byte) 10);
        atomikosProperties13.setSerialJtaTransactions(false);
        boolean boolean18 = properties2.containsValue((java.lang.Object) atomikosProperties13);
        java.lang.Object obj21 = properties2.putIfAbsent((java.lang.Object) 10, (java.lang.Object) (byte) -1);
        java.util.Properties properties22 = null;
        java.util.Properties properties23 = new java.util.Properties(properties22);
        java.util.Properties properties24 = new java.util.Properties(properties22);
        java.util.Properties properties25 = null;
        java.util.Properties properties26 = new java.util.Properties(properties25);
        java.lang.Object obj28 = properties24.put((java.lang.Object) properties26, (java.lang.Object) (short) 1);
        java.util.Properties properties30 = null;
        java.util.Properties properties31 = new java.util.Properties(properties30);
        java.util.Properties properties32 = new java.util.Properties(properties30);
        java.util.Properties properties33 = null;
        java.util.Properties properties34 = new java.util.Properties(properties33);
        java.lang.Object obj36 = properties32.put((java.lang.Object) properties34, (java.lang.Object) (short) 1);
        boolean boolean37 = properties26.remove((java.lang.Object) false, (java.lang.Object) (short) 1);
        java.util.Set<java.lang.String> strSet38 = properties26.stringPropertyNames();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties39 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties39.setDefaultJtaTimeout((long) (byte) 10);
        atomikosProperties39.setCheckpointInterval((long) (byte) 0);
        atomikosProperties39.setTransactionManagerUniqueName("");
        boolean boolean46 = atomikosProperties39.isEnableLogging();
        atomikosProperties39.setSerialJtaTransactions(false);
        atomikosProperties39.setLogBaseDir("");
        java.util.Properties properties51 = null;
        java.util.Properties properties52 = new java.util.Properties(properties51);
        java.util.Properties properties53 = new java.util.Properties(properties51);
        java.util.Properties properties54 = null;
        java.util.Properties properties55 = new java.util.Properties(properties54);
        java.lang.Object obj57 = properties53.put((java.lang.Object) properties55, (java.lang.Object) (short) 1);
        java.util.Properties properties58 = new java.util.Properties(properties55);
        boolean boolean59 = properties26.remove((java.lang.Object) "", (java.lang.Object) properties58);
        java.lang.String str61 = properties26.getProperty("{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.tm_unique_name=, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties62 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties62.setDefaultJtaTimeout((long) (byte) 10);
        atomikosProperties62.setCheckpointInterval((long) (byte) 0);
        atomikosProperties62.setTransactionManagerUniqueName("");
        boolean boolean69 = atomikosProperties62.isEnableLogging();
        atomikosProperties62.setSerialJtaTransactions(false);
        java.lang.Object obj72 = properties26.remove((java.lang.Object) atomikosProperties62);
        properties26.clear();
        properties2.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties26);
        java.util.Set<java.lang.String> strSet75 = properties26.stringPropertyNames();
        java.util.Collection<java.lang.Object> objCollection76 = properties26.values();
        org.junit.Assert.assertNull(obj6);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNull(obj21);
        org.junit.Assert.assertNull(obj28);
        org.junit.Assert.assertNull(obj36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(strSet38);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertNull(obj57);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertNull(str61);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + true + "'", boolean69 == true);
        org.junit.Assert.assertNull(obj72);
        org.junit.Assert.assertNotNull(strSet75);
        org.junit.Assert.assertNotNull(objCollection76);
    }

    @Test
    public void test1947() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1947");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Properties properties2 = new java.util.Properties(properties0);
        boolean boolean4 = properties2.containsValue((java.lang.Object) (short) 100);
        java.util.Properties properties5 = new java.util.Properties(properties2);
        java.lang.String str7 = properties5.getProperty("hi!");
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet8 = properties5.entrySet();
        java.util.Enumeration<java.lang.Object> objEnumeration9 = properties5.keys();
        java.util.Properties properties10 = new java.util.Properties(properties5);
        java.util.Properties properties11 = null;
        java.util.Properties properties12 = new java.util.Properties(properties11);
        java.util.Properties properties13 = new java.util.Properties(properties11);
        java.util.Properties properties14 = null;
        java.util.Properties properties15 = new java.util.Properties(properties14);
        java.lang.Object obj17 = properties13.put((java.lang.Object) properties15, (java.lang.Object) (short) 1);
        properties15.clear();
        int int19 = properties15.size();
        java.lang.Object obj22 = properties15.setProperty("hi!", "hi!");
        java.lang.Object obj25 = properties15.setProperty("tmlog", "tmlog");
        java.util.Enumeration<java.lang.Object> objEnumeration26 = properties15.elements();
        java.util.Properties properties27 = new java.util.Properties(properties15);
        boolean boolean28 = properties10.equals((java.lang.Object) properties15);
        java.util.Enumeration<java.lang.Object> objEnumeration29 = properties10.keys();
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNotNull(objEntrySet8);
        org.junit.Assert.assertNotNull(objEnumeration9);
        org.junit.Assert.assertNull(obj17);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 0 + "'", int19 == 0);
        org.junit.Assert.assertNull(obj22);
        org.junit.Assert.assertNull(obj25);
        org.junit.Assert.assertNotNull(objEnumeration26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(objEnumeration29);
    }

    @Test
    public void test1948() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1948");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Properties properties2 = new java.util.Properties(properties0);
        java.util.Properties properties3 = null;
        java.util.Properties properties4 = new java.util.Properties(properties3);
        java.lang.Object obj6 = properties2.put((java.lang.Object) properties4, (java.lang.Object) (short) 1);
        java.util.Properties properties7 = new java.util.Properties(properties4);
        java.util.Properties properties8 = new java.util.Properties(properties4);
        java.util.Set<java.lang.Object> objSet9 = properties8.keySet();
        int int10 = properties8.size();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties11 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        int int12 = atomikosProperties11.getMaxActives();
        java.util.Properties properties13 = atomikosProperties11.asProperties();
        java.util.Properties properties14 = null;
        java.util.Properties properties15 = new java.util.Properties(properties14);
        java.util.Properties properties16 = new java.util.Properties(properties14);
        boolean boolean18 = properties16.containsValue((java.lang.Object) (short) 100);
        java.util.Properties properties19 = null;
        java.util.Properties properties20 = new java.util.Properties(properties19);
        java.util.Properties properties21 = new java.util.Properties(properties19);
        java.util.Properties properties22 = null;
        java.util.Properties properties23 = new java.util.Properties(properties22);
        java.lang.Object obj25 = properties21.put((java.lang.Object) properties23, (java.lang.Object) (short) 1);
        java.util.Enumeration<java.lang.Object> objEnumeration26 = properties23.elements();
        java.lang.Object obj27 = properties16.remove((java.lang.Object) properties23);
        java.util.Properties properties28 = null;
        java.util.Properties properties29 = new java.util.Properties(properties28);
        java.util.Properties properties30 = new java.util.Properties(properties28);
        java.util.Properties properties31 = null;
        java.util.Properties properties32 = new java.util.Properties(properties31);
        java.lang.Object obj34 = properties30.put((java.lang.Object) properties32, (java.lang.Object) (short) 1);
        java.util.Enumeration<java.lang.Object> objEnumeration35 = properties32.elements();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet36 = properties32.entrySet();
        java.util.Set<java.lang.Object> objSet37 = properties32.keySet();
        java.util.Properties properties38 = null;
        java.util.Properties properties39 = new java.util.Properties(properties38);
        java.util.Properties properties40 = new java.util.Properties(properties38);
        java.util.Properties properties41 = null;
        java.util.Properties properties42 = new java.util.Properties(properties41);
        java.lang.Object obj44 = properties40.put((java.lang.Object) properties42, (java.lang.Object) (short) 1);
        properties42.clear();
        int int46 = properties42.size();
        java.util.Properties properties47 = new java.util.Properties(properties42);
        java.util.Properties properties48 = null;
        java.util.Properties properties49 = new java.util.Properties(properties48);
        java.util.Properties properties50 = new java.util.Properties(properties48);
        java.util.Properties properties51 = null;
        java.util.Properties properties52 = new java.util.Properties(properties51);
        java.lang.Object obj54 = properties50.put((java.lang.Object) properties52, (java.lang.Object) (short) 1);
        properties52.clear();
        java.lang.String str57 = properties52.getProperty("");
        java.util.Properties properties58 = null;
        java.util.Properties properties59 = new java.util.Properties(properties58);
        java.util.Properties properties60 = new java.util.Properties(properties58);
        java.util.Properties properties61 = null;
        java.util.Properties properties62 = new java.util.Properties(properties61);
        java.lang.Object obj64 = properties60.put((java.lang.Object) properties62, (java.lang.Object) (short) 1);
        properties52.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties60);
        java.lang.Object obj66 = properties32.put((java.lang.Object) properties42, (java.lang.Object) properties60);
        java.util.Properties properties67 = null;
        java.util.Properties properties68 = new java.util.Properties(properties67);
        java.util.Properties properties69 = new java.util.Properties(properties67);
        java.util.Properties properties70 = null;
        java.util.Properties properties71 = new java.util.Properties(properties70);
        java.lang.Object obj73 = properties69.put((java.lang.Object) properties71, (java.lang.Object) (short) 1);
        java.util.Properties properties74 = new java.util.Properties(properties71);
        java.util.Properties properties75 = new java.util.Properties(properties71);
        java.util.Set<java.lang.Object> objSet76 = properties75.keySet();
        java.lang.Object obj77 = properties16.replace((java.lang.Object) properties32, (java.lang.Object) objSet76);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties78 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        int int79 = atomikosProperties78.getMaxActives();
        long long80 = atomikosProperties78.getMaxTimeout();
        java.util.Properties properties81 = atomikosProperties78.asProperties();
        atomikosProperties78.setService("hi!");
        boolean boolean84 = properties13.remove((java.lang.Object) properties16, (java.lang.Object) "hi!");
        java.lang.Object obj85 = properties13.clone();
        boolean boolean86 = properties13.isEmpty();
        boolean boolean87 = properties8.contains((java.lang.Object) properties13);
        java.util.Properties properties88 = new java.util.Properties(properties8);
        java.lang.Object obj91 = properties88.setProperty("", "hi!");
        java.io.OutputStream outputStream92 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties88.storeToXML(outputStream92, "{tmlog={}}");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(obj6);
        org.junit.Assert.assertNotNull(objSet9);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 50 + "'", int12 == 50);
        org.junit.Assert.assertNotNull(properties13);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNull(obj25);
        org.junit.Assert.assertNotNull(objEnumeration26);
        org.junit.Assert.assertNull(obj27);
        org.junit.Assert.assertNull(obj34);
        org.junit.Assert.assertNotNull(objEnumeration35);
        org.junit.Assert.assertNotNull(objEntrySet36);
        org.junit.Assert.assertNotNull(objSet37);
        org.junit.Assert.assertNull(obj44);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 0 + "'", int46 == 0);
        org.junit.Assert.assertNull(obj54);
        org.junit.Assert.assertNull(str57);
        org.junit.Assert.assertNull(obj64);
        org.junit.Assert.assertNull(obj66);
        org.junit.Assert.assertNull(obj73);
        org.junit.Assert.assertNotNull(objSet76);
        org.junit.Assert.assertNull(obj77);
        org.junit.Assert.assertTrue("'" + int79 + "' != '" + 50 + "'", int79 == 50);
        org.junit.Assert.assertTrue("'" + long80 + "' != '" + 300000L + "'", long80 == 300000L);
        org.junit.Assert.assertNotNull(properties81);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + false + "'", boolean84 == false);
        org.junit.Assert.assertNotNull(obj85);
// flaky:         org.junit.Assert.assertEquals(obj85.toString(), "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
// flaky:         org.junit.Assert.assertEquals(java.lang.String.valueOf(obj85), "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
// flaky:         org.junit.Assert.assertEquals(java.util.Objects.toString(obj85), "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + false + "'", boolean86 == false);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + false + "'", boolean87 == false);
        org.junit.Assert.assertNull(obj91);
    }

    @Test
    public void test1949() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1949");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setThreadedTwoPhaseCommit(true);
        boolean boolean3 = atomikosProperties0.isEnableLogging();
        atomikosProperties0.setCheckpointInterval((long) 35);
        atomikosProperties0.setDefaultJtaTimeout((long) (byte) 0);
        java.lang.String str8 = atomikosProperties0.getLogBaseName();
        atomikosProperties0.setTransactionManagerUniqueName("{tmlog={com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=0, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.tm_unique_name=, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}, 4=true}");
        long long11 = atomikosProperties0.getMaxTimeout();
        atomikosProperties0.setForceShutdownOnVmExit(false);
        atomikosProperties0.setService("{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=0, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog, {}={}}");
        java.util.Properties properties16 = atomikosProperties0.asProperties();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties17 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties17.setThreadedTwoPhaseCommit(true);
        atomikosProperties17.setMaxActives((int) (byte) 0);
        atomikosProperties17.setEnableLogging(true);
        atomikosProperties17.setForceShutdownOnVmExit(false);
        boolean boolean26 = atomikosProperties17.isThreadedTwoPhaseCommit();
        atomikosProperties17.setForceShutdownOnVmExit(false);
        atomikosProperties17.setMaxActives((int) (short) -1);
        boolean boolean32 = properties16.remove((java.lang.Object) atomikosProperties17, (java.lang.Object) "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.tm_unique_name=hi!, {com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=0, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.tm_unique_name=, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}=hi!, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
        atomikosProperties17.setMaxActives(97);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "tmlog" + "'", str8, "tmlog");
        org.junit.Assert.assertTrue("'" + long11 + "' != '" + 300000L + "'", long11 == 300000L);
        org.junit.Assert.assertNotNull(properties16);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
    }

    @Test
    public void test1950() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1950");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Properties properties2 = new java.util.Properties(properties0);
        java.util.Properties properties3 = null;
        java.util.Properties properties4 = new java.util.Properties(properties3);
        java.lang.Object obj6 = properties2.put((java.lang.Object) properties4, (java.lang.Object) (short) 1);
        properties4.clear();
        java.lang.String str9 = properties4.getProperty("");
        java.util.Properties properties10 = null;
        java.util.Properties properties11 = new java.util.Properties(properties10);
        java.util.Properties properties12 = new java.util.Properties(properties10);
        java.util.Properties properties13 = null;
        java.util.Properties properties14 = new java.util.Properties(properties13);
        java.lang.Object obj16 = properties12.put((java.lang.Object) properties14, (java.lang.Object) (short) 1);
        properties4.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties12);
        java.util.Enumeration<java.lang.Object> objEnumeration18 = properties4.keys();
        java.util.Enumeration<java.lang.Object> objEnumeration19 = properties4.elements();
        java.util.Properties properties20 = new java.util.Properties(properties4);
        java.util.Properties properties21 = new java.util.Properties(properties20);
        java.lang.String str24 = properties21.getProperty("{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=100, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.tm_unique_name=, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}", "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=true, com.atomikos.icatch.max_actives=35, com.atomikos.icatch.log_base_name=tmlog}");
        org.junit.Assert.assertNull(obj6);
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertNull(obj16);
        org.junit.Assert.assertNotNull(objEnumeration18);
        org.junit.Assert.assertNotNull(objEnumeration19);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=true, com.atomikos.icatch.max_actives=35, com.atomikos.icatch.log_base_name=tmlog}" + "'", str24, "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=true, com.atomikos.icatch.max_actives=35, com.atomikos.icatch.log_base_name=tmlog}");
    }

    @Test
    public void test1951() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1951");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Properties properties2 = new java.util.Properties(properties0);
        java.util.Properties properties3 = null;
        java.util.Properties properties4 = new java.util.Properties(properties3);
        java.lang.Object obj6 = properties2.put((java.lang.Object) properties4, (java.lang.Object) (short) 1);
        properties4.clear();
        int int8 = properties4.size();
        java.util.Properties properties9 = null;
        java.util.Properties properties10 = new java.util.Properties(properties9);
        java.util.Properties properties11 = new java.util.Properties(properties9);
        java.util.Properties properties12 = null;
        java.util.Properties properties13 = new java.util.Properties(properties12);
        java.lang.Object obj15 = properties11.put((java.lang.Object) properties13, (java.lang.Object) (short) 1);
        java.util.Properties properties16 = new java.util.Properties(properties13);
        java.util.Properties properties17 = new java.util.Properties(properties13);
        boolean boolean19 = properties4.remove((java.lang.Object) properties13, (java.lang.Object) 10.0f);
        java.util.Enumeration<java.lang.Object> objEnumeration20 = properties13.elements();
        java.util.Properties properties21 = new java.util.Properties(properties13);
        java.util.Properties properties22 = new java.util.Properties(properties21);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties23 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties23.setDefaultJtaTimeout((long) (byte) 10);
        boolean boolean26 = atomikosProperties23.isForceShutdownOnVmExit();
        atomikosProperties23.setMaxActives(0);
        atomikosProperties23.setDefaultJtaTimeout((long) (byte) 10);
        atomikosProperties23.setCheckpointInterval((long) 0);
        java.util.Properties properties33 = null;
        java.util.Properties properties34 = new java.util.Properties(properties33);
        java.util.Properties properties35 = new java.util.Properties(properties33);
        java.util.Properties properties36 = null;
        java.util.Properties properties37 = new java.util.Properties(properties36);
        java.lang.Object obj39 = properties35.put((java.lang.Object) properties37, (java.lang.Object) (short) 1);
        java.util.Enumeration<java.lang.Object> objEnumeration40 = properties37.elements();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet41 = properties37.entrySet();
        java.util.Set<java.lang.Object> objSet42 = properties37.keySet();
        java.util.Properties properties43 = null;
        java.util.Properties properties44 = new java.util.Properties(properties43);
        java.util.Properties properties45 = new java.util.Properties(properties43);
        java.util.Properties properties46 = null;
        java.util.Properties properties47 = new java.util.Properties(properties46);
        java.lang.Object obj49 = properties45.put((java.lang.Object) properties47, (java.lang.Object) (short) 1);
        properties47.clear();
        int int51 = properties47.size();
        java.util.Properties properties52 = new java.util.Properties(properties47);
        java.util.Properties properties53 = null;
        java.util.Properties properties54 = new java.util.Properties(properties53);
        java.util.Properties properties55 = new java.util.Properties(properties53);
        java.util.Properties properties56 = null;
        java.util.Properties properties57 = new java.util.Properties(properties56);
        java.lang.Object obj59 = properties55.put((java.lang.Object) properties57, (java.lang.Object) (short) 1);
        properties57.clear();
        java.lang.String str62 = properties57.getProperty("");
        java.util.Properties properties63 = null;
        java.util.Properties properties64 = new java.util.Properties(properties63);
        java.util.Properties properties65 = new java.util.Properties(properties63);
        java.util.Properties properties66 = null;
        java.util.Properties properties67 = new java.util.Properties(properties66);
        java.lang.Object obj69 = properties65.put((java.lang.Object) properties67, (java.lang.Object) (short) 1);
        properties57.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties65);
        java.lang.Object obj71 = properties37.put((java.lang.Object) properties47, (java.lang.Object) properties65);
        java.util.Collection<java.lang.Object> objCollection72 = properties65.values();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet73 = properties65.entrySet();
        boolean boolean74 = properties65.isEmpty();
        java.lang.Object obj75 = properties22.replace((java.lang.Object) 0, (java.lang.Object) properties65);
        java.lang.Object obj78 = properties22.setProperty("{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.tm_unique_name=hi!, {com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=0, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.tm_unique_name=, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}=hi!, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}", "{tmlog={com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=0, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.tm_unique_name=, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}, 4=true}");
        org.junit.Assert.assertNull(obj6);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertNull(obj15);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(objEnumeration20);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNull(obj39);
        org.junit.Assert.assertNotNull(objEnumeration40);
        org.junit.Assert.assertNotNull(objEntrySet41);
        org.junit.Assert.assertNotNull(objSet42);
        org.junit.Assert.assertNull(obj49);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + 0 + "'", int51 == 0);
        org.junit.Assert.assertNull(obj59);
        org.junit.Assert.assertNull(str62);
        org.junit.Assert.assertNull(obj69);
        org.junit.Assert.assertNull(obj71);
        org.junit.Assert.assertNotNull(objCollection72);
        org.junit.Assert.assertNotNull(objEntrySet73);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
        org.junit.Assert.assertNull(obj75);
        org.junit.Assert.assertNull(obj78);
    }

    @Test
    public void test1952() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1952");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Properties properties2 = new java.util.Properties(properties0);
        java.util.Properties properties3 = null;
        java.util.Properties properties4 = new java.util.Properties(properties3);
        java.lang.Object obj6 = properties2.put((java.lang.Object) properties4, (java.lang.Object) (short) 1);
        java.util.Enumeration<java.lang.Object> objEnumeration7 = properties4.elements();
        java.lang.String str8 = properties4.toString();
        java.util.Properties properties9 = null;
        java.util.Properties properties10 = new java.util.Properties(properties9);
        java.util.Properties properties11 = new java.util.Properties(properties9);
        java.util.Properties properties12 = null;
        java.util.Properties properties13 = new java.util.Properties(properties12);
        java.lang.Object obj15 = properties11.put((java.lang.Object) properties13, (java.lang.Object) (short) 1);
        properties13.clear();
        java.lang.String str18 = properties13.getProperty("");
        java.util.Properties properties19 = null;
        java.util.Properties properties20 = new java.util.Properties(properties19);
        java.util.Properties properties21 = new java.util.Properties(properties19);
        java.util.Properties properties22 = null;
        java.util.Properties properties23 = new java.util.Properties(properties22);
        java.lang.Object obj25 = properties21.put((java.lang.Object) properties23, (java.lang.Object) (short) 1);
        properties13.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties21);
        java.util.Enumeration<java.lang.Object> objEnumeration27 = properties13.keys();
        java.util.Enumeration<java.lang.Object> objEnumeration28 = properties13.elements();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties29 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties29.setDefaultJtaTimeout((long) (byte) 10);
        atomikosProperties29.setCheckpointInterval((long) (byte) 0);
        atomikosProperties29.setEnableLogging(true);
        java.lang.String str36 = atomikosProperties29.getLogBaseName();
        atomikosProperties29.setMaxActives((int) (short) 100);
        boolean boolean39 = properties4.remove((java.lang.Object) properties13, (java.lang.Object) atomikosProperties29);
        atomikosProperties29.setThreadedTwoPhaseCommit(true);
        long long42 = atomikosProperties29.getDefaultJtaTimeout();
        long long43 = atomikosProperties29.getDefaultJtaTimeout();
        atomikosProperties29.setLogBaseDir("{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=100, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=true, com.atomikos.icatch.tm_unique_name=, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name={com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.tm_unique_name=, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}}");
        long long46 = atomikosProperties29.getDefaultJtaTimeout();
        org.junit.Assert.assertNull(obj6);
        org.junit.Assert.assertNotNull(objEnumeration7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "{}" + "'", str8, "{}");
        org.junit.Assert.assertNull(obj15);
        org.junit.Assert.assertNull(str18);
        org.junit.Assert.assertNull(obj25);
        org.junit.Assert.assertNotNull(objEnumeration27);
        org.junit.Assert.assertNotNull(objEnumeration28);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "tmlog" + "'", str36, "tmlog");
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertTrue("'" + long42 + "' != '" + 10L + "'", long42 == 10L);
        org.junit.Assert.assertTrue("'" + long43 + "' != '" + 10L + "'", long43 == 10L);
        org.junit.Assert.assertTrue("'" + long46 + "' != '" + 10L + "'", long46 == 10L);
    }

    @Test
    public void test1953() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1953");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Properties properties2 = new java.util.Properties(properties0);
        java.util.Properties properties3 = null;
        java.util.Properties properties4 = new java.util.Properties(properties3);
        java.lang.Object obj6 = properties2.put((java.lang.Object) properties4, (java.lang.Object) (short) 1);
        boolean boolean7 = properties2.isEmpty();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties8 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties8.setDefaultJtaTimeout((long) (byte) 10);
        atomikosProperties8.setCheckpointInterval((long) (byte) 0);
        atomikosProperties8.setTransactionManagerUniqueName("");
        java.util.Properties properties15 = atomikosProperties8.asProperties();
        java.lang.Object obj16 = properties2.remove((java.lang.Object) properties15);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties17 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties17.setDefaultJtaTimeout((long) (byte) 10);
        atomikosProperties17.setCheckpointInterval((long) (byte) 0);
        atomikosProperties17.setTransactionManagerUniqueName("");
        java.lang.Object obj24 = properties15.remove((java.lang.Object) atomikosProperties17);
        java.util.Enumeration<java.lang.Object> objEnumeration25 = properties15.elements();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties26 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        boolean boolean27 = atomikosProperties26.isSerialJtaTransactions();
        java.util.Properties properties28 = atomikosProperties26.asProperties();
        java.util.Enumeration<java.lang.Object> objEnumeration29 = properties28.elements();
        java.lang.Object obj30 = properties28.clone();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties31 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties31.setDefaultJtaTimeout((long) (byte) 10);
        atomikosProperties31.setCheckpointInterval((long) (byte) 0);
        atomikosProperties31.setEnableLogging(true);
        atomikosProperties31.setService("");
        atomikosProperties31.setTransactionManagerUniqueName("{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.tm_unique_name=, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
        java.util.Properties properties42 = atomikosProperties31.asProperties();
        java.lang.Object obj43 = properties15.putIfAbsent((java.lang.Object) properties28, (java.lang.Object) properties42);
        java.io.InputStream inputStream44 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties42.loadFromXML(inputStream44);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(obj6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(properties15);
        org.junit.Assert.assertNull(obj16);
        org.junit.Assert.assertNull(obj24);
        org.junit.Assert.assertNotNull(objEnumeration25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNotNull(properties28);
        org.junit.Assert.assertNotNull(objEnumeration29);
        org.junit.Assert.assertNotNull(obj30);
// flaky:         org.junit.Assert.assertEquals(obj30.toString(), "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
// flaky:         org.junit.Assert.assertEquals(java.lang.String.valueOf(obj30), "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
// flaky:         org.junit.Assert.assertEquals(java.util.Objects.toString(obj30), "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
        org.junit.Assert.assertNotNull(properties42);
        org.junit.Assert.assertNull(obj43);
    }

    @Test
    public void test1954() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1954");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Properties properties2 = new java.util.Properties(properties0);
        boolean boolean4 = properties2.containsValue((java.lang.Object) (short) 100);
        java.util.Properties properties5 = new java.util.Properties(properties2);
        java.lang.String str7 = properties5.getProperty("hi!");
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet8 = properties5.entrySet();
        java.util.Enumeration<java.lang.Object> objEnumeration9 = properties5.keys();
        java.util.Properties properties10 = new java.util.Properties(properties5);
        java.util.Properties properties11 = null;
        java.util.Properties properties12 = new java.util.Properties(properties11);
        java.util.Properties properties13 = new java.util.Properties(properties11);
        java.util.Properties properties14 = null;
        java.util.Properties properties15 = new java.util.Properties(properties14);
        java.lang.Object obj17 = properties13.put((java.lang.Object) properties15, (java.lang.Object) (short) 1);
        properties15.clear();
        int int19 = properties15.size();
        java.lang.Object obj22 = properties15.setProperty("hi!", "hi!");
        java.lang.Object obj25 = properties15.setProperty("tmlog", "tmlog");
        java.util.Enumeration<java.lang.Object> objEnumeration26 = properties15.elements();
        java.util.Properties properties27 = new java.util.Properties(properties15);
        boolean boolean28 = properties10.equals((java.lang.Object) properties15);
        properties10.clear();
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNotNull(objEntrySet8);
        org.junit.Assert.assertNotNull(objEnumeration9);
        org.junit.Assert.assertNull(obj17);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 0 + "'", int19 == 0);
        org.junit.Assert.assertNull(obj22);
        org.junit.Assert.assertNull(obj25);
        org.junit.Assert.assertNotNull(objEnumeration26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
    }

    @Test
    public void test1955() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1955");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Properties properties2 = new java.util.Properties(properties0);
        java.util.Properties properties3 = null;
        java.util.Properties properties4 = new java.util.Properties(properties3);
        java.lang.Object obj6 = properties2.put((java.lang.Object) properties4, (java.lang.Object) (short) 1);
        boolean boolean7 = properties2.isEmpty();
        java.util.Properties properties8 = null;
        java.util.Properties properties9 = new java.util.Properties(properties8);
        java.util.Properties properties10 = new java.util.Properties(properties8);
        boolean boolean11 = properties2.containsKey((java.lang.Object) properties10);
        java.util.Properties properties12 = new java.util.Properties(properties10);
        java.lang.Object obj13 = properties12.clone();
        java.util.Set<java.lang.String> strSet14 = properties12.stringPropertyNames();
        java.lang.Object obj17 = properties12.setProperty("{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=0, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.tm_unique_name=, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}", "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=true, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=true, com.atomikos.icatch.max_actives=35, com.atomikos.icatch.log_base_name=tmlog}");
        java.util.Properties properties18 = null;
        java.util.Properties properties19 = new java.util.Properties(properties18);
        java.util.Properties properties20 = new java.util.Properties(properties18);
        java.util.Properties properties21 = null;
        java.util.Properties properties22 = new java.util.Properties(properties21);
        java.lang.Object obj24 = properties20.put((java.lang.Object) properties22, (java.lang.Object) (short) 1);
        java.util.Properties properties26 = null;
        java.util.Properties properties27 = new java.util.Properties(properties26);
        java.util.Properties properties28 = new java.util.Properties(properties26);
        java.util.Properties properties29 = null;
        java.util.Properties properties30 = new java.util.Properties(properties29);
        java.lang.Object obj32 = properties28.put((java.lang.Object) properties30, (java.lang.Object) (short) 1);
        boolean boolean33 = properties22.remove((java.lang.Object) false, (java.lang.Object) (short) 1);
        java.util.Properties properties34 = new java.util.Properties(properties22);
        int int35 = properties34.size();
        java.util.Properties properties36 = null;
        java.util.Properties properties37 = new java.util.Properties(properties36);
        java.util.Properties properties38 = new java.util.Properties(properties36);
        java.util.Properties properties39 = null;
        java.util.Properties properties40 = new java.util.Properties(properties39);
        java.lang.Object obj42 = properties38.put((java.lang.Object) properties40, (java.lang.Object) (short) 1);
        properties40.clear();
        java.lang.String str45 = properties40.getProperty("");
        java.util.Properties properties46 = null;
        java.util.Properties properties47 = new java.util.Properties(properties46);
        java.util.Properties properties48 = new java.util.Properties(properties46);
        java.util.Properties properties49 = null;
        java.util.Properties properties50 = new java.util.Properties(properties49);
        java.lang.Object obj52 = properties48.put((java.lang.Object) properties50, (java.lang.Object) (short) 1);
        properties40.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties48);
        java.lang.Object obj54 = properties34.remove((java.lang.Object) properties40);
        java.lang.Object obj57 = properties40.setProperty("tmlog", "hi!");
        properties12.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties40);
        java.lang.Object obj61 = properties12.setProperty("{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=true, com.atomikos.icatch.checkpoint_interval=0, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.tm_unique_name=, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}", "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
        java.lang.Class<?> wildcardClass62 = properties12.getClass();
        org.junit.Assert.assertNull(obj6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNotNull(obj13);
        org.junit.Assert.assertEquals(obj13.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj13), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj13), "{}");
        org.junit.Assert.assertNotNull(strSet14);
        org.junit.Assert.assertNull(obj17);
        org.junit.Assert.assertNull(obj24);
        org.junit.Assert.assertNull(obj32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 0 + "'", int35 == 0);
        org.junit.Assert.assertNull(obj42);
        org.junit.Assert.assertNull(str45);
        org.junit.Assert.assertNull(obj52);
        org.junit.Assert.assertNull(obj54);
        org.junit.Assert.assertNull(obj57);
        org.junit.Assert.assertNull(obj61);
        org.junit.Assert.assertNotNull(wildcardClass62);
    }

    @Test
    public void test1956() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1956");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Properties properties2 = new java.util.Properties(properties0);
        java.util.Properties properties3 = null;
        java.util.Properties properties4 = new java.util.Properties(properties3);
        java.lang.Object obj6 = properties2.put((java.lang.Object) properties4, (java.lang.Object) (short) 1);
        java.util.Properties properties8 = null;
        java.util.Properties properties9 = new java.util.Properties(properties8);
        java.util.Properties properties10 = new java.util.Properties(properties8);
        java.util.Properties properties11 = null;
        java.util.Properties properties12 = new java.util.Properties(properties11);
        java.lang.Object obj14 = properties10.put((java.lang.Object) properties12, (java.lang.Object) (short) 1);
        boolean boolean15 = properties4.remove((java.lang.Object) false, (java.lang.Object) (short) 1);
        java.lang.Object obj17 = properties4.remove((java.lang.Object) '#');
        java.util.Set<java.lang.Object> objSet18 = properties4.keySet();
        properties4.clear();
        java.util.Properties properties20 = null;
        java.util.Properties properties21 = new java.util.Properties(properties20);
        java.util.Properties properties22 = new java.util.Properties(properties20);
        java.util.Properties properties23 = null;
        java.util.Properties properties24 = new java.util.Properties(properties23);
        java.lang.Object obj26 = properties22.put((java.lang.Object) properties24, (java.lang.Object) (short) 1);
        java.util.Enumeration<java.lang.Object> objEnumeration27 = properties24.elements();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet28 = properties24.entrySet();
        boolean boolean29 = properties4.equals((java.lang.Object) properties24);
        java.util.Enumeration<java.lang.Object> objEnumeration30 = properties24.elements();
        int int31 = properties24.size();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties32 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties32.setThreadedTwoPhaseCommit(true);
        atomikosProperties32.setMaxActives((int) '#');
        atomikosProperties32.setCheckpointInterval((long) 50);
        long long39 = atomikosProperties32.getCheckpointInterval();
        java.lang.String str40 = atomikosProperties32.getService();
        java.lang.String str41 = atomikosProperties32.getLogBaseName();
        atomikosProperties32.setEnableLogging(false);
        boolean boolean44 = atomikosProperties32.isForceShutdownOnVmExit();
        boolean boolean45 = properties24.contains((java.lang.Object) atomikosProperties32);
        org.junit.Assert.assertNull(obj6);
        org.junit.Assert.assertNull(obj14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNull(obj17);
        org.junit.Assert.assertNotNull(objSet18);
        org.junit.Assert.assertNull(obj26);
        org.junit.Assert.assertNotNull(objEnumeration27);
        org.junit.Assert.assertNotNull(objEntrySet28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNotNull(objEnumeration30);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 0 + "'", int31 == 0);
        org.junit.Assert.assertTrue("'" + long39 + "' != '" + 50L + "'", long39 == 50L);
        org.junit.Assert.assertNull(str40);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "tmlog" + "'", str41, "tmlog");
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
    }

    @Test
    public void test1957() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1957");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        int int1 = atomikosProperties0.getMaxActives();
        long long2 = atomikosProperties0.getMaxTimeout();
        java.util.Properties properties3 = atomikosProperties0.asProperties();
        atomikosProperties0.setService("hi!");
        java.lang.String str6 = atomikosProperties0.getService();
        atomikosProperties0.setService("");
        atomikosProperties0.setThreadedTwoPhaseCommit(true);
        long long11 = atomikosProperties0.getCheckpointInterval();
        long long12 = atomikosProperties0.getDefaultJtaTimeout();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 50 + "'", int1 == 50);
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + 300000L + "'", long2 == 300000L);
        org.junit.Assert.assertNotNull(properties3);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "hi!" + "'", str6, "hi!");
        org.junit.Assert.assertTrue("'" + long11 + "' != '" + 500L + "'", long11 == 500L);
        org.junit.Assert.assertTrue("'" + long12 + "' != '" + 10000L + "'", long12 == 10000L);
    }

    @Test
    public void test1958() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1958");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Properties properties2 = new java.util.Properties(properties0);
        boolean boolean4 = properties2.containsValue((java.lang.Object) (short) 100);
        java.util.Properties properties5 = new java.util.Properties(properties2);
        java.util.Properties properties6 = new java.util.Properties(properties5);
        java.util.Properties properties7 = new java.util.Properties(properties6);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties8 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties8.setDefaultJtaTimeout((long) (byte) 10);
        boolean boolean11 = atomikosProperties8.isForceShutdownOnVmExit();
        atomikosProperties8.setMaxActives(0);
        java.lang.String str14 = atomikosProperties8.getLogBaseName();
        boolean boolean15 = atomikosProperties8.isSerialJtaTransactions();
        atomikosProperties8.setTransactionManagerUniqueName("");
        java.util.Properties properties18 = atomikosProperties8.asProperties();
        java.lang.String str20 = properties18.getProperty("{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=0, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog, {}={}}");
        java.util.Properties properties22 = null;
        java.util.Properties properties23 = new java.util.Properties(properties22);
        java.util.Properties properties24 = new java.util.Properties(properties22);
        java.util.Properties properties25 = null;
        java.util.Properties properties26 = new java.util.Properties(properties25);
        java.lang.Object obj28 = properties24.put((java.lang.Object) properties26, (java.lang.Object) (short) 1);
        properties26.clear();
        int int30 = properties26.size();
        java.util.Properties properties31 = new java.util.Properties(properties26);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties32 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        int int33 = atomikosProperties32.getMaxActives();
        long long34 = atomikosProperties32.getMaxTimeout();
        java.util.Properties properties35 = atomikosProperties32.asProperties();
        java.util.Properties properties36 = atomikosProperties32.asProperties();
        java.util.Properties properties37 = null;
        java.util.Properties properties38 = new java.util.Properties(properties37);
        java.util.Properties properties39 = new java.util.Properties(properties37);
        java.util.Properties properties40 = null;
        java.util.Properties properties41 = new java.util.Properties(properties40);
        java.lang.Object obj43 = properties39.put((java.lang.Object) properties41, (java.lang.Object) (short) 1);
        java.util.Enumeration<java.lang.Object> objEnumeration44 = properties41.elements();
        java.lang.Object obj45 = properties26.replace((java.lang.Object) atomikosProperties32, (java.lang.Object) properties41);
        java.lang.Object obj46 = properties18.getOrDefault((java.lang.Object) 0.0d, (java.lang.Object) properties41);
        java.util.Properties properties47 = new java.util.Properties(properties41);
        java.util.Properties properties48 = null;
        java.util.Properties properties49 = new java.util.Properties(properties48);
        java.util.Properties properties50 = new java.util.Properties(properties48);
        java.util.Properties properties51 = null;
        java.util.Properties properties52 = new java.util.Properties(properties51);
        java.lang.Object obj54 = properties50.put((java.lang.Object) properties52, (java.lang.Object) (short) 1);
        properties52.clear();
        int int56 = properties52.size();
        java.util.Properties properties57 = new java.util.Properties(properties52);
        boolean boolean58 = properties52.isEmpty();
        java.util.Enumeration<java.lang.Object> objEnumeration59 = properties52.elements();
        java.util.Properties properties60 = null;
        java.util.Properties properties61 = new java.util.Properties(properties60);
        java.util.Properties properties62 = new java.util.Properties(properties60);
        java.util.Properties properties63 = null;
        java.util.Properties properties64 = new java.util.Properties(properties63);
        java.lang.Object obj66 = properties62.put((java.lang.Object) properties64, (java.lang.Object) (short) 1);
        java.util.Properties properties67 = new java.util.Properties(properties64);
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet68 = properties64.entrySet();
        boolean boolean69 = properties52.contains((java.lang.Object) objEntrySet68);
        java.util.Properties properties70 = new java.util.Properties(properties52);
        boolean boolean71 = properties6.remove((java.lang.Object) properties41, (java.lang.Object) properties52);
        java.io.OutputStream outputStream72 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties52.storeToXML(outputStream72, "", "{com.atomikos.icatch.enable_logging=false, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=true, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "tmlog" + "'", str14, "tmlog");
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(properties18);
        org.junit.Assert.assertNull(str20);
        org.junit.Assert.assertNull(obj28);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 0 + "'", int30 == 0);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 50 + "'", int33 == 50);
        org.junit.Assert.assertTrue("'" + long34 + "' != '" + 300000L + "'", long34 == 300000L);
        org.junit.Assert.assertNotNull(properties35);
        org.junit.Assert.assertNotNull(properties36);
        org.junit.Assert.assertNull(obj43);
        org.junit.Assert.assertNotNull(objEnumeration44);
        org.junit.Assert.assertNull(obj45);
        org.junit.Assert.assertNotNull(obj46);
        org.junit.Assert.assertEquals(obj46.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj46), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj46), "{}");
        org.junit.Assert.assertNull(obj54);
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + 0 + "'", int56 == 0);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertNotNull(objEnumeration59);
        org.junit.Assert.assertNull(obj66);
        org.junit.Assert.assertNotNull(objEntrySet68);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
    }

    @Test
    public void test1959() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1959");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Properties properties2 = new java.util.Properties(properties0);
        boolean boolean4 = properties2.containsValue((java.lang.Object) (short) 100);
        java.util.Properties properties5 = new java.util.Properties(properties2);
        java.lang.String str7 = properties5.getProperty("hi!");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties8 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties8.setDefaultJtaTimeout((long) (byte) 10);
        long long11 = atomikosProperties8.getDefaultJtaTimeout();
        atomikosProperties8.setTransactionManagerUniqueName("hi!");
        atomikosProperties8.setLogBaseName("tmlog");
        boolean boolean16 = atomikosProperties8.isSerialJtaTransactions();
        java.util.Properties properties17 = atomikosProperties8.asProperties();
        boolean boolean18 = properties5.equals((java.lang.Object) atomikosProperties8);
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet19 = properties5.entrySet();
        boolean boolean20 = properties5.isEmpty();
        java.util.Properties properties21 = null;
        java.util.Properties properties22 = new java.util.Properties(properties21);
        java.util.Properties properties23 = new java.util.Properties(properties21);
        java.util.Properties properties24 = null;
        java.util.Properties properties25 = new java.util.Properties(properties24);
        java.lang.Object obj27 = properties23.put((java.lang.Object) properties25, (java.lang.Object) (short) 1);
        java.util.Properties properties29 = null;
        java.util.Properties properties30 = new java.util.Properties(properties29);
        java.util.Properties properties31 = new java.util.Properties(properties29);
        java.util.Properties properties32 = null;
        java.util.Properties properties33 = new java.util.Properties(properties32);
        java.lang.Object obj35 = properties31.put((java.lang.Object) properties33, (java.lang.Object) (short) 1);
        boolean boolean36 = properties25.remove((java.lang.Object) false, (java.lang.Object) (short) 1);
        java.util.Set<java.lang.String> strSet37 = properties25.stringPropertyNames();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties38 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties38.setDefaultJtaTimeout((long) (byte) 10);
        long long41 = atomikosProperties38.getDefaultJtaTimeout();
        java.lang.Object obj42 = properties25.get((java.lang.Object) atomikosProperties38);
        java.util.Properties properties43 = null;
        java.util.Properties properties44 = new java.util.Properties(properties43);
        java.util.Properties properties45 = new java.util.Properties(properties43);
        java.util.Properties properties46 = null;
        java.util.Properties properties47 = new java.util.Properties(properties46);
        java.lang.Object obj49 = properties45.put((java.lang.Object) properties47, (java.lang.Object) (short) 1);
        java.util.Properties properties51 = null;
        java.util.Properties properties52 = new java.util.Properties(properties51);
        java.util.Properties properties53 = new java.util.Properties(properties51);
        java.util.Properties properties54 = null;
        java.util.Properties properties55 = new java.util.Properties(properties54);
        java.lang.Object obj57 = properties53.put((java.lang.Object) properties55, (java.lang.Object) (short) 1);
        boolean boolean58 = properties47.remove((java.lang.Object) false, (java.lang.Object) (short) 1);
        java.lang.Object obj60 = properties47.remove((java.lang.Object) '#');
        java.util.Set<java.lang.Object> objSet61 = properties47.keySet();
        boolean boolean62 = properties25.containsKey((java.lang.Object) properties47);
        java.lang.Object obj65 = properties47.setProperty("{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.tm_unique_name=, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}", "{}");
        boolean boolean66 = properties5.containsValue((java.lang.Object) properties47);
        java.util.Enumeration<?> wildcardEnumeration67 = properties47.propertyNames();
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertTrue("'" + long11 + "' != '" + 10L + "'", long11 == 10L);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(properties17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(objEntrySet19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNull(obj27);
        org.junit.Assert.assertNull(obj35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(strSet37);
        org.junit.Assert.assertTrue("'" + long41 + "' != '" + 10L + "'", long41 == 10L);
        org.junit.Assert.assertNull(obj42);
        org.junit.Assert.assertNull(obj49);
        org.junit.Assert.assertNull(obj57);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertNull(obj60);
        org.junit.Assert.assertNotNull(objSet61);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertNull(obj65);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertNotNull(wildcardEnumeration67);
    }

    @Test
    public void test1960() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1960");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Properties properties2 = new java.util.Properties(properties0);
        java.util.Properties properties3 = null;
        java.util.Properties properties4 = new java.util.Properties(properties3);
        java.lang.Object obj6 = properties2.put((java.lang.Object) properties4, (java.lang.Object) (short) 1);
        java.util.Properties properties7 = new java.util.Properties(properties4);
        java.util.Properties properties8 = new java.util.Properties(properties4);
        java.util.Set<java.lang.Object> objSet9 = properties8.keySet();
        java.util.Properties properties10 = new java.util.Properties(properties8);
        java.util.Properties properties11 = null;
        java.util.Properties properties12 = new java.util.Properties(properties11);
        java.util.Properties properties13 = new java.util.Properties(properties11);
        java.util.Properties properties14 = null;
        java.util.Properties properties15 = new java.util.Properties(properties14);
        java.lang.Object obj17 = properties13.put((java.lang.Object) properties15, (java.lang.Object) (short) 1);
        java.util.Properties properties19 = null;
        java.util.Properties properties20 = new java.util.Properties(properties19);
        java.util.Properties properties21 = new java.util.Properties(properties19);
        java.util.Properties properties22 = null;
        java.util.Properties properties23 = new java.util.Properties(properties22);
        java.lang.Object obj25 = properties21.put((java.lang.Object) properties23, (java.lang.Object) (short) 1);
        boolean boolean26 = properties15.remove((java.lang.Object) false, (java.lang.Object) (short) 1);
        java.util.Set<java.lang.String> strSet27 = properties15.stringPropertyNames();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties28 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties28.setDefaultJtaTimeout((long) (byte) 10);
        atomikosProperties28.setCheckpointInterval((long) (byte) 0);
        atomikosProperties28.setTransactionManagerUniqueName("");
        boolean boolean35 = atomikosProperties28.isEnableLogging();
        atomikosProperties28.setSerialJtaTransactions(false);
        atomikosProperties28.setLogBaseDir("");
        java.util.Properties properties40 = null;
        java.util.Properties properties41 = new java.util.Properties(properties40);
        java.util.Properties properties42 = new java.util.Properties(properties40);
        java.util.Properties properties43 = null;
        java.util.Properties properties44 = new java.util.Properties(properties43);
        java.lang.Object obj46 = properties42.put((java.lang.Object) properties44, (java.lang.Object) (short) 1);
        java.util.Properties properties47 = new java.util.Properties(properties44);
        boolean boolean48 = properties15.remove((java.lang.Object) "", (java.lang.Object) properties47);
        java.util.Properties properties49 = null;
        java.util.Properties properties50 = new java.util.Properties(properties49);
        java.util.Properties properties51 = new java.util.Properties(properties49);
        java.lang.Object obj52 = properties51.clone();
        boolean boolean53 = properties15.contains(obj52);
        properties8.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties15);
        java.util.Enumeration<java.lang.Object> objEnumeration55 = properties8.keys();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties56 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties56.setDefaultJtaTimeout((long) (byte) 10);
        long long59 = atomikosProperties56.getDefaultJtaTimeout();
        atomikosProperties56.setTransactionManagerUniqueName("hi!");
        atomikosProperties56.setLogBaseName("tmlog");
        atomikosProperties56.setLogBaseName("");
        java.lang.String str66 = atomikosProperties56.getTransactionManagerUniqueName();
        long long67 = atomikosProperties56.getDefaultJtaTimeout();
        java.lang.Object obj68 = properties8.remove((java.lang.Object) long67);
        org.junit.Assert.assertNull(obj6);
        org.junit.Assert.assertNotNull(objSet9);
        org.junit.Assert.assertNull(obj17);
        org.junit.Assert.assertNull(obj25);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(strSet27);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertNull(obj46);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNotNull(obj52);
        org.junit.Assert.assertEquals(obj52.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj52), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj52), "{}");
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertNotNull(objEnumeration55);
        org.junit.Assert.assertTrue("'" + long59 + "' != '" + 10L + "'", long59 == 10L);
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "hi!" + "'", str66, "hi!");
        org.junit.Assert.assertTrue("'" + long67 + "' != '" + 10L + "'", long67 == 10L);
        org.junit.Assert.assertNull(obj68);
    }

    @Test
    public void test1961() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1961");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        boolean boolean1 = atomikosProperties0.isForceShutdownOnVmExit();
        java.util.Properties properties2 = atomikosProperties0.asProperties();
        java.util.Properties properties3 = null;
        java.util.Properties properties4 = new java.util.Properties(properties3);
        java.util.Properties properties5 = new java.util.Properties(properties3);
        java.util.Properties properties6 = null;
        java.util.Properties properties7 = new java.util.Properties(properties6);
        java.lang.Object obj9 = properties5.put((java.lang.Object) properties7, (java.lang.Object) (short) 1);
        properties7.clear();
        int int11 = properties7.size();
        java.util.Properties properties12 = null;
        java.util.Properties properties13 = new java.util.Properties(properties12);
        java.util.Properties properties14 = new java.util.Properties(properties12);
        java.util.Properties properties15 = null;
        java.util.Properties properties16 = new java.util.Properties(properties15);
        java.lang.Object obj18 = properties14.put((java.lang.Object) properties16, (java.lang.Object) (short) 1);
        java.util.Properties properties19 = new java.util.Properties(properties16);
        java.util.Properties properties20 = new java.util.Properties(properties16);
        boolean boolean22 = properties7.remove((java.lang.Object) properties16, (java.lang.Object) 10.0f);
        boolean boolean23 = properties2.containsKey((java.lang.Object) 10.0f);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties25 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties25.setDefaultJtaTimeout((long) (byte) 10);
        atomikosProperties25.setCheckpointInterval((long) (byte) 0);
        atomikosProperties25.setEnableLogging(true);
        java.lang.Object obj32 = properties2.getOrDefault((java.lang.Object) (byte) 0, (java.lang.Object) true);
        java.util.Properties properties33 = new java.util.Properties(properties2);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties34 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties34.setDefaultJtaTimeout((long) (byte) 10);
        atomikosProperties34.setCheckpointInterval((long) (byte) 0);
        long long39 = atomikosProperties34.getMaxTimeout();
        java.util.Properties properties40 = null;
        java.util.Properties properties41 = new java.util.Properties(properties40);
        java.util.Properties properties42 = new java.util.Properties(properties40);
        java.util.Properties properties43 = null;
        java.util.Properties properties44 = new java.util.Properties(properties43);
        java.lang.Object obj46 = properties42.put((java.lang.Object) properties44, (java.lang.Object) (short) 1);
        java.util.Properties properties48 = null;
        java.util.Properties properties49 = new java.util.Properties(properties48);
        java.util.Properties properties50 = new java.util.Properties(properties48);
        java.util.Properties properties51 = null;
        java.util.Properties properties52 = new java.util.Properties(properties51);
        java.lang.Object obj54 = properties50.put((java.lang.Object) properties52, (java.lang.Object) (short) 1);
        boolean boolean55 = properties44.remove((java.lang.Object) false, (java.lang.Object) (short) 1);
        java.lang.Object obj57 = properties44.remove((java.lang.Object) '#');
        java.util.Set<java.lang.Object> objSet58 = properties44.keySet();
        properties44.clear();
        java.util.Properties properties60 = null;
        java.util.Properties properties61 = new java.util.Properties(properties60);
        java.util.Properties properties62 = new java.util.Properties(properties60);
        java.util.Properties properties63 = null;
        java.util.Properties properties64 = new java.util.Properties(properties63);
        java.lang.Object obj66 = properties62.put((java.lang.Object) properties64, (java.lang.Object) (short) 1);
        java.util.Enumeration<java.lang.Object> objEnumeration67 = properties64.elements();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet68 = properties64.entrySet();
        boolean boolean69 = properties44.equals((java.lang.Object) properties64);
        java.util.Enumeration<java.lang.Object> objEnumeration70 = properties64.elements();
        java.lang.Object obj71 = properties33.put((java.lang.Object) atomikosProperties34, (java.lang.Object) properties64);
        java.util.Properties properties72 = new java.util.Properties(properties64);
        java.io.OutputStream outputStream73 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties72.storeToXML(outputStream73, "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=100, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.tm_unique_name=, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertNotNull(properties2);
        org.junit.Assert.assertNull(obj9);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertNull(obj18);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertEquals("'" + obj32 + "' != '" + true + "'", obj32, true);
        org.junit.Assert.assertTrue("'" + long39 + "' != '" + 300000L + "'", long39 == 300000L);
        org.junit.Assert.assertNull(obj46);
        org.junit.Assert.assertNull(obj54);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertNull(obj57);
        org.junit.Assert.assertNotNull(objSet58);
        org.junit.Assert.assertNull(obj66);
        org.junit.Assert.assertNotNull(objEnumeration67);
        org.junit.Assert.assertNotNull(objEntrySet68);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + true + "'", boolean69 == true);
        org.junit.Assert.assertNotNull(objEnumeration70);
        org.junit.Assert.assertNull(obj71);
    }

    @Test
    public void test1962() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1962");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setDefaultJtaTimeout((long) (byte) 10);
        long long3 = atomikosProperties0.getDefaultJtaTimeout();
        java.lang.String str4 = atomikosProperties0.getTransactionManagerUniqueName();
        atomikosProperties0.setTransactionManagerUniqueName("{tmlog={com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=0, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.tm_unique_name=, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}, 4=true}");
        atomikosProperties0.setLogBaseDir("{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=0, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog, {}={}}");
        atomikosProperties0.setForceShutdownOnVmExit(true);
        java.util.Properties properties11 = atomikosProperties0.asProperties();
        boolean boolean12 = atomikosProperties0.isEnableLogging();
        long long13 = atomikosProperties0.getMaxTimeout();
        org.junit.Assert.assertTrue("'" + long3 + "' != '" + 10L + "'", long3 == 10L);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertNotNull(properties11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + long13 + "' != '" + 300000L + "'", long13 == 300000L);
    }

    @Test
    public void test1963() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1963");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setThreadedTwoPhaseCommit(true);
        atomikosProperties0.setMaxActives((int) '#');
        atomikosProperties0.setCheckpointInterval((long) 50);
        long long7 = atomikosProperties0.getCheckpointInterval();
        atomikosProperties0.setMaxActives(50);
        long long10 = atomikosProperties0.getMaxTimeout();
        atomikosProperties0.setMaxActives((int) (short) 10);
        java.util.Properties properties13 = atomikosProperties0.asProperties();
        atomikosProperties0.setForceShutdownOnVmExit(false);
        long long16 = atomikosProperties0.getCheckpointInterval();
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + 50L + "'", long7 == 50L);
        org.junit.Assert.assertTrue("'" + long10 + "' != '" + 300000L + "'", long10 == 300000L);
        org.junit.Assert.assertNotNull(properties13);
        org.junit.Assert.assertTrue("'" + long16 + "' != '" + 50L + "'", long16 == 50L);
    }

    @Test
    public void test1964() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1964");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setThreadedTwoPhaseCommit(true);
        boolean boolean3 = atomikosProperties0.isEnableLogging();
        boolean boolean4 = atomikosProperties0.isEnableLogging();
        java.util.Properties properties5 = atomikosProperties0.asProperties();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties6 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties6.setDefaultJtaTimeout((long) (byte) 10);
        atomikosProperties6.setCheckpointInterval((long) (byte) 0);
        atomikosProperties6.setTransactionManagerUniqueName("");
        java.util.Properties properties13 = atomikosProperties6.asProperties();
        java.lang.String str14 = atomikosProperties6.getTransactionManagerUniqueName();
        java.util.Properties properties15 = atomikosProperties6.asProperties();
        java.util.Properties properties16 = new java.util.Properties(properties15);
        java.util.Properties properties17 = new java.util.Properties(properties15);
        java.util.Properties properties18 = null;
        java.util.Properties properties19 = new java.util.Properties(properties18);
        java.util.Properties properties20 = new java.util.Properties(properties18);
        java.util.Properties properties21 = null;
        java.util.Properties properties22 = new java.util.Properties(properties21);
        java.lang.Object obj24 = properties20.put((java.lang.Object) properties22, (java.lang.Object) (short) 1);
        java.util.Properties properties26 = null;
        java.util.Properties properties27 = new java.util.Properties(properties26);
        java.util.Properties properties28 = new java.util.Properties(properties26);
        java.util.Properties properties29 = null;
        java.util.Properties properties30 = new java.util.Properties(properties29);
        java.lang.Object obj32 = properties28.put((java.lang.Object) properties30, (java.lang.Object) (short) 1);
        boolean boolean33 = properties22.remove((java.lang.Object) false, (java.lang.Object) (short) 1);
        java.util.Set<java.lang.String> strSet34 = properties22.stringPropertyNames();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties35 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties35.setDefaultJtaTimeout((long) (byte) 10);
        atomikosProperties35.setCheckpointInterval((long) (byte) 0);
        atomikosProperties35.setTransactionManagerUniqueName("");
        boolean boolean42 = atomikosProperties35.isEnableLogging();
        atomikosProperties35.setSerialJtaTransactions(false);
        atomikosProperties35.setLogBaseDir("");
        java.util.Properties properties47 = null;
        java.util.Properties properties48 = new java.util.Properties(properties47);
        java.util.Properties properties49 = new java.util.Properties(properties47);
        java.util.Properties properties50 = null;
        java.util.Properties properties51 = new java.util.Properties(properties50);
        java.lang.Object obj53 = properties49.put((java.lang.Object) properties51, (java.lang.Object) (short) 1);
        java.util.Properties properties54 = new java.util.Properties(properties51);
        boolean boolean55 = properties22.remove((java.lang.Object) "", (java.lang.Object) properties54);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties56 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties56.setDefaultJtaTimeout((long) (byte) 10);
        atomikosProperties56.setCheckpointInterval((long) (byte) 0);
        atomikosProperties56.setEnableLogging(true);
        long long63 = atomikosProperties56.getDefaultJtaTimeout();
        java.lang.Object obj64 = properties22.remove((java.lang.Object) atomikosProperties56);
        properties22.clear();
        java.lang.Object obj66 = properties22.clone();
        java.lang.String str67 = properties22.toString();
        java.lang.Object obj68 = properties17.get((java.lang.Object) str67);
        properties5.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties17);
        java.lang.String str72 = properties17.getProperty("{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=0, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=true, com.atomikos.icatch.max_actives=100, com.atomikos.icatch.log_base_name=tmlog}", "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=0, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog, {}={}}");
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(properties5);
        org.junit.Assert.assertNotNull(properties13);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "" + "'", str14, "");
        org.junit.Assert.assertNotNull(properties15);
        org.junit.Assert.assertNull(obj24);
        org.junit.Assert.assertNull(obj32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(strSet34);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertNull(obj53);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertTrue("'" + long63 + "' != '" + 10L + "'", long63 == 10L);
        org.junit.Assert.assertNull(obj64);
        org.junit.Assert.assertNotNull(obj66);
        org.junit.Assert.assertEquals(obj66.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj66), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj66), "{}");
        org.junit.Assert.assertEquals("'" + str67 + "' != '" + "{}" + "'", str67, "{}");
        org.junit.Assert.assertNull(obj68);
        org.junit.Assert.assertEquals("'" + str72 + "' != '" + "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=0, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog, {}={}}" + "'", str72, "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=0, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog, {}={}}");
    }

    @Test
    public void test1965() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1965");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        int int1 = atomikosProperties0.getMaxActives();
        long long2 = atomikosProperties0.getMaxTimeout();
        java.util.Properties properties3 = atomikosProperties0.asProperties();
        java.util.Properties properties4 = atomikosProperties0.asProperties();
        java.util.Properties properties5 = null;
        java.util.Properties properties6 = new java.util.Properties(properties5);
        java.util.Properties properties7 = new java.util.Properties(properties5);
        java.util.Properties properties8 = null;
        java.util.Properties properties9 = new java.util.Properties(properties8);
        java.lang.Object obj11 = properties7.put((java.lang.Object) properties9, (java.lang.Object) (short) 1);
        boolean boolean12 = properties7.isEmpty();
        java.util.Properties properties13 = null;
        java.util.Properties properties14 = new java.util.Properties(properties13);
        java.util.Properties properties15 = new java.util.Properties(properties13);
        boolean boolean16 = properties7.containsKey((java.lang.Object) properties15);
        java.util.Properties properties17 = new java.util.Properties(properties15);
        java.lang.Object obj18 = properties17.clone();
        java.util.Properties properties20 = null;
        java.util.Properties properties21 = new java.util.Properties(properties20);
        java.util.Properties properties22 = new java.util.Properties(properties20);
        java.util.Properties properties23 = null;
        java.util.Properties properties24 = new java.util.Properties(properties23);
        java.lang.Object obj26 = properties22.put((java.lang.Object) properties24, (java.lang.Object) (short) 1);
        boolean boolean27 = properties22.isEmpty();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties28 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties28.setDefaultJtaTimeout((long) (byte) 10);
        atomikosProperties28.setCheckpointInterval((long) (byte) 0);
        atomikosProperties28.setTransactionManagerUniqueName("");
        java.util.Properties properties35 = atomikosProperties28.asProperties();
        java.lang.Object obj36 = properties22.remove((java.lang.Object) properties35);
        java.lang.Object obj37 = properties17.putIfAbsent((java.lang.Object) 1L, (java.lang.Object) properties22);
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet38 = properties17.entrySet();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties39 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        boolean boolean40 = atomikosProperties39.isForceShutdownOnVmExit();
        java.util.Properties properties41 = atomikosProperties39.asProperties();
        java.util.Properties properties42 = null;
        java.util.Properties properties43 = new java.util.Properties(properties42);
        java.util.Properties properties44 = new java.util.Properties(properties42);
        java.util.Properties properties45 = null;
        java.util.Properties properties46 = new java.util.Properties(properties45);
        java.lang.Object obj48 = properties44.put((java.lang.Object) properties46, (java.lang.Object) (short) 1);
        properties46.clear();
        int int50 = properties46.size();
        java.util.Properties properties51 = null;
        java.util.Properties properties52 = new java.util.Properties(properties51);
        java.util.Properties properties53 = new java.util.Properties(properties51);
        java.util.Properties properties54 = null;
        java.util.Properties properties55 = new java.util.Properties(properties54);
        java.lang.Object obj57 = properties53.put((java.lang.Object) properties55, (java.lang.Object) (short) 1);
        java.util.Properties properties58 = new java.util.Properties(properties55);
        java.util.Properties properties59 = new java.util.Properties(properties55);
        boolean boolean61 = properties46.remove((java.lang.Object) properties55, (java.lang.Object) 10.0f);
        boolean boolean62 = properties41.containsKey((java.lang.Object) 10.0f);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties64 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties64.setDefaultJtaTimeout((long) (byte) 10);
        atomikosProperties64.setCheckpointInterval((long) (byte) 0);
        atomikosProperties64.setEnableLogging(true);
        java.lang.Object obj71 = properties41.getOrDefault((java.lang.Object) (byte) 0, (java.lang.Object) true);
        java.util.Properties properties72 = new java.util.Properties(properties41);
        boolean boolean73 = properties17.containsKey((java.lang.Object) properties72);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties74 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties74.setDefaultJtaTimeout((long) (byte) 10);
        long long77 = atomikosProperties74.getDefaultJtaTimeout();
        atomikosProperties74.setTransactionManagerUniqueName("hi!");
        atomikosProperties74.setTransactionManagerUniqueName("{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=0, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.tm_unique_name=, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
        atomikosProperties74.setService("");
        boolean boolean84 = properties4.remove((java.lang.Object) properties72, (java.lang.Object) "");
        java.util.Set<java.lang.String> strSet85 = properties72.stringPropertyNames();
        java.lang.Object obj88 = properties72.setProperty("{tmlog={}}", "hi!");
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 50 + "'", int1 == 50);
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + 300000L + "'", long2 == 300000L);
        org.junit.Assert.assertNotNull(properties3);
        org.junit.Assert.assertNotNull(properties4);
        org.junit.Assert.assertNull(obj11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(obj18);
        org.junit.Assert.assertEquals(obj18.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj18), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj18), "{}");
        org.junit.Assert.assertNull(obj26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(properties35);
        org.junit.Assert.assertNull(obj36);
        org.junit.Assert.assertNull(obj37);
        org.junit.Assert.assertNotNull(objEntrySet38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(properties41);
        org.junit.Assert.assertNull(obj48);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + 0 + "'", int50 == 0);
        org.junit.Assert.assertNull(obj57);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertEquals("'" + obj71 + "' != '" + true + "'", obj71, true);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertTrue("'" + long77 + "' != '" + 10L + "'", long77 == 10L);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + false + "'", boolean84 == false);
        org.junit.Assert.assertNotNull(strSet85);
        org.junit.Assert.assertNull(obj88);
    }

    @Test
    public void test1966() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1966");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Properties properties2 = new java.util.Properties(properties0);
        java.util.Properties properties3 = null;
        java.util.Properties properties4 = new java.util.Properties(properties3);
        java.lang.Object obj6 = properties2.put((java.lang.Object) properties4, (java.lang.Object) (short) 1);
        java.util.Enumeration<java.lang.Object> objEnumeration7 = properties4.elements();
        java.lang.String str8 = properties4.toString();
        java.util.Properties properties9 = null;
        java.util.Properties properties10 = new java.util.Properties(properties9);
        java.util.Properties properties11 = new java.util.Properties(properties9);
        java.util.Properties properties12 = null;
        java.util.Properties properties13 = new java.util.Properties(properties12);
        java.lang.Object obj15 = properties11.put((java.lang.Object) properties13, (java.lang.Object) (short) 1);
        properties13.clear();
        java.lang.String str18 = properties13.getProperty("");
        java.util.Properties properties19 = null;
        java.util.Properties properties20 = new java.util.Properties(properties19);
        java.util.Properties properties21 = new java.util.Properties(properties19);
        java.util.Properties properties22 = null;
        java.util.Properties properties23 = new java.util.Properties(properties22);
        java.lang.Object obj25 = properties21.put((java.lang.Object) properties23, (java.lang.Object) (short) 1);
        properties13.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties21);
        java.util.Enumeration<java.lang.Object> objEnumeration27 = properties13.keys();
        java.util.Enumeration<java.lang.Object> objEnumeration28 = properties13.elements();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties29 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties29.setDefaultJtaTimeout((long) (byte) 10);
        atomikosProperties29.setCheckpointInterval((long) (byte) 0);
        atomikosProperties29.setEnableLogging(true);
        java.lang.String str36 = atomikosProperties29.getLogBaseName();
        atomikosProperties29.setMaxActives((int) (short) 100);
        boolean boolean39 = properties4.remove((java.lang.Object) properties13, (java.lang.Object) atomikosProperties29);
        java.util.Properties properties40 = new java.util.Properties(properties13);
        boolean boolean41 = properties40.isEmpty();
        java.util.Enumeration<java.lang.Object> objEnumeration42 = properties40.elements();
        org.junit.Assert.assertNull(obj6);
        org.junit.Assert.assertNotNull(objEnumeration7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "{}" + "'", str8, "{}");
        org.junit.Assert.assertNull(obj15);
        org.junit.Assert.assertNull(str18);
        org.junit.Assert.assertNull(obj25);
        org.junit.Assert.assertNotNull(objEnumeration27);
        org.junit.Assert.assertNotNull(objEnumeration28);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "tmlog" + "'", str36, "tmlog");
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertNotNull(objEnumeration42);
    }

    @Test
    public void test1967() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1967");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Properties properties2 = new java.util.Properties(properties0);
        java.util.Properties properties3 = null;
        java.util.Properties properties4 = new java.util.Properties(properties3);
        java.lang.Object obj6 = properties2.put((java.lang.Object) properties4, (java.lang.Object) (short) 1);
        properties4.clear();
        int int8 = properties4.size();
        java.lang.Object obj11 = properties4.setProperty("hi!", "hi!");
        java.util.Properties properties12 = null;
        java.util.Properties properties13 = new java.util.Properties(properties12);
        java.util.Properties properties14 = new java.util.Properties(properties12);
        java.util.Properties properties15 = null;
        java.util.Properties properties16 = new java.util.Properties(properties15);
        java.lang.Object obj18 = properties14.put((java.lang.Object) properties16, (java.lang.Object) (short) 1);
        java.util.Properties properties19 = new java.util.Properties(properties16);
        java.util.Enumeration<java.lang.Object> objEnumeration20 = properties19.elements();
        java.util.Enumeration<java.lang.Object> objEnumeration21 = properties19.elements();
        properties4.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties19);
        java.util.Enumeration<java.lang.Object> objEnumeration23 = properties4.keys();
        java.io.InputStream inputStream24 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties4.loadFromXML(inputStream24);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(obj6);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertNull(obj11);
        org.junit.Assert.assertNull(obj18);
        org.junit.Assert.assertNotNull(objEnumeration20);
        org.junit.Assert.assertNotNull(objEnumeration21);
        org.junit.Assert.assertNotNull(objEnumeration23);
    }

    @Test
    public void test1968() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1968");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setDefaultJtaTimeout((long) (byte) 10);
        long long3 = atomikosProperties0.getDefaultJtaTimeout();
        atomikosProperties0.setTransactionManagerUniqueName("hi!");
        atomikosProperties0.setTransactionManagerUniqueName("{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=0, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.tm_unique_name=, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
        atomikosProperties0.setEnableLogging(false);
        java.lang.String str10 = atomikosProperties0.getTransactionManagerUniqueName();
        java.lang.String str11 = atomikosProperties0.getLogBaseName();
        atomikosProperties0.setCheckpointInterval((long) (short) 1);
        java.util.Properties properties14 = atomikosProperties0.asProperties();
        java.lang.String str15 = atomikosProperties0.getTransactionManagerUniqueName();
        org.junit.Assert.assertTrue("'" + long3 + "' != '" + 10L + "'", long3 == 10L);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=0, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.tm_unique_name=, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}" + "'", str10, "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=0, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.tm_unique_name=, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "tmlog" + "'", str11, "tmlog");
        org.junit.Assert.assertNotNull(properties14);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=0, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.tm_unique_name=, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}" + "'", str15, "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=0, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.tm_unique_name=, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
    }

    @Test
    public void test1969() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1969");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setThreadedTwoPhaseCommit(true);
        atomikosProperties0.setMaxActives((int) (byte) 0);
        atomikosProperties0.setEnableLogging(true);
        atomikosProperties0.setForceShutdownOnVmExit(false);
        boolean boolean9 = atomikosProperties0.isThreadedTwoPhaseCommit();
        atomikosProperties0.setForceShutdownOnVmExit(false);
        atomikosProperties0.setEnableLogging(false);
        java.lang.String str14 = atomikosProperties0.getTransactionManagerUniqueName();
        atomikosProperties0.setSerialJtaTransactions(false);
        boolean boolean17 = atomikosProperties0.isSerialJtaTransactions();
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
    }

    @Test
    public void test1970() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1970");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Properties properties2 = new java.util.Properties(properties0);
        java.util.Properties properties3 = null;
        java.util.Properties properties4 = new java.util.Properties(properties3);
        java.lang.Object obj6 = properties2.put((java.lang.Object) properties4, (java.lang.Object) (short) 1);
        properties4.clear();
        int int8 = properties4.size();
        java.util.Properties properties9 = new java.util.Properties(properties4);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties10 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        int int11 = atomikosProperties10.getMaxActives();
        long long12 = atomikosProperties10.getMaxTimeout();
        java.util.Properties properties13 = atomikosProperties10.asProperties();
        java.util.Properties properties14 = atomikosProperties10.asProperties();
        java.util.Properties properties15 = null;
        java.util.Properties properties16 = new java.util.Properties(properties15);
        java.util.Properties properties17 = new java.util.Properties(properties15);
        java.util.Properties properties18 = null;
        java.util.Properties properties19 = new java.util.Properties(properties18);
        java.lang.Object obj21 = properties17.put((java.lang.Object) properties19, (java.lang.Object) (short) 1);
        java.util.Enumeration<java.lang.Object> objEnumeration22 = properties19.elements();
        java.lang.Object obj23 = properties4.replace((java.lang.Object) atomikosProperties10, (java.lang.Object) properties19);
        atomikosProperties10.setLogBaseName("");
        java.lang.String str26 = atomikosProperties10.getTransactionManagerUniqueName();
        atomikosProperties10.setMaxActives(1);
        java.util.Properties properties29 = atomikosProperties10.asProperties();
        java.lang.Object obj32 = properties29.setProperty("{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}", "hi!");
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet33 = properties29.entrySet();
        java.io.InputStream inputStream34 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties29.load(inputStream34);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(obj6);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 50 + "'", int11 == 50);
        org.junit.Assert.assertTrue("'" + long12 + "' != '" + 300000L + "'", long12 == 300000L);
        org.junit.Assert.assertNotNull(properties13);
        org.junit.Assert.assertNotNull(properties14);
        org.junit.Assert.assertNull(obj21);
        org.junit.Assert.assertNotNull(objEnumeration22);
        org.junit.Assert.assertNull(obj23);
        org.junit.Assert.assertNull(str26);
        org.junit.Assert.assertNotNull(properties29);
        org.junit.Assert.assertNull(obj32);
        org.junit.Assert.assertNotNull(objEntrySet33);
    }

    @Test
    public void test1971() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1971");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setThreadedTwoPhaseCommit(true);
        atomikosProperties0.setMaxActives((int) (byte) 0);
        atomikosProperties0.setEnableLogging(true);
        atomikosProperties0.setForceShutdownOnVmExit(false);
        java.util.Properties properties9 = atomikosProperties0.asProperties();
        boolean boolean10 = atomikosProperties0.isThreadedTwoPhaseCommit();
        java.util.Properties properties11 = atomikosProperties0.asProperties();
        atomikosProperties0.setLogBaseDir("{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.tm_unique_name=, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
        atomikosProperties0.setLogBaseDir("{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=100, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=true, com.atomikos.icatch.tm_unique_name=, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name={com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.tm_unique_name=, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}}");
        java.lang.String str16 = atomikosProperties0.getTransactionManagerUniqueName();
        org.junit.Assert.assertNotNull(properties9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(properties11);
        org.junit.Assert.assertNull(str16);
    }

    @Test
    public void test1972() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1972");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Properties properties2 = new java.util.Properties(properties0);
        java.util.Properties properties3 = null;
        java.util.Properties properties4 = new java.util.Properties(properties3);
        java.lang.Object obj6 = properties2.put((java.lang.Object) properties4, (java.lang.Object) (short) 1);
        properties4.clear();
        java.lang.String str9 = properties4.getProperty("");
        java.util.Properties properties10 = null;
        java.util.Properties properties11 = new java.util.Properties(properties10);
        java.util.Properties properties12 = new java.util.Properties(properties10);
        java.util.Properties properties13 = null;
        java.util.Properties properties14 = new java.util.Properties(properties13);
        java.lang.Object obj16 = properties12.put((java.lang.Object) properties14, (java.lang.Object) (short) 1);
        properties4.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties12);
        java.util.Enumeration<java.lang.Object> objEnumeration18 = properties4.keys();
        java.util.Properties properties19 = null;
        java.util.Properties properties20 = new java.util.Properties(properties19);
        java.util.Properties properties21 = new java.util.Properties(properties19);
        java.util.Properties properties22 = null;
        java.util.Properties properties23 = new java.util.Properties(properties22);
        java.lang.Object obj25 = properties21.put((java.lang.Object) properties23, (java.lang.Object) (short) 1);
        boolean boolean26 = properties21.isEmpty();
        java.util.Properties properties27 = null;
        java.util.Properties properties28 = new java.util.Properties(properties27);
        java.util.Properties properties29 = new java.util.Properties(properties27);
        boolean boolean30 = properties21.containsKey((java.lang.Object) properties29);
        java.util.Properties properties31 = null;
        java.util.Properties properties32 = new java.util.Properties(properties31);
        java.util.Properties properties33 = new java.util.Properties(properties31);
        java.util.Properties properties34 = null;
        java.util.Properties properties35 = new java.util.Properties(properties34);
        java.lang.Object obj37 = properties33.put((java.lang.Object) properties35, (java.lang.Object) (short) 1);
        java.util.Properties properties39 = null;
        java.util.Properties properties40 = new java.util.Properties(properties39);
        java.util.Properties properties41 = new java.util.Properties(properties39);
        java.util.Properties properties42 = null;
        java.util.Properties properties43 = new java.util.Properties(properties42);
        java.lang.Object obj45 = properties41.put((java.lang.Object) properties43, (java.lang.Object) (short) 1);
        boolean boolean46 = properties35.remove((java.lang.Object) false, (java.lang.Object) (short) 1);
        java.util.Set<java.lang.String> strSet47 = properties35.stringPropertyNames();
        boolean boolean48 = properties29.containsKey((java.lang.Object) strSet47);
        java.util.Properties properties49 = null;
        java.util.Properties properties50 = new java.util.Properties(properties49);
        java.util.Properties properties51 = new java.util.Properties(properties49);
        java.util.Properties properties52 = null;
        java.util.Properties properties53 = new java.util.Properties(properties52);
        java.lang.Object obj55 = properties51.put((java.lang.Object) properties53, (java.lang.Object) (short) 1);
        properties53.clear();
        java.lang.String str58 = properties53.getProperty("");
        java.util.Properties properties59 = null;
        java.util.Properties properties60 = new java.util.Properties(properties59);
        java.util.Properties properties61 = new java.util.Properties(properties59);
        java.util.Properties properties62 = null;
        java.util.Properties properties63 = new java.util.Properties(properties62);
        java.lang.Object obj65 = properties61.put((java.lang.Object) properties63, (java.lang.Object) (short) 1);
        properties53.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties61);
        boolean boolean67 = properties29.containsKey((java.lang.Object) properties53);
        java.util.Properties properties69 = null;
        java.util.Properties properties70 = new java.util.Properties(properties69);
        java.util.Properties properties71 = new java.util.Properties(properties69);
        java.util.Properties properties72 = null;
        java.util.Properties properties73 = new java.util.Properties(properties72);
        java.lang.Object obj75 = properties71.put((java.lang.Object) properties73, (java.lang.Object) (short) 1);
        properties73.clear();
        int int77 = properties73.size();
        java.lang.Object obj80 = properties73.setProperty("hi!", "hi!");
        java.lang.Object obj83 = properties73.setProperty("tmlog", "tmlog");
        java.lang.Object obj84 = properties53.putIfAbsent((java.lang.Object) (short) 10, (java.lang.Object) "tmlog");
        properties53.clear();
        boolean boolean86 = properties4.equals((java.lang.Object) properties53);
        java.util.Properties properties87 = new java.util.Properties(properties4);
        java.io.Reader reader88 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties4.load(reader88);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(obj6);
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertNull(obj16);
        org.junit.Assert.assertNotNull(objEnumeration18);
        org.junit.Assert.assertNull(obj25);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNull(obj37);
        org.junit.Assert.assertNull(obj45);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(strSet47);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNull(obj55);
        org.junit.Assert.assertNull(str58);
        org.junit.Assert.assertNull(obj65);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertNull(obj75);
        org.junit.Assert.assertTrue("'" + int77 + "' != '" + 0 + "'", int77 == 0);
        org.junit.Assert.assertNull(obj80);
        org.junit.Assert.assertNull(obj83);
        org.junit.Assert.assertNull(obj84);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + false + "'", boolean86 == false);
    }

    @Test
    public void test1973() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1973");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Properties properties2 = new java.util.Properties(properties0);
        java.util.Properties properties3 = null;
        java.util.Properties properties4 = new java.util.Properties(properties3);
        java.lang.Object obj6 = properties2.put((java.lang.Object) properties4, (java.lang.Object) (short) 1);
        properties4.clear();
        int int8 = properties4.size();
        java.util.Properties properties9 = null;
        java.util.Properties properties10 = new java.util.Properties(properties9);
        java.util.Properties properties11 = new java.util.Properties(properties9);
        java.util.Properties properties12 = null;
        java.util.Properties properties13 = new java.util.Properties(properties12);
        java.lang.Object obj15 = properties11.put((java.lang.Object) properties13, (java.lang.Object) (short) 1);
        java.util.Properties properties16 = new java.util.Properties(properties13);
        java.util.Properties properties17 = new java.util.Properties(properties13);
        boolean boolean19 = properties4.remove((java.lang.Object) properties13, (java.lang.Object) 10.0f);
        java.util.Enumeration<java.lang.Object> objEnumeration20 = properties13.elements();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties21 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties21.setDefaultJtaTimeout((long) (byte) 10);
        atomikosProperties21.setCheckpointInterval((long) (byte) 0);
        long long26 = atomikosProperties21.getMaxTimeout();
        atomikosProperties21.setSerialJtaTransactions(true);
        java.util.Properties properties29 = new java.util.Properties();
        java.util.Enumeration<?> wildcardEnumeration30 = properties29.propertyNames();
        java.lang.Object obj31 = properties13.replace((java.lang.Object) atomikosProperties21, (java.lang.Object) properties29);
        java.util.Properties properties32 = null;
        java.util.Properties properties33 = new java.util.Properties(properties32);
        java.util.Properties properties34 = new java.util.Properties(properties32);
        java.util.Properties properties35 = null;
        java.util.Properties properties36 = new java.util.Properties(properties35);
        java.lang.Object obj38 = properties34.put((java.lang.Object) properties36, (java.lang.Object) (short) 1);
        boolean boolean39 = properties34.isEmpty();
        java.util.Properties properties40 = null;
        java.util.Properties properties41 = new java.util.Properties(properties40);
        java.util.Properties properties42 = new java.util.Properties(properties40);
        boolean boolean43 = properties34.containsKey((java.lang.Object) properties42);
        java.util.Properties properties44 = new java.util.Properties(properties42);
        java.util.Properties properties45 = null;
        java.util.Properties properties46 = new java.util.Properties(properties45);
        java.util.Properties properties47 = new java.util.Properties(properties45);
        java.util.Properties properties48 = null;
        java.util.Properties properties49 = new java.util.Properties(properties48);
        java.lang.Object obj51 = properties47.put((java.lang.Object) properties49, (java.lang.Object) (short) 1);
        boolean boolean52 = properties47.isEmpty();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties53 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties53.setDefaultJtaTimeout((long) (byte) 10);
        atomikosProperties53.setCheckpointInterval((long) (byte) 0);
        atomikosProperties53.setTransactionManagerUniqueName("");
        java.util.Properties properties60 = atomikosProperties53.asProperties();
        java.lang.Object obj61 = properties47.remove((java.lang.Object) properties60);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties62 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties62.setDefaultJtaTimeout((long) (byte) 10);
        atomikosProperties62.setCheckpointInterval((long) (byte) 0);
        atomikosProperties62.setTransactionManagerUniqueName("");
        java.lang.Object obj69 = properties60.remove((java.lang.Object) atomikosProperties62);
        java.util.Enumeration<java.lang.Object> objEnumeration70 = properties60.elements();
        java.lang.Object obj71 = properties44.get((java.lang.Object) properties60);
        properties13.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties60);
        java.util.Set<java.lang.String> strSet73 = properties13.stringPropertyNames();
        java.lang.Object obj74 = null;
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties75 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties75.setDefaultJtaTimeout((long) (byte) 10);
        atomikosProperties75.setSerialJtaTransactions(false);
        atomikosProperties75.setService("{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.tm_unique_name=, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
        atomikosProperties75.setService("tmlog");
        java.lang.String str84 = atomikosProperties75.getLogBaseDir();
        atomikosProperties75.setTransactionManagerUniqueName("{tmlog={com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=0, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.tm_unique_name=, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}, 4=true}");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties87 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        int int88 = atomikosProperties87.getMaxActives();
        long long89 = atomikosProperties87.getMaxTimeout();
        java.lang.String str90 = atomikosProperties87.getLogBaseDir();
        java.util.Properties properties91 = atomikosProperties87.asProperties();
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean92 = properties13.replace(obj74, (java.lang.Object) atomikosProperties75, (java.lang.Object) atomikosProperties87);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(obj6);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertNull(obj15);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(objEnumeration20);
        org.junit.Assert.assertTrue("'" + long26 + "' != '" + 300000L + "'", long26 == 300000L);
        org.junit.Assert.assertNotNull(wildcardEnumeration30);
        org.junit.Assert.assertNull(obj31);
        org.junit.Assert.assertNull(obj38);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNull(obj51);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNotNull(properties60);
        org.junit.Assert.assertNull(obj61);
        org.junit.Assert.assertNull(obj69);
        org.junit.Assert.assertNotNull(objEnumeration70);
        org.junit.Assert.assertNull(obj71);
        org.junit.Assert.assertNotNull(strSet73);
        org.junit.Assert.assertNull(str84);
        org.junit.Assert.assertTrue("'" + int88 + "' != '" + 50 + "'", int88 == 50);
        org.junit.Assert.assertTrue("'" + long89 + "' != '" + 300000L + "'", long89 == 300000L);
        org.junit.Assert.assertNull(str90);
        org.junit.Assert.assertNotNull(properties91);
    }

    @Test
    public void test1974() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1974");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Properties properties2 = new java.util.Properties(properties0);
        java.util.Properties properties3 = null;
        java.util.Properties properties4 = new java.util.Properties(properties3);
        java.lang.Object obj6 = properties2.put((java.lang.Object) properties4, (java.lang.Object) (short) 1);
        properties4.clear();
        java.util.Properties properties8 = null;
        java.util.Properties properties9 = new java.util.Properties(properties8);
        java.util.Properties properties10 = new java.util.Properties(properties8);
        java.util.Properties properties11 = null;
        java.util.Properties properties12 = new java.util.Properties(properties11);
        java.lang.Object obj14 = properties10.put((java.lang.Object) properties12, (java.lang.Object) (short) 1);
        java.util.Collection<java.lang.Object> objCollection15 = properties12.values();
        boolean boolean16 = properties4.containsKey((java.lang.Object) objCollection15);
        boolean boolean17 = properties4.isEmpty();
        java.util.Properties properties18 = new java.util.Properties(properties4);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties19 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties19.setDefaultJtaTimeout((long) (byte) 10);
        atomikosProperties19.setCheckpointInterval((long) (byte) 0);
        atomikosProperties19.setTransactionManagerUniqueName("");
        java.util.Properties properties26 = atomikosProperties19.asProperties();
        java.util.Properties properties27 = atomikosProperties19.asProperties();
        java.util.Properties properties28 = new java.util.Properties(properties27);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties29 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties29.setDefaultJtaTimeout((long) (byte) 10);
        long long32 = atomikosProperties29.getDefaultJtaTimeout();
        atomikosProperties29.setTransactionManagerUniqueName("");
        boolean boolean35 = atomikosProperties29.isEnableLogging();
        java.lang.String str36 = atomikosProperties29.getLogBaseDir();
        java.util.Properties properties37 = atomikosProperties29.asProperties();
        boolean boolean38 = atomikosProperties29.isEnableLogging();
        long long39 = atomikosProperties29.getDefaultJtaTimeout();
        atomikosProperties29.setMaxActives((int) (short) 10);
        long long42 = atomikosProperties29.getMaxTimeout();
        java.lang.Object obj43 = properties18.putIfAbsent((java.lang.Object) properties27, (java.lang.Object) long42);
        java.util.Set<java.lang.String> strSet44 = properties18.stringPropertyNames();
        org.junit.Assert.assertNull(obj6);
        org.junit.Assert.assertNull(obj14);
        org.junit.Assert.assertNotNull(objCollection15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(properties26);
        org.junit.Assert.assertNotNull(properties27);
        org.junit.Assert.assertTrue("'" + long32 + "' != '" + 10L + "'", long32 == 10L);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertNull(str36);
        org.junit.Assert.assertNotNull(properties37);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertTrue("'" + long39 + "' != '" + 10L + "'", long39 == 10L);
        org.junit.Assert.assertTrue("'" + long42 + "' != '" + 300000L + "'", long42 == 300000L);
        org.junit.Assert.assertNull(obj43);
        org.junit.Assert.assertNotNull(strSet44);
    }

    @Test
    public void test1975() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1975");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Properties properties2 = new java.util.Properties(properties0);
        java.util.Properties properties3 = null;
        java.util.Properties properties4 = new java.util.Properties(properties3);
        java.lang.Object obj6 = properties2.put((java.lang.Object) properties4, (java.lang.Object) (short) 1);
        java.util.Properties properties7 = new java.util.Properties(properties4);
        java.util.Properties properties8 = new java.util.Properties(properties4);
        java.util.Set<java.lang.Object> objSet9 = properties8.keySet();
        java.util.Properties properties10 = new java.util.Properties(properties8);
        int int11 = properties10.size();
        java.util.Properties properties12 = null;
        java.util.Properties properties13 = new java.util.Properties(properties12);
        java.util.Properties properties14 = new java.util.Properties(properties12);
        java.util.Properties properties15 = null;
        java.util.Properties properties16 = new java.util.Properties(properties15);
        java.lang.Object obj18 = properties14.put((java.lang.Object) properties16, (java.lang.Object) (short) 1);
        java.util.Properties properties20 = null;
        java.util.Properties properties21 = new java.util.Properties(properties20);
        java.util.Properties properties22 = new java.util.Properties(properties20);
        java.util.Properties properties23 = null;
        java.util.Properties properties24 = new java.util.Properties(properties23);
        java.lang.Object obj26 = properties22.put((java.lang.Object) properties24, (java.lang.Object) (short) 1);
        boolean boolean27 = properties16.remove((java.lang.Object) false, (java.lang.Object) (short) 1);
        java.util.Set<java.lang.String> strSet28 = properties16.stringPropertyNames();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties29 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties29.setDefaultJtaTimeout((long) (byte) 10);
        long long32 = atomikosProperties29.getDefaultJtaTimeout();
        java.lang.Object obj33 = properties16.get((java.lang.Object) atomikosProperties29);
        atomikosProperties29.setCheckpointInterval((long) (short) 100);
        java.util.Properties properties36 = atomikosProperties29.asProperties();
        java.lang.String str37 = atomikosProperties29.getLogBaseName();
        atomikosProperties29.setLogBaseDir("{}");
        java.util.Properties properties40 = null;
        java.util.Properties properties41 = new java.util.Properties(properties40);
        int int42 = properties41.size();
        java.lang.Object obj43 = properties10.getOrDefault((java.lang.Object) atomikosProperties29, (java.lang.Object) properties41);
        java.util.Properties properties44 = new java.util.Properties(properties10);
        java.io.OutputStream outputStream45 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties10.storeToXML(outputStream45, "{tmlog=}", "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=0, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=true, com.atomikos.icatch.max_actives=100, com.atomikos.icatch.log_base_name=tmlog}");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(obj6);
        org.junit.Assert.assertNotNull(objSet9);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertNull(obj18);
        org.junit.Assert.assertNull(obj26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(strSet28);
        org.junit.Assert.assertTrue("'" + long32 + "' != '" + 10L + "'", long32 == 10L);
        org.junit.Assert.assertNull(obj33);
        org.junit.Assert.assertNotNull(properties36);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "tmlog" + "'", str37, "tmlog");
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 0 + "'", int42 == 0);
        org.junit.Assert.assertNotNull(obj43);
        org.junit.Assert.assertEquals(obj43.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj43), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj43), "{}");
    }

    @Test
    public void test1976() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1976");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Properties properties2 = new java.util.Properties(properties0);
        boolean boolean4 = properties2.containsValue((java.lang.Object) (short) 100);
        java.util.Properties properties5 = null;
        java.util.Properties properties6 = new java.util.Properties(properties5);
        java.util.Properties properties7 = new java.util.Properties(properties5);
        java.util.Properties properties8 = null;
        java.util.Properties properties9 = new java.util.Properties(properties8);
        java.lang.Object obj11 = properties7.put((java.lang.Object) properties9, (java.lang.Object) (short) 1);
        java.util.Enumeration<java.lang.Object> objEnumeration12 = properties9.elements();
        java.lang.Object obj13 = properties2.remove((java.lang.Object) properties9);
        java.lang.Object obj16 = properties9.setProperty("", "");
        java.util.Properties properties17 = null;
        java.util.Properties properties18 = new java.util.Properties(properties17);
        java.util.Properties properties19 = new java.util.Properties(properties17);
        java.util.Properties properties20 = null;
        java.util.Properties properties21 = new java.util.Properties(properties20);
        java.lang.Object obj23 = properties19.put((java.lang.Object) properties21, (java.lang.Object) (short) 1);
        java.util.Properties properties25 = null;
        java.util.Properties properties26 = new java.util.Properties(properties25);
        java.util.Properties properties27 = new java.util.Properties(properties25);
        java.util.Properties properties28 = null;
        java.util.Properties properties29 = new java.util.Properties(properties28);
        java.lang.Object obj31 = properties27.put((java.lang.Object) properties29, (java.lang.Object) (short) 1);
        boolean boolean32 = properties21.remove((java.lang.Object) false, (java.lang.Object) (short) 1);
        java.util.Properties properties33 = new java.util.Properties(properties21);
        properties9.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties33);
        java.util.Properties properties35 = null;
        java.util.Properties properties36 = new java.util.Properties(properties35);
        java.util.Properties properties37 = new java.util.Properties(properties35);
        java.util.Properties properties38 = null;
        java.util.Properties properties39 = new java.util.Properties(properties38);
        java.lang.Object obj41 = properties37.put((java.lang.Object) properties39, (java.lang.Object) (short) 1);
        properties39.clear();
        int int43 = properties39.size();
        java.util.Properties properties44 = null;
        java.util.Properties properties45 = new java.util.Properties(properties44);
        java.util.Properties properties46 = new java.util.Properties(properties44);
        java.util.Properties properties47 = null;
        java.util.Properties properties48 = new java.util.Properties(properties47);
        java.lang.Object obj50 = properties46.put((java.lang.Object) properties48, (java.lang.Object) (short) 1);
        java.util.Properties properties51 = new java.util.Properties(properties48);
        java.util.Properties properties52 = new java.util.Properties(properties48);
        boolean boolean54 = properties39.remove((java.lang.Object) properties48, (java.lang.Object) 10.0f);
        java.util.Enumeration<java.lang.Object> objEnumeration55 = properties48.elements();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties56 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties56.setDefaultJtaTimeout((long) (byte) 10);
        atomikosProperties56.setCheckpointInterval((long) (byte) 0);
        long long61 = atomikosProperties56.getMaxTimeout();
        atomikosProperties56.setSerialJtaTransactions(true);
        java.util.Properties properties64 = new java.util.Properties();
        java.util.Enumeration<?> wildcardEnumeration65 = properties64.propertyNames();
        java.lang.Object obj66 = properties48.replace((java.lang.Object) atomikosProperties56, (java.lang.Object) properties64);
        boolean boolean67 = properties9.contains((java.lang.Object) properties64);
        java.io.OutputStream outputStream68 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties9.storeToXML(outputStream68, "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=100, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.tm_unique_name=, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNull(obj11);
        org.junit.Assert.assertNotNull(objEnumeration12);
        org.junit.Assert.assertNull(obj13);
        org.junit.Assert.assertNull(obj16);
        org.junit.Assert.assertNull(obj23);
        org.junit.Assert.assertNull(obj31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNull(obj41);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 0 + "'", int43 == 0);
        org.junit.Assert.assertNull(obj50);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertNotNull(objEnumeration55);
        org.junit.Assert.assertTrue("'" + long61 + "' != '" + 300000L + "'", long61 == 300000L);
        org.junit.Assert.assertNotNull(wildcardEnumeration65);
        org.junit.Assert.assertNull(obj66);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
    }

    @Test
    public void test1977() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1977");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setDefaultJtaTimeout((long) (byte) 10);
        atomikosProperties0.setCheckpointInterval((long) (byte) 0);
        atomikosProperties0.setTransactionManagerUniqueName("");
        boolean boolean7 = atomikosProperties0.isEnableLogging();
        atomikosProperties0.setLogBaseDir("hi!");
        java.lang.String str10 = atomikosProperties0.getTransactionManagerUniqueName();
        boolean boolean11 = atomikosProperties0.isThreadedTwoPhaseCommit();
        java.lang.String str12 = atomikosProperties0.getService();
        boolean boolean13 = atomikosProperties0.isThreadedTwoPhaseCommit();
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
    }

    @Test
    public void test1978() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1978");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setThreadedTwoPhaseCommit(true);
        atomikosProperties0.setMaxActives((int) (byte) 0);
        atomikosProperties0.setDefaultJtaTimeout((long) 10);
        atomikosProperties0.setDefaultJtaTimeout((long) (short) 10);
        java.util.Properties properties9 = atomikosProperties0.asProperties();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties10 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties10.setThreadedTwoPhaseCommit(true);
        atomikosProperties10.setMaxActives((int) '#');
        atomikosProperties10.setForceShutdownOnVmExit(true);
        java.lang.String str17 = atomikosProperties10.getLogBaseDir();
        java.util.Properties properties18 = atomikosProperties10.asProperties();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties19 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties19.setThreadedTwoPhaseCommit(true);
        atomikosProperties19.setMaxActives((int) '#');
        atomikosProperties19.setEnableLogging(true);
        boolean boolean26 = properties18.containsKey((java.lang.Object) true);
        boolean boolean27 = properties9.contains((java.lang.Object) properties18);
        java.util.Properties properties28 = new java.util.Properties(properties18);
        java.util.Collection<java.lang.Object> objCollection29 = properties28.values();
        org.junit.Assert.assertNotNull(properties9);
        org.junit.Assert.assertNull(str17);
        org.junit.Assert.assertNotNull(properties18);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(objCollection29);
    }

    @Test
    public void test1979() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1979");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Properties properties2 = new java.util.Properties(properties0);
        boolean boolean4 = properties2.containsValue((java.lang.Object) (short) 100);
        java.util.Properties properties5 = new java.util.Properties(properties2);
        java.lang.String str7 = properties5.getProperty("hi!");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties8 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties8.setDefaultJtaTimeout((long) (byte) 10);
        long long11 = atomikosProperties8.getDefaultJtaTimeout();
        atomikosProperties8.setTransactionManagerUniqueName("hi!");
        atomikosProperties8.setLogBaseName("tmlog");
        boolean boolean16 = atomikosProperties8.isSerialJtaTransactions();
        java.util.Properties properties17 = atomikosProperties8.asProperties();
        boolean boolean18 = properties5.equals((java.lang.Object) atomikosProperties8);
        java.util.Set<java.lang.Object> objSet19 = properties5.keySet();
        java.util.Properties properties20 = null;
        java.util.Properties properties21 = new java.util.Properties(properties20);
        java.util.Properties properties22 = new java.util.Properties(properties20);
        boolean boolean24 = properties22.containsValue((java.lang.Object) (short) 100);
        java.util.Properties properties25 = null;
        java.util.Properties properties26 = new java.util.Properties(properties25);
        java.util.Properties properties27 = new java.util.Properties(properties25);
        java.util.Properties properties28 = null;
        java.util.Properties properties29 = new java.util.Properties(properties28);
        java.lang.Object obj31 = properties27.put((java.lang.Object) properties29, (java.lang.Object) (short) 1);
        java.util.Enumeration<java.lang.Object> objEnumeration32 = properties29.elements();
        java.lang.Object obj33 = properties22.remove((java.lang.Object) properties29);
        java.util.Enumeration<?> wildcardEnumeration34 = properties22.propertyNames();
        properties5.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties22);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties36 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties36.setThreadedTwoPhaseCommit(true);
        atomikosProperties36.setTransactionManagerUniqueName("tmlog");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties41 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties41.setDefaultJtaTimeout((long) (byte) 10);
        long long44 = atomikosProperties41.getDefaultJtaTimeout();
        atomikosProperties41.setTransactionManagerUniqueName("");
        boolean boolean47 = atomikosProperties41.isEnableLogging();
        java.lang.String str48 = atomikosProperties41.getLogBaseDir();
        java.util.Properties properties49 = atomikosProperties41.asProperties();
        java.lang.String str50 = atomikosProperties41.getService();
        atomikosProperties41.setMaxActives((int) (short) 1);
        atomikosProperties41.setThreadedTwoPhaseCommit(false);
        java.lang.Object obj55 = properties5.put((java.lang.Object) atomikosProperties36, (java.lang.Object) atomikosProperties41);
        boolean boolean56 = atomikosProperties41.isEnableLogging();
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertTrue("'" + long11 + "' != '" + 10L + "'", long11 == 10L);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(properties17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(objSet19);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNull(obj31);
        org.junit.Assert.assertNotNull(objEnumeration32);
        org.junit.Assert.assertNull(obj33);
        org.junit.Assert.assertNotNull(wildcardEnumeration34);
        org.junit.Assert.assertTrue("'" + long44 + "' != '" + 10L + "'", long44 == 10L);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertNull(str48);
        org.junit.Assert.assertNotNull(properties49);
        org.junit.Assert.assertNull(str50);
        org.junit.Assert.assertNull(obj55);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
    }

    @Test
    public void test1980() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1980");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setThreadedTwoPhaseCommit(true);
        java.lang.String str3 = atomikosProperties0.getService();
        long long4 = atomikosProperties0.getCheckpointInterval();
        atomikosProperties0.setDefaultJtaTimeout((long) '#');
        atomikosProperties0.setDefaultJtaTimeout((long) '#');
        boolean boolean9 = atomikosProperties0.isForceShutdownOnVmExit();
        long long10 = atomikosProperties0.getCheckpointInterval();
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertTrue("'" + long4 + "' != '" + 500L + "'", long4 == 500L);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + long10 + "' != '" + 500L + "'", long10 == 500L);
    }

    @Test
    public void test1981() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1981");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setDefaultJtaTimeout((long) (byte) 10);
        atomikosProperties0.setSerialJtaTransactions(false);
        atomikosProperties0.setService("{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.tm_unique_name=, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
        atomikosProperties0.setService("tmlog");
        java.lang.String str9 = atomikosProperties0.getLogBaseDir();
        boolean boolean10 = atomikosProperties0.isSerialJtaTransactions();
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
    }

    @Test
    public void test1982() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1982");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Properties properties2 = new java.util.Properties(properties0);
        java.util.Properties properties3 = null;
        java.util.Properties properties4 = new java.util.Properties(properties3);
        java.lang.Object obj6 = properties2.put((java.lang.Object) properties4, (java.lang.Object) (short) 1);
        java.util.Properties properties8 = null;
        java.util.Properties properties9 = new java.util.Properties(properties8);
        java.util.Properties properties10 = new java.util.Properties(properties8);
        java.util.Properties properties11 = null;
        java.util.Properties properties12 = new java.util.Properties(properties11);
        java.lang.Object obj14 = properties10.put((java.lang.Object) properties12, (java.lang.Object) (short) 1);
        boolean boolean15 = properties4.remove((java.lang.Object) false, (java.lang.Object) (short) 1);
        java.lang.Object obj17 = properties4.remove((java.lang.Object) '#');
        java.util.Properties properties18 = null;
        java.util.Properties properties19 = new java.util.Properties(properties18);
        java.util.Properties properties20 = new java.util.Properties(properties18);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties21 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        int int22 = atomikosProperties21.getMaxActives();
        long long23 = atomikosProperties21.getMaxTimeout();
        java.lang.String str24 = atomikosProperties21.getLogBaseDir();
        atomikosProperties21.setCheckpointInterval(100L);
        boolean boolean27 = properties20.equals((java.lang.Object) atomikosProperties21);
        java.util.Properties properties28 = null;
        java.util.Properties properties29 = new java.util.Properties(properties28);
        java.util.Properties properties30 = new java.util.Properties(properties28);
        java.util.Properties properties31 = null;
        java.util.Properties properties32 = new java.util.Properties(properties31);
        java.lang.Object obj34 = properties30.put((java.lang.Object) properties32, (java.lang.Object) (short) 1);
        boolean boolean35 = properties30.isEmpty();
        java.util.Properties properties36 = null;
        java.util.Properties properties37 = new java.util.Properties(properties36);
        java.util.Properties properties38 = new java.util.Properties(properties36);
        boolean boolean39 = properties30.containsKey((java.lang.Object) properties38);
        java.util.Properties properties40 = null;
        java.util.Properties properties41 = new java.util.Properties(properties40);
        java.util.Properties properties42 = new java.util.Properties(properties40);
        java.util.Properties properties43 = null;
        java.util.Properties properties44 = new java.util.Properties(properties43);
        java.lang.Object obj46 = properties42.put((java.lang.Object) properties44, (java.lang.Object) (short) 1);
        java.util.Properties properties48 = null;
        java.util.Properties properties49 = new java.util.Properties(properties48);
        java.util.Properties properties50 = new java.util.Properties(properties48);
        java.util.Properties properties51 = null;
        java.util.Properties properties52 = new java.util.Properties(properties51);
        java.lang.Object obj54 = properties50.put((java.lang.Object) properties52, (java.lang.Object) (short) 1);
        boolean boolean55 = properties44.remove((java.lang.Object) false, (java.lang.Object) (short) 1);
        java.util.Set<java.lang.String> strSet56 = properties44.stringPropertyNames();
        boolean boolean57 = properties38.containsKey((java.lang.Object) strSet56);
        java.util.Properties properties58 = null;
        java.util.Properties properties59 = new java.util.Properties(properties58);
        java.util.Properties properties60 = new java.util.Properties(properties58);
        java.util.Properties properties61 = null;
        java.util.Properties properties62 = new java.util.Properties(properties61);
        java.lang.Object obj64 = properties60.put((java.lang.Object) properties62, (java.lang.Object) (short) 1);
        properties62.clear();
        java.lang.String str67 = properties62.getProperty("");
        java.util.Properties properties68 = null;
        java.util.Properties properties69 = new java.util.Properties(properties68);
        java.util.Properties properties70 = new java.util.Properties(properties68);
        java.util.Properties properties71 = null;
        java.util.Properties properties72 = new java.util.Properties(properties71);
        java.lang.Object obj74 = properties70.put((java.lang.Object) properties72, (java.lang.Object) (short) 1);
        properties62.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties70);
        boolean boolean76 = properties38.containsKey((java.lang.Object) properties62);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties78 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties78.setThreadedTwoPhaseCommit(true);
        boolean boolean81 = atomikosProperties78.isEnableLogging();
        java.lang.Object obj82 = properties38.put((java.lang.Object) '4', (java.lang.Object) boolean81);
        java.util.Properties properties83 = new java.util.Properties(properties38);
        boolean boolean84 = properties38.isEmpty();
        java.lang.Object obj85 = properties20.get((java.lang.Object) properties38);
        java.lang.Object obj86 = null;
        java.lang.Object obj87 = properties4.getOrDefault((java.lang.Object) properties20, obj86);
        java.io.InputStream inputStream88 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties20.load(inputStream88);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(obj6);
        org.junit.Assert.assertNull(obj14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNull(obj17);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 50 + "'", int22 == 50);
        org.junit.Assert.assertTrue("'" + long23 + "' != '" + 300000L + "'", long23 == 300000L);
        org.junit.Assert.assertNull(str24);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNull(obj34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNull(obj46);
        org.junit.Assert.assertNull(obj54);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertNotNull(strSet56);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertNull(obj64);
        org.junit.Assert.assertNull(str67);
        org.junit.Assert.assertNull(obj74);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + true + "'", boolean81 == true);
        org.junit.Assert.assertNull(obj82);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + false + "'", boolean84 == false);
        org.junit.Assert.assertNull(obj85);
        org.junit.Assert.assertNull(obj87);
    }

    @Test
    public void test1983() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1983");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Properties properties2 = new java.util.Properties(properties0);
        java.util.Properties properties3 = null;
        java.util.Properties properties4 = new java.util.Properties(properties3);
        java.lang.Object obj6 = properties2.put((java.lang.Object) properties4, (java.lang.Object) (short) 1);
        boolean boolean7 = properties2.isEmpty();
        java.util.Properties properties8 = null;
        java.util.Properties properties9 = new java.util.Properties(properties8);
        java.util.Properties properties10 = new java.util.Properties(properties8);
        boolean boolean11 = properties2.containsKey((java.lang.Object) properties10);
        java.util.Properties properties12 = new java.util.Properties(properties10);
        java.util.Properties properties13 = new java.util.Properties(properties12);
        java.util.Properties properties14 = null;
        java.util.Properties properties15 = new java.util.Properties(properties14);
        java.util.Properties properties16 = new java.util.Properties(properties14);
        java.util.Properties properties17 = null;
        java.util.Properties properties18 = new java.util.Properties(properties17);
        java.lang.Object obj20 = properties16.put((java.lang.Object) properties18, (java.lang.Object) (short) 1);
        boolean boolean21 = properties16.isEmpty();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties22 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties22.setDefaultJtaTimeout((long) (byte) 10);
        atomikosProperties22.setCheckpointInterval((long) (byte) 0);
        atomikosProperties22.setTransactionManagerUniqueName("");
        java.util.Properties properties29 = atomikosProperties22.asProperties();
        java.lang.Object obj30 = properties16.remove((java.lang.Object) properties29);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties31 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties31.setDefaultJtaTimeout((long) (byte) 10);
        atomikosProperties31.setCheckpointInterval((long) (byte) 0);
        atomikosProperties31.setTransactionManagerUniqueName("");
        java.lang.Object obj38 = properties29.remove((java.lang.Object) atomikosProperties31);
        java.util.Properties properties39 = null;
        java.util.Properties properties40 = new java.util.Properties(properties39);
        java.util.Properties properties41 = new java.util.Properties(properties39);
        java.util.Properties properties42 = null;
        java.util.Properties properties43 = new java.util.Properties(properties42);
        java.lang.Object obj45 = properties41.put((java.lang.Object) properties43, (java.lang.Object) (short) 1);
        java.util.Enumeration<java.lang.Object> objEnumeration46 = properties43.elements();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet47 = properties43.entrySet();
        java.util.Set<java.lang.Object> objSet48 = properties43.keySet();
        java.util.Properties properties49 = null;
        java.util.Properties properties50 = new java.util.Properties(properties49);
        java.util.Properties properties51 = new java.util.Properties(properties49);
        java.util.Properties properties52 = null;
        java.util.Properties properties53 = new java.util.Properties(properties52);
        java.lang.Object obj55 = properties51.put((java.lang.Object) properties53, (java.lang.Object) (short) 1);
        properties53.clear();
        int int57 = properties53.size();
        java.util.Properties properties58 = new java.util.Properties(properties53);
        java.util.Properties properties59 = null;
        java.util.Properties properties60 = new java.util.Properties(properties59);
        java.util.Properties properties61 = new java.util.Properties(properties59);
        java.util.Properties properties62 = null;
        java.util.Properties properties63 = new java.util.Properties(properties62);
        java.lang.Object obj65 = properties61.put((java.lang.Object) properties63, (java.lang.Object) (short) 1);
        properties63.clear();
        java.lang.String str68 = properties63.getProperty("");
        java.util.Properties properties69 = null;
        java.util.Properties properties70 = new java.util.Properties(properties69);
        java.util.Properties properties71 = new java.util.Properties(properties69);
        java.util.Properties properties72 = null;
        java.util.Properties properties73 = new java.util.Properties(properties72);
        java.lang.Object obj75 = properties71.put((java.lang.Object) properties73, (java.lang.Object) (short) 1);
        properties63.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties71);
        java.lang.Object obj77 = properties43.put((java.lang.Object) properties53, (java.lang.Object) properties71);
        java.util.Enumeration<java.lang.Object> objEnumeration78 = properties53.elements();
        java.lang.Object obj80 = properties29.put((java.lang.Object) properties53, (java.lang.Object) "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=0, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.tm_unique_name=, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
        java.util.Properties properties81 = new java.util.Properties(properties29);
        boolean boolean82 = properties12.contains((java.lang.Object) properties29);
        java.lang.Object obj85 = properties29.setProperty("{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=0, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=true, com.atomikos.icatch.max_actives=100, com.atomikos.icatch.log_base_name=tmlog}", "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=100, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=true, com.atomikos.icatch.tm_unique_name=, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name={com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.tm_unique_name=, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}}");
        java.util.Properties properties86 = new java.util.Properties(properties29);
        java.io.PrintWriter printWriter87 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties29.list(printWriter87);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(obj6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNull(obj20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(properties29);
        org.junit.Assert.assertNull(obj30);
        org.junit.Assert.assertNull(obj38);
        org.junit.Assert.assertNull(obj45);
        org.junit.Assert.assertNotNull(objEnumeration46);
        org.junit.Assert.assertNotNull(objEntrySet47);
        org.junit.Assert.assertNotNull(objSet48);
        org.junit.Assert.assertNull(obj55);
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + 0 + "'", int57 == 0);
        org.junit.Assert.assertNull(obj65);
        org.junit.Assert.assertNull(str68);
        org.junit.Assert.assertNull(obj75);
        org.junit.Assert.assertNull(obj77);
        org.junit.Assert.assertNotNull(objEnumeration78);
        org.junit.Assert.assertNull(obj80);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + false + "'", boolean82 == false);
        org.junit.Assert.assertNull(obj85);
    }

    @Test
    public void test1984() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1984");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Properties properties2 = new java.util.Properties(properties0);
        java.util.Properties properties3 = null;
        java.util.Properties properties4 = new java.util.Properties(properties3);
        java.lang.Object obj6 = properties2.put((java.lang.Object) properties4, (java.lang.Object) (short) 1);
        properties4.clear();
        int int8 = properties4.size();
        java.util.Properties properties9 = null;
        java.util.Properties properties10 = new java.util.Properties(properties9);
        java.util.Properties properties11 = new java.util.Properties(properties9);
        java.util.Properties properties12 = null;
        java.util.Properties properties13 = new java.util.Properties(properties12);
        java.lang.Object obj15 = properties11.put((java.lang.Object) properties13, (java.lang.Object) (short) 1);
        java.util.Properties properties16 = new java.util.Properties(properties13);
        java.util.Properties properties17 = new java.util.Properties(properties13);
        boolean boolean19 = properties4.remove((java.lang.Object) properties13, (java.lang.Object) 10.0f);
        java.util.Enumeration<java.lang.Object> objEnumeration20 = properties13.elements();
        java.util.Properties properties21 = new java.util.Properties(properties13);
        java.util.Properties properties22 = null;
        java.util.Properties properties23 = new java.util.Properties(properties22);
        java.util.Properties properties24 = new java.util.Properties(properties22);
        java.lang.Object obj25 = properties24.clone();
        java.lang.Object obj28 = properties24.setProperty("tmlog", "");
        properties13.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties24);
        java.util.Enumeration<java.lang.Object> objEnumeration30 = properties24.elements();
        java.util.Properties properties31 = null;
        java.util.Properties properties32 = new java.util.Properties(properties31);
        java.util.Properties properties33 = new java.util.Properties(properties31);
        java.util.Properties properties34 = null;
        java.util.Properties properties35 = new java.util.Properties(properties34);
        java.lang.Object obj37 = properties33.put((java.lang.Object) properties35, (java.lang.Object) (short) 1);
        properties35.clear();
        int int39 = properties35.size();
        java.util.Properties properties40 = null;
        java.util.Properties properties41 = new java.util.Properties(properties40);
        java.util.Properties properties42 = new java.util.Properties(properties40);
        java.util.Properties properties43 = null;
        java.util.Properties properties44 = new java.util.Properties(properties43);
        java.lang.Object obj46 = properties42.put((java.lang.Object) properties44, (java.lang.Object) (short) 1);
        java.util.Properties properties47 = new java.util.Properties(properties44);
        java.util.Properties properties48 = new java.util.Properties(properties44);
        boolean boolean50 = properties35.remove((java.lang.Object) properties44, (java.lang.Object) 10.0f);
        java.util.Enumeration<java.lang.Object> objEnumeration51 = properties44.elements();
        java.util.Properties properties52 = new java.util.Properties(properties44);
        boolean boolean53 = properties24.containsKey((java.lang.Object) properties52);
        java.io.InputStream inputStream54 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties24.load(inputStream54);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(obj6);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertNull(obj15);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(objEnumeration20);
        org.junit.Assert.assertNotNull(obj25);
        org.junit.Assert.assertEquals(obj25.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj25), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj25), "{}");
        org.junit.Assert.assertNull(obj28);
        org.junit.Assert.assertNotNull(objEnumeration30);
        org.junit.Assert.assertNull(obj37);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 0 + "'", int39 == 0);
        org.junit.Assert.assertNull(obj46);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertNotNull(objEnumeration51);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
    }

    @Test
    public void test1985() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1985");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Properties properties2 = new java.util.Properties(properties0);
        java.util.Properties properties3 = null;
        java.util.Properties properties4 = new java.util.Properties(properties3);
        java.lang.Object obj6 = properties2.put((java.lang.Object) properties4, (java.lang.Object) (short) 1);
        properties4.clear();
        int int8 = properties4.size();
        java.util.Properties properties9 = null;
        java.util.Properties properties10 = new java.util.Properties(properties9);
        java.util.Properties properties11 = new java.util.Properties(properties9);
        java.util.Properties properties12 = null;
        java.util.Properties properties13 = new java.util.Properties(properties12);
        java.lang.Object obj15 = properties11.put((java.lang.Object) properties13, (java.lang.Object) (short) 1);
        java.util.Properties properties16 = new java.util.Properties(properties13);
        java.util.Properties properties17 = new java.util.Properties(properties13);
        boolean boolean19 = properties4.remove((java.lang.Object) properties13, (java.lang.Object) 10.0f);
        java.util.Enumeration<java.lang.Object> objEnumeration20 = properties13.elements();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties21 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties21.setDefaultJtaTimeout((long) (byte) 10);
        atomikosProperties21.setCheckpointInterval((long) (byte) 0);
        long long26 = atomikosProperties21.getMaxTimeout();
        atomikosProperties21.setSerialJtaTransactions(true);
        java.util.Properties properties29 = new java.util.Properties();
        java.util.Enumeration<?> wildcardEnumeration30 = properties29.propertyNames();
        java.lang.Object obj31 = properties13.replace((java.lang.Object) atomikosProperties21, (java.lang.Object) properties29);
        java.lang.String str32 = atomikosProperties21.getTransactionManagerUniqueName();
        atomikosProperties21.setService("{}");
        java.util.Properties properties35 = atomikosProperties21.asProperties();
        java.lang.Object obj36 = null;
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties37 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        boolean boolean38 = atomikosProperties37.isForceShutdownOnVmExit();
        java.lang.String str39 = atomikosProperties37.getLogBaseName();
        long long40 = atomikosProperties37.getDefaultJtaTimeout();
        java.lang.String str41 = atomikosProperties37.getLogBaseName();
        java.util.Properties properties42 = atomikosProperties37.asProperties();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj43 = properties35.putIfAbsent(obj36, (java.lang.Object) properties42);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(obj6);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertNull(obj15);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(objEnumeration20);
        org.junit.Assert.assertTrue("'" + long26 + "' != '" + 300000L + "'", long26 == 300000L);
        org.junit.Assert.assertNotNull(wildcardEnumeration30);
        org.junit.Assert.assertNull(obj31);
        org.junit.Assert.assertNull(str32);
        org.junit.Assert.assertNotNull(properties35);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "tmlog" + "'", str39, "tmlog");
        org.junit.Assert.assertTrue("'" + long40 + "' != '" + 10000L + "'", long40 == 10000L);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "tmlog" + "'", str41, "tmlog");
        org.junit.Assert.assertNotNull(properties42);
    }

    @Test
    public void test1986() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1986");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        boolean boolean1 = atomikosProperties0.isForceShutdownOnVmExit();
        java.util.Properties properties2 = atomikosProperties0.asProperties();
        java.util.Properties properties3 = null;
        java.util.Properties properties4 = new java.util.Properties(properties3);
        java.util.Properties properties5 = new java.util.Properties(properties3);
        java.util.Properties properties6 = null;
        java.util.Properties properties7 = new java.util.Properties(properties6);
        java.lang.Object obj9 = properties5.put((java.lang.Object) properties7, (java.lang.Object) (short) 1);
        properties7.clear();
        int int11 = properties7.size();
        java.util.Properties properties12 = null;
        java.util.Properties properties13 = new java.util.Properties(properties12);
        java.util.Properties properties14 = new java.util.Properties(properties12);
        java.util.Properties properties15 = null;
        java.util.Properties properties16 = new java.util.Properties(properties15);
        java.lang.Object obj18 = properties14.put((java.lang.Object) properties16, (java.lang.Object) (short) 1);
        java.util.Properties properties19 = new java.util.Properties(properties16);
        java.util.Properties properties20 = new java.util.Properties(properties16);
        boolean boolean22 = properties7.remove((java.lang.Object) properties16, (java.lang.Object) 10.0f);
        boolean boolean23 = properties2.containsKey((java.lang.Object) 10.0f);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties25 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties25.setDefaultJtaTimeout((long) (byte) 10);
        atomikosProperties25.setCheckpointInterval((long) (byte) 0);
        atomikosProperties25.setEnableLogging(true);
        java.lang.Object obj32 = properties2.getOrDefault((java.lang.Object) (byte) 0, (java.lang.Object) true);
        java.util.Properties properties33 = new java.util.Properties(properties2);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties34 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties34.setDefaultJtaTimeout((long) (byte) 10);
        atomikosProperties34.setCheckpointInterval((long) (byte) 0);
        long long39 = atomikosProperties34.getMaxTimeout();
        java.util.Properties properties40 = null;
        java.util.Properties properties41 = new java.util.Properties(properties40);
        java.util.Properties properties42 = new java.util.Properties(properties40);
        java.util.Properties properties43 = null;
        java.util.Properties properties44 = new java.util.Properties(properties43);
        java.lang.Object obj46 = properties42.put((java.lang.Object) properties44, (java.lang.Object) (short) 1);
        java.util.Properties properties48 = null;
        java.util.Properties properties49 = new java.util.Properties(properties48);
        java.util.Properties properties50 = new java.util.Properties(properties48);
        java.util.Properties properties51 = null;
        java.util.Properties properties52 = new java.util.Properties(properties51);
        java.lang.Object obj54 = properties50.put((java.lang.Object) properties52, (java.lang.Object) (short) 1);
        boolean boolean55 = properties44.remove((java.lang.Object) false, (java.lang.Object) (short) 1);
        java.lang.Object obj57 = properties44.remove((java.lang.Object) '#');
        java.util.Set<java.lang.Object> objSet58 = properties44.keySet();
        properties44.clear();
        java.util.Properties properties60 = null;
        java.util.Properties properties61 = new java.util.Properties(properties60);
        java.util.Properties properties62 = new java.util.Properties(properties60);
        java.util.Properties properties63 = null;
        java.util.Properties properties64 = new java.util.Properties(properties63);
        java.lang.Object obj66 = properties62.put((java.lang.Object) properties64, (java.lang.Object) (short) 1);
        java.util.Enumeration<java.lang.Object> objEnumeration67 = properties64.elements();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet68 = properties64.entrySet();
        boolean boolean69 = properties44.equals((java.lang.Object) properties64);
        java.util.Enumeration<java.lang.Object> objEnumeration70 = properties64.elements();
        java.lang.Object obj71 = properties33.put((java.lang.Object) atomikosProperties34, (java.lang.Object) properties64);
        java.util.Enumeration<java.lang.Object> objEnumeration72 = properties33.keys();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertNotNull(properties2);
        org.junit.Assert.assertNull(obj9);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertNull(obj18);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertEquals("'" + obj32 + "' != '" + true + "'", obj32, true);
        org.junit.Assert.assertTrue("'" + long39 + "' != '" + 300000L + "'", long39 == 300000L);
        org.junit.Assert.assertNull(obj46);
        org.junit.Assert.assertNull(obj54);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertNull(obj57);
        org.junit.Assert.assertNotNull(objSet58);
        org.junit.Assert.assertNull(obj66);
        org.junit.Assert.assertNotNull(objEnumeration67);
        org.junit.Assert.assertNotNull(objEntrySet68);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + true + "'", boolean69 == true);
        org.junit.Assert.assertNotNull(objEnumeration70);
        org.junit.Assert.assertNull(obj71);
        org.junit.Assert.assertNotNull(objEnumeration72);
    }

    @Test
    public void test1987() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1987");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setDefaultJtaTimeout((long) (byte) 10);
        long long3 = atomikosProperties0.getDefaultJtaTimeout();
        atomikosProperties0.setTransactionManagerUniqueName("");
        boolean boolean6 = atomikosProperties0.isEnableLogging();
        atomikosProperties0.setDefaultJtaTimeout((long) '4');
        boolean boolean9 = atomikosProperties0.isSerialJtaTransactions();
        atomikosProperties0.setSerialJtaTransactions(false);
        org.junit.Assert.assertTrue("'" + long3 + "' != '" + 10L + "'", long3 == 10L);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
    }

    @Test
    public void test1988() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1988");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Properties properties2 = new java.util.Properties(properties0);
        boolean boolean4 = properties2.containsValue((java.lang.Object) (short) 100);
        java.util.Enumeration<java.lang.Object> objEnumeration5 = properties2.keys();
        java.util.Properties properties6 = null;
        java.util.Properties properties7 = new java.util.Properties(properties6);
        java.util.Properties properties8 = new java.util.Properties(properties6);
        java.util.Properties properties9 = null;
        java.util.Properties properties10 = new java.util.Properties(properties9);
        java.lang.Object obj12 = properties8.put((java.lang.Object) properties10, (java.lang.Object) (short) 1);
        boolean boolean13 = properties8.isEmpty();
        java.util.Properties properties14 = null;
        java.util.Properties properties15 = new java.util.Properties(properties14);
        java.util.Properties properties16 = new java.util.Properties(properties14);
        boolean boolean17 = properties8.containsKey((java.lang.Object) properties16);
        java.util.Properties properties18 = new java.util.Properties(properties16);
        java.lang.Object obj19 = properties18.clone();
        java.lang.Object obj20 = properties2.remove(obj19);
        properties2.clear();
        java.util.Properties properties23 = null;
        java.util.Properties properties24 = new java.util.Properties(properties23);
        java.util.Properties properties25 = new java.util.Properties(properties23);
        java.util.Properties properties26 = null;
        java.util.Properties properties27 = new java.util.Properties(properties26);
        java.lang.Object obj29 = properties25.put((java.lang.Object) properties27, (java.lang.Object) (short) 1);
        java.util.Enumeration<java.lang.Object> objEnumeration30 = properties27.elements();
        java.lang.String str31 = properties27.toString();
        boolean boolean32 = properties2.remove((java.lang.Object) (short) 10, (java.lang.Object) str31);
        java.util.Enumeration<java.lang.Object> objEnumeration33 = properties2.elements();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties34 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties34.setDefaultJtaTimeout((long) (byte) 10);
        atomikosProperties34.setCheckpointInterval((long) (byte) 0);
        atomikosProperties34.setTransactionManagerUniqueName("");
        java.util.Properties properties41 = atomikosProperties34.asProperties();
        java.util.Properties properties42 = atomikosProperties34.asProperties();
        java.util.Collection<java.lang.Object> objCollection43 = properties42.values();
        java.util.Properties properties44 = null;
        java.util.Properties properties45 = new java.util.Properties(properties44);
        java.util.Properties properties46 = new java.util.Properties(properties44);
        java.util.Properties properties47 = null;
        java.util.Properties properties48 = new java.util.Properties(properties47);
        java.lang.Object obj50 = properties46.put((java.lang.Object) properties48, (java.lang.Object) (short) 1);
        boolean boolean51 = properties46.isEmpty();
        java.util.Properties properties52 = null;
        java.util.Properties properties53 = new java.util.Properties(properties52);
        java.util.Properties properties54 = new java.util.Properties(properties52);
        boolean boolean55 = properties46.containsKey((java.lang.Object) properties54);
        java.util.Properties properties56 = new java.util.Properties(properties54);
        java.util.Properties properties57 = new java.util.Properties(properties56);
        java.util.Properties properties58 = null;
        java.util.Properties properties59 = new java.util.Properties(properties58);
        java.util.Properties properties60 = new java.util.Properties(properties58);
        java.util.Properties properties61 = null;
        java.util.Properties properties62 = new java.util.Properties(properties61);
        java.lang.Object obj64 = properties60.put((java.lang.Object) properties62, (java.lang.Object) (short) 1);
        properties62.clear();
        int int66 = properties62.size();
        java.util.Properties properties67 = new java.util.Properties(properties62);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties68 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        int int69 = atomikosProperties68.getMaxActives();
        long long70 = atomikosProperties68.getMaxTimeout();
        java.util.Properties properties71 = atomikosProperties68.asProperties();
        java.util.Properties properties72 = atomikosProperties68.asProperties();
        java.util.Properties properties73 = null;
        java.util.Properties properties74 = new java.util.Properties(properties73);
        java.util.Properties properties75 = new java.util.Properties(properties73);
        java.util.Properties properties76 = null;
        java.util.Properties properties77 = new java.util.Properties(properties76);
        java.lang.Object obj79 = properties75.put((java.lang.Object) properties77, (java.lang.Object) (short) 1);
        java.util.Enumeration<java.lang.Object> objEnumeration80 = properties77.elements();
        java.lang.Object obj81 = properties62.replace((java.lang.Object) atomikosProperties68, (java.lang.Object) properties77);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties83 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties83.setThreadedTwoPhaseCommit(true);
        java.lang.String str86 = atomikosProperties83.getService();
        boolean boolean87 = atomikosProperties83.isSerialJtaTransactions();
        java.lang.Object obj88 = properties77.getOrDefault((java.lang.Object) "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.tm_unique_name=, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}", (java.lang.Object) atomikosProperties83);
        boolean boolean89 = properties56.equals((java.lang.Object) properties77);
        properties42.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties77);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties91 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties91.setThreadedTwoPhaseCommit(true);
        atomikosProperties91.setMaxActives((int) '#');
        atomikosProperties91.setForceShutdownOnVmExit(true);
        java.lang.Object obj98 = properties2.getOrDefault((java.lang.Object) properties77, (java.lang.Object) true);
        java.lang.Object obj99 = properties2.clone();
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(objEnumeration5);
        org.junit.Assert.assertNull(obj12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(obj19);
        org.junit.Assert.assertEquals(obj19.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj19), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj19), "{}");
        org.junit.Assert.assertNull(obj20);
        org.junit.Assert.assertNull(obj29);
        org.junit.Assert.assertNotNull(objEnumeration30);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "{}" + "'", str31, "{}");
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(objEnumeration33);
        org.junit.Assert.assertNotNull(properties41);
        org.junit.Assert.assertNotNull(properties42);
        org.junit.Assert.assertNotNull(objCollection43);
        org.junit.Assert.assertNull(obj50);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertNull(obj64);
        org.junit.Assert.assertTrue("'" + int66 + "' != '" + 0 + "'", int66 == 0);
        org.junit.Assert.assertTrue("'" + int69 + "' != '" + 50 + "'", int69 == 50);
        org.junit.Assert.assertTrue("'" + long70 + "' != '" + 300000L + "'", long70 == 300000L);
        org.junit.Assert.assertNotNull(properties71);
        org.junit.Assert.assertNotNull(properties72);
        org.junit.Assert.assertNull(obj79);
        org.junit.Assert.assertNotNull(objEnumeration80);
        org.junit.Assert.assertNull(obj81);
        org.junit.Assert.assertNull(str86);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + true + "'", boolean87 == true);
        org.junit.Assert.assertNotNull(obj88);
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + true + "'", boolean89 == true);
        org.junit.Assert.assertEquals("'" + obj98 + "' != '" + true + "'", obj98, true);
        org.junit.Assert.assertNotNull(obj99);
        org.junit.Assert.assertEquals(obj99.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj99), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj99), "{}");
    }

    @Test
    public void test1989() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1989");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Properties properties2 = new java.util.Properties(properties0);
        java.util.Properties properties3 = null;
        java.util.Properties properties4 = new java.util.Properties(properties3);
        java.util.Properties properties5 = new java.util.Properties(properties3);
        boolean boolean7 = properties5.containsValue((java.lang.Object) (short) 100);
        java.lang.Object obj8 = properties5.clone();
        java.util.Enumeration<?> wildcardEnumeration9 = properties5.propertyNames();
        boolean boolean10 = properties2.containsKey((java.lang.Object) properties5);
        java.util.Set<java.lang.String> strSet11 = properties5.stringPropertyNames();
        java.util.Properties properties12 = new java.util.Properties(properties5);
        java.io.InputStream inputStream13 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties5.load(inputStream13);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(obj8);
        org.junit.Assert.assertEquals(obj8.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj8), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj8), "{}");
        org.junit.Assert.assertNotNull(wildcardEnumeration9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(strSet11);
    }

    @Test
    public void test1990() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1990");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        boolean boolean1 = atomikosProperties0.isForceShutdownOnVmExit();
        java.util.Properties properties2 = atomikosProperties0.asProperties();
        java.util.Properties properties3 = null;
        java.util.Properties properties4 = new java.util.Properties(properties3);
        java.util.Properties properties5 = new java.util.Properties(properties3);
        java.util.Properties properties6 = null;
        java.util.Properties properties7 = new java.util.Properties(properties6);
        java.lang.Object obj9 = properties5.put((java.lang.Object) properties7, (java.lang.Object) (short) 1);
        properties7.clear();
        int int11 = properties7.size();
        java.util.Properties properties12 = null;
        java.util.Properties properties13 = new java.util.Properties(properties12);
        java.util.Properties properties14 = new java.util.Properties(properties12);
        java.util.Properties properties15 = null;
        java.util.Properties properties16 = new java.util.Properties(properties15);
        java.lang.Object obj18 = properties14.put((java.lang.Object) properties16, (java.lang.Object) (short) 1);
        java.util.Properties properties19 = new java.util.Properties(properties16);
        java.util.Properties properties20 = new java.util.Properties(properties16);
        boolean boolean22 = properties7.remove((java.lang.Object) properties16, (java.lang.Object) 10.0f);
        boolean boolean23 = properties2.containsKey((java.lang.Object) 10.0f);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties25 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties25.setDefaultJtaTimeout((long) (byte) 10);
        atomikosProperties25.setCheckpointInterval((long) (byte) 0);
        atomikosProperties25.setEnableLogging(true);
        java.lang.Object obj32 = properties2.getOrDefault((java.lang.Object) (byte) 0, (java.lang.Object) true);
        java.util.Properties properties33 = new java.util.Properties(properties2);
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet34 = properties2.entrySet();
        java.util.Properties properties35 = new java.util.Properties(properties2);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties36 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties36.setDefaultJtaTimeout((long) (byte) 10);
        long long39 = atomikosProperties36.getDefaultJtaTimeout();
        atomikosProperties36.setTransactionManagerUniqueName("hi!");
        atomikosProperties36.setTransactionManagerUniqueName("{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=0, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.tm_unique_name=, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
        atomikosProperties36.setEnableLogging(false);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties46 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties46.setDefaultJtaTimeout((long) (byte) 10);
        long long49 = atomikosProperties46.getDefaultJtaTimeout();
        atomikosProperties46.setTransactionManagerUniqueName("");
        boolean boolean52 = atomikosProperties46.isEnableLogging();
        atomikosProperties46.setDefaultJtaTimeout((long) '4');
        java.lang.String str55 = atomikosProperties46.getTransactionManagerUniqueName();
        atomikosProperties46.setThreadedTwoPhaseCommit(true);
        java.lang.String str58 = atomikosProperties46.getTransactionManagerUniqueName();
        boolean boolean59 = atomikosProperties46.isThreadedTwoPhaseCommit();
        java.lang.Object obj60 = properties2.put((java.lang.Object) atomikosProperties36, (java.lang.Object) boolean59);
        java.io.InputStream inputStream61 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties2.load(inputStream61);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertNotNull(properties2);
        org.junit.Assert.assertNull(obj9);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertNull(obj18);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertEquals("'" + obj32 + "' != '" + true + "'", obj32, true);
        org.junit.Assert.assertNotNull(objEntrySet34);
        org.junit.Assert.assertTrue("'" + long39 + "' != '" + 10L + "'", long39 == 10L);
        org.junit.Assert.assertTrue("'" + long49 + "' != '" + 10L + "'", long49 == 10L);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "" + "'", str55, "");
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "" + "'", str58, "");
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertNull(obj60);
    }

    @Test
    public void test1991() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1991");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Properties properties2 = new java.util.Properties(properties0);
        boolean boolean4 = properties2.containsValue((java.lang.Object) (short) 100);
        java.util.Enumeration<java.lang.Object> objEnumeration5 = properties2.keys();
        java.util.Properties properties6 = null;
        java.util.Properties properties7 = new java.util.Properties(properties6);
        java.util.Properties properties8 = new java.util.Properties(properties6);
        java.util.Properties properties9 = null;
        java.util.Properties properties10 = new java.util.Properties(properties9);
        java.lang.Object obj12 = properties8.put((java.lang.Object) properties10, (java.lang.Object) (short) 1);
        boolean boolean13 = properties8.isEmpty();
        java.util.Properties properties14 = null;
        java.util.Properties properties15 = new java.util.Properties(properties14);
        java.util.Properties properties16 = new java.util.Properties(properties14);
        boolean boolean17 = properties8.containsKey((java.lang.Object) properties16);
        java.util.Properties properties18 = new java.util.Properties(properties16);
        java.lang.Object obj19 = properties18.clone();
        java.lang.Object obj20 = properties2.remove(obj19);
        java.util.Collection<java.lang.Object> objCollection21 = properties2.values();
        java.util.Properties properties22 = null;
        java.util.Properties properties23 = new java.util.Properties(properties22);
        java.util.Properties properties24 = new java.util.Properties(properties22);
        java.util.Properties properties25 = null;
        java.util.Properties properties26 = new java.util.Properties(properties25);
        java.lang.Object obj28 = properties24.put((java.lang.Object) properties26, (java.lang.Object) (short) 1);
        java.util.Properties properties29 = new java.util.Properties(properties26);
        boolean boolean30 = properties2.containsValue((java.lang.Object) properties26);
        java.lang.String str33 = properties2.getProperty("{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=0, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.tm_unique_name=, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}", "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=52, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.tm_unique_name=, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(objEnumeration5);
        org.junit.Assert.assertNull(obj12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(obj19);
        org.junit.Assert.assertEquals(obj19.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj19), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj19), "{}");
        org.junit.Assert.assertNull(obj20);
        org.junit.Assert.assertNotNull(objCollection21);
        org.junit.Assert.assertNull(obj28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=52, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.tm_unique_name=, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}" + "'", str33, "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=52, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.tm_unique_name=, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
    }

    @Test
    public void test1992() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1992");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        boolean boolean1 = atomikosProperties0.isForceShutdownOnVmExit();
        java.util.Properties properties2 = atomikosProperties0.asProperties();
        java.util.Properties properties3 = null;
        java.util.Properties properties4 = new java.util.Properties(properties3);
        java.util.Properties properties5 = new java.util.Properties(properties3);
        java.util.Properties properties6 = null;
        java.util.Properties properties7 = new java.util.Properties(properties6);
        java.lang.Object obj9 = properties5.put((java.lang.Object) properties7, (java.lang.Object) (short) 1);
        properties7.clear();
        int int11 = properties7.size();
        java.util.Properties properties12 = null;
        java.util.Properties properties13 = new java.util.Properties(properties12);
        java.util.Properties properties14 = new java.util.Properties(properties12);
        java.util.Properties properties15 = null;
        java.util.Properties properties16 = new java.util.Properties(properties15);
        java.lang.Object obj18 = properties14.put((java.lang.Object) properties16, (java.lang.Object) (short) 1);
        java.util.Properties properties19 = new java.util.Properties(properties16);
        java.util.Properties properties20 = new java.util.Properties(properties16);
        boolean boolean22 = properties7.remove((java.lang.Object) properties16, (java.lang.Object) 10.0f);
        boolean boolean23 = properties2.containsKey((java.lang.Object) 10.0f);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties25 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties25.setDefaultJtaTimeout((long) (byte) 10);
        atomikosProperties25.setCheckpointInterval((long) (byte) 0);
        atomikosProperties25.setEnableLogging(true);
        java.lang.Object obj32 = properties2.getOrDefault((java.lang.Object) (byte) 0, (java.lang.Object) true);
        java.util.Properties properties33 = new java.util.Properties(properties2);
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet34 = properties2.entrySet();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties35 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        boolean boolean36 = atomikosProperties35.isForceShutdownOnVmExit();
        java.util.Properties properties37 = atomikosProperties35.asProperties();
        java.util.Properties properties38 = null;
        java.util.Properties properties39 = new java.util.Properties(properties38);
        java.util.Properties properties40 = new java.util.Properties(properties38);
        java.util.Properties properties41 = null;
        java.util.Properties properties42 = new java.util.Properties(properties41);
        java.lang.Object obj44 = properties40.put((java.lang.Object) properties42, (java.lang.Object) (short) 1);
        properties42.clear();
        int int46 = properties42.size();
        java.util.Properties properties47 = null;
        java.util.Properties properties48 = new java.util.Properties(properties47);
        java.util.Properties properties49 = new java.util.Properties(properties47);
        java.util.Properties properties50 = null;
        java.util.Properties properties51 = new java.util.Properties(properties50);
        java.lang.Object obj53 = properties49.put((java.lang.Object) properties51, (java.lang.Object) (short) 1);
        java.util.Properties properties54 = new java.util.Properties(properties51);
        java.util.Properties properties55 = new java.util.Properties(properties51);
        boolean boolean57 = properties42.remove((java.lang.Object) properties51, (java.lang.Object) 10.0f);
        boolean boolean58 = properties37.containsKey((java.lang.Object) 10.0f);
        java.util.Properties properties59 = new java.util.Properties(properties37);
        java.util.Properties properties60 = new java.util.Properties(properties37);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties61 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties61.setThreadedTwoPhaseCommit(true);
        atomikosProperties61.setMaxActives((int) '#');
        atomikosProperties61.setForceShutdownOnVmExit(true);
        java.lang.String str68 = atomikosProperties61.getLogBaseDir();
        java.util.Properties properties69 = atomikosProperties61.asProperties();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties70 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        boolean boolean71 = atomikosProperties70.isSerialJtaTransactions();
        boolean boolean72 = properties69.equals((java.lang.Object) atomikosProperties70);
        java.lang.Object obj73 = properties2.put((java.lang.Object) properties37, (java.lang.Object) boolean72);
        java.util.Properties properties74 = new java.util.Properties(properties37);
        java.util.Properties properties75 = new java.util.Properties(properties74);
        int int76 = properties75.size();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertNotNull(properties2);
        org.junit.Assert.assertNull(obj9);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertNull(obj18);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertEquals("'" + obj32 + "' != '" + true + "'", obj32, true);
        org.junit.Assert.assertNotNull(objEntrySet34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(properties37);
        org.junit.Assert.assertNull(obj44);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 0 + "'", int46 == 0);
        org.junit.Assert.assertNull(obj53);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertNull(str68);
        org.junit.Assert.assertNotNull(properties69);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + true + "'", boolean71 == true);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertNull(obj73);
        org.junit.Assert.assertTrue("'" + int76 + "' != '" + 0 + "'", int76 == 0);
    }

    @Test
    public void test1993() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1993");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Properties properties2 = new java.util.Properties(properties0);
        boolean boolean4 = properties2.containsValue((java.lang.Object) (short) 100);
        java.util.Enumeration<java.lang.Object> objEnumeration5 = properties2.keys();
        java.util.Properties properties6 = null;
        java.util.Properties properties7 = new java.util.Properties(properties6);
        java.util.Properties properties8 = new java.util.Properties(properties6);
        java.util.Properties properties9 = null;
        java.util.Properties properties10 = new java.util.Properties(properties9);
        java.lang.Object obj12 = properties8.put((java.lang.Object) properties10, (java.lang.Object) (short) 1);
        boolean boolean13 = properties8.isEmpty();
        java.util.Properties properties14 = null;
        java.util.Properties properties15 = new java.util.Properties(properties14);
        java.util.Properties properties16 = new java.util.Properties(properties14);
        boolean boolean17 = properties8.containsKey((java.lang.Object) properties16);
        java.util.Properties properties18 = new java.util.Properties(properties16);
        java.lang.Object obj19 = properties18.clone();
        java.lang.Object obj20 = properties2.remove(obj19);
        properties2.clear();
        java.util.Properties properties23 = null;
        java.util.Properties properties24 = new java.util.Properties(properties23);
        java.util.Properties properties25 = new java.util.Properties(properties23);
        java.util.Properties properties26 = null;
        java.util.Properties properties27 = new java.util.Properties(properties26);
        java.lang.Object obj29 = properties25.put((java.lang.Object) properties27, (java.lang.Object) (short) 1);
        java.util.Enumeration<java.lang.Object> objEnumeration30 = properties27.elements();
        java.lang.String str31 = properties27.toString();
        boolean boolean32 = properties2.remove((java.lang.Object) (short) 10, (java.lang.Object) str31);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties33 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties33.setDefaultJtaTimeout((long) (byte) 10);
        long long36 = atomikosProperties33.getDefaultJtaTimeout();
        atomikosProperties33.setTransactionManagerUniqueName("");
        long long39 = atomikosProperties33.getDefaultJtaTimeout();
        boolean boolean40 = atomikosProperties33.isEnableLogging();
        boolean boolean41 = properties2.equals((java.lang.Object) atomikosProperties33);
        java.lang.String str42 = properties2.toString();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet43 = properties2.entrySet();
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(objEnumeration5);
        org.junit.Assert.assertNull(obj12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(obj19);
        org.junit.Assert.assertEquals(obj19.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj19), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj19), "{}");
        org.junit.Assert.assertNull(obj20);
        org.junit.Assert.assertNull(obj29);
        org.junit.Assert.assertNotNull(objEnumeration30);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "{}" + "'", str31, "{}");
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue("'" + long36 + "' != '" + 10L + "'", long36 == 10L);
        org.junit.Assert.assertTrue("'" + long39 + "' != '" + 10L + "'", long39 == 10L);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "{}" + "'", str42, "{}");
        org.junit.Assert.assertNotNull(objEntrySet43);
    }

    @Test
    public void test1994() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1994");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Properties properties2 = new java.util.Properties(properties0);
        boolean boolean4 = properties2.containsValue((java.lang.Object) (short) 100);
        java.util.Properties properties5 = null;
        java.util.Properties properties6 = new java.util.Properties(properties5);
        java.util.Properties properties7 = new java.util.Properties(properties5);
        java.util.Properties properties8 = null;
        java.util.Properties properties9 = new java.util.Properties(properties8);
        java.lang.Object obj11 = properties7.put((java.lang.Object) properties9, (java.lang.Object) (short) 1);
        java.util.Enumeration<java.lang.Object> objEnumeration12 = properties9.elements();
        java.lang.Object obj13 = properties2.remove((java.lang.Object) properties9);
        java.lang.Object obj16 = properties9.setProperty("", "");
        java.util.Properties properties17 = null;
        java.util.Properties properties18 = new java.util.Properties(properties17);
        java.util.Properties properties19 = new java.util.Properties(properties17);
        java.util.Properties properties20 = null;
        java.util.Properties properties21 = new java.util.Properties(properties20);
        java.lang.Object obj23 = properties19.put((java.lang.Object) properties21, (java.lang.Object) (short) 1);
        java.util.Properties properties25 = null;
        java.util.Properties properties26 = new java.util.Properties(properties25);
        java.util.Properties properties27 = new java.util.Properties(properties25);
        java.util.Properties properties28 = null;
        java.util.Properties properties29 = new java.util.Properties(properties28);
        java.lang.Object obj31 = properties27.put((java.lang.Object) properties29, (java.lang.Object) (short) 1);
        boolean boolean32 = properties21.remove((java.lang.Object) false, (java.lang.Object) (short) 1);
        java.util.Properties properties33 = new java.util.Properties(properties21);
        properties9.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties33);
        java.util.Properties properties35 = null;
        java.util.Properties properties36 = new java.util.Properties(properties35);
        java.util.Properties properties37 = new java.util.Properties(properties35);
        boolean boolean39 = properties37.containsValue((java.lang.Object) (short) 100);
        java.util.Properties properties40 = null;
        java.util.Properties properties41 = new java.util.Properties(properties40);
        java.util.Properties properties42 = new java.util.Properties(properties40);
        java.util.Properties properties43 = null;
        java.util.Properties properties44 = new java.util.Properties(properties43);
        java.lang.Object obj46 = properties42.put((java.lang.Object) properties44, (java.lang.Object) (short) 1);
        java.util.Enumeration<java.lang.Object> objEnumeration47 = properties44.elements();
        java.lang.Object obj48 = properties37.remove((java.lang.Object) properties44);
        boolean boolean49 = properties44.isEmpty();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet50 = properties44.entrySet();
        java.util.Properties properties51 = new java.util.Properties(properties44);
        java.util.Properties properties52 = null;
        java.util.Properties properties53 = new java.util.Properties(properties52);
        java.util.Properties properties54 = new java.util.Properties(properties52);
        java.util.Properties properties55 = null;
        java.util.Properties properties56 = new java.util.Properties(properties55);
        java.lang.Object obj58 = properties54.put((java.lang.Object) properties56, (java.lang.Object) (short) 1);
        java.util.Properties properties59 = new java.util.Properties(properties56);
        java.util.Properties properties60 = new java.util.Properties(properties56);
        java.util.Set<java.lang.Object> objSet61 = properties60.keySet();
        java.util.Properties properties62 = null;
        java.util.Properties properties63 = new java.util.Properties(properties62);
        java.util.Properties properties64 = new java.util.Properties(properties62);
        java.util.Properties properties65 = null;
        java.util.Properties properties66 = new java.util.Properties(properties65);
        java.lang.Object obj68 = properties64.put((java.lang.Object) properties66, (java.lang.Object) (short) 1);
        properties66.clear();
        int int70 = properties66.size();
        java.util.Properties properties71 = null;
        java.util.Properties properties72 = new java.util.Properties(properties71);
        java.util.Properties properties73 = new java.util.Properties(properties71);
        java.util.Properties properties74 = null;
        java.util.Properties properties75 = new java.util.Properties(properties74);
        java.lang.Object obj77 = properties73.put((java.lang.Object) properties75, (java.lang.Object) (short) 1);
        java.util.Properties properties78 = new java.util.Properties(properties75);
        java.util.Properties properties79 = new java.util.Properties(properties75);
        boolean boolean81 = properties66.remove((java.lang.Object) properties75, (java.lang.Object) 10.0f);
        java.util.Enumeration<java.lang.Object> objEnumeration82 = properties75.elements();
        java.util.Properties properties83 = new java.util.Properties(properties75);
        java.lang.Object obj84 = properties51.putIfAbsent((java.lang.Object) objSet61, (java.lang.Object) properties75);
        properties9.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties51);
        java.io.Writer writer86 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties9.store(writer86, "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=0, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNull(obj11);
        org.junit.Assert.assertNotNull(objEnumeration12);
        org.junit.Assert.assertNull(obj13);
        org.junit.Assert.assertNull(obj16);
        org.junit.Assert.assertNull(obj23);
        org.junit.Assert.assertNull(obj31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNull(obj46);
        org.junit.Assert.assertNotNull(objEnumeration47);
        org.junit.Assert.assertNull(obj48);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertNotNull(objEntrySet50);
        org.junit.Assert.assertNull(obj58);
        org.junit.Assert.assertNotNull(objSet61);
        org.junit.Assert.assertNull(obj68);
        org.junit.Assert.assertTrue("'" + int70 + "' != '" + 0 + "'", int70 == 0);
        org.junit.Assert.assertNull(obj77);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + false + "'", boolean81 == false);
        org.junit.Assert.assertNotNull(objEnumeration82);
        org.junit.Assert.assertNull(obj84);
    }

    @Test
    public void test1995() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1995");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setDefaultJtaTimeout((long) (byte) 10);
        long long3 = atomikosProperties0.getDefaultJtaTimeout();
        atomikosProperties0.setTransactionManagerUniqueName("");
        boolean boolean6 = atomikosProperties0.isEnableLogging();
        atomikosProperties0.setDefaultJtaTimeout((long) '4');
        java.lang.String str9 = atomikosProperties0.getTransactionManagerUniqueName();
        atomikosProperties0.setThreadedTwoPhaseCommit(true);
        java.lang.String str12 = atomikosProperties0.getLogBaseName();
        long long13 = atomikosProperties0.getCheckpointInterval();
        java.util.Properties properties14 = atomikosProperties0.asProperties();
        java.lang.Class<?> wildcardClass15 = properties14.getClass();
        org.junit.Assert.assertTrue("'" + long3 + "' != '" + 10L + "'", long3 == 10L);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "" + "'", str9, "");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "tmlog" + "'", str12, "tmlog");
        org.junit.Assert.assertTrue("'" + long13 + "' != '" + 500L + "'", long13 == 500L);
        org.junit.Assert.assertNotNull(properties14);
        org.junit.Assert.assertNotNull(wildcardClass15);
    }

    @Test
    public void test1996() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1996");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setDefaultJtaTimeout((long) (byte) 10);
        long long3 = atomikosProperties0.getDefaultJtaTimeout();
        atomikosProperties0.setTransactionManagerUniqueName("");
        boolean boolean6 = atomikosProperties0.isEnableLogging();
        java.lang.String str7 = atomikosProperties0.getLogBaseDir();
        java.util.Properties properties8 = atomikosProperties0.asProperties();
        boolean boolean9 = properties8.isEmpty();
        java.lang.Object obj10 = properties8.clone();
        java.util.Enumeration<java.lang.Object> objEnumeration11 = properties8.elements();
        org.junit.Assert.assertTrue("'" + long3 + "' != '" + 10L + "'", long3 == 10L);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNotNull(properties8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(obj10);
// flaky:         org.junit.Assert.assertEquals(obj10.toString(), "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.tm_unique_name=, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
// flaky:         org.junit.Assert.assertEquals(java.lang.String.valueOf(obj10), "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.tm_unique_name=, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
// flaky:         org.junit.Assert.assertEquals(java.util.Objects.toString(obj10), "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.tm_unique_name=, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
        org.junit.Assert.assertNotNull(objEnumeration11);
    }

    @Test
    public void test1997() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1997");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Properties properties2 = new java.util.Properties(properties0);
        java.util.Properties properties3 = null;
        java.util.Properties properties4 = new java.util.Properties(properties3);
        java.lang.Object obj6 = properties2.put((java.lang.Object) properties4, (java.lang.Object) (short) 1);
        java.lang.Object obj9 = properties4.setProperty("tmlog", "{}");
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet10 = properties4.entrySet();
        org.junit.Assert.assertNull(obj6);
        org.junit.Assert.assertNull(obj9);
        org.junit.Assert.assertNotNull(objEntrySet10);
    }

    @Test
    public void test1998() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1998");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Properties properties2 = new java.util.Properties(properties0);
        boolean boolean4 = properties2.containsValue((java.lang.Object) (short) 100);
        java.util.Properties properties5 = null;
        java.util.Properties properties6 = new java.util.Properties(properties5);
        java.util.Properties properties7 = new java.util.Properties(properties5);
        java.util.Properties properties8 = null;
        java.util.Properties properties9 = new java.util.Properties(properties8);
        java.lang.Object obj11 = properties7.put((java.lang.Object) properties9, (java.lang.Object) (short) 1);
        java.util.Enumeration<java.lang.Object> objEnumeration12 = properties9.elements();
        java.lang.Object obj13 = properties2.remove((java.lang.Object) properties9);
        boolean boolean14 = properties9.isEmpty();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet15 = properties9.entrySet();
        java.util.Properties properties16 = new java.util.Properties(properties9);
        java.util.Properties properties17 = null;
        java.util.Properties properties18 = new java.util.Properties(properties17);
        java.util.Properties properties19 = new java.util.Properties(properties17);
        java.util.Properties properties20 = null;
        java.util.Properties properties21 = new java.util.Properties(properties20);
        java.lang.Object obj23 = properties19.put((java.lang.Object) properties21, (java.lang.Object) (short) 1);
        java.util.Properties properties24 = new java.util.Properties(properties21);
        java.util.Properties properties25 = new java.util.Properties(properties21);
        java.util.Set<java.lang.Object> objSet26 = properties25.keySet();
        java.util.Properties properties27 = null;
        java.util.Properties properties28 = new java.util.Properties(properties27);
        java.util.Properties properties29 = new java.util.Properties(properties27);
        java.util.Properties properties30 = null;
        java.util.Properties properties31 = new java.util.Properties(properties30);
        java.lang.Object obj33 = properties29.put((java.lang.Object) properties31, (java.lang.Object) (short) 1);
        properties31.clear();
        int int35 = properties31.size();
        java.util.Properties properties36 = null;
        java.util.Properties properties37 = new java.util.Properties(properties36);
        java.util.Properties properties38 = new java.util.Properties(properties36);
        java.util.Properties properties39 = null;
        java.util.Properties properties40 = new java.util.Properties(properties39);
        java.lang.Object obj42 = properties38.put((java.lang.Object) properties40, (java.lang.Object) (short) 1);
        java.util.Properties properties43 = new java.util.Properties(properties40);
        java.util.Properties properties44 = new java.util.Properties(properties40);
        boolean boolean46 = properties31.remove((java.lang.Object) properties40, (java.lang.Object) 10.0f);
        java.util.Enumeration<java.lang.Object> objEnumeration47 = properties40.elements();
        java.util.Properties properties48 = new java.util.Properties(properties40);
        java.lang.Object obj49 = properties16.putIfAbsent((java.lang.Object) objSet26, (java.lang.Object) properties40);
        java.util.Enumeration<java.lang.Object> objEnumeration50 = properties16.elements();
        java.util.Enumeration<java.lang.Object> objEnumeration51 = properties16.elements();
        java.util.Properties properties53 = null;
        java.util.Properties properties54 = new java.util.Properties(properties53);
        java.util.Properties properties55 = new java.util.Properties(properties53);
        java.util.Properties properties56 = null;
        java.util.Properties properties57 = new java.util.Properties(properties56);
        java.lang.Object obj59 = properties55.put((java.lang.Object) properties57, (java.lang.Object) (short) 1);
        properties57.clear();
        java.lang.String str62 = properties57.getProperty("");
        java.util.Properties properties63 = null;
        java.util.Properties properties64 = new java.util.Properties(properties63);
        java.util.Properties properties65 = new java.util.Properties(properties63);
        java.util.Properties properties66 = null;
        java.util.Properties properties67 = new java.util.Properties(properties66);
        java.lang.Object obj69 = properties65.put((java.lang.Object) properties67, (java.lang.Object) (short) 1);
        properties57.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties65);
        java.util.Enumeration<java.lang.Object> objEnumeration71 = properties57.keys();
        java.util.Enumeration<java.lang.Object> objEnumeration72 = properties57.elements();
        java.util.Set<java.lang.Object> objSet73 = properties57.keySet();
        java.lang.Object obj74 = properties16.put((java.lang.Object) "{}", (java.lang.Object) properties57);
        java.util.Properties properties75 = new java.util.Properties(properties16);
        java.util.Collection<java.lang.Object> objCollection76 = properties16.values();
        java.lang.String str78 = properties16.getProperty("");
        java.lang.String str81 = properties16.getProperty("{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=100, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=true, com.atomikos.icatch.tm_unique_name=, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name={com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.tm_unique_name=, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}}", "hi!");
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNull(obj11);
        org.junit.Assert.assertNotNull(objEnumeration12);
        org.junit.Assert.assertNull(obj13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(objEntrySet15);
        org.junit.Assert.assertNull(obj23);
        org.junit.Assert.assertNotNull(objSet26);
        org.junit.Assert.assertNull(obj33);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 0 + "'", int35 == 0);
        org.junit.Assert.assertNull(obj42);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(objEnumeration47);
        org.junit.Assert.assertNull(obj49);
        org.junit.Assert.assertNotNull(objEnumeration50);
        org.junit.Assert.assertNotNull(objEnumeration51);
        org.junit.Assert.assertNull(obj59);
        org.junit.Assert.assertNull(str62);
        org.junit.Assert.assertNull(obj69);
        org.junit.Assert.assertNotNull(objEnumeration71);
        org.junit.Assert.assertNotNull(objEnumeration72);
        org.junit.Assert.assertNotNull(objSet73);
        org.junit.Assert.assertNull(obj74);
        org.junit.Assert.assertNotNull(objCollection76);
        org.junit.Assert.assertNull(str78);
        org.junit.Assert.assertEquals("'" + str81 + "' != '" + "hi!" + "'", str81, "hi!");
    }

    @Test
    public void test1999() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1999");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setDefaultJtaTimeout((long) (byte) 10);
        atomikosProperties0.setCheckpointInterval((long) (byte) 0);
        atomikosProperties0.setTransactionManagerUniqueName("");
        java.util.Properties properties7 = atomikosProperties0.asProperties();
        java.lang.String str8 = atomikosProperties0.getLogBaseName();
        atomikosProperties0.setCheckpointInterval(100L);
        int int11 = atomikosProperties0.getMaxActives();
        int int12 = atomikosProperties0.getMaxActives();
        java.util.Properties properties13 = atomikosProperties0.asProperties();
        java.lang.String str14 = atomikosProperties0.getLogBaseName();
        org.junit.Assert.assertNotNull(properties7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "tmlog" + "'", str8, "tmlog");
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 50 + "'", int11 == 50);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 50 + "'", int12 == 50);
        org.junit.Assert.assertNotNull(properties13);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "tmlog" + "'", str14, "tmlog");
    }

    @Test
    public void test2000() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test2000");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setThreadedTwoPhaseCommit(true);
        java.lang.String str3 = atomikosProperties0.getService();
        java.util.Properties properties4 = atomikosProperties0.asProperties();
        java.util.Properties properties5 = atomikosProperties0.asProperties();
        java.util.Enumeration<java.lang.Object> objEnumeration6 = properties5.keys();
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNotNull(properties4);
        org.junit.Assert.assertNotNull(properties5);
        org.junit.Assert.assertNotNull(objEnumeration6);
    }
}
