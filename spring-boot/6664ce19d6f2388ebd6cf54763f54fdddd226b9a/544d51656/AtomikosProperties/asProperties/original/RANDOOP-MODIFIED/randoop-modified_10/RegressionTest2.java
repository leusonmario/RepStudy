import org.junit.FixMethodOrder;
import org.junit.Test;
import org.junit.runners.MethodSorters;

@FixMethodOrder(MethodSorters.NAME_ASCENDING)
public class RegressionTest2 {

    public static boolean debug = false;

    @Test
    public void test1001() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1001");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Properties properties2 = new java.util.Properties(properties0);
        java.util.Properties properties3 = null;
        java.util.Properties properties4 = new java.util.Properties(properties3);
        java.lang.Object obj6 = properties2.put((java.lang.Object) properties4, (java.lang.Object) (short) 1);
        java.util.Properties properties8 = null;
        java.util.Properties properties9 = new java.util.Properties(properties8);
        java.util.Properties properties10 = new java.util.Properties(properties8);
        java.util.Properties properties11 = null;
        java.util.Properties properties12 = new java.util.Properties(properties11);
        java.lang.Object obj14 = properties10.put((java.lang.Object) properties12, (java.lang.Object) (short) 1);
        boolean boolean15 = properties4.remove((java.lang.Object) false, (java.lang.Object) (short) 1);
        java.util.Set<java.lang.String> strSet16 = properties4.stringPropertyNames();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties17 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties17.setDefaultJtaTimeout((long) (byte) 10);
        long long20 = atomikosProperties17.getDefaultJtaTimeout();
        java.lang.Object obj21 = properties4.get((java.lang.Object) atomikosProperties17);
        java.util.Properties properties22 = null;
        java.util.Properties properties23 = new java.util.Properties(properties22);
        java.util.Properties properties24 = new java.util.Properties(properties22);
        java.util.Properties properties25 = null;
        java.util.Properties properties26 = new java.util.Properties(properties25);
        java.lang.Object obj28 = properties24.put((java.lang.Object) properties26, (java.lang.Object) (short) 1);
        java.util.Properties properties30 = null;
        java.util.Properties properties31 = new java.util.Properties(properties30);
        java.util.Properties properties32 = new java.util.Properties(properties30);
        java.util.Properties properties33 = null;
        java.util.Properties properties34 = new java.util.Properties(properties33);
        java.lang.Object obj36 = properties32.put((java.lang.Object) properties34, (java.lang.Object) (short) 1);
        boolean boolean37 = properties26.remove((java.lang.Object) false, (java.lang.Object) (short) 1);
        java.lang.Object obj39 = properties26.remove((java.lang.Object) '#');
        java.util.Set<java.lang.Object> objSet40 = properties26.keySet();
        boolean boolean41 = properties4.containsKey((java.lang.Object) properties26);
        java.util.Enumeration<java.lang.Object> objEnumeration42 = properties26.keys();
        java.util.Properties properties43 = new java.util.Properties(properties26);
        java.io.InputStream inputStream44 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties43.load(inputStream44);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(obj6);
        org.junit.Assert.assertNull(obj14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(strSet16);
        org.junit.Assert.assertTrue("'" + long20 + "' != '" + 10L + "'", long20 == 10L);
        org.junit.Assert.assertNull(obj21);
        org.junit.Assert.assertNull(obj28);
        org.junit.Assert.assertNull(obj36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNull(obj39);
        org.junit.Assert.assertNotNull(objSet40);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(objEnumeration42);
    }

    @Test
    public void test1002() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1002");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Properties properties2 = new java.util.Properties(properties0);
        boolean boolean4 = properties2.containsValue((java.lang.Object) (short) 100);
        java.util.Properties properties5 = new java.util.Properties(properties2);
        java.lang.String str7 = properties5.getProperty("hi!");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties8 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties8.setDefaultJtaTimeout((long) (byte) 10);
        long long11 = atomikosProperties8.getDefaultJtaTimeout();
        atomikosProperties8.setTransactionManagerUniqueName("hi!");
        atomikosProperties8.setLogBaseName("tmlog");
        boolean boolean16 = atomikosProperties8.isSerialJtaTransactions();
        java.util.Properties properties17 = atomikosProperties8.asProperties();
        boolean boolean18 = properties5.equals((java.lang.Object) atomikosProperties8);
        java.util.Enumeration<java.lang.Object> objEnumeration19 = properties5.elements();
        java.util.Properties properties20 = null;
        java.util.Properties properties21 = new java.util.Properties(properties20);
        java.util.Properties properties22 = new java.util.Properties(properties20);
        java.util.Properties properties23 = null;
        java.util.Properties properties24 = new java.util.Properties(properties23);
        java.lang.Object obj26 = properties22.put((java.lang.Object) properties24, (java.lang.Object) (short) 1);
        boolean boolean27 = properties22.isEmpty();
        java.util.Properties properties28 = null;
        java.util.Properties properties29 = new java.util.Properties(properties28);
        java.util.Properties properties30 = new java.util.Properties(properties28);
        boolean boolean31 = properties22.containsKey((java.lang.Object) properties30);
        java.util.Properties properties32 = new java.util.Properties(properties30);
        java.lang.Object obj33 = properties32.clone();
        java.util.Set<java.lang.String> strSet34 = properties32.stringPropertyNames();
        java.util.Properties properties35 = null;
        java.util.Properties properties36 = new java.util.Properties(properties35);
        java.util.Properties properties37 = new java.util.Properties(properties35);
        java.util.Properties properties38 = null;
        java.util.Properties properties39 = new java.util.Properties(properties38);
        java.lang.Object obj41 = properties37.put((java.lang.Object) properties39, (java.lang.Object) (short) 1);
        java.util.Properties properties43 = null;
        java.util.Properties properties44 = new java.util.Properties(properties43);
        java.util.Properties properties45 = new java.util.Properties(properties43);
        java.util.Properties properties46 = null;
        java.util.Properties properties47 = new java.util.Properties(properties46);
        java.lang.Object obj49 = properties45.put((java.lang.Object) properties47, (java.lang.Object) (short) 1);
        boolean boolean50 = properties39.remove((java.lang.Object) false, (java.lang.Object) (short) 1);
        java.util.Set<java.lang.String> strSet51 = properties39.stringPropertyNames();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties52 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties52.setDefaultJtaTimeout((long) (byte) 10);
        long long55 = atomikosProperties52.getDefaultJtaTimeout();
        java.lang.Object obj56 = properties39.get((java.lang.Object) atomikosProperties52);
        java.util.Enumeration<java.lang.Object> objEnumeration57 = properties39.elements();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties58 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties58.setThreadedTwoPhaseCommit(true);
        atomikosProperties58.setMaxActives((int) '#');
        atomikosProperties58.setEnableLogging(true);
        int int65 = atomikosProperties58.getMaxActives();
        boolean boolean66 = properties39.containsValue((java.lang.Object) atomikosProperties58);
        java.lang.Object obj67 = properties5.put((java.lang.Object) properties32, (java.lang.Object) boolean66);
        java.lang.String str70 = properties32.getProperty("{tmlog={com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=0, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.tm_unique_name=, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}, 4=true}", "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertTrue("'" + long11 + "' != '" + 10L + "'", long11 == 10L);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(properties17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(objEnumeration19);
        org.junit.Assert.assertNull(obj26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNotNull(obj33);
        org.junit.Assert.assertEquals(obj33.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj33), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj33), "{}");
        org.junit.Assert.assertNotNull(strSet34);
        org.junit.Assert.assertNull(obj41);
        org.junit.Assert.assertNull(obj49);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertNotNull(strSet51);
        org.junit.Assert.assertTrue("'" + long55 + "' != '" + 10L + "'", long55 == 10L);
        org.junit.Assert.assertNull(obj56);
        org.junit.Assert.assertNotNull(objEnumeration57);
        org.junit.Assert.assertTrue("'" + int65 + "' != '" + 35 + "'", int65 == 35);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertNull(obj67);
        org.junit.Assert.assertEquals("'" + str70 + "' != '" + "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}" + "'", str70, "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
    }

    @Test
    public void test1003() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1003");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setDefaultJtaTimeout((long) (byte) 10);
        long long3 = atomikosProperties0.getDefaultJtaTimeout();
        atomikosProperties0.setSerialJtaTransactions(true);
        java.util.Properties properties6 = atomikosProperties0.asProperties();
        java.lang.String str7 = atomikosProperties0.getService();
        org.junit.Assert.assertTrue("'" + long3 + "' != '" + 10L + "'", long3 == 10L);
        org.junit.Assert.assertNotNull(properties6);
        org.junit.Assert.assertNull(str7);
    }

    @Test
    public void test1004() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1004");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setDefaultJtaTimeout((long) (byte) 10);
        long long3 = atomikosProperties0.getDefaultJtaTimeout();
        atomikosProperties0.setTransactionManagerUniqueName("");
        boolean boolean6 = atomikosProperties0.isEnableLogging();
        atomikosProperties0.setDefaultJtaTimeout((long) '4');
        java.lang.String str9 = atomikosProperties0.getTransactionManagerUniqueName();
        atomikosProperties0.setThreadedTwoPhaseCommit(true);
        java.util.Properties properties12 = atomikosProperties0.asProperties();
        java.util.Properties properties13 = new java.util.Properties(properties12);
        java.util.Enumeration<?> wildcardEnumeration14 = properties13.propertyNames();
        java.lang.Object obj17 = properties13.setProperty("{=}", "{}");
        java.io.OutputStream outputStream18 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties13.storeToXML(outputStream18, "{tmlog=}");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + long3 + "' != '" + 10L + "'", long3 == 10L);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "" + "'", str9, "");
        org.junit.Assert.assertNotNull(properties12);
        org.junit.Assert.assertNotNull(wildcardEnumeration14);
        org.junit.Assert.assertNull(obj17);
    }

    @Test
    public void test1005() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1005");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Properties properties2 = new java.util.Properties(properties0);
        java.util.Properties properties3 = null;
        java.util.Properties properties4 = new java.util.Properties(properties3);
        java.lang.Object obj6 = properties2.put((java.lang.Object) properties4, (java.lang.Object) (short) 1);
        java.util.Properties properties7 = new java.util.Properties(properties4);
        java.util.Properties properties8 = new java.util.Properties(properties4);
        java.util.Set<java.lang.Object> objSet9 = properties8.keySet();
        java.util.Properties properties10 = new java.util.Properties(properties8);
        java.io.OutputStream outputStream11 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties10.store(outputStream11, "");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(obj6);
        org.junit.Assert.assertNotNull(objSet9);
    }

    @Test
    public void test1006() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1006");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Properties properties2 = new java.util.Properties(properties0);
        boolean boolean4 = properties2.containsValue((java.lang.Object) (short) 100);
        java.lang.Object obj5 = properties2.clone();
        java.util.Enumeration<?> wildcardEnumeration6 = properties2.propertyNames();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet7 = properties2.entrySet();
        int int8 = properties2.size();
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(obj5);
        org.junit.Assert.assertEquals(obj5.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj5), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj5), "{}");
        org.junit.Assert.assertNotNull(wildcardEnumeration6);
        org.junit.Assert.assertNotNull(objEntrySet7);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
    }

    @Test
    public void test1007() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1007");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Properties properties2 = new java.util.Properties(properties0);
        boolean boolean4 = properties2.containsValue((java.lang.Object) (short) 100);
        java.lang.Object obj5 = properties2.clone();
        java.lang.Object obj8 = properties2.setProperty("{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=0, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.tm_unique_name=, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}", "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.tm_unique_name=, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties9 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties9.setDefaultJtaTimeout((long) (byte) 10);
        atomikosProperties9.setCheckpointInterval((long) (byte) 0);
        atomikosProperties9.setTransactionManagerUniqueName("");
        java.util.Properties properties16 = atomikosProperties9.asProperties();
        java.lang.String str17 = atomikosProperties9.getLogBaseName();
        atomikosProperties9.setCheckpointInterval(100L);
        atomikosProperties9.setLogBaseName("");
        java.util.Properties properties22 = atomikosProperties9.asProperties();
        java.lang.String str23 = atomikosProperties9.getService();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj24 = properties2.remove((java.lang.Object) str23);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(obj5);
        org.junit.Assert.assertEquals(obj5.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj5), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj5), "{}");
        org.junit.Assert.assertNull(obj8);
        org.junit.Assert.assertNotNull(properties16);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "tmlog" + "'", str17, "tmlog");
        org.junit.Assert.assertNotNull(properties22);
        org.junit.Assert.assertNull(str23);
    }

    @Test
    public void test1008() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1008");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Properties properties2 = new java.util.Properties(properties0);
        java.util.Properties properties3 = null;
        java.util.Properties properties4 = new java.util.Properties(properties3);
        java.lang.Object obj6 = properties2.put((java.lang.Object) properties4, (java.lang.Object) (short) 1);
        java.util.Properties properties8 = null;
        java.util.Properties properties9 = new java.util.Properties(properties8);
        java.util.Properties properties10 = new java.util.Properties(properties8);
        java.util.Properties properties11 = null;
        java.util.Properties properties12 = new java.util.Properties(properties11);
        java.lang.Object obj14 = properties10.put((java.lang.Object) properties12, (java.lang.Object) (short) 1);
        boolean boolean15 = properties4.remove((java.lang.Object) false, (java.lang.Object) (short) 1);
        java.util.Properties properties16 = new java.util.Properties(properties4);
        boolean boolean17 = properties4.isEmpty();
        java.util.Properties properties18 = new java.util.Properties(properties4);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties19 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        boolean boolean20 = atomikosProperties19.isForceShutdownOnVmExit();
        java.lang.String str21 = atomikosProperties19.getLogBaseName();
        java.lang.String str22 = atomikosProperties19.getService();
        atomikosProperties19.setLogBaseName("{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.tm_unique_name=, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
        long long25 = atomikosProperties19.getMaxTimeout();
        atomikosProperties19.setMaxTimeout((long) 0);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties28 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties28.setThreadedTwoPhaseCommit(true);
        java.lang.String str31 = atomikosProperties28.getService();
        java.util.Properties properties32 = atomikosProperties28.asProperties();
        java.lang.Object obj33 = properties4.put((java.lang.Object) 0, (java.lang.Object) properties32);
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet34 = properties4.entrySet();
        java.lang.String str37 = properties4.getProperty("hi!", "{tmlog=}");
        org.junit.Assert.assertNull(obj6);
        org.junit.Assert.assertNull(obj14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "tmlog" + "'", str21, "tmlog");
        org.junit.Assert.assertNull(str22);
        org.junit.Assert.assertTrue("'" + long25 + "' != '" + 300000L + "'", long25 == 300000L);
        org.junit.Assert.assertNull(str31);
        org.junit.Assert.assertNotNull(properties32);
        org.junit.Assert.assertNull(obj33);
        org.junit.Assert.assertNotNull(objEntrySet34);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "{tmlog=}" + "'", str37, "{tmlog=}");
    }

    @Test
    public void test1009() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1009");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setDefaultJtaTimeout((long) (byte) 10);
        atomikosProperties0.setCheckpointInterval((long) (byte) 0);
        atomikosProperties0.setTransactionManagerUniqueName("");
        boolean boolean7 = atomikosProperties0.isEnableLogging();
        java.lang.String str8 = atomikosProperties0.getLogBaseName();
        atomikosProperties0.setThreadedTwoPhaseCommit(false);
        boolean boolean11 = atomikosProperties0.isThreadedTwoPhaseCommit();
        java.util.Properties properties12 = atomikosProperties0.asProperties();
        java.util.Properties properties13 = atomikosProperties0.asProperties();
        int int14 = properties13.size();
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "tmlog" + "'", str8, "tmlog");
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(properties12);
        org.junit.Assert.assertNotNull(properties13);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 10 + "'", int14 == 10);
    }

    @Test
    public void test1010() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1010");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Properties properties2 = new java.util.Properties(properties0);
        java.util.Properties properties3 = null;
        java.util.Properties properties4 = new java.util.Properties(properties3);
        java.lang.Object obj6 = properties2.put((java.lang.Object) properties4, (java.lang.Object) (short) 1);
        properties4.clear();
        int int8 = properties4.size();
        java.util.Properties properties9 = null;
        java.util.Properties properties10 = new java.util.Properties(properties9);
        java.util.Properties properties11 = new java.util.Properties(properties9);
        java.util.Properties properties12 = null;
        java.util.Properties properties13 = new java.util.Properties(properties12);
        java.lang.Object obj15 = properties11.put((java.lang.Object) properties13, (java.lang.Object) (short) 1);
        java.util.Properties properties16 = new java.util.Properties(properties13);
        java.util.Properties properties17 = new java.util.Properties(properties13);
        boolean boolean19 = properties4.remove((java.lang.Object) properties13, (java.lang.Object) 10.0f);
        java.util.Enumeration<java.lang.Object> objEnumeration20 = properties13.elements();
        java.util.Properties properties21 = new java.util.Properties(properties13);
        java.util.Collection<java.lang.Object> objCollection22 = properties13.values();
        java.io.OutputStream outputStream23 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties13.store(outputStream23, "");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(obj6);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertNull(obj15);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(objEnumeration20);
        org.junit.Assert.assertNotNull(objCollection22);
    }

    @Test
    public void test1011() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1011");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Properties properties2 = new java.util.Properties(properties0);
        java.util.Properties properties3 = null;
        java.util.Properties properties4 = new java.util.Properties(properties3);
        java.lang.Object obj6 = properties2.put((java.lang.Object) properties4, (java.lang.Object) (short) 1);
        properties4.clear();
        java.lang.String str9 = properties4.getProperty("");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties10 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties10.setDefaultJtaTimeout((long) (byte) 10);
        atomikosProperties10.setSerialJtaTransactions(false);
        atomikosProperties10.setMaxTimeout((long) (short) -1);
        long long17 = atomikosProperties10.getDefaultJtaTimeout();
        java.util.Properties properties18 = atomikosProperties10.asProperties();
        java.lang.Object obj19 = properties4.get((java.lang.Object) properties18);
        java.util.Properties properties20 = new java.util.Properties(properties4);
        java.util.Set<java.lang.Object> objSet21 = properties4.keySet();
        org.junit.Assert.assertNull(obj6);
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertTrue("'" + long17 + "' != '" + 10L + "'", long17 == 10L);
        org.junit.Assert.assertNotNull(properties18);
        org.junit.Assert.assertNull(obj19);
        org.junit.Assert.assertNotNull(objSet21);
    }

    @Test
    public void test1012() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1012");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Properties properties2 = new java.util.Properties(properties0);
        java.util.Properties properties3 = null;
        java.util.Properties properties4 = new java.util.Properties(properties3);
        java.lang.Object obj6 = properties2.put((java.lang.Object) properties4, (java.lang.Object) (short) 1);
        java.util.Properties properties7 = new java.util.Properties(properties4);
        java.util.Properties properties8 = new java.util.Properties(properties4);
        java.util.Set<java.lang.Object> objSet9 = properties8.keySet();
        java.util.Properties properties10 = new java.util.Properties(properties8);
        int int11 = properties10.size();
        java.util.Properties properties12 = null;
        java.util.Properties properties13 = new java.util.Properties(properties12);
        java.util.Properties properties14 = new java.util.Properties(properties12);
        java.util.Properties properties15 = null;
        java.util.Properties properties16 = new java.util.Properties(properties15);
        java.lang.Object obj18 = properties14.put((java.lang.Object) properties16, (java.lang.Object) (short) 1);
        java.util.Properties properties20 = null;
        java.util.Properties properties21 = new java.util.Properties(properties20);
        java.util.Properties properties22 = new java.util.Properties(properties20);
        java.util.Properties properties23 = null;
        java.util.Properties properties24 = new java.util.Properties(properties23);
        java.lang.Object obj26 = properties22.put((java.lang.Object) properties24, (java.lang.Object) (short) 1);
        boolean boolean27 = properties16.remove((java.lang.Object) false, (java.lang.Object) (short) 1);
        java.util.Set<java.lang.String> strSet28 = properties16.stringPropertyNames();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties29 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties29.setDefaultJtaTimeout((long) (byte) 10);
        long long32 = atomikosProperties29.getDefaultJtaTimeout();
        java.lang.Object obj33 = properties16.get((java.lang.Object) atomikosProperties29);
        atomikosProperties29.setCheckpointInterval((long) (short) 100);
        java.util.Properties properties36 = atomikosProperties29.asProperties();
        java.lang.String str37 = atomikosProperties29.getLogBaseName();
        atomikosProperties29.setLogBaseDir("{}");
        java.util.Properties properties40 = null;
        java.util.Properties properties41 = new java.util.Properties(properties40);
        int int42 = properties41.size();
        java.lang.Object obj43 = properties10.getOrDefault((java.lang.Object) atomikosProperties29, (java.lang.Object) properties41);
        atomikosProperties29.setForceShutdownOnVmExit(true);
        boolean boolean46 = atomikosProperties29.isEnableLogging();
        org.junit.Assert.assertNull(obj6);
        org.junit.Assert.assertNotNull(objSet9);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertNull(obj18);
        org.junit.Assert.assertNull(obj26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(strSet28);
        org.junit.Assert.assertTrue("'" + long32 + "' != '" + 10L + "'", long32 == 10L);
        org.junit.Assert.assertNull(obj33);
        org.junit.Assert.assertNotNull(properties36);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "tmlog" + "'", str37, "tmlog");
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 0 + "'", int42 == 0);
        org.junit.Assert.assertNotNull(obj43);
        org.junit.Assert.assertEquals(obj43.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj43), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj43), "{}");
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
    }

    @Test
    public void test1013() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1013");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Properties properties2 = new java.util.Properties(properties0);
        java.util.Properties properties3 = null;
        java.util.Properties properties4 = new java.util.Properties(properties3);
        java.lang.Object obj6 = properties2.put((java.lang.Object) properties4, (java.lang.Object) (short) 1);
        properties4.clear();
        int int8 = properties4.size();
        java.util.Properties properties9 = new java.util.Properties(properties4);
        boolean boolean10 = properties4.isEmpty();
        java.util.Enumeration<java.lang.Object> objEnumeration11 = properties4.elements();
        java.io.PrintStream printStream12 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties4.list(printStream12);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(obj6);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(objEnumeration11);
    }

    @Test
    public void test1014() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1014");
        java.util.Properties properties0 = new java.util.Properties();
        java.util.Enumeration<?> wildcardEnumeration1 = properties0.propertyNames();
        java.lang.Object obj2 = properties0.clone();
        java.util.Properties properties3 = null;
        java.util.Properties properties4 = new java.util.Properties(properties3);
        java.util.Properties properties5 = new java.util.Properties(properties3);
        java.util.Properties properties6 = null;
        java.util.Properties properties7 = new java.util.Properties(properties6);
        java.lang.Object obj9 = properties5.put((java.lang.Object) properties7, (java.lang.Object) (short) 1);
        boolean boolean10 = properties5.isEmpty();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties11 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties11.setDefaultJtaTimeout((long) (byte) 10);
        atomikosProperties11.setCheckpointInterval((long) (byte) 0);
        atomikosProperties11.setTransactionManagerUniqueName("");
        java.util.Properties properties18 = atomikosProperties11.asProperties();
        java.lang.Object obj19 = properties5.remove((java.lang.Object) properties18);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties20 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties20.setDefaultJtaTimeout((long) (byte) 10);
        atomikosProperties20.setCheckpointInterval((long) (byte) 0);
        atomikosProperties20.setTransactionManagerUniqueName("");
        java.lang.Object obj27 = properties18.remove((java.lang.Object) atomikosProperties20);
        boolean boolean28 = properties0.containsKey((java.lang.Object) properties18);
        java.util.Properties properties29 = new java.util.Properties(properties18);
        java.io.PrintWriter printWriter30 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties18.list(printWriter30);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardEnumeration1);
        org.junit.Assert.assertNotNull(obj2);
        org.junit.Assert.assertEquals(obj2.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj2), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj2), "{}");
        org.junit.Assert.assertNull(obj9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(properties18);
        org.junit.Assert.assertNull(obj19);
        org.junit.Assert.assertNull(obj27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
    }

    @Test
    public void test1015() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1015");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setDefaultJtaTimeout((long) (byte) 10);
        long long3 = atomikosProperties0.getDefaultJtaTimeout();
        atomikosProperties0.setTransactionManagerUniqueName("");
        boolean boolean6 = atomikosProperties0.isEnableLogging();
        java.lang.String str7 = atomikosProperties0.getLogBaseDir();
        java.util.Properties properties8 = atomikosProperties0.asProperties();
        java.lang.String str9 = properties8.toString();
        java.util.Properties properties10 = null;
        java.util.Properties properties11 = new java.util.Properties(properties10);
        java.util.Properties properties12 = new java.util.Properties(properties10);
        java.util.Properties properties13 = null;
        java.util.Properties properties14 = new java.util.Properties(properties13);
        java.lang.Object obj16 = properties12.put((java.lang.Object) properties14, (java.lang.Object) (short) 1);
        java.util.Properties properties18 = null;
        java.util.Properties properties19 = new java.util.Properties(properties18);
        java.util.Properties properties20 = new java.util.Properties(properties18);
        java.util.Properties properties21 = null;
        java.util.Properties properties22 = new java.util.Properties(properties21);
        java.lang.Object obj24 = properties20.put((java.lang.Object) properties22, (java.lang.Object) (short) 1);
        boolean boolean25 = properties14.remove((java.lang.Object) false, (java.lang.Object) (short) 1);
        java.util.Set<java.lang.String> strSet26 = properties14.stringPropertyNames();
        java.lang.Object obj27 = properties14.clone();
        properties8.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties14);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties29 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties29.setDefaultJtaTimeout((long) (byte) 10);
        long long32 = atomikosProperties29.getDefaultJtaTimeout();
        atomikosProperties29.setTransactionManagerUniqueName("hi!");
        atomikosProperties29.setLogBaseName("tmlog");
        atomikosProperties29.setTransactionManagerUniqueName("{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=0, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.tm_unique_name=, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
        java.lang.Object obj39 = properties8.get((java.lang.Object) "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=0, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.tm_unique_name=, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
        java.io.Writer writer40 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties8.store(writer40, "{=}");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + long3 + "' != '" + 10L + "'", long3 == 10L);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNotNull(properties8);
// flaky:         org.junit.Assert.assertEquals("'" + str9 + "' != '" + "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.tm_unique_name=, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}" + "'", str9, "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.tm_unique_name=, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
        org.junit.Assert.assertNull(obj16);
        org.junit.Assert.assertNull(obj24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(strSet26);
        org.junit.Assert.assertNotNull(obj27);
        org.junit.Assert.assertEquals(obj27.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj27), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj27), "{}");
        org.junit.Assert.assertTrue("'" + long32 + "' != '" + 10L + "'", long32 == 10L);
        org.junit.Assert.assertNull(obj39);
    }

    @Test
    public void test1016() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1016");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setDefaultJtaTimeout((long) (byte) 10);
        atomikosProperties0.setSerialJtaTransactions(false);
        atomikosProperties0.setService("{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.tm_unique_name=, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
        java.lang.String str7 = atomikosProperties0.getTransactionManagerUniqueName();
        java.util.Properties properties8 = atomikosProperties0.asProperties();
        long long9 = atomikosProperties0.getCheckpointInterval();
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNotNull(properties8);
        org.junit.Assert.assertTrue("'" + long9 + "' != '" + 500L + "'", long9 == 500L);
    }

    @Test
    public void test1017() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1017");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Properties properties2 = new java.util.Properties(properties0);
        java.util.Properties properties3 = null;
        java.util.Properties properties4 = new java.util.Properties(properties3);
        java.lang.Object obj6 = properties2.put((java.lang.Object) properties4, (java.lang.Object) (short) 1);
        java.util.Enumeration<java.lang.Object> objEnumeration7 = properties4.elements();
        java.util.Properties properties8 = new java.util.Properties(properties4);
        boolean boolean9 = properties4.isEmpty();
        java.io.InputStream inputStream10 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties4.load(inputStream10);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(obj6);
        org.junit.Assert.assertNotNull(objEnumeration7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
    }

    @Test
    public void test1018() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1018");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Properties properties2 = new java.util.Properties(properties0);
        java.util.Properties properties3 = null;
        java.util.Properties properties4 = new java.util.Properties(properties3);
        java.lang.Object obj6 = properties2.put((java.lang.Object) properties4, (java.lang.Object) (short) 1);
        boolean boolean7 = properties2.isEmpty();
        properties2.clear();
        java.util.Properties properties9 = new java.util.Properties(properties2);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties10 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties10.setDefaultJtaTimeout((long) (byte) 10);
        long long13 = atomikosProperties10.getDefaultJtaTimeout();
        atomikosProperties10.setTransactionManagerUniqueName("hi!");
        atomikosProperties10.setLogBaseName("tmlog");
        atomikosProperties10.setCheckpointInterval(300000L);
        boolean boolean20 = properties2.containsKey((java.lang.Object) 300000L);
        java.lang.Object obj22 = properties2.remove((java.lang.Object) 1L);
        org.junit.Assert.assertNull(obj6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + long13 + "' != '" + 10L + "'", long13 == 10L);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNull(obj22);
    }

    @Test
    public void test1019() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1019");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Properties properties2 = new java.util.Properties(properties0);
        java.util.Properties properties3 = null;
        java.util.Properties properties4 = new java.util.Properties(properties3);
        java.lang.Object obj6 = properties2.put((java.lang.Object) properties4, (java.lang.Object) (short) 1);
        boolean boolean7 = properties2.isEmpty();
        java.util.Properties properties8 = null;
        java.util.Properties properties9 = new java.util.Properties(properties8);
        java.util.Properties properties10 = new java.util.Properties(properties8);
        boolean boolean11 = properties2.containsKey((java.lang.Object) properties10);
        java.util.Properties properties12 = new java.util.Properties(properties10);
        java.lang.Object obj13 = properties12.clone();
        java.util.Properties properties15 = null;
        java.util.Properties properties16 = new java.util.Properties(properties15);
        java.util.Properties properties17 = new java.util.Properties(properties15);
        java.util.Properties properties18 = null;
        java.util.Properties properties19 = new java.util.Properties(properties18);
        java.lang.Object obj21 = properties17.put((java.lang.Object) properties19, (java.lang.Object) (short) 1);
        boolean boolean22 = properties17.isEmpty();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties23 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties23.setDefaultJtaTimeout((long) (byte) 10);
        atomikosProperties23.setCheckpointInterval((long) (byte) 0);
        atomikosProperties23.setTransactionManagerUniqueName("");
        java.util.Properties properties30 = atomikosProperties23.asProperties();
        java.lang.Object obj31 = properties17.remove((java.lang.Object) properties30);
        java.lang.Object obj32 = properties12.putIfAbsent((java.lang.Object) 1L, (java.lang.Object) properties17);
        java.io.OutputStream outputStream33 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties12.storeToXML(outputStream33, "{tmlog={com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=0, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.tm_unique_name=, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}, 4=true}", "{tmlog={com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=0, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.tm_unique_name=, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}, 4=true}");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(obj6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNotNull(obj13);
        org.junit.Assert.assertEquals(obj13.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj13), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj13), "{}");
        org.junit.Assert.assertNull(obj21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(properties30);
        org.junit.Assert.assertNull(obj31);
        org.junit.Assert.assertNull(obj32);
    }

    @Test
    public void test1020() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1020");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Properties properties2 = new java.util.Properties(properties0);
        java.util.Properties properties3 = null;
        java.util.Properties properties4 = new java.util.Properties(properties3);
        java.lang.Object obj6 = properties2.put((java.lang.Object) properties4, (java.lang.Object) (short) 1);
        java.util.Properties properties8 = null;
        java.util.Properties properties9 = new java.util.Properties(properties8);
        java.util.Properties properties10 = new java.util.Properties(properties8);
        java.util.Properties properties11 = null;
        java.util.Properties properties12 = new java.util.Properties(properties11);
        java.lang.Object obj14 = properties10.put((java.lang.Object) properties12, (java.lang.Object) (short) 1);
        boolean boolean15 = properties4.remove((java.lang.Object) false, (java.lang.Object) (short) 1);
        java.util.Set<java.lang.String> strSet16 = properties4.stringPropertyNames();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties17 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties17.setDefaultJtaTimeout((long) (byte) 10);
        long long20 = atomikosProperties17.getDefaultJtaTimeout();
        java.lang.Object obj21 = properties4.get((java.lang.Object) atomikosProperties17);
        java.util.Properties properties22 = null;
        java.util.Properties properties23 = new java.util.Properties(properties22);
        java.util.Properties properties24 = new java.util.Properties(properties22);
        java.util.Properties properties25 = null;
        java.util.Properties properties26 = new java.util.Properties(properties25);
        java.lang.Object obj28 = properties24.put((java.lang.Object) properties26, (java.lang.Object) (short) 1);
        java.util.Properties properties30 = null;
        java.util.Properties properties31 = new java.util.Properties(properties30);
        java.util.Properties properties32 = new java.util.Properties(properties30);
        java.util.Properties properties33 = null;
        java.util.Properties properties34 = new java.util.Properties(properties33);
        java.lang.Object obj36 = properties32.put((java.lang.Object) properties34, (java.lang.Object) (short) 1);
        boolean boolean37 = properties26.remove((java.lang.Object) false, (java.lang.Object) (short) 1);
        java.lang.Object obj39 = properties26.remove((java.lang.Object) '#');
        java.util.Set<java.lang.Object> objSet40 = properties26.keySet();
        boolean boolean41 = properties4.containsKey((java.lang.Object) properties26);
        java.lang.Object obj44 = properties26.setProperty("{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.tm_unique_name=, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}", "{}");
        java.util.Enumeration<java.lang.Object> objEnumeration45 = properties26.keys();
        java.io.OutputStream outputStream46 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties26.store(outputStream46, "tmlog");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(obj6);
        org.junit.Assert.assertNull(obj14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(strSet16);
        org.junit.Assert.assertTrue("'" + long20 + "' != '" + 10L + "'", long20 == 10L);
        org.junit.Assert.assertNull(obj21);
        org.junit.Assert.assertNull(obj28);
        org.junit.Assert.assertNull(obj36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNull(obj39);
        org.junit.Assert.assertNotNull(objSet40);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNull(obj44);
        org.junit.Assert.assertNotNull(objEnumeration45);
    }

    @Test
    public void test1021() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1021");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Properties properties2 = new java.util.Properties(properties0);
        java.util.Properties properties3 = null;
        java.util.Properties properties4 = new java.util.Properties(properties3);
        java.lang.Object obj6 = properties2.put((java.lang.Object) properties4, (java.lang.Object) (short) 1);
        java.util.Enumeration<java.lang.Object> objEnumeration7 = properties4.elements();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet8 = properties4.entrySet();
        java.util.Set<java.lang.Object> objSet9 = properties4.keySet();
        java.util.Properties properties10 = null;
        java.util.Properties properties11 = new java.util.Properties(properties10);
        java.util.Properties properties12 = new java.util.Properties(properties10);
        java.util.Properties properties13 = null;
        java.util.Properties properties14 = new java.util.Properties(properties13);
        java.lang.Object obj16 = properties12.put((java.lang.Object) properties14, (java.lang.Object) (short) 1);
        properties14.clear();
        int int18 = properties14.size();
        java.util.Properties properties19 = new java.util.Properties(properties14);
        java.util.Properties properties20 = null;
        java.util.Properties properties21 = new java.util.Properties(properties20);
        java.util.Properties properties22 = new java.util.Properties(properties20);
        java.util.Properties properties23 = null;
        java.util.Properties properties24 = new java.util.Properties(properties23);
        java.lang.Object obj26 = properties22.put((java.lang.Object) properties24, (java.lang.Object) (short) 1);
        properties24.clear();
        java.lang.String str29 = properties24.getProperty("");
        java.util.Properties properties30 = null;
        java.util.Properties properties31 = new java.util.Properties(properties30);
        java.util.Properties properties32 = new java.util.Properties(properties30);
        java.util.Properties properties33 = null;
        java.util.Properties properties34 = new java.util.Properties(properties33);
        java.lang.Object obj36 = properties32.put((java.lang.Object) properties34, (java.lang.Object) (short) 1);
        properties24.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties32);
        java.lang.Object obj38 = properties4.put((java.lang.Object) properties14, (java.lang.Object) properties32);
        java.lang.Object obj39 = properties14.clone();
        java.io.InputStream inputStream40 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties14.load(inputStream40);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(obj6);
        org.junit.Assert.assertNotNull(objEnumeration7);
        org.junit.Assert.assertNotNull(objEntrySet8);
        org.junit.Assert.assertNotNull(objSet9);
        org.junit.Assert.assertNull(obj16);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 0 + "'", int18 == 0);
        org.junit.Assert.assertNull(obj26);
        org.junit.Assert.assertNull(str29);
        org.junit.Assert.assertNull(obj36);
        org.junit.Assert.assertNull(obj38);
        org.junit.Assert.assertNotNull(obj39);
        org.junit.Assert.assertEquals(obj39.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj39), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj39), "{}");
    }

    @Test
    public void test1022() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1022");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setThreadedTwoPhaseCommit(true);
        java.lang.String str3 = atomikosProperties0.getService();
        boolean boolean4 = atomikosProperties0.isSerialJtaTransactions();
        java.util.Properties properties5 = atomikosProperties0.asProperties();
        java.io.PrintWriter printWriter6 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties5.list(printWriter6);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(properties5);
    }

    @Test
    public void test1023() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1023");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Properties properties2 = new java.util.Properties(properties0);
        boolean boolean4 = properties2.containsValue((java.lang.Object) (short) 100);
        java.util.Properties properties5 = null;
        java.util.Properties properties6 = new java.util.Properties(properties5);
        java.util.Properties properties7 = new java.util.Properties(properties5);
        java.util.Properties properties8 = null;
        java.util.Properties properties9 = new java.util.Properties(properties8);
        java.lang.Object obj11 = properties7.put((java.lang.Object) properties9, (java.lang.Object) (short) 1);
        java.util.Enumeration<java.lang.Object> objEnumeration12 = properties9.elements();
        java.lang.Object obj13 = properties2.remove((java.lang.Object) properties9);
        java.lang.Object obj16 = properties9.setProperty("", "");
        java.lang.String str18 = properties9.getProperty("tmlog");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties19 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties19.setDefaultJtaTimeout((long) (byte) 10);
        atomikosProperties19.setCheckpointInterval((long) (byte) 0);
        atomikosProperties19.setTransactionManagerUniqueName("");
        java.util.Properties properties26 = atomikosProperties19.asProperties();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties27 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties27.setThreadedTwoPhaseCommit(true);
        atomikosProperties27.setMaxActives((int) '#');
        atomikosProperties27.setForceShutdownOnVmExit(true);
        java.lang.String str34 = atomikosProperties27.getLogBaseDir();
        java.lang.Object obj35 = properties26.remove((java.lang.Object) atomikosProperties27);
        properties9.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties26);
        java.io.OutputStream outputStream37 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties9.store(outputStream37, "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=52, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.tm_unique_name=, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNull(obj11);
        org.junit.Assert.assertNotNull(objEnumeration12);
        org.junit.Assert.assertNull(obj13);
        org.junit.Assert.assertNull(obj16);
        org.junit.Assert.assertNull(str18);
        org.junit.Assert.assertNotNull(properties26);
        org.junit.Assert.assertNull(str34);
        org.junit.Assert.assertNull(obj35);
    }

    @Test
    public void test1024() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1024");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        int int1 = atomikosProperties0.getMaxActives();
        java.util.Properties properties2 = atomikosProperties0.asProperties();
        java.util.Properties properties3 = null;
        java.util.Properties properties4 = new java.util.Properties(properties3);
        java.util.Properties properties5 = new java.util.Properties(properties3);
        boolean boolean7 = properties5.containsValue((java.lang.Object) (short) 100);
        java.util.Properties properties8 = null;
        java.util.Properties properties9 = new java.util.Properties(properties8);
        java.util.Properties properties10 = new java.util.Properties(properties8);
        java.util.Properties properties11 = null;
        java.util.Properties properties12 = new java.util.Properties(properties11);
        java.lang.Object obj14 = properties10.put((java.lang.Object) properties12, (java.lang.Object) (short) 1);
        java.util.Enumeration<java.lang.Object> objEnumeration15 = properties12.elements();
        java.lang.Object obj16 = properties5.remove((java.lang.Object) properties12);
        java.util.Properties properties17 = null;
        java.util.Properties properties18 = new java.util.Properties(properties17);
        java.util.Properties properties19 = new java.util.Properties(properties17);
        java.util.Properties properties20 = null;
        java.util.Properties properties21 = new java.util.Properties(properties20);
        java.lang.Object obj23 = properties19.put((java.lang.Object) properties21, (java.lang.Object) (short) 1);
        java.util.Enumeration<java.lang.Object> objEnumeration24 = properties21.elements();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet25 = properties21.entrySet();
        java.util.Set<java.lang.Object> objSet26 = properties21.keySet();
        java.util.Properties properties27 = null;
        java.util.Properties properties28 = new java.util.Properties(properties27);
        java.util.Properties properties29 = new java.util.Properties(properties27);
        java.util.Properties properties30 = null;
        java.util.Properties properties31 = new java.util.Properties(properties30);
        java.lang.Object obj33 = properties29.put((java.lang.Object) properties31, (java.lang.Object) (short) 1);
        properties31.clear();
        int int35 = properties31.size();
        java.util.Properties properties36 = new java.util.Properties(properties31);
        java.util.Properties properties37 = null;
        java.util.Properties properties38 = new java.util.Properties(properties37);
        java.util.Properties properties39 = new java.util.Properties(properties37);
        java.util.Properties properties40 = null;
        java.util.Properties properties41 = new java.util.Properties(properties40);
        java.lang.Object obj43 = properties39.put((java.lang.Object) properties41, (java.lang.Object) (short) 1);
        properties41.clear();
        java.lang.String str46 = properties41.getProperty("");
        java.util.Properties properties47 = null;
        java.util.Properties properties48 = new java.util.Properties(properties47);
        java.util.Properties properties49 = new java.util.Properties(properties47);
        java.util.Properties properties50 = null;
        java.util.Properties properties51 = new java.util.Properties(properties50);
        java.lang.Object obj53 = properties49.put((java.lang.Object) properties51, (java.lang.Object) (short) 1);
        properties41.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties49);
        java.lang.Object obj55 = properties21.put((java.lang.Object) properties31, (java.lang.Object) properties49);
        java.util.Properties properties56 = null;
        java.util.Properties properties57 = new java.util.Properties(properties56);
        java.util.Properties properties58 = new java.util.Properties(properties56);
        java.util.Properties properties59 = null;
        java.util.Properties properties60 = new java.util.Properties(properties59);
        java.lang.Object obj62 = properties58.put((java.lang.Object) properties60, (java.lang.Object) (short) 1);
        java.util.Properties properties63 = new java.util.Properties(properties60);
        java.util.Properties properties64 = new java.util.Properties(properties60);
        java.util.Set<java.lang.Object> objSet65 = properties64.keySet();
        java.lang.Object obj66 = properties5.replace((java.lang.Object) properties21, (java.lang.Object) objSet65);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties67 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        int int68 = atomikosProperties67.getMaxActives();
        long long69 = atomikosProperties67.getMaxTimeout();
        java.util.Properties properties70 = atomikosProperties67.asProperties();
        atomikosProperties67.setService("hi!");
        boolean boolean73 = properties2.remove((java.lang.Object) properties5, (java.lang.Object) "hi!");
        java.util.Properties properties74 = new java.util.Properties(properties2);
        java.lang.String str76 = properties74.getProperty("{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=0, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.tm_unique_name=, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
        java.util.Enumeration<?> wildcardEnumeration77 = properties74.propertyNames();
        java.lang.Object obj78 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean79 = properties74.containsValue(obj78);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 50 + "'", int1 == 50);
        org.junit.Assert.assertNotNull(properties2);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNull(obj14);
        org.junit.Assert.assertNotNull(objEnumeration15);
        org.junit.Assert.assertNull(obj16);
        org.junit.Assert.assertNull(obj23);
        org.junit.Assert.assertNotNull(objEnumeration24);
        org.junit.Assert.assertNotNull(objEntrySet25);
        org.junit.Assert.assertNotNull(objSet26);
        org.junit.Assert.assertNull(obj33);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 0 + "'", int35 == 0);
        org.junit.Assert.assertNull(obj43);
        org.junit.Assert.assertNull(str46);
        org.junit.Assert.assertNull(obj53);
        org.junit.Assert.assertNull(obj55);
        org.junit.Assert.assertNull(obj62);
        org.junit.Assert.assertNotNull(objSet65);
        org.junit.Assert.assertNull(obj66);
        org.junit.Assert.assertTrue("'" + int68 + "' != '" + 50 + "'", int68 == 50);
        org.junit.Assert.assertTrue("'" + long69 + "' != '" + 300000L + "'", long69 == 300000L);
        org.junit.Assert.assertNotNull(properties70);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertNull(str76);
        org.junit.Assert.assertNotNull(wildcardEnumeration77);
    }

    @Test
    public void test1025() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1025");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Properties properties2 = new java.util.Properties(properties0);
        java.util.Properties properties3 = null;
        java.util.Properties properties4 = new java.util.Properties(properties3);
        java.lang.Object obj6 = properties2.put((java.lang.Object) properties4, (java.lang.Object) (short) 1);
        java.util.Properties properties7 = new java.util.Properties(properties4);
        properties7.clear();
        java.io.InputStream inputStream9 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties7.loadFromXML(inputStream9);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(obj6);
    }

    @Test
    public void test1026() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1026");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setDefaultJtaTimeout((long) (byte) 10);
        atomikosProperties0.setCheckpointInterval((long) (byte) 0);
        atomikosProperties0.setTransactionManagerUniqueName("");
        java.util.Properties properties7 = atomikosProperties0.asProperties();
        java.lang.String str8 = atomikosProperties0.getLogBaseName();
        atomikosProperties0.setCheckpointInterval(100L);
        atomikosProperties0.setLogBaseName("");
        java.util.Properties properties13 = atomikosProperties0.asProperties();
        atomikosProperties0.setMaxTimeout(300000L);
        atomikosProperties0.setMaxTimeout((long) (byte) -1);
        org.junit.Assert.assertNotNull(properties7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "tmlog" + "'", str8, "tmlog");
        org.junit.Assert.assertNotNull(properties13);
    }

    @Test
    public void test1027() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1027");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Properties properties2 = new java.util.Properties(properties0);
        java.util.Properties properties3 = null;
        java.util.Properties properties4 = new java.util.Properties(properties3);
        java.lang.Object obj6 = properties2.put((java.lang.Object) properties4, (java.lang.Object) (short) 1);
        boolean boolean7 = properties2.isEmpty();
        java.util.Properties properties8 = null;
        java.util.Properties properties9 = new java.util.Properties(properties8);
        java.util.Properties properties10 = new java.util.Properties(properties8);
        boolean boolean11 = properties2.containsKey((java.lang.Object) properties10);
        java.util.Properties properties12 = new java.util.Properties(properties10);
        java.util.Properties properties13 = new java.util.Properties(properties12);
        java.util.Properties properties14 = null;
        java.util.Properties properties15 = new java.util.Properties(properties14);
        java.util.Properties properties16 = new java.util.Properties(properties14);
        java.util.Properties properties17 = null;
        java.util.Properties properties18 = new java.util.Properties(properties17);
        java.lang.Object obj20 = properties16.put((java.lang.Object) properties18, (java.lang.Object) (short) 1);
        properties18.clear();
        int int22 = properties18.size();
        java.util.Properties properties23 = new java.util.Properties(properties18);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties24 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        int int25 = atomikosProperties24.getMaxActives();
        long long26 = atomikosProperties24.getMaxTimeout();
        java.util.Properties properties27 = atomikosProperties24.asProperties();
        java.util.Properties properties28 = atomikosProperties24.asProperties();
        java.util.Properties properties29 = null;
        java.util.Properties properties30 = new java.util.Properties(properties29);
        java.util.Properties properties31 = new java.util.Properties(properties29);
        java.util.Properties properties32 = null;
        java.util.Properties properties33 = new java.util.Properties(properties32);
        java.lang.Object obj35 = properties31.put((java.lang.Object) properties33, (java.lang.Object) (short) 1);
        java.util.Enumeration<java.lang.Object> objEnumeration36 = properties33.elements();
        java.lang.Object obj37 = properties18.replace((java.lang.Object) atomikosProperties24, (java.lang.Object) properties33);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties39 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties39.setThreadedTwoPhaseCommit(true);
        java.lang.String str42 = atomikosProperties39.getService();
        boolean boolean43 = atomikosProperties39.isSerialJtaTransactions();
        java.lang.Object obj44 = properties33.getOrDefault((java.lang.Object) "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.tm_unique_name=, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}", (java.lang.Object) atomikosProperties39);
        boolean boolean45 = properties12.equals((java.lang.Object) properties33);
        java.util.Properties properties46 = new java.util.Properties();
        java.util.Enumeration<?> wildcardEnumeration47 = properties46.propertyNames();
        java.lang.Object obj48 = properties46.clone();
        java.util.Properties properties49 = null;
        java.util.Properties properties50 = new java.util.Properties(properties49);
        java.util.Properties properties51 = new java.util.Properties(properties49);
        java.util.Properties properties52 = null;
        java.util.Properties properties53 = new java.util.Properties(properties52);
        java.lang.Object obj55 = properties51.put((java.lang.Object) properties53, (java.lang.Object) (short) 1);
        boolean boolean56 = properties51.isEmpty();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties57 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties57.setDefaultJtaTimeout((long) (byte) 10);
        atomikosProperties57.setCheckpointInterval((long) (byte) 0);
        atomikosProperties57.setTransactionManagerUniqueName("");
        java.util.Properties properties64 = atomikosProperties57.asProperties();
        java.lang.Object obj65 = properties51.remove((java.lang.Object) properties64);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties66 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties66.setDefaultJtaTimeout((long) (byte) 10);
        atomikosProperties66.setCheckpointInterval((long) (byte) 0);
        atomikosProperties66.setTransactionManagerUniqueName("");
        java.lang.Object obj73 = properties64.remove((java.lang.Object) atomikosProperties66);
        boolean boolean74 = properties46.containsKey((java.lang.Object) properties64);
        java.util.Properties properties75 = new java.util.Properties(properties64);
        java.lang.String str77 = properties75.getProperty("{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=0, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog, {}={}}");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties78 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties78.setDefaultJtaTimeout((long) (byte) 10);
        atomikosProperties78.setCheckpointInterval((long) (byte) 0);
        atomikosProperties78.setTransactionManagerUniqueName("");
        boolean boolean85 = atomikosProperties78.isEnableLogging();
        atomikosProperties78.setSerialJtaTransactions(false);
        atomikosProperties78.setLogBaseDir("");
        int int90 = atomikosProperties78.getMaxActives();
        atomikosProperties78.setService("tmlog");
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj93 = properties33.put((java.lang.Object) str77, (java.lang.Object) atomikosProperties78);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(obj6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNull(obj20);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 0 + "'", int22 == 0);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 50 + "'", int25 == 50);
        org.junit.Assert.assertTrue("'" + long26 + "' != '" + 300000L + "'", long26 == 300000L);
        org.junit.Assert.assertNotNull(properties27);
        org.junit.Assert.assertNotNull(properties28);
        org.junit.Assert.assertNull(obj35);
        org.junit.Assert.assertNotNull(objEnumeration36);
        org.junit.Assert.assertNull(obj37);
        org.junit.Assert.assertNull(str42);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNotNull(obj44);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertNotNull(wildcardEnumeration47);
        org.junit.Assert.assertNotNull(obj48);
        org.junit.Assert.assertEquals(obj48.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj48), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj48), "{}");
        org.junit.Assert.assertNull(obj55);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertNotNull(properties64);
        org.junit.Assert.assertNull(obj65);
        org.junit.Assert.assertNull(obj73);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
        org.junit.Assert.assertNull(str77);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + true + "'", boolean85 == true);
        org.junit.Assert.assertTrue("'" + int90 + "' != '" + 50 + "'", int90 == 50);
    }

    @Test
    public void test1028() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1028");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Properties properties2 = new java.util.Properties(properties0);
        java.util.Properties properties3 = null;
        java.util.Properties properties4 = new java.util.Properties(properties3);
        java.lang.Object obj6 = properties2.put((java.lang.Object) properties4, (java.lang.Object) (short) 1);
        java.util.Enumeration<java.lang.Object> objEnumeration7 = properties4.elements();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet8 = properties4.entrySet();
        java.util.Set<java.lang.Object> objSet9 = properties4.keySet();
        java.util.Properties properties10 = null;
        java.util.Properties properties11 = new java.util.Properties(properties10);
        java.util.Properties properties12 = new java.util.Properties(properties10);
        java.util.Properties properties13 = null;
        java.util.Properties properties14 = new java.util.Properties(properties13);
        java.lang.Object obj16 = properties12.put((java.lang.Object) properties14, (java.lang.Object) (short) 1);
        properties14.clear();
        int int18 = properties14.size();
        java.util.Properties properties19 = new java.util.Properties(properties14);
        java.util.Properties properties20 = null;
        java.util.Properties properties21 = new java.util.Properties(properties20);
        java.util.Properties properties22 = new java.util.Properties(properties20);
        java.util.Properties properties23 = null;
        java.util.Properties properties24 = new java.util.Properties(properties23);
        java.lang.Object obj26 = properties22.put((java.lang.Object) properties24, (java.lang.Object) (short) 1);
        properties24.clear();
        java.lang.String str29 = properties24.getProperty("");
        java.util.Properties properties30 = null;
        java.util.Properties properties31 = new java.util.Properties(properties30);
        java.util.Properties properties32 = new java.util.Properties(properties30);
        java.util.Properties properties33 = null;
        java.util.Properties properties34 = new java.util.Properties(properties33);
        java.lang.Object obj36 = properties32.put((java.lang.Object) properties34, (java.lang.Object) (short) 1);
        properties24.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties32);
        java.lang.Object obj38 = properties4.put((java.lang.Object) properties14, (java.lang.Object) properties32);
        java.util.Properties properties39 = null;
        java.util.Properties properties40 = new java.util.Properties(properties39);
        java.util.Properties properties41 = new java.util.Properties(properties39);
        java.util.Properties properties42 = null;
        java.util.Properties properties43 = new java.util.Properties(properties42);
        java.lang.Object obj45 = properties41.put((java.lang.Object) properties43, (java.lang.Object) (short) 1);
        java.util.Properties properties47 = null;
        java.util.Properties properties48 = new java.util.Properties(properties47);
        java.util.Properties properties49 = new java.util.Properties(properties47);
        java.util.Properties properties50 = null;
        java.util.Properties properties51 = new java.util.Properties(properties50);
        java.lang.Object obj53 = properties49.put((java.lang.Object) properties51, (java.lang.Object) (short) 1);
        boolean boolean54 = properties43.remove((java.lang.Object) false, (java.lang.Object) (short) 1);
        java.util.Set<java.lang.String> strSet55 = properties43.stringPropertyNames();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties56 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties56.setDefaultJtaTimeout((long) (byte) 10);
        atomikosProperties56.setCheckpointInterval((long) (byte) 0);
        atomikosProperties56.setTransactionManagerUniqueName("");
        boolean boolean63 = atomikosProperties56.isEnableLogging();
        atomikosProperties56.setSerialJtaTransactions(false);
        atomikosProperties56.setLogBaseDir("");
        java.util.Properties properties68 = null;
        java.util.Properties properties69 = new java.util.Properties(properties68);
        java.util.Properties properties70 = new java.util.Properties(properties68);
        java.util.Properties properties71 = null;
        java.util.Properties properties72 = new java.util.Properties(properties71);
        java.lang.Object obj74 = properties70.put((java.lang.Object) properties72, (java.lang.Object) (short) 1);
        java.util.Properties properties75 = new java.util.Properties(properties72);
        boolean boolean76 = properties43.remove((java.lang.Object) "", (java.lang.Object) properties75);
        java.util.Properties properties77 = null;
        java.util.Properties properties78 = new java.util.Properties(properties77);
        java.util.Properties properties79 = new java.util.Properties(properties77);
        java.lang.Object obj80 = properties79.clone();
        boolean boolean81 = properties43.contains(obj80);
        java.util.Collection<java.lang.Object> objCollection82 = properties43.values();
        java.lang.String str84 = properties43.getProperty("{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=0, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.tm_unique_name=, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
        java.lang.Object obj85 = properties43.clone();
        boolean boolean86 = properties14.containsValue((java.lang.Object) properties43);
        java.util.Properties properties87 = new java.util.Properties(properties43);
        org.junit.Assert.assertNull(obj6);
        org.junit.Assert.assertNotNull(objEnumeration7);
        org.junit.Assert.assertNotNull(objEntrySet8);
        org.junit.Assert.assertNotNull(objSet9);
        org.junit.Assert.assertNull(obj16);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 0 + "'", int18 == 0);
        org.junit.Assert.assertNull(obj26);
        org.junit.Assert.assertNull(str29);
        org.junit.Assert.assertNull(obj36);
        org.junit.Assert.assertNull(obj38);
        org.junit.Assert.assertNull(obj45);
        org.junit.Assert.assertNull(obj53);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertNotNull(strSet55);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertNull(obj74);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
        org.junit.Assert.assertNotNull(obj80);
        org.junit.Assert.assertEquals(obj80.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj80), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj80), "{}");
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + false + "'", boolean81 == false);
        org.junit.Assert.assertNotNull(objCollection82);
        org.junit.Assert.assertNull(str84);
        org.junit.Assert.assertNotNull(obj85);
        org.junit.Assert.assertEquals(obj85.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj85), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj85), "{}");
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + false + "'", boolean86 == false);
    }

    @Test
    public void test1029() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1029");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Properties properties2 = new java.util.Properties(properties0);
        boolean boolean4 = properties2.containsValue((java.lang.Object) (short) 100);
        java.util.Properties properties5 = null;
        java.util.Properties properties6 = new java.util.Properties(properties5);
        java.util.Properties properties7 = new java.util.Properties(properties5);
        java.util.Properties properties8 = null;
        java.util.Properties properties9 = new java.util.Properties(properties8);
        java.lang.Object obj11 = properties7.put((java.lang.Object) properties9, (java.lang.Object) (short) 1);
        java.util.Enumeration<java.lang.Object> objEnumeration12 = properties9.elements();
        java.lang.Object obj13 = properties2.remove((java.lang.Object) properties9);
        java.lang.Object obj16 = properties9.setProperty("", "");
        java.lang.String str18 = properties9.getProperty("tmlog");
        java.util.Properties properties19 = new java.util.Properties(properties9);
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet20 = properties9.entrySet();
        java.io.Reader reader21 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties9.load(reader21);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNull(obj11);
        org.junit.Assert.assertNotNull(objEnumeration12);
        org.junit.Assert.assertNull(obj13);
        org.junit.Assert.assertNull(obj16);
        org.junit.Assert.assertNull(str18);
        org.junit.Assert.assertNotNull(objEntrySet20);
    }

    @Test
    public void test1030() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1030");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setDefaultJtaTimeout((long) (byte) 10);
        long long3 = atomikosProperties0.getDefaultJtaTimeout();
        atomikosProperties0.setTransactionManagerUniqueName("");
        java.lang.String str6 = atomikosProperties0.getTransactionManagerUniqueName();
        java.lang.Class<?> wildcardClass7 = atomikosProperties0.getClass();
        org.junit.Assert.assertTrue("'" + long3 + "' != '" + 10L + "'", long3 == 10L);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertNotNull(wildcardClass7);
    }

    @Test
    public void test1031() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1031");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Properties properties2 = new java.util.Properties(properties0);
        java.util.Properties properties3 = null;
        java.util.Properties properties4 = new java.util.Properties(properties3);
        java.lang.Object obj6 = properties2.put((java.lang.Object) properties4, (java.lang.Object) (short) 1);
        properties4.clear();
        int int8 = properties4.size();
        java.util.Properties properties9 = new java.util.Properties(properties4);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties10 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        int int11 = atomikosProperties10.getMaxActives();
        long long12 = atomikosProperties10.getMaxTimeout();
        java.util.Properties properties13 = atomikosProperties10.asProperties();
        java.util.Properties properties14 = atomikosProperties10.asProperties();
        java.util.Properties properties15 = null;
        java.util.Properties properties16 = new java.util.Properties(properties15);
        java.util.Properties properties17 = new java.util.Properties(properties15);
        java.util.Properties properties18 = null;
        java.util.Properties properties19 = new java.util.Properties(properties18);
        java.lang.Object obj21 = properties17.put((java.lang.Object) properties19, (java.lang.Object) (short) 1);
        java.util.Enumeration<java.lang.Object> objEnumeration22 = properties19.elements();
        java.lang.Object obj23 = properties4.replace((java.lang.Object) atomikosProperties10, (java.lang.Object) properties19);
        java.util.Set<java.lang.String> strSet24 = properties4.stringPropertyNames();
        properties4.clear();
        java.util.Properties properties26 = new java.util.Properties(properties4);
        java.lang.String str27 = properties4.toString();
        java.util.Properties properties28 = null;
        java.util.Properties properties29 = new java.util.Properties(properties28);
        java.util.Properties properties30 = new java.util.Properties(properties28);
        java.util.Properties properties31 = null;
        java.util.Properties properties32 = new java.util.Properties(properties31);
        java.lang.Object obj34 = properties30.put((java.lang.Object) properties32, (java.lang.Object) (short) 1);
        boolean boolean35 = properties30.isEmpty();
        java.util.Properties properties36 = null;
        java.util.Properties properties37 = new java.util.Properties(properties36);
        java.util.Properties properties38 = new java.util.Properties(properties36);
        boolean boolean39 = properties30.containsKey((java.lang.Object) properties38);
        java.util.Properties properties40 = new java.util.Properties(properties38);
        boolean boolean41 = properties4.containsKey((java.lang.Object) properties38);
        java.io.Reader reader42 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties38.load(reader42);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(obj6);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 50 + "'", int11 == 50);
        org.junit.Assert.assertTrue("'" + long12 + "' != '" + 300000L + "'", long12 == 300000L);
        org.junit.Assert.assertNotNull(properties13);
        org.junit.Assert.assertNotNull(properties14);
        org.junit.Assert.assertNull(obj21);
        org.junit.Assert.assertNotNull(objEnumeration22);
        org.junit.Assert.assertNull(obj23);
        org.junit.Assert.assertNotNull(strSet24);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "{}" + "'", str27, "{}");
        org.junit.Assert.assertNull(obj34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
    }

    @Test
    public void test1032() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1032");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Properties properties2 = new java.util.Properties(properties0);
        java.util.Properties properties3 = null;
        java.util.Properties properties4 = new java.util.Properties(properties3);
        java.lang.Object obj6 = properties2.put((java.lang.Object) properties4, (java.lang.Object) (short) 1);
        java.util.Properties properties7 = new java.util.Properties(properties4);
        java.util.Properties properties8 = new java.util.Properties(properties4);
        java.util.Set<java.lang.Object> objSet9 = properties8.keySet();
        java.util.Properties properties10 = new java.util.Properties(properties8);
        java.util.Properties properties11 = new java.util.Properties(properties8);
        java.util.Properties properties12 = null;
        java.util.Properties properties13 = new java.util.Properties(properties12);
        java.util.Properties properties14 = new java.util.Properties(properties12);
        java.util.Properties properties15 = null;
        java.util.Properties properties16 = new java.util.Properties(properties15);
        java.lang.Object obj18 = properties14.put((java.lang.Object) properties16, (java.lang.Object) (short) 1);
        boolean boolean19 = properties14.isEmpty();
        java.util.Properties properties20 = null;
        java.util.Properties properties21 = new java.util.Properties(properties20);
        java.util.Properties properties22 = new java.util.Properties(properties20);
        boolean boolean23 = properties14.containsKey((java.lang.Object) properties22);
        java.util.Properties properties24 = new java.util.Properties(properties22);
        java.util.Properties properties25 = new java.util.Properties(properties24);
        java.util.Properties properties26 = null;
        java.util.Properties properties27 = new java.util.Properties(properties26);
        java.util.Properties properties28 = new java.util.Properties(properties26);
        java.util.Properties properties29 = null;
        java.util.Properties properties30 = new java.util.Properties(properties29);
        java.lang.Object obj32 = properties28.put((java.lang.Object) properties30, (java.lang.Object) (short) 1);
        properties30.clear();
        int int34 = properties30.size();
        java.util.Properties properties35 = new java.util.Properties(properties30);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties36 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        int int37 = atomikosProperties36.getMaxActives();
        long long38 = atomikosProperties36.getMaxTimeout();
        java.util.Properties properties39 = atomikosProperties36.asProperties();
        java.util.Properties properties40 = atomikosProperties36.asProperties();
        java.util.Properties properties41 = null;
        java.util.Properties properties42 = new java.util.Properties(properties41);
        java.util.Properties properties43 = new java.util.Properties(properties41);
        java.util.Properties properties44 = null;
        java.util.Properties properties45 = new java.util.Properties(properties44);
        java.lang.Object obj47 = properties43.put((java.lang.Object) properties45, (java.lang.Object) (short) 1);
        java.util.Enumeration<java.lang.Object> objEnumeration48 = properties45.elements();
        java.lang.Object obj49 = properties30.replace((java.lang.Object) atomikosProperties36, (java.lang.Object) properties45);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties51 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties51.setThreadedTwoPhaseCommit(true);
        java.lang.String str54 = atomikosProperties51.getService();
        boolean boolean55 = atomikosProperties51.isSerialJtaTransactions();
        java.lang.Object obj56 = properties45.getOrDefault((java.lang.Object) "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.tm_unique_name=, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}", (java.lang.Object) atomikosProperties51);
        boolean boolean57 = properties24.equals((java.lang.Object) properties45);
        properties8.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties24);
        java.util.Enumeration<java.lang.Object> objEnumeration59 = properties24.elements();
        properties24.clear();
        java.util.Enumeration<java.lang.Object> objEnumeration61 = properties24.elements();
        java.lang.String str64 = properties24.getProperty("{tmlog={com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=0, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.tm_unique_name=, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}, 4=true}", "{tmlog={com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=0, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.tm_unique_name=, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}, 4=true}");
        org.junit.Assert.assertNull(obj6);
        org.junit.Assert.assertNotNull(objSet9);
        org.junit.Assert.assertNull(obj18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNull(obj32);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 0 + "'", int34 == 0);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 50 + "'", int37 == 50);
        org.junit.Assert.assertTrue("'" + long38 + "' != '" + 300000L + "'", long38 == 300000L);
        org.junit.Assert.assertNotNull(properties39);
        org.junit.Assert.assertNotNull(properties40);
        org.junit.Assert.assertNull(obj47);
        org.junit.Assert.assertNotNull(objEnumeration48);
        org.junit.Assert.assertNull(obj49);
        org.junit.Assert.assertNull(str54);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertNotNull(obj56);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertNotNull(objEnumeration59);
        org.junit.Assert.assertNotNull(objEnumeration61);
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "{tmlog={com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=0, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.tm_unique_name=, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}, 4=true}" + "'", str64, "{tmlog={com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=0, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.tm_unique_name=, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}, 4=true}");
    }

    @Test
    public void test1033() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1033");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Properties properties2 = new java.util.Properties(properties0);
        java.util.Properties properties3 = null;
        java.util.Properties properties4 = new java.util.Properties(properties3);
        java.lang.Object obj6 = properties2.put((java.lang.Object) properties4, (java.lang.Object) (short) 1);
        boolean boolean7 = properties2.isEmpty();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties8 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties8.setDefaultJtaTimeout((long) (byte) 10);
        atomikosProperties8.setCheckpointInterval((long) (byte) 0);
        atomikosProperties8.setTransactionManagerUniqueName("");
        java.util.Properties properties15 = atomikosProperties8.asProperties();
        java.lang.Object obj16 = properties2.remove((java.lang.Object) properties15);
        java.util.Set<java.lang.String> strSet17 = properties15.stringPropertyNames();
        properties15.clear();
        java.util.Set<java.lang.String> strSet19 = properties15.stringPropertyNames();
        java.io.InputStream inputStream20 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties15.loadFromXML(inputStream20);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(obj6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(properties15);
        org.junit.Assert.assertNull(obj16);
        org.junit.Assert.assertNotNull(strSet17);
        org.junit.Assert.assertNotNull(strSet19);
    }

    @Test
    public void test1034() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1034");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setDefaultJtaTimeout((long) (byte) 10);
        long long3 = atomikosProperties0.getDefaultJtaTimeout();
        atomikosProperties0.setTransactionManagerUniqueName("");
        boolean boolean6 = atomikosProperties0.isEnableLogging();
        java.lang.String str7 = atomikosProperties0.getLogBaseDir();
        java.util.Properties properties8 = atomikosProperties0.asProperties();
        boolean boolean9 = properties8.isEmpty();
        java.io.InputStream inputStream10 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties8.loadFromXML(inputStream10);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + long3 + "' != '" + 10L + "'", long3 == 10L);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNotNull(properties8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
    }

    @Test
    public void test1035() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1035");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Properties properties2 = new java.util.Properties(properties0);
        java.util.Properties properties3 = null;
        java.util.Properties properties4 = new java.util.Properties(properties3);
        java.lang.Object obj6 = properties2.put((java.lang.Object) properties4, (java.lang.Object) (short) 1);
        boolean boolean7 = properties2.isEmpty();
        java.util.Properties properties8 = null;
        java.util.Properties properties9 = new java.util.Properties(properties8);
        java.util.Properties properties10 = new java.util.Properties(properties8);
        boolean boolean11 = properties2.containsKey((java.lang.Object) properties10);
        java.util.Properties properties12 = null;
        java.util.Properties properties13 = new java.util.Properties(properties12);
        java.util.Properties properties14 = new java.util.Properties(properties12);
        java.util.Properties properties15 = null;
        java.util.Properties properties16 = new java.util.Properties(properties15);
        java.lang.Object obj18 = properties14.put((java.lang.Object) properties16, (java.lang.Object) (short) 1);
        java.util.Properties properties20 = null;
        java.util.Properties properties21 = new java.util.Properties(properties20);
        java.util.Properties properties22 = new java.util.Properties(properties20);
        java.util.Properties properties23 = null;
        java.util.Properties properties24 = new java.util.Properties(properties23);
        java.lang.Object obj26 = properties22.put((java.lang.Object) properties24, (java.lang.Object) (short) 1);
        boolean boolean27 = properties16.remove((java.lang.Object) false, (java.lang.Object) (short) 1);
        java.util.Set<java.lang.String> strSet28 = properties16.stringPropertyNames();
        boolean boolean29 = properties10.containsKey((java.lang.Object) strSet28);
        java.util.Properties properties30 = null;
        java.util.Properties properties31 = new java.util.Properties(properties30);
        java.util.Properties properties32 = new java.util.Properties(properties30);
        java.util.Properties properties33 = null;
        java.util.Properties properties34 = new java.util.Properties(properties33);
        java.lang.Object obj36 = properties32.put((java.lang.Object) properties34, (java.lang.Object) (short) 1);
        properties34.clear();
        java.lang.String str39 = properties34.getProperty("");
        java.util.Properties properties40 = null;
        java.util.Properties properties41 = new java.util.Properties(properties40);
        java.util.Properties properties42 = new java.util.Properties(properties40);
        java.util.Properties properties43 = null;
        java.util.Properties properties44 = new java.util.Properties(properties43);
        java.lang.Object obj46 = properties42.put((java.lang.Object) properties44, (java.lang.Object) (short) 1);
        properties34.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties42);
        boolean boolean48 = properties10.containsKey((java.lang.Object) properties34);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties50 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties50.setThreadedTwoPhaseCommit(true);
        boolean boolean53 = atomikosProperties50.isEnableLogging();
        java.lang.Object obj54 = properties10.put((java.lang.Object) '4', (java.lang.Object) boolean53);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties56 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties56.setDefaultJtaTimeout((long) (byte) 10);
        atomikosProperties56.setCheckpointInterval((long) (byte) 0);
        atomikosProperties56.setTransactionManagerUniqueName("");
        java.util.Properties properties63 = atomikosProperties56.asProperties();
        atomikosProperties56.setDefaultJtaTimeout((long) 'a');
        boolean boolean66 = atomikosProperties56.isEnableLogging();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties67 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties67.setDefaultJtaTimeout((long) (byte) 10);
        long long70 = atomikosProperties67.getDefaultJtaTimeout();
        atomikosProperties67.setTransactionManagerUniqueName("");
        boolean boolean73 = atomikosProperties67.isEnableLogging();
        java.lang.String str74 = atomikosProperties67.getLogBaseDir();
        java.util.Properties properties75 = atomikosProperties67.asProperties();
        java.lang.String str76 = properties75.toString();
        java.util.Properties properties77 = null;
        java.util.Properties properties78 = new java.util.Properties(properties77);
        java.util.Properties properties79 = new java.util.Properties(properties77);
        java.util.Properties properties80 = null;
        java.util.Properties properties81 = new java.util.Properties(properties80);
        java.lang.Object obj83 = properties79.put((java.lang.Object) properties81, (java.lang.Object) (short) 1);
        java.util.Properties properties85 = null;
        java.util.Properties properties86 = new java.util.Properties(properties85);
        java.util.Properties properties87 = new java.util.Properties(properties85);
        java.util.Properties properties88 = null;
        java.util.Properties properties89 = new java.util.Properties(properties88);
        java.lang.Object obj91 = properties87.put((java.lang.Object) properties89, (java.lang.Object) (short) 1);
        boolean boolean92 = properties81.remove((java.lang.Object) false, (java.lang.Object) (short) 1);
        java.util.Set<java.lang.String> strSet93 = properties81.stringPropertyNames();
        java.lang.Object obj94 = properties81.clone();
        properties75.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties81);
        boolean boolean96 = properties10.replace((java.lang.Object) "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.tm_unique_name=, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}", (java.lang.Object) atomikosProperties56, (java.lang.Object) properties81);
        java.io.InputStream inputStream97 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties81.load(inputStream97);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(obj6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNull(obj18);
        org.junit.Assert.assertNull(obj26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(strSet28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNull(obj36);
        org.junit.Assert.assertNull(str39);
        org.junit.Assert.assertNull(obj46);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertNull(obj54);
        org.junit.Assert.assertNotNull(properties63);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66 == true);
        org.junit.Assert.assertTrue("'" + long70 + "' != '" + 10L + "'", long70 == 10L);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + true + "'", boolean73 == true);
        org.junit.Assert.assertNull(str74);
        org.junit.Assert.assertNotNull(properties75);
// flaky:         org.junit.Assert.assertEquals("'" + str76 + "' != '" + "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.tm_unique_name=, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}" + "'", str76, "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.tm_unique_name=, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
        org.junit.Assert.assertNull(obj83);
        org.junit.Assert.assertNull(obj91);
        org.junit.Assert.assertTrue("'" + boolean92 + "' != '" + false + "'", boolean92 == false);
        org.junit.Assert.assertNotNull(strSet93);
        org.junit.Assert.assertNotNull(obj94);
        org.junit.Assert.assertEquals(obj94.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj94), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj94), "{}");
        org.junit.Assert.assertTrue("'" + boolean96 + "' != '" + false + "'", boolean96 == false);
    }

    @Test
    public void test1036() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1036");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Properties properties2 = new java.util.Properties(properties0);
        java.util.Properties properties3 = null;
        java.util.Properties properties4 = new java.util.Properties(properties3);
        java.lang.Object obj6 = properties2.put((java.lang.Object) properties4, (java.lang.Object) (short) 1);
        boolean boolean7 = properties2.isEmpty();
        properties2.clear();
        java.util.Properties properties9 = new java.util.Properties(properties2);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties10 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties10.setDefaultJtaTimeout((long) (byte) 10);
        long long13 = atomikosProperties10.getDefaultJtaTimeout();
        atomikosProperties10.setTransactionManagerUniqueName("hi!");
        atomikosProperties10.setLogBaseName("tmlog");
        atomikosProperties10.setCheckpointInterval(300000L);
        boolean boolean20 = properties2.containsKey((java.lang.Object) 300000L);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties21 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties21.setDefaultJtaTimeout((long) (byte) 10);
        atomikosProperties21.setCheckpointInterval((long) (byte) 0);
        atomikosProperties21.setTransactionManagerUniqueName("");
        java.util.Properties properties28 = atomikosProperties21.asProperties();
        java.lang.String str29 = atomikosProperties21.getTransactionManagerUniqueName();
        atomikosProperties21.setDefaultJtaTimeout((long) (-1));
        java.lang.Object obj32 = properties2.get((java.lang.Object) (-1));
        java.io.InputStream inputStream33 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties2.loadFromXML(inputStream33);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(obj6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + long13 + "' != '" + 10L + "'", long13 == 10L);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(properties28);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "" + "'", str29, "");
        org.junit.Assert.assertNull(obj32);
    }

    @Test
    public void test1037() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1037");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setDefaultJtaTimeout((long) (byte) 10);
        atomikosProperties0.setCheckpointInterval((long) (byte) 0);
        atomikosProperties0.setTransactionManagerUniqueName("");
        boolean boolean7 = atomikosProperties0.isEnableLogging();
        java.util.Properties properties8 = atomikosProperties0.asProperties();
        java.util.Properties properties9 = new java.util.Properties(properties8);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties10 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties10.setDefaultJtaTimeout((long) (byte) 10);
        atomikosProperties10.setSerialJtaTransactions(false);
        atomikosProperties10.setMaxTimeout((long) (short) -1);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties17 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties17.setDefaultJtaTimeout((long) (byte) 10);
        atomikosProperties17.setCheckpointInterval((long) (byte) 0);
        atomikosProperties17.setTransactionManagerUniqueName("");
        java.util.Properties properties24 = atomikosProperties17.asProperties();
        java.lang.String str25 = atomikosProperties17.getLogBaseName();
        java.util.Properties properties26 = atomikosProperties17.asProperties();
        java.lang.Object obj27 = properties8.getOrDefault((java.lang.Object) (short) -1, (java.lang.Object) atomikosProperties17);
        java.util.Properties properties28 = atomikosProperties17.asProperties();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet29 = properties28.entrySet();
        java.util.Properties properties30 = null;
        java.util.Properties properties31 = new java.util.Properties(properties30);
        java.util.Properties properties32 = new java.util.Properties(properties30);
        java.util.Properties properties33 = null;
        java.util.Properties properties34 = new java.util.Properties(properties33);
        java.lang.Object obj36 = properties32.put((java.lang.Object) properties34, (java.lang.Object) (short) 1);
        properties34.clear();
        int int38 = properties34.size();
        java.lang.Object obj41 = properties34.setProperty("hi!", "hi!");
        java.lang.Object obj44 = properties34.setProperty("tmlog", "tmlog");
        java.util.Enumeration<java.lang.Object> objEnumeration45 = properties34.elements();
        java.util.Properties properties46 = new java.util.Properties(properties34);
        java.util.Properties properties47 = null;
        java.util.Properties properties48 = new java.util.Properties(properties47);
        java.util.Properties properties49 = new java.util.Properties(properties47);
        java.util.Properties properties50 = null;
        java.util.Properties properties51 = new java.util.Properties(properties50);
        java.lang.Object obj53 = properties49.put((java.lang.Object) properties51, (java.lang.Object) (short) 1);
        boolean boolean54 = properties49.isEmpty();
        java.util.Properties properties55 = null;
        java.util.Properties properties56 = new java.util.Properties(properties55);
        java.util.Properties properties57 = new java.util.Properties(properties55);
        boolean boolean58 = properties49.containsKey((java.lang.Object) properties57);
        java.util.Properties properties59 = new java.util.Properties(properties57);
        java.lang.Object obj60 = properties59.clone();
        java.util.Set<java.lang.String> strSet61 = properties59.stringPropertyNames();
        boolean boolean62 = properties34.containsValue((java.lang.Object) properties59);
        java.util.Properties properties63 = null;
        java.util.Properties properties64 = new java.util.Properties(properties63);
        java.util.Properties properties65 = new java.util.Properties(properties63);
        java.util.Properties properties66 = null;
        java.util.Properties properties67 = new java.util.Properties(properties66);
        java.lang.Object obj69 = properties65.put((java.lang.Object) properties67, (java.lang.Object) (short) 1);
        java.util.Properties properties70 = new java.util.Properties(properties67);
        int int71 = properties67.size();
        java.lang.Object obj72 = properties28.put((java.lang.Object) properties34, (java.lang.Object) properties67);
        java.util.Enumeration<java.lang.Object> objEnumeration73 = properties28.keys();
        java.io.OutputStream outputStream74 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties28.storeToXML(outputStream74, "{tmlog={com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=0, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.tm_unique_name=, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}, 4=true}", "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.tm_unique_name=, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(properties8);
        org.junit.Assert.assertNotNull(properties24);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "tmlog" + "'", str25, "tmlog");
        org.junit.Assert.assertNotNull(properties26);
        org.junit.Assert.assertNotNull(obj27);
        org.junit.Assert.assertNotNull(properties28);
        org.junit.Assert.assertNotNull(objEntrySet29);
        org.junit.Assert.assertNull(obj36);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 0 + "'", int38 == 0);
        org.junit.Assert.assertNull(obj41);
        org.junit.Assert.assertNull(obj44);
        org.junit.Assert.assertNotNull(objEnumeration45);
        org.junit.Assert.assertNull(obj53);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertNotNull(obj60);
        org.junit.Assert.assertEquals(obj60.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj60), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj60), "{}");
        org.junit.Assert.assertNotNull(strSet61);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertNull(obj69);
        org.junit.Assert.assertTrue("'" + int71 + "' != '" + 0 + "'", int71 == 0);
        org.junit.Assert.assertNull(obj72);
        org.junit.Assert.assertNotNull(objEnumeration73);
    }

    @Test
    public void test1038() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1038");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setThreadedTwoPhaseCommit(true);
        atomikosProperties0.setMaxActives((int) (byte) 0);
        atomikosProperties0.setEnableLogging(true);
        atomikosProperties0.setForceShutdownOnVmExit(false);
        boolean boolean9 = atomikosProperties0.isThreadedTwoPhaseCommit();
        atomikosProperties0.setForceShutdownOnVmExit(false);
        atomikosProperties0.setEnableLogging(false);
        java.util.Properties properties14 = atomikosProperties0.asProperties();
        atomikosProperties0.setLogBaseDir("{}");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertNotNull(properties14);
    }

    @Test
    public void test1039() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1039");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Properties properties2 = new java.util.Properties(properties0);
        boolean boolean4 = properties2.containsValue((java.lang.Object) (short) 100);
        java.util.Properties properties5 = new java.util.Properties(properties2);
        java.lang.String str7 = properties5.getProperty("hi!");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties8 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties8.setDefaultJtaTimeout((long) (byte) 10);
        long long11 = atomikosProperties8.getDefaultJtaTimeout();
        atomikosProperties8.setTransactionManagerUniqueName("hi!");
        atomikosProperties8.setLogBaseName("tmlog");
        boolean boolean16 = atomikosProperties8.isSerialJtaTransactions();
        java.util.Properties properties17 = atomikosProperties8.asProperties();
        boolean boolean18 = properties5.equals((java.lang.Object) atomikosProperties8);
        java.lang.String str21 = properties5.getProperty("{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=52, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.tm_unique_name=, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}", "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=52, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.tm_unique_name=, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertTrue("'" + long11 + "' != '" + 10L + "'", long11 == 10L);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(properties17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=52, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.tm_unique_name=, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}" + "'", str21, "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=52, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.tm_unique_name=, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
    }

    @Test
    public void test1040() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1040");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setDefaultJtaTimeout((long) (byte) 10);
        atomikosProperties0.setCheckpointInterval((long) (byte) 0);
        atomikosProperties0.setTransactionManagerUniqueName("");
        java.util.Properties properties7 = atomikosProperties0.asProperties();
        java.lang.String str8 = atomikosProperties0.getLogBaseName();
        atomikosProperties0.setCheckpointInterval(100L);
        atomikosProperties0.setLogBaseName("");
        java.util.Properties properties13 = atomikosProperties0.asProperties();
        java.lang.String str14 = atomikosProperties0.getService();
        atomikosProperties0.setLogBaseName("");
        java.lang.String str17 = atomikosProperties0.getService();
        atomikosProperties0.setMaxTimeout((long) (short) 1);
        org.junit.Assert.assertNotNull(properties7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "tmlog" + "'", str8, "tmlog");
        org.junit.Assert.assertNotNull(properties13);
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertNull(str17);
    }

    @Test
    public void test1041() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1041");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Properties properties2 = new java.util.Properties(properties0);
        java.util.Properties properties3 = null;
        java.util.Properties properties4 = new java.util.Properties(properties3);
        java.lang.Object obj6 = properties2.put((java.lang.Object) properties4, (java.lang.Object) (short) 1);
        java.util.Properties properties8 = null;
        java.util.Properties properties9 = new java.util.Properties(properties8);
        java.util.Properties properties10 = new java.util.Properties(properties8);
        java.util.Properties properties11 = null;
        java.util.Properties properties12 = new java.util.Properties(properties11);
        java.lang.Object obj14 = properties10.put((java.lang.Object) properties12, (java.lang.Object) (short) 1);
        boolean boolean15 = properties4.remove((java.lang.Object) false, (java.lang.Object) (short) 1);
        java.util.Set<java.lang.String> strSet16 = properties4.stringPropertyNames();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties17 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties17.setDefaultJtaTimeout((long) (byte) 10);
        long long20 = atomikosProperties17.getDefaultJtaTimeout();
        java.lang.Object obj21 = properties4.get((java.lang.Object) atomikosProperties17);
        java.util.Properties properties22 = null;
        java.util.Properties properties23 = new java.util.Properties(properties22);
        java.util.Properties properties24 = new java.util.Properties(properties22);
        java.util.Properties properties25 = null;
        java.util.Properties properties26 = new java.util.Properties(properties25);
        java.lang.Object obj28 = properties24.put((java.lang.Object) properties26, (java.lang.Object) (short) 1);
        java.util.Properties properties30 = null;
        java.util.Properties properties31 = new java.util.Properties(properties30);
        java.util.Properties properties32 = new java.util.Properties(properties30);
        java.util.Properties properties33 = null;
        java.util.Properties properties34 = new java.util.Properties(properties33);
        java.lang.Object obj36 = properties32.put((java.lang.Object) properties34, (java.lang.Object) (short) 1);
        boolean boolean37 = properties26.remove((java.lang.Object) false, (java.lang.Object) (short) 1);
        java.lang.Object obj39 = properties26.remove((java.lang.Object) '#');
        java.util.Set<java.lang.Object> objSet40 = properties26.keySet();
        boolean boolean41 = properties4.containsKey((java.lang.Object) properties26);
        java.util.Enumeration<java.lang.Object> objEnumeration42 = properties26.keys();
        java.util.Properties properties43 = new java.util.Properties(properties26);
        boolean boolean44 = properties26.isEmpty();
        java.io.OutputStream outputStream45 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties26.store(outputStream45, "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=0, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.tm_unique_name=, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(obj6);
        org.junit.Assert.assertNull(obj14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(strSet16);
        org.junit.Assert.assertTrue("'" + long20 + "' != '" + 10L + "'", long20 == 10L);
        org.junit.Assert.assertNull(obj21);
        org.junit.Assert.assertNull(obj28);
        org.junit.Assert.assertNull(obj36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNull(obj39);
        org.junit.Assert.assertNotNull(objSet40);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(objEnumeration42);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
    }

    @Test
    public void test1042() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1042");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Properties properties2 = new java.util.Properties(properties0);
        java.util.Properties properties3 = null;
        java.util.Properties properties4 = new java.util.Properties(properties3);
        java.lang.Object obj6 = properties2.put((java.lang.Object) properties4, (java.lang.Object) (short) 1);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties7 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties7.setThreadedTwoPhaseCommit(true);
        atomikosProperties7.setMaxActives((int) (byte) 0);
        boolean boolean12 = properties2.containsValue((java.lang.Object) atomikosProperties7);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties13 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties13.setDefaultJtaTimeout((long) (byte) 10);
        atomikosProperties13.setSerialJtaTransactions(false);
        boolean boolean18 = properties2.containsValue((java.lang.Object) atomikosProperties13);
        atomikosProperties13.setForceShutdownOnVmExit(true);
        long long21 = atomikosProperties13.getMaxTimeout();
        org.junit.Assert.assertNull(obj6);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + long21 + "' != '" + 300000L + "'", long21 == 300000L);
    }

    @Test
    public void test1043() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1043");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setDefaultJtaTimeout((long) (byte) 10);
        atomikosProperties0.setCheckpointInterval((long) (byte) 0);
        atomikosProperties0.setTransactionManagerUniqueName("");
        java.util.Properties properties7 = atomikosProperties0.asProperties();
        atomikosProperties0.setDefaultJtaTimeout((long) 'a');
        boolean boolean10 = atomikosProperties0.isEnableLogging();
        int int11 = atomikosProperties0.getMaxActives();
        boolean boolean12 = atomikosProperties0.isSerialJtaTransactions();
        org.junit.Assert.assertNotNull(properties7);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 50 + "'", int11 == 50);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
    }

    @Test
    public void test1044() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1044");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setDefaultJtaTimeout((long) (byte) 10);
        long long3 = atomikosProperties0.getDefaultJtaTimeout();
        atomikosProperties0.setTransactionManagerUniqueName("");
        boolean boolean6 = atomikosProperties0.isEnableLogging();
        java.lang.String str7 = atomikosProperties0.getTransactionManagerUniqueName();
        atomikosProperties0.setSerialJtaTransactions(false);
        java.util.Properties properties10 = atomikosProperties0.asProperties();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet11 = properties10.entrySet();
        java.io.Writer writer12 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties10.store(writer12, "{tmlog={com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=0, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.tm_unique_name=, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}, 4=true}");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + long3 + "' != '" + 10L + "'", long3 == 10L);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertNotNull(properties10);
        org.junit.Assert.assertNotNull(objEntrySet11);
    }

    @Test
    public void test1045() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1045");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Properties properties2 = new java.util.Properties(properties0);
        java.util.Properties properties3 = null;
        java.util.Properties properties4 = new java.util.Properties(properties3);
        java.lang.Object obj6 = properties2.put((java.lang.Object) properties4, (java.lang.Object) (short) 1);
        java.util.Enumeration<java.lang.Object> objEnumeration7 = properties4.elements();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet8 = properties4.entrySet();
        java.util.Set<java.lang.Object> objSet9 = properties4.keySet();
        java.util.Properties properties10 = null;
        java.util.Properties properties11 = new java.util.Properties(properties10);
        java.util.Properties properties12 = new java.util.Properties(properties10);
        java.util.Properties properties13 = null;
        java.util.Properties properties14 = new java.util.Properties(properties13);
        java.lang.Object obj16 = properties12.put((java.lang.Object) properties14, (java.lang.Object) (short) 1);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties17 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties17.setThreadedTwoPhaseCommit(true);
        atomikosProperties17.setMaxActives((int) (byte) 0);
        boolean boolean22 = properties12.containsValue((java.lang.Object) atomikosProperties17);
        atomikosProperties17.setCheckpointInterval((long) 9);
        atomikosProperties17.setEnableLogging(false);
        java.lang.Object obj27 = properties4.get((java.lang.Object) atomikosProperties17);
        java.util.Properties properties28 = new java.util.Properties(properties4);
        java.io.OutputStream outputStream29 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties4.save(outputStream29, "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=0, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=true, com.atomikos.icatch.max_actives=100, com.atomikos.icatch.log_base_name=tmlog}");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(obj6);
        org.junit.Assert.assertNotNull(objEnumeration7);
        org.junit.Assert.assertNotNull(objEntrySet8);
        org.junit.Assert.assertNotNull(objSet9);
        org.junit.Assert.assertNull(obj16);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNull(obj27);
    }

    @Test
    public void test1046() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1046");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Properties properties2 = new java.util.Properties(properties0);
        java.util.Properties properties3 = null;
        java.util.Properties properties4 = new java.util.Properties(properties3);
        java.lang.Object obj6 = properties2.put((java.lang.Object) properties4, (java.lang.Object) (short) 1);
        boolean boolean7 = properties2.isEmpty();
        java.util.Properties properties8 = null;
        java.util.Properties properties9 = new java.util.Properties(properties8);
        java.util.Properties properties10 = new java.util.Properties(properties8);
        boolean boolean11 = properties2.containsKey((java.lang.Object) properties10);
        java.util.Properties properties12 = null;
        java.util.Properties properties13 = new java.util.Properties(properties12);
        java.util.Properties properties14 = new java.util.Properties(properties12);
        java.util.Properties properties15 = null;
        java.util.Properties properties16 = new java.util.Properties(properties15);
        java.lang.Object obj18 = properties14.put((java.lang.Object) properties16, (java.lang.Object) (short) 1);
        java.util.Properties properties20 = null;
        java.util.Properties properties21 = new java.util.Properties(properties20);
        java.util.Properties properties22 = new java.util.Properties(properties20);
        java.util.Properties properties23 = null;
        java.util.Properties properties24 = new java.util.Properties(properties23);
        java.lang.Object obj26 = properties22.put((java.lang.Object) properties24, (java.lang.Object) (short) 1);
        boolean boolean27 = properties16.remove((java.lang.Object) false, (java.lang.Object) (short) 1);
        java.util.Set<java.lang.String> strSet28 = properties16.stringPropertyNames();
        boolean boolean29 = properties10.containsKey((java.lang.Object) strSet28);
        properties10.clear();
        int int31 = properties10.size();
        int int32 = properties10.size();
        properties10.clear();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties34 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties34.setDefaultJtaTimeout((long) (byte) 10);
        atomikosProperties34.setCheckpointInterval((long) (byte) 0);
        atomikosProperties34.setTransactionManagerUniqueName("");
        java.util.Properties properties41 = atomikosProperties34.asProperties();
        atomikosProperties34.setThreadedTwoPhaseCommit(false);
        boolean boolean44 = atomikosProperties34.isSerialJtaTransactions();
        java.lang.String str45 = atomikosProperties34.getService();
        java.util.Properties properties46 = null;
        java.util.Properties properties47 = new java.util.Properties(properties46);
        java.util.Properties properties48 = new java.util.Properties(properties46);
        java.util.Properties properties49 = null;
        java.util.Properties properties50 = new java.util.Properties(properties49);
        java.lang.Object obj52 = properties48.put((java.lang.Object) properties50, (java.lang.Object) (short) 1);
        java.util.Properties properties54 = null;
        java.util.Properties properties55 = new java.util.Properties(properties54);
        java.util.Properties properties56 = new java.util.Properties(properties54);
        java.util.Properties properties57 = null;
        java.util.Properties properties58 = new java.util.Properties(properties57);
        java.lang.Object obj60 = properties56.put((java.lang.Object) properties58, (java.lang.Object) (short) 1);
        boolean boolean61 = properties50.remove((java.lang.Object) false, (java.lang.Object) (short) 1);
        java.util.Enumeration<java.lang.Object> objEnumeration62 = properties50.keys();
        java.util.Properties properties63 = null;
        java.util.Properties properties64 = new java.util.Properties(properties63);
        java.util.Properties properties65 = new java.util.Properties(properties63);
        java.util.Properties properties66 = null;
        java.util.Properties properties67 = new java.util.Properties(properties66);
        java.lang.Object obj69 = properties65.put((java.lang.Object) properties67, (java.lang.Object) (short) 1);
        boolean boolean70 = properties65.isEmpty();
        java.util.Properties properties71 = null;
        java.util.Properties properties72 = new java.util.Properties(properties71);
        java.util.Properties properties73 = new java.util.Properties(properties71);
        boolean boolean74 = properties65.containsKey((java.lang.Object) properties73);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties75 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties75.setThreadedTwoPhaseCommit(true);
        atomikosProperties75.setMaxActives((int) (byte) 0);
        java.lang.Object obj80 = properties50.getOrDefault((java.lang.Object) boolean74, (java.lang.Object) (byte) 0);
        java.util.Set<java.lang.String> strSet81 = properties50.stringPropertyNames();
        java.util.Properties properties82 = null;
        java.util.Properties properties83 = new java.util.Properties(properties82);
        int int84 = properties83.size();
        boolean boolean85 = properties50.contains((java.lang.Object) int84);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj86 = properties10.replace((java.lang.Object) str45, (java.lang.Object) properties50);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(obj6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNull(obj18);
        org.junit.Assert.assertNull(obj26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(strSet28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 0 + "'", int31 == 0);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 0 + "'", int32 == 0);
        org.junit.Assert.assertNotNull(properties41);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertNull(str45);
        org.junit.Assert.assertNull(obj52);
        org.junit.Assert.assertNull(obj60);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertNotNull(objEnumeration62);
        org.junit.Assert.assertNull(obj69);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + true + "'", boolean74 == true);
        org.junit.Assert.assertEquals("'" + obj80 + "' != '" + (byte) 0 + "'", obj80, (byte) 0);
        org.junit.Assert.assertNotNull(strSet81);
        org.junit.Assert.assertTrue("'" + int84 + "' != '" + 0 + "'", int84 == 0);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + false + "'", boolean85 == false);
    }

    @Test
    public void test1047() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1047");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        boolean boolean1 = atomikosProperties0.isForceShutdownOnVmExit();
        java.util.Properties properties2 = atomikosProperties0.asProperties();
        java.util.Properties properties3 = null;
        java.util.Properties properties4 = new java.util.Properties(properties3);
        java.util.Properties properties5 = new java.util.Properties(properties3);
        java.util.Properties properties6 = null;
        java.util.Properties properties7 = new java.util.Properties(properties6);
        java.lang.Object obj9 = properties5.put((java.lang.Object) properties7, (java.lang.Object) (short) 1);
        properties7.clear();
        int int11 = properties7.size();
        java.util.Properties properties12 = null;
        java.util.Properties properties13 = new java.util.Properties(properties12);
        java.util.Properties properties14 = new java.util.Properties(properties12);
        java.util.Properties properties15 = null;
        java.util.Properties properties16 = new java.util.Properties(properties15);
        java.lang.Object obj18 = properties14.put((java.lang.Object) properties16, (java.lang.Object) (short) 1);
        java.util.Properties properties19 = new java.util.Properties(properties16);
        java.util.Properties properties20 = new java.util.Properties(properties16);
        boolean boolean22 = properties7.remove((java.lang.Object) properties16, (java.lang.Object) 10.0f);
        boolean boolean23 = properties2.containsKey((java.lang.Object) 10.0f);
        java.util.Properties properties24 = new java.util.Properties(properties2);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties25 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties25.setDefaultJtaTimeout((long) (byte) 10);
        long long28 = atomikosProperties25.getDefaultJtaTimeout();
        atomikosProperties25.setTransactionManagerUniqueName("hi!");
        atomikosProperties25.setLogBaseName("tmlog");
        boolean boolean33 = atomikosProperties25.isSerialJtaTransactions();
        java.util.Properties properties34 = atomikosProperties25.asProperties();
        java.util.Properties properties35 = null;
        java.util.Properties properties36 = new java.util.Properties(properties35);
        java.util.Properties properties37 = new java.util.Properties(properties35);
        boolean boolean39 = properties37.containsValue((java.lang.Object) (short) 100);
        java.util.Properties properties40 = new java.util.Properties(properties37);
        java.lang.String str42 = properties40.getProperty("hi!");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties43 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties43.setDefaultJtaTimeout((long) (byte) 10);
        long long46 = atomikosProperties43.getDefaultJtaTimeout();
        atomikosProperties43.setTransactionManagerUniqueName("hi!");
        atomikosProperties43.setLogBaseName("tmlog");
        boolean boolean51 = atomikosProperties43.isSerialJtaTransactions();
        java.util.Properties properties52 = atomikosProperties43.asProperties();
        boolean boolean53 = properties40.equals((java.lang.Object) atomikosProperties43);
        java.lang.Object obj54 = properties2.putIfAbsent((java.lang.Object) properties34, (java.lang.Object) properties40);
        int int55 = properties34.size();
        java.io.PrintStream printStream56 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties34.list(printStream56);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertNotNull(properties2);
        org.junit.Assert.assertNull(obj9);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertNull(obj18);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + long28 + "' != '" + 10L + "'", long28 == 10L);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNotNull(properties34);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNull(str42);
        org.junit.Assert.assertTrue("'" + long46 + "' != '" + 10L + "'", long46 == 10L);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertNotNull(properties52);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertNull(obj54);
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + 10 + "'", int55 == 10);
    }

    @Test
    public void test1048() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1048");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setDefaultJtaTimeout((long) (byte) 10);
        atomikosProperties0.setCheckpointInterval((long) (byte) 0);
        atomikosProperties0.setEnableLogging(true);
        boolean boolean7 = atomikosProperties0.isThreadedTwoPhaseCommit();
        java.util.Properties properties8 = atomikosProperties0.asProperties();
        java.io.InputStream inputStream9 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties8.load(inputStream9);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(properties8);
    }

    @Test
    public void test1049() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1049");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Properties properties2 = new java.util.Properties(properties0);
        java.util.Properties properties3 = null;
        java.util.Properties properties4 = new java.util.Properties(properties3);
        java.lang.Object obj6 = properties2.put((java.lang.Object) properties4, (java.lang.Object) (short) 1);
        java.util.Enumeration<java.lang.Object> objEnumeration7 = properties4.elements();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet8 = properties4.entrySet();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties9 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties9.setDefaultJtaTimeout((long) (byte) 10);
        long long12 = atomikosProperties9.getDefaultJtaTimeout();
        atomikosProperties9.setTransactionManagerUniqueName("");
        boolean boolean15 = atomikosProperties9.isEnableLogging();
        boolean boolean16 = properties4.containsKey((java.lang.Object) boolean15);
        java.util.Properties properties17 = null;
        java.util.Properties properties18 = new java.util.Properties(properties17);
        java.util.Properties properties19 = new java.util.Properties(properties17);
        java.util.Properties properties20 = null;
        java.util.Properties properties21 = new java.util.Properties(properties20);
        java.lang.Object obj23 = properties19.put((java.lang.Object) properties21, (java.lang.Object) (short) 1);
        java.util.Enumeration<java.lang.Object> objEnumeration24 = properties21.elements();
        boolean boolean25 = properties4.containsKey((java.lang.Object) objEnumeration24);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties26 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties26.setDefaultJtaTimeout((long) (byte) 10);
        atomikosProperties26.setCheckpointInterval((long) (byte) 0);
        atomikosProperties26.setTransactionManagerUniqueName("");
        java.util.Properties properties33 = atomikosProperties26.asProperties();
        java.lang.String str34 = atomikosProperties26.getTransactionManagerUniqueName();
        atomikosProperties26.setLogBaseDir("{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=0, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.tm_unique_name=, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
        atomikosProperties26.setCheckpointInterval((long) (byte) 0);
        long long39 = atomikosProperties26.getDefaultJtaTimeout();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties40 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties40.setThreadedTwoPhaseCommit(true);
        atomikosProperties40.setMaxActives((int) (byte) 0);
        atomikosProperties40.setEnableLogging(true);
        atomikosProperties40.setForceShutdownOnVmExit(false);
        boolean boolean49 = atomikosProperties40.isThreadedTwoPhaseCommit();
        atomikosProperties40.setForceShutdownOnVmExit(false);
        atomikosProperties40.setMaxActives((int) (short) -1);
        java.lang.Object obj54 = properties4.putIfAbsent((java.lang.Object) long39, (java.lang.Object) (short) -1);
        java.util.Properties properties55 = new java.util.Properties(properties4);
        java.util.Enumeration<java.lang.Object> objEnumeration56 = properties55.keys();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties57 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties57.setDefaultJtaTimeout((long) (byte) 10);
        atomikosProperties57.setCheckpointInterval((long) (byte) 0);
        atomikosProperties57.setTransactionManagerUniqueName("");
        java.util.Properties properties64 = atomikosProperties57.asProperties();
        java.lang.String str65 = atomikosProperties57.getLogBaseName();
        java.util.Properties properties66 = atomikosProperties57.asProperties();
        atomikosProperties57.setEnableLogging(true);
        boolean boolean69 = atomikosProperties57.isSerialJtaTransactions();
        boolean boolean70 = atomikosProperties57.isForceShutdownOnVmExit();
        atomikosProperties57.setCheckpointInterval((long) 1);
        java.lang.String str73 = atomikosProperties57.getService();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties74 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties74.setDefaultJtaTimeout((long) (byte) 10);
        long long77 = atomikosProperties74.getDefaultJtaTimeout();
        atomikosProperties74.setTransactionManagerUniqueName("");
        boolean boolean80 = atomikosProperties74.isEnableLogging();
        atomikosProperties74.setDefaultJtaTimeout((long) '4');
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj83 = properties55.putIfAbsent((java.lang.Object) str73, (java.lang.Object) atomikosProperties74);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(obj6);
        org.junit.Assert.assertNotNull(objEnumeration7);
        org.junit.Assert.assertNotNull(objEntrySet8);
        org.junit.Assert.assertTrue("'" + long12 + "' != '" + 10L + "'", long12 == 10L);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNull(obj23);
        org.junit.Assert.assertNotNull(objEnumeration24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(properties33);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "" + "'", str34, "");
        org.junit.Assert.assertTrue("'" + long39 + "' != '" + 10L + "'", long39 == 10L);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertNull(obj54);
        org.junit.Assert.assertNotNull(objEnumeration56);
        org.junit.Assert.assertNotNull(properties64);
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "tmlog" + "'", str65, "tmlog");
        org.junit.Assert.assertNotNull(properties66);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + true + "'", boolean69 == true);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertNull(str73);
        org.junit.Assert.assertTrue("'" + long77 + "' != '" + 10L + "'", long77 == 10L);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + true + "'", boolean80 == true);
    }

    @Test
    public void test1050() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1050");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Properties properties2 = new java.util.Properties(properties0);
        java.util.Properties properties3 = null;
        java.util.Properties properties4 = new java.util.Properties(properties3);
        java.lang.Object obj6 = properties2.put((java.lang.Object) properties4, (java.lang.Object) (short) 1);
        properties4.clear();
        int int8 = properties4.size();
        java.util.Properties properties9 = null;
        java.util.Properties properties10 = new java.util.Properties(properties9);
        java.util.Properties properties11 = new java.util.Properties(properties9);
        java.util.Properties properties12 = null;
        java.util.Properties properties13 = new java.util.Properties(properties12);
        java.lang.Object obj15 = properties11.put((java.lang.Object) properties13, (java.lang.Object) (short) 1);
        java.util.Properties properties16 = new java.util.Properties(properties13);
        java.util.Properties properties17 = new java.util.Properties(properties13);
        boolean boolean19 = properties4.remove((java.lang.Object) properties13, (java.lang.Object) 10.0f);
        properties4.clear();
        java.lang.String str23 = properties4.getProperty("{=}", "hi!");
        org.junit.Assert.assertNull(obj6);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertNull(obj15);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "hi!" + "'", str23, "hi!");
    }

    @Test
    public void test1051() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1051");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setDefaultJtaTimeout((long) (byte) 10);
        atomikosProperties0.setCheckpointInterval((long) (byte) 0);
        long long5 = atomikosProperties0.getMaxTimeout();
        atomikosProperties0.setSerialJtaTransactions(true);
        atomikosProperties0.setForceShutdownOnVmExit(false);
        java.util.Properties properties10 = atomikosProperties0.asProperties();
        long long11 = atomikosProperties0.getMaxTimeout();
        org.junit.Assert.assertTrue("'" + long5 + "' != '" + 300000L + "'", long5 == 300000L);
        org.junit.Assert.assertNotNull(properties10);
        org.junit.Assert.assertTrue("'" + long11 + "' != '" + 300000L + "'", long11 == 300000L);
    }

    @Test
    public void test1052() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1052");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setDefaultJtaTimeout((long) (byte) 10);
        long long3 = atomikosProperties0.getDefaultJtaTimeout();
        atomikosProperties0.setSerialJtaTransactions(true);
        java.util.Properties properties6 = atomikosProperties0.asProperties();
        java.util.Properties properties7 = atomikosProperties0.asProperties();
        atomikosProperties0.setLogBaseDir("{tmlog={com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=0, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.tm_unique_name=, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}, 4=true}");
        atomikosProperties0.setThreadedTwoPhaseCommit(true);
        org.junit.Assert.assertTrue("'" + long3 + "' != '" + 10L + "'", long3 == 10L);
        org.junit.Assert.assertNotNull(properties6);
        org.junit.Assert.assertNotNull(properties7);
    }

    @Test
    public void test1053() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1053");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setDefaultJtaTimeout((long) (byte) 10);
        long long3 = atomikosProperties0.getDefaultJtaTimeout();
        atomikosProperties0.setTransactionManagerUniqueName("hi!");
        atomikosProperties0.setTransactionManagerUniqueName("{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=0, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.tm_unique_name=, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
        atomikosProperties0.setService("");
        atomikosProperties0.setDefaultJtaTimeout(0L);
        java.lang.String str12 = atomikosProperties0.getService();
        int int13 = atomikosProperties0.getMaxActives();
        org.junit.Assert.assertTrue("'" + long3 + "' != '" + 10L + "'", long3 == 10L);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "" + "'", str12, "");
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 50 + "'", int13 == 50);
    }

    @Test
    public void test1054() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1054");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Properties properties2 = new java.util.Properties(properties0);
        java.util.Properties properties3 = null;
        java.util.Properties properties4 = new java.util.Properties(properties3);
        java.lang.Object obj6 = properties2.put((java.lang.Object) properties4, (java.lang.Object) (short) 1);
        java.util.Properties properties8 = null;
        java.util.Properties properties9 = new java.util.Properties(properties8);
        java.util.Properties properties10 = new java.util.Properties(properties8);
        java.util.Properties properties11 = null;
        java.util.Properties properties12 = new java.util.Properties(properties11);
        java.lang.Object obj14 = properties10.put((java.lang.Object) properties12, (java.lang.Object) (short) 1);
        boolean boolean15 = properties4.remove((java.lang.Object) false, (java.lang.Object) (short) 1);
        java.util.Set<java.lang.String> strSet16 = properties4.stringPropertyNames();
        java.lang.Object obj17 = properties4.clone();
        java.util.Properties properties18 = new java.util.Properties(properties4);
        java.util.Enumeration<java.lang.Object> objEnumeration19 = properties4.keys();
        java.lang.String str20 = properties4.toString();
        java.lang.String str21 = properties4.toString();
        java.io.OutputStream outputStream22 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties4.save(outputStream22, "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=100, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=true, com.atomikos.icatch.tm_unique_name=, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name={com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.tm_unique_name=, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}}");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(obj6);
        org.junit.Assert.assertNull(obj14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(strSet16);
        org.junit.Assert.assertNotNull(obj17);
        org.junit.Assert.assertEquals(obj17.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj17), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj17), "{}");
        org.junit.Assert.assertNotNull(objEnumeration19);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "{}" + "'", str20, "{}");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "{}" + "'", str21, "{}");
    }

    @Test
    public void test1055() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1055");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Properties properties2 = new java.util.Properties(properties0);
        java.util.Properties properties3 = null;
        java.util.Properties properties4 = new java.util.Properties(properties3);
        java.lang.Object obj6 = properties2.put((java.lang.Object) properties4, (java.lang.Object) (short) 1);
        java.util.Properties properties8 = null;
        java.util.Properties properties9 = new java.util.Properties(properties8);
        java.util.Properties properties10 = new java.util.Properties(properties8);
        java.util.Properties properties11 = null;
        java.util.Properties properties12 = new java.util.Properties(properties11);
        java.lang.Object obj14 = properties10.put((java.lang.Object) properties12, (java.lang.Object) (short) 1);
        boolean boolean15 = properties4.remove((java.lang.Object) false, (java.lang.Object) (short) 1);
        java.util.Enumeration<java.lang.Object> objEnumeration16 = properties4.elements();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties17 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties17.setDefaultJtaTimeout((long) (byte) 10);
        atomikosProperties17.setCheckpointInterval((long) (byte) 0);
        atomikosProperties17.setTransactionManagerUniqueName("");
        java.util.Properties properties24 = atomikosProperties17.asProperties();
        boolean boolean25 = atomikosProperties17.isForceShutdownOnVmExit();
        boolean boolean26 = properties4.containsValue((java.lang.Object) atomikosProperties17);
        java.util.Properties properties27 = atomikosProperties17.asProperties();
        long long28 = atomikosProperties17.getCheckpointInterval();
        java.lang.String str29 = atomikosProperties17.getLogBaseDir();
        org.junit.Assert.assertNull(obj6);
        org.junit.Assert.assertNull(obj14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(objEnumeration16);
        org.junit.Assert.assertNotNull(properties24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(properties27);
        org.junit.Assert.assertTrue("'" + long28 + "' != '" + 0L + "'", long28 == 0L);
        org.junit.Assert.assertNull(str29);
    }

    @Test
    public void test1056() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1056");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Properties properties2 = new java.util.Properties(properties0);
        java.util.Properties properties3 = null;
        java.util.Properties properties4 = new java.util.Properties(properties3);
        java.lang.Object obj6 = properties2.put((java.lang.Object) properties4, (java.lang.Object) (short) 1);
        properties4.clear();
        int int8 = properties4.size();
        java.lang.Object obj11 = properties4.setProperty("hi!", "hi!");
        java.lang.Object obj14 = properties4.setProperty("tmlog", "tmlog");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties15 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties15.setThreadedTwoPhaseCommit(true);
        atomikosProperties15.setMaxActives((int) '#');
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties20 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties20.setDefaultJtaTimeout((long) (byte) 10);
        atomikosProperties20.setCheckpointInterval((long) (byte) 0);
        atomikosProperties20.setTransactionManagerUniqueName("");
        java.util.Properties properties27 = atomikosProperties20.asProperties();
        java.lang.String str28 = atomikosProperties20.getLogBaseName();
        atomikosProperties20.setCheckpointInterval(100L);
        atomikosProperties20.setLogBaseName("");
        atomikosProperties20.setCheckpointInterval((long) (byte) 1);
        java.lang.Object obj35 = properties4.getOrDefault((java.lang.Object) atomikosProperties15, (java.lang.Object) (byte) 1);
        java.util.Collection<java.lang.Object> objCollection36 = properties4.values();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties37 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties37.setDefaultJtaTimeout((long) (byte) 10);
        atomikosProperties37.setCheckpointInterval((long) (byte) 0);
        atomikosProperties37.setTransactionManagerUniqueName("");
        boolean boolean44 = atomikosProperties37.isEnableLogging();
        java.util.Properties properties45 = atomikosProperties37.asProperties();
        java.util.Properties properties46 = new java.util.Properties(properties45);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties47 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties47.setThreadedTwoPhaseCommit(true);
        atomikosProperties47.setMaxActives((int) (byte) 0);
        atomikosProperties47.setEnableLogging(true);
        atomikosProperties47.setForceShutdownOnVmExit(false);
        boolean boolean56 = atomikosProperties47.isThreadedTwoPhaseCommit();
        atomikosProperties47.setForceShutdownOnVmExit(false);
        java.util.Properties properties59 = null;
        java.util.Properties properties60 = new java.util.Properties(properties59);
        java.util.Properties properties61 = new java.util.Properties(properties59);
        java.util.Properties properties62 = null;
        java.util.Properties properties63 = new java.util.Properties(properties62);
        java.lang.Object obj65 = properties61.put((java.lang.Object) properties63, (java.lang.Object) (short) 1);
        java.util.Properties properties67 = null;
        java.util.Properties properties68 = new java.util.Properties(properties67);
        java.util.Properties properties69 = new java.util.Properties(properties67);
        java.util.Properties properties70 = null;
        java.util.Properties properties71 = new java.util.Properties(properties70);
        java.lang.Object obj73 = properties69.put((java.lang.Object) properties71, (java.lang.Object) (short) 1);
        boolean boolean74 = properties63.remove((java.lang.Object) false, (java.lang.Object) (short) 1);
        java.util.Enumeration<java.lang.Object> objEnumeration75 = properties63.keys();
        java.util.Properties properties76 = null;
        java.util.Properties properties77 = new java.util.Properties(properties76);
        java.util.Properties properties78 = new java.util.Properties(properties76);
        java.util.Properties properties79 = null;
        java.util.Properties properties80 = new java.util.Properties(properties79);
        java.lang.Object obj82 = properties78.put((java.lang.Object) properties80, (java.lang.Object) (short) 1);
        boolean boolean83 = properties78.isEmpty();
        java.util.Properties properties84 = null;
        java.util.Properties properties85 = new java.util.Properties(properties84);
        java.util.Properties properties86 = new java.util.Properties(properties84);
        boolean boolean87 = properties78.containsKey((java.lang.Object) properties86);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties88 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties88.setThreadedTwoPhaseCommit(true);
        atomikosProperties88.setMaxActives((int) (byte) 0);
        java.lang.Object obj93 = properties63.getOrDefault((java.lang.Object) boolean87, (java.lang.Object) (byte) 0);
        java.util.Set<java.lang.String> strSet94 = properties63.stringPropertyNames();
        java.lang.Object obj95 = properties46.putIfAbsent((java.lang.Object) atomikosProperties47, (java.lang.Object) strSet94);
        properties4.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties46);
        java.io.OutputStream outputStream97 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties4.save(outputStream97, "");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(obj6);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertNull(obj11);
        org.junit.Assert.assertNull(obj14);
        org.junit.Assert.assertNotNull(properties27);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "tmlog" + "'", str28, "tmlog");
        org.junit.Assert.assertEquals("'" + obj35 + "' != '" + (byte) 1 + "'", obj35, (byte) 1);
        org.junit.Assert.assertNotNull(objCollection36);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertNotNull(properties45);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertNull(obj65);
        org.junit.Assert.assertNull(obj73);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
        org.junit.Assert.assertNotNull(objEnumeration75);
        org.junit.Assert.assertNull(obj82);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + false + "'", boolean83 == false);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + true + "'", boolean87 == true);
        org.junit.Assert.assertEquals("'" + obj93 + "' != '" + (byte) 0 + "'", obj93, (byte) 0);
        org.junit.Assert.assertNotNull(strSet94);
        org.junit.Assert.assertNull(obj95);
    }

    @Test
    public void test1057() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1057");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Properties properties2 = new java.util.Properties(properties0);
        boolean boolean4 = properties2.containsValue((java.lang.Object) (short) 100);
        java.util.Properties properties5 = new java.util.Properties(properties2);
        java.lang.String str7 = properties5.getProperty("hi!");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties8 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties8.setDefaultJtaTimeout((long) (byte) 10);
        long long11 = atomikosProperties8.getDefaultJtaTimeout();
        atomikosProperties8.setTransactionManagerUniqueName("hi!");
        atomikosProperties8.setLogBaseName("tmlog");
        boolean boolean16 = atomikosProperties8.isSerialJtaTransactions();
        java.util.Properties properties17 = atomikosProperties8.asProperties();
        boolean boolean18 = properties5.equals((java.lang.Object) atomikosProperties8);
        java.util.Enumeration<java.lang.Object> objEnumeration19 = properties5.elements();
        java.lang.Object obj20 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean21 = properties5.contains(obj20);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertTrue("'" + long11 + "' != '" + 10L + "'", long11 == 10L);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(properties17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(objEnumeration19);
    }

    @Test
    public void test1058() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1058");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Properties properties2 = new java.util.Properties(properties0);
        java.util.Properties properties3 = null;
        java.util.Properties properties4 = new java.util.Properties(properties3);
        java.lang.Object obj6 = properties2.put((java.lang.Object) properties4, (java.lang.Object) (short) 1);
        java.util.Properties properties7 = new java.util.Properties(properties4);
        java.util.Properties properties8 = new java.util.Properties(properties4);
        java.util.Set<java.lang.Object> objSet9 = properties8.keySet();
        int int10 = properties8.size();
        java.io.OutputStream outputStream11 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties8.store(outputStream11, "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=0, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog, {}={}}");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(obj6);
        org.junit.Assert.assertNotNull(objSet9);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
    }

    @Test
    public void test1059() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1059");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Properties properties2 = new java.util.Properties(properties0);
        java.util.Properties properties3 = null;
        java.util.Properties properties4 = new java.util.Properties(properties3);
        java.lang.Object obj6 = properties2.put((java.lang.Object) properties4, (java.lang.Object) (short) 1);
        boolean boolean7 = properties2.isEmpty();
        java.util.Properties properties8 = null;
        java.util.Properties properties9 = new java.util.Properties(properties8);
        java.util.Properties properties10 = new java.util.Properties(properties8);
        boolean boolean11 = properties2.containsKey((java.lang.Object) properties10);
        java.util.Properties properties12 = null;
        java.util.Properties properties13 = new java.util.Properties(properties12);
        java.util.Properties properties14 = new java.util.Properties(properties12);
        java.util.Properties properties15 = null;
        java.util.Properties properties16 = new java.util.Properties(properties15);
        java.lang.Object obj18 = properties14.put((java.lang.Object) properties16, (java.lang.Object) (short) 1);
        java.util.Properties properties20 = null;
        java.util.Properties properties21 = new java.util.Properties(properties20);
        java.util.Properties properties22 = new java.util.Properties(properties20);
        java.util.Properties properties23 = null;
        java.util.Properties properties24 = new java.util.Properties(properties23);
        java.lang.Object obj26 = properties22.put((java.lang.Object) properties24, (java.lang.Object) (short) 1);
        boolean boolean27 = properties16.remove((java.lang.Object) false, (java.lang.Object) (short) 1);
        java.util.Set<java.lang.String> strSet28 = properties16.stringPropertyNames();
        boolean boolean29 = properties10.containsKey((java.lang.Object) strSet28);
        java.util.Properties properties30 = null;
        java.util.Properties properties31 = new java.util.Properties(properties30);
        java.util.Properties properties32 = new java.util.Properties(properties30);
        java.util.Properties properties33 = null;
        java.util.Properties properties34 = new java.util.Properties(properties33);
        java.lang.Object obj36 = properties32.put((java.lang.Object) properties34, (java.lang.Object) (short) 1);
        properties34.clear();
        java.lang.String str39 = properties34.getProperty("");
        java.util.Properties properties40 = null;
        java.util.Properties properties41 = new java.util.Properties(properties40);
        java.util.Properties properties42 = new java.util.Properties(properties40);
        java.util.Properties properties43 = null;
        java.util.Properties properties44 = new java.util.Properties(properties43);
        java.lang.Object obj46 = properties42.put((java.lang.Object) properties44, (java.lang.Object) (short) 1);
        properties34.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties42);
        boolean boolean48 = properties10.containsKey((java.lang.Object) properties34);
        int int49 = properties10.size();
        java.io.Writer writer50 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties10.store(writer50, "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=100, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=true, com.atomikos.icatch.tm_unique_name=, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name={com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.tm_unique_name=, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}}");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(obj6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNull(obj18);
        org.junit.Assert.assertNull(obj26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(strSet28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNull(obj36);
        org.junit.Assert.assertNull(str39);
        org.junit.Assert.assertNull(obj46);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 0 + "'", int49 == 0);
    }

    @Test
    public void test1060() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1060");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setDefaultJtaTimeout((long) (byte) 10);
        long long3 = atomikosProperties0.getDefaultJtaTimeout();
        atomikosProperties0.setTransactionManagerUniqueName("");
        boolean boolean6 = atomikosProperties0.isEnableLogging();
        java.lang.String str7 = atomikosProperties0.getLogBaseDir();
        java.util.Properties properties8 = atomikosProperties0.asProperties();
        atomikosProperties0.setForceShutdownOnVmExit(true);
        long long11 = atomikosProperties0.getCheckpointInterval();
        atomikosProperties0.setForceShutdownOnVmExit(true);
        atomikosProperties0.setLogBaseDir("");
        java.lang.String str16 = atomikosProperties0.getService();
        atomikosProperties0.setMaxTimeout((long) 1);
        org.junit.Assert.assertTrue("'" + long3 + "' != '" + 10L + "'", long3 == 10L);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNotNull(properties8);
        org.junit.Assert.assertTrue("'" + long11 + "' != '" + 500L + "'", long11 == 500L);
        org.junit.Assert.assertNull(str16);
    }

    @Test
    public void test1061() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1061");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Properties properties2 = new java.util.Properties(properties0);
        java.util.Properties properties3 = null;
        java.util.Properties properties4 = new java.util.Properties(properties3);
        java.lang.Object obj6 = properties2.put((java.lang.Object) properties4, (java.lang.Object) (short) 1);
        java.util.Properties properties8 = null;
        java.util.Properties properties9 = new java.util.Properties(properties8);
        java.util.Properties properties10 = new java.util.Properties(properties8);
        java.util.Properties properties11 = null;
        java.util.Properties properties12 = new java.util.Properties(properties11);
        java.lang.Object obj14 = properties10.put((java.lang.Object) properties12, (java.lang.Object) (short) 1);
        boolean boolean15 = properties4.remove((java.lang.Object) false, (java.lang.Object) (short) 1);
        java.util.Set<java.lang.String> strSet16 = properties4.stringPropertyNames();
        boolean boolean18 = properties4.containsValue((java.lang.Object) 50);
        java.util.Properties properties19 = new java.util.Properties(properties4);
        java.util.Properties properties20 = null;
        java.util.Properties properties21 = new java.util.Properties(properties20);
        java.util.Properties properties22 = new java.util.Properties(properties20);
        java.util.Properties properties23 = null;
        java.util.Properties properties24 = new java.util.Properties(properties23);
        java.lang.Object obj26 = properties22.put((java.lang.Object) properties24, (java.lang.Object) (short) 1);
        java.util.Properties properties28 = null;
        java.util.Properties properties29 = new java.util.Properties(properties28);
        java.util.Properties properties30 = new java.util.Properties(properties28);
        java.util.Properties properties31 = null;
        java.util.Properties properties32 = new java.util.Properties(properties31);
        java.lang.Object obj34 = properties30.put((java.lang.Object) properties32, (java.lang.Object) (short) 1);
        boolean boolean35 = properties24.remove((java.lang.Object) false, (java.lang.Object) (short) 1);
        java.util.Properties properties36 = new java.util.Properties(properties24);
        int int37 = properties36.size();
        java.util.Properties properties38 = new java.util.Properties(properties36);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties39 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties39.setDefaultJtaTimeout((long) (byte) 10);
        long long42 = atomikosProperties39.getDefaultJtaTimeout();
        atomikosProperties39.setTransactionManagerUniqueName("hi!");
        atomikosProperties39.setLogBaseName("tmlog");
        atomikosProperties39.setCheckpointInterval(300000L);
        long long49 = atomikosProperties39.getMaxTimeout();
        boolean boolean50 = properties38.containsKey((java.lang.Object) long49);
        java.lang.Object obj53 = properties38.setProperty("{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=0, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog, {}={}}", "");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties54 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties54.setDefaultJtaTimeout((long) (byte) 10);
        atomikosProperties54.setCheckpointInterval((long) (byte) 0);
        atomikosProperties54.setTransactionManagerUniqueName("");
        boolean boolean61 = atomikosProperties54.isEnableLogging();
        java.util.Properties properties62 = atomikosProperties54.asProperties();
        java.util.Properties properties63 = new java.util.Properties(properties62);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties64 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties64.setDefaultJtaTimeout((long) (byte) 10);
        atomikosProperties64.setSerialJtaTransactions(false);
        atomikosProperties64.setMaxTimeout((long) (short) -1);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties71 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties71.setDefaultJtaTimeout((long) (byte) 10);
        atomikosProperties71.setCheckpointInterval((long) (byte) 0);
        atomikosProperties71.setTransactionManagerUniqueName("");
        java.util.Properties properties78 = atomikosProperties71.asProperties();
        java.lang.String str79 = atomikosProperties71.getLogBaseName();
        java.util.Properties properties80 = atomikosProperties71.asProperties();
        java.lang.Object obj81 = properties62.getOrDefault((java.lang.Object) (short) -1, (java.lang.Object) atomikosProperties71);
        long long82 = atomikosProperties71.getCheckpointInterval();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties83 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties83.setDefaultJtaTimeout((long) (byte) 10);
        atomikosProperties83.setCheckpointInterval((long) (byte) 0);
        atomikosProperties83.setTransactionManagerUniqueName("");
        boolean boolean90 = atomikosProperties83.isEnableLogging();
        java.util.Properties properties91 = atomikosProperties83.asProperties();
        java.util.Properties properties92 = new java.util.Properties(properties91);
        java.lang.Object obj93 = properties38.getOrDefault((java.lang.Object) long82, (java.lang.Object) properties91);
        java.lang.Object obj94 = properties19.remove((java.lang.Object) long82);
        org.junit.Assert.assertNull(obj6);
        org.junit.Assert.assertNull(obj14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(strSet16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNull(obj26);
        org.junit.Assert.assertNull(obj34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 0 + "'", int37 == 0);
        org.junit.Assert.assertTrue("'" + long42 + "' != '" + 10L + "'", long42 == 10L);
        org.junit.Assert.assertTrue("'" + long49 + "' != '" + 300000L + "'", long49 == 300000L);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertNull(obj53);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertNotNull(properties62);
        org.junit.Assert.assertNotNull(properties78);
        org.junit.Assert.assertEquals("'" + str79 + "' != '" + "tmlog" + "'", str79, "tmlog");
        org.junit.Assert.assertNotNull(properties80);
        org.junit.Assert.assertNotNull(obj81);
        org.junit.Assert.assertTrue("'" + long82 + "' != '" + 0L + "'", long82 == 0L);
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + true + "'", boolean90 == true);
        org.junit.Assert.assertNotNull(properties91);
        org.junit.Assert.assertNotNull(obj93);
// flaky:         org.junit.Assert.assertEquals(obj93.toString(), "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=0, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.tm_unique_name=, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
// flaky:         org.junit.Assert.assertEquals(java.lang.String.valueOf(obj93), "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=0, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.tm_unique_name=, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
// flaky:         org.junit.Assert.assertEquals(java.util.Objects.toString(obj93), "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=0, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.tm_unique_name=, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
        org.junit.Assert.assertNull(obj94);
    }

    @Test
    public void test1062() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1062");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setEnableLogging(false);
        atomikosProperties0.setThreadedTwoPhaseCommit(true);
        atomikosProperties0.setTransactionManagerUniqueName("tmlog");
        boolean boolean7 = atomikosProperties0.isEnableLogging();
        atomikosProperties0.setDefaultJtaTimeout((long) (short) 10);
        atomikosProperties0.setTransactionManagerUniqueName("{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.tm_unique_name=, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
        java.lang.String str12 = atomikosProperties0.getService();
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNull(str12);
    }

    @Test
    public void test1063() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1063");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setThreadedTwoPhaseCommit(true);
        atomikosProperties0.setMaxActives((int) (byte) 0);
        atomikosProperties0.setEnableLogging(true);
        atomikosProperties0.setMaxActives((int) (byte) 1);
        atomikosProperties0.setTransactionManagerUniqueName("hi!");
        java.lang.String str11 = atomikosProperties0.getLogBaseName();
        int int12 = atomikosProperties0.getMaxActives();
        atomikosProperties0.setLogBaseDir("{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=0, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.tm_unique_name=, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
        atomikosProperties0.setTransactionManagerUniqueName("");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "tmlog" + "'", str11, "tmlog");
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 1 + "'", int12 == 1);
    }

    @Test
    public void test1064() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1064");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Properties properties2 = new java.util.Properties(properties0);
        java.util.Properties properties3 = null;
        java.util.Properties properties4 = new java.util.Properties(properties3);
        java.lang.Object obj6 = properties2.put((java.lang.Object) properties4, (java.lang.Object) (short) 1);
        properties4.clear();
        int int8 = properties4.size();
        java.lang.Object obj11 = properties4.setProperty("hi!", "hi!");
        java.util.Properties properties12 = null;
        java.util.Properties properties13 = new java.util.Properties(properties12);
        java.util.Properties properties14 = new java.util.Properties(properties12);
        java.util.Properties properties15 = null;
        java.util.Properties properties16 = new java.util.Properties(properties15);
        java.lang.Object obj18 = properties14.put((java.lang.Object) properties16, (java.lang.Object) (short) 1);
        java.util.Properties properties19 = new java.util.Properties(properties16);
        java.util.Enumeration<java.lang.Object> objEnumeration20 = properties19.elements();
        java.util.Enumeration<java.lang.Object> objEnumeration21 = properties19.elements();
        properties4.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties19);
        java.io.PrintStream printStream23 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties19.list(printStream23);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(obj6);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertNull(obj11);
        org.junit.Assert.assertNull(obj18);
        org.junit.Assert.assertNotNull(objEnumeration20);
        org.junit.Assert.assertNotNull(objEnumeration21);
    }

    @Test
    public void test1065() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1065");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Properties properties2 = new java.util.Properties(properties0);
        java.util.Properties properties3 = null;
        java.util.Properties properties4 = new java.util.Properties(properties3);
        java.lang.Object obj6 = properties2.put((java.lang.Object) properties4, (java.lang.Object) (short) 1);
        java.util.Properties properties8 = null;
        java.util.Properties properties9 = new java.util.Properties(properties8);
        java.util.Properties properties10 = new java.util.Properties(properties8);
        java.util.Properties properties11 = null;
        java.util.Properties properties12 = new java.util.Properties(properties11);
        java.lang.Object obj14 = properties10.put((java.lang.Object) properties12, (java.lang.Object) (short) 1);
        boolean boolean15 = properties4.remove((java.lang.Object) false, (java.lang.Object) (short) 1);
        java.util.Set<java.lang.String> strSet16 = properties4.stringPropertyNames();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties17 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties17.setDefaultJtaTimeout((long) (byte) 10);
        long long20 = atomikosProperties17.getDefaultJtaTimeout();
        java.lang.Object obj21 = properties4.get((java.lang.Object) atomikosProperties17);
        atomikosProperties17.setCheckpointInterval((long) (short) 100);
        java.util.Properties properties24 = atomikosProperties17.asProperties();
        java.lang.String str25 = atomikosProperties17.getLogBaseName();
        boolean boolean26 = atomikosProperties17.isSerialJtaTransactions();
        atomikosProperties17.setDefaultJtaTimeout((long) 35);
        org.junit.Assert.assertNull(obj6);
        org.junit.Assert.assertNull(obj14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(strSet16);
        org.junit.Assert.assertTrue("'" + long20 + "' != '" + 10L + "'", long20 == 10L);
        org.junit.Assert.assertNull(obj21);
        org.junit.Assert.assertNotNull(properties24);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "tmlog" + "'", str25, "tmlog");
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
    }

    @Test
    public void test1066() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1066");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Properties properties2 = new java.util.Properties(properties0);
        java.util.Properties properties3 = null;
        java.util.Properties properties4 = new java.util.Properties(properties3);
        java.lang.Object obj6 = properties2.put((java.lang.Object) properties4, (java.lang.Object) (short) 1);
        java.util.Properties properties8 = null;
        java.util.Properties properties9 = new java.util.Properties(properties8);
        java.util.Properties properties10 = new java.util.Properties(properties8);
        java.util.Properties properties11 = null;
        java.util.Properties properties12 = new java.util.Properties(properties11);
        java.lang.Object obj14 = properties10.put((java.lang.Object) properties12, (java.lang.Object) (short) 1);
        boolean boolean15 = properties4.remove((java.lang.Object) false, (java.lang.Object) (short) 1);
        java.util.Set<java.lang.String> strSet16 = properties4.stringPropertyNames();
        java.util.Enumeration<java.lang.Object> objEnumeration17 = properties4.elements();
        java.lang.String str18 = properties4.toString();
        java.util.Properties properties19 = null;
        java.util.Properties properties20 = new java.util.Properties(properties19);
        java.util.Properties properties21 = new java.util.Properties(properties19);
        java.util.Properties properties22 = null;
        java.util.Properties properties23 = new java.util.Properties(properties22);
        java.lang.Object obj25 = properties21.put((java.lang.Object) properties23, (java.lang.Object) (short) 1);
        boolean boolean26 = properties21.isEmpty();
        java.util.Properties properties27 = null;
        java.util.Properties properties28 = new java.util.Properties(properties27);
        java.util.Properties properties29 = new java.util.Properties(properties27);
        boolean boolean30 = properties21.containsKey((java.lang.Object) properties29);
        java.util.Properties properties31 = null;
        java.util.Properties properties32 = new java.util.Properties(properties31);
        java.util.Properties properties33 = new java.util.Properties(properties31);
        java.util.Properties properties34 = null;
        java.util.Properties properties35 = new java.util.Properties(properties34);
        java.lang.Object obj37 = properties33.put((java.lang.Object) properties35, (java.lang.Object) (short) 1);
        java.util.Properties properties39 = null;
        java.util.Properties properties40 = new java.util.Properties(properties39);
        java.util.Properties properties41 = new java.util.Properties(properties39);
        java.util.Properties properties42 = null;
        java.util.Properties properties43 = new java.util.Properties(properties42);
        java.lang.Object obj45 = properties41.put((java.lang.Object) properties43, (java.lang.Object) (short) 1);
        boolean boolean46 = properties35.remove((java.lang.Object) false, (java.lang.Object) (short) 1);
        java.util.Set<java.lang.String> strSet47 = properties35.stringPropertyNames();
        boolean boolean48 = properties29.containsKey((java.lang.Object) strSet47);
        java.util.Properties properties49 = null;
        java.util.Properties properties50 = new java.util.Properties(properties49);
        java.util.Properties properties51 = new java.util.Properties(properties49);
        java.util.Properties properties52 = null;
        java.util.Properties properties53 = new java.util.Properties(properties52);
        java.lang.Object obj55 = properties51.put((java.lang.Object) properties53, (java.lang.Object) (short) 1);
        properties53.clear();
        java.lang.String str58 = properties53.getProperty("");
        java.util.Properties properties59 = null;
        java.util.Properties properties60 = new java.util.Properties(properties59);
        java.util.Properties properties61 = new java.util.Properties(properties59);
        java.util.Properties properties62 = null;
        java.util.Properties properties63 = new java.util.Properties(properties62);
        java.lang.Object obj65 = properties61.put((java.lang.Object) properties63, (java.lang.Object) (short) 1);
        properties53.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties61);
        boolean boolean67 = properties29.containsKey((java.lang.Object) properties53);
        java.util.Properties properties69 = null;
        java.util.Properties properties70 = new java.util.Properties(properties69);
        java.util.Properties properties71 = new java.util.Properties(properties69);
        java.util.Properties properties72 = null;
        java.util.Properties properties73 = new java.util.Properties(properties72);
        java.lang.Object obj75 = properties71.put((java.lang.Object) properties73, (java.lang.Object) (short) 1);
        properties73.clear();
        int int77 = properties73.size();
        java.lang.Object obj80 = properties73.setProperty("hi!", "hi!");
        java.lang.Object obj83 = properties73.setProperty("tmlog", "tmlog");
        java.lang.Object obj84 = properties53.putIfAbsent((java.lang.Object) (short) 10, (java.lang.Object) "tmlog");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties85 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        int int86 = atomikosProperties85.getMaxActives();
        long long87 = atomikosProperties85.getMaxTimeout();
        java.util.Properties properties88 = atomikosProperties85.asProperties();
        boolean boolean89 = properties53.containsValue((java.lang.Object) properties88);
        java.lang.Object obj90 = properties4.remove((java.lang.Object) properties88);
        java.util.Properties properties91 = new java.util.Properties(properties4);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties92 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        boolean boolean93 = atomikosProperties92.isForceShutdownOnVmExit();
        java.util.Properties properties94 = atomikosProperties92.asProperties();
        java.util.Properties properties95 = new java.util.Properties(properties94);
        boolean boolean96 = properties91.containsValue((java.lang.Object) properties95);
        java.io.InputStream inputStream97 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties95.load(inputStream97);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(obj6);
        org.junit.Assert.assertNull(obj14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(strSet16);
        org.junit.Assert.assertNotNull(objEnumeration17);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "{}" + "'", str18, "{}");
        org.junit.Assert.assertNull(obj25);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNull(obj37);
        org.junit.Assert.assertNull(obj45);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(strSet47);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNull(obj55);
        org.junit.Assert.assertNull(str58);
        org.junit.Assert.assertNull(obj65);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertNull(obj75);
        org.junit.Assert.assertTrue("'" + int77 + "' != '" + 0 + "'", int77 == 0);
        org.junit.Assert.assertNull(obj80);
        org.junit.Assert.assertNull(obj83);
        org.junit.Assert.assertNull(obj84);
        org.junit.Assert.assertTrue("'" + int86 + "' != '" + 50 + "'", int86 == 50);
        org.junit.Assert.assertTrue("'" + long87 + "' != '" + 300000L + "'", long87 == 300000L);
        org.junit.Assert.assertNotNull(properties88);
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + false + "'", boolean89 == false);
        org.junit.Assert.assertNull(obj90);
        org.junit.Assert.assertTrue("'" + boolean93 + "' != '" + false + "'", boolean93 == false);
        org.junit.Assert.assertNotNull(properties94);
        org.junit.Assert.assertTrue("'" + boolean96 + "' != '" + false + "'", boolean96 == false);
    }

    @Test
    public void test1067() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1067");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Properties properties2 = new java.util.Properties(properties0);
        java.util.Properties properties3 = null;
        java.util.Properties properties4 = new java.util.Properties(properties3);
        java.lang.Object obj6 = properties2.put((java.lang.Object) properties4, (java.lang.Object) (short) 1);
        java.util.Properties properties7 = new java.util.Properties(properties4);
        java.util.Properties properties8 = new java.util.Properties(properties4);
        java.util.Set<java.lang.Object> objSet9 = properties8.keySet();
        java.util.Set<java.lang.String> strSet10 = properties8.stringPropertyNames();
        java.lang.String str13 = properties8.getProperty("{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=0, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog, {}={}}", "tmlog");
        org.junit.Assert.assertNull(obj6);
        org.junit.Assert.assertNotNull(objSet9);
        org.junit.Assert.assertNotNull(strSet10);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "tmlog" + "'", str13, "tmlog");
    }

    @Test
    public void test1068() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1068");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Properties properties2 = new java.util.Properties(properties0);
        boolean boolean4 = properties2.containsValue((java.lang.Object) (short) 100);
        java.lang.Object obj5 = properties2.clone();
        java.util.Enumeration<?> wildcardEnumeration6 = properties2.propertyNames();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet7 = properties2.entrySet();
        java.lang.Class<?> wildcardClass8 = objEntrySet7.getClass();
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(obj5);
        org.junit.Assert.assertEquals(obj5.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj5), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj5), "{}");
        org.junit.Assert.assertNotNull(wildcardEnumeration6);
        org.junit.Assert.assertNotNull(objEntrySet7);
        org.junit.Assert.assertNotNull(wildcardClass8);
    }

    @Test
    public void test1069() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1069");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Properties properties2 = new java.util.Properties(properties0);
        java.util.Properties properties3 = null;
        java.util.Properties properties4 = new java.util.Properties(properties3);
        java.lang.Object obj6 = properties2.put((java.lang.Object) properties4, (java.lang.Object) (short) 1);
        java.util.Properties properties8 = null;
        java.util.Properties properties9 = new java.util.Properties(properties8);
        java.util.Properties properties10 = new java.util.Properties(properties8);
        java.util.Properties properties11 = null;
        java.util.Properties properties12 = new java.util.Properties(properties11);
        java.lang.Object obj14 = properties10.put((java.lang.Object) properties12, (java.lang.Object) (short) 1);
        boolean boolean15 = properties4.remove((java.lang.Object) false, (java.lang.Object) (short) 1);
        java.util.Set<java.lang.String> strSet16 = properties4.stringPropertyNames();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties17 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties17.setThreadedTwoPhaseCommit(true);
        atomikosProperties17.setMaxActives((int) (byte) 0);
        atomikosProperties17.setEnableLogging(true);
        atomikosProperties17.setForceShutdownOnVmExit(false);
        java.lang.Object obj26 = properties4.get((java.lang.Object) false);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties27 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties27.setDefaultJtaTimeout((long) (byte) 10);
        long long30 = atomikosProperties27.getDefaultJtaTimeout();
        atomikosProperties27.setTransactionManagerUniqueName("");
        long long33 = atomikosProperties27.getDefaultJtaTimeout();
        boolean boolean34 = atomikosProperties27.isEnableLogging();
        atomikosProperties27.setService("{}");
        atomikosProperties27.setTransactionManagerUniqueName("{tmlog={com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=0, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.tm_unique_name=, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}, 4=true}");
        java.util.Properties properties39 = null;
        java.util.Properties properties40 = new java.util.Properties(properties39);
        java.util.Properties properties41 = new java.util.Properties(properties39);
        java.util.Properties properties42 = null;
        java.util.Properties properties43 = new java.util.Properties(properties42);
        java.lang.Object obj45 = properties41.put((java.lang.Object) properties43, (java.lang.Object) (short) 1);
        java.util.Properties properties47 = null;
        java.util.Properties properties48 = new java.util.Properties(properties47);
        java.util.Properties properties49 = new java.util.Properties(properties47);
        java.util.Properties properties50 = null;
        java.util.Properties properties51 = new java.util.Properties(properties50);
        java.lang.Object obj53 = properties49.put((java.lang.Object) properties51, (java.lang.Object) (short) 1);
        boolean boolean54 = properties43.remove((java.lang.Object) false, (java.lang.Object) (short) 1);
        java.lang.Object obj56 = properties43.remove((java.lang.Object) '#');
        java.util.Set<java.lang.Object> objSet57 = properties43.keySet();
        properties43.clear();
        java.util.Properties properties59 = null;
        java.util.Properties properties60 = new java.util.Properties(properties59);
        java.util.Properties properties61 = new java.util.Properties(properties59);
        java.util.Properties properties62 = null;
        java.util.Properties properties63 = new java.util.Properties(properties62);
        java.lang.Object obj65 = properties61.put((java.lang.Object) properties63, (java.lang.Object) (short) 1);
        java.util.Enumeration<java.lang.Object> objEnumeration66 = properties63.elements();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet67 = properties63.entrySet();
        boolean boolean68 = properties43.equals((java.lang.Object) properties63);
        java.util.Enumeration<java.lang.Object> objEnumeration69 = properties63.elements();
        boolean boolean70 = properties4.remove((java.lang.Object) "{tmlog={com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=0, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.tm_unique_name=, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}, 4=true}", (java.lang.Object) objEnumeration69);
        java.io.InputStream inputStream71 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties4.loadFromXML(inputStream71);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(obj6);
        org.junit.Assert.assertNull(obj14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(strSet16);
        org.junit.Assert.assertNull(obj26);
        org.junit.Assert.assertTrue("'" + long30 + "' != '" + 10L + "'", long30 == 10L);
        org.junit.Assert.assertTrue("'" + long33 + "' != '" + 10L + "'", long33 == 10L);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertNull(obj45);
        org.junit.Assert.assertNull(obj53);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertNull(obj56);
        org.junit.Assert.assertNotNull(objSet57);
        org.junit.Assert.assertNull(obj65);
        org.junit.Assert.assertNotNull(objEnumeration66);
        org.junit.Assert.assertNotNull(objEntrySet67);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + true + "'", boolean68 == true);
        org.junit.Assert.assertNotNull(objEnumeration69);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
    }

    @Test
    public void test1070() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1070");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Properties properties2 = new java.util.Properties(properties0);
        java.util.Properties properties3 = null;
        java.util.Properties properties4 = new java.util.Properties(properties3);
        java.lang.Object obj6 = properties2.put((java.lang.Object) properties4, (java.lang.Object) (short) 1);
        boolean boolean7 = properties2.isEmpty();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties8 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties8.setDefaultJtaTimeout((long) (byte) 10);
        atomikosProperties8.setCheckpointInterval((long) (byte) 0);
        atomikosProperties8.setTransactionManagerUniqueName("");
        java.util.Properties properties15 = atomikosProperties8.asProperties();
        java.lang.Object obj16 = properties2.remove((java.lang.Object) properties15);
        java.util.Set<java.lang.String> strSet17 = properties15.stringPropertyNames();
        java.util.Properties properties18 = null;
        java.util.Properties properties19 = new java.util.Properties(properties18);
        java.util.Properties properties20 = new java.util.Properties(properties18);
        java.util.Properties properties21 = null;
        java.util.Properties properties22 = new java.util.Properties(properties21);
        java.lang.Object obj24 = properties20.put((java.lang.Object) properties22, (java.lang.Object) (short) 1);
        properties22.clear();
        int int26 = properties22.size();
        java.util.Properties properties27 = null;
        java.util.Properties properties28 = new java.util.Properties(properties27);
        java.util.Properties properties29 = new java.util.Properties(properties27);
        java.util.Properties properties30 = null;
        java.util.Properties properties31 = new java.util.Properties(properties30);
        java.lang.Object obj33 = properties29.put((java.lang.Object) properties31, (java.lang.Object) (short) 1);
        java.util.Properties properties34 = new java.util.Properties(properties31);
        java.util.Properties properties35 = new java.util.Properties(properties31);
        boolean boolean37 = properties22.remove((java.lang.Object) properties31, (java.lang.Object) 10.0f);
        java.util.Enumeration<java.lang.Object> objEnumeration38 = properties31.elements();
        java.util.Properties properties39 = new java.util.Properties(properties31);
        boolean boolean41 = properties31.contains((java.lang.Object) (byte) 100);
        boolean boolean42 = properties15.contains((java.lang.Object) boolean41);
        boolean boolean44 = properties15.contains((java.lang.Object) 1L);
        java.util.Properties properties45 = null;
        java.util.Properties properties46 = new java.util.Properties(properties45);
        java.util.Properties properties47 = new java.util.Properties(properties45);
        java.util.Properties properties48 = null;
        java.util.Properties properties49 = new java.util.Properties(properties48);
        java.lang.Object obj51 = properties47.put((java.lang.Object) properties49, (java.lang.Object) (short) 1);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties52 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties52.setThreadedTwoPhaseCommit(true);
        atomikosProperties52.setMaxActives((int) (byte) 0);
        boolean boolean57 = properties47.containsValue((java.lang.Object) atomikosProperties52);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties58 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties58.setDefaultJtaTimeout((long) (byte) 10);
        atomikosProperties58.setSerialJtaTransactions(false);
        boolean boolean63 = properties47.containsValue((java.lang.Object) atomikosProperties58);
        atomikosProperties58.setForceShutdownOnVmExit(true);
        atomikosProperties58.setSerialJtaTransactions(true);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties68 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        int int69 = atomikosProperties68.getMaxActives();
        long long70 = atomikosProperties68.getMaxTimeout();
        java.util.Properties properties71 = atomikosProperties68.asProperties();
        java.util.Properties properties72 = atomikosProperties68.asProperties();
        java.lang.String str73 = atomikosProperties68.getTransactionManagerUniqueName();
        atomikosProperties68.setService("{}");
        atomikosProperties68.setSerialJtaTransactions(false);
        java.lang.Class<?> wildcardClass78 = atomikosProperties68.getClass();
        java.lang.Object obj79 = properties15.replace((java.lang.Object) true, (java.lang.Object) wildcardClass78);
        org.junit.Assert.assertNull(obj6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(properties15);
        org.junit.Assert.assertNull(obj16);
        org.junit.Assert.assertNotNull(strSet17);
        org.junit.Assert.assertNull(obj24);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 0 + "'", int26 == 0);
        org.junit.Assert.assertNull(obj33);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(objEnumeration38);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNull(obj51);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertTrue("'" + int69 + "' != '" + 50 + "'", int69 == 50);
        org.junit.Assert.assertTrue("'" + long70 + "' != '" + 300000L + "'", long70 == 300000L);
        org.junit.Assert.assertNotNull(properties71);
        org.junit.Assert.assertNotNull(properties72);
        org.junit.Assert.assertNull(str73);
        org.junit.Assert.assertNotNull(wildcardClass78);
        org.junit.Assert.assertNull(obj79);
    }

    @Test
    public void test1071() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1071");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Properties properties2 = new java.util.Properties(properties0);
        java.util.Properties properties3 = null;
        java.util.Properties properties4 = new java.util.Properties(properties3);
        java.lang.Object obj6 = properties2.put((java.lang.Object) properties4, (java.lang.Object) (short) 1);
        java.util.Properties properties8 = null;
        java.util.Properties properties9 = new java.util.Properties(properties8);
        java.util.Properties properties10 = new java.util.Properties(properties8);
        java.util.Properties properties11 = null;
        java.util.Properties properties12 = new java.util.Properties(properties11);
        java.lang.Object obj14 = properties10.put((java.lang.Object) properties12, (java.lang.Object) (short) 1);
        boolean boolean15 = properties4.remove((java.lang.Object) false, (java.lang.Object) (short) 1);
        java.util.Set<java.lang.String> strSet16 = properties4.stringPropertyNames();
        java.util.Enumeration<java.lang.Object> objEnumeration17 = properties4.elements();
        java.lang.String str18 = properties4.toString();
        java.lang.String str19 = properties4.toString();
        java.util.Properties properties20 = null;
        java.util.Properties properties21 = new java.util.Properties(properties20);
        java.util.Properties properties22 = new java.util.Properties(properties20);
        java.util.Properties properties23 = null;
        java.util.Properties properties24 = new java.util.Properties(properties23);
        java.lang.Object obj26 = properties22.put((java.lang.Object) properties24, (java.lang.Object) (short) 1);
        java.util.Properties properties28 = null;
        java.util.Properties properties29 = new java.util.Properties(properties28);
        java.util.Properties properties30 = new java.util.Properties(properties28);
        java.util.Properties properties31 = null;
        java.util.Properties properties32 = new java.util.Properties(properties31);
        java.lang.Object obj34 = properties30.put((java.lang.Object) properties32, (java.lang.Object) (short) 1);
        boolean boolean35 = properties24.remove((java.lang.Object) false, (java.lang.Object) (short) 1);
        java.util.Properties properties36 = new java.util.Properties(properties24);
        boolean boolean37 = properties24.isEmpty();
        java.util.Enumeration<?> wildcardEnumeration38 = properties24.propertyNames();
        java.lang.String str40 = properties24.getProperty("{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=0, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.tm_unique_name=, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties41 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties41.setDefaultJtaTimeout((long) (byte) 10);
        atomikosProperties41.setCheckpointInterval((long) (byte) 0);
        atomikosProperties41.setTransactionManagerUniqueName("");
        java.util.Properties properties48 = atomikosProperties41.asProperties();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties49 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties49.setThreadedTwoPhaseCommit(true);
        atomikosProperties49.setMaxActives((int) '#');
        atomikosProperties49.setForceShutdownOnVmExit(true);
        java.lang.String str56 = atomikosProperties49.getLogBaseDir();
        java.lang.Object obj57 = properties48.remove((java.lang.Object) atomikosProperties49);
        java.lang.Object obj58 = properties4.put((java.lang.Object) "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=0, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.tm_unique_name=, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}", (java.lang.Object) properties48);
        java.lang.Object obj59 = properties4.clone();
        java.lang.String str62 = properties4.getProperty("{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=0, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.tm_unique_name=, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}", "");
        org.junit.Assert.assertNull(obj6);
        org.junit.Assert.assertNull(obj14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(strSet16);
        org.junit.Assert.assertNotNull(objEnumeration17);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "{}" + "'", str18, "{}");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "{}" + "'", str19, "{}");
        org.junit.Assert.assertNull(obj26);
        org.junit.Assert.assertNull(obj34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertNotNull(wildcardEnumeration38);
        org.junit.Assert.assertNull(str40);
        org.junit.Assert.assertNotNull(properties48);
        org.junit.Assert.assertNull(str56);
        org.junit.Assert.assertNull(obj57);
        org.junit.Assert.assertNull(obj58);
        org.junit.Assert.assertNotNull(obj59);
// flaky:         org.junit.Assert.assertEquals(obj59.toString(), "{{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=0, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.tm_unique_name=, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}={com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=0, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.tm_unique_name=, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}}");
// flaky:         org.junit.Assert.assertEquals(java.lang.String.valueOf(obj59), "{{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=0, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.tm_unique_name=, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}={com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=0, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.tm_unique_name=, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}}");
// flaky:         org.junit.Assert.assertEquals(java.util.Objects.toString(obj59), "{{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=0, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.tm_unique_name=, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}={com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=0, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.tm_unique_name=, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}}");
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "" + "'", str62, "");
    }

    @Test
    public void test1072() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1072");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Properties properties2 = new java.util.Properties(properties0);
        boolean boolean4 = properties2.containsValue((java.lang.Object) (short) 100);
        java.lang.Object obj5 = properties2.clone();
        java.lang.Object obj8 = properties2.setProperty("{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=0, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.tm_unique_name=, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}", "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.tm_unique_name=, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
        java.util.Properties properties9 = null;
        java.util.Properties properties10 = new java.util.Properties(properties9);
        java.util.Properties properties11 = new java.util.Properties(properties9);
        java.util.Properties properties12 = null;
        java.util.Properties properties13 = new java.util.Properties(properties12);
        java.lang.Object obj15 = properties11.put((java.lang.Object) properties13, (java.lang.Object) (short) 1);
        properties13.clear();
        int int17 = properties13.size();
        java.util.Properties properties18 = null;
        java.util.Properties properties19 = new java.util.Properties(properties18);
        java.util.Properties properties20 = new java.util.Properties(properties18);
        java.util.Properties properties21 = null;
        java.util.Properties properties22 = new java.util.Properties(properties21);
        java.lang.Object obj24 = properties20.put((java.lang.Object) properties22, (java.lang.Object) (short) 1);
        java.util.Properties properties25 = new java.util.Properties(properties22);
        java.util.Properties properties26 = new java.util.Properties(properties22);
        boolean boolean28 = properties13.remove((java.lang.Object) properties22, (java.lang.Object) 10.0f);
        java.util.Enumeration<java.lang.Object> objEnumeration29 = properties22.elements();
        java.util.Properties properties30 = new java.util.Properties(properties22);
        boolean boolean32 = properties22.contains((java.lang.Object) (byte) 100);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties33 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        int int34 = atomikosProperties33.getMaxActives();
        atomikosProperties33.setLogBaseName("");
        atomikosProperties33.setMaxActives((-1));
        java.lang.Object obj39 = properties22.remove((java.lang.Object) atomikosProperties33);
        boolean boolean40 = properties2.containsKey((java.lang.Object) properties22);
        java.io.OutputStream outputStream41 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties22.storeToXML(outputStream41, "{=}");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(obj5);
        org.junit.Assert.assertEquals(obj5.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj5), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj5), "{}");
        org.junit.Assert.assertNull(obj8);
        org.junit.Assert.assertNull(obj15);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 0 + "'", int17 == 0);
        org.junit.Assert.assertNull(obj24);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(objEnumeration29);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 50 + "'", int34 == 50);
        org.junit.Assert.assertNull(obj39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
    }

    @Test
    public void test1073() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1073");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Properties properties2 = new java.util.Properties(properties0);
        java.util.Properties properties3 = null;
        java.util.Properties properties4 = new java.util.Properties(properties3);
        java.lang.Object obj6 = properties2.put((java.lang.Object) properties4, (java.lang.Object) (short) 1);
        properties4.clear();
        int int8 = properties4.size();
        java.lang.Object obj11 = properties4.setProperty("hi!", "hi!");
        java.lang.Object obj14 = properties4.setProperty("tmlog", "tmlog");
        java.io.OutputStream outputStream15 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties4.store(outputStream15, "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(obj6);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertNull(obj11);
        org.junit.Assert.assertNull(obj14);
    }

    @Test
    public void test1074() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1074");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setDefaultJtaTimeout((long) (byte) 10);
        long long3 = atomikosProperties0.getDefaultJtaTimeout();
        atomikosProperties0.setTransactionManagerUniqueName("hi!");
        atomikosProperties0.setLogBaseName("tmlog");
        atomikosProperties0.setLogBaseName("");
        java.lang.String str10 = atomikosProperties0.getTransactionManagerUniqueName();
        long long11 = atomikosProperties0.getCheckpointInterval();
        atomikosProperties0.setForceShutdownOnVmExit(false);
        org.junit.Assert.assertTrue("'" + long3 + "' != '" + 10L + "'", long3 == 10L);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "hi!" + "'", str10, "hi!");
        org.junit.Assert.assertTrue("'" + long11 + "' != '" + 500L + "'", long11 == 500L);
    }

    @Test
    public void test1075() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1075");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Properties properties2 = new java.util.Properties(properties0);
        java.util.Properties properties3 = null;
        java.util.Properties properties4 = new java.util.Properties(properties3);
        java.lang.Object obj6 = properties2.put((java.lang.Object) properties4, (java.lang.Object) (short) 1);
        boolean boolean7 = properties2.isEmpty();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties8 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties8.setDefaultJtaTimeout((long) (byte) 10);
        atomikosProperties8.setCheckpointInterval((long) (byte) 0);
        atomikosProperties8.setTransactionManagerUniqueName("");
        java.util.Properties properties15 = atomikosProperties8.asProperties();
        java.lang.Object obj16 = properties2.remove((java.lang.Object) properties15);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties17 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties17.setDefaultJtaTimeout((long) (byte) 10);
        atomikosProperties17.setCheckpointInterval((long) (byte) 0);
        atomikosProperties17.setTransactionManagerUniqueName("");
        java.lang.Object obj24 = properties15.remove((java.lang.Object) atomikosProperties17);
        java.util.Enumeration<java.lang.Object> objEnumeration25 = properties15.elements();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties26 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        boolean boolean27 = atomikosProperties26.isSerialJtaTransactions();
        java.util.Properties properties28 = atomikosProperties26.asProperties();
        java.util.Enumeration<java.lang.Object> objEnumeration29 = properties28.elements();
        java.lang.Object obj30 = properties28.clone();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties31 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties31.setDefaultJtaTimeout((long) (byte) 10);
        atomikosProperties31.setCheckpointInterval((long) (byte) 0);
        atomikosProperties31.setEnableLogging(true);
        atomikosProperties31.setService("");
        atomikosProperties31.setTransactionManagerUniqueName("{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.tm_unique_name=, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
        java.util.Properties properties42 = atomikosProperties31.asProperties();
        java.lang.Object obj43 = properties15.putIfAbsent((java.lang.Object) properties28, (java.lang.Object) properties42);
        // The following exception was thrown during execution in test generation
        try {
            java.util.Enumeration<?> wildcardEnumeration44 = properties15.propertyNames();
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: java.util.Properties cannot be cast to java.lang.String");
        } catch (java.lang.ClassCastException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(obj6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(properties15);
        org.junit.Assert.assertNull(obj16);
        org.junit.Assert.assertNull(obj24);
        org.junit.Assert.assertNotNull(objEnumeration25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNotNull(properties28);
        org.junit.Assert.assertNotNull(objEnumeration29);
        org.junit.Assert.assertNotNull(obj30);
// flaky:         org.junit.Assert.assertEquals(obj30.toString(), "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
// flaky:         org.junit.Assert.assertEquals(java.lang.String.valueOf(obj30), "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
// flaky:         org.junit.Assert.assertEquals(java.util.Objects.toString(obj30), "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
        org.junit.Assert.assertNotNull(properties42);
        org.junit.Assert.assertNull(obj43);
    }

    @Test
    public void test1076() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1076");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setThreadedTwoPhaseCommit(true);
        atomikosProperties0.setMaxActives((int) '#');
        java.lang.String str5 = atomikosProperties0.getLogBaseName();
        atomikosProperties0.setLogBaseDir("tmlog");
        java.lang.String str8 = atomikosProperties0.getLogBaseName();
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "tmlog" + "'", str5, "tmlog");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "tmlog" + "'", str8, "tmlog");
    }

    @Test
    public void test1077() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1077");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        int int1 = atomikosProperties0.getMaxActives();
        java.util.Properties properties2 = atomikosProperties0.asProperties();
        java.util.Properties properties3 = null;
        java.util.Properties properties4 = new java.util.Properties(properties3);
        java.util.Properties properties5 = new java.util.Properties(properties3);
        boolean boolean7 = properties5.containsValue((java.lang.Object) (short) 100);
        java.util.Properties properties8 = null;
        java.util.Properties properties9 = new java.util.Properties(properties8);
        java.util.Properties properties10 = new java.util.Properties(properties8);
        java.util.Properties properties11 = null;
        java.util.Properties properties12 = new java.util.Properties(properties11);
        java.lang.Object obj14 = properties10.put((java.lang.Object) properties12, (java.lang.Object) (short) 1);
        java.util.Enumeration<java.lang.Object> objEnumeration15 = properties12.elements();
        java.lang.Object obj16 = properties5.remove((java.lang.Object) properties12);
        java.util.Properties properties17 = null;
        java.util.Properties properties18 = new java.util.Properties(properties17);
        java.util.Properties properties19 = new java.util.Properties(properties17);
        java.util.Properties properties20 = null;
        java.util.Properties properties21 = new java.util.Properties(properties20);
        java.lang.Object obj23 = properties19.put((java.lang.Object) properties21, (java.lang.Object) (short) 1);
        java.util.Enumeration<java.lang.Object> objEnumeration24 = properties21.elements();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet25 = properties21.entrySet();
        java.util.Set<java.lang.Object> objSet26 = properties21.keySet();
        java.util.Properties properties27 = null;
        java.util.Properties properties28 = new java.util.Properties(properties27);
        java.util.Properties properties29 = new java.util.Properties(properties27);
        java.util.Properties properties30 = null;
        java.util.Properties properties31 = new java.util.Properties(properties30);
        java.lang.Object obj33 = properties29.put((java.lang.Object) properties31, (java.lang.Object) (short) 1);
        properties31.clear();
        int int35 = properties31.size();
        java.util.Properties properties36 = new java.util.Properties(properties31);
        java.util.Properties properties37 = null;
        java.util.Properties properties38 = new java.util.Properties(properties37);
        java.util.Properties properties39 = new java.util.Properties(properties37);
        java.util.Properties properties40 = null;
        java.util.Properties properties41 = new java.util.Properties(properties40);
        java.lang.Object obj43 = properties39.put((java.lang.Object) properties41, (java.lang.Object) (short) 1);
        properties41.clear();
        java.lang.String str46 = properties41.getProperty("");
        java.util.Properties properties47 = null;
        java.util.Properties properties48 = new java.util.Properties(properties47);
        java.util.Properties properties49 = new java.util.Properties(properties47);
        java.util.Properties properties50 = null;
        java.util.Properties properties51 = new java.util.Properties(properties50);
        java.lang.Object obj53 = properties49.put((java.lang.Object) properties51, (java.lang.Object) (short) 1);
        properties41.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties49);
        java.lang.Object obj55 = properties21.put((java.lang.Object) properties31, (java.lang.Object) properties49);
        java.util.Properties properties56 = null;
        java.util.Properties properties57 = new java.util.Properties(properties56);
        java.util.Properties properties58 = new java.util.Properties(properties56);
        java.util.Properties properties59 = null;
        java.util.Properties properties60 = new java.util.Properties(properties59);
        java.lang.Object obj62 = properties58.put((java.lang.Object) properties60, (java.lang.Object) (short) 1);
        java.util.Properties properties63 = new java.util.Properties(properties60);
        java.util.Properties properties64 = new java.util.Properties(properties60);
        java.util.Set<java.lang.Object> objSet65 = properties64.keySet();
        java.lang.Object obj66 = properties5.replace((java.lang.Object) properties21, (java.lang.Object) objSet65);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties67 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        int int68 = atomikosProperties67.getMaxActives();
        long long69 = atomikosProperties67.getMaxTimeout();
        java.util.Properties properties70 = atomikosProperties67.asProperties();
        atomikosProperties67.setService("hi!");
        boolean boolean73 = properties2.remove((java.lang.Object) properties5, (java.lang.Object) "hi!");
        java.lang.Object obj74 = properties2.clone();
        java.lang.Object obj75 = properties2.clone();
        java.lang.Object obj76 = properties2.clone();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties77 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties77.setDefaultJtaTimeout((long) (byte) 10);
        atomikosProperties77.setCheckpointInterval((long) (byte) 0);
        atomikosProperties77.setTransactionManagerUniqueName("");
        java.util.Properties properties84 = atomikosProperties77.asProperties();
        java.lang.String str85 = atomikosProperties77.getTransactionManagerUniqueName();
        atomikosProperties77.setDefaultJtaTimeout((long) (-1));
        java.lang.String str88 = atomikosProperties77.getService();
        long long89 = atomikosProperties77.getDefaultJtaTimeout();
        boolean boolean90 = properties2.equals((java.lang.Object) long89);
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 50 + "'", int1 == 50);
        org.junit.Assert.assertNotNull(properties2);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNull(obj14);
        org.junit.Assert.assertNotNull(objEnumeration15);
        org.junit.Assert.assertNull(obj16);
        org.junit.Assert.assertNull(obj23);
        org.junit.Assert.assertNotNull(objEnumeration24);
        org.junit.Assert.assertNotNull(objEntrySet25);
        org.junit.Assert.assertNotNull(objSet26);
        org.junit.Assert.assertNull(obj33);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 0 + "'", int35 == 0);
        org.junit.Assert.assertNull(obj43);
        org.junit.Assert.assertNull(str46);
        org.junit.Assert.assertNull(obj53);
        org.junit.Assert.assertNull(obj55);
        org.junit.Assert.assertNull(obj62);
        org.junit.Assert.assertNotNull(objSet65);
        org.junit.Assert.assertNull(obj66);
        org.junit.Assert.assertTrue("'" + int68 + "' != '" + 50 + "'", int68 == 50);
        org.junit.Assert.assertTrue("'" + long69 + "' != '" + 300000L + "'", long69 == 300000L);
        org.junit.Assert.assertNotNull(properties70);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertNotNull(obj74);
// flaky:         org.junit.Assert.assertEquals(obj74.toString(), "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
// flaky:         org.junit.Assert.assertEquals(java.lang.String.valueOf(obj74), "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
// flaky:         org.junit.Assert.assertEquals(java.util.Objects.toString(obj74), "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
        org.junit.Assert.assertNotNull(obj75);
// flaky:         org.junit.Assert.assertEquals(obj75.toString(), "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
// flaky:         org.junit.Assert.assertEquals(java.lang.String.valueOf(obj75), "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
// flaky:         org.junit.Assert.assertEquals(java.util.Objects.toString(obj75), "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
        org.junit.Assert.assertNotNull(obj76);
// flaky:         org.junit.Assert.assertEquals(obj76.toString(), "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
// flaky:         org.junit.Assert.assertEquals(java.lang.String.valueOf(obj76), "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
// flaky:         org.junit.Assert.assertEquals(java.util.Objects.toString(obj76), "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
        org.junit.Assert.assertNotNull(properties84);
        org.junit.Assert.assertEquals("'" + str85 + "' != '" + "" + "'", str85, "");
        org.junit.Assert.assertNull(str88);
        org.junit.Assert.assertTrue("'" + long89 + "' != '" + (-1L) + "'", long89 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + false + "'", boolean90 == false);
    }

    @Test
    public void test1078() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1078");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setDefaultJtaTimeout((long) (byte) 10);
        long long3 = atomikosProperties0.getDefaultJtaTimeout();
        atomikosProperties0.setTransactionManagerUniqueName("");
        long long6 = atomikosProperties0.getMaxTimeout();
        atomikosProperties0.setService("{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=true, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=true, com.atomikos.icatch.max_actives=35, com.atomikos.icatch.log_base_name=tmlog}");
        atomikosProperties0.setService("{tmlog=}");
        org.junit.Assert.assertTrue("'" + long3 + "' != '" + 10L + "'", long3 == 10L);
        org.junit.Assert.assertTrue("'" + long6 + "' != '" + 300000L + "'", long6 == 300000L);
    }

    @Test
    public void test1079() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1079");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setDefaultJtaTimeout((long) (byte) 10);
        java.lang.String str3 = atomikosProperties0.getLogBaseDir();
        atomikosProperties0.setCheckpointInterval(500L);
        java.lang.String str6 = atomikosProperties0.getLogBaseName();
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "tmlog" + "'", str6, "tmlog");
    }

    @Test
    public void test1080() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1080");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setThreadedTwoPhaseCommit(true);
        atomikosProperties0.setMaxActives((int) (byte) 0);
        atomikosProperties0.setEnableLogging(true);
        atomikosProperties0.setForceShutdownOnVmExit(false);
        boolean boolean9 = atomikosProperties0.isEnableLogging();
        long long10 = atomikosProperties0.getMaxTimeout();
        java.lang.String str11 = atomikosProperties0.getLogBaseDir();
        boolean boolean12 = atomikosProperties0.isThreadedTwoPhaseCommit();
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertTrue("'" + long10 + "' != '" + 300000L + "'", long10 == 300000L);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
    }

    @Test
    public void test1081() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1081");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Properties properties2 = new java.util.Properties(properties0);
        java.util.Properties properties3 = null;
        java.util.Properties properties4 = new java.util.Properties(properties3);
        java.lang.Object obj6 = properties2.put((java.lang.Object) properties4, (java.lang.Object) (short) 1);
        properties4.clear();
        java.lang.String str9 = properties4.getProperty("");
        java.util.Properties properties10 = null;
        java.util.Properties properties11 = new java.util.Properties(properties10);
        java.util.Properties properties12 = new java.util.Properties(properties10);
        java.util.Properties properties13 = null;
        java.util.Properties properties14 = new java.util.Properties(properties13);
        java.lang.Object obj16 = properties12.put((java.lang.Object) properties14, (java.lang.Object) (short) 1);
        properties4.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties12);
        java.util.Enumeration<java.lang.Object> objEnumeration18 = properties4.keys();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet19 = properties4.entrySet();
        org.junit.Assert.assertNull(obj6);
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertNull(obj16);
        org.junit.Assert.assertNotNull(objEnumeration18);
        org.junit.Assert.assertNotNull(objEntrySet19);
    }

    @Test
    public void test1082() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1082");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Properties properties2 = new java.util.Properties(properties0);
        java.util.Properties properties3 = null;
        java.util.Properties properties4 = new java.util.Properties(properties3);
        java.lang.Object obj6 = properties2.put((java.lang.Object) properties4, (java.lang.Object) (short) 1);
        properties4.clear();
        java.util.Properties properties8 = null;
        java.util.Properties properties9 = new java.util.Properties(properties8);
        java.util.Properties properties10 = new java.util.Properties(properties8);
        java.util.Properties properties11 = null;
        java.util.Properties properties12 = new java.util.Properties(properties11);
        java.lang.Object obj14 = properties10.put((java.lang.Object) properties12, (java.lang.Object) (short) 1);
        java.util.Collection<java.lang.Object> objCollection15 = properties12.values();
        boolean boolean16 = properties4.containsKey((java.lang.Object) objCollection15);
        boolean boolean17 = properties4.isEmpty();
        java.util.Properties properties18 = new java.util.Properties(properties4);
        java.io.Reader reader19 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties18.load(reader19);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(obj6);
        org.junit.Assert.assertNull(obj14);
        org.junit.Assert.assertNotNull(objCollection15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
    }

    @Test
    public void test1083() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1083");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Properties properties2 = new java.util.Properties(properties0);
        java.util.Properties properties3 = null;
        java.util.Properties properties4 = new java.util.Properties(properties3);
        java.lang.Object obj6 = properties2.put((java.lang.Object) properties4, (java.lang.Object) (short) 1);
        boolean boolean7 = properties2.isEmpty();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties8 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties8.setDefaultJtaTimeout((long) (byte) 10);
        atomikosProperties8.setCheckpointInterval((long) (byte) 0);
        atomikosProperties8.setTransactionManagerUniqueName("");
        java.util.Properties properties15 = atomikosProperties8.asProperties();
        java.lang.Object obj16 = properties2.remove((java.lang.Object) properties15);
        java.util.Properties properties17 = null;
        java.util.Properties properties18 = new java.util.Properties(properties17);
        java.util.Properties properties19 = new java.util.Properties(properties17);
        java.util.Properties properties20 = null;
        java.util.Properties properties21 = new java.util.Properties(properties20);
        java.lang.Object obj23 = properties19.put((java.lang.Object) properties21, (java.lang.Object) (short) 1);
        java.util.Properties properties24 = new java.util.Properties(properties21);
        java.util.Properties properties25 = new java.util.Properties(properties21);
        java.util.Set<java.lang.Object> objSet26 = properties25.keySet();
        java.util.Properties properties27 = new java.util.Properties(properties25);
        int int28 = properties27.size();
        java.util.Properties properties29 = null;
        java.util.Properties properties30 = new java.util.Properties(properties29);
        java.util.Properties properties31 = new java.util.Properties(properties29);
        java.util.Properties properties32 = null;
        java.util.Properties properties33 = new java.util.Properties(properties32);
        java.lang.Object obj35 = properties31.put((java.lang.Object) properties33, (java.lang.Object) (short) 1);
        java.util.Properties properties37 = null;
        java.util.Properties properties38 = new java.util.Properties(properties37);
        java.util.Properties properties39 = new java.util.Properties(properties37);
        java.util.Properties properties40 = null;
        java.util.Properties properties41 = new java.util.Properties(properties40);
        java.lang.Object obj43 = properties39.put((java.lang.Object) properties41, (java.lang.Object) (short) 1);
        boolean boolean44 = properties33.remove((java.lang.Object) false, (java.lang.Object) (short) 1);
        java.util.Set<java.lang.String> strSet45 = properties33.stringPropertyNames();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties46 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties46.setDefaultJtaTimeout((long) (byte) 10);
        long long49 = atomikosProperties46.getDefaultJtaTimeout();
        java.lang.Object obj50 = properties33.get((java.lang.Object) atomikosProperties46);
        atomikosProperties46.setCheckpointInterval((long) (short) 100);
        java.util.Properties properties53 = atomikosProperties46.asProperties();
        java.lang.String str54 = atomikosProperties46.getLogBaseName();
        atomikosProperties46.setLogBaseDir("{}");
        java.util.Properties properties57 = null;
        java.util.Properties properties58 = new java.util.Properties(properties57);
        int int59 = properties58.size();
        java.lang.Object obj60 = properties27.getOrDefault((java.lang.Object) atomikosProperties46, (java.lang.Object) properties58);
        atomikosProperties46.setLogBaseName("hi!");
        boolean boolean63 = properties2.equals((java.lang.Object) "hi!");
        java.io.Writer writer64 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties2.store(writer64, "");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(obj6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(properties15);
        org.junit.Assert.assertNull(obj16);
        org.junit.Assert.assertNull(obj23);
        org.junit.Assert.assertNotNull(objSet26);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 0 + "'", int28 == 0);
        org.junit.Assert.assertNull(obj35);
        org.junit.Assert.assertNull(obj43);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(strSet45);
        org.junit.Assert.assertTrue("'" + long49 + "' != '" + 10L + "'", long49 == 10L);
        org.junit.Assert.assertNull(obj50);
        org.junit.Assert.assertNotNull(properties53);
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "tmlog" + "'", str54, "tmlog");
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + 0 + "'", int59 == 0);
        org.junit.Assert.assertNotNull(obj60);
        org.junit.Assert.assertEquals(obj60.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj60), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj60), "{}");
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
    }

    @Test
    public void test1084() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1084");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Properties properties2 = new java.util.Properties(properties0);
        java.util.Properties properties3 = null;
        java.util.Properties properties4 = new java.util.Properties(properties3);
        java.lang.Object obj6 = properties2.put((java.lang.Object) properties4, (java.lang.Object) (short) 1);
        boolean boolean7 = properties2.isEmpty();
        java.util.Properties properties8 = null;
        java.util.Properties properties9 = new java.util.Properties(properties8);
        java.util.Properties properties10 = new java.util.Properties(properties8);
        boolean boolean11 = properties2.containsKey((java.lang.Object) properties10);
        java.util.Properties properties12 = null;
        java.util.Properties properties13 = new java.util.Properties(properties12);
        java.util.Properties properties14 = new java.util.Properties(properties12);
        java.util.Properties properties15 = null;
        java.util.Properties properties16 = new java.util.Properties(properties15);
        java.lang.Object obj18 = properties14.put((java.lang.Object) properties16, (java.lang.Object) (short) 1);
        java.util.Properties properties20 = null;
        java.util.Properties properties21 = new java.util.Properties(properties20);
        java.util.Properties properties22 = new java.util.Properties(properties20);
        java.util.Properties properties23 = null;
        java.util.Properties properties24 = new java.util.Properties(properties23);
        java.lang.Object obj26 = properties22.put((java.lang.Object) properties24, (java.lang.Object) (short) 1);
        boolean boolean27 = properties16.remove((java.lang.Object) false, (java.lang.Object) (short) 1);
        java.util.Set<java.lang.String> strSet28 = properties16.stringPropertyNames();
        boolean boolean29 = properties10.containsKey((java.lang.Object) strSet28);
        java.util.Properties properties30 = null;
        java.util.Properties properties31 = new java.util.Properties(properties30);
        java.util.Properties properties32 = new java.util.Properties(properties30);
        java.util.Properties properties33 = null;
        java.util.Properties properties34 = new java.util.Properties(properties33);
        java.lang.Object obj36 = properties32.put((java.lang.Object) properties34, (java.lang.Object) (short) 1);
        properties34.clear();
        java.lang.String str39 = properties34.getProperty("");
        java.util.Properties properties40 = null;
        java.util.Properties properties41 = new java.util.Properties(properties40);
        java.util.Properties properties42 = new java.util.Properties(properties40);
        java.util.Properties properties43 = null;
        java.util.Properties properties44 = new java.util.Properties(properties43);
        java.lang.Object obj46 = properties42.put((java.lang.Object) properties44, (java.lang.Object) (short) 1);
        properties34.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties42);
        boolean boolean48 = properties10.containsKey((java.lang.Object) properties34);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties50 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties50.setThreadedTwoPhaseCommit(true);
        boolean boolean53 = atomikosProperties50.isEnableLogging();
        java.lang.Object obj54 = properties10.put((java.lang.Object) '4', (java.lang.Object) boolean53);
        java.util.Properties properties55 = new java.util.Properties(properties10);
        boolean boolean56 = properties10.isEmpty();
        java.util.Properties properties57 = new java.util.Properties(properties10);
        java.io.InputStream inputStream58 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties57.loadFromXML(inputStream58);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(obj6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNull(obj18);
        org.junit.Assert.assertNull(obj26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(strSet28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNull(obj36);
        org.junit.Assert.assertNull(str39);
        org.junit.Assert.assertNull(obj46);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertNull(obj54);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
    }

    @Test
    public void test1085() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1085");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Properties properties2 = new java.util.Properties(properties0);
        java.util.Properties properties3 = null;
        java.util.Properties properties4 = new java.util.Properties(properties3);
        java.lang.Object obj6 = properties2.put((java.lang.Object) properties4, (java.lang.Object) (short) 1);
        properties4.clear();
        int int8 = properties4.size();
        java.util.Properties properties9 = null;
        java.util.Properties properties10 = new java.util.Properties(properties9);
        java.util.Properties properties11 = new java.util.Properties(properties9);
        java.util.Properties properties12 = null;
        java.util.Properties properties13 = new java.util.Properties(properties12);
        java.lang.Object obj15 = properties11.put((java.lang.Object) properties13, (java.lang.Object) (short) 1);
        java.util.Properties properties16 = new java.util.Properties(properties13);
        java.util.Properties properties17 = new java.util.Properties(properties13);
        boolean boolean19 = properties4.remove((java.lang.Object) properties13, (java.lang.Object) 10.0f);
        java.util.Enumeration<java.lang.Object> objEnumeration20 = properties13.elements();
        java.util.Properties properties21 = new java.util.Properties(properties13);
        boolean boolean23 = properties13.contains((java.lang.Object) (byte) 100);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties24 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        int int25 = atomikosProperties24.getMaxActives();
        atomikosProperties24.setLogBaseName("");
        atomikosProperties24.setMaxActives((-1));
        java.lang.Object obj30 = properties13.remove((java.lang.Object) atomikosProperties24);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties31 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties31.setDefaultJtaTimeout((long) (byte) 10);
        long long34 = atomikosProperties31.getDefaultJtaTimeout();
        java.lang.String str35 = atomikosProperties31.getTransactionManagerUniqueName();
        atomikosProperties31.setThreadedTwoPhaseCommit(true);
        java.util.Properties properties38 = atomikosProperties31.asProperties();
        java.lang.Class<?> wildcardClass39 = atomikosProperties31.getClass();
        boolean boolean40 = properties13.equals((java.lang.Object) wildcardClass39);
        java.lang.Object obj41 = properties13.clone();
        java.io.Reader reader42 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties13.load(reader42);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(obj6);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertNull(obj15);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(objEnumeration20);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 50 + "'", int25 == 50);
        org.junit.Assert.assertNull(obj30);
        org.junit.Assert.assertTrue("'" + long34 + "' != '" + 10L + "'", long34 == 10L);
        org.junit.Assert.assertNull(str35);
        org.junit.Assert.assertNotNull(properties38);
        org.junit.Assert.assertNotNull(wildcardClass39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(obj41);
        org.junit.Assert.assertEquals(obj41.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj41), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj41), "{}");
    }

    @Test
    public void test1086() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1086");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Properties properties2 = new java.util.Properties(properties0);
        java.util.Properties properties3 = null;
        java.util.Properties properties4 = new java.util.Properties(properties3);
        java.lang.Object obj6 = properties2.put((java.lang.Object) properties4, (java.lang.Object) (short) 1);
        properties4.clear();
        java.lang.String str9 = properties4.getProperty("");
        java.util.Properties properties10 = null;
        java.util.Properties properties11 = new java.util.Properties(properties10);
        java.util.Properties properties12 = new java.util.Properties(properties10);
        java.util.Properties properties13 = null;
        java.util.Properties properties14 = new java.util.Properties(properties13);
        java.lang.Object obj16 = properties12.put((java.lang.Object) properties14, (java.lang.Object) (short) 1);
        properties4.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties12);
        java.util.Enumeration<java.lang.Object> objEnumeration18 = properties4.keys();
        java.util.Properties properties19 = null;
        java.util.Properties properties20 = new java.util.Properties(properties19);
        java.util.Properties properties21 = new java.util.Properties(properties19);
        java.util.Properties properties22 = null;
        java.util.Properties properties23 = new java.util.Properties(properties22);
        java.lang.Object obj25 = properties21.put((java.lang.Object) properties23, (java.lang.Object) (short) 1);
        java.util.Enumeration<java.lang.Object> objEnumeration26 = properties23.elements();
        java.util.Properties properties27 = new java.util.Properties(properties23);
        boolean boolean28 = properties23.isEmpty();
        java.lang.Object obj29 = properties4.remove((java.lang.Object) boolean28);
        java.util.Properties properties30 = null;
        java.util.Properties properties31 = new java.util.Properties(properties30);
        java.util.Properties properties32 = new java.util.Properties(properties30);
        java.util.Properties properties33 = null;
        java.util.Properties properties34 = new java.util.Properties(properties33);
        java.lang.Object obj36 = properties32.put((java.lang.Object) properties34, (java.lang.Object) (short) 1);
        boolean boolean37 = properties32.isEmpty();
        java.util.Properties properties38 = null;
        java.util.Properties properties39 = new java.util.Properties(properties38);
        java.util.Properties properties40 = new java.util.Properties(properties38);
        boolean boolean41 = properties32.containsKey((java.lang.Object) properties40);
        java.util.Properties properties42 = null;
        java.util.Properties properties43 = new java.util.Properties(properties42);
        java.util.Properties properties44 = new java.util.Properties(properties42);
        java.util.Properties properties45 = null;
        java.util.Properties properties46 = new java.util.Properties(properties45);
        java.lang.Object obj48 = properties44.put((java.lang.Object) properties46, (java.lang.Object) (short) 1);
        java.util.Properties properties50 = null;
        java.util.Properties properties51 = new java.util.Properties(properties50);
        java.util.Properties properties52 = new java.util.Properties(properties50);
        java.util.Properties properties53 = null;
        java.util.Properties properties54 = new java.util.Properties(properties53);
        java.lang.Object obj56 = properties52.put((java.lang.Object) properties54, (java.lang.Object) (short) 1);
        boolean boolean57 = properties46.remove((java.lang.Object) false, (java.lang.Object) (short) 1);
        java.util.Set<java.lang.String> strSet58 = properties46.stringPropertyNames();
        boolean boolean59 = properties40.containsKey((java.lang.Object) strSet58);
        java.util.Properties properties60 = null;
        java.util.Properties properties61 = new java.util.Properties(properties60);
        java.util.Properties properties62 = new java.util.Properties(properties60);
        java.util.Properties properties63 = null;
        java.util.Properties properties64 = new java.util.Properties(properties63);
        java.lang.Object obj66 = properties62.put((java.lang.Object) properties64, (java.lang.Object) (short) 1);
        properties64.clear();
        java.lang.String str69 = properties64.getProperty("");
        java.util.Properties properties70 = null;
        java.util.Properties properties71 = new java.util.Properties(properties70);
        java.util.Properties properties72 = new java.util.Properties(properties70);
        java.util.Properties properties73 = null;
        java.util.Properties properties74 = new java.util.Properties(properties73);
        java.lang.Object obj76 = properties72.put((java.lang.Object) properties74, (java.lang.Object) (short) 1);
        properties64.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties72);
        boolean boolean78 = properties40.containsKey((java.lang.Object) properties64);
        int int79 = properties40.size();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties80 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        boolean boolean81 = atomikosProperties80.isForceShutdownOnVmExit();
        java.lang.String str82 = atomikosProperties80.getLogBaseName();
        java.lang.String str83 = atomikosProperties80.getService();
        atomikosProperties80.setLogBaseName("{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.tm_unique_name=, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
        atomikosProperties80.setSerialJtaTransactions(false);
        java.lang.Object obj88 = properties4.putIfAbsent((java.lang.Object) properties40, (java.lang.Object) false);
        java.io.OutputStream outputStream89 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties4.store(outputStream89, "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=0, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.tm_unique_name=, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(obj6);
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertNull(obj16);
        org.junit.Assert.assertNotNull(objEnumeration18);
        org.junit.Assert.assertNull(obj25);
        org.junit.Assert.assertNotNull(objEnumeration26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNull(obj29);
        org.junit.Assert.assertNull(obj36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertNull(obj48);
        org.junit.Assert.assertNull(obj56);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertNotNull(strSet58);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertNull(obj66);
        org.junit.Assert.assertNull(str69);
        org.junit.Assert.assertNull(obj76);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + false + "'", boolean78 == false);
        org.junit.Assert.assertTrue("'" + int79 + "' != '" + 0 + "'", int79 == 0);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + false + "'", boolean81 == false);
        org.junit.Assert.assertEquals("'" + str82 + "' != '" + "tmlog" + "'", str82, "tmlog");
        org.junit.Assert.assertNull(str83);
        org.junit.Assert.assertEquals("'" + obj88 + "' != '" + (short) 1 + "'", obj88, (short) 1);
    }

    @Test
    public void test1087() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1087");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Properties properties2 = new java.util.Properties(properties0);
        java.util.Properties properties3 = null;
        java.util.Properties properties4 = new java.util.Properties(properties3);
        java.lang.Object obj6 = properties2.put((java.lang.Object) properties4, (java.lang.Object) (short) 1);
        java.util.Properties properties8 = null;
        java.util.Properties properties9 = new java.util.Properties(properties8);
        java.util.Properties properties10 = new java.util.Properties(properties8);
        java.util.Properties properties11 = null;
        java.util.Properties properties12 = new java.util.Properties(properties11);
        java.lang.Object obj14 = properties10.put((java.lang.Object) properties12, (java.lang.Object) (short) 1);
        boolean boolean15 = properties4.remove((java.lang.Object) false, (java.lang.Object) (short) 1);
        java.util.Set<java.lang.String> strSet16 = properties4.stringPropertyNames();
        java.util.Enumeration<java.lang.Object> objEnumeration17 = properties4.elements();
        properties4.clear();
        java.io.OutputStream outputStream19 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties4.storeToXML(outputStream19, "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=52, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.tm_unique_name=, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(obj6);
        org.junit.Assert.assertNull(obj14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(strSet16);
        org.junit.Assert.assertNotNull(objEnumeration17);
    }

    @Test
    public void test1088() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1088");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Properties properties2 = new java.util.Properties(properties0);
        java.util.Properties properties3 = null;
        java.util.Properties properties4 = new java.util.Properties(properties3);
        java.lang.Object obj6 = properties2.put((java.lang.Object) properties4, (java.lang.Object) (short) 1);
        java.util.Properties properties8 = null;
        java.util.Properties properties9 = new java.util.Properties(properties8);
        java.util.Properties properties10 = new java.util.Properties(properties8);
        java.util.Properties properties11 = null;
        java.util.Properties properties12 = new java.util.Properties(properties11);
        java.lang.Object obj14 = properties10.put((java.lang.Object) properties12, (java.lang.Object) (short) 1);
        boolean boolean15 = properties4.remove((java.lang.Object) false, (java.lang.Object) (short) 1);
        java.util.Set<java.lang.String> strSet16 = properties4.stringPropertyNames();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties17 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties17.setDefaultJtaTimeout((long) (byte) 10);
        atomikosProperties17.setCheckpointInterval((long) (byte) 0);
        atomikosProperties17.setTransactionManagerUniqueName("");
        boolean boolean24 = atomikosProperties17.isEnableLogging();
        atomikosProperties17.setSerialJtaTransactions(false);
        atomikosProperties17.setLogBaseDir("");
        java.util.Properties properties29 = null;
        java.util.Properties properties30 = new java.util.Properties(properties29);
        java.util.Properties properties31 = new java.util.Properties(properties29);
        java.util.Properties properties32 = null;
        java.util.Properties properties33 = new java.util.Properties(properties32);
        java.lang.Object obj35 = properties31.put((java.lang.Object) properties33, (java.lang.Object) (short) 1);
        java.util.Properties properties36 = new java.util.Properties(properties33);
        boolean boolean37 = properties4.remove((java.lang.Object) "", (java.lang.Object) properties36);
        java.util.Properties properties38 = null;
        java.util.Properties properties39 = new java.util.Properties(properties38);
        java.util.Properties properties40 = new java.util.Properties(properties38);
        java.lang.Object obj41 = properties40.clone();
        boolean boolean42 = properties4.contains(obj41);
        java.util.Collection<java.lang.Object> objCollection43 = properties4.values();
        java.lang.String str45 = properties4.getProperty("{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=0, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.tm_unique_name=, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
        java.util.Set<java.lang.Object> objSet46 = properties4.keySet();
        java.io.Reader reader47 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties4.load(reader47);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(obj6);
        org.junit.Assert.assertNull(obj14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(strSet16);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNull(obj35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(obj41);
        org.junit.Assert.assertEquals(obj41.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj41), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj41), "{}");
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(objCollection43);
        org.junit.Assert.assertNull(str45);
        org.junit.Assert.assertNotNull(objSet46);
    }

    @Test
    public void test1089() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1089");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setDefaultJtaTimeout((long) (byte) 10);
        long long3 = atomikosProperties0.getDefaultJtaTimeout();
        atomikosProperties0.setTransactionManagerUniqueName("");
        boolean boolean6 = atomikosProperties0.isEnableLogging();
        atomikosProperties0.setDefaultJtaTimeout((long) '4');
        boolean boolean9 = atomikosProperties0.isSerialJtaTransactions();
        java.util.Properties properties10 = atomikosProperties0.asProperties();
        java.util.Properties properties11 = null;
        java.util.Properties properties12 = new java.util.Properties(properties11);
        java.util.Properties properties13 = new java.util.Properties(properties11);
        java.util.Properties properties14 = null;
        java.util.Properties properties15 = new java.util.Properties(properties14);
        java.lang.Object obj17 = properties13.put((java.lang.Object) properties15, (java.lang.Object) (short) 1);
        boolean boolean18 = properties13.isEmpty();
        java.util.Properties properties19 = null;
        java.util.Properties properties20 = new java.util.Properties(properties19);
        java.util.Properties properties21 = new java.util.Properties(properties19);
        boolean boolean22 = properties13.containsKey((java.lang.Object) properties21);
        java.util.Properties properties23 = new java.util.Properties(properties21);
        java.lang.Object obj24 = properties23.clone();
        java.util.Properties properties26 = null;
        java.util.Properties properties27 = new java.util.Properties(properties26);
        java.util.Properties properties28 = new java.util.Properties(properties26);
        java.util.Properties properties29 = null;
        java.util.Properties properties30 = new java.util.Properties(properties29);
        java.lang.Object obj32 = properties28.put((java.lang.Object) properties30, (java.lang.Object) (short) 1);
        boolean boolean33 = properties28.isEmpty();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties34 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties34.setDefaultJtaTimeout((long) (byte) 10);
        atomikosProperties34.setCheckpointInterval((long) (byte) 0);
        atomikosProperties34.setTransactionManagerUniqueName("");
        java.util.Properties properties41 = atomikosProperties34.asProperties();
        java.lang.Object obj42 = properties28.remove((java.lang.Object) properties41);
        java.lang.Object obj43 = properties23.putIfAbsent((java.lang.Object) 1L, (java.lang.Object) properties28);
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet44 = properties23.entrySet();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties45 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        boolean boolean46 = atomikosProperties45.isForceShutdownOnVmExit();
        java.util.Properties properties47 = atomikosProperties45.asProperties();
        java.util.Properties properties48 = null;
        java.util.Properties properties49 = new java.util.Properties(properties48);
        java.util.Properties properties50 = new java.util.Properties(properties48);
        java.util.Properties properties51 = null;
        java.util.Properties properties52 = new java.util.Properties(properties51);
        java.lang.Object obj54 = properties50.put((java.lang.Object) properties52, (java.lang.Object) (short) 1);
        properties52.clear();
        int int56 = properties52.size();
        java.util.Properties properties57 = null;
        java.util.Properties properties58 = new java.util.Properties(properties57);
        java.util.Properties properties59 = new java.util.Properties(properties57);
        java.util.Properties properties60 = null;
        java.util.Properties properties61 = new java.util.Properties(properties60);
        java.lang.Object obj63 = properties59.put((java.lang.Object) properties61, (java.lang.Object) (short) 1);
        java.util.Properties properties64 = new java.util.Properties(properties61);
        java.util.Properties properties65 = new java.util.Properties(properties61);
        boolean boolean67 = properties52.remove((java.lang.Object) properties61, (java.lang.Object) 10.0f);
        boolean boolean68 = properties47.containsKey((java.lang.Object) 10.0f);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties70 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties70.setDefaultJtaTimeout((long) (byte) 10);
        atomikosProperties70.setCheckpointInterval((long) (byte) 0);
        atomikosProperties70.setEnableLogging(true);
        java.lang.Object obj77 = properties47.getOrDefault((java.lang.Object) (byte) 0, (java.lang.Object) true);
        java.util.Properties properties78 = new java.util.Properties(properties47);
        boolean boolean79 = properties23.containsKey((java.lang.Object) properties78);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties80 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties80.setDefaultJtaTimeout((long) (byte) 10);
        long long83 = atomikosProperties80.getDefaultJtaTimeout();
        atomikosProperties80.setTransactionManagerUniqueName("");
        boolean boolean86 = atomikosProperties80.isEnableLogging();
        java.lang.String str87 = atomikosProperties80.getLogBaseDir();
        java.util.Properties properties88 = atomikosProperties80.asProperties();
        boolean boolean89 = atomikosProperties80.isEnableLogging();
        java.lang.String str90 = atomikosProperties80.getLogBaseName();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties91 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties91.setDefaultJtaTimeout((long) (byte) 10);
        long long94 = atomikosProperties91.getDefaultJtaTimeout();
        atomikosProperties91.setTransactionManagerUniqueName("");
        java.lang.String str97 = atomikosProperties91.getTransactionManagerUniqueName();
        boolean boolean98 = properties10.replace((java.lang.Object) properties78, (java.lang.Object) atomikosProperties80, (java.lang.Object) str97);
        boolean boolean99 = properties78.isEmpty();
        org.junit.Assert.assertTrue("'" + long3 + "' != '" + 10L + "'", long3 == 10L);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertNotNull(properties10);
        org.junit.Assert.assertNull(obj17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNotNull(obj24);
        org.junit.Assert.assertEquals(obj24.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj24), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj24), "{}");
        org.junit.Assert.assertNull(obj32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(properties41);
        org.junit.Assert.assertNull(obj42);
        org.junit.Assert.assertNull(obj43);
        org.junit.Assert.assertNotNull(objEntrySet44);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(properties47);
        org.junit.Assert.assertNull(obj54);
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + 0 + "'", int56 == 0);
        org.junit.Assert.assertNull(obj63);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertEquals("'" + obj77 + "' != '" + true + "'", obj77, true);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + false + "'", boolean79 == false);
        org.junit.Assert.assertTrue("'" + long83 + "' != '" + 10L + "'", long83 == 10L);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + true + "'", boolean86 == true);
        org.junit.Assert.assertNull(str87);
        org.junit.Assert.assertNotNull(properties88);
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + true + "'", boolean89 == true);
        org.junit.Assert.assertEquals("'" + str90 + "' != '" + "tmlog" + "'", str90, "tmlog");
        org.junit.Assert.assertTrue("'" + long94 + "' != '" + 10L + "'", long94 == 10L);
        org.junit.Assert.assertEquals("'" + str97 + "' != '" + "" + "'", str97, "");
        org.junit.Assert.assertTrue("'" + boolean98 + "' != '" + false + "'", boolean98 == false);
        org.junit.Assert.assertTrue("'" + boolean99 + "' != '" + true + "'", boolean99 == true);
    }

    @Test
    public void test1090() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1090");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Properties properties2 = new java.util.Properties(properties0);
        boolean boolean4 = properties2.containsValue((java.lang.Object) (short) 100);
        java.util.Properties properties5 = null;
        java.util.Properties properties6 = new java.util.Properties(properties5);
        java.util.Properties properties7 = new java.util.Properties(properties5);
        java.util.Properties properties8 = null;
        java.util.Properties properties9 = new java.util.Properties(properties8);
        java.lang.Object obj11 = properties7.put((java.lang.Object) properties9, (java.lang.Object) (short) 1);
        java.util.Enumeration<java.lang.Object> objEnumeration12 = properties9.elements();
        java.lang.Object obj13 = properties2.remove((java.lang.Object) properties9);
        java.lang.Object obj16 = properties9.setProperty("", "");
        java.util.Enumeration<java.lang.Object> objEnumeration17 = properties9.elements();
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNull(obj11);
        org.junit.Assert.assertNotNull(objEnumeration12);
        org.junit.Assert.assertNull(obj13);
        org.junit.Assert.assertNull(obj16);
        org.junit.Assert.assertNotNull(objEnumeration17);
    }

    @Test
    public void test1091() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1091");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setDefaultJtaTimeout((long) (byte) 10);
        atomikosProperties0.setCheckpointInterval((long) (byte) 0);
        atomikosProperties0.setTransactionManagerUniqueName("");
        java.util.Properties properties7 = atomikosProperties0.asProperties();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties8 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties8.setThreadedTwoPhaseCommit(true);
        atomikosProperties8.setMaxActives((int) '#');
        atomikosProperties8.setForceShutdownOnVmExit(true);
        java.lang.String str15 = atomikosProperties8.getLogBaseDir();
        java.lang.Object obj16 = properties7.remove((java.lang.Object) atomikosProperties8);
        java.io.PrintWriter printWriter17 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties7.list(printWriter17);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(properties7);
        org.junit.Assert.assertNull(str15);
        org.junit.Assert.assertNull(obj16);
    }

    @Test
    public void test1092() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1092");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setDefaultJtaTimeout((long) (byte) 10);
        atomikosProperties0.setCheckpointInterval((long) (byte) 0);
        atomikosProperties0.setTransactionManagerUniqueName("");
        java.util.Properties properties7 = atomikosProperties0.asProperties();
        java.lang.String str8 = atomikosProperties0.getLogBaseName();
        atomikosProperties0.setCheckpointInterval(100L);
        java.lang.String str11 = atomikosProperties0.getTransactionManagerUniqueName();
        atomikosProperties0.setLogBaseName("{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.tm_unique_name=, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
        atomikosProperties0.setThreadedTwoPhaseCommit(true);
        java.util.Properties properties16 = atomikosProperties0.asProperties();
        java.lang.String str17 = properties16.toString();
        java.util.Properties properties18 = new java.util.Properties(properties16);
        java.lang.Class<?> wildcardClass19 = properties18.getClass();
        org.junit.Assert.assertNotNull(properties7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "tmlog" + "'", str8, "tmlog");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertNotNull(properties16);
// flaky:         org.junit.Assert.assertEquals("'" + str17 + "' != '" + "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=100, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=true, com.atomikos.icatch.tm_unique_name=, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name={com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.tm_unique_name=, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}}" + "'", str17, "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=100, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=true, com.atomikos.icatch.tm_unique_name=, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name={com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.tm_unique_name=, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}}");
        org.junit.Assert.assertNotNull(wildcardClass19);
    }

    @Test
    public void test1093() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1093");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setDefaultJtaTimeout((long) (byte) 10);
        atomikosProperties0.setSerialJtaTransactions(false);
        atomikosProperties0.setService("hi!");
        atomikosProperties0.setService("{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=0, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.tm_unique_name=, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
        atomikosProperties0.setMaxActives((int) (byte) 1);
    }

    @Test
    public void test1094() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1094");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        int int1 = atomikosProperties0.getMaxActives();
        long long2 = atomikosProperties0.getMaxTimeout();
        java.util.Properties properties3 = atomikosProperties0.asProperties();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties4 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties4.setDefaultJtaTimeout((long) (byte) 10);
        long long7 = atomikosProperties4.getDefaultJtaTimeout();
        atomikosProperties4.setTransactionManagerUniqueName("hi!");
        atomikosProperties4.setLogBaseName("tmlog");
        atomikosProperties4.setTransactionManagerUniqueName("{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=0, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.tm_unique_name=, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
        atomikosProperties4.setThreadedTwoPhaseCommit(false);
        java.lang.Object obj16 = properties3.get((java.lang.Object) false);
        java.lang.Object obj19 = properties3.setProperty("{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.tm_unique_name=, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}", "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.tm_unique_name=, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
        java.util.Properties properties20 = new java.util.Properties(properties3);
        java.io.Writer writer21 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties3.store(writer21, "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=0, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.tm_unique_name=, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 50 + "'", int1 == 50);
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + 300000L + "'", long2 == 300000L);
        org.junit.Assert.assertNotNull(properties3);
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + 10L + "'", long7 == 10L);
        org.junit.Assert.assertNull(obj16);
        org.junit.Assert.assertNull(obj19);
    }

    @Test
    public void test1095() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1095");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Properties properties2 = new java.util.Properties(properties0);
        java.util.Properties properties3 = null;
        java.util.Properties properties4 = new java.util.Properties(properties3);
        java.lang.Object obj6 = properties2.put((java.lang.Object) properties4, (java.lang.Object) (short) 1);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties7 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties7.setThreadedTwoPhaseCommit(true);
        atomikosProperties7.setMaxActives((int) (byte) 0);
        boolean boolean12 = properties2.containsValue((java.lang.Object) atomikosProperties7);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties13 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties13.setDefaultJtaTimeout((long) (byte) 10);
        atomikosProperties13.setCheckpointInterval((long) (byte) 0);
        atomikosProperties13.setTransactionManagerUniqueName("");
        boolean boolean20 = atomikosProperties13.isEnableLogging();
        atomikosProperties13.setLogBaseDir("hi!");
        atomikosProperties13.setForceShutdownOnVmExit(false);
        java.util.Properties properties25 = null;
        java.util.Properties properties26 = new java.util.Properties(properties25);
        java.util.Properties properties27 = new java.util.Properties(properties25);
        java.util.Properties properties28 = null;
        java.util.Properties properties29 = new java.util.Properties(properties28);
        java.lang.Object obj31 = properties27.put((java.lang.Object) properties29, (java.lang.Object) (short) 1);
        boolean boolean32 = properties27.isEmpty();
        java.util.Properties properties33 = null;
        java.util.Properties properties34 = new java.util.Properties(properties33);
        java.util.Properties properties35 = new java.util.Properties(properties33);
        boolean boolean36 = properties27.containsKey((java.lang.Object) properties35);
        java.util.Properties properties37 = new java.util.Properties(properties35);
        java.util.Properties properties38 = new java.util.Properties(properties37);
        java.lang.Object obj39 = properties2.put((java.lang.Object) atomikosProperties13, (java.lang.Object) properties37);
        java.lang.String str40 = atomikosProperties13.getLogBaseDir();
        java.lang.String str41 = atomikosProperties13.getLogBaseDir();
        org.junit.Assert.assertNull(obj6);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNull(obj31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNull(obj39);
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "hi!" + "'", str40, "hi!");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "hi!" + "'", str41, "hi!");
    }

    @Test
    public void test1096() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1096");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Properties properties2 = new java.util.Properties(properties0);
        java.util.Properties properties3 = null;
        java.util.Properties properties4 = new java.util.Properties(properties3);
        java.lang.Object obj6 = properties2.put((java.lang.Object) properties4, (java.lang.Object) (short) 1);
        properties4.clear();
        int int8 = properties4.size();
        java.util.Properties properties9 = null;
        java.util.Properties properties10 = new java.util.Properties(properties9);
        java.util.Properties properties11 = new java.util.Properties(properties9);
        java.util.Properties properties12 = null;
        java.util.Properties properties13 = new java.util.Properties(properties12);
        java.lang.Object obj15 = properties11.put((java.lang.Object) properties13, (java.lang.Object) (short) 1);
        java.util.Properties properties16 = new java.util.Properties(properties13);
        java.util.Properties properties17 = new java.util.Properties(properties13);
        boolean boolean19 = properties4.remove((java.lang.Object) properties13, (java.lang.Object) 10.0f);
        java.util.Enumeration<java.lang.Object> objEnumeration20 = properties13.elements();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties21 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties21.setDefaultJtaTimeout((long) (byte) 10);
        atomikosProperties21.setCheckpointInterval((long) (byte) 0);
        long long26 = atomikosProperties21.getMaxTimeout();
        atomikosProperties21.setSerialJtaTransactions(true);
        java.util.Properties properties29 = new java.util.Properties();
        java.util.Enumeration<?> wildcardEnumeration30 = properties29.propertyNames();
        java.lang.Object obj31 = properties13.replace((java.lang.Object) atomikosProperties21, (java.lang.Object) properties29);
        java.lang.String str32 = properties13.toString();
        java.io.OutputStream outputStream33 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties13.save(outputStream33, "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=0, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog, {}={}}");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(obj6);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertNull(obj15);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(objEnumeration20);
        org.junit.Assert.assertTrue("'" + long26 + "' != '" + 300000L + "'", long26 == 300000L);
        org.junit.Assert.assertNotNull(wildcardEnumeration30);
        org.junit.Assert.assertNull(obj31);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "{}" + "'", str32, "{}");
    }

    @Test
    public void test1097() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1097");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Properties properties2 = new java.util.Properties(properties0);
        java.util.Properties properties3 = null;
        java.util.Properties properties4 = new java.util.Properties(properties3);
        java.lang.Object obj6 = properties2.put((java.lang.Object) properties4, (java.lang.Object) (short) 1);
        java.util.Properties properties8 = null;
        java.util.Properties properties9 = new java.util.Properties(properties8);
        java.util.Properties properties10 = new java.util.Properties(properties8);
        java.util.Properties properties11 = null;
        java.util.Properties properties12 = new java.util.Properties(properties11);
        java.lang.Object obj14 = properties10.put((java.lang.Object) properties12, (java.lang.Object) (short) 1);
        boolean boolean15 = properties4.remove((java.lang.Object) false, (java.lang.Object) (short) 1);
        java.lang.Object obj17 = properties4.remove((java.lang.Object) '#');
        java.util.Set<java.lang.Object> objSet18 = properties4.keySet();
        properties4.clear();
        java.util.Properties properties20 = null;
        java.util.Properties properties21 = new java.util.Properties(properties20);
        java.util.Properties properties22 = new java.util.Properties(properties20);
        java.util.Properties properties23 = null;
        java.util.Properties properties24 = new java.util.Properties(properties23);
        java.lang.Object obj26 = properties22.put((java.lang.Object) properties24, (java.lang.Object) (short) 1);
        java.util.Enumeration<java.lang.Object> objEnumeration27 = properties24.elements();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet28 = properties24.entrySet();
        boolean boolean29 = properties4.equals((java.lang.Object) properties24);
        java.lang.Object obj30 = properties4.clone();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties31 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties31.setDefaultJtaTimeout((long) (byte) 10);
        atomikosProperties31.setCheckpointInterval((long) (byte) 0);
        atomikosProperties31.setEnableLogging(true);
        atomikosProperties31.setThreadedTwoPhaseCommit(false);
        boolean boolean40 = atomikosProperties31.isForceShutdownOnVmExit();
        boolean boolean41 = properties4.containsKey((java.lang.Object) atomikosProperties31);
        java.util.Properties properties42 = null;
        java.util.Properties properties43 = new java.util.Properties(properties42);
        java.util.Properties properties44 = new java.util.Properties(properties42);
        java.util.Properties properties45 = null;
        java.util.Properties properties46 = new java.util.Properties(properties45);
        java.lang.Object obj48 = properties44.put((java.lang.Object) properties46, (java.lang.Object) (short) 1);
        java.util.Properties properties50 = null;
        java.util.Properties properties51 = new java.util.Properties(properties50);
        java.util.Properties properties52 = new java.util.Properties(properties50);
        java.util.Properties properties53 = null;
        java.util.Properties properties54 = new java.util.Properties(properties53);
        java.lang.Object obj56 = properties52.put((java.lang.Object) properties54, (java.lang.Object) (short) 1);
        boolean boolean57 = properties46.remove((java.lang.Object) false, (java.lang.Object) (short) 1);
        java.util.Set<java.lang.String> strSet58 = properties46.stringPropertyNames();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties59 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties59.setDefaultJtaTimeout((long) (byte) 10);
        atomikosProperties59.setCheckpointInterval((long) (byte) 0);
        atomikosProperties59.setTransactionManagerUniqueName("");
        boolean boolean66 = atomikosProperties59.isEnableLogging();
        atomikosProperties59.setSerialJtaTransactions(false);
        atomikosProperties59.setLogBaseDir("");
        java.util.Properties properties71 = null;
        java.util.Properties properties72 = new java.util.Properties(properties71);
        java.util.Properties properties73 = new java.util.Properties(properties71);
        java.util.Properties properties74 = null;
        java.util.Properties properties75 = new java.util.Properties(properties74);
        java.lang.Object obj77 = properties73.put((java.lang.Object) properties75, (java.lang.Object) (short) 1);
        java.util.Properties properties78 = new java.util.Properties(properties75);
        boolean boolean79 = properties46.remove((java.lang.Object) "", (java.lang.Object) properties78);
        java.util.Properties properties80 = null;
        java.util.Properties properties81 = new java.util.Properties(properties80);
        java.util.Properties properties82 = new java.util.Properties(properties80);
        java.lang.Object obj83 = properties82.clone();
        boolean boolean84 = properties46.contains(obj83);
        boolean boolean85 = properties4.equals((java.lang.Object) boolean84);
        java.util.Properties properties86 = new java.util.Properties(properties4);
        java.util.Properties properties87 = new java.util.Properties(properties86);
        java.io.Reader reader88 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties86.load(reader88);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(obj6);
        org.junit.Assert.assertNull(obj14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNull(obj17);
        org.junit.Assert.assertNotNull(objSet18);
        org.junit.Assert.assertNull(obj26);
        org.junit.Assert.assertNotNull(objEnumeration27);
        org.junit.Assert.assertNotNull(objEntrySet28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNotNull(obj30);
        org.junit.Assert.assertEquals(obj30.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj30), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj30), "{}");
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNull(obj48);
        org.junit.Assert.assertNull(obj56);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertNotNull(strSet58);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66 == true);
        org.junit.Assert.assertNull(obj77);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + false + "'", boolean79 == false);
        org.junit.Assert.assertNotNull(obj83);
        org.junit.Assert.assertEquals(obj83.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj83), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj83), "{}");
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + false + "'", boolean84 == false);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + false + "'", boolean85 == false);
    }

    @Test
    public void test1098() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1098");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Properties properties2 = new java.util.Properties(properties0);
        java.util.Properties properties3 = null;
        java.util.Properties properties4 = new java.util.Properties(properties3);
        java.lang.Object obj6 = properties2.put((java.lang.Object) properties4, (java.lang.Object) (short) 1);
        boolean boolean7 = properties2.isEmpty();
        properties2.clear();
        java.util.Properties properties9 = null;
        java.util.Properties properties10 = new java.util.Properties(properties9);
        java.util.Properties properties11 = new java.util.Properties(properties9);
        java.util.Properties properties12 = null;
        java.util.Properties properties13 = new java.util.Properties(properties12);
        java.lang.Object obj15 = properties11.put((java.lang.Object) properties13, (java.lang.Object) (short) 1);
        boolean boolean16 = properties11.isEmpty();
        java.util.Properties properties17 = null;
        java.util.Properties properties18 = new java.util.Properties(properties17);
        java.util.Properties properties19 = new java.util.Properties(properties17);
        boolean boolean20 = properties11.containsKey((java.lang.Object) properties19);
        java.util.Properties properties21 = new java.util.Properties(properties11);
        java.util.Properties properties22 = null;
        java.util.Properties properties23 = new java.util.Properties(properties22);
        java.util.Properties properties24 = new java.util.Properties(properties22);
        boolean boolean26 = properties24.containsValue((java.lang.Object) (short) 100);
        java.util.Properties properties27 = null;
        java.util.Properties properties28 = new java.util.Properties(properties27);
        java.util.Properties properties29 = new java.util.Properties(properties27);
        java.util.Properties properties30 = null;
        java.util.Properties properties31 = new java.util.Properties(properties30);
        java.lang.Object obj33 = properties29.put((java.lang.Object) properties31, (java.lang.Object) (short) 1);
        java.util.Enumeration<java.lang.Object> objEnumeration34 = properties31.elements();
        java.lang.Object obj35 = properties24.remove((java.lang.Object) properties31);
        boolean boolean36 = properties31.isEmpty();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet37 = properties31.entrySet();
        java.util.Properties properties38 = new java.util.Properties(properties31);
        java.util.Set<java.lang.String> strSet39 = properties31.stringPropertyNames();
        boolean boolean41 = properties2.replace((java.lang.Object) properties21, (java.lang.Object) strSet39, (java.lang.Object) "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.tm_unique_name=, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
        java.util.Properties properties42 = null;
        java.util.Properties properties43 = new java.util.Properties(properties42);
        java.util.Properties properties44 = new java.util.Properties(properties42);
        java.util.Properties properties45 = null;
        java.util.Properties properties46 = new java.util.Properties(properties45);
        java.lang.Object obj48 = properties44.put((java.lang.Object) properties46, (java.lang.Object) (short) 1);
        java.util.Properties properties50 = null;
        java.util.Properties properties51 = new java.util.Properties(properties50);
        java.util.Properties properties52 = new java.util.Properties(properties50);
        java.util.Properties properties53 = null;
        java.util.Properties properties54 = new java.util.Properties(properties53);
        java.lang.Object obj56 = properties52.put((java.lang.Object) properties54, (java.lang.Object) (short) 1);
        boolean boolean57 = properties46.remove((java.lang.Object) false, (java.lang.Object) (short) 1);
        java.util.Set<java.lang.String> strSet58 = properties46.stringPropertyNames();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties59 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties59.setDefaultJtaTimeout((long) (byte) 10);
        long long62 = atomikosProperties59.getDefaultJtaTimeout();
        java.lang.Object obj63 = properties46.get((java.lang.Object) atomikosProperties59);
        java.util.Properties properties64 = null;
        java.util.Properties properties65 = new java.util.Properties(properties64);
        java.util.Properties properties66 = new java.util.Properties(properties64);
        java.util.Properties properties67 = null;
        java.util.Properties properties68 = new java.util.Properties(properties67);
        java.lang.Object obj70 = properties66.put((java.lang.Object) properties68, (java.lang.Object) (short) 1);
        java.util.Properties properties72 = null;
        java.util.Properties properties73 = new java.util.Properties(properties72);
        java.util.Properties properties74 = new java.util.Properties(properties72);
        java.util.Properties properties75 = null;
        java.util.Properties properties76 = new java.util.Properties(properties75);
        java.lang.Object obj78 = properties74.put((java.lang.Object) properties76, (java.lang.Object) (short) 1);
        boolean boolean79 = properties68.remove((java.lang.Object) false, (java.lang.Object) (short) 1);
        java.lang.Object obj81 = properties68.remove((java.lang.Object) '#');
        java.util.Set<java.lang.Object> objSet82 = properties68.keySet();
        boolean boolean83 = properties46.containsKey((java.lang.Object) properties68);
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet84 = properties46.entrySet();
        java.util.Enumeration<java.lang.Object> objEnumeration85 = properties46.keys();
        java.lang.Object obj86 = properties46.clone();
        boolean boolean87 = properties21.equals((java.lang.Object) properties46);
        java.lang.Object obj88 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj89 = properties46.remove(obj88);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(obj6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNull(obj15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNull(obj33);
        org.junit.Assert.assertNotNull(objEnumeration34);
        org.junit.Assert.assertNull(obj35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNotNull(objEntrySet37);
        org.junit.Assert.assertNotNull(strSet39);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNull(obj48);
        org.junit.Assert.assertNull(obj56);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertNotNull(strSet58);
        org.junit.Assert.assertTrue("'" + long62 + "' != '" + 10L + "'", long62 == 10L);
        org.junit.Assert.assertNull(obj63);
        org.junit.Assert.assertNull(obj70);
        org.junit.Assert.assertNull(obj78);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + false + "'", boolean79 == false);
        org.junit.Assert.assertNull(obj81);
        org.junit.Assert.assertNotNull(objSet82);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + false + "'", boolean83 == false);
        org.junit.Assert.assertNotNull(objEntrySet84);
        org.junit.Assert.assertNotNull(objEnumeration85);
        org.junit.Assert.assertNotNull(obj86);
        org.junit.Assert.assertEquals(obj86.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj86), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj86), "{}");
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + true + "'", boolean87 == true);
    }

    @Test
    public void test1099() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1099");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Properties properties2 = new java.util.Properties(properties0);
        java.util.Properties properties3 = null;
        java.util.Properties properties4 = new java.util.Properties(properties3);
        java.lang.Object obj6 = properties2.put((java.lang.Object) properties4, (java.lang.Object) (short) 1);
        java.util.Properties properties8 = null;
        java.util.Properties properties9 = new java.util.Properties(properties8);
        java.util.Properties properties10 = new java.util.Properties(properties8);
        java.util.Properties properties11 = null;
        java.util.Properties properties12 = new java.util.Properties(properties11);
        java.lang.Object obj14 = properties10.put((java.lang.Object) properties12, (java.lang.Object) (short) 1);
        boolean boolean15 = properties4.remove((java.lang.Object) false, (java.lang.Object) (short) 1);
        java.util.Set<java.lang.String> strSet16 = properties4.stringPropertyNames();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties17 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties17.setDefaultJtaTimeout((long) (byte) 10);
        long long20 = atomikosProperties17.getDefaultJtaTimeout();
        java.lang.Object obj21 = properties4.get((java.lang.Object) atomikosProperties17);
        java.util.Enumeration<java.lang.Object> objEnumeration22 = properties4.elements();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties23 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties23.setThreadedTwoPhaseCommit(true);
        atomikosProperties23.setMaxActives((int) '#');
        atomikosProperties23.setEnableLogging(true);
        int int30 = atomikosProperties23.getMaxActives();
        boolean boolean31 = properties4.containsValue((java.lang.Object) atomikosProperties23);
        java.io.InputStream inputStream32 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties4.load(inputStream32);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(obj6);
        org.junit.Assert.assertNull(obj14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(strSet16);
        org.junit.Assert.assertTrue("'" + long20 + "' != '" + 10L + "'", long20 == 10L);
        org.junit.Assert.assertNull(obj21);
        org.junit.Assert.assertNotNull(objEnumeration22);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 35 + "'", int30 == 35);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
    }

    @Test
    public void test1100() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1100");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        int int1 = atomikosProperties0.getMaxActives();
        long long2 = atomikosProperties0.getMaxTimeout();
        java.util.Properties properties3 = atomikosProperties0.asProperties();
        atomikosProperties0.setService("hi!");
        int int6 = atomikosProperties0.getMaxActives();
        atomikosProperties0.setThreadedTwoPhaseCommit(true);
        atomikosProperties0.setSerialJtaTransactions(false);
        atomikosProperties0.setLogBaseDir("tmlog");
        java.lang.String str13 = atomikosProperties0.getTransactionManagerUniqueName();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 50 + "'", int1 == 50);
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + 300000L + "'", long2 == 300000L);
        org.junit.Assert.assertNotNull(properties3);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 50 + "'", int6 == 50);
        org.junit.Assert.assertNull(str13);
    }

    @Test
    public void test1101() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1101");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Properties properties2 = new java.util.Properties(properties0);
        java.util.Properties properties3 = null;
        java.util.Properties properties4 = new java.util.Properties(properties3);
        java.lang.Object obj6 = properties2.put((java.lang.Object) properties4, (java.lang.Object) (short) 1);
        java.util.Properties properties8 = null;
        java.util.Properties properties9 = new java.util.Properties(properties8);
        java.util.Properties properties10 = new java.util.Properties(properties8);
        java.util.Properties properties11 = null;
        java.util.Properties properties12 = new java.util.Properties(properties11);
        java.lang.Object obj14 = properties10.put((java.lang.Object) properties12, (java.lang.Object) (short) 1);
        boolean boolean15 = properties4.remove((java.lang.Object) false, (java.lang.Object) (short) 1);
        java.util.Set<java.lang.String> strSet16 = properties4.stringPropertyNames();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties17 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties17.setDefaultJtaTimeout((long) (byte) 10);
        long long20 = atomikosProperties17.getDefaultJtaTimeout();
        java.lang.Object obj21 = properties4.get((java.lang.Object) atomikosProperties17);
        int int22 = properties4.size();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties23 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties23.setDefaultJtaTimeout((long) (byte) 10);
        atomikosProperties23.setCheckpointInterval((long) (byte) 0);
        atomikosProperties23.setTransactionManagerUniqueName("");
        java.util.Properties properties30 = atomikosProperties23.asProperties();
        java.lang.String str31 = atomikosProperties23.getTransactionManagerUniqueName();
        atomikosProperties23.setDefaultJtaTimeout((long) (-1));
        java.lang.String str34 = atomikosProperties23.getService();
        atomikosProperties23.setLogBaseDir("{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.tm_unique_name=, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
        boolean boolean37 = atomikosProperties23.isSerialJtaTransactions();
        atomikosProperties23.setThreadedTwoPhaseCommit(true);
        java.lang.Object obj40 = properties4.get((java.lang.Object) atomikosProperties23);
        java.io.OutputStream outputStream41 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties4.storeToXML(outputStream41, "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=0, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.tm_unique_name=, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(obj6);
        org.junit.Assert.assertNull(obj14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(strSet16);
        org.junit.Assert.assertTrue("'" + long20 + "' != '" + 10L + "'", long20 == 10L);
        org.junit.Assert.assertNull(obj21);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 0 + "'", int22 == 0);
        org.junit.Assert.assertNotNull(properties30);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "" + "'", str31, "");
        org.junit.Assert.assertNull(str34);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertNull(obj40);
    }

    @Test
    public void test1102() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1102");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Properties properties2 = new java.util.Properties(properties0);
        java.util.Properties properties3 = null;
        java.util.Properties properties4 = new java.util.Properties(properties3);
        java.lang.Object obj6 = properties2.put((java.lang.Object) properties4, (java.lang.Object) (short) 1);
        java.util.Enumeration<java.lang.Object> objEnumeration7 = properties4.elements();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet8 = properties4.entrySet();
        java.util.Set<java.lang.Object> objSet9 = properties4.keySet();
        java.util.Properties properties10 = null;
        java.util.Properties properties11 = new java.util.Properties(properties10);
        java.util.Properties properties12 = new java.util.Properties(properties10);
        java.util.Properties properties13 = null;
        java.util.Properties properties14 = new java.util.Properties(properties13);
        java.lang.Object obj16 = properties12.put((java.lang.Object) properties14, (java.lang.Object) (short) 1);
        properties14.clear();
        int int18 = properties14.size();
        java.util.Properties properties19 = new java.util.Properties(properties14);
        java.util.Properties properties20 = null;
        java.util.Properties properties21 = new java.util.Properties(properties20);
        java.util.Properties properties22 = new java.util.Properties(properties20);
        java.util.Properties properties23 = null;
        java.util.Properties properties24 = new java.util.Properties(properties23);
        java.lang.Object obj26 = properties22.put((java.lang.Object) properties24, (java.lang.Object) (short) 1);
        properties24.clear();
        java.lang.String str29 = properties24.getProperty("");
        java.util.Properties properties30 = null;
        java.util.Properties properties31 = new java.util.Properties(properties30);
        java.util.Properties properties32 = new java.util.Properties(properties30);
        java.util.Properties properties33 = null;
        java.util.Properties properties34 = new java.util.Properties(properties33);
        java.lang.Object obj36 = properties32.put((java.lang.Object) properties34, (java.lang.Object) (short) 1);
        properties24.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties32);
        java.lang.Object obj38 = properties4.put((java.lang.Object) properties14, (java.lang.Object) properties32);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties39 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties39.setDefaultJtaTimeout((long) (byte) 10);
        atomikosProperties39.setCheckpointInterval((long) (byte) 0);
        atomikosProperties39.setTransactionManagerUniqueName("");
        java.util.Properties properties46 = atomikosProperties39.asProperties();
        atomikosProperties39.setThreadedTwoPhaseCommit(false);
        boolean boolean49 = atomikosProperties39.isSerialJtaTransactions();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties50 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties50.setDefaultJtaTimeout((long) (byte) 10);
        atomikosProperties50.setCheckpointInterval((long) (byte) 0);
        atomikosProperties50.setTransactionManagerUniqueName("");
        boolean boolean57 = atomikosProperties50.isEnableLogging();
        java.lang.String str58 = atomikosProperties50.getLogBaseName();
        atomikosProperties50.setThreadedTwoPhaseCommit(false);
        boolean boolean61 = atomikosProperties50.isThreadedTwoPhaseCommit();
        java.util.Properties properties62 = atomikosProperties50.asProperties();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet63 = properties62.entrySet();
        java.util.Enumeration<java.lang.Object> objEnumeration64 = properties62.elements();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties65 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties65.setThreadedTwoPhaseCommit(true);
        atomikosProperties65.setMaxActives((int) (byte) 0);
        atomikosProperties65.setCheckpointInterval(0L);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties72 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        int int73 = atomikosProperties72.getMaxActives();
        long long74 = atomikosProperties72.getMaxTimeout();
        java.util.Properties properties75 = atomikosProperties72.asProperties();
        java.util.Properties properties76 = null;
        java.util.Properties properties77 = new java.util.Properties(properties76);
        java.util.Properties properties78 = new java.util.Properties(properties76);
        java.util.Properties properties79 = null;
        java.util.Properties properties80 = new java.util.Properties(properties79);
        java.lang.Object obj82 = properties78.put((java.lang.Object) properties80, (java.lang.Object) (short) 1);
        java.util.Properties properties83 = new java.util.Properties(properties80);
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet84 = properties80.entrySet();
        java.lang.Object obj85 = properties75.remove((java.lang.Object) properties80);
        java.util.Enumeration<?> wildcardEnumeration86 = properties80.propertyNames();
        java.lang.Object obj87 = properties62.put((java.lang.Object) 0L, (java.lang.Object) wildcardEnumeration86);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj88 = properties32.putIfAbsent((java.lang.Object) boolean49, obj87);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(obj6);
        org.junit.Assert.assertNotNull(objEnumeration7);
        org.junit.Assert.assertNotNull(objEntrySet8);
        org.junit.Assert.assertNotNull(objSet9);
        org.junit.Assert.assertNull(obj16);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 0 + "'", int18 == 0);
        org.junit.Assert.assertNull(obj26);
        org.junit.Assert.assertNull(str29);
        org.junit.Assert.assertNull(obj36);
        org.junit.Assert.assertNull(obj38);
        org.junit.Assert.assertNotNull(properties46);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "tmlog" + "'", str58, "tmlog");
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertNotNull(properties62);
        org.junit.Assert.assertNotNull(objEntrySet63);
        org.junit.Assert.assertNotNull(objEnumeration64);
        org.junit.Assert.assertTrue("'" + int73 + "' != '" + 50 + "'", int73 == 50);
        org.junit.Assert.assertTrue("'" + long74 + "' != '" + 300000L + "'", long74 == 300000L);
        org.junit.Assert.assertNotNull(properties75);
        org.junit.Assert.assertNull(obj82);
        org.junit.Assert.assertNotNull(objEntrySet84);
        org.junit.Assert.assertNull(obj85);
        org.junit.Assert.assertNotNull(wildcardEnumeration86);
        org.junit.Assert.assertNull(obj87);
    }

    @Test
    public void test1103() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1103");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setDefaultJtaTimeout((long) (byte) 10);
        long long3 = atomikosProperties0.getDefaultJtaTimeout();
        atomikosProperties0.setTransactionManagerUniqueName("hi!");
        atomikosProperties0.setLogBaseName("tmlog");
        boolean boolean8 = atomikosProperties0.isSerialJtaTransactions();
        java.util.Properties properties9 = atomikosProperties0.asProperties();
        long long10 = atomikosProperties0.getMaxTimeout();
        java.lang.String str11 = atomikosProperties0.getService();
        java.lang.Class<?> wildcardClass12 = atomikosProperties0.getClass();
        org.junit.Assert.assertTrue("'" + long3 + "' != '" + 10L + "'", long3 == 10L);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(properties9);
        org.junit.Assert.assertTrue("'" + long10 + "' != '" + 300000L + "'", long10 == 300000L);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertNotNull(wildcardClass12);
    }

    @Test
    public void test1104() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1104");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Properties properties2 = new java.util.Properties(properties0);
        java.util.Properties properties3 = null;
        java.util.Properties properties4 = new java.util.Properties(properties3);
        java.lang.Object obj6 = properties2.put((java.lang.Object) properties4, (java.lang.Object) (short) 1);
        properties4.clear();
        int int8 = properties4.size();
        java.util.Properties properties9 = null;
        java.util.Properties properties10 = new java.util.Properties(properties9);
        java.util.Properties properties11 = new java.util.Properties(properties9);
        java.util.Properties properties12 = null;
        java.util.Properties properties13 = new java.util.Properties(properties12);
        java.lang.Object obj15 = properties11.put((java.lang.Object) properties13, (java.lang.Object) (short) 1);
        java.util.Properties properties16 = new java.util.Properties(properties13);
        java.util.Properties properties17 = new java.util.Properties(properties13);
        boolean boolean19 = properties4.remove((java.lang.Object) properties13, (java.lang.Object) 10.0f);
        java.util.Enumeration<java.lang.Object> objEnumeration20 = properties13.elements();
        java.util.Properties properties21 = new java.util.Properties(properties13);
        java.util.Properties properties22 = null;
        java.util.Properties properties23 = new java.util.Properties(properties22);
        java.util.Properties properties24 = new java.util.Properties(properties22);
        java.lang.Object obj25 = properties24.clone();
        java.lang.Object obj28 = properties24.setProperty("tmlog", "");
        properties13.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties24);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties30 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties30.setDefaultJtaTimeout((long) (byte) 10);
        atomikosProperties30.setCheckpointInterval((long) (byte) 0);
        atomikosProperties30.setTransactionManagerUniqueName("");
        boolean boolean37 = atomikosProperties30.isEnableLogging();
        java.util.Properties properties38 = atomikosProperties30.asProperties();
        java.lang.String str39 = atomikosProperties30.getLogBaseName();
        boolean boolean40 = properties24.contains((java.lang.Object) str39);
        java.io.PrintStream printStream41 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties24.list(printStream41);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(obj6);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertNull(obj15);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(objEnumeration20);
        org.junit.Assert.assertNotNull(obj25);
        org.junit.Assert.assertEquals(obj25.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj25), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj25), "{}");
        org.junit.Assert.assertNull(obj28);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertNotNull(properties38);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "tmlog" + "'", str39, "tmlog");
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
    }

    @Test
    public void test1105() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1105");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Properties properties2 = new java.util.Properties(properties0);
        java.util.Properties properties3 = null;
        java.util.Properties properties4 = new java.util.Properties(properties3);
        java.lang.Object obj6 = properties2.put((java.lang.Object) properties4, (java.lang.Object) (short) 1);
        java.util.Properties properties8 = null;
        java.util.Properties properties9 = new java.util.Properties(properties8);
        java.util.Properties properties10 = new java.util.Properties(properties8);
        java.util.Properties properties11 = null;
        java.util.Properties properties12 = new java.util.Properties(properties11);
        java.lang.Object obj14 = properties10.put((java.lang.Object) properties12, (java.lang.Object) (short) 1);
        boolean boolean15 = properties4.remove((java.lang.Object) false, (java.lang.Object) (short) 1);
        java.util.Set<java.lang.String> strSet16 = properties4.stringPropertyNames();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties17 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties17.setDefaultJtaTimeout((long) (byte) 10);
        long long20 = atomikosProperties17.getDefaultJtaTimeout();
        java.lang.Object obj21 = properties4.get((java.lang.Object) atomikosProperties17);
        atomikosProperties17.setCheckpointInterval((long) (short) 100);
        java.util.Properties properties24 = atomikosProperties17.asProperties();
        java.lang.String str25 = atomikosProperties17.getLogBaseName();
        atomikosProperties17.setTransactionManagerUniqueName("tmlog");
        long long28 = atomikosProperties17.getDefaultJtaTimeout();
        org.junit.Assert.assertNull(obj6);
        org.junit.Assert.assertNull(obj14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(strSet16);
        org.junit.Assert.assertTrue("'" + long20 + "' != '" + 10L + "'", long20 == 10L);
        org.junit.Assert.assertNull(obj21);
        org.junit.Assert.assertNotNull(properties24);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "tmlog" + "'", str25, "tmlog");
        org.junit.Assert.assertTrue("'" + long28 + "' != '" + 10L + "'", long28 == 10L);
    }

    @Test
    public void test1106() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1106");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Properties properties2 = new java.util.Properties(properties0);
        java.util.Properties properties3 = null;
        java.util.Properties properties4 = new java.util.Properties(properties3);
        java.lang.Object obj6 = properties2.put((java.lang.Object) properties4, (java.lang.Object) (short) 1);
        properties4.clear();
        int int8 = properties4.size();
        java.util.Properties properties9 = new java.util.Properties(properties4);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties10 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        int int11 = atomikosProperties10.getMaxActives();
        long long12 = atomikosProperties10.getMaxTimeout();
        java.util.Properties properties13 = atomikosProperties10.asProperties();
        java.util.Properties properties14 = atomikosProperties10.asProperties();
        java.util.Properties properties15 = null;
        java.util.Properties properties16 = new java.util.Properties(properties15);
        java.util.Properties properties17 = new java.util.Properties(properties15);
        java.util.Properties properties18 = null;
        java.util.Properties properties19 = new java.util.Properties(properties18);
        java.lang.Object obj21 = properties17.put((java.lang.Object) properties19, (java.lang.Object) (short) 1);
        java.util.Enumeration<java.lang.Object> objEnumeration22 = properties19.elements();
        java.lang.Object obj23 = properties4.replace((java.lang.Object) atomikosProperties10, (java.lang.Object) properties19);
        java.util.Set<java.lang.String> strSet24 = properties4.stringPropertyNames();
        java.lang.Object obj27 = properties4.setProperty("{}", "tmlog");
        boolean boolean28 = properties4.isEmpty();
        java.lang.Object obj29 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean30 = properties4.contains(obj29);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(obj6);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 50 + "'", int11 == 50);
        org.junit.Assert.assertTrue("'" + long12 + "' != '" + 300000L + "'", long12 == 300000L);
        org.junit.Assert.assertNotNull(properties13);
        org.junit.Assert.assertNotNull(properties14);
        org.junit.Assert.assertNull(obj21);
        org.junit.Assert.assertNotNull(objEnumeration22);
        org.junit.Assert.assertNull(obj23);
        org.junit.Assert.assertNotNull(strSet24);
        org.junit.Assert.assertNull(obj27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
    }

    @Test
    public void test1107() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1107");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setThreadedTwoPhaseCommit(true);
        boolean boolean3 = atomikosProperties0.isEnableLogging();
        atomikosProperties0.setCheckpointInterval((long) 35);
        atomikosProperties0.setDefaultJtaTimeout((long) (byte) 0);
        java.lang.String str8 = atomikosProperties0.getLogBaseName();
        atomikosProperties0.setTransactionManagerUniqueName("{tmlog={com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=0, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.tm_unique_name=, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}, 4=true}");
        atomikosProperties0.setMaxActives(11);
        atomikosProperties0.setMaxActives((int) (byte) -1);
        atomikosProperties0.setSerialJtaTransactions(false);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "tmlog" + "'", str8, "tmlog");
    }

    @Test
    public void test1108() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1108");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        boolean boolean1 = atomikosProperties0.isSerialJtaTransactions();
        java.util.Properties properties2 = atomikosProperties0.asProperties();
        java.util.Properties properties3 = new java.util.Properties(properties2);
        java.io.OutputStream outputStream4 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties2.save(outputStream4, "");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertNotNull(properties2);
    }

    @Test
    public void test1109() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1109");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Properties properties2 = new java.util.Properties(properties0);
        java.util.Properties properties3 = null;
        java.util.Properties properties4 = new java.util.Properties(properties3);
        java.lang.Object obj6 = properties2.put((java.lang.Object) properties4, (java.lang.Object) (short) 1);
        boolean boolean7 = properties2.isEmpty();
        java.util.Properties properties8 = null;
        java.util.Properties properties9 = new java.util.Properties(properties8);
        java.util.Properties properties10 = new java.util.Properties(properties8);
        boolean boolean11 = properties2.containsKey((java.lang.Object) properties10);
        java.util.Properties properties12 = new java.util.Properties(properties10);
        java.util.Properties properties13 = null;
        java.util.Properties properties14 = new java.util.Properties(properties13);
        java.util.Properties properties15 = new java.util.Properties(properties13);
        boolean boolean17 = properties15.containsValue((java.lang.Object) (short) 100);
        java.util.Properties properties18 = new java.util.Properties(properties15);
        java.lang.String str20 = properties18.getProperty("hi!");
        boolean boolean21 = properties10.containsKey((java.lang.Object) properties18);
        boolean boolean22 = properties10.isEmpty();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties23 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties23.setDefaultJtaTimeout((long) (byte) 10);
        long long26 = atomikosProperties23.getDefaultJtaTimeout();
        atomikosProperties23.setTransactionManagerUniqueName("");
        boolean boolean29 = atomikosProperties23.isEnableLogging();
        java.lang.String str30 = atomikosProperties23.getLogBaseDir();
        java.util.Properties properties31 = atomikosProperties23.asProperties();
        boolean boolean32 = atomikosProperties23.isEnableLogging();
        java.util.Properties properties33 = atomikosProperties23.asProperties();
        boolean boolean34 = properties33.isEmpty();
        java.lang.Object obj35 = properties10.remove((java.lang.Object) boolean34);
        java.util.Properties properties36 = null;
        java.util.Properties properties37 = new java.util.Properties(properties36);
        java.util.Properties properties38 = new java.util.Properties(properties36);
        java.util.Properties properties39 = null;
        java.util.Properties properties40 = new java.util.Properties(properties39);
        java.lang.Object obj42 = properties38.put((java.lang.Object) properties40, (java.lang.Object) (short) 1);
        java.util.Enumeration<java.lang.Object> objEnumeration43 = properties40.elements();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet44 = properties40.entrySet();
        java.util.Set<java.lang.Object> objSet45 = properties40.keySet();
        java.util.Properties properties46 = null;
        java.util.Properties properties47 = new java.util.Properties(properties46);
        java.util.Properties properties48 = new java.util.Properties(properties46);
        java.util.Properties properties49 = null;
        java.util.Properties properties50 = new java.util.Properties(properties49);
        java.lang.Object obj52 = properties48.put((java.lang.Object) properties50, (java.lang.Object) (short) 1);
        properties50.clear();
        int int54 = properties50.size();
        java.util.Properties properties55 = new java.util.Properties(properties50);
        java.util.Properties properties56 = null;
        java.util.Properties properties57 = new java.util.Properties(properties56);
        java.util.Properties properties58 = new java.util.Properties(properties56);
        java.util.Properties properties59 = null;
        java.util.Properties properties60 = new java.util.Properties(properties59);
        java.lang.Object obj62 = properties58.put((java.lang.Object) properties60, (java.lang.Object) (short) 1);
        properties60.clear();
        java.lang.String str65 = properties60.getProperty("");
        java.util.Properties properties66 = null;
        java.util.Properties properties67 = new java.util.Properties(properties66);
        java.util.Properties properties68 = new java.util.Properties(properties66);
        java.util.Properties properties69 = null;
        java.util.Properties properties70 = new java.util.Properties(properties69);
        java.lang.Object obj72 = properties68.put((java.lang.Object) properties70, (java.lang.Object) (short) 1);
        properties60.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties68);
        java.lang.Object obj74 = properties40.put((java.lang.Object) properties50, (java.lang.Object) properties68);
        java.util.Collection<java.lang.Object> objCollection75 = properties68.values();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet76 = properties68.entrySet();
        boolean boolean77 = properties10.contains((java.lang.Object) properties68);
        java.io.InputStream inputStream78 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties10.loadFromXML(inputStream78);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(obj6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNull(str20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertTrue("'" + long26 + "' != '" + 10L + "'", long26 == 10L);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNull(str30);
        org.junit.Assert.assertNotNull(properties31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertNotNull(properties33);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNull(obj35);
        org.junit.Assert.assertNull(obj42);
        org.junit.Assert.assertNotNull(objEnumeration43);
        org.junit.Assert.assertNotNull(objEntrySet44);
        org.junit.Assert.assertNotNull(objSet45);
        org.junit.Assert.assertNull(obj52);
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + 0 + "'", int54 == 0);
        org.junit.Assert.assertNull(obj62);
        org.junit.Assert.assertNull(str65);
        org.junit.Assert.assertNull(obj72);
        org.junit.Assert.assertNull(obj74);
        org.junit.Assert.assertNotNull(objCollection75);
        org.junit.Assert.assertNotNull(objEntrySet76);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + false + "'", boolean77 == false);
    }

    @Test
    public void test1110() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1110");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Properties properties2 = new java.util.Properties(properties0);
        java.util.Properties properties3 = null;
        java.util.Properties properties4 = new java.util.Properties(properties3);
        java.lang.Object obj6 = properties2.put((java.lang.Object) properties4, (java.lang.Object) (short) 1);
        java.util.Properties properties8 = null;
        java.util.Properties properties9 = new java.util.Properties(properties8);
        java.util.Properties properties10 = new java.util.Properties(properties8);
        java.util.Properties properties11 = null;
        java.util.Properties properties12 = new java.util.Properties(properties11);
        java.lang.Object obj14 = properties10.put((java.lang.Object) properties12, (java.lang.Object) (short) 1);
        boolean boolean15 = properties4.remove((java.lang.Object) false, (java.lang.Object) (short) 1);
        java.util.Set<java.lang.String> strSet16 = properties4.stringPropertyNames();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties17 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties17.setDefaultJtaTimeout((long) (byte) 10);
        long long20 = atomikosProperties17.getDefaultJtaTimeout();
        java.lang.Object obj21 = properties4.get((java.lang.Object) atomikosProperties17);
        java.util.Properties properties22 = null;
        java.util.Properties properties23 = new java.util.Properties(properties22);
        java.util.Properties properties24 = new java.util.Properties(properties22);
        java.util.Properties properties25 = null;
        java.util.Properties properties26 = new java.util.Properties(properties25);
        java.lang.Object obj28 = properties24.put((java.lang.Object) properties26, (java.lang.Object) (short) 1);
        java.util.Properties properties30 = null;
        java.util.Properties properties31 = new java.util.Properties(properties30);
        java.util.Properties properties32 = new java.util.Properties(properties30);
        java.util.Properties properties33 = null;
        java.util.Properties properties34 = new java.util.Properties(properties33);
        java.lang.Object obj36 = properties32.put((java.lang.Object) properties34, (java.lang.Object) (short) 1);
        boolean boolean37 = properties26.remove((java.lang.Object) false, (java.lang.Object) (short) 1);
        java.lang.Object obj39 = properties26.remove((java.lang.Object) '#');
        java.util.Set<java.lang.Object> objSet40 = properties26.keySet();
        boolean boolean41 = properties4.containsKey((java.lang.Object) properties26);
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet42 = properties4.entrySet();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties43 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties43.setThreadedTwoPhaseCommit(true);
        boolean boolean46 = atomikosProperties43.isEnableLogging();
        atomikosProperties43.setTransactionManagerUniqueName("{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=0, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog, {}={}}");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties49 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties49.setDefaultJtaTimeout((long) (byte) 10);
        atomikosProperties49.setCheckpointInterval((long) (byte) 0);
        atomikosProperties49.setTransactionManagerUniqueName("");
        boolean boolean56 = atomikosProperties49.isEnableLogging();
        java.lang.Class<?> wildcardClass57 = atomikosProperties49.getClass();
        java.lang.Object obj58 = properties4.put((java.lang.Object) "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=0, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog, {}={}}", (java.lang.Object) atomikosProperties49);
        java.util.Properties properties59 = null;
        java.util.Properties properties60 = new java.util.Properties(properties59);
        java.util.Properties properties61 = new java.util.Properties(properties59);
        java.util.Properties properties62 = null;
        java.util.Properties properties63 = new java.util.Properties(properties62);
        java.lang.Object obj65 = properties61.put((java.lang.Object) properties63, (java.lang.Object) (short) 1);
        java.util.Properties properties67 = null;
        java.util.Properties properties68 = new java.util.Properties(properties67);
        java.util.Properties properties69 = new java.util.Properties(properties67);
        java.util.Properties properties70 = null;
        java.util.Properties properties71 = new java.util.Properties(properties70);
        java.lang.Object obj73 = properties69.put((java.lang.Object) properties71, (java.lang.Object) (short) 1);
        boolean boolean74 = properties63.remove((java.lang.Object) false, (java.lang.Object) (short) 1);
        java.util.Enumeration<java.lang.Object> objEnumeration75 = properties63.elements();
        java.util.Properties properties76 = new java.util.Properties(properties63);
        java.lang.Object obj78 = properties4.getOrDefault((java.lang.Object) properties76, (java.lang.Object) 500L);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties79 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties79.setThreadedTwoPhaseCommit(true);
        boolean boolean82 = atomikosProperties79.isEnableLogging();
        boolean boolean83 = atomikosProperties79.isEnableLogging();
        java.util.Properties properties84 = atomikosProperties79.asProperties();
        boolean boolean85 = properties76.containsKey((java.lang.Object) properties84);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties86 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        int int87 = atomikosProperties86.getMaxActives();
        long long88 = atomikosProperties86.getMaxTimeout();
        java.lang.String str89 = atomikosProperties86.getLogBaseDir();
        atomikosProperties86.setCheckpointInterval(100L);
        atomikosProperties86.setService("tmlog");
        java.lang.String str94 = atomikosProperties86.getLogBaseDir();
        java.util.Properties properties95 = atomikosProperties86.asProperties();
        java.lang.Object obj96 = properties84.remove((java.lang.Object) atomikosProperties86);
        java.lang.String str97 = atomikosProperties86.getLogBaseName();
        atomikosProperties86.setLogBaseName("{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=0, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog, {}={}}");
        org.junit.Assert.assertNull(obj6);
        org.junit.Assert.assertNull(obj14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(strSet16);
        org.junit.Assert.assertTrue("'" + long20 + "' != '" + 10L + "'", long20 == 10L);
        org.junit.Assert.assertNull(obj21);
        org.junit.Assert.assertNull(obj28);
        org.junit.Assert.assertNull(obj36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNull(obj39);
        org.junit.Assert.assertNotNull(objSet40);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(objEntrySet42);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertNotNull(wildcardClass57);
        org.junit.Assert.assertNull(obj58);
        org.junit.Assert.assertNull(obj65);
        org.junit.Assert.assertNull(obj73);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
        org.junit.Assert.assertNotNull(objEnumeration75);
        org.junit.Assert.assertEquals("'" + obj78 + "' != '" + 500L + "'", obj78, 500L);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + true + "'", boolean82 == true);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + true + "'", boolean83 == true);
        org.junit.Assert.assertNotNull(properties84);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + false + "'", boolean85 == false);
        org.junit.Assert.assertTrue("'" + int87 + "' != '" + 50 + "'", int87 == 50);
        org.junit.Assert.assertTrue("'" + long88 + "' != '" + 300000L + "'", long88 == 300000L);
        org.junit.Assert.assertNull(str89);
        org.junit.Assert.assertNull(str94);
        org.junit.Assert.assertNotNull(properties95);
        org.junit.Assert.assertNull(obj96);
        org.junit.Assert.assertEquals("'" + str97 + "' != '" + "tmlog" + "'", str97, "tmlog");
    }

    @Test
    public void test1111() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1111");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        int int1 = atomikosProperties0.getMaxActives();
        long long2 = atomikosProperties0.getMaxTimeout();
        java.util.Properties properties3 = atomikosProperties0.asProperties();
        atomikosProperties0.setService("hi!");
        int int6 = atomikosProperties0.getMaxActives();
        atomikosProperties0.setThreadedTwoPhaseCommit(true);
        boolean boolean9 = atomikosProperties0.isEnableLogging();
        atomikosProperties0.setSerialJtaTransactions(false);
        atomikosProperties0.setEnableLogging(false);
        long long14 = atomikosProperties0.getMaxTimeout();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 50 + "'", int1 == 50);
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + 300000L + "'", long2 == 300000L);
        org.junit.Assert.assertNotNull(properties3);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 50 + "'", int6 == 50);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertTrue("'" + long14 + "' != '" + 300000L + "'", long14 == 300000L);
    }

    @Test
    public void test1112() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1112");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setDefaultJtaTimeout((long) (byte) 10);
        long long3 = atomikosProperties0.getDefaultJtaTimeout();
        atomikosProperties0.setTransactionManagerUniqueName("hi!");
        atomikosProperties0.setTransactionManagerUniqueName("{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=0, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.tm_unique_name=, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
        long long8 = atomikosProperties0.getMaxTimeout();
        atomikosProperties0.setTransactionManagerUniqueName("{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
        long long11 = atomikosProperties0.getDefaultJtaTimeout();
        org.junit.Assert.assertTrue("'" + long3 + "' != '" + 10L + "'", long3 == 10L);
        org.junit.Assert.assertTrue("'" + long8 + "' != '" + 300000L + "'", long8 == 300000L);
        org.junit.Assert.assertTrue("'" + long11 + "' != '" + 10L + "'", long11 == 10L);
    }

    @Test
    public void test1113() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1113");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Properties properties2 = new java.util.Properties(properties0);
        java.util.Properties properties3 = null;
        java.util.Properties properties4 = new java.util.Properties(properties3);
        java.lang.Object obj6 = properties2.put((java.lang.Object) properties4, (java.lang.Object) (short) 1);
        java.util.Properties properties8 = null;
        java.util.Properties properties9 = new java.util.Properties(properties8);
        java.util.Properties properties10 = new java.util.Properties(properties8);
        java.util.Properties properties11 = null;
        java.util.Properties properties12 = new java.util.Properties(properties11);
        java.lang.Object obj14 = properties10.put((java.lang.Object) properties12, (java.lang.Object) (short) 1);
        boolean boolean15 = properties4.remove((java.lang.Object) false, (java.lang.Object) (short) 1);
        java.util.Properties properties16 = new java.util.Properties(properties4);
        java.util.Properties properties17 = new java.util.Properties(properties4);
        java.io.OutputStream outputStream18 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties4.storeToXML(outputStream18, "{tmlog={com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=0, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.tm_unique_name=, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}, 4=true}");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(obj6);
        org.junit.Assert.assertNull(obj14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
    }

    @Test
    public void test1114() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1114");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Properties properties2 = new java.util.Properties(properties0);
        java.util.Properties properties3 = null;
        java.util.Properties properties4 = new java.util.Properties(properties3);
        java.lang.Object obj6 = properties2.put((java.lang.Object) properties4, (java.lang.Object) (short) 1);
        java.util.Properties properties7 = new java.util.Properties(properties4);
        java.util.Properties properties8 = new java.util.Properties(properties4);
        java.util.Set<java.lang.Object> objSet9 = properties8.keySet();
        int int10 = properties8.size();
        java.io.InputStream inputStream11 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties8.loadFromXML(inputStream11);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(obj6);
        org.junit.Assert.assertNotNull(objSet9);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
    }

    @Test
    public void test1115() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1115");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Properties properties2 = new java.util.Properties(properties0);
        boolean boolean4 = properties2.containsValue((java.lang.Object) (short) 100);
        java.util.Properties properties5 = new java.util.Properties(properties2);
        java.lang.String str7 = properties5.getProperty("hi!");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties8 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties8.setDefaultJtaTimeout((long) (byte) 10);
        long long11 = atomikosProperties8.getDefaultJtaTimeout();
        atomikosProperties8.setTransactionManagerUniqueName("hi!");
        atomikosProperties8.setLogBaseName("tmlog");
        boolean boolean16 = atomikosProperties8.isSerialJtaTransactions();
        java.util.Properties properties17 = atomikosProperties8.asProperties();
        boolean boolean18 = properties5.equals((java.lang.Object) atomikosProperties8);
        java.util.Enumeration<java.lang.Object> objEnumeration19 = properties5.elements();
        java.util.Properties properties20 = null;
        java.util.Properties properties21 = new java.util.Properties(properties20);
        java.util.Properties properties22 = new java.util.Properties(properties20);
        java.util.Properties properties23 = null;
        java.util.Properties properties24 = new java.util.Properties(properties23);
        java.lang.Object obj26 = properties22.put((java.lang.Object) properties24, (java.lang.Object) (short) 1);
        boolean boolean27 = properties22.isEmpty();
        java.util.Properties properties28 = null;
        java.util.Properties properties29 = new java.util.Properties(properties28);
        java.util.Properties properties30 = new java.util.Properties(properties28);
        boolean boolean31 = properties22.containsKey((java.lang.Object) properties30);
        java.util.Properties properties32 = new java.util.Properties(properties30);
        java.lang.Object obj33 = properties32.clone();
        java.util.Set<java.lang.String> strSet34 = properties32.stringPropertyNames();
        java.util.Properties properties35 = null;
        java.util.Properties properties36 = new java.util.Properties(properties35);
        java.util.Properties properties37 = new java.util.Properties(properties35);
        java.util.Properties properties38 = null;
        java.util.Properties properties39 = new java.util.Properties(properties38);
        java.lang.Object obj41 = properties37.put((java.lang.Object) properties39, (java.lang.Object) (short) 1);
        java.util.Properties properties43 = null;
        java.util.Properties properties44 = new java.util.Properties(properties43);
        java.util.Properties properties45 = new java.util.Properties(properties43);
        java.util.Properties properties46 = null;
        java.util.Properties properties47 = new java.util.Properties(properties46);
        java.lang.Object obj49 = properties45.put((java.lang.Object) properties47, (java.lang.Object) (short) 1);
        boolean boolean50 = properties39.remove((java.lang.Object) false, (java.lang.Object) (short) 1);
        java.util.Set<java.lang.String> strSet51 = properties39.stringPropertyNames();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties52 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties52.setDefaultJtaTimeout((long) (byte) 10);
        long long55 = atomikosProperties52.getDefaultJtaTimeout();
        java.lang.Object obj56 = properties39.get((java.lang.Object) atomikosProperties52);
        java.util.Enumeration<java.lang.Object> objEnumeration57 = properties39.elements();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties58 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties58.setThreadedTwoPhaseCommit(true);
        atomikosProperties58.setMaxActives((int) '#');
        atomikosProperties58.setEnableLogging(true);
        int int65 = atomikosProperties58.getMaxActives();
        boolean boolean66 = properties39.containsValue((java.lang.Object) atomikosProperties58);
        java.lang.Object obj67 = properties5.put((java.lang.Object) properties32, (java.lang.Object) boolean66);
        java.lang.String str70 = properties32.getProperty("{}", "{tmlog={com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=0, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.tm_unique_name=, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}, 4=true}");
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertTrue("'" + long11 + "' != '" + 10L + "'", long11 == 10L);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(properties17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(objEnumeration19);
        org.junit.Assert.assertNull(obj26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNotNull(obj33);
        org.junit.Assert.assertEquals(obj33.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj33), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj33), "{}");
        org.junit.Assert.assertNotNull(strSet34);
        org.junit.Assert.assertNull(obj41);
        org.junit.Assert.assertNull(obj49);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertNotNull(strSet51);
        org.junit.Assert.assertTrue("'" + long55 + "' != '" + 10L + "'", long55 == 10L);
        org.junit.Assert.assertNull(obj56);
        org.junit.Assert.assertNotNull(objEnumeration57);
        org.junit.Assert.assertTrue("'" + int65 + "' != '" + 35 + "'", int65 == 35);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertNull(obj67);
        org.junit.Assert.assertEquals("'" + str70 + "' != '" + "{tmlog={com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=0, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.tm_unique_name=, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}, 4=true}" + "'", str70, "{tmlog={com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=0, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.tm_unique_name=, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}, 4=true}");
    }

    @Test
    public void test1116() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1116");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Properties properties2 = new java.util.Properties(properties0);
        java.util.Properties properties3 = null;
        java.util.Properties properties4 = new java.util.Properties(properties3);
        java.lang.Object obj6 = properties2.put((java.lang.Object) properties4, (java.lang.Object) (short) 1);
        java.util.Properties properties8 = null;
        java.util.Properties properties9 = new java.util.Properties(properties8);
        java.util.Properties properties10 = new java.util.Properties(properties8);
        java.util.Properties properties11 = null;
        java.util.Properties properties12 = new java.util.Properties(properties11);
        java.lang.Object obj14 = properties10.put((java.lang.Object) properties12, (java.lang.Object) (short) 1);
        boolean boolean15 = properties4.remove((java.lang.Object) false, (java.lang.Object) (short) 1);
        java.util.Set<java.lang.String> strSet16 = properties4.stringPropertyNames();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties17 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties17.setDefaultJtaTimeout((long) (byte) 10);
        atomikosProperties17.setCheckpointInterval((long) (byte) 0);
        atomikosProperties17.setTransactionManagerUniqueName("");
        boolean boolean24 = atomikosProperties17.isEnableLogging();
        atomikosProperties17.setSerialJtaTransactions(false);
        atomikosProperties17.setLogBaseDir("");
        java.util.Properties properties29 = null;
        java.util.Properties properties30 = new java.util.Properties(properties29);
        java.util.Properties properties31 = new java.util.Properties(properties29);
        java.util.Properties properties32 = null;
        java.util.Properties properties33 = new java.util.Properties(properties32);
        java.lang.Object obj35 = properties31.put((java.lang.Object) properties33, (java.lang.Object) (short) 1);
        java.util.Properties properties36 = new java.util.Properties(properties33);
        boolean boolean37 = properties4.remove((java.lang.Object) "", (java.lang.Object) properties36);
        java.util.Properties properties38 = null;
        java.util.Properties properties39 = new java.util.Properties(properties38);
        java.util.Properties properties40 = new java.util.Properties(properties38);
        java.lang.Object obj41 = properties40.clone();
        boolean boolean42 = properties4.contains(obj41);
        java.util.Collection<java.lang.Object> objCollection43 = properties4.values();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties44 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties44.setDefaultJtaTimeout((long) (byte) 10);
        atomikosProperties44.setCheckpointInterval((long) (byte) 0);
        atomikosProperties44.setTransactionManagerUniqueName("");
        java.util.Properties properties51 = atomikosProperties44.asProperties();
        java.lang.String str52 = atomikosProperties44.getLogBaseName();
        atomikosProperties44.setCheckpointInterval(100L);
        java.lang.String str55 = atomikosProperties44.getTransactionManagerUniqueName();
        atomikosProperties44.setLogBaseName("{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.tm_unique_name=, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
        atomikosProperties44.setThreadedTwoPhaseCommit(true);
        atomikosProperties44.setEnableLogging(false);
        java.lang.Object obj62 = properties4.get((java.lang.Object) atomikosProperties44);
        java.util.Properties properties63 = atomikosProperties44.asProperties();
        atomikosProperties44.setMaxTimeout((long) (byte) 0);
        atomikosProperties44.setThreadedTwoPhaseCommit(false);
        long long68 = atomikosProperties44.getMaxTimeout();
        org.junit.Assert.assertNull(obj6);
        org.junit.Assert.assertNull(obj14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(strSet16);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNull(obj35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(obj41);
        org.junit.Assert.assertEquals(obj41.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj41), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj41), "{}");
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(objCollection43);
        org.junit.Assert.assertNotNull(properties51);
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "tmlog" + "'", str52, "tmlog");
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "" + "'", str55, "");
        org.junit.Assert.assertNull(obj62);
        org.junit.Assert.assertNotNull(properties63);
        org.junit.Assert.assertTrue("'" + long68 + "' != '" + 0L + "'", long68 == 0L);
    }

    @Test
    public void test1117() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1117");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Properties properties2 = new java.util.Properties(properties0);
        java.util.Properties properties3 = null;
        java.util.Properties properties4 = new java.util.Properties(properties3);
        java.lang.Object obj6 = properties2.put((java.lang.Object) properties4, (java.lang.Object) (short) 1);
        boolean boolean7 = properties2.isEmpty();
        properties2.clear();
        java.util.Properties properties9 = null;
        java.util.Properties properties10 = new java.util.Properties(properties9);
        java.util.Properties properties11 = new java.util.Properties(properties9);
        java.util.Properties properties12 = null;
        java.util.Properties properties13 = new java.util.Properties(properties12);
        java.lang.Object obj15 = properties11.put((java.lang.Object) properties13, (java.lang.Object) (short) 1);
        boolean boolean16 = properties11.isEmpty();
        java.util.Properties properties17 = null;
        java.util.Properties properties18 = new java.util.Properties(properties17);
        java.util.Properties properties19 = new java.util.Properties(properties17);
        boolean boolean20 = properties11.containsKey((java.lang.Object) properties19);
        java.util.Properties properties21 = new java.util.Properties(properties11);
        java.util.Properties properties22 = null;
        java.util.Properties properties23 = new java.util.Properties(properties22);
        java.util.Properties properties24 = new java.util.Properties(properties22);
        boolean boolean26 = properties24.containsValue((java.lang.Object) (short) 100);
        java.util.Properties properties27 = null;
        java.util.Properties properties28 = new java.util.Properties(properties27);
        java.util.Properties properties29 = new java.util.Properties(properties27);
        java.util.Properties properties30 = null;
        java.util.Properties properties31 = new java.util.Properties(properties30);
        java.lang.Object obj33 = properties29.put((java.lang.Object) properties31, (java.lang.Object) (short) 1);
        java.util.Enumeration<java.lang.Object> objEnumeration34 = properties31.elements();
        java.lang.Object obj35 = properties24.remove((java.lang.Object) properties31);
        boolean boolean36 = properties31.isEmpty();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet37 = properties31.entrySet();
        java.util.Properties properties38 = new java.util.Properties(properties31);
        java.util.Set<java.lang.String> strSet39 = properties31.stringPropertyNames();
        boolean boolean41 = properties2.replace((java.lang.Object) properties21, (java.lang.Object) strSet39, (java.lang.Object) "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.tm_unique_name=, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
        java.lang.String str42 = properties2.toString();
        java.util.Properties properties43 = null;
        java.util.Properties properties44 = new java.util.Properties(properties43);
        java.util.Properties properties45 = new java.util.Properties(properties43);
        boolean boolean47 = properties45.containsValue((java.lang.Object) (short) 100);
        java.util.Properties properties48 = new java.util.Properties(properties45);
        java.lang.String str50 = properties48.getProperty("hi!");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties51 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties51.setDefaultJtaTimeout((long) (byte) 10);
        long long54 = atomikosProperties51.getDefaultJtaTimeout();
        atomikosProperties51.setTransactionManagerUniqueName("hi!");
        atomikosProperties51.setLogBaseName("tmlog");
        boolean boolean59 = atomikosProperties51.isSerialJtaTransactions();
        java.util.Properties properties60 = atomikosProperties51.asProperties();
        boolean boolean61 = properties48.equals((java.lang.Object) atomikosProperties51);
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet62 = properties48.entrySet();
        boolean boolean63 = properties48.isEmpty();
        java.util.Properties properties64 = null;
        java.util.Properties properties65 = new java.util.Properties(properties64);
        java.util.Properties properties66 = new java.util.Properties(properties64);
        boolean boolean68 = properties66.containsValue((java.lang.Object) (short) 100);
        java.util.Properties properties69 = new java.util.Properties(properties66);
        java.lang.String str71 = properties69.getProperty("hi!");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties72 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties72.setDefaultJtaTimeout((long) (byte) 10);
        atomikosProperties72.setCheckpointInterval((long) (byte) 0);
        atomikosProperties72.setTransactionManagerUniqueName("");
        java.util.Properties properties79 = atomikosProperties72.asProperties();
        java.lang.String str80 = atomikosProperties72.getLogBaseName();
        atomikosProperties72.setCheckpointInterval(100L);
        java.lang.String str83 = atomikosProperties72.getTransactionManagerUniqueName();
        atomikosProperties72.setLogBaseName("{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.tm_unique_name=, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
        atomikosProperties72.setThreadedTwoPhaseCommit(true);
        boolean boolean88 = properties69.contains((java.lang.Object) true);
        java.lang.Object obj89 = properties2.put((java.lang.Object) properties48, (java.lang.Object) true);
        java.io.Writer writer90 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties2.store(writer90, "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=52, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.tm_unique_name=, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(obj6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNull(obj15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNull(obj33);
        org.junit.Assert.assertNotNull(objEnumeration34);
        org.junit.Assert.assertNull(obj35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNotNull(objEntrySet37);
        org.junit.Assert.assertNotNull(strSet39);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "{}" + "'", str42, "{}");
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNull(str50);
        org.junit.Assert.assertTrue("'" + long54 + "' != '" + 10L + "'", long54 == 10L);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertNotNull(properties60);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertNotNull(objEntrySet62);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertNull(str71);
        org.junit.Assert.assertNotNull(properties79);
        org.junit.Assert.assertEquals("'" + str80 + "' != '" + "tmlog" + "'", str80, "tmlog");
        org.junit.Assert.assertEquals("'" + str83 + "' != '" + "" + "'", str83, "");
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + false + "'", boolean88 == false);
        org.junit.Assert.assertNull(obj89);
    }

    @Test
    public void test1118() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1118");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setThreadedTwoPhaseCommit(true);
        atomikosProperties0.setMaxActives((int) (byte) 0);
        atomikosProperties0.setDefaultJtaTimeout((long) 10);
        atomikosProperties0.setDefaultJtaTimeout((long) (short) 10);
        java.util.Properties properties9 = atomikosProperties0.asProperties();
        java.lang.String str10 = atomikosProperties0.getLogBaseName();
        org.junit.Assert.assertNotNull(properties9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "tmlog" + "'", str10, "tmlog");
    }

    @Test
    public void test1119() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1119");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Properties properties2 = new java.util.Properties(properties0);
        java.util.Properties properties3 = null;
        java.util.Properties properties4 = new java.util.Properties(properties3);
        java.lang.Object obj6 = properties2.put((java.lang.Object) properties4, (java.lang.Object) (short) 1);
        java.util.Properties properties7 = new java.util.Properties(properties4);
        java.util.Properties properties8 = new java.util.Properties(properties4);
        java.util.Set<java.lang.Object> objSet9 = properties8.keySet();
        java.util.Properties properties10 = new java.util.Properties(properties8);
        int int11 = properties10.size();
        java.util.Properties properties12 = null;
        java.util.Properties properties13 = new java.util.Properties(properties12);
        java.util.Properties properties14 = new java.util.Properties(properties12);
        java.util.Properties properties15 = null;
        java.util.Properties properties16 = new java.util.Properties(properties15);
        java.lang.Object obj18 = properties14.put((java.lang.Object) properties16, (java.lang.Object) (short) 1);
        java.util.Properties properties20 = null;
        java.util.Properties properties21 = new java.util.Properties(properties20);
        java.util.Properties properties22 = new java.util.Properties(properties20);
        java.util.Properties properties23 = null;
        java.util.Properties properties24 = new java.util.Properties(properties23);
        java.lang.Object obj26 = properties22.put((java.lang.Object) properties24, (java.lang.Object) (short) 1);
        boolean boolean27 = properties16.remove((java.lang.Object) false, (java.lang.Object) (short) 1);
        java.util.Set<java.lang.String> strSet28 = properties16.stringPropertyNames();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties29 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties29.setDefaultJtaTimeout((long) (byte) 10);
        long long32 = atomikosProperties29.getDefaultJtaTimeout();
        java.lang.Object obj33 = properties16.get((java.lang.Object) atomikosProperties29);
        atomikosProperties29.setCheckpointInterval((long) (short) 100);
        java.util.Properties properties36 = atomikosProperties29.asProperties();
        java.lang.String str37 = atomikosProperties29.getLogBaseName();
        atomikosProperties29.setLogBaseDir("{}");
        java.util.Properties properties40 = null;
        java.util.Properties properties41 = new java.util.Properties(properties40);
        int int42 = properties41.size();
        java.lang.Object obj43 = properties10.getOrDefault((java.lang.Object) atomikosProperties29, (java.lang.Object) properties41);
        java.util.Properties properties44 = null;
        java.util.Properties properties45 = new java.util.Properties(properties44);
        java.util.Properties properties46 = new java.util.Properties(properties44);
        java.util.Properties properties47 = null;
        java.util.Properties properties48 = new java.util.Properties(properties47);
        java.lang.Object obj50 = properties46.put((java.lang.Object) properties48, (java.lang.Object) (short) 1);
        properties48.clear();
        int int52 = properties48.size();
        java.util.Properties properties53 = null;
        java.util.Properties properties54 = new java.util.Properties(properties53);
        java.util.Properties properties55 = new java.util.Properties(properties53);
        java.util.Properties properties56 = null;
        java.util.Properties properties57 = new java.util.Properties(properties56);
        java.lang.Object obj59 = properties55.put((java.lang.Object) properties57, (java.lang.Object) (short) 1);
        java.util.Properties properties60 = new java.util.Properties(properties57);
        java.util.Properties properties61 = new java.util.Properties(properties57);
        boolean boolean63 = properties48.remove((java.lang.Object) properties57, (java.lang.Object) 10.0f);
        java.util.Enumeration<java.lang.Object> objEnumeration64 = properties57.elements();
        java.util.Properties properties65 = new java.util.Properties(properties57);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties66 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        int int67 = atomikosProperties66.getMaxActives();
        long long68 = atomikosProperties66.getMaxTimeout();
        java.util.Properties properties69 = atomikosProperties66.asProperties();
        int int70 = atomikosProperties66.getMaxActives();
        java.lang.Object obj72 = properties65.putIfAbsent((java.lang.Object) atomikosProperties66, (java.lang.Object) 1);
        atomikosProperties66.setLogBaseDir("{}");
        java.util.Properties properties75 = atomikosProperties66.asProperties();
        properties10.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties75);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties77 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties77.setDefaultJtaTimeout((long) (byte) 10);
        long long80 = atomikosProperties77.getDefaultJtaTimeout();
        atomikosProperties77.setTransactionManagerUniqueName("");
        boolean boolean83 = atomikosProperties77.isEnableLogging();
        atomikosProperties77.setDefaultJtaTimeout((long) '4');
        java.lang.String str86 = atomikosProperties77.getTransactionManagerUniqueName();
        atomikosProperties77.setThreadedTwoPhaseCommit(false);
        boolean boolean89 = properties75.equals((java.lang.Object) false);
        java.lang.String str92 = properties75.getProperty("tmlog", "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=true, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=true, com.atomikos.icatch.max_actives=35, com.atomikos.icatch.log_base_name=tmlog}");
        org.junit.Assert.assertNull(obj6);
        org.junit.Assert.assertNotNull(objSet9);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertNull(obj18);
        org.junit.Assert.assertNull(obj26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(strSet28);
        org.junit.Assert.assertTrue("'" + long32 + "' != '" + 10L + "'", long32 == 10L);
        org.junit.Assert.assertNull(obj33);
        org.junit.Assert.assertNotNull(properties36);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "tmlog" + "'", str37, "tmlog");
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 0 + "'", int42 == 0);
        org.junit.Assert.assertNotNull(obj43);
        org.junit.Assert.assertEquals(obj43.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj43), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj43), "{}");
        org.junit.Assert.assertNull(obj50);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + 0 + "'", int52 == 0);
        org.junit.Assert.assertNull(obj59);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertNotNull(objEnumeration64);
        org.junit.Assert.assertTrue("'" + int67 + "' != '" + 50 + "'", int67 == 50);
        org.junit.Assert.assertTrue("'" + long68 + "' != '" + 300000L + "'", long68 == 300000L);
        org.junit.Assert.assertNotNull(properties69);
        org.junit.Assert.assertTrue("'" + int70 + "' != '" + 50 + "'", int70 == 50);
        org.junit.Assert.assertNull(obj72);
        org.junit.Assert.assertNotNull(properties75);
        org.junit.Assert.assertTrue("'" + long80 + "' != '" + 10L + "'", long80 == 10L);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + true + "'", boolean83 == true);
        org.junit.Assert.assertEquals("'" + str86 + "' != '" + "" + "'", str86, "");
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + false + "'", boolean89 == false);
        org.junit.Assert.assertEquals("'" + str92 + "' != '" + "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=true, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=true, com.atomikos.icatch.max_actives=35, com.atomikos.icatch.log_base_name=tmlog}" + "'", str92, "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=true, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=true, com.atomikos.icatch.max_actives=35, com.atomikos.icatch.log_base_name=tmlog}");
    }

    @Test
    public void test1120() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1120");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Properties properties2 = new java.util.Properties(properties0);
        java.util.Properties properties3 = null;
        java.util.Properties properties4 = new java.util.Properties(properties3);
        java.lang.Object obj6 = properties2.put((java.lang.Object) properties4, (java.lang.Object) (short) 1);
        java.util.Properties properties8 = null;
        java.util.Properties properties9 = new java.util.Properties(properties8);
        java.util.Properties properties10 = new java.util.Properties(properties8);
        java.util.Properties properties11 = null;
        java.util.Properties properties12 = new java.util.Properties(properties11);
        java.lang.Object obj14 = properties10.put((java.lang.Object) properties12, (java.lang.Object) (short) 1);
        boolean boolean15 = properties4.remove((java.lang.Object) false, (java.lang.Object) (short) 1);
        java.util.Set<java.lang.String> strSet16 = properties4.stringPropertyNames();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties17 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties17.setDefaultJtaTimeout((long) (byte) 10);
        long long20 = atomikosProperties17.getDefaultJtaTimeout();
        java.lang.Object obj21 = properties4.get((java.lang.Object) atomikosProperties17);
        int int22 = properties4.size();
        java.util.Properties properties23 = new java.util.Properties(properties4);
        java.util.Collection<java.lang.Object> objCollection24 = properties23.values();
        java.io.InputStream inputStream25 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties23.load(inputStream25);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(obj6);
        org.junit.Assert.assertNull(obj14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(strSet16);
        org.junit.Assert.assertTrue("'" + long20 + "' != '" + 10L + "'", long20 == 10L);
        org.junit.Assert.assertNull(obj21);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 0 + "'", int22 == 0);
        org.junit.Assert.assertNotNull(objCollection24);
    }

    @Test
    public void test1121() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1121");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setDefaultJtaTimeout((long) (byte) 10);
        atomikosProperties0.setCheckpointInterval((long) (byte) 0);
        atomikosProperties0.setTransactionManagerUniqueName("");
        java.util.Properties properties7 = atomikosProperties0.asProperties();
        java.lang.String str8 = atomikosProperties0.getLogBaseName();
        java.util.Properties properties9 = atomikosProperties0.asProperties();
        java.lang.String str10 = atomikosProperties0.getLogBaseDir();
        long long11 = atomikosProperties0.getCheckpointInterval();
        org.junit.Assert.assertNotNull(properties7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "tmlog" + "'", str8, "tmlog");
        org.junit.Assert.assertNotNull(properties9);
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertTrue("'" + long11 + "' != '" + 0L + "'", long11 == 0L);
    }

    @Test
    public void test1122() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1122");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Properties properties2 = new java.util.Properties(properties0);
        java.util.Properties properties3 = null;
        java.util.Properties properties4 = new java.util.Properties(properties3);
        java.lang.Object obj6 = properties2.put((java.lang.Object) properties4, (java.lang.Object) (short) 1);
        properties4.clear();
        int int8 = properties4.size();
        java.util.Properties properties9 = null;
        java.util.Properties properties10 = new java.util.Properties(properties9);
        java.util.Properties properties11 = new java.util.Properties(properties9);
        java.util.Properties properties12 = null;
        java.util.Properties properties13 = new java.util.Properties(properties12);
        java.lang.Object obj15 = properties11.put((java.lang.Object) properties13, (java.lang.Object) (short) 1);
        java.util.Properties properties16 = new java.util.Properties(properties13);
        java.util.Properties properties17 = new java.util.Properties(properties13);
        boolean boolean19 = properties4.remove((java.lang.Object) properties13, (java.lang.Object) 10.0f);
        java.util.Enumeration<java.lang.Object> objEnumeration20 = properties13.elements();
        java.util.Properties properties21 = new java.util.Properties(properties13);
        boolean boolean23 = properties13.contains((java.lang.Object) (byte) 100);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties24 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        int int25 = atomikosProperties24.getMaxActives();
        atomikosProperties24.setLogBaseName("");
        atomikosProperties24.setMaxActives((-1));
        java.lang.Object obj30 = properties13.remove((java.lang.Object) atomikosProperties24);
        java.io.InputStream inputStream31 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties13.load(inputStream31);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(obj6);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertNull(obj15);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(objEnumeration20);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 50 + "'", int25 == 50);
        org.junit.Assert.assertNull(obj30);
    }

    @Test
    public void test1123() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1123");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setDefaultJtaTimeout((long) (byte) 10);
        long long3 = atomikosProperties0.getDefaultJtaTimeout();
        atomikosProperties0.setTransactionManagerUniqueName("");
        boolean boolean6 = atomikosProperties0.isEnableLogging();
        atomikosProperties0.setDefaultJtaTimeout((long) '4');
        atomikosProperties0.setEnableLogging(false);
        atomikosProperties0.setMaxTimeout((long) ' ');
        org.junit.Assert.assertTrue("'" + long3 + "' != '" + 10L + "'", long3 == 10L);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
    }

    @Test
    public void test1124() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1124");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Properties properties2 = new java.util.Properties(properties0);
        java.util.Properties properties3 = null;
        java.util.Properties properties4 = new java.util.Properties(properties3);
        java.lang.Object obj6 = properties2.put((java.lang.Object) properties4, (java.lang.Object) (short) 1);
        java.util.Properties properties8 = null;
        java.util.Properties properties9 = new java.util.Properties(properties8);
        java.util.Properties properties10 = new java.util.Properties(properties8);
        java.util.Properties properties11 = null;
        java.util.Properties properties12 = new java.util.Properties(properties11);
        java.lang.Object obj14 = properties10.put((java.lang.Object) properties12, (java.lang.Object) (short) 1);
        boolean boolean15 = properties4.remove((java.lang.Object) false, (java.lang.Object) (short) 1);
        java.util.Set<java.lang.String> strSet16 = properties4.stringPropertyNames();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties17 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties17.setDefaultJtaTimeout((long) (byte) 10);
        long long20 = atomikosProperties17.getDefaultJtaTimeout();
        java.lang.Object obj21 = properties4.get((java.lang.Object) atomikosProperties17);
        java.util.Properties properties22 = null;
        java.util.Properties properties23 = new java.util.Properties(properties22);
        java.util.Properties properties24 = new java.util.Properties(properties22);
        java.util.Properties properties25 = null;
        java.util.Properties properties26 = new java.util.Properties(properties25);
        java.lang.Object obj28 = properties24.put((java.lang.Object) properties26, (java.lang.Object) (short) 1);
        java.util.Properties properties30 = null;
        java.util.Properties properties31 = new java.util.Properties(properties30);
        java.util.Properties properties32 = new java.util.Properties(properties30);
        java.util.Properties properties33 = null;
        java.util.Properties properties34 = new java.util.Properties(properties33);
        java.lang.Object obj36 = properties32.put((java.lang.Object) properties34, (java.lang.Object) (short) 1);
        boolean boolean37 = properties26.remove((java.lang.Object) false, (java.lang.Object) (short) 1);
        java.lang.Object obj39 = properties26.remove((java.lang.Object) '#');
        java.util.Set<java.lang.Object> objSet40 = properties26.keySet();
        boolean boolean41 = properties4.containsKey((java.lang.Object) properties26);
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet42 = properties4.entrySet();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties43 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties43.setThreadedTwoPhaseCommit(true);
        boolean boolean46 = atomikosProperties43.isEnableLogging();
        atomikosProperties43.setTransactionManagerUniqueName("{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=0, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog, {}={}}");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties49 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties49.setDefaultJtaTimeout((long) (byte) 10);
        atomikosProperties49.setCheckpointInterval((long) (byte) 0);
        atomikosProperties49.setTransactionManagerUniqueName("");
        boolean boolean56 = atomikosProperties49.isEnableLogging();
        java.lang.Class<?> wildcardClass57 = atomikosProperties49.getClass();
        java.lang.Object obj58 = properties4.put((java.lang.Object) "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=0, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog, {}={}}", (java.lang.Object) atomikosProperties49);
        java.util.Properties properties59 = null;
        java.util.Properties properties60 = new java.util.Properties(properties59);
        java.util.Properties properties61 = new java.util.Properties(properties59);
        java.util.Properties properties62 = null;
        java.util.Properties properties63 = new java.util.Properties(properties62);
        java.lang.Object obj65 = properties61.put((java.lang.Object) properties63, (java.lang.Object) (short) 1);
        java.util.Properties properties67 = null;
        java.util.Properties properties68 = new java.util.Properties(properties67);
        java.util.Properties properties69 = new java.util.Properties(properties67);
        java.util.Properties properties70 = null;
        java.util.Properties properties71 = new java.util.Properties(properties70);
        java.lang.Object obj73 = properties69.put((java.lang.Object) properties71, (java.lang.Object) (short) 1);
        boolean boolean74 = properties63.remove((java.lang.Object) false, (java.lang.Object) (short) 1);
        java.util.Enumeration<java.lang.Object> objEnumeration75 = properties63.elements();
        java.util.Properties properties76 = new java.util.Properties(properties63);
        java.lang.Object obj78 = properties4.getOrDefault((java.lang.Object) properties76, (java.lang.Object) 500L);
        java.lang.Class<?> wildcardClass79 = obj78.getClass();
        org.junit.Assert.assertNull(obj6);
        org.junit.Assert.assertNull(obj14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(strSet16);
        org.junit.Assert.assertTrue("'" + long20 + "' != '" + 10L + "'", long20 == 10L);
        org.junit.Assert.assertNull(obj21);
        org.junit.Assert.assertNull(obj28);
        org.junit.Assert.assertNull(obj36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNull(obj39);
        org.junit.Assert.assertNotNull(objSet40);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(objEntrySet42);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertNotNull(wildcardClass57);
        org.junit.Assert.assertNull(obj58);
        org.junit.Assert.assertNull(obj65);
        org.junit.Assert.assertNull(obj73);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
        org.junit.Assert.assertNotNull(objEnumeration75);
        org.junit.Assert.assertEquals("'" + obj78 + "' != '" + 500L + "'", obj78, 500L);
        org.junit.Assert.assertNotNull(wildcardClass79);
    }

    @Test
    public void test1125() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1125");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Properties properties2 = new java.util.Properties(properties0);
        java.util.Properties properties3 = null;
        java.util.Properties properties4 = new java.util.Properties(properties3);
        java.lang.Object obj6 = properties2.put((java.lang.Object) properties4, (java.lang.Object) (short) 1);
        java.util.Properties properties7 = null;
        java.util.Properties properties8 = new java.util.Properties(properties7);
        java.util.Properties properties9 = new java.util.Properties(properties7);
        java.util.Properties properties10 = null;
        java.util.Properties properties11 = new java.util.Properties(properties10);
        java.lang.Object obj13 = properties9.put((java.lang.Object) properties11, (java.lang.Object) (short) 1);
        properties11.clear();
        int int15 = properties11.size();
        java.util.Properties properties16 = null;
        java.util.Properties properties17 = new java.util.Properties(properties16);
        java.util.Properties properties18 = new java.util.Properties(properties16);
        java.util.Properties properties19 = null;
        java.util.Properties properties20 = new java.util.Properties(properties19);
        java.lang.Object obj22 = properties18.put((java.lang.Object) properties20, (java.lang.Object) (short) 1);
        java.util.Properties properties23 = new java.util.Properties(properties20);
        java.util.Properties properties24 = new java.util.Properties(properties20);
        boolean boolean26 = properties11.remove((java.lang.Object) properties20, (java.lang.Object) 10.0f);
        java.util.Enumeration<java.lang.Object> objEnumeration27 = properties20.elements();
        java.util.Properties properties28 = new java.util.Properties(properties20);
        java.util.Set<java.lang.Object> objSet29 = properties28.keySet();
        boolean boolean30 = properties4.contains((java.lang.Object) objSet29);
        java.io.OutputStream outputStream31 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties4.storeToXML(outputStream31, "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=true, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=true, com.atomikos.icatch.max_actives=35, com.atomikos.icatch.log_base_name=tmlog}", "{=}");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(obj6);
        org.junit.Assert.assertNull(obj13);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0);
        org.junit.Assert.assertNull(obj22);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(objEnumeration27);
        org.junit.Assert.assertNotNull(objSet29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
    }

    @Test
    public void test1126() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1126");
        java.util.Properties properties0 = new java.util.Properties();
        java.util.Enumeration<?> wildcardEnumeration1 = properties0.propertyNames();
        java.lang.Object obj2 = properties0.clone();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties3 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties3.setThreadedTwoPhaseCommit(true);
        atomikosProperties3.setMaxActives((int) '#');
        atomikosProperties3.setForceShutdownOnVmExit(true);
        java.lang.String str10 = atomikosProperties3.getLogBaseDir();
        java.util.Properties properties11 = atomikosProperties3.asProperties();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties12 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties12.setThreadedTwoPhaseCommit(true);
        atomikosProperties12.setMaxActives((int) '#');
        atomikosProperties12.setEnableLogging(true);
        boolean boolean19 = properties11.containsKey((java.lang.Object) true);
        java.lang.String str21 = properties11.getProperty("{}");
        java.util.Properties properties22 = null;
        java.util.Properties properties23 = new java.util.Properties(properties22);
        java.util.Properties properties24 = new java.util.Properties(properties22);
        java.util.Properties properties25 = null;
        java.util.Properties properties26 = new java.util.Properties(properties25);
        java.lang.Object obj28 = properties24.put((java.lang.Object) properties26, (java.lang.Object) (short) 1);
        properties26.clear();
        int int30 = properties26.size();
        java.util.Properties properties31 = new java.util.Properties(properties26);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties32 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        int int33 = atomikosProperties32.getMaxActives();
        long long34 = atomikosProperties32.getMaxTimeout();
        java.util.Properties properties35 = atomikosProperties32.asProperties();
        java.util.Properties properties36 = atomikosProperties32.asProperties();
        java.util.Properties properties37 = null;
        java.util.Properties properties38 = new java.util.Properties(properties37);
        java.util.Properties properties39 = new java.util.Properties(properties37);
        java.util.Properties properties40 = null;
        java.util.Properties properties41 = new java.util.Properties(properties40);
        java.lang.Object obj43 = properties39.put((java.lang.Object) properties41, (java.lang.Object) (short) 1);
        java.util.Enumeration<java.lang.Object> objEnumeration44 = properties41.elements();
        java.lang.Object obj45 = properties26.replace((java.lang.Object) atomikosProperties32, (java.lang.Object) properties41);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties47 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties47.setThreadedTwoPhaseCommit(true);
        java.lang.String str50 = atomikosProperties47.getService();
        boolean boolean51 = atomikosProperties47.isSerialJtaTransactions();
        java.lang.Object obj52 = properties41.getOrDefault((java.lang.Object) "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.tm_unique_name=, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}", (java.lang.Object) atomikosProperties47);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties53 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties53.setDefaultJtaTimeout((long) (byte) 10);
        long long56 = atomikosProperties53.getDefaultJtaTimeout();
        java.lang.String str57 = atomikosProperties53.getTransactionManagerUniqueName();
        atomikosProperties53.setThreadedTwoPhaseCommit(true);
        java.lang.Object obj60 = properties11.putIfAbsent((java.lang.Object) atomikosProperties47, (java.lang.Object) atomikosProperties53);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties61 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties61.setDefaultJtaTimeout((long) (byte) 10);
        atomikosProperties61.setSerialJtaTransactions(false);
        atomikosProperties61.setMaxTimeout((long) (short) -1);
        long long68 = atomikosProperties61.getDefaultJtaTimeout();
        java.util.Properties properties69 = atomikosProperties61.asProperties();
        boolean boolean70 = properties0.remove((java.lang.Object) atomikosProperties53, (java.lang.Object) atomikosProperties61);
        java.util.Properties properties71 = null;
        java.util.Properties properties72 = new java.util.Properties(properties71);
        java.util.Properties properties73 = new java.util.Properties(properties71);
        java.util.Properties properties74 = null;
        java.util.Properties properties75 = new java.util.Properties(properties74);
        java.lang.Object obj77 = properties73.put((java.lang.Object) properties75, (java.lang.Object) (short) 1);
        properties75.clear();
        java.lang.String str80 = properties75.getProperty("");
        java.util.Properties properties81 = null;
        java.util.Properties properties82 = new java.util.Properties(properties81);
        java.util.Properties properties83 = new java.util.Properties(properties81);
        java.util.Properties properties84 = null;
        java.util.Properties properties85 = new java.util.Properties(properties84);
        java.lang.Object obj87 = properties83.put((java.lang.Object) properties85, (java.lang.Object) (short) 1);
        properties75.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties83);
        java.util.Enumeration<java.lang.Object> objEnumeration89 = properties75.keys();
        java.util.Enumeration<java.lang.Object> objEnumeration90 = properties75.elements();
        boolean boolean91 = properties0.contains((java.lang.Object) properties75);
        java.io.PrintStream printStream92 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties0.list(printStream92);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardEnumeration1);
        org.junit.Assert.assertNotNull(obj2);
        org.junit.Assert.assertEquals(obj2.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj2), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj2), "{}");
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertNotNull(properties11);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNull(str21);
        org.junit.Assert.assertNull(obj28);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 0 + "'", int30 == 0);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 50 + "'", int33 == 50);
        org.junit.Assert.assertTrue("'" + long34 + "' != '" + 300000L + "'", long34 == 300000L);
        org.junit.Assert.assertNotNull(properties35);
        org.junit.Assert.assertNotNull(properties36);
        org.junit.Assert.assertNull(obj43);
        org.junit.Assert.assertNotNull(objEnumeration44);
        org.junit.Assert.assertNull(obj45);
        org.junit.Assert.assertNull(str50);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertNotNull(obj52);
        org.junit.Assert.assertTrue("'" + long56 + "' != '" + 10L + "'", long56 == 10L);
        org.junit.Assert.assertNull(str57);
        org.junit.Assert.assertNull(obj60);
        org.junit.Assert.assertTrue("'" + long68 + "' != '" + 10L + "'", long68 == 10L);
        org.junit.Assert.assertNotNull(properties69);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertNull(obj77);
        org.junit.Assert.assertNull(str80);
        org.junit.Assert.assertNull(obj87);
        org.junit.Assert.assertNotNull(objEnumeration89);
        org.junit.Assert.assertNotNull(objEnumeration90);
        org.junit.Assert.assertTrue("'" + boolean91 + "' != '" + false + "'", boolean91 == false);
    }

    @Test
    public void test1127() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1127");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        boolean boolean1 = atomikosProperties0.isForceShutdownOnVmExit();
        java.util.Properties properties2 = atomikosProperties0.asProperties();
        java.lang.String str3 = atomikosProperties0.getTransactionManagerUniqueName();
        java.lang.String str4 = atomikosProperties0.getLogBaseDir();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertNotNull(properties2);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNull(str4);
    }

    @Test
    public void test1128() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1128");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Properties properties2 = new java.util.Properties(properties0);
        java.util.Properties properties3 = null;
        java.util.Properties properties4 = new java.util.Properties(properties3);
        java.lang.Object obj6 = properties2.put((java.lang.Object) properties4, (java.lang.Object) (short) 1);
        java.util.Properties properties7 = new java.util.Properties(properties4);
        properties4.clear();
        java.io.OutputStream outputStream9 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties4.storeToXML(outputStream9, "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=0, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=true, com.atomikos.icatch.max_actives=100, com.atomikos.icatch.log_base_name=tmlog}");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(obj6);
    }

    @Test
    public void test1129() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1129");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Properties properties2 = new java.util.Properties(properties0);
        java.util.Properties properties3 = null;
        java.util.Properties properties4 = new java.util.Properties(properties3);
        java.lang.Object obj6 = properties2.put((java.lang.Object) properties4, (java.lang.Object) (short) 1);
        properties4.clear();
        java.lang.String str9 = properties4.getProperty("");
        java.util.Properties properties10 = null;
        java.util.Properties properties11 = new java.util.Properties(properties10);
        java.util.Properties properties12 = new java.util.Properties(properties10);
        java.util.Properties properties13 = null;
        java.util.Properties properties14 = new java.util.Properties(properties13);
        java.lang.Object obj16 = properties12.put((java.lang.Object) properties14, (java.lang.Object) (short) 1);
        properties4.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties12);
        java.util.Enumeration<java.lang.Object> objEnumeration18 = properties4.keys();
        java.util.Properties properties19 = null;
        java.util.Properties properties20 = new java.util.Properties(properties19);
        java.util.Properties properties21 = new java.util.Properties(properties19);
        java.util.Properties properties22 = null;
        java.util.Properties properties23 = new java.util.Properties(properties22);
        java.lang.Object obj25 = properties21.put((java.lang.Object) properties23, (java.lang.Object) (short) 1);
        boolean boolean26 = properties21.isEmpty();
        java.util.Properties properties27 = null;
        java.util.Properties properties28 = new java.util.Properties(properties27);
        java.util.Properties properties29 = new java.util.Properties(properties27);
        boolean boolean30 = properties21.containsKey((java.lang.Object) properties29);
        java.util.Properties properties31 = null;
        java.util.Properties properties32 = new java.util.Properties(properties31);
        java.util.Properties properties33 = new java.util.Properties(properties31);
        java.util.Properties properties34 = null;
        java.util.Properties properties35 = new java.util.Properties(properties34);
        java.lang.Object obj37 = properties33.put((java.lang.Object) properties35, (java.lang.Object) (short) 1);
        java.util.Properties properties39 = null;
        java.util.Properties properties40 = new java.util.Properties(properties39);
        java.util.Properties properties41 = new java.util.Properties(properties39);
        java.util.Properties properties42 = null;
        java.util.Properties properties43 = new java.util.Properties(properties42);
        java.lang.Object obj45 = properties41.put((java.lang.Object) properties43, (java.lang.Object) (short) 1);
        boolean boolean46 = properties35.remove((java.lang.Object) false, (java.lang.Object) (short) 1);
        java.util.Set<java.lang.String> strSet47 = properties35.stringPropertyNames();
        boolean boolean48 = properties29.containsKey((java.lang.Object) strSet47);
        java.util.Properties properties49 = null;
        java.util.Properties properties50 = new java.util.Properties(properties49);
        java.util.Properties properties51 = new java.util.Properties(properties49);
        java.util.Properties properties52 = null;
        java.util.Properties properties53 = new java.util.Properties(properties52);
        java.lang.Object obj55 = properties51.put((java.lang.Object) properties53, (java.lang.Object) (short) 1);
        properties53.clear();
        java.lang.String str58 = properties53.getProperty("");
        java.util.Properties properties59 = null;
        java.util.Properties properties60 = new java.util.Properties(properties59);
        java.util.Properties properties61 = new java.util.Properties(properties59);
        java.util.Properties properties62 = null;
        java.util.Properties properties63 = new java.util.Properties(properties62);
        java.lang.Object obj65 = properties61.put((java.lang.Object) properties63, (java.lang.Object) (short) 1);
        properties53.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties61);
        boolean boolean67 = properties29.containsKey((java.lang.Object) properties53);
        java.util.Properties properties69 = null;
        java.util.Properties properties70 = new java.util.Properties(properties69);
        java.util.Properties properties71 = new java.util.Properties(properties69);
        java.util.Properties properties72 = null;
        java.util.Properties properties73 = new java.util.Properties(properties72);
        java.lang.Object obj75 = properties71.put((java.lang.Object) properties73, (java.lang.Object) (short) 1);
        properties73.clear();
        int int77 = properties73.size();
        java.lang.Object obj80 = properties73.setProperty("hi!", "hi!");
        java.lang.Object obj83 = properties73.setProperty("tmlog", "tmlog");
        java.lang.Object obj84 = properties53.putIfAbsent((java.lang.Object) (short) 10, (java.lang.Object) "tmlog");
        properties53.clear();
        boolean boolean86 = properties4.equals((java.lang.Object) properties53);
        java.io.InputStream inputStream87 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties53.load(inputStream87);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(obj6);
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertNull(obj16);
        org.junit.Assert.assertNotNull(objEnumeration18);
        org.junit.Assert.assertNull(obj25);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNull(obj37);
        org.junit.Assert.assertNull(obj45);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(strSet47);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNull(obj55);
        org.junit.Assert.assertNull(str58);
        org.junit.Assert.assertNull(obj65);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertNull(obj75);
        org.junit.Assert.assertTrue("'" + int77 + "' != '" + 0 + "'", int77 == 0);
        org.junit.Assert.assertNull(obj80);
        org.junit.Assert.assertNull(obj83);
        org.junit.Assert.assertNull(obj84);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + false + "'", boolean86 == false);
    }

    @Test
    public void test1130() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1130");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setDefaultJtaTimeout((long) (byte) 10);
        atomikosProperties0.setCheckpointInterval((long) (byte) 0);
        atomikosProperties0.setEnableLogging(true);
        atomikosProperties0.setThreadedTwoPhaseCommit(false);
        boolean boolean9 = atomikosProperties0.isForceShutdownOnVmExit();
        atomikosProperties0.setThreadedTwoPhaseCommit(true);
        java.util.Properties properties12 = atomikosProperties0.asProperties();
        java.io.OutputStream outputStream13 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties12.storeToXML(outputStream13, "{}", "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.tm_unique_name=, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(properties12);
    }

    @Test
    public void test1131() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1131");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Properties properties2 = new java.util.Properties(properties0);
        java.util.Properties properties3 = null;
        java.util.Properties properties4 = new java.util.Properties(properties3);
        java.lang.Object obj6 = properties2.put((java.lang.Object) properties4, (java.lang.Object) (short) 1);
        java.util.Properties properties8 = null;
        java.util.Properties properties9 = new java.util.Properties(properties8);
        java.util.Properties properties10 = new java.util.Properties(properties8);
        java.util.Properties properties11 = null;
        java.util.Properties properties12 = new java.util.Properties(properties11);
        java.lang.Object obj14 = properties10.put((java.lang.Object) properties12, (java.lang.Object) (short) 1);
        boolean boolean15 = properties4.remove((java.lang.Object) false, (java.lang.Object) (short) 1);
        java.util.Set<java.lang.String> strSet16 = properties4.stringPropertyNames();
        java.util.Enumeration<java.lang.Object> objEnumeration17 = properties4.elements();
        java.lang.String str18 = properties4.toString();
        java.lang.String str19 = properties4.toString();
        java.util.Properties properties20 = null;
        java.util.Properties properties21 = new java.util.Properties(properties20);
        java.util.Properties properties22 = new java.util.Properties(properties20);
        java.util.Properties properties23 = null;
        java.util.Properties properties24 = new java.util.Properties(properties23);
        java.lang.Object obj26 = properties22.put((java.lang.Object) properties24, (java.lang.Object) (short) 1);
        java.util.Properties properties28 = null;
        java.util.Properties properties29 = new java.util.Properties(properties28);
        java.util.Properties properties30 = new java.util.Properties(properties28);
        java.util.Properties properties31 = null;
        java.util.Properties properties32 = new java.util.Properties(properties31);
        java.lang.Object obj34 = properties30.put((java.lang.Object) properties32, (java.lang.Object) (short) 1);
        boolean boolean35 = properties24.remove((java.lang.Object) false, (java.lang.Object) (short) 1);
        java.util.Properties properties36 = new java.util.Properties(properties24);
        boolean boolean37 = properties24.isEmpty();
        java.util.Enumeration<?> wildcardEnumeration38 = properties24.propertyNames();
        java.lang.String str40 = properties24.getProperty("{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=0, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.tm_unique_name=, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties41 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties41.setDefaultJtaTimeout((long) (byte) 10);
        atomikosProperties41.setCheckpointInterval((long) (byte) 0);
        atomikosProperties41.setTransactionManagerUniqueName("");
        java.util.Properties properties48 = atomikosProperties41.asProperties();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties49 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties49.setThreadedTwoPhaseCommit(true);
        atomikosProperties49.setMaxActives((int) '#');
        atomikosProperties49.setForceShutdownOnVmExit(true);
        java.lang.String str56 = atomikosProperties49.getLogBaseDir();
        java.lang.Object obj57 = properties48.remove((java.lang.Object) atomikosProperties49);
        java.lang.Object obj58 = properties4.put((java.lang.Object) "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=0, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.tm_unique_name=, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}", (java.lang.Object) properties48);
        java.util.Enumeration<java.lang.Object> objEnumeration59 = properties48.elements();
        org.junit.Assert.assertNull(obj6);
        org.junit.Assert.assertNull(obj14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(strSet16);
        org.junit.Assert.assertNotNull(objEnumeration17);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "{}" + "'", str18, "{}");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "{}" + "'", str19, "{}");
        org.junit.Assert.assertNull(obj26);
        org.junit.Assert.assertNull(obj34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertNotNull(wildcardEnumeration38);
        org.junit.Assert.assertNull(str40);
        org.junit.Assert.assertNotNull(properties48);
        org.junit.Assert.assertNull(str56);
        org.junit.Assert.assertNull(obj57);
        org.junit.Assert.assertNull(obj58);
        org.junit.Assert.assertNotNull(objEnumeration59);
    }

    @Test
    public void test1132() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1132");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Properties properties2 = new java.util.Properties(properties0);
        boolean boolean4 = properties2.containsValue((java.lang.Object) (short) 100);
        java.util.Properties properties5 = new java.util.Properties(properties2);
        java.lang.String str7 = properties5.getProperty("hi!");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties8 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties8.setDefaultJtaTimeout((long) (byte) 10);
        long long11 = atomikosProperties8.getDefaultJtaTimeout();
        atomikosProperties8.setTransactionManagerUniqueName("hi!");
        atomikosProperties8.setLogBaseName("tmlog");
        boolean boolean16 = atomikosProperties8.isSerialJtaTransactions();
        java.util.Properties properties17 = atomikosProperties8.asProperties();
        boolean boolean18 = properties5.equals((java.lang.Object) atomikosProperties8);
        java.util.Enumeration<java.lang.Object> objEnumeration19 = properties5.elements();
        java.util.Properties properties20 = null;
        java.util.Properties properties21 = new java.util.Properties(properties20);
        java.util.Properties properties22 = new java.util.Properties(properties20);
        java.util.Properties properties23 = null;
        java.util.Properties properties24 = new java.util.Properties(properties23);
        java.lang.Object obj26 = properties22.put((java.lang.Object) properties24, (java.lang.Object) (short) 1);
        boolean boolean27 = properties22.isEmpty();
        java.util.Properties properties28 = null;
        java.util.Properties properties29 = new java.util.Properties(properties28);
        java.util.Properties properties30 = new java.util.Properties(properties28);
        boolean boolean31 = properties22.containsKey((java.lang.Object) properties30);
        java.util.Properties properties32 = new java.util.Properties(properties30);
        java.lang.Object obj33 = properties32.clone();
        java.util.Set<java.lang.String> strSet34 = properties32.stringPropertyNames();
        java.util.Properties properties35 = null;
        java.util.Properties properties36 = new java.util.Properties(properties35);
        java.util.Properties properties37 = new java.util.Properties(properties35);
        java.util.Properties properties38 = null;
        java.util.Properties properties39 = new java.util.Properties(properties38);
        java.lang.Object obj41 = properties37.put((java.lang.Object) properties39, (java.lang.Object) (short) 1);
        java.util.Properties properties43 = null;
        java.util.Properties properties44 = new java.util.Properties(properties43);
        java.util.Properties properties45 = new java.util.Properties(properties43);
        java.util.Properties properties46 = null;
        java.util.Properties properties47 = new java.util.Properties(properties46);
        java.lang.Object obj49 = properties45.put((java.lang.Object) properties47, (java.lang.Object) (short) 1);
        boolean boolean50 = properties39.remove((java.lang.Object) false, (java.lang.Object) (short) 1);
        java.util.Set<java.lang.String> strSet51 = properties39.stringPropertyNames();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties52 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties52.setDefaultJtaTimeout((long) (byte) 10);
        long long55 = atomikosProperties52.getDefaultJtaTimeout();
        java.lang.Object obj56 = properties39.get((java.lang.Object) atomikosProperties52);
        java.util.Enumeration<java.lang.Object> objEnumeration57 = properties39.elements();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties58 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties58.setThreadedTwoPhaseCommit(true);
        atomikosProperties58.setMaxActives((int) '#');
        atomikosProperties58.setEnableLogging(true);
        int int65 = atomikosProperties58.getMaxActives();
        boolean boolean66 = properties39.containsValue((java.lang.Object) atomikosProperties58);
        java.lang.Object obj67 = properties5.put((java.lang.Object) properties32, (java.lang.Object) boolean66);
        java.io.PrintWriter printWriter68 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties5.list(printWriter68);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertTrue("'" + long11 + "' != '" + 10L + "'", long11 == 10L);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(properties17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(objEnumeration19);
        org.junit.Assert.assertNull(obj26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNotNull(obj33);
        org.junit.Assert.assertEquals(obj33.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj33), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj33), "{}");
        org.junit.Assert.assertNotNull(strSet34);
        org.junit.Assert.assertNull(obj41);
        org.junit.Assert.assertNull(obj49);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertNotNull(strSet51);
        org.junit.Assert.assertTrue("'" + long55 + "' != '" + 10L + "'", long55 == 10L);
        org.junit.Assert.assertNull(obj56);
        org.junit.Assert.assertNotNull(objEnumeration57);
        org.junit.Assert.assertTrue("'" + int65 + "' != '" + 35 + "'", int65 == 35);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertNull(obj67);
    }

    @Test
    public void test1133() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1133");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setThreadedTwoPhaseCommit(true);
        atomikosProperties0.setMaxActives((int) '#');
        atomikosProperties0.setEnableLogging(true);
        int int7 = atomikosProperties0.getMaxActives();
        boolean boolean8 = atomikosProperties0.isEnableLogging();
        java.lang.String str9 = atomikosProperties0.getTransactionManagerUniqueName();
        java.util.Properties properties10 = atomikosProperties0.asProperties();
        java.lang.String str11 = atomikosProperties0.getLogBaseDir();
        atomikosProperties0.setCheckpointInterval((long) (byte) 1);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 35 + "'", int7 == 35);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertNotNull(properties10);
        org.junit.Assert.assertNull(str11);
    }

    @Test
    public void test1134() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1134");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Properties properties2 = new java.util.Properties(properties0);
        java.util.Properties properties3 = null;
        java.util.Properties properties4 = new java.util.Properties(properties3);
        java.lang.Object obj6 = properties2.put((java.lang.Object) properties4, (java.lang.Object) (short) 1);
        java.util.Properties properties8 = null;
        java.util.Properties properties9 = new java.util.Properties(properties8);
        java.util.Properties properties10 = new java.util.Properties(properties8);
        java.util.Properties properties11 = null;
        java.util.Properties properties12 = new java.util.Properties(properties11);
        java.lang.Object obj14 = properties10.put((java.lang.Object) properties12, (java.lang.Object) (short) 1);
        boolean boolean15 = properties4.remove((java.lang.Object) false, (java.lang.Object) (short) 1);
        java.util.Properties properties16 = new java.util.Properties(properties4);
        int int17 = properties16.size();
        java.util.Collection<java.lang.Object> objCollection18 = properties16.values();
        java.util.Set<java.lang.Object> objSet19 = properties16.keySet();
        java.util.Properties properties20 = null;
        java.util.Properties properties21 = new java.util.Properties(properties20);
        java.util.Properties properties22 = new java.util.Properties(properties20);
        boolean boolean24 = properties22.containsValue((java.lang.Object) (short) 100);
        java.util.Properties properties25 = null;
        java.util.Properties properties26 = new java.util.Properties(properties25);
        java.util.Properties properties27 = new java.util.Properties(properties25);
        java.util.Properties properties28 = null;
        java.util.Properties properties29 = new java.util.Properties(properties28);
        java.lang.Object obj31 = properties27.put((java.lang.Object) properties29, (java.lang.Object) (short) 1);
        java.util.Enumeration<java.lang.Object> objEnumeration32 = properties29.elements();
        java.lang.Object obj33 = properties22.remove((java.lang.Object) properties29);
        java.lang.Object obj36 = properties29.setProperty("", "");
        java.lang.String str38 = properties29.getProperty("tmlog");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties39 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties39.setDefaultJtaTimeout((long) (byte) 10);
        atomikosProperties39.setCheckpointInterval((long) (byte) 0);
        atomikosProperties39.setTransactionManagerUniqueName("");
        java.util.Properties properties46 = atomikosProperties39.asProperties();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties47 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties47.setThreadedTwoPhaseCommit(true);
        atomikosProperties47.setMaxActives((int) '#');
        atomikosProperties47.setForceShutdownOnVmExit(true);
        java.lang.String str54 = atomikosProperties47.getLogBaseDir();
        java.lang.Object obj55 = properties46.remove((java.lang.Object) atomikosProperties47);
        properties29.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties46);
        properties29.clear();
        java.util.Set<java.lang.String> strSet58 = properties29.stringPropertyNames();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties59 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties59.setDefaultJtaTimeout((long) (byte) 10);
        atomikosProperties59.setCheckpointInterval((long) (byte) 0);
        atomikosProperties59.setTransactionManagerUniqueName("");
        java.util.Properties properties66 = atomikosProperties59.asProperties();
        java.lang.String str67 = atomikosProperties59.getTransactionManagerUniqueName();
        atomikosProperties59.setDefaultJtaTimeout((long) (-1));
        java.lang.String str70 = atomikosProperties59.getService();
        atomikosProperties59.setLogBaseDir("{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.tm_unique_name=, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
        boolean boolean73 = atomikosProperties59.isSerialJtaTransactions();
        long long74 = atomikosProperties59.getMaxTimeout();
        java.lang.Object obj75 = properties16.replace((java.lang.Object) properties29, (java.lang.Object) atomikosProperties59);
        java.io.PrintStream printStream76 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties16.list(printStream76);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(obj6);
        org.junit.Assert.assertNull(obj14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 0 + "'", int17 == 0);
        org.junit.Assert.assertNotNull(objCollection18);
        org.junit.Assert.assertNotNull(objSet19);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNull(obj31);
        org.junit.Assert.assertNotNull(objEnumeration32);
        org.junit.Assert.assertNull(obj33);
        org.junit.Assert.assertNull(obj36);
        org.junit.Assert.assertNull(str38);
        org.junit.Assert.assertNotNull(properties46);
        org.junit.Assert.assertNull(str54);
        org.junit.Assert.assertNull(obj55);
        org.junit.Assert.assertNotNull(strSet58);
        org.junit.Assert.assertNotNull(properties66);
        org.junit.Assert.assertEquals("'" + str67 + "' != '" + "" + "'", str67, "");
        org.junit.Assert.assertNull(str70);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + true + "'", boolean73 == true);
        org.junit.Assert.assertTrue("'" + long74 + "' != '" + 300000L + "'", long74 == 300000L);
        org.junit.Assert.assertNull(obj75);
    }

    @Test
    public void test1135() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1135");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Properties properties2 = new java.util.Properties(properties0);
        boolean boolean4 = properties2.containsValue((java.lang.Object) (short) 100);
        java.util.Properties properties5 = new java.util.Properties(properties2);
        java.util.Properties properties6 = new java.util.Properties(properties5);
        java.util.Properties properties7 = null;
        java.util.Properties properties8 = new java.util.Properties(properties7);
        java.util.Properties properties9 = new java.util.Properties(properties7);
        java.util.Properties properties10 = null;
        java.util.Properties properties11 = new java.util.Properties(properties10);
        java.lang.Object obj13 = properties9.put((java.lang.Object) properties11, (java.lang.Object) (short) 1);
        java.util.Properties properties15 = null;
        java.util.Properties properties16 = new java.util.Properties(properties15);
        java.util.Properties properties17 = new java.util.Properties(properties15);
        java.util.Properties properties18 = null;
        java.util.Properties properties19 = new java.util.Properties(properties18);
        java.lang.Object obj21 = properties17.put((java.lang.Object) properties19, (java.lang.Object) (short) 1);
        boolean boolean22 = properties11.remove((java.lang.Object) false, (java.lang.Object) (short) 1);
        java.util.Set<java.lang.String> strSet23 = properties11.stringPropertyNames();
        java.util.Enumeration<java.lang.Object> objEnumeration24 = properties11.elements();
        java.lang.String str25 = properties11.toString();
        boolean boolean26 = properties11.isEmpty();
        boolean boolean27 = properties6.containsValue((java.lang.Object) boolean26);
        java.util.Properties properties28 = new java.util.Properties(properties6);
        java.util.Properties properties29 = null;
        java.util.Properties properties30 = new java.util.Properties(properties29);
        java.util.Properties properties31 = new java.util.Properties(properties29);
        java.util.Properties properties32 = null;
        java.util.Properties properties33 = new java.util.Properties(properties32);
        java.lang.Object obj35 = properties31.put((java.lang.Object) properties33, (java.lang.Object) (short) 1);
        java.util.Properties properties37 = null;
        java.util.Properties properties38 = new java.util.Properties(properties37);
        java.util.Properties properties39 = new java.util.Properties(properties37);
        java.util.Properties properties40 = null;
        java.util.Properties properties41 = new java.util.Properties(properties40);
        java.lang.Object obj43 = properties39.put((java.lang.Object) properties41, (java.lang.Object) (short) 1);
        boolean boolean44 = properties33.remove((java.lang.Object) false, (java.lang.Object) (short) 1);
        java.util.Set<java.lang.String> strSet45 = properties33.stringPropertyNames();
        java.lang.Object obj46 = properties33.clone();
        java.util.Properties properties47 = new java.util.Properties(properties33);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties48 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties48.setDefaultJtaTimeout((long) (byte) 10);
        atomikosProperties48.setCheckpointInterval((long) (byte) 0);
        long long53 = atomikosProperties48.getMaxTimeout();
        java.util.Properties properties54 = null;
        java.util.Properties properties55 = new java.util.Properties(properties54);
        java.util.Properties properties56 = new java.util.Properties(properties54);
        java.util.Properties properties57 = null;
        java.util.Properties properties58 = new java.util.Properties(properties57);
        java.lang.Object obj60 = properties56.put((java.lang.Object) properties58, (java.lang.Object) (short) 1);
        java.util.Enumeration<java.lang.Object> objEnumeration61 = properties58.elements();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet62 = properties58.entrySet();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties63 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties63.setDefaultJtaTimeout((long) (byte) 10);
        long long66 = atomikosProperties63.getDefaultJtaTimeout();
        atomikosProperties63.setTransactionManagerUniqueName("");
        boolean boolean69 = atomikosProperties63.isEnableLogging();
        boolean boolean70 = properties58.containsKey((java.lang.Object) boolean69);
        java.util.Properties properties71 = null;
        java.util.Properties properties72 = new java.util.Properties(properties71);
        java.util.Properties properties73 = new java.util.Properties(properties71);
        java.util.Properties properties74 = null;
        java.util.Properties properties75 = new java.util.Properties(properties74);
        java.lang.Object obj77 = properties73.put((java.lang.Object) properties75, (java.lang.Object) (short) 1);
        java.util.Enumeration<java.lang.Object> objEnumeration78 = properties75.elements();
        boolean boolean79 = properties58.containsKey((java.lang.Object) objEnumeration78);
        java.lang.Object obj80 = properties47.put((java.lang.Object) long53, (java.lang.Object) properties58);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties81 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties81.setThreadedTwoPhaseCommit(true);
        atomikosProperties81.setMaxActives((int) '#');
        atomikosProperties81.setEnableLogging(true);
        java.lang.String str88 = atomikosProperties81.getLogBaseDir();
        boolean boolean89 = atomikosProperties81.isThreadedTwoPhaseCommit();
        atomikosProperties81.setLogBaseDir("hi!");
        java.lang.Object obj92 = properties6.replace((java.lang.Object) long53, (java.lang.Object) "hi!");
        boolean boolean93 = properties6.isEmpty();
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNull(obj13);
        org.junit.Assert.assertNull(obj21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(strSet23);
        org.junit.Assert.assertNotNull(objEnumeration24);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "{}" + "'", str25, "{}");
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNull(obj35);
        org.junit.Assert.assertNull(obj43);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(strSet45);
        org.junit.Assert.assertNotNull(obj46);
        org.junit.Assert.assertEquals(obj46.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj46), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj46), "{}");
        org.junit.Assert.assertTrue("'" + long53 + "' != '" + 300000L + "'", long53 == 300000L);
        org.junit.Assert.assertNull(obj60);
        org.junit.Assert.assertNotNull(objEnumeration61);
        org.junit.Assert.assertNotNull(objEntrySet62);
        org.junit.Assert.assertTrue("'" + long66 + "' != '" + 10L + "'", long66 == 10L);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + true + "'", boolean69 == true);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertNull(obj77);
        org.junit.Assert.assertNotNull(objEnumeration78);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + false + "'", boolean79 == false);
        org.junit.Assert.assertNull(obj80);
        org.junit.Assert.assertNull(str88);
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + true + "'", boolean89 == true);
        org.junit.Assert.assertNull(obj92);
        org.junit.Assert.assertTrue("'" + boolean93 + "' != '" + true + "'", boolean93 == true);
    }

    @Test
    public void test1136() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1136");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setDefaultJtaTimeout((long) (byte) 10);
        atomikosProperties0.setCheckpointInterval((long) (byte) 0);
        atomikosProperties0.setTransactionManagerUniqueName("");
        java.util.Properties properties7 = atomikosProperties0.asProperties();
        java.util.Properties properties8 = atomikosProperties0.asProperties();
        java.lang.Object obj9 = null;
        boolean boolean10 = properties8.equals(obj9);
        java.lang.Class<?> wildcardClass11 = properties8.getClass();
        org.junit.Assert.assertNotNull(properties7);
        org.junit.Assert.assertNotNull(properties8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(wildcardClass11);
    }

    @Test
    public void test1137() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1137");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setDefaultJtaTimeout((long) (byte) 10);
        atomikosProperties0.setCheckpointInterval((long) (byte) 0);
        atomikosProperties0.setTransactionManagerUniqueName("");
        boolean boolean7 = atomikosProperties0.isEnableLogging();
        java.util.Properties properties8 = atomikosProperties0.asProperties();
        java.util.Properties properties9 = new java.util.Properties(properties8);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties10 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties10.setDefaultJtaTimeout((long) (byte) 10);
        atomikosProperties10.setSerialJtaTransactions(false);
        atomikosProperties10.setMaxTimeout((long) (short) -1);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties17 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties17.setDefaultJtaTimeout((long) (byte) 10);
        atomikosProperties17.setCheckpointInterval((long) (byte) 0);
        atomikosProperties17.setTransactionManagerUniqueName("");
        java.util.Properties properties24 = atomikosProperties17.asProperties();
        java.lang.String str25 = atomikosProperties17.getLogBaseName();
        java.util.Properties properties26 = atomikosProperties17.asProperties();
        java.lang.Object obj27 = properties8.getOrDefault((java.lang.Object) (short) -1, (java.lang.Object) atomikosProperties17);
        java.util.Properties properties28 = atomikosProperties17.asProperties();
        atomikosProperties17.setForceShutdownOnVmExit(false);
        atomikosProperties17.setSerialJtaTransactions(false);
        atomikosProperties17.setLogBaseDir("hi!");
        java.lang.Class<?> wildcardClass35 = atomikosProperties17.getClass();
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(properties8);
        org.junit.Assert.assertNotNull(properties24);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "tmlog" + "'", str25, "tmlog");
        org.junit.Assert.assertNotNull(properties26);
        org.junit.Assert.assertNotNull(obj27);
        org.junit.Assert.assertNotNull(properties28);
        org.junit.Assert.assertNotNull(wildcardClass35);
    }

    @Test
    public void test1138() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1138");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setDefaultJtaTimeout((long) (byte) 10);
        atomikosProperties0.setCheckpointInterval((long) (byte) 0);
        atomikosProperties0.setTransactionManagerUniqueName("");
        java.util.Properties properties7 = atomikosProperties0.asProperties();
        java.lang.String str8 = atomikosProperties0.getTransactionManagerUniqueName();
        atomikosProperties0.setDefaultJtaTimeout((long) (-1));
        java.util.Properties properties11 = atomikosProperties0.asProperties();
        java.util.Properties properties12 = new java.util.Properties(properties11);
        java.util.Properties properties13 = null;
        java.util.Properties properties14 = new java.util.Properties(properties13);
        java.util.Properties properties15 = new java.util.Properties(properties13);
        boolean boolean17 = properties15.containsValue((java.lang.Object) (short) 100);
        java.util.Properties properties18 = null;
        java.util.Properties properties19 = new java.util.Properties(properties18);
        java.util.Properties properties20 = new java.util.Properties(properties18);
        java.util.Properties properties21 = null;
        java.util.Properties properties22 = new java.util.Properties(properties21);
        java.lang.Object obj24 = properties20.put((java.lang.Object) properties22, (java.lang.Object) (short) 1);
        java.util.Enumeration<java.lang.Object> objEnumeration25 = properties22.elements();
        java.lang.Object obj26 = properties15.remove((java.lang.Object) properties22);
        java.lang.Object obj29 = properties22.setProperty("", "");
        properties22.clear();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties31 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        boolean boolean32 = atomikosProperties31.isForceShutdownOnVmExit();
        java.lang.String str33 = atomikosProperties31.getLogBaseName();
        java.lang.String str34 = atomikosProperties31.getService();
        atomikosProperties31.setLogBaseName("{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.tm_unique_name=, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
        long long37 = atomikosProperties31.getMaxTimeout();
        atomikosProperties31.setEnableLogging(false);
        java.lang.Object obj40 = properties12.put((java.lang.Object) properties22, (java.lang.Object) false);
        java.lang.Object obj41 = properties22.clone();
        java.lang.String str42 = properties22.toString();
        java.util.Properties properties43 = new java.util.Properties(properties22);
        java.lang.Object obj44 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj45 = properties22.get(obj44);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(properties7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "" + "'", str8, "");
        org.junit.Assert.assertNotNull(properties11);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNull(obj24);
        org.junit.Assert.assertNotNull(objEnumeration25);
        org.junit.Assert.assertNull(obj26);
        org.junit.Assert.assertNull(obj29);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "tmlog" + "'", str33, "tmlog");
        org.junit.Assert.assertNull(str34);
        org.junit.Assert.assertTrue("'" + long37 + "' != '" + 300000L + "'", long37 == 300000L);
        org.junit.Assert.assertNull(obj40);
        org.junit.Assert.assertNotNull(obj41);
        org.junit.Assert.assertEquals(obj41.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj41), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj41), "{}");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "{}" + "'", str42, "{}");
    }

    @Test
    public void test1139() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1139");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Properties properties2 = new java.util.Properties(properties0);
        java.util.Properties properties3 = null;
        java.util.Properties properties4 = new java.util.Properties(properties3);
        java.lang.Object obj6 = properties2.put((java.lang.Object) properties4, (java.lang.Object) (short) 1);
        java.util.Properties properties7 = new java.util.Properties(properties4);
        java.util.Properties properties8 = new java.util.Properties(properties4);
        java.util.Set<java.lang.Object> objSet9 = properties8.keySet();
        java.util.Properties properties10 = new java.util.Properties(properties8);
        int int11 = properties10.size();
        java.util.Properties properties12 = null;
        java.util.Properties properties13 = new java.util.Properties(properties12);
        java.util.Properties properties14 = new java.util.Properties(properties12);
        java.util.Properties properties15 = null;
        java.util.Properties properties16 = new java.util.Properties(properties15);
        java.lang.Object obj18 = properties14.put((java.lang.Object) properties16, (java.lang.Object) (short) 1);
        java.util.Properties properties20 = null;
        java.util.Properties properties21 = new java.util.Properties(properties20);
        java.util.Properties properties22 = new java.util.Properties(properties20);
        java.util.Properties properties23 = null;
        java.util.Properties properties24 = new java.util.Properties(properties23);
        java.lang.Object obj26 = properties22.put((java.lang.Object) properties24, (java.lang.Object) (short) 1);
        boolean boolean27 = properties16.remove((java.lang.Object) false, (java.lang.Object) (short) 1);
        java.util.Set<java.lang.String> strSet28 = properties16.stringPropertyNames();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties29 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties29.setDefaultJtaTimeout((long) (byte) 10);
        long long32 = atomikosProperties29.getDefaultJtaTimeout();
        java.lang.Object obj33 = properties16.get((java.lang.Object) atomikosProperties29);
        atomikosProperties29.setCheckpointInterval((long) (short) 100);
        java.util.Properties properties36 = atomikosProperties29.asProperties();
        java.lang.String str37 = atomikosProperties29.getLogBaseName();
        atomikosProperties29.setLogBaseDir("{}");
        java.util.Properties properties40 = null;
        java.util.Properties properties41 = new java.util.Properties(properties40);
        int int42 = properties41.size();
        java.lang.Object obj43 = properties10.getOrDefault((java.lang.Object) atomikosProperties29, (java.lang.Object) properties41);
        java.util.Properties properties44 = new java.util.Properties(properties10);
        java.util.Set<java.lang.Object> objSet45 = properties44.keySet();
        org.junit.Assert.assertNull(obj6);
        org.junit.Assert.assertNotNull(objSet9);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertNull(obj18);
        org.junit.Assert.assertNull(obj26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(strSet28);
        org.junit.Assert.assertTrue("'" + long32 + "' != '" + 10L + "'", long32 == 10L);
        org.junit.Assert.assertNull(obj33);
        org.junit.Assert.assertNotNull(properties36);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "tmlog" + "'", str37, "tmlog");
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 0 + "'", int42 == 0);
        org.junit.Assert.assertNotNull(obj43);
        org.junit.Assert.assertEquals(obj43.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj43), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj43), "{}");
        org.junit.Assert.assertNotNull(objSet45);
    }

    @Test
    public void test1140() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1140");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Properties properties2 = new java.util.Properties(properties0);
        java.util.Properties properties3 = null;
        java.util.Properties properties4 = new java.util.Properties(properties3);
        java.lang.Object obj6 = properties2.put((java.lang.Object) properties4, (java.lang.Object) (short) 1);
        properties4.clear();
        java.util.Properties properties8 = null;
        java.util.Properties properties9 = new java.util.Properties(properties8);
        java.util.Properties properties10 = new java.util.Properties(properties8);
        java.util.Properties properties11 = null;
        java.util.Properties properties12 = new java.util.Properties(properties11);
        java.lang.Object obj14 = properties10.put((java.lang.Object) properties12, (java.lang.Object) (short) 1);
        java.util.Collection<java.lang.Object> objCollection15 = properties12.values();
        boolean boolean16 = properties4.containsKey((java.lang.Object) objCollection15);
        boolean boolean17 = properties4.isEmpty();
        java.util.Enumeration<java.lang.Object> objEnumeration18 = properties4.elements();
        java.util.Properties properties19 = null;
        java.util.Properties properties20 = new java.util.Properties(properties19);
        java.util.Properties properties21 = new java.util.Properties(properties19);
        java.util.Properties properties22 = null;
        java.util.Properties properties23 = new java.util.Properties(properties22);
        java.lang.Object obj25 = properties21.put((java.lang.Object) properties23, (java.lang.Object) (short) 1);
        boolean boolean26 = properties21.isEmpty();
        java.util.Properties properties27 = null;
        java.util.Properties properties28 = new java.util.Properties(properties27);
        java.util.Properties properties29 = new java.util.Properties(properties27);
        boolean boolean30 = properties21.containsKey((java.lang.Object) properties29);
        java.util.Properties properties31 = new java.util.Properties(properties29);
        java.util.Properties properties32 = null;
        java.util.Properties properties33 = new java.util.Properties(properties32);
        java.util.Properties properties34 = new java.util.Properties(properties32);
        java.util.Properties properties35 = null;
        java.util.Properties properties36 = new java.util.Properties(properties35);
        java.lang.Object obj38 = properties34.put((java.lang.Object) properties36, (java.lang.Object) (short) 1);
        boolean boolean39 = properties34.isEmpty();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties40 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties40.setDefaultJtaTimeout((long) (byte) 10);
        atomikosProperties40.setCheckpointInterval((long) (byte) 0);
        atomikosProperties40.setTransactionManagerUniqueName("");
        java.util.Properties properties47 = atomikosProperties40.asProperties();
        java.lang.Object obj48 = properties34.remove((java.lang.Object) properties47);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties49 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties49.setDefaultJtaTimeout((long) (byte) 10);
        atomikosProperties49.setCheckpointInterval((long) (byte) 0);
        atomikosProperties49.setTransactionManagerUniqueName("");
        java.lang.Object obj56 = properties47.remove((java.lang.Object) atomikosProperties49);
        java.util.Enumeration<java.lang.Object> objEnumeration57 = properties47.elements();
        java.lang.Object obj58 = properties31.get((java.lang.Object) properties47);
        java.util.Properties properties59 = new java.util.Properties(properties31);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties60 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties60.setDefaultJtaTimeout((long) (byte) 10);
        atomikosProperties60.setCheckpointInterval((long) (byte) 0);
        long long65 = atomikosProperties60.getMaxTimeout();
        atomikosProperties60.setSerialJtaTransactions(true);
        java.util.Properties properties68 = null;
        java.util.Properties properties69 = new java.util.Properties(properties68);
        java.util.Properties properties70 = new java.util.Properties(properties68);
        java.util.Properties properties71 = null;
        java.util.Properties properties72 = new java.util.Properties(properties71);
        java.lang.Object obj74 = properties70.put((java.lang.Object) properties72, (java.lang.Object) (short) 1);
        java.util.Properties properties76 = null;
        java.util.Properties properties77 = new java.util.Properties(properties76);
        java.util.Properties properties78 = new java.util.Properties(properties76);
        java.util.Properties properties79 = null;
        java.util.Properties properties80 = new java.util.Properties(properties79);
        java.lang.Object obj82 = properties78.put((java.lang.Object) properties80, (java.lang.Object) (short) 1);
        boolean boolean83 = properties72.remove((java.lang.Object) false, (java.lang.Object) (short) 1);
        java.util.Set<java.lang.String> strSet84 = properties72.stringPropertyNames();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties85 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties85.setDefaultJtaTimeout((long) (byte) 10);
        long long88 = atomikosProperties85.getDefaultJtaTimeout();
        java.lang.Object obj89 = properties72.get((java.lang.Object) atomikosProperties85);
        long long90 = atomikosProperties85.getCheckpointInterval();
        boolean boolean91 = atomikosProperties85.isEnableLogging();
        boolean boolean92 = properties4.replace((java.lang.Object) properties31, (java.lang.Object) atomikosProperties60, (java.lang.Object) atomikosProperties85);
        java.io.OutputStream outputStream93 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties31.store(outputStream93, "{com.atomikos.icatch.enable_logging=false, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=true, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(obj6);
        org.junit.Assert.assertNull(obj14);
        org.junit.Assert.assertNotNull(objCollection15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(objEnumeration18);
        org.junit.Assert.assertNull(obj25);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNull(obj38);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(properties47);
        org.junit.Assert.assertNull(obj48);
        org.junit.Assert.assertNull(obj56);
        org.junit.Assert.assertNotNull(objEnumeration57);
        org.junit.Assert.assertNull(obj58);
        org.junit.Assert.assertTrue("'" + long65 + "' != '" + 300000L + "'", long65 == 300000L);
        org.junit.Assert.assertNull(obj74);
        org.junit.Assert.assertNull(obj82);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + false + "'", boolean83 == false);
        org.junit.Assert.assertNotNull(strSet84);
        org.junit.Assert.assertTrue("'" + long88 + "' != '" + 10L + "'", long88 == 10L);
        org.junit.Assert.assertNull(obj89);
        org.junit.Assert.assertTrue("'" + long90 + "' != '" + 500L + "'", long90 == 500L);
        org.junit.Assert.assertTrue("'" + boolean91 + "' != '" + true + "'", boolean91 == true);
        org.junit.Assert.assertTrue("'" + boolean92 + "' != '" + false + "'", boolean92 == false);
    }

    @Test
    public void test1141() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1141");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Properties properties2 = new java.util.Properties(properties0);
        java.util.Properties properties3 = null;
        java.util.Properties properties4 = new java.util.Properties(properties3);
        java.lang.Object obj6 = properties2.put((java.lang.Object) properties4, (java.lang.Object) (short) 1);
        properties4.clear();
        int int8 = properties4.size();
        java.util.Properties properties9 = null;
        java.util.Properties properties10 = new java.util.Properties(properties9);
        java.util.Properties properties11 = new java.util.Properties(properties9);
        java.util.Properties properties12 = null;
        java.util.Properties properties13 = new java.util.Properties(properties12);
        java.lang.Object obj15 = properties11.put((java.lang.Object) properties13, (java.lang.Object) (short) 1);
        java.util.Properties properties16 = new java.util.Properties(properties13);
        java.util.Properties properties17 = new java.util.Properties(properties13);
        boolean boolean19 = properties4.remove((java.lang.Object) properties13, (java.lang.Object) 10.0f);
        java.util.Enumeration<java.lang.Object> objEnumeration20 = properties13.elements();
        java.util.Properties properties21 = new java.util.Properties(properties13);
        boolean boolean23 = properties13.contains((java.lang.Object) (byte) 100);
        java.io.OutputStream outputStream24 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties13.store(outputStream24, "{tmlog={com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=0, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.tm_unique_name=, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}, 4=true}");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(obj6);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertNull(obj15);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(objEnumeration20);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
    }

    @Test
    public void test1142() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1142");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        int int1 = atomikosProperties0.getMaxActives();
        long long2 = atomikosProperties0.getMaxTimeout();
        java.util.Properties properties3 = atomikosProperties0.asProperties();
        java.util.Properties properties4 = atomikosProperties0.asProperties();
        long long5 = atomikosProperties0.getCheckpointInterval();
        java.lang.String str6 = atomikosProperties0.getTransactionManagerUniqueName();
        atomikosProperties0.setTransactionManagerUniqueName("{}");
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 50 + "'", int1 == 50);
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + 300000L + "'", long2 == 300000L);
        org.junit.Assert.assertNotNull(properties3);
        org.junit.Assert.assertNotNull(properties4);
        org.junit.Assert.assertTrue("'" + long5 + "' != '" + 500L + "'", long5 == 500L);
        org.junit.Assert.assertNull(str6);
    }

    @Test
    public void test1143() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1143");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Properties properties2 = new java.util.Properties(properties0);
        java.util.Properties properties3 = null;
        java.util.Properties properties4 = new java.util.Properties(properties3);
        java.lang.Object obj6 = properties2.put((java.lang.Object) properties4, (java.lang.Object) (short) 1);
        java.util.Properties properties8 = null;
        java.util.Properties properties9 = new java.util.Properties(properties8);
        java.util.Properties properties10 = new java.util.Properties(properties8);
        java.util.Properties properties11 = null;
        java.util.Properties properties12 = new java.util.Properties(properties11);
        java.lang.Object obj14 = properties10.put((java.lang.Object) properties12, (java.lang.Object) (short) 1);
        boolean boolean15 = properties4.remove((java.lang.Object) false, (java.lang.Object) (short) 1);
        java.util.Set<java.lang.String> strSet16 = properties4.stringPropertyNames();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties17 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties17.setDefaultJtaTimeout((long) (byte) 10);
        atomikosProperties17.setCheckpointInterval((long) (byte) 0);
        atomikosProperties17.setTransactionManagerUniqueName("");
        boolean boolean24 = atomikosProperties17.isEnableLogging();
        atomikosProperties17.setSerialJtaTransactions(false);
        atomikosProperties17.setLogBaseDir("");
        java.util.Properties properties29 = null;
        java.util.Properties properties30 = new java.util.Properties(properties29);
        java.util.Properties properties31 = new java.util.Properties(properties29);
        java.util.Properties properties32 = null;
        java.util.Properties properties33 = new java.util.Properties(properties32);
        java.lang.Object obj35 = properties31.put((java.lang.Object) properties33, (java.lang.Object) (short) 1);
        java.util.Properties properties36 = new java.util.Properties(properties33);
        boolean boolean37 = properties4.remove((java.lang.Object) "", (java.lang.Object) properties36);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties38 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties38.setThreadedTwoPhaseCommit(true);
        atomikosProperties38.setMaxActives((int) '#');
        atomikosProperties38.setForceShutdownOnVmExit(true);
        java.lang.String str45 = atomikosProperties38.getLogBaseDir();
        java.util.Properties properties46 = atomikosProperties38.asProperties();
        boolean boolean47 = properties36.containsKey((java.lang.Object) atomikosProperties38);
        atomikosProperties38.setForceShutdownOnVmExit(false);
        java.lang.Class<?> wildcardClass50 = atomikosProperties38.getClass();
        org.junit.Assert.assertNull(obj6);
        org.junit.Assert.assertNull(obj14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(strSet16);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNull(obj35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNull(str45);
        org.junit.Assert.assertNotNull(properties46);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNotNull(wildcardClass50);
    }

    @Test
    public void test1144() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1144");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Properties properties2 = new java.util.Properties(properties0);
        java.util.Properties properties3 = null;
        java.util.Properties properties4 = new java.util.Properties(properties3);
        java.lang.Object obj6 = properties2.put((java.lang.Object) properties4, (java.lang.Object) (short) 1);
        properties4.clear();
        int int8 = properties4.size();
        java.util.Properties properties9 = null;
        java.util.Properties properties10 = new java.util.Properties(properties9);
        java.util.Properties properties11 = new java.util.Properties(properties9);
        java.util.Properties properties12 = null;
        java.util.Properties properties13 = new java.util.Properties(properties12);
        java.lang.Object obj15 = properties11.put((java.lang.Object) properties13, (java.lang.Object) (short) 1);
        java.util.Properties properties16 = new java.util.Properties(properties13);
        java.util.Properties properties17 = new java.util.Properties(properties13);
        boolean boolean19 = properties4.remove((java.lang.Object) properties13, (java.lang.Object) 10.0f);
        java.util.Enumeration<java.lang.Object> objEnumeration20 = properties13.elements();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties21 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties21.setDefaultJtaTimeout((long) (byte) 10);
        atomikosProperties21.setCheckpointInterval((long) (byte) 0);
        long long26 = atomikosProperties21.getMaxTimeout();
        atomikosProperties21.setSerialJtaTransactions(true);
        java.util.Properties properties29 = new java.util.Properties();
        java.util.Enumeration<?> wildcardEnumeration30 = properties29.propertyNames();
        java.lang.Object obj31 = properties13.replace((java.lang.Object) atomikosProperties21, (java.lang.Object) properties29);
        boolean boolean32 = atomikosProperties21.isForceShutdownOnVmExit();
        org.junit.Assert.assertNull(obj6);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertNull(obj15);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(objEnumeration20);
        org.junit.Assert.assertTrue("'" + long26 + "' != '" + 300000L + "'", long26 == 300000L);
        org.junit.Assert.assertNotNull(wildcardEnumeration30);
        org.junit.Assert.assertNull(obj31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
    }

    @Test
    public void test1145() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1145");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Properties properties2 = new java.util.Properties(properties0);
        java.util.Properties properties3 = null;
        java.util.Properties properties4 = new java.util.Properties(properties3);
        java.lang.Object obj6 = properties2.put((java.lang.Object) properties4, (java.lang.Object) (short) 1);
        java.util.Properties properties8 = null;
        java.util.Properties properties9 = new java.util.Properties(properties8);
        java.util.Properties properties10 = new java.util.Properties(properties8);
        java.util.Properties properties11 = null;
        java.util.Properties properties12 = new java.util.Properties(properties11);
        java.lang.Object obj14 = properties10.put((java.lang.Object) properties12, (java.lang.Object) (short) 1);
        boolean boolean15 = properties4.remove((java.lang.Object) false, (java.lang.Object) (short) 1);
        java.util.Properties properties16 = new java.util.Properties(properties4);
        int int17 = properties16.size();
        java.util.Properties properties18 = null;
        java.util.Properties properties19 = new java.util.Properties(properties18);
        java.util.Properties properties20 = new java.util.Properties(properties18);
        java.util.Properties properties21 = null;
        java.util.Properties properties22 = new java.util.Properties(properties21);
        java.lang.Object obj24 = properties20.put((java.lang.Object) properties22, (java.lang.Object) (short) 1);
        java.util.Enumeration<java.lang.Object> objEnumeration25 = properties22.elements();
        java.util.Properties properties26 = new java.util.Properties(properties22);
        boolean boolean27 = properties16.contains((java.lang.Object) properties22);
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet28 = properties16.entrySet();
        java.io.Reader reader29 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties16.load(reader29);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(obj6);
        org.junit.Assert.assertNull(obj14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 0 + "'", int17 == 0);
        org.junit.Assert.assertNull(obj24);
        org.junit.Assert.assertNotNull(objEnumeration25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(objEntrySet28);
    }

    @Test
    public void test1146() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1146");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setDefaultJtaTimeout((long) (byte) 10);
        long long3 = atomikosProperties0.getDefaultJtaTimeout();
        atomikosProperties0.setTransactionManagerUniqueName("hi!");
        atomikosProperties0.setTransactionManagerUniqueName("{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=0, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.tm_unique_name=, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
        atomikosProperties0.setEnableLogging(false);
        java.lang.String str10 = atomikosProperties0.getTransactionManagerUniqueName();
        atomikosProperties0.setThreadedTwoPhaseCommit(false);
        long long13 = atomikosProperties0.getCheckpointInterval();
        org.junit.Assert.assertTrue("'" + long3 + "' != '" + 10L + "'", long3 == 10L);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=0, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.tm_unique_name=, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}" + "'", str10, "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=0, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.tm_unique_name=, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
        org.junit.Assert.assertTrue("'" + long13 + "' != '" + 500L + "'", long13 == 500L);
    }

    @Test
    public void test1147() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1147");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Properties properties2 = new java.util.Properties(properties0);
        java.util.Properties properties3 = null;
        java.util.Properties properties4 = new java.util.Properties(properties3);
        java.lang.Object obj6 = properties2.put((java.lang.Object) properties4, (java.lang.Object) (short) 1);
        java.util.Properties properties8 = null;
        java.util.Properties properties9 = new java.util.Properties(properties8);
        java.util.Properties properties10 = new java.util.Properties(properties8);
        java.util.Properties properties11 = null;
        java.util.Properties properties12 = new java.util.Properties(properties11);
        java.lang.Object obj14 = properties10.put((java.lang.Object) properties12, (java.lang.Object) (short) 1);
        boolean boolean15 = properties4.remove((java.lang.Object) false, (java.lang.Object) (short) 1);
        java.lang.Object obj17 = properties4.remove((java.lang.Object) '#');
        java.util.Set<java.lang.Object> objSet18 = properties4.keySet();
        properties4.clear();
        java.util.Properties properties20 = null;
        java.util.Properties properties21 = new java.util.Properties(properties20);
        java.util.Properties properties22 = new java.util.Properties(properties20);
        java.util.Properties properties23 = null;
        java.util.Properties properties24 = new java.util.Properties(properties23);
        java.lang.Object obj26 = properties22.put((java.lang.Object) properties24, (java.lang.Object) (short) 1);
        java.util.Enumeration<java.lang.Object> objEnumeration27 = properties24.elements();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet28 = properties24.entrySet();
        boolean boolean29 = properties4.equals((java.lang.Object) properties24);
        java.lang.Object obj30 = properties4.clone();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties31 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties31.setDefaultJtaTimeout((long) (byte) 10);
        atomikosProperties31.setCheckpointInterval((long) (byte) 0);
        atomikosProperties31.setEnableLogging(true);
        atomikosProperties31.setThreadedTwoPhaseCommit(false);
        boolean boolean40 = atomikosProperties31.isForceShutdownOnVmExit();
        boolean boolean41 = properties4.containsKey((java.lang.Object) atomikosProperties31);
        atomikosProperties31.setLogBaseDir("{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.tm_unique_name=, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
        atomikosProperties31.setSerialJtaTransactions(true);
        long long46 = atomikosProperties31.getDefaultJtaTimeout();
        atomikosProperties31.setService("{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=0, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=true, com.atomikos.icatch.max_actives=100, com.atomikos.icatch.log_base_name=tmlog}");
        org.junit.Assert.assertNull(obj6);
        org.junit.Assert.assertNull(obj14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNull(obj17);
        org.junit.Assert.assertNotNull(objSet18);
        org.junit.Assert.assertNull(obj26);
        org.junit.Assert.assertNotNull(objEnumeration27);
        org.junit.Assert.assertNotNull(objEntrySet28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNotNull(obj30);
        org.junit.Assert.assertEquals(obj30.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj30), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj30), "{}");
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertTrue("'" + long46 + "' != '" + 10L + "'", long46 == 10L);
    }

    @Test
    public void test1148() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1148");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setDefaultJtaTimeout((long) (byte) 10);
        long long3 = atomikosProperties0.getDefaultJtaTimeout();
        atomikosProperties0.setTransactionManagerUniqueName("");
        boolean boolean6 = atomikosProperties0.isEnableLogging();
        java.lang.String str7 = atomikosProperties0.getLogBaseDir();
        java.util.Properties properties8 = atomikosProperties0.asProperties();
        boolean boolean9 = atomikosProperties0.isEnableLogging();
        long long10 = atomikosProperties0.getDefaultJtaTimeout();
        java.util.Properties properties11 = atomikosProperties0.asProperties();
        java.io.InputStream inputStream12 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties11.load(inputStream12);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + long3 + "' != '" + 10L + "'", long3 == 10L);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNotNull(properties8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertTrue("'" + long10 + "' != '" + 10L + "'", long10 == 10L);
        org.junit.Assert.assertNotNull(properties11);
    }

    @Test
    public void test1149() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1149");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setDefaultJtaTimeout((long) (byte) 10);
        long long3 = atomikosProperties0.getDefaultJtaTimeout();
        atomikosProperties0.setTransactionManagerUniqueName("");
        boolean boolean6 = atomikosProperties0.isEnableLogging();
        java.lang.String str7 = atomikosProperties0.getLogBaseDir();
        java.util.Properties properties8 = atomikosProperties0.asProperties();
        boolean boolean9 = properties8.isEmpty();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties10 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties10.setDefaultJtaTimeout((long) (byte) 10);
        atomikosProperties10.setCheckpointInterval((long) (byte) 0);
        atomikosProperties10.setTransactionManagerUniqueName("");
        java.util.Properties properties17 = atomikosProperties10.asProperties();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties18 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties18.setThreadedTwoPhaseCommit(true);
        atomikosProperties18.setMaxActives((int) '#');
        atomikosProperties18.setForceShutdownOnVmExit(true);
        java.lang.String str25 = atomikosProperties18.getLogBaseDir();
        java.lang.Object obj26 = properties17.remove((java.lang.Object) atomikosProperties18);
        java.util.Collection<java.lang.Object> objCollection27 = properties17.values();
        boolean boolean28 = properties8.contains((java.lang.Object) properties17);
        java.util.Properties properties29 = new java.util.Properties(properties8);
        boolean boolean30 = properties29.isEmpty();
        java.util.Set<java.lang.Object> objSet31 = properties29.keySet();
        java.util.Properties properties32 = null;
        java.util.Properties properties33 = new java.util.Properties(properties32);
        java.util.Properties properties34 = new java.util.Properties(properties32);
        java.util.Properties properties35 = null;
        java.util.Properties properties36 = new java.util.Properties(properties35);
        java.lang.Object obj38 = properties34.put((java.lang.Object) properties36, (java.lang.Object) (short) 1);
        java.util.Enumeration<java.lang.Object> objEnumeration39 = properties36.elements();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet40 = properties36.entrySet();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties41 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties41.setDefaultJtaTimeout((long) (byte) 10);
        long long44 = atomikosProperties41.getDefaultJtaTimeout();
        atomikosProperties41.setTransactionManagerUniqueName("");
        boolean boolean47 = atomikosProperties41.isEnableLogging();
        boolean boolean48 = properties36.containsKey((java.lang.Object) boolean47);
        java.util.Properties properties49 = null;
        java.util.Properties properties50 = new java.util.Properties(properties49);
        java.util.Properties properties51 = new java.util.Properties(properties49);
        java.util.Properties properties52 = null;
        java.util.Properties properties53 = new java.util.Properties(properties52);
        java.lang.Object obj55 = properties51.put((java.lang.Object) properties53, (java.lang.Object) (short) 1);
        java.util.Enumeration<java.lang.Object> objEnumeration56 = properties53.elements();
        boolean boolean57 = properties36.containsKey((java.lang.Object) objEnumeration56);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties58 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties58.setDefaultJtaTimeout((long) (byte) 10);
        atomikosProperties58.setCheckpointInterval((long) (byte) 0);
        atomikosProperties58.setTransactionManagerUniqueName("");
        java.util.Properties properties65 = atomikosProperties58.asProperties();
        java.lang.String str66 = atomikosProperties58.getTransactionManagerUniqueName();
        atomikosProperties58.setLogBaseDir("{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=0, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.tm_unique_name=, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
        atomikosProperties58.setCheckpointInterval((long) (byte) 0);
        long long71 = atomikosProperties58.getDefaultJtaTimeout();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties72 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties72.setThreadedTwoPhaseCommit(true);
        atomikosProperties72.setMaxActives((int) (byte) 0);
        atomikosProperties72.setEnableLogging(true);
        atomikosProperties72.setForceShutdownOnVmExit(false);
        boolean boolean81 = atomikosProperties72.isThreadedTwoPhaseCommit();
        atomikosProperties72.setForceShutdownOnVmExit(false);
        atomikosProperties72.setMaxActives((int) (short) -1);
        java.lang.Object obj86 = properties36.putIfAbsent((java.lang.Object) long71, (java.lang.Object) (short) -1);
        java.util.Properties properties87 = new java.util.Properties(properties36);
        java.lang.Object obj88 = properties29.get((java.lang.Object) properties87);
        java.io.OutputStream outputStream89 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties29.save(outputStream89, "tmlog");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + long3 + "' != '" + 10L + "'", long3 == 10L);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNotNull(properties8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(properties17);
        org.junit.Assert.assertNull(str25);
        org.junit.Assert.assertNull(obj26);
        org.junit.Assert.assertNotNull(objCollection27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNotNull(objSet31);
        org.junit.Assert.assertNull(obj38);
        org.junit.Assert.assertNotNull(objEnumeration39);
        org.junit.Assert.assertNotNull(objEntrySet40);
        org.junit.Assert.assertTrue("'" + long44 + "' != '" + 10L + "'", long44 == 10L);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNull(obj55);
        org.junit.Assert.assertNotNull(objEnumeration56);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertNotNull(properties65);
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "" + "'", str66, "");
        org.junit.Assert.assertTrue("'" + long71 + "' != '" + 10L + "'", long71 == 10L);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + true + "'", boolean81 == true);
        org.junit.Assert.assertNull(obj86);
        org.junit.Assert.assertNull(obj88);
    }

    @Test
    public void test1150() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1150");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Properties properties2 = new java.util.Properties(properties0);
        java.util.Properties properties3 = null;
        java.util.Properties properties4 = new java.util.Properties(properties3);
        java.lang.Object obj6 = properties2.put((java.lang.Object) properties4, (java.lang.Object) (short) 1);
        java.util.Properties properties8 = null;
        java.util.Properties properties9 = new java.util.Properties(properties8);
        java.util.Properties properties10 = new java.util.Properties(properties8);
        java.util.Properties properties11 = null;
        java.util.Properties properties12 = new java.util.Properties(properties11);
        java.lang.Object obj14 = properties10.put((java.lang.Object) properties12, (java.lang.Object) (short) 1);
        boolean boolean15 = properties4.remove((java.lang.Object) false, (java.lang.Object) (short) 1);
        java.util.Set<java.lang.String> strSet16 = properties4.stringPropertyNames();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties17 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties17.setDefaultJtaTimeout((long) (byte) 10);
        atomikosProperties17.setCheckpointInterval((long) (byte) 0);
        atomikosProperties17.setTransactionManagerUniqueName("");
        boolean boolean24 = atomikosProperties17.isEnableLogging();
        atomikosProperties17.setSerialJtaTransactions(false);
        atomikosProperties17.setLogBaseDir("");
        java.util.Properties properties29 = null;
        java.util.Properties properties30 = new java.util.Properties(properties29);
        java.util.Properties properties31 = new java.util.Properties(properties29);
        java.util.Properties properties32 = null;
        java.util.Properties properties33 = new java.util.Properties(properties32);
        java.lang.Object obj35 = properties31.put((java.lang.Object) properties33, (java.lang.Object) (short) 1);
        java.util.Properties properties36 = new java.util.Properties(properties33);
        boolean boolean37 = properties4.remove((java.lang.Object) "", (java.lang.Object) properties36);
        java.util.Properties properties38 = null;
        java.util.Properties properties39 = new java.util.Properties(properties38);
        java.util.Properties properties40 = new java.util.Properties(properties38);
        java.lang.Object obj41 = properties40.clone();
        boolean boolean42 = properties4.contains(obj41);
        java.util.Collection<java.lang.Object> objCollection43 = properties4.values();
        java.lang.String str45 = properties4.getProperty("{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=0, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.tm_unique_name=, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties46 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties46.setDefaultJtaTimeout((long) (byte) 10);
        long long49 = atomikosProperties46.getDefaultJtaTimeout();
        atomikosProperties46.setTransactionManagerUniqueName("hi!");
        long long52 = atomikosProperties46.getDefaultJtaTimeout();
        atomikosProperties46.setMaxTimeout((long) 0);
        boolean boolean55 = atomikosProperties46.isThreadedTwoPhaseCommit();
        boolean boolean56 = properties4.containsKey((java.lang.Object) atomikosProperties46);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties57 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        int int58 = atomikosProperties57.getMaxActives();
        long long59 = atomikosProperties57.getMaxTimeout();
        java.util.Properties properties60 = atomikosProperties57.asProperties();
        java.util.Properties properties61 = atomikosProperties57.asProperties();
        long long62 = atomikosProperties57.getCheckpointInterval();
        atomikosProperties57.setDefaultJtaTimeout((long) (short) 100);
        long long65 = atomikosProperties57.getMaxTimeout();
        atomikosProperties57.setEnableLogging(true);
        atomikosProperties57.setDefaultJtaTimeout(500L);
        atomikosProperties57.setService("{=}");
        java.lang.Object obj72 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean73 = properties4.remove((java.lang.Object) "{=}", obj72);
// flaky:             org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(obj6);
        org.junit.Assert.assertNull(obj14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(strSet16);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNull(obj35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(obj41);
        org.junit.Assert.assertEquals(obj41.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj41), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj41), "{}");
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(objCollection43);
        org.junit.Assert.assertNull(str45);
        org.junit.Assert.assertTrue("'" + long49 + "' != '" + 10L + "'", long49 == 10L);
        org.junit.Assert.assertTrue("'" + long52 + "' != '" + 10L + "'", long52 == 10L);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + 50 + "'", int58 == 50);
        org.junit.Assert.assertTrue("'" + long59 + "' != '" + 300000L + "'", long59 == 300000L);
        org.junit.Assert.assertNotNull(properties60);
        org.junit.Assert.assertNotNull(properties61);
        org.junit.Assert.assertTrue("'" + long62 + "' != '" + 500L + "'", long62 == 500L);
        org.junit.Assert.assertTrue("'" + long65 + "' != '" + 300000L + "'", long65 == 300000L);
    }

    @Test
    public void test1151() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1151");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Properties properties2 = new java.util.Properties(properties0);
        java.util.Properties properties3 = null;
        java.util.Properties properties4 = new java.util.Properties(properties3);
        java.lang.Object obj6 = properties2.put((java.lang.Object) properties4, (java.lang.Object) (short) 1);
        properties4.clear();
        int int8 = properties4.size();
        java.util.Properties properties9 = null;
        java.util.Properties properties10 = new java.util.Properties(properties9);
        java.util.Properties properties11 = new java.util.Properties(properties9);
        java.util.Properties properties12 = null;
        java.util.Properties properties13 = new java.util.Properties(properties12);
        java.lang.Object obj15 = properties11.put((java.lang.Object) properties13, (java.lang.Object) (short) 1);
        java.util.Properties properties16 = new java.util.Properties(properties13);
        java.util.Properties properties17 = new java.util.Properties(properties13);
        boolean boolean19 = properties4.remove((java.lang.Object) properties13, (java.lang.Object) 10.0f);
        java.util.Enumeration<java.lang.Object> objEnumeration20 = properties13.elements();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties21 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties21.setDefaultJtaTimeout((long) (byte) 10);
        atomikosProperties21.setCheckpointInterval((long) (byte) 0);
        long long26 = atomikosProperties21.getMaxTimeout();
        atomikosProperties21.setSerialJtaTransactions(true);
        java.util.Properties properties29 = new java.util.Properties();
        java.util.Enumeration<?> wildcardEnumeration30 = properties29.propertyNames();
        java.lang.Object obj31 = properties13.replace((java.lang.Object) atomikosProperties21, (java.lang.Object) properties29);
        java.lang.String str32 = properties13.toString();
        java.util.Properties properties33 = null;
        java.util.Properties properties34 = new java.util.Properties(properties33);
        java.util.Properties properties35 = new java.util.Properties(properties33);
        java.util.Properties properties36 = null;
        java.util.Properties properties37 = new java.util.Properties(properties36);
        java.lang.Object obj39 = properties35.put((java.lang.Object) properties37, (java.lang.Object) (short) 1);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties40 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties40.setThreadedTwoPhaseCommit(true);
        atomikosProperties40.setMaxActives((int) (byte) 0);
        boolean boolean45 = properties35.containsValue((java.lang.Object) atomikosProperties40);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties46 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties46.setDefaultJtaTimeout((long) (byte) 10);
        atomikosProperties46.setSerialJtaTransactions(false);
        boolean boolean51 = properties35.containsValue((java.lang.Object) atomikosProperties46);
        java.lang.Object obj54 = properties35.putIfAbsent((java.lang.Object) 10, (java.lang.Object) (byte) -1);
        java.lang.Object obj55 = null;
        java.lang.Object obj56 = properties13.getOrDefault((java.lang.Object) 10, obj55);
        properties13.clear();
        java.io.OutputStream outputStream58 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties13.storeToXML(outputStream58, "{}", "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.tm_unique_name=, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(obj6);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertNull(obj15);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(objEnumeration20);
        org.junit.Assert.assertTrue("'" + long26 + "' != '" + 300000L + "'", long26 == 300000L);
        org.junit.Assert.assertNotNull(wildcardEnumeration30);
        org.junit.Assert.assertNull(obj31);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "{}" + "'", str32, "{}");
        org.junit.Assert.assertNull(obj39);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertNull(obj54);
        org.junit.Assert.assertNull(obj56);
    }

    @Test
    public void test1152() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1152");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setThreadedTwoPhaseCommit(true);
        atomikosProperties0.setMaxActives((int) (byte) 0);
        atomikosProperties0.setDefaultJtaTimeout((long) 10);
        atomikosProperties0.setDefaultJtaTimeout((long) (short) 10);
        java.util.Properties properties9 = atomikosProperties0.asProperties();
        java.lang.Object obj12 = properties9.setProperty("", "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=100, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=true, com.atomikos.icatch.tm_unique_name=, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name={com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.tm_unique_name=, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}}");
        java.io.InputStream inputStream13 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties9.load(inputStream13);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(properties9);
        org.junit.Assert.assertNull(obj12);
    }

    @Test
    public void test1153() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1153");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setDefaultJtaTimeout((long) (byte) 10);
        long long3 = atomikosProperties0.getDefaultJtaTimeout();
        atomikosProperties0.setTransactionManagerUniqueName("");
        boolean boolean6 = atomikosProperties0.isEnableLogging();
        java.lang.String str7 = atomikosProperties0.getLogBaseDir();
        java.util.Properties properties8 = atomikosProperties0.asProperties();
        boolean boolean9 = atomikosProperties0.isEnableLogging();
        java.util.Properties properties10 = atomikosProperties0.asProperties();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties11 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties11.setDefaultJtaTimeout((long) (byte) 10);
        atomikosProperties11.setCheckpointInterval((long) (byte) 0);
        atomikosProperties11.setTransactionManagerUniqueName("");
        boolean boolean18 = atomikosProperties11.isEnableLogging();
        java.util.Properties properties19 = atomikosProperties11.asProperties();
        java.util.Enumeration<java.lang.Object> objEnumeration20 = properties19.keys();
        java.util.Properties properties21 = null;
        java.util.Properties properties22 = new java.util.Properties(properties21);
        java.util.Properties properties23 = new java.util.Properties(properties21);
        java.util.Properties properties24 = null;
        java.util.Properties properties25 = new java.util.Properties(properties24);
        java.lang.Object obj27 = properties23.put((java.lang.Object) properties25, (java.lang.Object) (short) 1);
        java.util.Properties properties29 = null;
        java.util.Properties properties30 = new java.util.Properties(properties29);
        java.util.Properties properties31 = new java.util.Properties(properties29);
        java.util.Properties properties32 = null;
        java.util.Properties properties33 = new java.util.Properties(properties32);
        java.lang.Object obj35 = properties31.put((java.lang.Object) properties33, (java.lang.Object) (short) 1);
        boolean boolean36 = properties25.remove((java.lang.Object) false, (java.lang.Object) (short) 1);
        java.util.Set<java.lang.String> strSet37 = properties25.stringPropertyNames();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties38 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties38.setDefaultJtaTimeout((long) (byte) 10);
        long long41 = atomikosProperties38.getDefaultJtaTimeout();
        java.lang.Object obj42 = properties25.get((java.lang.Object) atomikosProperties38);
        atomikosProperties38.setCheckpointInterval((long) (short) 100);
        java.util.Properties properties45 = atomikosProperties38.asProperties();
        java.util.Enumeration<?> wildcardEnumeration46 = properties45.propertyNames();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet47 = properties45.entrySet();
        java.lang.Object obj48 = properties10.getOrDefault((java.lang.Object) objEnumeration20, (java.lang.Object) properties45);
        java.io.OutputStream outputStream49 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties45.save(outputStream49, "");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + long3 + "' != '" + 10L + "'", long3 == 10L);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNotNull(properties8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertNotNull(properties10);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(properties19);
        org.junit.Assert.assertNotNull(objEnumeration20);
        org.junit.Assert.assertNull(obj27);
        org.junit.Assert.assertNull(obj35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(strSet37);
        org.junit.Assert.assertTrue("'" + long41 + "' != '" + 10L + "'", long41 == 10L);
        org.junit.Assert.assertNull(obj42);
        org.junit.Assert.assertNotNull(properties45);
        org.junit.Assert.assertNotNull(wildcardEnumeration46);
        org.junit.Assert.assertNotNull(objEntrySet47);
        org.junit.Assert.assertNotNull(obj48);
// flaky:         org.junit.Assert.assertEquals(obj48.toString(), "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=100, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
// flaky:         org.junit.Assert.assertEquals(java.lang.String.valueOf(obj48), "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=100, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
// flaky:         org.junit.Assert.assertEquals(java.util.Objects.toString(obj48), "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=100, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
    }

    @Test
    public void test1154() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1154");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        boolean boolean1 = atomikosProperties0.isForceShutdownOnVmExit();
        java.util.Properties properties2 = atomikosProperties0.asProperties();
        java.util.Properties properties3 = new java.util.Properties(properties2);
        java.io.OutputStream outputStream4 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties3.storeToXML(outputStream4, "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=0, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog, {}={}}", "{tmlog=}");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertNotNull(properties2);
    }

    @Test
    public void test1155() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1155");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Properties properties2 = new java.util.Properties(properties0);
        boolean boolean4 = properties2.containsValue((java.lang.Object) (short) 100);
        java.util.Properties properties5 = null;
        java.util.Properties properties6 = new java.util.Properties(properties5);
        java.util.Properties properties7 = new java.util.Properties(properties5);
        java.util.Properties properties8 = null;
        java.util.Properties properties9 = new java.util.Properties(properties8);
        java.lang.Object obj11 = properties7.put((java.lang.Object) properties9, (java.lang.Object) (short) 1);
        java.util.Enumeration<java.lang.Object> objEnumeration12 = properties9.elements();
        java.lang.Object obj13 = properties2.remove((java.lang.Object) properties9);
        java.lang.Object obj16 = properties9.setProperty("", "");
        java.util.Properties properties17 = null;
        java.util.Properties properties18 = new java.util.Properties(properties17);
        java.util.Properties properties19 = new java.util.Properties(properties17);
        java.util.Properties properties20 = null;
        java.util.Properties properties21 = new java.util.Properties(properties20);
        java.lang.Object obj23 = properties19.put((java.lang.Object) properties21, (java.lang.Object) (short) 1);
        java.util.Properties properties25 = null;
        java.util.Properties properties26 = new java.util.Properties(properties25);
        java.util.Properties properties27 = new java.util.Properties(properties25);
        java.util.Properties properties28 = null;
        java.util.Properties properties29 = new java.util.Properties(properties28);
        java.lang.Object obj31 = properties27.put((java.lang.Object) properties29, (java.lang.Object) (short) 1);
        boolean boolean32 = properties21.remove((java.lang.Object) false, (java.lang.Object) (short) 1);
        java.util.Properties properties33 = new java.util.Properties(properties21);
        properties9.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties33);
        java.util.Properties properties35 = null;
        java.util.Properties properties36 = new java.util.Properties(properties35);
        java.util.Properties properties37 = new java.util.Properties(properties35);
        java.util.Properties properties38 = null;
        java.util.Properties properties39 = new java.util.Properties(properties38);
        java.lang.Object obj41 = properties37.put((java.lang.Object) properties39, (java.lang.Object) (short) 1);
        properties39.clear();
        int int43 = properties39.size();
        java.util.Properties properties44 = null;
        java.util.Properties properties45 = new java.util.Properties(properties44);
        java.util.Properties properties46 = new java.util.Properties(properties44);
        java.util.Properties properties47 = null;
        java.util.Properties properties48 = new java.util.Properties(properties47);
        java.lang.Object obj50 = properties46.put((java.lang.Object) properties48, (java.lang.Object) (short) 1);
        java.util.Properties properties51 = new java.util.Properties(properties48);
        java.util.Properties properties52 = new java.util.Properties(properties48);
        boolean boolean54 = properties39.remove((java.lang.Object) properties48, (java.lang.Object) 10.0f);
        java.util.Enumeration<java.lang.Object> objEnumeration55 = properties48.elements();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties56 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties56.setDefaultJtaTimeout((long) (byte) 10);
        atomikosProperties56.setCheckpointInterval((long) (byte) 0);
        long long61 = atomikosProperties56.getMaxTimeout();
        atomikosProperties56.setSerialJtaTransactions(true);
        java.util.Properties properties64 = new java.util.Properties();
        java.util.Enumeration<?> wildcardEnumeration65 = properties64.propertyNames();
        java.lang.Object obj66 = properties48.replace((java.lang.Object) atomikosProperties56, (java.lang.Object) properties64);
        boolean boolean67 = properties9.contains((java.lang.Object) properties64);
        java.io.PrintWriter printWriter68 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties64.list(printWriter68);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNull(obj11);
        org.junit.Assert.assertNotNull(objEnumeration12);
        org.junit.Assert.assertNull(obj13);
        org.junit.Assert.assertNull(obj16);
        org.junit.Assert.assertNull(obj23);
        org.junit.Assert.assertNull(obj31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNull(obj41);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 0 + "'", int43 == 0);
        org.junit.Assert.assertNull(obj50);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertNotNull(objEnumeration55);
        org.junit.Assert.assertTrue("'" + long61 + "' != '" + 300000L + "'", long61 == 300000L);
        org.junit.Assert.assertNotNull(wildcardEnumeration65);
        org.junit.Assert.assertNull(obj66);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
    }

    @Test
    public void test1156() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1156");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Properties properties2 = new java.util.Properties(properties0);
        java.util.Properties properties3 = null;
        java.util.Properties properties4 = new java.util.Properties(properties3);
        java.lang.Object obj6 = properties2.put((java.lang.Object) properties4, (java.lang.Object) (short) 1);
        java.util.Properties properties8 = null;
        java.util.Properties properties9 = new java.util.Properties(properties8);
        java.util.Properties properties10 = new java.util.Properties(properties8);
        java.util.Properties properties11 = null;
        java.util.Properties properties12 = new java.util.Properties(properties11);
        java.lang.Object obj14 = properties10.put((java.lang.Object) properties12, (java.lang.Object) (short) 1);
        boolean boolean15 = properties4.remove((java.lang.Object) false, (java.lang.Object) (short) 1);
        java.util.Set<java.lang.String> strSet16 = properties4.stringPropertyNames();
        java.util.Enumeration<java.lang.Object> objEnumeration17 = properties4.elements();
        java.lang.String str18 = properties4.toString();
        java.lang.String str19 = properties4.toString();
        java.util.Properties properties20 = null;
        java.util.Properties properties21 = new java.util.Properties(properties20);
        java.util.Properties properties22 = new java.util.Properties(properties20);
        java.util.Properties properties23 = null;
        java.util.Properties properties24 = new java.util.Properties(properties23);
        java.lang.Object obj26 = properties22.put((java.lang.Object) properties24, (java.lang.Object) (short) 1);
        java.util.Properties properties28 = null;
        java.util.Properties properties29 = new java.util.Properties(properties28);
        java.util.Properties properties30 = new java.util.Properties(properties28);
        java.util.Properties properties31 = null;
        java.util.Properties properties32 = new java.util.Properties(properties31);
        java.lang.Object obj34 = properties30.put((java.lang.Object) properties32, (java.lang.Object) (short) 1);
        boolean boolean35 = properties24.remove((java.lang.Object) false, (java.lang.Object) (short) 1);
        java.util.Properties properties36 = new java.util.Properties(properties24);
        boolean boolean37 = properties24.isEmpty();
        java.util.Enumeration<?> wildcardEnumeration38 = properties24.propertyNames();
        java.lang.String str40 = properties24.getProperty("{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=0, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.tm_unique_name=, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties41 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties41.setDefaultJtaTimeout((long) (byte) 10);
        atomikosProperties41.setCheckpointInterval((long) (byte) 0);
        atomikosProperties41.setTransactionManagerUniqueName("");
        java.util.Properties properties48 = atomikosProperties41.asProperties();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties49 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties49.setThreadedTwoPhaseCommit(true);
        atomikosProperties49.setMaxActives((int) '#');
        atomikosProperties49.setForceShutdownOnVmExit(true);
        java.lang.String str56 = atomikosProperties49.getLogBaseDir();
        java.lang.Object obj57 = properties48.remove((java.lang.Object) atomikosProperties49);
        java.lang.Object obj58 = properties4.put((java.lang.Object) "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=0, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.tm_unique_name=, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}", (java.lang.Object) properties48);
        java.io.OutputStream outputStream59 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties48.storeToXML(outputStream59, "{=}", "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(obj6);
        org.junit.Assert.assertNull(obj14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(strSet16);
        org.junit.Assert.assertNotNull(objEnumeration17);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "{}" + "'", str18, "{}");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "{}" + "'", str19, "{}");
        org.junit.Assert.assertNull(obj26);
        org.junit.Assert.assertNull(obj34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertNotNull(wildcardEnumeration38);
        org.junit.Assert.assertNull(str40);
        org.junit.Assert.assertNotNull(properties48);
        org.junit.Assert.assertNull(str56);
        org.junit.Assert.assertNull(obj57);
        org.junit.Assert.assertNull(obj58);
    }

    @Test
    public void test1157() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1157");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        boolean boolean1 = atomikosProperties0.isSerialJtaTransactions();
        java.util.Properties properties2 = atomikosProperties0.asProperties();
        java.util.Properties properties3 = new java.util.Properties(properties2);
        java.util.Properties properties4 = null;
        java.util.Properties properties5 = new java.util.Properties(properties4);
        java.util.Properties properties6 = new java.util.Properties(properties4);
        java.util.Properties properties7 = null;
        java.util.Properties properties8 = new java.util.Properties(properties7);
        java.lang.Object obj10 = properties6.put((java.lang.Object) properties8, (java.lang.Object) (short) 1);
        boolean boolean11 = properties6.isEmpty();
        java.util.Properties properties12 = null;
        java.util.Properties properties13 = new java.util.Properties(properties12);
        java.util.Properties properties14 = new java.util.Properties(properties12);
        boolean boolean15 = properties6.containsKey((java.lang.Object) properties14);
        java.util.Properties properties16 = null;
        java.util.Properties properties17 = new java.util.Properties(properties16);
        java.util.Properties properties18 = new java.util.Properties(properties16);
        java.util.Properties properties19 = null;
        java.util.Properties properties20 = new java.util.Properties(properties19);
        java.lang.Object obj22 = properties18.put((java.lang.Object) properties20, (java.lang.Object) (short) 1);
        java.util.Properties properties24 = null;
        java.util.Properties properties25 = new java.util.Properties(properties24);
        java.util.Properties properties26 = new java.util.Properties(properties24);
        java.util.Properties properties27 = null;
        java.util.Properties properties28 = new java.util.Properties(properties27);
        java.lang.Object obj30 = properties26.put((java.lang.Object) properties28, (java.lang.Object) (short) 1);
        boolean boolean31 = properties20.remove((java.lang.Object) false, (java.lang.Object) (short) 1);
        java.util.Set<java.lang.String> strSet32 = properties20.stringPropertyNames();
        boolean boolean33 = properties14.containsKey((java.lang.Object) strSet32);
        java.util.Properties properties34 = null;
        java.util.Properties properties35 = new java.util.Properties(properties34);
        java.util.Properties properties36 = new java.util.Properties(properties34);
        java.util.Properties properties37 = null;
        java.util.Properties properties38 = new java.util.Properties(properties37);
        java.lang.Object obj40 = properties36.put((java.lang.Object) properties38, (java.lang.Object) (short) 1);
        properties38.clear();
        java.lang.String str43 = properties38.getProperty("");
        java.util.Properties properties44 = null;
        java.util.Properties properties45 = new java.util.Properties(properties44);
        java.util.Properties properties46 = new java.util.Properties(properties44);
        java.util.Properties properties47 = null;
        java.util.Properties properties48 = new java.util.Properties(properties47);
        java.lang.Object obj50 = properties46.put((java.lang.Object) properties48, (java.lang.Object) (short) 1);
        properties38.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties46);
        boolean boolean52 = properties14.containsKey((java.lang.Object) properties38);
        java.util.Properties properties54 = null;
        java.util.Properties properties55 = new java.util.Properties(properties54);
        java.util.Properties properties56 = new java.util.Properties(properties54);
        java.util.Properties properties57 = null;
        java.util.Properties properties58 = new java.util.Properties(properties57);
        java.lang.Object obj60 = properties56.put((java.lang.Object) properties58, (java.lang.Object) (short) 1);
        properties58.clear();
        int int62 = properties58.size();
        java.lang.Object obj65 = properties58.setProperty("hi!", "hi!");
        java.lang.Object obj68 = properties58.setProperty("tmlog", "tmlog");
        java.lang.Object obj69 = properties38.putIfAbsent((java.lang.Object) (short) 10, (java.lang.Object) "tmlog");
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet70 = properties38.entrySet();
        java.util.Set<java.lang.Object> objSet71 = properties38.keySet();
        properties3.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties38);
        java.io.Reader reader73 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties38.load(reader73);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertNotNull(properties2);
        org.junit.Assert.assertNull(obj10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNull(obj22);
        org.junit.Assert.assertNull(obj30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(strSet32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNull(obj40);
        org.junit.Assert.assertNull(str43);
        org.junit.Assert.assertNull(obj50);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNull(obj60);
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + 0 + "'", int62 == 0);
        org.junit.Assert.assertNull(obj65);
        org.junit.Assert.assertNull(obj68);
        org.junit.Assert.assertNull(obj69);
        org.junit.Assert.assertNotNull(objEntrySet70);
        org.junit.Assert.assertNotNull(objSet71);
    }

    @Test
    public void test1158() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1158");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setThreadedTwoPhaseCommit(true);
        boolean boolean3 = atomikosProperties0.isEnableLogging();
        atomikosProperties0.setCheckpointInterval((long) 35);
        atomikosProperties0.setDefaultJtaTimeout((long) (byte) 0);
        java.lang.String str8 = atomikosProperties0.getLogBaseName();
        atomikosProperties0.setTransactionManagerUniqueName("{tmlog={com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=0, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.tm_unique_name=, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}, 4=true}");
        long long11 = atomikosProperties0.getMaxTimeout();
        atomikosProperties0.setForceShutdownOnVmExit(false);
        int int14 = atomikosProperties0.getMaxActives();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "tmlog" + "'", str8, "tmlog");
        org.junit.Assert.assertTrue("'" + long11 + "' != '" + 300000L + "'", long11 == 300000L);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 50 + "'", int14 == 50);
    }

    @Test
    public void test1159() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1159");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setThreadedTwoPhaseCommit(true);
        atomikosProperties0.setMaxActives((int) '#');
        boolean boolean5 = atomikosProperties0.isSerialJtaTransactions();
        atomikosProperties0.setService("{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
    }

    @Test
    public void test1160() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1160");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Properties properties2 = new java.util.Properties(properties0);
        boolean boolean4 = properties2.containsValue((java.lang.Object) (short) 100);
        java.util.Properties properties5 = new java.util.Properties(properties2);
        java.lang.String str7 = properties5.getProperty("hi!");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties8 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties8.setDefaultJtaTimeout((long) (byte) 10);
        long long11 = atomikosProperties8.getDefaultJtaTimeout();
        atomikosProperties8.setTransactionManagerUniqueName("hi!");
        atomikosProperties8.setLogBaseName("tmlog");
        boolean boolean16 = atomikosProperties8.isSerialJtaTransactions();
        java.util.Properties properties17 = atomikosProperties8.asProperties();
        boolean boolean18 = properties5.equals((java.lang.Object) atomikosProperties8);
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet19 = properties5.entrySet();
        boolean boolean20 = properties5.isEmpty();
        java.util.Properties properties21 = null;
        java.util.Properties properties22 = new java.util.Properties(properties21);
        java.util.Properties properties23 = new java.util.Properties(properties21);
        java.util.Properties properties24 = null;
        java.util.Properties properties25 = new java.util.Properties(properties24);
        java.lang.Object obj27 = properties23.put((java.lang.Object) properties25, (java.lang.Object) (short) 1);
        java.util.Enumeration<java.lang.Object> objEnumeration28 = properties25.elements();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet29 = properties25.entrySet();
        java.util.Set<java.lang.Object> objSet30 = properties25.keySet();
        java.util.Properties properties31 = null;
        java.util.Properties properties32 = new java.util.Properties(properties31);
        java.util.Properties properties33 = new java.util.Properties(properties31);
        java.util.Properties properties34 = null;
        java.util.Properties properties35 = new java.util.Properties(properties34);
        java.lang.Object obj37 = properties33.put((java.lang.Object) properties35, (java.lang.Object) (short) 1);
        properties35.clear();
        int int39 = properties35.size();
        java.util.Properties properties40 = new java.util.Properties(properties35);
        java.util.Properties properties41 = null;
        java.util.Properties properties42 = new java.util.Properties(properties41);
        java.util.Properties properties43 = new java.util.Properties(properties41);
        java.util.Properties properties44 = null;
        java.util.Properties properties45 = new java.util.Properties(properties44);
        java.lang.Object obj47 = properties43.put((java.lang.Object) properties45, (java.lang.Object) (short) 1);
        properties45.clear();
        java.lang.String str50 = properties45.getProperty("");
        java.util.Properties properties51 = null;
        java.util.Properties properties52 = new java.util.Properties(properties51);
        java.util.Properties properties53 = new java.util.Properties(properties51);
        java.util.Properties properties54 = null;
        java.util.Properties properties55 = new java.util.Properties(properties54);
        java.lang.Object obj57 = properties53.put((java.lang.Object) properties55, (java.lang.Object) (short) 1);
        properties45.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties53);
        java.lang.Object obj59 = properties25.put((java.lang.Object) properties35, (java.lang.Object) properties53);
        java.util.Collection<java.lang.Object> objCollection60 = properties53.values();
        boolean boolean61 = properties5.containsKey((java.lang.Object) objCollection60);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertTrue("'" + long11 + "' != '" + 10L + "'", long11 == 10L);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(properties17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(objEntrySet19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNull(obj27);
        org.junit.Assert.assertNotNull(objEnumeration28);
        org.junit.Assert.assertNotNull(objEntrySet29);
        org.junit.Assert.assertNotNull(objSet30);
        org.junit.Assert.assertNull(obj37);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 0 + "'", int39 == 0);
        org.junit.Assert.assertNull(obj47);
        org.junit.Assert.assertNull(str50);
        org.junit.Assert.assertNull(obj57);
        org.junit.Assert.assertNull(obj59);
        org.junit.Assert.assertNotNull(objCollection60);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
    }

    @Test
    public void test1161() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1161");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Properties properties2 = new java.util.Properties(properties0);
        boolean boolean4 = properties2.containsValue((java.lang.Object) (short) 100);
        java.util.Properties properties5 = null;
        java.util.Properties properties6 = new java.util.Properties(properties5);
        java.util.Properties properties7 = new java.util.Properties(properties5);
        java.util.Properties properties8 = null;
        java.util.Properties properties9 = new java.util.Properties(properties8);
        java.lang.Object obj11 = properties7.put((java.lang.Object) properties9, (java.lang.Object) (short) 1);
        java.util.Enumeration<java.lang.Object> objEnumeration12 = properties9.elements();
        java.lang.Object obj13 = properties2.remove((java.lang.Object) properties9);
        java.lang.Object obj16 = properties9.setProperty("", "");
        java.lang.String str18 = properties9.getProperty("tmlog");
        java.util.Properties properties19 = new java.util.Properties(properties9);
        java.io.InputStream inputStream20 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties19.load(inputStream20);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNull(obj11);
        org.junit.Assert.assertNotNull(objEnumeration12);
        org.junit.Assert.assertNull(obj13);
        org.junit.Assert.assertNull(obj16);
        org.junit.Assert.assertNull(str18);
    }

    @Test
    public void test1162() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1162");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Properties properties2 = new java.util.Properties(properties0);
        java.util.Properties properties3 = null;
        java.util.Properties properties4 = new java.util.Properties(properties3);
        java.lang.Object obj6 = properties2.put((java.lang.Object) properties4, (java.lang.Object) (short) 1);
        java.util.Properties properties8 = null;
        java.util.Properties properties9 = new java.util.Properties(properties8);
        java.util.Properties properties10 = new java.util.Properties(properties8);
        java.util.Properties properties11 = null;
        java.util.Properties properties12 = new java.util.Properties(properties11);
        java.lang.Object obj14 = properties10.put((java.lang.Object) properties12, (java.lang.Object) (short) 1);
        boolean boolean15 = properties4.remove((java.lang.Object) false, (java.lang.Object) (short) 1);
        java.util.Set<java.lang.String> strSet16 = properties4.stringPropertyNames();
        java.util.Enumeration<java.lang.Object> objEnumeration17 = properties4.elements();
        java.lang.String str18 = properties4.toString();
        java.lang.String str19 = properties4.toString();
        java.lang.String str20 = properties4.toString();
        java.util.Set<java.lang.String> strSet21 = properties4.stringPropertyNames();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties22 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties22.setThreadedTwoPhaseCommit(true);
        boolean boolean25 = atomikosProperties22.isEnableLogging();
        atomikosProperties22.setCheckpointInterval((long) 35);
        boolean boolean28 = atomikosProperties22.isEnableLogging();
        java.lang.Object obj29 = properties4.get((java.lang.Object) atomikosProperties22);
        long long30 = atomikosProperties22.getMaxTimeout();
        org.junit.Assert.assertNull(obj6);
        org.junit.Assert.assertNull(obj14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(strSet16);
        org.junit.Assert.assertNotNull(objEnumeration17);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "{}" + "'", str18, "{}");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "{}" + "'", str19, "{}");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "{}" + "'", str20, "{}");
        org.junit.Assert.assertNotNull(strSet21);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNull(obj29);
        org.junit.Assert.assertTrue("'" + long30 + "' != '" + 300000L + "'", long30 == 300000L);
    }

    @Test
    public void test1163() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1163");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Properties properties2 = new java.util.Properties(properties0);
        java.util.Properties properties3 = null;
        java.util.Properties properties4 = new java.util.Properties(properties3);
        java.lang.Object obj6 = properties2.put((java.lang.Object) properties4, (java.lang.Object) (short) 1);
        boolean boolean7 = properties2.isEmpty();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties8 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties8.setDefaultJtaTimeout((long) (byte) 10);
        atomikosProperties8.setCheckpointInterval((long) (byte) 0);
        atomikosProperties8.setTransactionManagerUniqueName("");
        java.util.Properties properties15 = atomikosProperties8.asProperties();
        java.lang.Object obj16 = properties2.remove((java.lang.Object) properties15);
        java.util.Set<java.lang.String> strSet17 = properties15.stringPropertyNames();
        properties15.clear();
        java.util.Properties properties19 = null;
        java.util.Properties properties20 = new java.util.Properties(properties19);
        java.util.Properties properties21 = new java.util.Properties(properties19);
        boolean boolean23 = properties21.containsValue((java.lang.Object) (short) 100);
        java.util.Properties properties24 = null;
        java.util.Properties properties25 = new java.util.Properties(properties24);
        java.util.Properties properties26 = new java.util.Properties(properties24);
        java.util.Properties properties27 = null;
        java.util.Properties properties28 = new java.util.Properties(properties27);
        java.lang.Object obj30 = properties26.put((java.lang.Object) properties28, (java.lang.Object) (short) 1);
        java.util.Enumeration<java.lang.Object> objEnumeration31 = properties28.elements();
        java.lang.Object obj32 = properties21.remove((java.lang.Object) properties28);
        boolean boolean33 = properties28.isEmpty();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet34 = properties28.entrySet();
        java.util.Properties properties35 = new java.util.Properties(properties28);
        java.util.Properties properties36 = null;
        java.util.Properties properties37 = new java.util.Properties(properties36);
        java.util.Properties properties38 = new java.util.Properties(properties36);
        java.util.Properties properties39 = null;
        java.util.Properties properties40 = new java.util.Properties(properties39);
        java.lang.Object obj42 = properties38.put((java.lang.Object) properties40, (java.lang.Object) (short) 1);
        java.util.Properties properties43 = new java.util.Properties(properties40);
        java.util.Properties properties44 = new java.util.Properties(properties40);
        java.util.Set<java.lang.Object> objSet45 = properties44.keySet();
        java.util.Properties properties46 = null;
        java.util.Properties properties47 = new java.util.Properties(properties46);
        java.util.Properties properties48 = new java.util.Properties(properties46);
        java.util.Properties properties49 = null;
        java.util.Properties properties50 = new java.util.Properties(properties49);
        java.lang.Object obj52 = properties48.put((java.lang.Object) properties50, (java.lang.Object) (short) 1);
        properties50.clear();
        int int54 = properties50.size();
        java.util.Properties properties55 = null;
        java.util.Properties properties56 = new java.util.Properties(properties55);
        java.util.Properties properties57 = new java.util.Properties(properties55);
        java.util.Properties properties58 = null;
        java.util.Properties properties59 = new java.util.Properties(properties58);
        java.lang.Object obj61 = properties57.put((java.lang.Object) properties59, (java.lang.Object) (short) 1);
        java.util.Properties properties62 = new java.util.Properties(properties59);
        java.util.Properties properties63 = new java.util.Properties(properties59);
        boolean boolean65 = properties50.remove((java.lang.Object) properties59, (java.lang.Object) 10.0f);
        java.util.Enumeration<java.lang.Object> objEnumeration66 = properties59.elements();
        java.util.Properties properties67 = new java.util.Properties(properties59);
        java.lang.Object obj68 = properties35.putIfAbsent((java.lang.Object) objSet45, (java.lang.Object) properties59);
        java.util.Enumeration<java.lang.Object> objEnumeration69 = properties35.elements();
        java.util.Enumeration<java.lang.Object> objEnumeration70 = properties35.elements();
        java.util.Properties properties72 = null;
        java.util.Properties properties73 = new java.util.Properties(properties72);
        java.util.Properties properties74 = new java.util.Properties(properties72);
        java.util.Properties properties75 = null;
        java.util.Properties properties76 = new java.util.Properties(properties75);
        java.lang.Object obj78 = properties74.put((java.lang.Object) properties76, (java.lang.Object) (short) 1);
        properties76.clear();
        java.lang.String str81 = properties76.getProperty("");
        java.util.Properties properties82 = null;
        java.util.Properties properties83 = new java.util.Properties(properties82);
        java.util.Properties properties84 = new java.util.Properties(properties82);
        java.util.Properties properties85 = null;
        java.util.Properties properties86 = new java.util.Properties(properties85);
        java.lang.Object obj88 = properties84.put((java.lang.Object) properties86, (java.lang.Object) (short) 1);
        properties76.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties84);
        java.util.Enumeration<java.lang.Object> objEnumeration90 = properties76.keys();
        java.util.Enumeration<java.lang.Object> objEnumeration91 = properties76.elements();
        java.util.Set<java.lang.Object> objSet92 = properties76.keySet();
        java.lang.Object obj93 = properties35.put((java.lang.Object) "{}", (java.lang.Object) properties76);
        boolean boolean94 = properties15.containsKey((java.lang.Object) properties35);
        java.util.Enumeration<java.lang.Object> objEnumeration95 = properties15.keys();
        org.junit.Assert.assertNull(obj6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(properties15);
        org.junit.Assert.assertNull(obj16);
        org.junit.Assert.assertNotNull(strSet17);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNull(obj30);
        org.junit.Assert.assertNotNull(objEnumeration31);
        org.junit.Assert.assertNull(obj32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNotNull(objEntrySet34);
        org.junit.Assert.assertNull(obj42);
        org.junit.Assert.assertNotNull(objSet45);
        org.junit.Assert.assertNull(obj52);
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + 0 + "'", int54 == 0);
        org.junit.Assert.assertNull(obj61);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertNotNull(objEnumeration66);
        org.junit.Assert.assertNull(obj68);
        org.junit.Assert.assertNotNull(objEnumeration69);
        org.junit.Assert.assertNotNull(objEnumeration70);
        org.junit.Assert.assertNull(obj78);
        org.junit.Assert.assertNull(str81);
        org.junit.Assert.assertNull(obj88);
        org.junit.Assert.assertNotNull(objEnumeration90);
        org.junit.Assert.assertNotNull(objEnumeration91);
        org.junit.Assert.assertNotNull(objSet92);
        org.junit.Assert.assertNull(obj93);
        org.junit.Assert.assertTrue("'" + boolean94 + "' != '" + false + "'", boolean94 == false);
        org.junit.Assert.assertNotNull(objEnumeration95);
    }

    @Test
    public void test1164() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1164");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Properties properties2 = new java.util.Properties(properties0);
        boolean boolean4 = properties2.containsValue((java.lang.Object) (short) 100);
        java.util.Properties properties5 = null;
        java.util.Properties properties6 = new java.util.Properties(properties5);
        java.util.Properties properties7 = new java.util.Properties(properties5);
        java.util.Properties properties8 = null;
        java.util.Properties properties9 = new java.util.Properties(properties8);
        java.lang.Object obj11 = properties7.put((java.lang.Object) properties9, (java.lang.Object) (short) 1);
        java.util.Enumeration<java.lang.Object> objEnumeration12 = properties9.elements();
        java.lang.Object obj13 = properties2.remove((java.lang.Object) properties9);
        java.lang.Object obj16 = properties9.setProperty("", "");
        java.util.Properties properties17 = null;
        java.util.Properties properties18 = new java.util.Properties(properties17);
        java.util.Properties properties19 = new java.util.Properties(properties17);
        java.util.Properties properties20 = null;
        java.util.Properties properties21 = new java.util.Properties(properties20);
        java.lang.Object obj23 = properties19.put((java.lang.Object) properties21, (java.lang.Object) (short) 1);
        java.util.Properties properties25 = null;
        java.util.Properties properties26 = new java.util.Properties(properties25);
        java.util.Properties properties27 = new java.util.Properties(properties25);
        java.util.Properties properties28 = null;
        java.util.Properties properties29 = new java.util.Properties(properties28);
        java.lang.Object obj31 = properties27.put((java.lang.Object) properties29, (java.lang.Object) (short) 1);
        boolean boolean32 = properties21.remove((java.lang.Object) false, (java.lang.Object) (short) 1);
        java.util.Properties properties33 = new java.util.Properties(properties21);
        properties9.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties33);
        java.util.Properties properties35 = null;
        java.util.Properties properties36 = new java.util.Properties(properties35);
        java.util.Properties properties37 = new java.util.Properties(properties35);
        java.util.Properties properties38 = null;
        java.util.Properties properties39 = new java.util.Properties(properties38);
        java.lang.Object obj41 = properties37.put((java.lang.Object) properties39, (java.lang.Object) (short) 1);
        properties39.clear();
        int int43 = properties39.size();
        java.util.Properties properties44 = null;
        java.util.Properties properties45 = new java.util.Properties(properties44);
        java.util.Properties properties46 = new java.util.Properties(properties44);
        java.util.Properties properties47 = null;
        java.util.Properties properties48 = new java.util.Properties(properties47);
        java.lang.Object obj50 = properties46.put((java.lang.Object) properties48, (java.lang.Object) (short) 1);
        java.util.Properties properties51 = new java.util.Properties(properties48);
        java.util.Properties properties52 = new java.util.Properties(properties48);
        boolean boolean54 = properties39.remove((java.lang.Object) properties48, (java.lang.Object) 10.0f);
        java.util.Enumeration<java.lang.Object> objEnumeration55 = properties48.elements();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties56 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties56.setDefaultJtaTimeout((long) (byte) 10);
        atomikosProperties56.setCheckpointInterval((long) (byte) 0);
        long long61 = atomikosProperties56.getMaxTimeout();
        atomikosProperties56.setSerialJtaTransactions(true);
        java.util.Properties properties64 = new java.util.Properties();
        java.util.Enumeration<?> wildcardEnumeration65 = properties64.propertyNames();
        java.lang.Object obj66 = properties48.replace((java.lang.Object) atomikosProperties56, (java.lang.Object) properties64);
        boolean boolean67 = properties9.contains((java.lang.Object) properties64);
        java.util.Properties properties68 = null;
        java.util.Properties properties69 = new java.util.Properties(properties68);
        java.util.Properties properties70 = new java.util.Properties(properties68);
        java.util.Properties properties71 = null;
        java.util.Properties properties72 = new java.util.Properties(properties71);
        java.lang.Object obj74 = properties70.put((java.lang.Object) properties72, (java.lang.Object) (short) 1);
        java.util.Properties properties76 = null;
        java.util.Properties properties77 = new java.util.Properties(properties76);
        java.util.Properties properties78 = new java.util.Properties(properties76);
        java.util.Properties properties79 = null;
        java.util.Properties properties80 = new java.util.Properties(properties79);
        java.lang.Object obj82 = properties78.put((java.lang.Object) properties80, (java.lang.Object) (short) 1);
        boolean boolean83 = properties72.remove((java.lang.Object) false, (java.lang.Object) (short) 1);
        java.util.Set<java.lang.String> strSet84 = properties72.stringPropertyNames();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties85 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties85.setDefaultJtaTimeout((long) (byte) 10);
        atomikosProperties85.setCheckpointInterval((long) (byte) 0);
        atomikosProperties85.setTransactionManagerUniqueName("");
        java.util.Properties properties92 = atomikosProperties85.asProperties();
        java.lang.String str93 = atomikosProperties85.getTransactionManagerUniqueName();
        atomikosProperties85.setDefaultJtaTimeout((long) (-1));
        java.util.Properties properties96 = atomikosProperties85.asProperties();
        java.lang.Object obj97 = properties64.put((java.lang.Object) strSet84, (java.lang.Object) properties96);
        java.lang.String str98 = properties64.toString();
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNull(obj11);
        org.junit.Assert.assertNotNull(objEnumeration12);
        org.junit.Assert.assertNull(obj13);
        org.junit.Assert.assertNull(obj16);
        org.junit.Assert.assertNull(obj23);
        org.junit.Assert.assertNull(obj31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNull(obj41);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 0 + "'", int43 == 0);
        org.junit.Assert.assertNull(obj50);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertNotNull(objEnumeration55);
        org.junit.Assert.assertTrue("'" + long61 + "' != '" + 300000L + "'", long61 == 300000L);
        org.junit.Assert.assertNotNull(wildcardEnumeration65);
        org.junit.Assert.assertNull(obj66);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertNull(obj74);
        org.junit.Assert.assertNull(obj82);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + false + "'", boolean83 == false);
        org.junit.Assert.assertNotNull(strSet84);
        org.junit.Assert.assertNotNull(properties92);
        org.junit.Assert.assertEquals("'" + str93 + "' != '" + "" + "'", str93, "");
        org.junit.Assert.assertNotNull(properties96);
        org.junit.Assert.assertNull(obj97);
// flaky:         org.junit.Assert.assertEquals("'" + str98 + "' != '" + "{[]={com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=0, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.tm_unique_name=, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}}" + "'", str98, "{[]={com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=0, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.tm_unique_name=, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}}");
    }

    @Test
    public void test1165() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1165");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Properties properties2 = new java.util.Properties(properties0);
        java.util.Properties properties3 = null;
        java.util.Properties properties4 = new java.util.Properties(properties3);
        java.lang.Object obj6 = properties2.put((java.lang.Object) properties4, (java.lang.Object) (short) 1);
        boolean boolean7 = properties2.isEmpty();
        properties2.clear();
        java.util.Properties properties9 = new java.util.Properties(properties2);
        java.io.Writer writer10 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties9.store(writer10, "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=100, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=true, com.atomikos.icatch.tm_unique_name=, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name={com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.tm_unique_name=, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}}");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(obj6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
    }

    @Test
    public void test1166() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1166");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setThreadedTwoPhaseCommit(true);
        atomikosProperties0.setMaxActives((int) (byte) 0);
        atomikosProperties0.setEnableLogging(true);
        atomikosProperties0.setForceShutdownOnVmExit(false);
        java.util.Properties properties9 = atomikosProperties0.asProperties();
        boolean boolean10 = atomikosProperties0.isThreadedTwoPhaseCommit();
        java.lang.String str11 = atomikosProperties0.getService();
        java.util.Properties properties12 = atomikosProperties0.asProperties();
        java.util.Collection<java.lang.Object> objCollection13 = properties12.values();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties14 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties14.setDefaultJtaTimeout((long) (byte) 10);
        atomikosProperties14.setCheckpointInterval((long) (byte) 0);
        atomikosProperties14.setTransactionManagerUniqueName("");
        java.util.Properties properties21 = atomikosProperties14.asProperties();
        java.lang.String str22 = atomikosProperties14.getTransactionManagerUniqueName();
        atomikosProperties14.setDefaultJtaTimeout((long) (-1));
        java.lang.String str25 = atomikosProperties14.getService();
        java.util.Properties properties26 = atomikosProperties14.asProperties();
        java.util.Properties properties27 = new java.util.Properties(properties26);
        java.lang.Object obj28 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj29 = properties12.replace((java.lang.Object) properties26, obj28);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(properties9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertNotNull(properties12);
        org.junit.Assert.assertNotNull(objCollection13);
        org.junit.Assert.assertNotNull(properties21);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "" + "'", str22, "");
        org.junit.Assert.assertNull(str25);
        org.junit.Assert.assertNotNull(properties26);
    }

    @Test
    public void test1167() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1167");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setDefaultJtaTimeout((long) (byte) 10);
        long long3 = atomikosProperties0.getDefaultJtaTimeout();
        atomikosProperties0.setTransactionManagerUniqueName("");
        boolean boolean6 = atomikosProperties0.isEnableLogging();
        atomikosProperties0.setDefaultJtaTimeout((long) '4');
        java.lang.String str9 = atomikosProperties0.getTransactionManagerUniqueName();
        atomikosProperties0.setThreadedTwoPhaseCommit(true);
        java.util.Properties properties12 = atomikosProperties0.asProperties();
        java.util.Properties properties13 = new java.util.Properties(properties12);
        java.util.Properties properties14 = new java.util.Properties(properties12);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties15 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties15.setDefaultJtaTimeout((long) (byte) 10);
        atomikosProperties15.setCheckpointInterval((long) (byte) 0);
        atomikosProperties15.setTransactionManagerUniqueName("");
        long long22 = atomikosProperties15.getDefaultJtaTimeout();
        boolean boolean23 = atomikosProperties15.isEnableLogging();
        boolean boolean24 = atomikosProperties15.isSerialJtaTransactions();
        java.lang.Object obj25 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj26 = properties14.put((java.lang.Object) boolean24, obj25);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + long3 + "' != '" + 10L + "'", long3 == 10L);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "" + "'", str9, "");
        org.junit.Assert.assertNotNull(properties12);
        org.junit.Assert.assertTrue("'" + long22 + "' != '" + 10L + "'", long22 == 10L);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
    }

    @Test
    public void test1168() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1168");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Properties properties2 = new java.util.Properties(properties0);
        boolean boolean4 = properties2.containsValue((java.lang.Object) (short) 100);
        java.util.Properties properties5 = null;
        java.util.Properties properties6 = new java.util.Properties(properties5);
        java.util.Properties properties7 = new java.util.Properties(properties5);
        java.util.Properties properties8 = null;
        java.util.Properties properties9 = new java.util.Properties(properties8);
        java.lang.Object obj11 = properties7.put((java.lang.Object) properties9, (java.lang.Object) (short) 1);
        java.util.Enumeration<java.lang.Object> objEnumeration12 = properties9.elements();
        java.lang.Object obj13 = properties2.remove((java.lang.Object) properties9);
        java.lang.Object obj16 = properties9.setProperty("", "");
        java.util.Properties properties17 = null;
        java.util.Properties properties18 = new java.util.Properties(properties17);
        java.util.Properties properties19 = new java.util.Properties(properties17);
        java.util.Properties properties20 = null;
        java.util.Properties properties21 = new java.util.Properties(properties20);
        java.lang.Object obj23 = properties19.put((java.lang.Object) properties21, (java.lang.Object) (short) 1);
        java.util.Properties properties25 = null;
        java.util.Properties properties26 = new java.util.Properties(properties25);
        java.util.Properties properties27 = new java.util.Properties(properties25);
        java.util.Properties properties28 = null;
        java.util.Properties properties29 = new java.util.Properties(properties28);
        java.lang.Object obj31 = properties27.put((java.lang.Object) properties29, (java.lang.Object) (short) 1);
        boolean boolean32 = properties21.remove((java.lang.Object) false, (java.lang.Object) (short) 1);
        java.util.Properties properties33 = new java.util.Properties(properties21);
        properties9.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties33);
        java.util.Properties properties35 = null;
        java.util.Properties properties36 = new java.util.Properties(properties35);
        java.util.Properties properties37 = new java.util.Properties(properties35);
        java.util.Properties properties38 = null;
        java.util.Properties properties39 = new java.util.Properties(properties38);
        java.lang.Object obj41 = properties37.put((java.lang.Object) properties39, (java.lang.Object) (short) 1);
        properties39.clear();
        int int43 = properties39.size();
        java.util.Properties properties44 = null;
        java.util.Properties properties45 = new java.util.Properties(properties44);
        java.util.Properties properties46 = new java.util.Properties(properties44);
        java.util.Properties properties47 = null;
        java.util.Properties properties48 = new java.util.Properties(properties47);
        java.lang.Object obj50 = properties46.put((java.lang.Object) properties48, (java.lang.Object) (short) 1);
        java.util.Properties properties51 = new java.util.Properties(properties48);
        java.util.Properties properties52 = new java.util.Properties(properties48);
        boolean boolean54 = properties39.remove((java.lang.Object) properties48, (java.lang.Object) 10.0f);
        java.util.Enumeration<java.lang.Object> objEnumeration55 = properties48.elements();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties56 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties56.setDefaultJtaTimeout((long) (byte) 10);
        atomikosProperties56.setCheckpointInterval((long) (byte) 0);
        long long61 = atomikosProperties56.getMaxTimeout();
        atomikosProperties56.setSerialJtaTransactions(true);
        java.util.Properties properties64 = new java.util.Properties();
        java.util.Enumeration<?> wildcardEnumeration65 = properties64.propertyNames();
        java.lang.Object obj66 = properties48.replace((java.lang.Object) atomikosProperties56, (java.lang.Object) properties64);
        boolean boolean67 = properties9.contains((java.lang.Object) properties64);
        java.util.Set<java.lang.Object> objSet68 = properties9.keySet();
        java.io.Reader reader69 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties9.load(reader69);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNull(obj11);
        org.junit.Assert.assertNotNull(objEnumeration12);
        org.junit.Assert.assertNull(obj13);
        org.junit.Assert.assertNull(obj16);
        org.junit.Assert.assertNull(obj23);
        org.junit.Assert.assertNull(obj31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNull(obj41);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 0 + "'", int43 == 0);
        org.junit.Assert.assertNull(obj50);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertNotNull(objEnumeration55);
        org.junit.Assert.assertTrue("'" + long61 + "' != '" + 300000L + "'", long61 == 300000L);
        org.junit.Assert.assertNotNull(wildcardEnumeration65);
        org.junit.Assert.assertNull(obj66);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertNotNull(objSet68);
    }

    @Test
    public void test1169() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1169");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setThreadedTwoPhaseCommit(true);
        atomikosProperties0.setMaxActives((int) '#');
        atomikosProperties0.setForceShutdownOnVmExit(true);
        java.lang.String str7 = atomikosProperties0.getLogBaseDir();
        java.util.Properties properties8 = atomikosProperties0.asProperties();
        java.util.Properties properties9 = null;
        java.util.Properties properties10 = new java.util.Properties(properties9);
        java.util.Properties properties11 = new java.util.Properties(properties9);
        java.util.Properties properties12 = null;
        java.util.Properties properties13 = new java.util.Properties(properties12);
        java.lang.Object obj15 = properties11.put((java.lang.Object) properties13, (java.lang.Object) (short) 1);
        boolean boolean16 = properties11.isEmpty();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties17 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties17.setDefaultJtaTimeout((long) (byte) 10);
        atomikosProperties17.setCheckpointInterval((long) (byte) 0);
        atomikosProperties17.setTransactionManagerUniqueName("");
        java.util.Properties properties24 = atomikosProperties17.asProperties();
        java.lang.Object obj25 = properties11.remove((java.lang.Object) properties24);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties26 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties26.setDefaultJtaTimeout((long) (byte) 10);
        atomikosProperties26.setCheckpointInterval((long) (byte) 0);
        atomikosProperties26.setTransactionManagerUniqueName("");
        java.lang.Object obj33 = properties24.remove((java.lang.Object) atomikosProperties26);
        boolean boolean34 = properties8.containsKey((java.lang.Object) properties24);
        java.util.Properties properties35 = new java.util.Properties(properties24);
        boolean boolean36 = properties35.isEmpty();
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNotNull(properties8);
        org.junit.Assert.assertNull(obj15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(properties24);
        org.junit.Assert.assertNull(obj25);
        org.junit.Assert.assertNull(obj33);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
    }

    @Test
    public void test1170() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1170");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Properties properties2 = new java.util.Properties(properties0);
        java.util.Properties properties3 = null;
        java.util.Properties properties4 = new java.util.Properties(properties3);
        java.lang.Object obj6 = properties2.put((java.lang.Object) properties4, (java.lang.Object) (short) 1);
        properties4.clear();
        int int8 = properties4.size();
        java.util.Properties properties9 = null;
        java.util.Properties properties10 = new java.util.Properties(properties9);
        java.util.Properties properties11 = new java.util.Properties(properties9);
        java.util.Properties properties12 = null;
        java.util.Properties properties13 = new java.util.Properties(properties12);
        java.lang.Object obj15 = properties11.put((java.lang.Object) properties13, (java.lang.Object) (short) 1);
        java.util.Properties properties16 = new java.util.Properties(properties13);
        java.util.Properties properties17 = new java.util.Properties(properties13);
        boolean boolean19 = properties4.remove((java.lang.Object) properties13, (java.lang.Object) 10.0f);
        java.util.Enumeration<java.lang.Object> objEnumeration20 = properties13.elements();
        java.util.Properties properties21 = new java.util.Properties(properties13);
        java.io.Writer writer22 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties13.store(writer22, "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(obj6);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertNull(obj15);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(objEnumeration20);
    }

    @Test
    public void test1171() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1171");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Properties properties2 = new java.util.Properties(properties0);
        java.util.Properties properties3 = null;
        java.util.Properties properties4 = new java.util.Properties(properties3);
        java.lang.Object obj6 = properties2.put((java.lang.Object) properties4, (java.lang.Object) (short) 1);
        java.util.Properties properties8 = null;
        java.util.Properties properties9 = new java.util.Properties(properties8);
        java.util.Properties properties10 = new java.util.Properties(properties8);
        java.util.Properties properties11 = null;
        java.util.Properties properties12 = new java.util.Properties(properties11);
        java.lang.Object obj14 = properties10.put((java.lang.Object) properties12, (java.lang.Object) (short) 1);
        boolean boolean15 = properties4.remove((java.lang.Object) false, (java.lang.Object) (short) 1);
        java.util.Properties properties16 = new java.util.Properties(properties4);
        int int17 = properties16.size();
        java.util.Properties properties18 = null;
        java.util.Properties properties19 = new java.util.Properties(properties18);
        java.util.Properties properties20 = new java.util.Properties(properties18);
        java.util.Properties properties21 = null;
        java.util.Properties properties22 = new java.util.Properties(properties21);
        java.lang.Object obj24 = properties20.put((java.lang.Object) properties22, (java.lang.Object) (short) 1);
        java.util.Enumeration<java.lang.Object> objEnumeration25 = properties22.elements();
        java.util.Properties properties26 = new java.util.Properties(properties22);
        boolean boolean27 = properties16.contains((java.lang.Object) properties22);
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet28 = properties16.entrySet();
        java.io.PrintStream printStream29 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties16.list(printStream29);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(obj6);
        org.junit.Assert.assertNull(obj14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 0 + "'", int17 == 0);
        org.junit.Assert.assertNull(obj24);
        org.junit.Assert.assertNotNull(objEnumeration25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(objEntrySet28);
    }

    @Test
    public void test1172() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1172");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setDefaultJtaTimeout((long) (byte) 10);
        long long3 = atomikosProperties0.getDefaultJtaTimeout();
        atomikosProperties0.setTransactionManagerUniqueName("");
        boolean boolean6 = atomikosProperties0.isEnableLogging();
        atomikosProperties0.setDefaultJtaTimeout((long) '4');
        java.lang.String str9 = atomikosProperties0.getTransactionManagerUniqueName();
        atomikosProperties0.setThreadedTwoPhaseCommit(true);
        java.util.Properties properties12 = atomikosProperties0.asProperties();
        java.util.Properties properties13 = null;
        java.util.Properties properties14 = new java.util.Properties(properties13);
        java.util.Properties properties15 = new java.util.Properties(properties13);
        java.util.Properties properties16 = null;
        java.util.Properties properties17 = new java.util.Properties(properties16);
        java.lang.Object obj19 = properties15.put((java.lang.Object) properties17, (java.lang.Object) (short) 1);
        java.util.Properties properties21 = null;
        java.util.Properties properties22 = new java.util.Properties(properties21);
        java.util.Properties properties23 = new java.util.Properties(properties21);
        java.util.Properties properties24 = null;
        java.util.Properties properties25 = new java.util.Properties(properties24);
        java.lang.Object obj27 = properties23.put((java.lang.Object) properties25, (java.lang.Object) (short) 1);
        boolean boolean28 = properties17.remove((java.lang.Object) false, (java.lang.Object) (short) 1);
        java.util.Properties properties29 = new java.util.Properties(properties17);
        java.lang.Object obj30 = properties12.remove((java.lang.Object) properties17);
        java.io.OutputStream outputStream31 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties12.save(outputStream31, "tmlog");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + long3 + "' != '" + 10L + "'", long3 == 10L);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "" + "'", str9, "");
        org.junit.Assert.assertNotNull(properties12);
        org.junit.Assert.assertNull(obj19);
        org.junit.Assert.assertNull(obj27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNull(obj30);
    }

    @Test
    public void test1173() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1173");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        boolean boolean1 = atomikosProperties0.isForceShutdownOnVmExit();
        java.util.Properties properties2 = atomikosProperties0.asProperties();
        java.util.Properties properties3 = null;
        java.util.Properties properties4 = new java.util.Properties(properties3);
        java.util.Properties properties5 = new java.util.Properties(properties3);
        java.util.Properties properties6 = null;
        java.util.Properties properties7 = new java.util.Properties(properties6);
        java.lang.Object obj9 = properties5.put((java.lang.Object) properties7, (java.lang.Object) (short) 1);
        properties7.clear();
        int int11 = properties7.size();
        java.util.Properties properties12 = null;
        java.util.Properties properties13 = new java.util.Properties(properties12);
        java.util.Properties properties14 = new java.util.Properties(properties12);
        java.util.Properties properties15 = null;
        java.util.Properties properties16 = new java.util.Properties(properties15);
        java.lang.Object obj18 = properties14.put((java.lang.Object) properties16, (java.lang.Object) (short) 1);
        java.util.Properties properties19 = new java.util.Properties(properties16);
        java.util.Properties properties20 = new java.util.Properties(properties16);
        boolean boolean22 = properties7.remove((java.lang.Object) properties16, (java.lang.Object) 10.0f);
        boolean boolean23 = properties2.containsKey((java.lang.Object) 10.0f);
        java.util.Properties properties24 = new java.util.Properties(properties2);
        java.lang.String str26 = properties24.getProperty("");
        java.util.Set<java.lang.String> strSet27 = properties24.stringPropertyNames();
        java.io.OutputStream outputStream28 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties24.storeToXML(outputStream28, "hi!", "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=true, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=true, com.atomikos.icatch.max_actives=35, com.atomikos.icatch.log_base_name=tmlog}");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertNotNull(properties2);
        org.junit.Assert.assertNull(obj9);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertNull(obj18);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNull(str26);
        org.junit.Assert.assertNotNull(strSet27);
    }

    @Test
    public void test1174() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1174");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Properties properties2 = new java.util.Properties(properties0);
        java.util.Properties properties3 = null;
        java.util.Properties properties4 = new java.util.Properties(properties3);
        java.lang.Object obj6 = properties2.put((java.lang.Object) properties4, (java.lang.Object) (short) 1);
        java.util.Enumeration<java.lang.Object> objEnumeration7 = properties4.elements();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet8 = properties4.entrySet();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties9 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties9.setDefaultJtaTimeout((long) (byte) 10);
        long long12 = atomikosProperties9.getDefaultJtaTimeout();
        atomikosProperties9.setTransactionManagerUniqueName("");
        boolean boolean15 = atomikosProperties9.isEnableLogging();
        boolean boolean16 = properties4.containsKey((java.lang.Object) boolean15);
        java.util.Properties properties17 = null;
        java.util.Properties properties18 = new java.util.Properties(properties17);
        java.util.Properties properties19 = new java.util.Properties(properties17);
        java.util.Properties properties20 = null;
        java.util.Properties properties21 = new java.util.Properties(properties20);
        java.lang.Object obj23 = properties19.put((java.lang.Object) properties21, (java.lang.Object) (short) 1);
        java.util.Enumeration<java.lang.Object> objEnumeration24 = properties21.elements();
        boolean boolean25 = properties4.containsKey((java.lang.Object) objEnumeration24);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties26 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties26.setDefaultJtaTimeout((long) (byte) 10);
        atomikosProperties26.setCheckpointInterval((long) (byte) 0);
        atomikosProperties26.setTransactionManagerUniqueName("");
        java.util.Properties properties33 = atomikosProperties26.asProperties();
        java.lang.String str34 = atomikosProperties26.getTransactionManagerUniqueName();
        atomikosProperties26.setLogBaseDir("{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=0, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.tm_unique_name=, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
        atomikosProperties26.setCheckpointInterval((long) (byte) 0);
        long long39 = atomikosProperties26.getDefaultJtaTimeout();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties40 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties40.setThreadedTwoPhaseCommit(true);
        atomikosProperties40.setMaxActives((int) (byte) 0);
        atomikosProperties40.setEnableLogging(true);
        atomikosProperties40.setForceShutdownOnVmExit(false);
        boolean boolean49 = atomikosProperties40.isThreadedTwoPhaseCommit();
        atomikosProperties40.setForceShutdownOnVmExit(false);
        atomikosProperties40.setMaxActives((int) (short) -1);
        java.lang.Object obj54 = properties4.putIfAbsent((java.lang.Object) long39, (java.lang.Object) (short) -1);
        java.lang.Object obj57 = properties4.setProperty("{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=100, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=true, com.atomikos.icatch.tm_unique_name=, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name={com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.tm_unique_name=, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}}", "{}");
        java.io.PrintWriter printWriter58 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties4.list(printWriter58);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(obj6);
        org.junit.Assert.assertNotNull(objEnumeration7);
        org.junit.Assert.assertNotNull(objEntrySet8);
        org.junit.Assert.assertTrue("'" + long12 + "' != '" + 10L + "'", long12 == 10L);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNull(obj23);
        org.junit.Assert.assertNotNull(objEnumeration24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(properties33);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "" + "'", str34, "");
        org.junit.Assert.assertTrue("'" + long39 + "' != '" + 10L + "'", long39 == 10L);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertNull(obj54);
        org.junit.Assert.assertNull(obj57);
    }

    @Test
    public void test1175() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1175");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setDefaultJtaTimeout((long) (byte) 10);
        atomikosProperties0.setCheckpointInterval((long) (byte) 0);
        atomikosProperties0.setTransactionManagerUniqueName("");
        java.util.Properties properties7 = atomikosProperties0.asProperties();
        java.lang.String str8 = atomikosProperties0.getTransactionManagerUniqueName();
        atomikosProperties0.setDefaultJtaTimeout((long) (-1));
        java.lang.String str11 = atomikosProperties0.getService();
        atomikosProperties0.setLogBaseDir("{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.tm_unique_name=, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
        boolean boolean14 = atomikosProperties0.isSerialJtaTransactions();
        java.util.Properties properties15 = atomikosProperties0.asProperties();
        long long16 = atomikosProperties0.getDefaultJtaTimeout();
        org.junit.Assert.assertNotNull(properties7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "" + "'", str8, "");
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(properties15);
        org.junit.Assert.assertTrue("'" + long16 + "' != '" + (-1L) + "'", long16 == (-1L));
    }

    @Test
    public void test1176() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1176");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Properties properties2 = new java.util.Properties(properties0);
        boolean boolean4 = properties2.containsValue((java.lang.Object) (short) 100);
        java.util.Enumeration<java.lang.Object> objEnumeration5 = properties2.keys();
        java.util.Properties properties6 = null;
        java.util.Properties properties7 = new java.util.Properties(properties6);
        java.util.Properties properties8 = new java.util.Properties(properties6);
        java.util.Properties properties9 = null;
        java.util.Properties properties10 = new java.util.Properties(properties9);
        java.lang.Object obj12 = properties8.put((java.lang.Object) properties10, (java.lang.Object) (short) 1);
        boolean boolean13 = properties8.isEmpty();
        java.util.Properties properties14 = null;
        java.util.Properties properties15 = new java.util.Properties(properties14);
        java.util.Properties properties16 = new java.util.Properties(properties14);
        boolean boolean17 = properties8.containsKey((java.lang.Object) properties16);
        java.util.Properties properties18 = new java.util.Properties(properties16);
        java.lang.Object obj19 = properties18.clone();
        java.lang.Object obj20 = properties2.remove(obj19);
        properties2.clear();
        java.io.PrintStream printStream22 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties2.list(printStream22);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(objEnumeration5);
        org.junit.Assert.assertNull(obj12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(obj19);
        org.junit.Assert.assertEquals(obj19.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj19), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj19), "{}");
        org.junit.Assert.assertNull(obj20);
    }

    @Test
    public void test1177() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1177");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setThreadedTwoPhaseCommit(true);
        atomikosProperties0.setMaxActives((int) (byte) 0);
        atomikosProperties0.setEnableLogging(true);
        atomikosProperties0.setForceShutdownOnVmExit(false);
        java.util.Properties properties9 = atomikosProperties0.asProperties();
        boolean boolean10 = atomikosProperties0.isThreadedTwoPhaseCommit();
        java.lang.String str11 = atomikosProperties0.getService();
        long long12 = atomikosProperties0.getCheckpointInterval();
        java.util.Properties properties13 = atomikosProperties0.asProperties();
        org.junit.Assert.assertNotNull(properties9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertTrue("'" + long12 + "' != '" + 500L + "'", long12 == 500L);
        org.junit.Assert.assertNotNull(properties13);
    }

    @Test
    public void test1178() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1178");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Properties properties2 = new java.util.Properties(properties0);
        java.util.Properties properties3 = null;
        java.util.Properties properties4 = new java.util.Properties(properties3);
        java.lang.Object obj6 = properties2.put((java.lang.Object) properties4, (java.lang.Object) (short) 1);
        boolean boolean7 = properties2.isEmpty();
        java.util.Properties properties8 = null;
        java.util.Properties properties9 = new java.util.Properties(properties8);
        java.util.Properties properties10 = new java.util.Properties(properties8);
        boolean boolean11 = properties2.containsKey((java.lang.Object) properties10);
        java.util.Set<java.lang.Object> objSet12 = properties10.keySet();
        java.lang.String str15 = properties10.getProperty("", "{=}");
        org.junit.Assert.assertNull(obj6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNotNull(objSet12);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "{=}" + "'", str15, "{=}");
    }

    @Test
    public void test1179() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1179");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Properties properties2 = new java.util.Properties(properties0);
        java.util.Properties properties3 = null;
        java.util.Properties properties4 = new java.util.Properties(properties3);
        java.lang.Object obj6 = properties2.put((java.lang.Object) properties4, (java.lang.Object) (short) 1);
        java.util.Properties properties8 = null;
        java.util.Properties properties9 = new java.util.Properties(properties8);
        java.util.Properties properties10 = new java.util.Properties(properties8);
        java.util.Properties properties11 = null;
        java.util.Properties properties12 = new java.util.Properties(properties11);
        java.lang.Object obj14 = properties10.put((java.lang.Object) properties12, (java.lang.Object) (short) 1);
        boolean boolean15 = properties4.remove((java.lang.Object) false, (java.lang.Object) (short) 1);
        java.util.Properties properties16 = new java.util.Properties(properties4);
        int int17 = properties16.size();
        java.util.Properties properties18 = null;
        java.util.Properties properties19 = new java.util.Properties(properties18);
        java.util.Properties properties20 = new java.util.Properties(properties18);
        java.util.Properties properties21 = null;
        java.util.Properties properties22 = new java.util.Properties(properties21);
        java.lang.Object obj24 = properties20.put((java.lang.Object) properties22, (java.lang.Object) (short) 1);
        java.util.Enumeration<java.lang.Object> objEnumeration25 = properties22.elements();
        java.util.Properties properties26 = new java.util.Properties(properties22);
        boolean boolean27 = properties16.contains((java.lang.Object) properties22);
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet28 = properties16.entrySet();
        java.util.Properties properties29 = null;
        java.util.Properties properties30 = new java.util.Properties(properties29);
        java.util.Properties properties31 = new java.util.Properties(properties29);
        java.util.Properties properties32 = null;
        java.util.Properties properties33 = new java.util.Properties(properties32);
        java.lang.Object obj35 = properties31.put((java.lang.Object) properties33, (java.lang.Object) (short) 1);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties36 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties36.setThreadedTwoPhaseCommit(true);
        atomikosProperties36.setMaxActives((int) (byte) 0);
        boolean boolean41 = properties31.containsValue((java.lang.Object) atomikosProperties36);
        atomikosProperties36.setCheckpointInterval((long) 9);
        atomikosProperties36.setEnableLogging(false);
        boolean boolean46 = properties16.containsValue((java.lang.Object) atomikosProperties36);
        java.util.Properties properties47 = atomikosProperties36.asProperties();
        java.util.Enumeration<java.lang.Object> objEnumeration48 = properties47.elements();
        java.io.OutputStream outputStream49 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties47.storeToXML(outputStream49, "{[]={com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=0, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.tm_unique_name=, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}}");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(obj6);
        org.junit.Assert.assertNull(obj14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 0 + "'", int17 == 0);
        org.junit.Assert.assertNull(obj24);
        org.junit.Assert.assertNotNull(objEnumeration25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(objEntrySet28);
        org.junit.Assert.assertNull(obj35);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(properties47);
        org.junit.Assert.assertNotNull(objEnumeration48);
    }

    @Test
    public void test1180() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1180");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setDefaultJtaTimeout((long) (byte) 10);
        atomikosProperties0.setCheckpointInterval((long) (byte) 0);
        atomikosProperties0.setTransactionManagerUniqueName("");
        java.util.Properties properties7 = atomikosProperties0.asProperties();
        java.lang.String str8 = atomikosProperties0.getLogBaseName();
        atomikosProperties0.setCheckpointInterval(100L);
        atomikosProperties0.setLogBaseDir("{[]={com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=0, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.tm_unique_name=, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}}");
        org.junit.Assert.assertNotNull(properties7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "tmlog" + "'", str8, "tmlog");
    }

    @Test
    public void test1181() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1181");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setDefaultJtaTimeout((long) (byte) 10);
        atomikosProperties0.setCheckpointInterval((long) (byte) 0);
        atomikosProperties0.setTransactionManagerUniqueName("");
        boolean boolean7 = atomikosProperties0.isEnableLogging();
        java.util.Properties properties8 = atomikosProperties0.asProperties();
        java.util.Properties properties9 = new java.util.Properties(properties8);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties10 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties10.setDefaultJtaTimeout((long) (byte) 10);
        atomikosProperties10.setSerialJtaTransactions(false);
        atomikosProperties10.setMaxTimeout((long) (short) -1);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties17 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties17.setDefaultJtaTimeout((long) (byte) 10);
        atomikosProperties17.setCheckpointInterval((long) (byte) 0);
        atomikosProperties17.setTransactionManagerUniqueName("");
        java.util.Properties properties24 = atomikosProperties17.asProperties();
        java.lang.String str25 = atomikosProperties17.getLogBaseName();
        java.util.Properties properties26 = atomikosProperties17.asProperties();
        java.lang.Object obj27 = properties8.getOrDefault((java.lang.Object) (short) -1, (java.lang.Object) atomikosProperties17);
        long long28 = atomikosProperties17.getCheckpointInterval();
        boolean boolean29 = atomikosProperties17.isEnableLogging();
        java.util.Properties properties30 = atomikosProperties17.asProperties();
        java.io.Reader reader31 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties30.load(reader31);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(properties8);
        org.junit.Assert.assertNotNull(properties24);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "tmlog" + "'", str25, "tmlog");
        org.junit.Assert.assertNotNull(properties26);
        org.junit.Assert.assertNotNull(obj27);
        org.junit.Assert.assertTrue("'" + long28 + "' != '" + 0L + "'", long28 == 0L);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNotNull(properties30);
    }

    @Test
    public void test1182() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1182");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Properties properties2 = new java.util.Properties(properties0);
        java.util.Properties properties3 = null;
        java.util.Properties properties4 = new java.util.Properties(properties3);
        java.lang.Object obj6 = properties2.put((java.lang.Object) properties4, (java.lang.Object) (short) 1);
        properties4.clear();
        int int8 = properties4.size();
        java.util.Properties properties9 = new java.util.Properties(properties4);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties10 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        int int11 = atomikosProperties10.getMaxActives();
        long long12 = atomikosProperties10.getMaxTimeout();
        java.util.Properties properties13 = atomikosProperties10.asProperties();
        java.util.Properties properties14 = atomikosProperties10.asProperties();
        java.util.Properties properties15 = null;
        java.util.Properties properties16 = new java.util.Properties(properties15);
        java.util.Properties properties17 = new java.util.Properties(properties15);
        java.util.Properties properties18 = null;
        java.util.Properties properties19 = new java.util.Properties(properties18);
        java.lang.Object obj21 = properties17.put((java.lang.Object) properties19, (java.lang.Object) (short) 1);
        java.util.Enumeration<java.lang.Object> objEnumeration22 = properties19.elements();
        java.lang.Object obj23 = properties4.replace((java.lang.Object) atomikosProperties10, (java.lang.Object) properties19);
        java.util.Enumeration<?> wildcardEnumeration24 = properties19.propertyNames();
        java.io.Writer writer25 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties19.store(writer25, "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=true, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=true, com.atomikos.icatch.max_actives=35, com.atomikos.icatch.log_base_name=tmlog}");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(obj6);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 50 + "'", int11 == 50);
        org.junit.Assert.assertTrue("'" + long12 + "' != '" + 300000L + "'", long12 == 300000L);
        org.junit.Assert.assertNotNull(properties13);
        org.junit.Assert.assertNotNull(properties14);
        org.junit.Assert.assertNull(obj21);
        org.junit.Assert.assertNotNull(objEnumeration22);
        org.junit.Assert.assertNull(obj23);
        org.junit.Assert.assertNotNull(wildcardEnumeration24);
    }

    @Test
    public void test1183() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1183");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setDefaultJtaTimeout((long) (byte) 10);
        long long3 = atomikosProperties0.getDefaultJtaTimeout();
        atomikosProperties0.setTransactionManagerUniqueName("hi!");
        atomikosProperties0.setTransactionManagerUniqueName("{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=0, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.tm_unique_name=, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
        atomikosProperties0.setService("");
        atomikosProperties0.setDefaultJtaTimeout(0L);
        atomikosProperties0.setSerialJtaTransactions(true);
        int int14 = atomikosProperties0.getMaxActives();
        atomikosProperties0.setEnableLogging(false);
        org.junit.Assert.assertTrue("'" + long3 + "' != '" + 10L + "'", long3 == 10L);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 50 + "'", int14 == 50);
    }

    @Test
    public void test1184() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1184");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Properties properties2 = new java.util.Properties(properties0);
        java.util.Properties properties3 = null;
        java.util.Properties properties4 = new java.util.Properties(properties3);
        java.lang.Object obj6 = properties2.put((java.lang.Object) properties4, (java.lang.Object) (short) 1);
        properties4.clear();
        int int8 = properties4.size();
        java.util.Properties properties9 = new java.util.Properties(properties4);
        java.util.Properties properties10 = new java.util.Properties(properties4);
        java.io.OutputStream outputStream11 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties4.save(outputStream11, "");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(obj6);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
    }

    @Test
    public void test1185() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1185");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Properties properties2 = new java.util.Properties(properties0);
        java.util.Properties properties3 = null;
        java.util.Properties properties4 = new java.util.Properties(properties3);
        java.lang.Object obj6 = properties2.put((java.lang.Object) properties4, (java.lang.Object) (short) 1);
        boolean boolean7 = properties2.isEmpty();
        java.util.Properties properties8 = null;
        java.util.Properties properties9 = new java.util.Properties(properties8);
        java.util.Properties properties10 = new java.util.Properties(properties8);
        boolean boolean11 = properties2.containsKey((java.lang.Object) properties10);
        java.util.Properties properties12 = new java.util.Properties(properties10);
        java.util.Properties properties13 = new java.util.Properties(properties12);
        properties13.clear();
        java.util.Enumeration<?> wildcardEnumeration15 = properties13.propertyNames();
        java.lang.Object obj18 = properties13.setProperty("{}", "tmlog");
        java.io.OutputStream outputStream19 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties13.save(outputStream19, "{tmlog=}");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(obj6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNotNull(wildcardEnumeration15);
        org.junit.Assert.assertNull(obj18);
    }

    @Test
    public void test1186() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1186");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setDefaultJtaTimeout((long) (byte) 10);
        atomikosProperties0.setSerialJtaTransactions(false);
        atomikosProperties0.setService("{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.tm_unique_name=, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
        atomikosProperties0.setService("tmlog");
        java.lang.String str9 = atomikosProperties0.getLogBaseDir();
        atomikosProperties0.setTransactionManagerUniqueName("{tmlog={com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=0, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.tm_unique_name=, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}, 4=true}");
        atomikosProperties0.setThreadedTwoPhaseCommit(false);
        org.junit.Assert.assertNull(str9);
    }

    @Test
    public void test1187() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1187");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Properties properties2 = new java.util.Properties(properties0);
        java.util.Properties properties3 = null;
        java.util.Properties properties4 = new java.util.Properties(properties3);
        java.lang.Object obj6 = properties2.put((java.lang.Object) properties4, (java.lang.Object) (short) 1);
        java.util.Properties properties7 = new java.util.Properties(properties4);
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet8 = properties4.entrySet();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties9 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties9.setThreadedTwoPhaseCommit(true);
        atomikosProperties9.setMaxActives((int) (byte) 0);
        atomikosProperties9.setEnableLogging(true);
        atomikosProperties9.setMaxActives((int) (byte) 1);
        boolean boolean18 = properties4.containsValue((java.lang.Object) atomikosProperties9);
        java.lang.String str19 = atomikosProperties9.getTransactionManagerUniqueName();
        int int20 = atomikosProperties9.getMaxActives();
        org.junit.Assert.assertNull(obj6);
        org.junit.Assert.assertNotNull(objEntrySet8);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNull(str19);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 1 + "'", int20 == 1);
    }

    @Test
    public void test1188() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1188");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setDefaultJtaTimeout((long) (byte) 10);
        atomikosProperties0.setCheckpointInterval((long) (byte) 0);
        atomikosProperties0.setTransactionManagerUniqueName("");
        java.util.Properties properties7 = atomikosProperties0.asProperties();
        java.lang.String str8 = atomikosProperties0.getLogBaseName();
        java.util.Properties properties9 = atomikosProperties0.asProperties();
        atomikosProperties0.setEnableLogging(true);
        boolean boolean12 = atomikosProperties0.isSerialJtaTransactions();
        boolean boolean13 = atomikosProperties0.isForceShutdownOnVmExit();
        atomikosProperties0.setCheckpointInterval((long) 1);
        java.lang.String str16 = atomikosProperties0.getService();
        java.lang.String str17 = atomikosProperties0.getService();
        atomikosProperties0.setDefaultJtaTimeout((long) (-1));
        org.junit.Assert.assertNotNull(properties7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "tmlog" + "'", str8, "tmlog");
        org.junit.Assert.assertNotNull(properties9);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNull(str16);
        org.junit.Assert.assertNull(str17);
    }

    @Test
    public void test1189() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1189");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Properties properties2 = new java.util.Properties(properties0);
        boolean boolean4 = properties2.containsValue((java.lang.Object) (short) 100);
        java.util.Properties properties5 = null;
        java.util.Properties properties6 = new java.util.Properties(properties5);
        java.util.Properties properties7 = new java.util.Properties(properties5);
        java.util.Properties properties8 = null;
        java.util.Properties properties9 = new java.util.Properties(properties8);
        java.lang.Object obj11 = properties7.put((java.lang.Object) properties9, (java.lang.Object) (short) 1);
        java.util.Enumeration<java.lang.Object> objEnumeration12 = properties9.elements();
        java.lang.Object obj13 = properties2.remove((java.lang.Object) properties9);
        java.lang.Object obj16 = properties9.setProperty("", "");
        java.util.Properties properties17 = null;
        java.util.Properties properties18 = new java.util.Properties(properties17);
        java.util.Properties properties19 = new java.util.Properties(properties17);
        java.util.Properties properties20 = null;
        java.util.Properties properties21 = new java.util.Properties(properties20);
        java.lang.Object obj23 = properties19.put((java.lang.Object) properties21, (java.lang.Object) (short) 1);
        java.util.Properties properties25 = null;
        java.util.Properties properties26 = new java.util.Properties(properties25);
        java.util.Properties properties27 = new java.util.Properties(properties25);
        java.util.Properties properties28 = null;
        java.util.Properties properties29 = new java.util.Properties(properties28);
        java.lang.Object obj31 = properties27.put((java.lang.Object) properties29, (java.lang.Object) (short) 1);
        boolean boolean32 = properties21.remove((java.lang.Object) false, (java.lang.Object) (short) 1);
        java.util.Properties properties33 = new java.util.Properties(properties21);
        properties9.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties33);
        java.util.Properties properties35 = null;
        java.util.Properties properties36 = new java.util.Properties(properties35);
        java.util.Properties properties37 = new java.util.Properties(properties35);
        boolean boolean39 = properties37.containsValue((java.lang.Object) (short) 100);
        java.util.Properties properties40 = null;
        java.util.Properties properties41 = new java.util.Properties(properties40);
        java.util.Properties properties42 = new java.util.Properties(properties40);
        java.util.Properties properties43 = null;
        java.util.Properties properties44 = new java.util.Properties(properties43);
        java.lang.Object obj46 = properties42.put((java.lang.Object) properties44, (java.lang.Object) (short) 1);
        java.util.Enumeration<java.lang.Object> objEnumeration47 = properties44.elements();
        java.lang.Object obj48 = properties37.remove((java.lang.Object) properties44);
        boolean boolean49 = properties44.isEmpty();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet50 = properties44.entrySet();
        java.util.Properties properties51 = new java.util.Properties(properties44);
        java.util.Properties properties52 = null;
        java.util.Properties properties53 = new java.util.Properties(properties52);
        java.util.Properties properties54 = new java.util.Properties(properties52);
        java.util.Properties properties55 = null;
        java.util.Properties properties56 = new java.util.Properties(properties55);
        java.lang.Object obj58 = properties54.put((java.lang.Object) properties56, (java.lang.Object) (short) 1);
        java.util.Properties properties59 = new java.util.Properties(properties56);
        java.util.Properties properties60 = new java.util.Properties(properties56);
        java.util.Set<java.lang.Object> objSet61 = properties60.keySet();
        java.util.Properties properties62 = null;
        java.util.Properties properties63 = new java.util.Properties(properties62);
        java.util.Properties properties64 = new java.util.Properties(properties62);
        java.util.Properties properties65 = null;
        java.util.Properties properties66 = new java.util.Properties(properties65);
        java.lang.Object obj68 = properties64.put((java.lang.Object) properties66, (java.lang.Object) (short) 1);
        properties66.clear();
        int int70 = properties66.size();
        java.util.Properties properties71 = null;
        java.util.Properties properties72 = new java.util.Properties(properties71);
        java.util.Properties properties73 = new java.util.Properties(properties71);
        java.util.Properties properties74 = null;
        java.util.Properties properties75 = new java.util.Properties(properties74);
        java.lang.Object obj77 = properties73.put((java.lang.Object) properties75, (java.lang.Object) (short) 1);
        java.util.Properties properties78 = new java.util.Properties(properties75);
        java.util.Properties properties79 = new java.util.Properties(properties75);
        boolean boolean81 = properties66.remove((java.lang.Object) properties75, (java.lang.Object) 10.0f);
        java.util.Enumeration<java.lang.Object> objEnumeration82 = properties75.elements();
        java.util.Properties properties83 = new java.util.Properties(properties75);
        java.lang.Object obj84 = properties51.putIfAbsent((java.lang.Object) objSet61, (java.lang.Object) properties75);
        properties9.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties51);
        java.lang.String str88 = properties9.getProperty("{com.atomikos.icatch.enable_logging=false, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=true, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}", "{tmlog=}");
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNull(obj11);
        org.junit.Assert.assertNotNull(objEnumeration12);
        org.junit.Assert.assertNull(obj13);
        org.junit.Assert.assertNull(obj16);
        org.junit.Assert.assertNull(obj23);
        org.junit.Assert.assertNull(obj31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNull(obj46);
        org.junit.Assert.assertNotNull(objEnumeration47);
        org.junit.Assert.assertNull(obj48);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertNotNull(objEntrySet50);
        org.junit.Assert.assertNull(obj58);
        org.junit.Assert.assertNotNull(objSet61);
        org.junit.Assert.assertNull(obj68);
        org.junit.Assert.assertTrue("'" + int70 + "' != '" + 0 + "'", int70 == 0);
        org.junit.Assert.assertNull(obj77);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + false + "'", boolean81 == false);
        org.junit.Assert.assertNotNull(objEnumeration82);
        org.junit.Assert.assertNull(obj84);
        org.junit.Assert.assertEquals("'" + str88 + "' != '" + "{tmlog=}" + "'", str88, "{tmlog=}");
    }

    @Test
    public void test1190() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1190");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Properties properties2 = new java.util.Properties(properties0);
        java.util.Properties properties3 = null;
        java.util.Properties properties4 = new java.util.Properties(properties3);
        java.lang.Object obj6 = properties2.put((java.lang.Object) properties4, (java.lang.Object) (short) 1);
        java.util.Properties properties8 = null;
        java.util.Properties properties9 = new java.util.Properties(properties8);
        java.util.Properties properties10 = new java.util.Properties(properties8);
        java.util.Properties properties11 = null;
        java.util.Properties properties12 = new java.util.Properties(properties11);
        java.lang.Object obj14 = properties10.put((java.lang.Object) properties12, (java.lang.Object) (short) 1);
        boolean boolean15 = properties4.remove((java.lang.Object) false, (java.lang.Object) (short) 1);
        java.util.Set<java.lang.String> strSet16 = properties4.stringPropertyNames();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties17 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties17.setDefaultJtaTimeout((long) (byte) 10);
        long long20 = atomikosProperties17.getDefaultJtaTimeout();
        java.lang.Object obj21 = properties4.get((java.lang.Object) atomikosProperties17);
        int int22 = properties4.size();
        java.util.Properties properties23 = new java.util.Properties(properties4);
        java.util.Properties properties24 = new java.util.Properties(properties23);
        java.io.PrintStream printStream25 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties24.list(printStream25);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(obj6);
        org.junit.Assert.assertNull(obj14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(strSet16);
        org.junit.Assert.assertTrue("'" + long20 + "' != '" + 10L + "'", long20 == 10L);
        org.junit.Assert.assertNull(obj21);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 0 + "'", int22 == 0);
    }

    @Test
    public void test1191() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1191");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Properties properties2 = new java.util.Properties(properties0);
        java.util.Properties properties3 = null;
        java.util.Properties properties4 = new java.util.Properties(properties3);
        java.lang.Object obj6 = properties2.put((java.lang.Object) properties4, (java.lang.Object) (short) 1);
        java.util.Properties properties8 = null;
        java.util.Properties properties9 = new java.util.Properties(properties8);
        java.util.Properties properties10 = new java.util.Properties(properties8);
        java.util.Properties properties11 = null;
        java.util.Properties properties12 = new java.util.Properties(properties11);
        java.lang.Object obj14 = properties10.put((java.lang.Object) properties12, (java.lang.Object) (short) 1);
        boolean boolean15 = properties4.remove((java.lang.Object) false, (java.lang.Object) (short) 1);
        java.util.Set<java.lang.String> strSet16 = properties4.stringPropertyNames();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties17 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties17.setDefaultJtaTimeout((long) (byte) 10);
        long long20 = atomikosProperties17.getDefaultJtaTimeout();
        java.lang.Object obj21 = properties4.get((java.lang.Object) atomikosProperties17);
        java.util.Properties properties22 = null;
        java.util.Properties properties23 = new java.util.Properties(properties22);
        java.util.Properties properties24 = new java.util.Properties(properties22);
        java.util.Properties properties25 = null;
        java.util.Properties properties26 = new java.util.Properties(properties25);
        java.lang.Object obj28 = properties24.put((java.lang.Object) properties26, (java.lang.Object) (short) 1);
        java.util.Properties properties30 = null;
        java.util.Properties properties31 = new java.util.Properties(properties30);
        java.util.Properties properties32 = new java.util.Properties(properties30);
        java.util.Properties properties33 = null;
        java.util.Properties properties34 = new java.util.Properties(properties33);
        java.lang.Object obj36 = properties32.put((java.lang.Object) properties34, (java.lang.Object) (short) 1);
        boolean boolean37 = properties26.remove((java.lang.Object) false, (java.lang.Object) (short) 1);
        java.lang.Object obj39 = properties26.remove((java.lang.Object) '#');
        java.util.Set<java.lang.Object> objSet40 = properties26.keySet();
        boolean boolean41 = properties4.containsKey((java.lang.Object) properties26);
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet42 = properties4.entrySet();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties43 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties43.setThreadedTwoPhaseCommit(true);
        boolean boolean46 = atomikosProperties43.isEnableLogging();
        atomikosProperties43.setTransactionManagerUniqueName("{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=0, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog, {}={}}");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties49 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties49.setDefaultJtaTimeout((long) (byte) 10);
        atomikosProperties49.setCheckpointInterval((long) (byte) 0);
        atomikosProperties49.setTransactionManagerUniqueName("");
        boolean boolean56 = atomikosProperties49.isEnableLogging();
        java.lang.Class<?> wildcardClass57 = atomikosProperties49.getClass();
        java.lang.Object obj58 = properties4.put((java.lang.Object) "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=0, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog, {}={}}", (java.lang.Object) atomikosProperties49);
        java.util.Properties properties59 = null;
        java.util.Properties properties60 = new java.util.Properties(properties59);
        java.util.Properties properties61 = new java.util.Properties(properties59);
        java.util.Properties properties62 = null;
        java.util.Properties properties63 = new java.util.Properties(properties62);
        java.lang.Object obj65 = properties61.put((java.lang.Object) properties63, (java.lang.Object) (short) 1);
        java.util.Properties properties67 = null;
        java.util.Properties properties68 = new java.util.Properties(properties67);
        java.util.Properties properties69 = new java.util.Properties(properties67);
        java.util.Properties properties70 = null;
        java.util.Properties properties71 = new java.util.Properties(properties70);
        java.lang.Object obj73 = properties69.put((java.lang.Object) properties71, (java.lang.Object) (short) 1);
        boolean boolean74 = properties63.remove((java.lang.Object) false, (java.lang.Object) (short) 1);
        java.util.Enumeration<java.lang.Object> objEnumeration75 = properties63.elements();
        java.util.Properties properties76 = new java.util.Properties(properties63);
        java.lang.Object obj78 = properties4.getOrDefault((java.lang.Object) properties76, (java.lang.Object) 500L);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties79 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties79.setThreadedTwoPhaseCommit(true);
        boolean boolean82 = atomikosProperties79.isEnableLogging();
        boolean boolean83 = atomikosProperties79.isEnableLogging();
        java.util.Properties properties84 = atomikosProperties79.asProperties();
        boolean boolean85 = properties76.containsKey((java.lang.Object) properties84);
        java.lang.String str88 = properties84.getProperty("{[]={com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=0, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.tm_unique_name=, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}}", "{tmlog={com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=0, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.tm_unique_name=, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}, 4=true}");
        org.junit.Assert.assertNull(obj6);
        org.junit.Assert.assertNull(obj14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(strSet16);
        org.junit.Assert.assertTrue("'" + long20 + "' != '" + 10L + "'", long20 == 10L);
        org.junit.Assert.assertNull(obj21);
        org.junit.Assert.assertNull(obj28);
        org.junit.Assert.assertNull(obj36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNull(obj39);
        org.junit.Assert.assertNotNull(objSet40);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(objEntrySet42);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertNotNull(wildcardClass57);
        org.junit.Assert.assertNull(obj58);
        org.junit.Assert.assertNull(obj65);
        org.junit.Assert.assertNull(obj73);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
        org.junit.Assert.assertNotNull(objEnumeration75);
        org.junit.Assert.assertEquals("'" + obj78 + "' != '" + 500L + "'", obj78, 500L);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + true + "'", boolean82 == true);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + true + "'", boolean83 == true);
        org.junit.Assert.assertNotNull(properties84);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + false + "'", boolean85 == false);
        org.junit.Assert.assertEquals("'" + str88 + "' != '" + "{tmlog={com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=0, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.tm_unique_name=, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}, 4=true}" + "'", str88, "{tmlog={com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=0, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.tm_unique_name=, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}, 4=true}");
    }

    @Test
    public void test1192() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1192");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Properties properties2 = new java.util.Properties(properties0);
        java.util.Properties properties3 = null;
        java.util.Properties properties4 = new java.util.Properties(properties3);
        java.lang.Object obj6 = properties2.put((java.lang.Object) properties4, (java.lang.Object) (short) 1);
        boolean boolean7 = properties2.isEmpty();
        java.util.Properties properties8 = null;
        java.util.Properties properties9 = new java.util.Properties(properties8);
        java.util.Properties properties10 = new java.util.Properties(properties8);
        boolean boolean11 = properties2.containsKey((java.lang.Object) properties10);
        java.util.Properties properties12 = new java.util.Properties(properties10);
        java.lang.Object obj13 = properties12.clone();
        java.util.Properties properties15 = null;
        java.util.Properties properties16 = new java.util.Properties(properties15);
        java.util.Properties properties17 = new java.util.Properties(properties15);
        java.util.Properties properties18 = null;
        java.util.Properties properties19 = new java.util.Properties(properties18);
        java.lang.Object obj21 = properties17.put((java.lang.Object) properties19, (java.lang.Object) (short) 1);
        boolean boolean22 = properties17.isEmpty();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties23 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties23.setDefaultJtaTimeout((long) (byte) 10);
        atomikosProperties23.setCheckpointInterval((long) (byte) 0);
        atomikosProperties23.setTransactionManagerUniqueName("");
        java.util.Properties properties30 = atomikosProperties23.asProperties();
        java.lang.Object obj31 = properties17.remove((java.lang.Object) properties30);
        java.lang.Object obj32 = properties12.putIfAbsent((java.lang.Object) 1L, (java.lang.Object) properties17);
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet33 = properties17.entrySet();
        java.util.Properties properties34 = new java.util.Properties(properties17);
        boolean boolean35 = properties34.isEmpty();
        java.io.PrintStream printStream36 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties34.list(printStream36);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(obj6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNotNull(obj13);
        org.junit.Assert.assertEquals(obj13.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj13), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj13), "{}");
        org.junit.Assert.assertNull(obj21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(properties30);
        org.junit.Assert.assertNull(obj31);
        org.junit.Assert.assertNull(obj32);
        org.junit.Assert.assertNotNull(objEntrySet33);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
    }

    @Test
    public void test1193() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1193");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setDefaultJtaTimeout((long) (byte) 10);
        atomikosProperties0.setCheckpointInterval((long) (byte) 0);
        atomikosProperties0.setEnableLogging(true);
        atomikosProperties0.setService("");
        atomikosProperties0.setTransactionManagerUniqueName("{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.tm_unique_name=, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
        java.util.Properties properties11 = atomikosProperties0.asProperties();
        atomikosProperties0.setMaxActives((int) (byte) 10);
        org.junit.Assert.assertNotNull(properties11);
    }

    @Test
    public void test1194() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1194");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        boolean boolean1 = atomikosProperties0.isSerialJtaTransactions();
        java.util.Properties properties2 = atomikosProperties0.asProperties();
        java.util.Properties properties3 = new java.util.Properties(properties2);
        int int4 = properties3.size();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertNotNull(properties2);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
    }

    @Test
    public void test1195() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1195");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Properties properties2 = new java.util.Properties(properties0);
        java.util.Properties properties3 = null;
        java.util.Properties properties4 = new java.util.Properties(properties3);
        java.lang.Object obj6 = properties2.put((java.lang.Object) properties4, (java.lang.Object) (short) 1);
        java.util.Properties properties8 = null;
        java.util.Properties properties9 = new java.util.Properties(properties8);
        java.util.Properties properties10 = new java.util.Properties(properties8);
        java.util.Properties properties11 = null;
        java.util.Properties properties12 = new java.util.Properties(properties11);
        java.lang.Object obj14 = properties10.put((java.lang.Object) properties12, (java.lang.Object) (short) 1);
        boolean boolean15 = properties4.remove((java.lang.Object) false, (java.lang.Object) (short) 1);
        java.util.Set<java.lang.String> strSet16 = properties4.stringPropertyNames();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties17 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties17.setDefaultJtaTimeout((long) (byte) 10);
        atomikosProperties17.setCheckpointInterval((long) (byte) 0);
        atomikosProperties17.setTransactionManagerUniqueName("");
        boolean boolean24 = atomikosProperties17.isEnableLogging();
        atomikosProperties17.setSerialJtaTransactions(false);
        atomikosProperties17.setLogBaseDir("");
        java.util.Properties properties29 = null;
        java.util.Properties properties30 = new java.util.Properties(properties29);
        java.util.Properties properties31 = new java.util.Properties(properties29);
        java.util.Properties properties32 = null;
        java.util.Properties properties33 = new java.util.Properties(properties32);
        java.lang.Object obj35 = properties31.put((java.lang.Object) properties33, (java.lang.Object) (short) 1);
        java.util.Properties properties36 = new java.util.Properties(properties33);
        boolean boolean37 = properties4.remove((java.lang.Object) "", (java.lang.Object) properties36);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties38 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties38.setDefaultJtaTimeout((long) (byte) 10);
        atomikosProperties38.setCheckpointInterval((long) (byte) 0);
        atomikosProperties38.setEnableLogging(true);
        long long45 = atomikosProperties38.getDefaultJtaTimeout();
        java.lang.Object obj46 = properties4.remove((java.lang.Object) atomikosProperties38);
        java.lang.String str47 = atomikosProperties38.getService();
        atomikosProperties38.setDefaultJtaTimeout((long) ' ');
        org.junit.Assert.assertNull(obj6);
        org.junit.Assert.assertNull(obj14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(strSet16);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNull(obj35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertTrue("'" + long45 + "' != '" + 10L + "'", long45 == 10L);
        org.junit.Assert.assertNull(obj46);
        org.junit.Assert.assertNull(str47);
    }

    @Test
    public void test1196() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1196");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Properties properties2 = new java.util.Properties(properties0);
        java.util.Properties properties3 = null;
        java.util.Properties properties4 = new java.util.Properties(properties3);
        java.lang.Object obj6 = properties2.put((java.lang.Object) properties4, (java.lang.Object) (short) 1);
        boolean boolean7 = properties2.isEmpty();
        java.util.Properties properties8 = null;
        java.util.Properties properties9 = new java.util.Properties(properties8);
        java.util.Properties properties10 = new java.util.Properties(properties8);
        boolean boolean11 = properties2.containsKey((java.lang.Object) properties10);
        java.util.Properties properties12 = null;
        java.util.Properties properties13 = new java.util.Properties(properties12);
        java.util.Properties properties14 = new java.util.Properties(properties12);
        java.util.Properties properties15 = null;
        java.util.Properties properties16 = new java.util.Properties(properties15);
        java.lang.Object obj18 = properties14.put((java.lang.Object) properties16, (java.lang.Object) (short) 1);
        java.util.Properties properties20 = null;
        java.util.Properties properties21 = new java.util.Properties(properties20);
        java.util.Properties properties22 = new java.util.Properties(properties20);
        java.util.Properties properties23 = null;
        java.util.Properties properties24 = new java.util.Properties(properties23);
        java.lang.Object obj26 = properties22.put((java.lang.Object) properties24, (java.lang.Object) (short) 1);
        boolean boolean27 = properties16.remove((java.lang.Object) false, (java.lang.Object) (short) 1);
        java.util.Set<java.lang.String> strSet28 = properties16.stringPropertyNames();
        boolean boolean29 = properties10.containsKey((java.lang.Object) strSet28);
        java.util.Properties properties30 = null;
        java.util.Properties properties31 = new java.util.Properties(properties30);
        java.util.Properties properties32 = new java.util.Properties(properties30);
        java.util.Properties properties33 = null;
        java.util.Properties properties34 = new java.util.Properties(properties33);
        java.lang.Object obj36 = properties32.put((java.lang.Object) properties34, (java.lang.Object) (short) 1);
        properties34.clear();
        java.lang.String str39 = properties34.getProperty("");
        java.util.Properties properties40 = null;
        java.util.Properties properties41 = new java.util.Properties(properties40);
        java.util.Properties properties42 = new java.util.Properties(properties40);
        java.util.Properties properties43 = null;
        java.util.Properties properties44 = new java.util.Properties(properties43);
        java.lang.Object obj46 = properties42.put((java.lang.Object) properties44, (java.lang.Object) (short) 1);
        properties34.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties42);
        boolean boolean48 = properties10.containsKey((java.lang.Object) properties34);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties50 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties50.setThreadedTwoPhaseCommit(true);
        boolean boolean53 = atomikosProperties50.isEnableLogging();
        java.lang.Object obj54 = properties10.put((java.lang.Object) '4', (java.lang.Object) boolean53);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties56 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties56.setDefaultJtaTimeout((long) (byte) 10);
        atomikosProperties56.setCheckpointInterval((long) (byte) 0);
        atomikosProperties56.setTransactionManagerUniqueName("");
        java.util.Properties properties63 = atomikosProperties56.asProperties();
        atomikosProperties56.setDefaultJtaTimeout((long) 'a');
        boolean boolean66 = atomikosProperties56.isEnableLogging();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties67 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties67.setDefaultJtaTimeout((long) (byte) 10);
        long long70 = atomikosProperties67.getDefaultJtaTimeout();
        atomikosProperties67.setTransactionManagerUniqueName("");
        boolean boolean73 = atomikosProperties67.isEnableLogging();
        java.lang.String str74 = atomikosProperties67.getLogBaseDir();
        java.util.Properties properties75 = atomikosProperties67.asProperties();
        java.lang.String str76 = properties75.toString();
        java.util.Properties properties77 = null;
        java.util.Properties properties78 = new java.util.Properties(properties77);
        java.util.Properties properties79 = new java.util.Properties(properties77);
        java.util.Properties properties80 = null;
        java.util.Properties properties81 = new java.util.Properties(properties80);
        java.lang.Object obj83 = properties79.put((java.lang.Object) properties81, (java.lang.Object) (short) 1);
        java.util.Properties properties85 = null;
        java.util.Properties properties86 = new java.util.Properties(properties85);
        java.util.Properties properties87 = new java.util.Properties(properties85);
        java.util.Properties properties88 = null;
        java.util.Properties properties89 = new java.util.Properties(properties88);
        java.lang.Object obj91 = properties87.put((java.lang.Object) properties89, (java.lang.Object) (short) 1);
        boolean boolean92 = properties81.remove((java.lang.Object) false, (java.lang.Object) (short) 1);
        java.util.Set<java.lang.String> strSet93 = properties81.stringPropertyNames();
        java.lang.Object obj94 = properties81.clone();
        properties75.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties81);
        boolean boolean96 = properties10.replace((java.lang.Object) "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.tm_unique_name=, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}", (java.lang.Object) atomikosProperties56, (java.lang.Object) properties81);
        atomikosProperties56.setService("{tmlog={com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=0, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.tm_unique_name=, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}, 4=true}");
        java.lang.String str99 = atomikosProperties56.getLogBaseDir();
        org.junit.Assert.assertNull(obj6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNull(obj18);
        org.junit.Assert.assertNull(obj26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(strSet28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNull(obj36);
        org.junit.Assert.assertNull(str39);
        org.junit.Assert.assertNull(obj46);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertNull(obj54);
        org.junit.Assert.assertNotNull(properties63);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66 == true);
        org.junit.Assert.assertTrue("'" + long70 + "' != '" + 10L + "'", long70 == 10L);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + true + "'", boolean73 == true);
        org.junit.Assert.assertNull(str74);
        org.junit.Assert.assertNotNull(properties75);
// flaky:         org.junit.Assert.assertEquals("'" + str76 + "' != '" + "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.tm_unique_name=, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}" + "'", str76, "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.tm_unique_name=, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
        org.junit.Assert.assertNull(obj83);
        org.junit.Assert.assertNull(obj91);
        org.junit.Assert.assertTrue("'" + boolean92 + "' != '" + false + "'", boolean92 == false);
        org.junit.Assert.assertNotNull(strSet93);
        org.junit.Assert.assertNotNull(obj94);
        org.junit.Assert.assertEquals(obj94.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj94), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj94), "{}");
        org.junit.Assert.assertTrue("'" + boolean96 + "' != '" + false + "'", boolean96 == false);
        org.junit.Assert.assertNull(str99);
    }

    @Test
    public void test1197() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1197");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Properties properties2 = new java.util.Properties(properties0);
        java.util.Properties properties3 = null;
        java.util.Properties properties4 = new java.util.Properties(properties3);
        java.lang.Object obj6 = properties2.put((java.lang.Object) properties4, (java.lang.Object) (short) 1);
        properties4.clear();
        int int8 = properties4.size();
        java.util.Properties properties9 = new java.util.Properties(properties4);
        boolean boolean10 = properties4.isEmpty();
        java.util.Enumeration<java.lang.Object> objEnumeration11 = properties4.elements();
        java.util.Properties properties12 = null;
        java.util.Properties properties13 = new java.util.Properties(properties12);
        java.util.Properties properties14 = new java.util.Properties(properties12);
        java.util.Properties properties15 = null;
        java.util.Properties properties16 = new java.util.Properties(properties15);
        java.lang.Object obj18 = properties14.put((java.lang.Object) properties16, (java.lang.Object) (short) 1);
        java.util.Properties properties19 = new java.util.Properties(properties16);
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet20 = properties16.entrySet();
        boolean boolean21 = properties4.contains((java.lang.Object) objEntrySet20);
        java.util.Properties properties22 = new java.util.Properties(properties4);
        java.io.OutputStream outputStream23 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties4.storeToXML(outputStream23, "");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(obj6);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(objEnumeration11);
        org.junit.Assert.assertNull(obj18);
        org.junit.Assert.assertNotNull(objEntrySet20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
    }

    @Test
    public void test1198() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1198");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Properties properties2 = new java.util.Properties(properties0);
        java.util.Properties properties3 = null;
        java.util.Properties properties4 = new java.util.Properties(properties3);
        java.lang.Object obj6 = properties2.put((java.lang.Object) properties4, (java.lang.Object) (short) 1);
        java.util.Properties properties8 = null;
        java.util.Properties properties9 = new java.util.Properties(properties8);
        java.util.Properties properties10 = new java.util.Properties(properties8);
        java.util.Properties properties11 = null;
        java.util.Properties properties12 = new java.util.Properties(properties11);
        java.lang.Object obj14 = properties10.put((java.lang.Object) properties12, (java.lang.Object) (short) 1);
        boolean boolean15 = properties4.remove((java.lang.Object) false, (java.lang.Object) (short) 1);
        java.util.Set<java.lang.String> strSet16 = properties4.stringPropertyNames();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties17 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties17.setDefaultJtaTimeout((long) (byte) 10);
        long long20 = atomikosProperties17.getDefaultJtaTimeout();
        java.lang.Object obj21 = properties4.get((java.lang.Object) atomikosProperties17);
        java.util.Properties properties22 = null;
        java.util.Properties properties23 = new java.util.Properties(properties22);
        java.util.Properties properties24 = new java.util.Properties(properties22);
        java.util.Properties properties25 = null;
        java.util.Properties properties26 = new java.util.Properties(properties25);
        java.lang.Object obj28 = properties24.put((java.lang.Object) properties26, (java.lang.Object) (short) 1);
        java.util.Properties properties30 = null;
        java.util.Properties properties31 = new java.util.Properties(properties30);
        java.util.Properties properties32 = new java.util.Properties(properties30);
        java.util.Properties properties33 = null;
        java.util.Properties properties34 = new java.util.Properties(properties33);
        java.lang.Object obj36 = properties32.put((java.lang.Object) properties34, (java.lang.Object) (short) 1);
        boolean boolean37 = properties26.remove((java.lang.Object) false, (java.lang.Object) (short) 1);
        java.lang.Object obj39 = properties26.remove((java.lang.Object) '#');
        java.util.Set<java.lang.Object> objSet40 = properties26.keySet();
        boolean boolean41 = properties4.containsKey((java.lang.Object) properties26);
        java.lang.Object obj44 = properties26.setProperty("{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.tm_unique_name=, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}", "{}");
        java.util.Properties properties45 = new java.util.Properties(properties26);
        java.io.InputStream inputStream46 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties45.loadFromXML(inputStream46);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(obj6);
        org.junit.Assert.assertNull(obj14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(strSet16);
        org.junit.Assert.assertTrue("'" + long20 + "' != '" + 10L + "'", long20 == 10L);
        org.junit.Assert.assertNull(obj21);
        org.junit.Assert.assertNull(obj28);
        org.junit.Assert.assertNull(obj36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNull(obj39);
        org.junit.Assert.assertNotNull(objSet40);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNull(obj44);
    }

    @Test
    public void test1199() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1199");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setThreadedTwoPhaseCommit(true);
        atomikosProperties0.setMaxActives((int) (byte) 0);
        atomikosProperties0.setEnableLogging(true);
        atomikosProperties0.setForceShutdownOnVmExit(false);
        java.util.Properties properties9 = atomikosProperties0.asProperties();
        boolean boolean10 = atomikosProperties0.isThreadedTwoPhaseCommit();
        java.lang.String str11 = atomikosProperties0.getService();
        java.util.Properties properties12 = atomikosProperties0.asProperties();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties13 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties13.setDefaultJtaTimeout((long) (byte) 10);
        atomikosProperties13.setCheckpointInterval((long) (byte) 0);
        atomikosProperties13.setTransactionManagerUniqueName("");
        java.util.Properties properties20 = atomikosProperties13.asProperties();
        java.lang.String str21 = atomikosProperties13.getTransactionManagerUniqueName();
        atomikosProperties13.setDefaultJtaTimeout((long) (-1));
        java.util.Properties properties24 = atomikosProperties13.asProperties();
        boolean boolean25 = atomikosProperties13.isThreadedTwoPhaseCommit();
        atomikosProperties13.setLogBaseDir("");
        java.lang.Object obj28 = properties12.get((java.lang.Object) "");
        org.junit.Assert.assertNotNull(properties9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertNotNull(properties12);
        org.junit.Assert.assertNotNull(properties20);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "" + "'", str21, "");
        org.junit.Assert.assertNotNull(properties24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNull(obj28);
    }

    @Test
    public void test1200() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1200");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Properties properties2 = new java.util.Properties(properties0);
        java.util.Properties properties3 = null;
        java.util.Properties properties4 = new java.util.Properties(properties3);
        java.lang.Object obj6 = properties2.put((java.lang.Object) properties4, (java.lang.Object) (short) 1);
        java.util.Properties properties8 = null;
        java.util.Properties properties9 = new java.util.Properties(properties8);
        java.util.Properties properties10 = new java.util.Properties(properties8);
        java.util.Properties properties11 = null;
        java.util.Properties properties12 = new java.util.Properties(properties11);
        java.lang.Object obj14 = properties10.put((java.lang.Object) properties12, (java.lang.Object) (short) 1);
        boolean boolean15 = properties4.remove((java.lang.Object) false, (java.lang.Object) (short) 1);
        java.util.Set<java.lang.String> strSet16 = properties4.stringPropertyNames();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties17 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties17.setDefaultJtaTimeout((long) (byte) 10);
        long long20 = atomikosProperties17.getDefaultJtaTimeout();
        java.lang.Object obj21 = properties4.get((java.lang.Object) atomikosProperties17);
        java.util.Properties properties22 = null;
        java.util.Properties properties23 = new java.util.Properties(properties22);
        java.util.Properties properties24 = new java.util.Properties(properties22);
        java.util.Properties properties25 = null;
        java.util.Properties properties26 = new java.util.Properties(properties25);
        java.lang.Object obj28 = properties24.put((java.lang.Object) properties26, (java.lang.Object) (short) 1);
        boolean boolean29 = properties24.isEmpty();
        java.util.Properties properties30 = null;
        java.util.Properties properties31 = new java.util.Properties(properties30);
        java.util.Properties properties32 = new java.util.Properties(properties30);
        boolean boolean33 = properties24.containsKey((java.lang.Object) properties32);
        java.util.Properties properties34 = new java.util.Properties(properties32);
        java.util.Properties properties35 = new java.util.Properties(properties34);
        java.util.Properties properties36 = null;
        java.util.Properties properties37 = new java.util.Properties(properties36);
        java.util.Properties properties38 = new java.util.Properties(properties36);
        java.util.Properties properties39 = null;
        java.util.Properties properties40 = new java.util.Properties(properties39);
        java.lang.Object obj42 = properties38.put((java.lang.Object) properties40, (java.lang.Object) (short) 1);
        properties40.clear();
        int int44 = properties40.size();
        java.util.Properties properties45 = new java.util.Properties(properties40);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties46 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        int int47 = atomikosProperties46.getMaxActives();
        long long48 = atomikosProperties46.getMaxTimeout();
        java.util.Properties properties49 = atomikosProperties46.asProperties();
        java.util.Properties properties50 = atomikosProperties46.asProperties();
        java.util.Properties properties51 = null;
        java.util.Properties properties52 = new java.util.Properties(properties51);
        java.util.Properties properties53 = new java.util.Properties(properties51);
        java.util.Properties properties54 = null;
        java.util.Properties properties55 = new java.util.Properties(properties54);
        java.lang.Object obj57 = properties53.put((java.lang.Object) properties55, (java.lang.Object) (short) 1);
        java.util.Enumeration<java.lang.Object> objEnumeration58 = properties55.elements();
        java.lang.Object obj59 = properties40.replace((java.lang.Object) atomikosProperties46, (java.lang.Object) properties55);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties61 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties61.setThreadedTwoPhaseCommit(true);
        java.lang.String str64 = atomikosProperties61.getService();
        boolean boolean65 = atomikosProperties61.isSerialJtaTransactions();
        java.lang.Object obj66 = properties55.getOrDefault((java.lang.Object) "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.tm_unique_name=, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}", (java.lang.Object) atomikosProperties61);
        boolean boolean67 = properties34.equals((java.lang.Object) properties55);
        java.util.Properties properties68 = new java.util.Properties(properties34);
        java.util.Properties properties69 = new java.util.Properties(properties34);
        java.lang.Object obj70 = properties4.get((java.lang.Object) properties34);
        java.util.Properties properties71 = new java.util.Properties(properties4);
        java.lang.Object obj74 = properties71.setProperty("hi!", "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.tm_unique_name=, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
        java.io.PrintWriter printWriter75 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties71.list(printWriter75);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(obj6);
        org.junit.Assert.assertNull(obj14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(strSet16);
        org.junit.Assert.assertTrue("'" + long20 + "' != '" + 10L + "'", long20 == 10L);
        org.junit.Assert.assertNull(obj21);
        org.junit.Assert.assertNull(obj28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNull(obj42);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 0 + "'", int44 == 0);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 50 + "'", int47 == 50);
        org.junit.Assert.assertTrue("'" + long48 + "' != '" + 300000L + "'", long48 == 300000L);
        org.junit.Assert.assertNotNull(properties49);
        org.junit.Assert.assertNotNull(properties50);
        org.junit.Assert.assertNull(obj57);
        org.junit.Assert.assertNotNull(objEnumeration58);
        org.junit.Assert.assertNull(obj59);
        org.junit.Assert.assertNull(str64);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65 == true);
        org.junit.Assert.assertNotNull(obj66);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + true + "'", boolean67 == true);
        org.junit.Assert.assertNull(obj70);
        org.junit.Assert.assertNull(obj74);
    }

    @Test
    public void test1201() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1201");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Properties properties2 = new java.util.Properties(properties0);
        java.util.Properties properties3 = null;
        java.util.Properties properties4 = new java.util.Properties(properties3);
        java.lang.Object obj6 = properties2.put((java.lang.Object) properties4, (java.lang.Object) (short) 1);
        java.util.Properties properties7 = new java.util.Properties(properties4);
        java.util.Properties properties8 = new java.util.Properties(properties4);
        java.util.Set<java.lang.Object> objSet9 = properties8.keySet();
        java.util.Properties properties10 = new java.util.Properties(properties8);
        java.util.Properties properties11 = new java.util.Properties(properties8);
        java.util.Collection<java.lang.Object> objCollection12 = properties11.values();
        java.util.Properties properties13 = new java.util.Properties(properties11);
        java.lang.String str16 = properties11.getProperty("{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.tm_unique_name=, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}", "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.tm_unique_name=, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
        org.junit.Assert.assertNull(obj6);
        org.junit.Assert.assertNotNull(objSet9);
        org.junit.Assert.assertNotNull(objCollection12);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.tm_unique_name=, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}" + "'", str16, "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.tm_unique_name=, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
    }

    @Test
    public void test1202() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1202");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setDefaultJtaTimeout((long) (byte) 10);
        long long3 = atomikosProperties0.getDefaultJtaTimeout();
        atomikosProperties0.setTransactionManagerUniqueName("");
        boolean boolean6 = atomikosProperties0.isEnableLogging();
        java.lang.String str7 = atomikosProperties0.getLogBaseName();
        atomikosProperties0.setMaxTimeout(10L);
        long long10 = atomikosProperties0.getDefaultJtaTimeout();
        java.util.Properties properties11 = atomikosProperties0.asProperties();
        java.lang.String str14 = properties11.getProperty("{{tmlog={com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=0, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.tm_unique_name=, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}, 4=true}={com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=0, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog, {}={}}}", "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=0, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.tm_unique_name=, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
        org.junit.Assert.assertTrue("'" + long3 + "' != '" + 10L + "'", long3 == 10L);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "tmlog" + "'", str7, "tmlog");
        org.junit.Assert.assertTrue("'" + long10 + "' != '" + 10L + "'", long10 == 10L);
        org.junit.Assert.assertNotNull(properties11);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=0, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.tm_unique_name=, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}" + "'", str14, "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=0, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.tm_unique_name=, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
    }

    @Test
    public void test1203() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1203");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Properties properties2 = new java.util.Properties(properties0);
        java.util.Properties properties3 = null;
        java.util.Properties properties4 = new java.util.Properties(properties3);
        java.lang.Object obj6 = properties2.put((java.lang.Object) properties4, (java.lang.Object) (short) 1);
        properties4.clear();
        int int8 = properties4.size();
        java.util.Properties properties9 = null;
        java.util.Properties properties10 = new java.util.Properties(properties9);
        java.util.Properties properties11 = new java.util.Properties(properties9);
        java.util.Properties properties12 = null;
        java.util.Properties properties13 = new java.util.Properties(properties12);
        java.lang.Object obj15 = properties11.put((java.lang.Object) properties13, (java.lang.Object) (short) 1);
        java.util.Properties properties16 = new java.util.Properties(properties13);
        java.util.Properties properties17 = new java.util.Properties(properties13);
        boolean boolean19 = properties4.remove((java.lang.Object) properties13, (java.lang.Object) 10.0f);
        java.util.Enumeration<java.lang.Object> objEnumeration20 = properties13.elements();
        java.util.Properties properties21 = new java.util.Properties(properties13);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties22 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        int int23 = atomikosProperties22.getMaxActives();
        long long24 = atomikosProperties22.getMaxTimeout();
        java.util.Properties properties25 = atomikosProperties22.asProperties();
        int int26 = atomikosProperties22.getMaxActives();
        java.lang.Object obj28 = properties21.putIfAbsent((java.lang.Object) atomikosProperties22, (java.lang.Object) 1);
        atomikosProperties22.setLogBaseDir("{}");
        atomikosProperties22.setDefaultJtaTimeout((long) (short) 10);
        long long33 = atomikosProperties22.getMaxTimeout();
        boolean boolean34 = atomikosProperties22.isThreadedTwoPhaseCommit();
        boolean boolean35 = atomikosProperties22.isThreadedTwoPhaseCommit();
        org.junit.Assert.assertNull(obj6);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertNull(obj15);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(objEnumeration20);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 50 + "'", int23 == 50);
        org.junit.Assert.assertTrue("'" + long24 + "' != '" + 300000L + "'", long24 == 300000L);
        org.junit.Assert.assertNotNull(properties25);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 50 + "'", int26 == 50);
        org.junit.Assert.assertNull(obj28);
        org.junit.Assert.assertTrue("'" + long33 + "' != '" + 300000L + "'", long33 == 300000L);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
    }

    @Test
    public void test1204() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1204");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Properties properties2 = new java.util.Properties(properties0);
        java.util.Properties properties3 = null;
        java.util.Properties properties4 = new java.util.Properties(properties3);
        java.lang.Object obj6 = properties2.put((java.lang.Object) properties4, (java.lang.Object) (short) 1);
        properties4.clear();
        java.lang.String str9 = properties4.getProperty("");
        java.util.Properties properties10 = new java.util.Properties(properties4);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties11 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties11.setDefaultJtaTimeout((long) (byte) 10);
        atomikosProperties11.setCheckpointInterval((long) (byte) 0);
        atomikosProperties11.setTransactionManagerUniqueName("");
        java.util.Properties properties18 = atomikosProperties11.asProperties();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties19 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties19.setThreadedTwoPhaseCommit(true);
        atomikosProperties19.setMaxActives((int) '#');
        atomikosProperties19.setForceShutdownOnVmExit(true);
        java.lang.String str26 = atomikosProperties19.getLogBaseDir();
        java.lang.Object obj27 = properties18.remove((java.lang.Object) atomikosProperties19);
        java.util.Collection<java.lang.Object> objCollection28 = properties18.values();
        java.util.Properties properties29 = null;
        java.util.Properties properties30 = new java.util.Properties(properties29);
        java.util.Properties properties31 = new java.util.Properties(properties29);
        java.util.Properties properties32 = null;
        java.util.Properties properties33 = new java.util.Properties(properties32);
        java.lang.Object obj35 = properties31.put((java.lang.Object) properties33, (java.lang.Object) (short) 1);
        java.util.Properties properties36 = new java.util.Properties(properties33);
        int int37 = properties33.size();
        java.lang.Object obj39 = properties33.get((java.lang.Object) (short) 100);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties40 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        int int41 = atomikosProperties40.getMaxActives();
        long long42 = atomikosProperties40.getMaxTimeout();
        java.util.Properties properties43 = atomikosProperties40.asProperties();
        java.util.Properties properties44 = null;
        java.util.Properties properties45 = new java.util.Properties(properties44);
        java.util.Properties properties46 = new java.util.Properties(properties44);
        java.util.Properties properties47 = null;
        java.util.Properties properties48 = new java.util.Properties(properties47);
        java.lang.Object obj50 = properties46.put((java.lang.Object) properties48, (java.lang.Object) (short) 1);
        java.util.Properties properties51 = new java.util.Properties(properties48);
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet52 = properties48.entrySet();
        java.lang.Object obj53 = properties43.remove((java.lang.Object) properties48);
        java.util.Enumeration<?> wildcardEnumeration54 = properties43.propertyNames();
        java.util.Properties properties55 = new java.util.Properties(properties43);
        boolean boolean56 = properties10.replace((java.lang.Object) objCollection28, (java.lang.Object) properties33, (java.lang.Object) properties55);
        java.util.Properties properties57 = new java.util.Properties(properties55);
        java.lang.Object obj60 = properties55.setProperty("{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=0, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog, {}={}}", "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=0, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog, {}={}}");
        java.lang.Object obj63 = properties55.setProperty("", "");
        java.io.PrintWriter printWriter64 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties55.list(printWriter64);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(obj6);
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertNotNull(properties18);
        org.junit.Assert.assertNull(str26);
        org.junit.Assert.assertNull(obj27);
        org.junit.Assert.assertNotNull(objCollection28);
        org.junit.Assert.assertNull(obj35);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 0 + "'", int37 == 0);
        org.junit.Assert.assertNull(obj39);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 50 + "'", int41 == 50);
        org.junit.Assert.assertTrue("'" + long42 + "' != '" + 300000L + "'", long42 == 300000L);
        org.junit.Assert.assertNotNull(properties43);
        org.junit.Assert.assertNull(obj50);
        org.junit.Assert.assertNotNull(objEntrySet52);
        org.junit.Assert.assertNull(obj53);
        org.junit.Assert.assertNotNull(wildcardEnumeration54);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertNull(obj60);
        org.junit.Assert.assertNull(obj63);
    }

    @Test
    public void test1205() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1205");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Properties properties2 = new java.util.Properties(properties0);
        java.util.Properties properties3 = null;
        java.util.Properties properties4 = new java.util.Properties(properties3);
        java.lang.Object obj6 = properties2.put((java.lang.Object) properties4, (java.lang.Object) (short) 1);
        properties4.clear();
        java.lang.String str9 = properties4.getProperty("");
        java.util.Properties properties10 = new java.util.Properties(properties4);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties11 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties11.setDefaultJtaTimeout((long) (byte) 10);
        atomikosProperties11.setCheckpointInterval((long) (byte) 0);
        atomikosProperties11.setTransactionManagerUniqueName("");
        java.util.Properties properties18 = atomikosProperties11.asProperties();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties19 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties19.setThreadedTwoPhaseCommit(true);
        atomikosProperties19.setMaxActives((int) '#');
        atomikosProperties19.setForceShutdownOnVmExit(true);
        java.lang.String str26 = atomikosProperties19.getLogBaseDir();
        java.lang.Object obj27 = properties18.remove((java.lang.Object) atomikosProperties19);
        java.util.Collection<java.lang.Object> objCollection28 = properties18.values();
        java.util.Properties properties29 = null;
        java.util.Properties properties30 = new java.util.Properties(properties29);
        java.util.Properties properties31 = new java.util.Properties(properties29);
        java.util.Properties properties32 = null;
        java.util.Properties properties33 = new java.util.Properties(properties32);
        java.lang.Object obj35 = properties31.put((java.lang.Object) properties33, (java.lang.Object) (short) 1);
        java.util.Properties properties36 = new java.util.Properties(properties33);
        int int37 = properties33.size();
        java.lang.Object obj39 = properties33.get((java.lang.Object) (short) 100);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties40 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        int int41 = atomikosProperties40.getMaxActives();
        long long42 = atomikosProperties40.getMaxTimeout();
        java.util.Properties properties43 = atomikosProperties40.asProperties();
        java.util.Properties properties44 = null;
        java.util.Properties properties45 = new java.util.Properties(properties44);
        java.util.Properties properties46 = new java.util.Properties(properties44);
        java.util.Properties properties47 = null;
        java.util.Properties properties48 = new java.util.Properties(properties47);
        java.lang.Object obj50 = properties46.put((java.lang.Object) properties48, (java.lang.Object) (short) 1);
        java.util.Properties properties51 = new java.util.Properties(properties48);
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet52 = properties48.entrySet();
        java.lang.Object obj53 = properties43.remove((java.lang.Object) properties48);
        java.util.Enumeration<?> wildcardEnumeration54 = properties43.propertyNames();
        java.util.Properties properties55 = new java.util.Properties(properties43);
        boolean boolean56 = properties10.replace((java.lang.Object) objCollection28, (java.lang.Object) properties33, (java.lang.Object) properties55);
        java.util.Properties properties57 = new java.util.Properties(properties55);
        java.util.Properties properties58 = null;
        java.util.Properties properties59 = new java.util.Properties(properties58);
        java.util.Properties properties60 = new java.util.Properties(properties58);
        java.util.Properties properties61 = null;
        java.util.Properties properties62 = new java.util.Properties(properties61);
        java.lang.Object obj64 = properties60.put((java.lang.Object) properties62, (java.lang.Object) (short) 1);
        java.util.Properties properties66 = null;
        java.util.Properties properties67 = new java.util.Properties(properties66);
        java.util.Properties properties68 = new java.util.Properties(properties66);
        java.util.Properties properties69 = null;
        java.util.Properties properties70 = new java.util.Properties(properties69);
        java.lang.Object obj72 = properties68.put((java.lang.Object) properties70, (java.lang.Object) (short) 1);
        boolean boolean73 = properties62.remove((java.lang.Object) false, (java.lang.Object) (short) 1);
        java.util.Properties properties74 = new java.util.Properties(properties62);
        boolean boolean75 = properties62.isEmpty();
        java.util.Enumeration<?> wildcardEnumeration76 = properties62.propertyNames();
        java.lang.String str78 = properties62.getProperty("{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=0, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.tm_unique_name=, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
        java.lang.Object obj79 = properties55.get((java.lang.Object) properties62);
        java.io.InputStream inputStream80 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties62.loadFromXML(inputStream80);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(obj6);
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertNotNull(properties18);
        org.junit.Assert.assertNull(str26);
        org.junit.Assert.assertNull(obj27);
        org.junit.Assert.assertNotNull(objCollection28);
        org.junit.Assert.assertNull(obj35);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 0 + "'", int37 == 0);
        org.junit.Assert.assertNull(obj39);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 50 + "'", int41 == 50);
        org.junit.Assert.assertTrue("'" + long42 + "' != '" + 300000L + "'", long42 == 300000L);
        org.junit.Assert.assertNotNull(properties43);
        org.junit.Assert.assertNull(obj50);
        org.junit.Assert.assertNotNull(objEntrySet52);
        org.junit.Assert.assertNull(obj53);
        org.junit.Assert.assertNotNull(wildcardEnumeration54);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertNull(obj64);
        org.junit.Assert.assertNull(obj72);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + true + "'", boolean75 == true);
        org.junit.Assert.assertNotNull(wildcardEnumeration76);
        org.junit.Assert.assertNull(str78);
        org.junit.Assert.assertNull(obj79);
    }

    @Test
    public void test1206() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1206");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Properties properties2 = new java.util.Properties(properties0);
        java.util.Properties properties3 = null;
        java.util.Properties properties4 = new java.util.Properties(properties3);
        java.lang.Object obj6 = properties2.put((java.lang.Object) properties4, (java.lang.Object) (short) 1);
        java.util.Properties properties8 = null;
        java.util.Properties properties9 = new java.util.Properties(properties8);
        java.util.Properties properties10 = new java.util.Properties(properties8);
        java.util.Properties properties11 = null;
        java.util.Properties properties12 = new java.util.Properties(properties11);
        java.lang.Object obj14 = properties10.put((java.lang.Object) properties12, (java.lang.Object) (short) 1);
        boolean boolean15 = properties4.remove((java.lang.Object) false, (java.lang.Object) (short) 1);
        java.util.Set<java.lang.String> strSet16 = properties4.stringPropertyNames();
        java.util.Enumeration<java.lang.Object> objEnumeration17 = properties4.elements();
        java.lang.String str18 = properties4.toString();
        java.lang.String str19 = properties4.toString();
        java.lang.String str20 = properties4.toString();
        java.util.Set<java.lang.String> strSet21 = properties4.stringPropertyNames();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties22 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties22.setThreadedTwoPhaseCommit(true);
        boolean boolean25 = atomikosProperties22.isEnableLogging();
        atomikosProperties22.setCheckpointInterval((long) 35);
        boolean boolean28 = atomikosProperties22.isEnableLogging();
        java.lang.Object obj29 = properties4.get((java.lang.Object) atomikosProperties22);
        java.util.Enumeration<?> wildcardEnumeration30 = properties4.propertyNames();
        java.lang.Class<?> wildcardClass31 = properties4.getClass();
        org.junit.Assert.assertNull(obj6);
        org.junit.Assert.assertNull(obj14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(strSet16);
        org.junit.Assert.assertNotNull(objEnumeration17);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "{}" + "'", str18, "{}");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "{}" + "'", str19, "{}");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "{}" + "'", str20, "{}");
        org.junit.Assert.assertNotNull(strSet21);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNull(obj29);
        org.junit.Assert.assertNotNull(wildcardEnumeration30);
        org.junit.Assert.assertNotNull(wildcardClass31);
    }

    @Test
    public void test1207() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1207");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Properties properties2 = new java.util.Properties(properties0);
        java.util.Properties properties3 = null;
        java.util.Properties properties4 = new java.util.Properties(properties3);
        java.lang.Object obj6 = properties2.put((java.lang.Object) properties4, (java.lang.Object) (short) 1);
        java.util.Properties properties8 = null;
        java.util.Properties properties9 = new java.util.Properties(properties8);
        java.util.Properties properties10 = new java.util.Properties(properties8);
        java.util.Properties properties11 = null;
        java.util.Properties properties12 = new java.util.Properties(properties11);
        java.lang.Object obj14 = properties10.put((java.lang.Object) properties12, (java.lang.Object) (short) 1);
        boolean boolean15 = properties4.remove((java.lang.Object) false, (java.lang.Object) (short) 1);
        java.util.Properties properties16 = new java.util.Properties(properties4);
        boolean boolean17 = properties4.isEmpty();
        java.util.Properties properties18 = new java.util.Properties(properties4);
        java.io.OutputStream outputStream19 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties4.storeToXML(outputStream19, "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.max_actives=0, com.atomikos.icatch.log_base_name=tmlog}");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(obj6);
        org.junit.Assert.assertNull(obj14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
    }

    @Test
    public void test1208() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1208");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setDefaultJtaTimeout((long) (byte) 10);
        long long3 = atomikosProperties0.getDefaultJtaTimeout();
        atomikosProperties0.setTransactionManagerUniqueName("");
        long long6 = atomikosProperties0.getCheckpointInterval();
        java.lang.String str7 = atomikosProperties0.getService();
        java.util.Properties properties8 = atomikosProperties0.asProperties();
        java.util.Map<java.lang.Object, java.lang.Object> objMap9 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties8.putAll(objMap9);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + long3 + "' != '" + 10L + "'", long3 == 10L);
        org.junit.Assert.assertTrue("'" + long6 + "' != '" + 500L + "'", long6 == 500L);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNotNull(properties8);
    }

    @Test
    public void test1209() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1209");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Properties properties2 = new java.util.Properties(properties0);
        java.util.Properties properties3 = null;
        java.util.Properties properties4 = new java.util.Properties(properties3);
        java.lang.Object obj6 = properties2.put((java.lang.Object) properties4, (java.lang.Object) (short) 1);
        java.util.Enumeration<java.lang.Object> objEnumeration7 = properties4.elements();
        java.lang.String str8 = properties4.toString();
        java.util.Properties properties9 = null;
        java.util.Properties properties10 = new java.util.Properties(properties9);
        java.util.Properties properties11 = new java.util.Properties(properties9);
        java.util.Properties properties12 = null;
        java.util.Properties properties13 = new java.util.Properties(properties12);
        java.lang.Object obj15 = properties11.put((java.lang.Object) properties13, (java.lang.Object) (short) 1);
        properties13.clear();
        java.lang.String str18 = properties13.getProperty("");
        java.util.Properties properties19 = null;
        java.util.Properties properties20 = new java.util.Properties(properties19);
        java.util.Properties properties21 = new java.util.Properties(properties19);
        java.util.Properties properties22 = null;
        java.util.Properties properties23 = new java.util.Properties(properties22);
        java.lang.Object obj25 = properties21.put((java.lang.Object) properties23, (java.lang.Object) (short) 1);
        properties13.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties21);
        java.util.Enumeration<java.lang.Object> objEnumeration27 = properties13.keys();
        java.util.Enumeration<java.lang.Object> objEnumeration28 = properties13.elements();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties29 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties29.setDefaultJtaTimeout((long) (byte) 10);
        atomikosProperties29.setCheckpointInterval((long) (byte) 0);
        atomikosProperties29.setEnableLogging(true);
        java.lang.String str36 = atomikosProperties29.getLogBaseName();
        atomikosProperties29.setMaxActives((int) (short) 100);
        boolean boolean39 = properties4.remove((java.lang.Object) properties13, (java.lang.Object) atomikosProperties29);
        java.util.Properties properties40 = new java.util.Properties(properties13);
        java.util.Set<java.lang.Object> objSet41 = properties40.keySet();
        boolean boolean42 = properties40.isEmpty();
        java.io.OutputStream outputStream43 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties40.store(outputStream43, "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.tm_unique_name=, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(obj6);
        org.junit.Assert.assertNotNull(objEnumeration7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "{}" + "'", str8, "{}");
        org.junit.Assert.assertNull(obj15);
        org.junit.Assert.assertNull(str18);
        org.junit.Assert.assertNull(obj25);
        org.junit.Assert.assertNotNull(objEnumeration27);
        org.junit.Assert.assertNotNull(objEnumeration28);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "tmlog" + "'", str36, "tmlog");
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(objSet41);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
    }

    @Test
    public void test1210() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1210");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Properties properties2 = new java.util.Properties(properties0);
        java.util.Properties properties3 = null;
        java.util.Properties properties4 = new java.util.Properties(properties3);
        java.lang.Object obj6 = properties2.put((java.lang.Object) properties4, (java.lang.Object) (short) 1);
        java.util.Properties properties8 = null;
        java.util.Properties properties9 = new java.util.Properties(properties8);
        java.util.Properties properties10 = new java.util.Properties(properties8);
        java.util.Properties properties11 = null;
        java.util.Properties properties12 = new java.util.Properties(properties11);
        java.lang.Object obj14 = properties10.put((java.lang.Object) properties12, (java.lang.Object) (short) 1);
        boolean boolean15 = properties4.remove((java.lang.Object) false, (java.lang.Object) (short) 1);
        java.lang.Object obj17 = properties4.remove((java.lang.Object) '#');
        java.util.Set<java.lang.Object> objSet18 = properties4.keySet();
        properties4.clear();
        java.util.Properties properties20 = null;
        java.util.Properties properties21 = new java.util.Properties(properties20);
        java.util.Properties properties22 = new java.util.Properties(properties20);
        java.util.Properties properties23 = null;
        java.util.Properties properties24 = new java.util.Properties(properties23);
        java.lang.Object obj26 = properties22.put((java.lang.Object) properties24, (java.lang.Object) (short) 1);
        java.util.Enumeration<java.lang.Object> objEnumeration27 = properties24.elements();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet28 = properties24.entrySet();
        boolean boolean29 = properties4.equals((java.lang.Object) properties24);
        java.util.Properties properties30 = null;
        java.util.Properties properties31 = new java.util.Properties(properties30);
        java.util.Properties properties32 = new java.util.Properties(properties30);
        java.util.Properties properties33 = null;
        java.util.Properties properties34 = new java.util.Properties(properties33);
        java.lang.Object obj36 = properties32.put((java.lang.Object) properties34, (java.lang.Object) (short) 1);
        boolean boolean37 = properties32.isEmpty();
        java.util.Properties properties38 = null;
        java.util.Properties properties39 = new java.util.Properties(properties38);
        java.util.Properties properties40 = new java.util.Properties(properties38);
        boolean boolean41 = properties32.containsKey((java.lang.Object) properties40);
        java.util.Properties properties42 = new java.util.Properties(properties40);
        java.lang.String str44 = properties40.getProperty("");
        properties24.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties40);
        java.io.Writer writer46 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties40.store(writer46, "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(obj6);
        org.junit.Assert.assertNull(obj14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNull(obj17);
        org.junit.Assert.assertNotNull(objSet18);
        org.junit.Assert.assertNull(obj26);
        org.junit.Assert.assertNotNull(objEnumeration27);
        org.junit.Assert.assertNotNull(objEntrySet28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNull(obj36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertNull(str44);
    }

    @Test
    public void test1211() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1211");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setThreadedTwoPhaseCommit(true);
        atomikosProperties0.setMaxActives((int) (byte) 0);
        atomikosProperties0.setEnableLogging(true);
        atomikosProperties0.setMaxActives((int) (byte) 1);
        atomikosProperties0.setTransactionManagerUniqueName("hi!");
        java.lang.String str11 = atomikosProperties0.getLogBaseName();
        int int12 = atomikosProperties0.getMaxActives();
        java.lang.String str13 = atomikosProperties0.getTransactionManagerUniqueName();
        atomikosProperties0.setThreadedTwoPhaseCommit(true);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "tmlog" + "'", str11, "tmlog");
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 1 + "'", int12 == 1);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "hi!" + "'", str13, "hi!");
    }

    @Test
    public void test1212() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1212");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Properties properties2 = new java.util.Properties(properties0);
        java.util.Properties properties3 = null;
        java.util.Properties properties4 = new java.util.Properties(properties3);
        java.lang.Object obj6 = properties2.put((java.lang.Object) properties4, (java.lang.Object) (short) 1);
        java.util.Properties properties8 = null;
        java.util.Properties properties9 = new java.util.Properties(properties8);
        java.util.Properties properties10 = new java.util.Properties(properties8);
        java.util.Properties properties11 = null;
        java.util.Properties properties12 = new java.util.Properties(properties11);
        java.lang.Object obj14 = properties10.put((java.lang.Object) properties12, (java.lang.Object) (short) 1);
        boolean boolean15 = properties4.remove((java.lang.Object) false, (java.lang.Object) (short) 1);
        java.util.Set<java.lang.String> strSet16 = properties4.stringPropertyNames();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties17 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties17.setDefaultJtaTimeout((long) (byte) 10);
        long long20 = atomikosProperties17.getDefaultJtaTimeout();
        java.lang.Object obj21 = properties4.get((java.lang.Object) atomikosProperties17);
        java.util.Properties properties22 = null;
        java.util.Properties properties23 = new java.util.Properties(properties22);
        java.util.Properties properties24 = new java.util.Properties(properties22);
        java.util.Properties properties25 = null;
        java.util.Properties properties26 = new java.util.Properties(properties25);
        java.lang.Object obj28 = properties24.put((java.lang.Object) properties26, (java.lang.Object) (short) 1);
        java.util.Properties properties30 = null;
        java.util.Properties properties31 = new java.util.Properties(properties30);
        java.util.Properties properties32 = new java.util.Properties(properties30);
        java.util.Properties properties33 = null;
        java.util.Properties properties34 = new java.util.Properties(properties33);
        java.lang.Object obj36 = properties32.put((java.lang.Object) properties34, (java.lang.Object) (short) 1);
        boolean boolean37 = properties26.remove((java.lang.Object) false, (java.lang.Object) (short) 1);
        java.lang.Object obj39 = properties26.remove((java.lang.Object) '#');
        java.util.Set<java.lang.Object> objSet40 = properties26.keySet();
        boolean boolean41 = properties4.containsKey((java.lang.Object) properties26);
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet42 = properties4.entrySet();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties43 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties43.setThreadedTwoPhaseCommit(true);
        boolean boolean46 = atomikosProperties43.isEnableLogging();
        atomikosProperties43.setTransactionManagerUniqueName("{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=0, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog, {}={}}");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties49 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties49.setDefaultJtaTimeout((long) (byte) 10);
        atomikosProperties49.setCheckpointInterval((long) (byte) 0);
        atomikosProperties49.setTransactionManagerUniqueName("");
        boolean boolean56 = atomikosProperties49.isEnableLogging();
        java.lang.Class<?> wildcardClass57 = atomikosProperties49.getClass();
        java.lang.Object obj58 = properties4.put((java.lang.Object) "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=0, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog, {}={}}", (java.lang.Object) atomikosProperties49);
        java.util.Properties properties59 = null;
        java.util.Properties properties60 = new java.util.Properties(properties59);
        java.util.Properties properties61 = new java.util.Properties(properties59);
        java.util.Properties properties62 = null;
        java.util.Properties properties63 = new java.util.Properties(properties62);
        java.lang.Object obj65 = properties61.put((java.lang.Object) properties63, (java.lang.Object) (short) 1);
        java.util.Properties properties67 = null;
        java.util.Properties properties68 = new java.util.Properties(properties67);
        java.util.Properties properties69 = new java.util.Properties(properties67);
        java.util.Properties properties70 = null;
        java.util.Properties properties71 = new java.util.Properties(properties70);
        java.lang.Object obj73 = properties69.put((java.lang.Object) properties71, (java.lang.Object) (short) 1);
        boolean boolean74 = properties63.remove((java.lang.Object) false, (java.lang.Object) (short) 1);
        java.util.Enumeration<java.lang.Object> objEnumeration75 = properties63.elements();
        java.util.Properties properties76 = new java.util.Properties(properties63);
        java.lang.Object obj78 = properties4.getOrDefault((java.lang.Object) properties76, (java.lang.Object) 500L);
        java.lang.Object obj79 = properties4.clone();
        java.io.Reader reader80 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties4.load(reader80);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(obj6);
        org.junit.Assert.assertNull(obj14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(strSet16);
        org.junit.Assert.assertTrue("'" + long20 + "' != '" + 10L + "'", long20 == 10L);
        org.junit.Assert.assertNull(obj21);
        org.junit.Assert.assertNull(obj28);
        org.junit.Assert.assertNull(obj36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNull(obj39);
        org.junit.Assert.assertNotNull(objSet40);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(objEntrySet42);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertNotNull(wildcardClass57);
        org.junit.Assert.assertNull(obj58);
        org.junit.Assert.assertNull(obj65);
        org.junit.Assert.assertNull(obj73);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
        org.junit.Assert.assertNotNull(objEnumeration75);
        org.junit.Assert.assertEquals("'" + obj78 + "' != '" + 500L + "'", obj78, 500L);
        org.junit.Assert.assertNotNull(obj79);
    }

    @Test
    public void test1213() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1213");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Properties properties2 = new java.util.Properties(properties0);
        java.util.Properties properties3 = null;
        java.util.Properties properties4 = new java.util.Properties(properties3);
        java.lang.Object obj6 = properties2.put((java.lang.Object) properties4, (java.lang.Object) (short) 1);
        boolean boolean7 = properties2.isEmpty();
        java.util.Properties properties8 = null;
        java.util.Properties properties9 = new java.util.Properties(properties8);
        java.util.Properties properties10 = new java.util.Properties(properties8);
        boolean boolean11 = properties2.containsKey((java.lang.Object) properties10);
        java.util.Properties properties12 = new java.util.Properties(properties10);
        java.util.Properties properties13 = new java.util.Properties(properties12);
        java.util.Properties properties14 = null;
        java.util.Properties properties15 = new java.util.Properties(properties14);
        java.util.Properties properties16 = new java.util.Properties(properties14);
        java.util.Properties properties17 = null;
        java.util.Properties properties18 = new java.util.Properties(properties17);
        java.lang.Object obj20 = properties16.put((java.lang.Object) properties18, (java.lang.Object) (short) 1);
        boolean boolean21 = properties16.isEmpty();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties22 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties22.setDefaultJtaTimeout((long) (byte) 10);
        atomikosProperties22.setCheckpointInterval((long) (byte) 0);
        atomikosProperties22.setTransactionManagerUniqueName("");
        java.util.Properties properties29 = atomikosProperties22.asProperties();
        java.lang.Object obj30 = properties16.remove((java.lang.Object) properties29);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties31 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties31.setDefaultJtaTimeout((long) (byte) 10);
        atomikosProperties31.setCheckpointInterval((long) (byte) 0);
        atomikosProperties31.setTransactionManagerUniqueName("");
        java.lang.Object obj38 = properties29.remove((java.lang.Object) atomikosProperties31);
        java.util.Properties properties39 = null;
        java.util.Properties properties40 = new java.util.Properties(properties39);
        java.util.Properties properties41 = new java.util.Properties(properties39);
        java.util.Properties properties42 = null;
        java.util.Properties properties43 = new java.util.Properties(properties42);
        java.lang.Object obj45 = properties41.put((java.lang.Object) properties43, (java.lang.Object) (short) 1);
        java.util.Enumeration<java.lang.Object> objEnumeration46 = properties43.elements();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet47 = properties43.entrySet();
        java.util.Set<java.lang.Object> objSet48 = properties43.keySet();
        java.util.Properties properties49 = null;
        java.util.Properties properties50 = new java.util.Properties(properties49);
        java.util.Properties properties51 = new java.util.Properties(properties49);
        java.util.Properties properties52 = null;
        java.util.Properties properties53 = new java.util.Properties(properties52);
        java.lang.Object obj55 = properties51.put((java.lang.Object) properties53, (java.lang.Object) (short) 1);
        properties53.clear();
        int int57 = properties53.size();
        java.util.Properties properties58 = new java.util.Properties(properties53);
        java.util.Properties properties59 = null;
        java.util.Properties properties60 = new java.util.Properties(properties59);
        java.util.Properties properties61 = new java.util.Properties(properties59);
        java.util.Properties properties62 = null;
        java.util.Properties properties63 = new java.util.Properties(properties62);
        java.lang.Object obj65 = properties61.put((java.lang.Object) properties63, (java.lang.Object) (short) 1);
        properties63.clear();
        java.lang.String str68 = properties63.getProperty("");
        java.util.Properties properties69 = null;
        java.util.Properties properties70 = new java.util.Properties(properties69);
        java.util.Properties properties71 = new java.util.Properties(properties69);
        java.util.Properties properties72 = null;
        java.util.Properties properties73 = new java.util.Properties(properties72);
        java.lang.Object obj75 = properties71.put((java.lang.Object) properties73, (java.lang.Object) (short) 1);
        properties63.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties71);
        java.lang.Object obj77 = properties43.put((java.lang.Object) properties53, (java.lang.Object) properties71);
        java.util.Enumeration<java.lang.Object> objEnumeration78 = properties53.elements();
        java.lang.Object obj80 = properties29.put((java.lang.Object) properties53, (java.lang.Object) "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=0, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.tm_unique_name=, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
        java.util.Properties properties81 = new java.util.Properties(properties29);
        boolean boolean82 = properties12.contains((java.lang.Object) properties29);
        java.io.PrintStream printStream83 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties12.list(printStream83);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(obj6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNull(obj20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(properties29);
        org.junit.Assert.assertNull(obj30);
        org.junit.Assert.assertNull(obj38);
        org.junit.Assert.assertNull(obj45);
        org.junit.Assert.assertNotNull(objEnumeration46);
        org.junit.Assert.assertNotNull(objEntrySet47);
        org.junit.Assert.assertNotNull(objSet48);
        org.junit.Assert.assertNull(obj55);
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + 0 + "'", int57 == 0);
        org.junit.Assert.assertNull(obj65);
        org.junit.Assert.assertNull(str68);
        org.junit.Assert.assertNull(obj75);
        org.junit.Assert.assertNull(obj77);
        org.junit.Assert.assertNotNull(objEnumeration78);
        org.junit.Assert.assertNull(obj80);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + false + "'", boolean82 == false);
    }

    @Test
    public void test1214() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1214");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Properties properties2 = new java.util.Properties(properties0);
        java.util.Properties properties3 = null;
        java.util.Properties properties4 = new java.util.Properties(properties3);
        java.lang.Object obj6 = properties2.put((java.lang.Object) properties4, (java.lang.Object) (short) 1);
        properties4.clear();
        java.lang.String str10 = properties4.getProperty("{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.max_actives=0, com.atomikos.icatch.log_base_name=tmlog}", "");
        org.junit.Assert.assertNull(obj6);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
    }

    @Test
    public void test1215() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1215");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Properties properties2 = new java.util.Properties(properties0);
        java.util.Properties properties3 = null;
        java.util.Properties properties4 = new java.util.Properties(properties3);
        java.lang.Object obj6 = properties2.put((java.lang.Object) properties4, (java.lang.Object) (short) 1);
        java.util.Properties properties8 = null;
        java.util.Properties properties9 = new java.util.Properties(properties8);
        java.util.Properties properties10 = new java.util.Properties(properties8);
        java.util.Properties properties11 = null;
        java.util.Properties properties12 = new java.util.Properties(properties11);
        java.lang.Object obj14 = properties10.put((java.lang.Object) properties12, (java.lang.Object) (short) 1);
        boolean boolean15 = properties4.remove((java.lang.Object) false, (java.lang.Object) (short) 1);
        java.util.Set<java.lang.String> strSet16 = properties4.stringPropertyNames();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties17 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties17.setDefaultJtaTimeout((long) (byte) 10);
        long long20 = atomikosProperties17.getDefaultJtaTimeout();
        java.lang.Object obj21 = properties4.get((java.lang.Object) atomikosProperties17);
        atomikosProperties17.setEnableLogging(false);
        atomikosProperties17.setThreadedTwoPhaseCommit(false);
        atomikosProperties17.setMaxTimeout((long) (short) 100);
        org.junit.Assert.assertNull(obj6);
        org.junit.Assert.assertNull(obj14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(strSet16);
        org.junit.Assert.assertTrue("'" + long20 + "' != '" + 10L + "'", long20 == 10L);
        org.junit.Assert.assertNull(obj21);
    }

    @Test
    public void test1216() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1216");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Properties properties2 = new java.util.Properties(properties0);
        boolean boolean4 = properties2.containsValue((java.lang.Object) (short) 100);
        java.util.Properties properties5 = null;
        java.util.Properties properties6 = new java.util.Properties(properties5);
        java.util.Properties properties7 = new java.util.Properties(properties5);
        java.util.Properties properties8 = null;
        java.util.Properties properties9 = new java.util.Properties(properties8);
        java.lang.Object obj11 = properties7.put((java.lang.Object) properties9, (java.lang.Object) (short) 1);
        java.util.Enumeration<java.lang.Object> objEnumeration12 = properties9.elements();
        java.lang.Object obj13 = properties2.remove((java.lang.Object) properties9);
        java.lang.Object obj16 = properties9.setProperty("", "");
        java.util.Properties properties17 = null;
        java.util.Properties properties18 = new java.util.Properties(properties17);
        java.util.Properties properties19 = new java.util.Properties(properties17);
        java.util.Properties properties20 = null;
        java.util.Properties properties21 = new java.util.Properties(properties20);
        java.lang.Object obj23 = properties19.put((java.lang.Object) properties21, (java.lang.Object) (short) 1);
        java.util.Properties properties25 = null;
        java.util.Properties properties26 = new java.util.Properties(properties25);
        java.util.Properties properties27 = new java.util.Properties(properties25);
        java.util.Properties properties28 = null;
        java.util.Properties properties29 = new java.util.Properties(properties28);
        java.lang.Object obj31 = properties27.put((java.lang.Object) properties29, (java.lang.Object) (short) 1);
        boolean boolean32 = properties21.remove((java.lang.Object) false, (java.lang.Object) (short) 1);
        java.util.Properties properties33 = new java.util.Properties(properties21);
        properties9.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties33);
        java.util.Properties properties35 = new java.util.Properties(properties33);
        java.util.Properties properties36 = null;
        java.util.Properties properties37 = new java.util.Properties(properties36);
        java.util.Properties properties38 = new java.util.Properties(properties36);
        java.util.Properties properties39 = null;
        java.util.Properties properties40 = new java.util.Properties(properties39);
        java.lang.Object obj42 = properties38.put((java.lang.Object) properties40, (java.lang.Object) (short) 1);
        properties40.clear();
        int int44 = properties40.size();
        java.util.Properties properties45 = null;
        java.util.Properties properties46 = new java.util.Properties(properties45);
        java.util.Properties properties47 = new java.util.Properties(properties45);
        java.util.Properties properties48 = null;
        java.util.Properties properties49 = new java.util.Properties(properties48);
        java.lang.Object obj51 = properties47.put((java.lang.Object) properties49, (java.lang.Object) (short) 1);
        java.util.Properties properties52 = new java.util.Properties(properties49);
        java.util.Properties properties53 = new java.util.Properties(properties49);
        boolean boolean55 = properties40.remove((java.lang.Object) properties49, (java.lang.Object) 10.0f);
        java.util.Enumeration<java.lang.Object> objEnumeration56 = properties49.elements();
        java.util.Properties properties57 = new java.util.Properties(properties49);
        java.util.Collection<java.lang.Object> objCollection58 = properties49.values();
        java.util.Set<java.lang.String> strSet59 = properties49.stringPropertyNames();
        java.util.Properties properties60 = new java.util.Properties(properties49);
        boolean boolean61 = properties35.containsKey((java.lang.Object) properties49);
        java.lang.Object obj64 = properties35.setProperty("{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=100, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=true, com.atomikos.icatch.tm_unique_name=, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name={com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.tm_unique_name=, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}}", "{=}");
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNull(obj11);
        org.junit.Assert.assertNotNull(objEnumeration12);
        org.junit.Assert.assertNull(obj13);
        org.junit.Assert.assertNull(obj16);
        org.junit.Assert.assertNull(obj23);
        org.junit.Assert.assertNull(obj31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNull(obj42);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 0 + "'", int44 == 0);
        org.junit.Assert.assertNull(obj51);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertNotNull(objEnumeration56);
        org.junit.Assert.assertNotNull(objCollection58);
        org.junit.Assert.assertNotNull(strSet59);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertNull(obj64);
    }

    @Test
    public void test1217() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1217");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setDefaultJtaTimeout((long) (byte) 10);
        atomikosProperties0.setCheckpointInterval((long) (byte) 0);
        atomikosProperties0.setTransactionManagerUniqueName("");
        java.util.Properties properties7 = atomikosProperties0.asProperties();
        java.lang.String str8 = atomikosProperties0.getLogBaseName();
        atomikosProperties0.setCheckpointInterval(100L);
        java.lang.String str11 = atomikosProperties0.getTransactionManagerUniqueName();
        atomikosProperties0.setLogBaseName("{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.tm_unique_name=, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
        atomikosProperties0.setThreadedTwoPhaseCommit(true);
        java.util.Properties properties16 = atomikosProperties0.asProperties();
        java.util.Properties properties17 = atomikosProperties0.asProperties();
        java.lang.Object obj18 = properties17.clone();
        java.io.OutputStream outputStream19 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties17.store(outputStream19, "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=true, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=true, com.atomikos.icatch.max_actives=35, com.atomikos.icatch.log_base_name=tmlog}");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(properties7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "tmlog" + "'", str8, "tmlog");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertNotNull(properties16);
        org.junit.Assert.assertNotNull(properties17);
        org.junit.Assert.assertNotNull(obj18);
// flaky:         org.junit.Assert.assertEquals(obj18.toString(), "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=100, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=true, com.atomikos.icatch.tm_unique_name=, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name={com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.tm_unique_name=, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}}");
// flaky:         org.junit.Assert.assertEquals(java.lang.String.valueOf(obj18), "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=100, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=true, com.atomikos.icatch.tm_unique_name=, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name={com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.tm_unique_name=, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}}");
// flaky:         org.junit.Assert.assertEquals(java.util.Objects.toString(obj18), "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=100, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=true, com.atomikos.icatch.tm_unique_name=, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name={com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.tm_unique_name=, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}}");
    }

    @Test
    public void test1218() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1218");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Properties properties2 = new java.util.Properties(properties0);
        java.util.Properties properties3 = null;
        java.util.Properties properties4 = new java.util.Properties(properties3);
        java.lang.Object obj6 = properties2.put((java.lang.Object) properties4, (java.lang.Object) (short) 1);
        java.util.Properties properties8 = null;
        java.util.Properties properties9 = new java.util.Properties(properties8);
        java.util.Properties properties10 = new java.util.Properties(properties8);
        java.util.Properties properties11 = null;
        java.util.Properties properties12 = new java.util.Properties(properties11);
        java.lang.Object obj14 = properties10.put((java.lang.Object) properties12, (java.lang.Object) (short) 1);
        boolean boolean15 = properties4.remove((java.lang.Object) false, (java.lang.Object) (short) 1);
        java.util.Set<java.lang.String> strSet16 = properties4.stringPropertyNames();
        java.util.Enumeration<java.lang.Object> objEnumeration17 = properties4.elements();
        properties4.clear();
        java.lang.Object obj21 = properties4.setProperty("{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=100, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=true, com.atomikos.icatch.tm_unique_name=, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name={com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.tm_unique_name=, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}}", "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=true, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=true, com.atomikos.icatch.max_actives=35, com.atomikos.icatch.log_base_name=tmlog}");
        java.io.OutputStream outputStream22 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties4.storeToXML(outputStream22, "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=100, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=true, com.atomikos.icatch.tm_unique_name=, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name={com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.tm_unique_name=, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}}");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(obj6);
        org.junit.Assert.assertNull(obj14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(strSet16);
        org.junit.Assert.assertNotNull(objEnumeration17);
        org.junit.Assert.assertNull(obj21);
    }

    @Test
    public void test1219() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1219");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Properties properties2 = new java.util.Properties(properties0);
        java.util.Properties properties3 = null;
        java.util.Properties properties4 = new java.util.Properties(properties3);
        java.lang.Object obj6 = properties2.put((java.lang.Object) properties4, (java.lang.Object) (short) 1);
        java.util.Properties properties8 = null;
        java.util.Properties properties9 = new java.util.Properties(properties8);
        java.util.Properties properties10 = new java.util.Properties(properties8);
        java.util.Properties properties11 = null;
        java.util.Properties properties12 = new java.util.Properties(properties11);
        java.lang.Object obj14 = properties10.put((java.lang.Object) properties12, (java.lang.Object) (short) 1);
        boolean boolean15 = properties4.remove((java.lang.Object) false, (java.lang.Object) (short) 1);
        java.util.Set<java.lang.String> strSet16 = properties4.stringPropertyNames();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties17 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties17.setDefaultJtaTimeout((long) (byte) 10);
        long long20 = atomikosProperties17.getDefaultJtaTimeout();
        java.lang.Object obj21 = properties4.get((java.lang.Object) atomikosProperties17);
        java.util.Properties properties22 = null;
        java.util.Properties properties23 = new java.util.Properties(properties22);
        java.util.Properties properties24 = new java.util.Properties(properties22);
        java.util.Properties properties25 = null;
        java.util.Properties properties26 = new java.util.Properties(properties25);
        java.lang.Object obj28 = properties24.put((java.lang.Object) properties26, (java.lang.Object) (short) 1);
        boolean boolean29 = properties24.isEmpty();
        java.util.Properties properties30 = null;
        java.util.Properties properties31 = new java.util.Properties(properties30);
        java.util.Properties properties32 = new java.util.Properties(properties30);
        boolean boolean33 = properties24.containsKey((java.lang.Object) properties32);
        java.util.Properties properties34 = new java.util.Properties(properties32);
        java.util.Properties properties35 = new java.util.Properties(properties34);
        java.util.Properties properties36 = null;
        java.util.Properties properties37 = new java.util.Properties(properties36);
        java.util.Properties properties38 = new java.util.Properties(properties36);
        java.util.Properties properties39 = null;
        java.util.Properties properties40 = new java.util.Properties(properties39);
        java.lang.Object obj42 = properties38.put((java.lang.Object) properties40, (java.lang.Object) (short) 1);
        properties40.clear();
        int int44 = properties40.size();
        java.util.Properties properties45 = new java.util.Properties(properties40);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties46 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        int int47 = atomikosProperties46.getMaxActives();
        long long48 = atomikosProperties46.getMaxTimeout();
        java.util.Properties properties49 = atomikosProperties46.asProperties();
        java.util.Properties properties50 = atomikosProperties46.asProperties();
        java.util.Properties properties51 = null;
        java.util.Properties properties52 = new java.util.Properties(properties51);
        java.util.Properties properties53 = new java.util.Properties(properties51);
        java.util.Properties properties54 = null;
        java.util.Properties properties55 = new java.util.Properties(properties54);
        java.lang.Object obj57 = properties53.put((java.lang.Object) properties55, (java.lang.Object) (short) 1);
        java.util.Enumeration<java.lang.Object> objEnumeration58 = properties55.elements();
        java.lang.Object obj59 = properties40.replace((java.lang.Object) atomikosProperties46, (java.lang.Object) properties55);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties61 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties61.setThreadedTwoPhaseCommit(true);
        java.lang.String str64 = atomikosProperties61.getService();
        boolean boolean65 = atomikosProperties61.isSerialJtaTransactions();
        java.lang.Object obj66 = properties55.getOrDefault((java.lang.Object) "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.tm_unique_name=, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}", (java.lang.Object) atomikosProperties61);
        boolean boolean67 = properties34.equals((java.lang.Object) properties55);
        java.util.Properties properties68 = new java.util.Properties(properties34);
        java.util.Properties properties69 = new java.util.Properties(properties34);
        java.lang.Object obj70 = properties4.get((java.lang.Object) properties34);
        java.util.Properties properties71 = new java.util.Properties(properties4);
        java.lang.String str74 = properties71.getProperty("tmlog", "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.max_actives=0, com.atomikos.icatch.log_base_name=tmlog}");
        org.junit.Assert.assertNull(obj6);
        org.junit.Assert.assertNull(obj14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(strSet16);
        org.junit.Assert.assertTrue("'" + long20 + "' != '" + 10L + "'", long20 == 10L);
        org.junit.Assert.assertNull(obj21);
        org.junit.Assert.assertNull(obj28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNull(obj42);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 0 + "'", int44 == 0);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 50 + "'", int47 == 50);
        org.junit.Assert.assertTrue("'" + long48 + "' != '" + 300000L + "'", long48 == 300000L);
        org.junit.Assert.assertNotNull(properties49);
        org.junit.Assert.assertNotNull(properties50);
        org.junit.Assert.assertNull(obj57);
        org.junit.Assert.assertNotNull(objEnumeration58);
        org.junit.Assert.assertNull(obj59);
        org.junit.Assert.assertNull(str64);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65 == true);
        org.junit.Assert.assertNotNull(obj66);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + true + "'", boolean67 == true);
        org.junit.Assert.assertNull(obj70);
        org.junit.Assert.assertEquals("'" + str74 + "' != '" + "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.max_actives=0, com.atomikos.icatch.log_base_name=tmlog}" + "'", str74, "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.max_actives=0, com.atomikos.icatch.log_base_name=tmlog}");
    }

    @Test
    public void test1220() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1220");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Properties properties2 = new java.util.Properties(properties0);
        java.util.Properties properties3 = null;
        java.util.Properties properties4 = new java.util.Properties(properties3);
        java.lang.Object obj6 = properties2.put((java.lang.Object) properties4, (java.lang.Object) (short) 1);
        boolean boolean7 = properties2.isEmpty();
        java.util.Properties properties8 = null;
        java.util.Properties properties9 = new java.util.Properties(properties8);
        java.util.Properties properties10 = new java.util.Properties(properties8);
        boolean boolean11 = properties2.containsKey((java.lang.Object) properties10);
        java.util.Properties properties12 = new java.util.Properties(properties10);
        java.util.Properties properties13 = new java.util.Properties(properties12);
        properties13.clear();
        java.util.Enumeration<?> wildcardEnumeration15 = properties13.propertyNames();
        java.lang.Object obj18 = properties13.setProperty("{}", "tmlog");
        boolean boolean19 = properties13.isEmpty();
        java.util.Properties properties20 = new java.util.Properties(properties13);
        java.lang.String str21 = properties13.toString();
        org.junit.Assert.assertNull(obj6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNotNull(wildcardEnumeration15);
        org.junit.Assert.assertNull(obj18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "{{}=tmlog}" + "'", str21, "{{}=tmlog}");
    }

    @Test
    public void test1221() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1221");
        java.util.Properties properties0 = new java.util.Properties();
        java.util.Enumeration<?> wildcardEnumeration1 = properties0.propertyNames();
        java.util.Properties properties3 = null;
        java.util.Properties properties4 = new java.util.Properties(properties3);
        java.util.Properties properties5 = new java.util.Properties(properties3);
        java.util.Properties properties6 = null;
        java.util.Properties properties7 = new java.util.Properties(properties6);
        java.lang.Object obj9 = properties5.put((java.lang.Object) properties7, (java.lang.Object) (short) 1);
        java.util.Properties properties10 = new java.util.Properties(properties7);
        java.util.Enumeration<java.lang.Object> objEnumeration11 = properties10.elements();
        java.lang.Object obj12 = properties0.put((java.lang.Object) (-1.0f), (java.lang.Object) objEnumeration11);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties13 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties13.setDefaultJtaTimeout((long) (byte) 10);
        atomikosProperties13.setCheckpointInterval((long) (byte) 0);
        atomikosProperties13.setTransactionManagerUniqueName("");
        boolean boolean20 = atomikosProperties13.isEnableLogging();
        java.util.Properties properties21 = atomikosProperties13.asProperties();
        java.util.Enumeration<java.lang.Object> objEnumeration22 = properties21.keys();
        boolean boolean23 = properties0.contains((java.lang.Object) objEnumeration22);
        java.util.Properties properties24 = new java.util.Properties(properties0);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties25 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties25.setThreadedTwoPhaseCommit(true);
        atomikosProperties25.setMaxActives((int) '#');
        atomikosProperties25.setForceShutdownOnVmExit(true);
        java.lang.String str32 = atomikosProperties25.getLogBaseDir();
        java.util.Properties properties33 = atomikosProperties25.asProperties();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties34 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        boolean boolean35 = atomikosProperties34.isSerialJtaTransactions();
        boolean boolean36 = properties33.equals((java.lang.Object) atomikosProperties34);
        boolean boolean37 = properties0.equals((java.lang.Object) properties33);
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet38 = properties0.entrySet();
        org.junit.Assert.assertNotNull(wildcardEnumeration1);
        org.junit.Assert.assertNull(obj9);
        org.junit.Assert.assertNotNull(objEnumeration11);
        org.junit.Assert.assertNull(obj12);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNotNull(properties21);
        org.junit.Assert.assertNotNull(objEnumeration22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNull(str32);
        org.junit.Assert.assertNotNull(properties33);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(objEntrySet38);
    }

    @Test
    public void test1222() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1222");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setThreadedTwoPhaseCommit(true);
        atomikosProperties0.setMaxActives((int) '#');
        atomikosProperties0.setEnableLogging(true);
        int int7 = atomikosProperties0.getMaxActives();
        boolean boolean8 = atomikosProperties0.isEnableLogging();
        java.lang.String str9 = atomikosProperties0.getTransactionManagerUniqueName();
        java.lang.String str10 = atomikosProperties0.getLogBaseName();
        atomikosProperties0.setMaxTimeout((long) (short) -1);
        java.lang.String str13 = atomikosProperties0.getLogBaseName();
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 35 + "'", int7 == 35);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "tmlog" + "'", str10, "tmlog");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "tmlog" + "'", str13, "tmlog");
    }

    @Test
    public void test1223() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1223");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        boolean boolean1 = atomikosProperties0.isForceShutdownOnVmExit();
        java.util.Properties properties2 = atomikosProperties0.asProperties();
        java.util.Properties properties3 = null;
        java.util.Properties properties4 = new java.util.Properties(properties3);
        java.util.Properties properties5 = new java.util.Properties(properties3);
        java.util.Properties properties6 = null;
        java.util.Properties properties7 = new java.util.Properties(properties6);
        java.lang.Object obj9 = properties5.put((java.lang.Object) properties7, (java.lang.Object) (short) 1);
        properties7.clear();
        int int11 = properties7.size();
        java.util.Properties properties12 = null;
        java.util.Properties properties13 = new java.util.Properties(properties12);
        java.util.Properties properties14 = new java.util.Properties(properties12);
        java.util.Properties properties15 = null;
        java.util.Properties properties16 = new java.util.Properties(properties15);
        java.lang.Object obj18 = properties14.put((java.lang.Object) properties16, (java.lang.Object) (short) 1);
        java.util.Properties properties19 = new java.util.Properties(properties16);
        java.util.Properties properties20 = new java.util.Properties(properties16);
        boolean boolean22 = properties7.remove((java.lang.Object) properties16, (java.lang.Object) 10.0f);
        boolean boolean23 = properties2.containsKey((java.lang.Object) 10.0f);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties25 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties25.setDefaultJtaTimeout((long) (byte) 10);
        atomikosProperties25.setCheckpointInterval((long) (byte) 0);
        atomikosProperties25.setEnableLogging(true);
        java.lang.Object obj32 = properties2.getOrDefault((java.lang.Object) (byte) 0, (java.lang.Object) true);
        java.util.Properties properties33 = new java.util.Properties(properties2);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties34 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties34.setDefaultJtaTimeout((long) (byte) 10);
        atomikosProperties34.setCheckpointInterval((long) (byte) 0);
        long long39 = atomikosProperties34.getMaxTimeout();
        java.util.Properties properties40 = null;
        java.util.Properties properties41 = new java.util.Properties(properties40);
        java.util.Properties properties42 = new java.util.Properties(properties40);
        java.util.Properties properties43 = null;
        java.util.Properties properties44 = new java.util.Properties(properties43);
        java.lang.Object obj46 = properties42.put((java.lang.Object) properties44, (java.lang.Object) (short) 1);
        java.util.Properties properties48 = null;
        java.util.Properties properties49 = new java.util.Properties(properties48);
        java.util.Properties properties50 = new java.util.Properties(properties48);
        java.util.Properties properties51 = null;
        java.util.Properties properties52 = new java.util.Properties(properties51);
        java.lang.Object obj54 = properties50.put((java.lang.Object) properties52, (java.lang.Object) (short) 1);
        boolean boolean55 = properties44.remove((java.lang.Object) false, (java.lang.Object) (short) 1);
        java.lang.Object obj57 = properties44.remove((java.lang.Object) '#');
        java.util.Set<java.lang.Object> objSet58 = properties44.keySet();
        properties44.clear();
        java.util.Properties properties60 = null;
        java.util.Properties properties61 = new java.util.Properties(properties60);
        java.util.Properties properties62 = new java.util.Properties(properties60);
        java.util.Properties properties63 = null;
        java.util.Properties properties64 = new java.util.Properties(properties63);
        java.lang.Object obj66 = properties62.put((java.lang.Object) properties64, (java.lang.Object) (short) 1);
        java.util.Enumeration<java.lang.Object> objEnumeration67 = properties64.elements();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet68 = properties64.entrySet();
        boolean boolean69 = properties44.equals((java.lang.Object) properties64);
        java.util.Enumeration<java.lang.Object> objEnumeration70 = properties64.elements();
        java.lang.Object obj71 = properties33.put((java.lang.Object) atomikosProperties34, (java.lang.Object) properties64);
        long long72 = atomikosProperties34.getDefaultJtaTimeout();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertNotNull(properties2);
        org.junit.Assert.assertNull(obj9);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertNull(obj18);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertEquals("'" + obj32 + "' != '" + true + "'", obj32, true);
        org.junit.Assert.assertTrue("'" + long39 + "' != '" + 300000L + "'", long39 == 300000L);
        org.junit.Assert.assertNull(obj46);
        org.junit.Assert.assertNull(obj54);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertNull(obj57);
        org.junit.Assert.assertNotNull(objSet58);
        org.junit.Assert.assertNull(obj66);
        org.junit.Assert.assertNotNull(objEnumeration67);
        org.junit.Assert.assertNotNull(objEntrySet68);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + true + "'", boolean69 == true);
        org.junit.Assert.assertNotNull(objEnumeration70);
        org.junit.Assert.assertNull(obj71);
        org.junit.Assert.assertTrue("'" + long72 + "' != '" + 10L + "'", long72 == 10L);
    }

    @Test
    public void test1224() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1224");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setThreadedTwoPhaseCommit(true);
        atomikosProperties0.setMaxActives((int) '#');
        atomikosProperties0.setForceShutdownOnVmExit(true);
        java.lang.String str7 = atomikosProperties0.getLogBaseDir();
        java.util.Properties properties8 = atomikosProperties0.asProperties();
        java.util.Properties properties9 = null;
        java.util.Properties properties10 = new java.util.Properties(properties9);
        java.util.Properties properties11 = new java.util.Properties(properties9);
        java.util.Properties properties12 = null;
        java.util.Properties properties13 = new java.util.Properties(properties12);
        java.lang.Object obj15 = properties11.put((java.lang.Object) properties13, (java.lang.Object) (short) 1);
        boolean boolean16 = properties11.isEmpty();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties17 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties17.setDefaultJtaTimeout((long) (byte) 10);
        atomikosProperties17.setCheckpointInterval((long) (byte) 0);
        atomikosProperties17.setTransactionManagerUniqueName("");
        java.util.Properties properties24 = atomikosProperties17.asProperties();
        java.lang.Object obj25 = properties11.remove((java.lang.Object) properties24);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties26 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties26.setDefaultJtaTimeout((long) (byte) 10);
        atomikosProperties26.setCheckpointInterval((long) (byte) 0);
        atomikosProperties26.setTransactionManagerUniqueName("");
        java.lang.Object obj33 = properties24.remove((java.lang.Object) atomikosProperties26);
        boolean boolean34 = properties8.containsKey((java.lang.Object) properties24);
        java.util.Properties properties35 = new java.util.Properties(properties24);
        java.io.OutputStream outputStream36 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties35.store(outputStream36, "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=0, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.tm_unique_name=, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNotNull(properties8);
        org.junit.Assert.assertNull(obj15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(properties24);
        org.junit.Assert.assertNull(obj25);
        org.junit.Assert.assertNull(obj33);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
    }

    @Test
    public void test1225() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1225");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setDefaultJtaTimeout((long) (byte) 10);
        atomikosProperties0.setSerialJtaTransactions(false);
        atomikosProperties0.setService("{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.tm_unique_name=, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
        java.lang.String str7 = atomikosProperties0.getTransactionManagerUniqueName();
        boolean boolean8 = atomikosProperties0.isThreadedTwoPhaseCommit();
        long long9 = atomikosProperties0.getCheckpointInterval();
        boolean boolean10 = atomikosProperties0.isEnableLogging();
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + long9 + "' != '" + 500L + "'", long9 == 500L);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
    }

    @Test
    public void test1226() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1226");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        int int1 = atomikosProperties0.getMaxActives();
        long long2 = atomikosProperties0.getMaxTimeout();
        java.lang.String str3 = atomikosProperties0.getLogBaseDir();
        atomikosProperties0.setCheckpointInterval(100L);
        atomikosProperties0.setThreadedTwoPhaseCommit(false);
        atomikosProperties0.setService("{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.tm_unique_name=, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 50 + "'", int1 == 50);
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + 300000L + "'", long2 == 300000L);
        org.junit.Assert.assertNull(str3);
    }

    @Test
    public void test1227() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1227");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setDefaultJtaTimeout((long) (byte) 10);
        boolean boolean3 = atomikosProperties0.isForceShutdownOnVmExit();
        atomikosProperties0.setCheckpointInterval(500L);
        boolean boolean6 = atomikosProperties0.isEnableLogging();
        java.lang.String str7 = atomikosProperties0.getLogBaseName();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "tmlog" + "'", str7, "tmlog");
    }

    @Test
    public void test1228() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1228");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Properties properties2 = new java.util.Properties(properties0);
        boolean boolean4 = properties2.containsValue((java.lang.Object) (short) 100);
        java.util.Properties properties5 = null;
        java.util.Properties properties6 = new java.util.Properties(properties5);
        java.util.Properties properties7 = new java.util.Properties(properties5);
        java.util.Properties properties8 = null;
        java.util.Properties properties9 = new java.util.Properties(properties8);
        java.lang.Object obj11 = properties7.put((java.lang.Object) properties9, (java.lang.Object) (short) 1);
        java.util.Enumeration<java.lang.Object> objEnumeration12 = properties9.elements();
        java.lang.Object obj13 = properties2.remove((java.lang.Object) properties9);
        java.lang.Object obj16 = properties9.setProperty("", "");
        java.util.Properties properties17 = null;
        java.util.Properties properties18 = new java.util.Properties(properties17);
        java.util.Properties properties19 = new java.util.Properties(properties17);
        java.util.Properties properties20 = null;
        java.util.Properties properties21 = new java.util.Properties(properties20);
        java.lang.Object obj23 = properties19.put((java.lang.Object) properties21, (java.lang.Object) (short) 1);
        java.util.Properties properties25 = null;
        java.util.Properties properties26 = new java.util.Properties(properties25);
        java.util.Properties properties27 = new java.util.Properties(properties25);
        java.util.Properties properties28 = null;
        java.util.Properties properties29 = new java.util.Properties(properties28);
        java.lang.Object obj31 = properties27.put((java.lang.Object) properties29, (java.lang.Object) (short) 1);
        boolean boolean32 = properties21.remove((java.lang.Object) false, (java.lang.Object) (short) 1);
        java.util.Properties properties33 = new java.util.Properties(properties21);
        properties9.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties33);
        java.util.Properties properties35 = null;
        java.util.Properties properties36 = new java.util.Properties(properties35);
        java.util.Properties properties37 = new java.util.Properties(properties35);
        java.util.Properties properties38 = null;
        java.util.Properties properties39 = new java.util.Properties(properties38);
        java.lang.Object obj41 = properties37.put((java.lang.Object) properties39, (java.lang.Object) (short) 1);
        properties39.clear();
        int int43 = properties39.size();
        java.util.Properties properties44 = null;
        java.util.Properties properties45 = new java.util.Properties(properties44);
        java.util.Properties properties46 = new java.util.Properties(properties44);
        java.util.Properties properties47 = null;
        java.util.Properties properties48 = new java.util.Properties(properties47);
        java.lang.Object obj50 = properties46.put((java.lang.Object) properties48, (java.lang.Object) (short) 1);
        java.util.Properties properties51 = new java.util.Properties(properties48);
        java.util.Properties properties52 = new java.util.Properties(properties48);
        boolean boolean54 = properties39.remove((java.lang.Object) properties48, (java.lang.Object) 10.0f);
        java.util.Enumeration<java.lang.Object> objEnumeration55 = properties48.elements();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties56 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties56.setDefaultJtaTimeout((long) (byte) 10);
        atomikosProperties56.setCheckpointInterval((long) (byte) 0);
        long long61 = atomikosProperties56.getMaxTimeout();
        atomikosProperties56.setSerialJtaTransactions(true);
        java.util.Properties properties64 = new java.util.Properties();
        java.util.Enumeration<?> wildcardEnumeration65 = properties64.propertyNames();
        java.lang.Object obj66 = properties48.replace((java.lang.Object) atomikosProperties56, (java.lang.Object) properties64);
        boolean boolean67 = properties9.contains((java.lang.Object) properties64);
        java.lang.Object obj68 = properties64.clone();
        java.io.Writer writer69 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties64.store(writer69, "{com.atomikos.icatch.enable_logging=false, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=true, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNull(obj11);
        org.junit.Assert.assertNotNull(objEnumeration12);
        org.junit.Assert.assertNull(obj13);
        org.junit.Assert.assertNull(obj16);
        org.junit.Assert.assertNull(obj23);
        org.junit.Assert.assertNull(obj31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNull(obj41);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 0 + "'", int43 == 0);
        org.junit.Assert.assertNull(obj50);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertNotNull(objEnumeration55);
        org.junit.Assert.assertTrue("'" + long61 + "' != '" + 300000L + "'", long61 == 300000L);
        org.junit.Assert.assertNotNull(wildcardEnumeration65);
        org.junit.Assert.assertNull(obj66);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertNotNull(obj68);
        org.junit.Assert.assertEquals(obj68.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj68), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj68), "{}");
    }

    @Test
    public void test1229() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1229");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setDefaultJtaTimeout((long) (byte) 10);
        long long3 = atomikosProperties0.getDefaultJtaTimeout();
        atomikosProperties0.setTransactionManagerUniqueName("hi!");
        atomikosProperties0.setTransactionManagerUniqueName("{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=0, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.tm_unique_name=, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
        atomikosProperties0.setEnableLogging(false);
        java.lang.String str10 = atomikosProperties0.getTransactionManagerUniqueName();
        java.lang.String str11 = atomikosProperties0.getLogBaseName();
        java.lang.String str12 = atomikosProperties0.getTransactionManagerUniqueName();
        atomikosProperties0.setService("hi!");
        org.junit.Assert.assertTrue("'" + long3 + "' != '" + 10L + "'", long3 == 10L);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=0, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.tm_unique_name=, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}" + "'", str10, "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=0, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.tm_unique_name=, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "tmlog" + "'", str11, "tmlog");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=0, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.tm_unique_name=, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}" + "'", str12, "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=0, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.tm_unique_name=, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
    }

    @Test
    public void test1230() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1230");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Properties properties2 = new java.util.Properties(properties0);
        java.util.Properties properties3 = null;
        java.util.Properties properties4 = new java.util.Properties(properties3);
        java.lang.Object obj6 = properties2.put((java.lang.Object) properties4, (java.lang.Object) (short) 1);
        java.util.Properties properties8 = null;
        java.util.Properties properties9 = new java.util.Properties(properties8);
        java.util.Properties properties10 = new java.util.Properties(properties8);
        java.util.Properties properties11 = null;
        java.util.Properties properties12 = new java.util.Properties(properties11);
        java.lang.Object obj14 = properties10.put((java.lang.Object) properties12, (java.lang.Object) (short) 1);
        boolean boolean15 = properties4.remove((java.lang.Object) false, (java.lang.Object) (short) 1);
        java.util.Set<java.lang.String> strSet16 = properties4.stringPropertyNames();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties17 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties17.setDefaultJtaTimeout((long) (byte) 10);
        atomikosProperties17.setCheckpointInterval((long) (byte) 0);
        atomikosProperties17.setTransactionManagerUniqueName("");
        boolean boolean24 = atomikosProperties17.isEnableLogging();
        atomikosProperties17.setSerialJtaTransactions(false);
        atomikosProperties17.setLogBaseDir("");
        java.util.Properties properties29 = null;
        java.util.Properties properties30 = new java.util.Properties(properties29);
        java.util.Properties properties31 = new java.util.Properties(properties29);
        java.util.Properties properties32 = null;
        java.util.Properties properties33 = new java.util.Properties(properties32);
        java.lang.Object obj35 = properties31.put((java.lang.Object) properties33, (java.lang.Object) (short) 1);
        java.util.Properties properties36 = new java.util.Properties(properties33);
        boolean boolean37 = properties4.remove((java.lang.Object) "", (java.lang.Object) properties36);
        java.lang.String str39 = properties4.getProperty("{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.tm_unique_name=, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties40 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties40.setDefaultJtaTimeout((long) (byte) 10);
        atomikosProperties40.setCheckpointInterval((long) (byte) 0);
        atomikosProperties40.setTransactionManagerUniqueName("");
        boolean boolean47 = atomikosProperties40.isEnableLogging();
        atomikosProperties40.setSerialJtaTransactions(false);
        java.lang.Object obj50 = properties4.remove((java.lang.Object) atomikosProperties40);
        int int51 = atomikosProperties40.getMaxActives();
        atomikosProperties40.setTransactionManagerUniqueName("{tmlog={com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=0, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.tm_unique_name=, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}, 4=true}");
        java.util.Properties properties54 = atomikosProperties40.asProperties();
        java.lang.String str56 = properties54.getProperty("{com.atomikos.icatch.enable_logging=false, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=true, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
        org.junit.Assert.assertNull(obj6);
        org.junit.Assert.assertNull(obj14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(strSet16);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNull(obj35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNull(str39);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertNull(obj50);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + 50 + "'", int51 == 50);
        org.junit.Assert.assertNotNull(properties54);
        org.junit.Assert.assertNull(str56);
    }

    @Test
    public void test1231() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1231");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Properties properties2 = new java.util.Properties(properties0);
        boolean boolean4 = properties2.containsValue((java.lang.Object) (short) 100);
        java.util.Properties properties5 = null;
        java.util.Properties properties6 = new java.util.Properties(properties5);
        java.util.Properties properties7 = new java.util.Properties(properties5);
        java.util.Properties properties8 = null;
        java.util.Properties properties9 = new java.util.Properties(properties8);
        java.lang.Object obj11 = properties7.put((java.lang.Object) properties9, (java.lang.Object) (short) 1);
        java.util.Enumeration<java.lang.Object> objEnumeration12 = properties9.elements();
        java.lang.Object obj13 = properties2.remove((java.lang.Object) properties9);
        java.lang.Object obj16 = properties9.setProperty("", "");
        java.util.Properties properties17 = null;
        java.util.Properties properties18 = new java.util.Properties(properties17);
        java.util.Properties properties19 = new java.util.Properties(properties17);
        java.util.Properties properties20 = null;
        java.util.Properties properties21 = new java.util.Properties(properties20);
        java.lang.Object obj23 = properties19.put((java.lang.Object) properties21, (java.lang.Object) (short) 1);
        java.util.Properties properties25 = null;
        java.util.Properties properties26 = new java.util.Properties(properties25);
        java.util.Properties properties27 = new java.util.Properties(properties25);
        java.util.Properties properties28 = null;
        java.util.Properties properties29 = new java.util.Properties(properties28);
        java.lang.Object obj31 = properties27.put((java.lang.Object) properties29, (java.lang.Object) (short) 1);
        boolean boolean32 = properties21.remove((java.lang.Object) false, (java.lang.Object) (short) 1);
        java.util.Properties properties33 = new java.util.Properties(properties21);
        properties9.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties33);
        java.util.Properties properties35 = null;
        java.util.Properties properties36 = new java.util.Properties(properties35);
        java.util.Properties properties37 = new java.util.Properties(properties35);
        java.util.Properties properties38 = null;
        java.util.Properties properties39 = new java.util.Properties(properties38);
        java.lang.Object obj41 = properties37.put((java.lang.Object) properties39, (java.lang.Object) (short) 1);
        properties39.clear();
        int int43 = properties39.size();
        java.util.Properties properties44 = null;
        java.util.Properties properties45 = new java.util.Properties(properties44);
        java.util.Properties properties46 = new java.util.Properties(properties44);
        java.util.Properties properties47 = null;
        java.util.Properties properties48 = new java.util.Properties(properties47);
        java.lang.Object obj50 = properties46.put((java.lang.Object) properties48, (java.lang.Object) (short) 1);
        java.util.Properties properties51 = new java.util.Properties(properties48);
        java.util.Properties properties52 = new java.util.Properties(properties48);
        boolean boolean54 = properties39.remove((java.lang.Object) properties48, (java.lang.Object) 10.0f);
        java.util.Enumeration<java.lang.Object> objEnumeration55 = properties48.elements();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties56 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties56.setDefaultJtaTimeout((long) (byte) 10);
        atomikosProperties56.setCheckpointInterval((long) (byte) 0);
        long long61 = atomikosProperties56.getMaxTimeout();
        atomikosProperties56.setSerialJtaTransactions(true);
        java.util.Properties properties64 = new java.util.Properties();
        java.util.Enumeration<?> wildcardEnumeration65 = properties64.propertyNames();
        java.lang.Object obj66 = properties48.replace((java.lang.Object) atomikosProperties56, (java.lang.Object) properties64);
        boolean boolean67 = properties9.contains((java.lang.Object) properties64);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties68 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties68.setDefaultJtaTimeout((long) (byte) 10);
        atomikosProperties68.setCheckpointInterval((long) (byte) 0);
        atomikosProperties68.setTransactionManagerUniqueName("");
        java.util.Properties properties75 = atomikosProperties68.asProperties();
        java.lang.String str76 = atomikosProperties68.getLogBaseName();
        atomikosProperties68.setCheckpointInterval(100L);
        long long79 = atomikosProperties68.getCheckpointInterval();
        boolean boolean80 = properties9.containsValue((java.lang.Object) long79);
        java.io.Writer writer81 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties9.store(writer81, "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=100, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=true, com.atomikos.icatch.tm_unique_name=, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name={com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.tm_unique_name=, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}}");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNull(obj11);
        org.junit.Assert.assertNotNull(objEnumeration12);
        org.junit.Assert.assertNull(obj13);
        org.junit.Assert.assertNull(obj16);
        org.junit.Assert.assertNull(obj23);
        org.junit.Assert.assertNull(obj31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNull(obj41);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 0 + "'", int43 == 0);
        org.junit.Assert.assertNull(obj50);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertNotNull(objEnumeration55);
        org.junit.Assert.assertTrue("'" + long61 + "' != '" + 300000L + "'", long61 == 300000L);
        org.junit.Assert.assertNotNull(wildcardEnumeration65);
        org.junit.Assert.assertNull(obj66);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertNotNull(properties75);
        org.junit.Assert.assertEquals("'" + str76 + "' != '" + "tmlog" + "'", str76, "tmlog");
        org.junit.Assert.assertTrue("'" + long79 + "' != '" + 100L + "'", long79 == 100L);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", boolean80 == false);
    }

    @Test
    public void test1232() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1232");
        java.util.Properties properties0 = new java.util.Properties();
        java.util.Enumeration<?> wildcardEnumeration1 = properties0.propertyNames();
        java.lang.Object obj2 = properties0.clone();
        java.util.Properties properties3 = null;
        java.util.Properties properties4 = new java.util.Properties(properties3);
        java.util.Properties properties5 = new java.util.Properties(properties3);
        java.util.Properties properties6 = null;
        java.util.Properties properties7 = new java.util.Properties(properties6);
        java.lang.Object obj9 = properties5.put((java.lang.Object) properties7, (java.lang.Object) (short) 1);
        boolean boolean10 = properties5.isEmpty();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties11 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties11.setDefaultJtaTimeout((long) (byte) 10);
        atomikosProperties11.setCheckpointInterval((long) (byte) 0);
        atomikosProperties11.setTransactionManagerUniqueName("");
        java.util.Properties properties18 = atomikosProperties11.asProperties();
        java.lang.Object obj19 = properties5.remove((java.lang.Object) properties18);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties20 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties20.setDefaultJtaTimeout((long) (byte) 10);
        atomikosProperties20.setCheckpointInterval((long) (byte) 0);
        atomikosProperties20.setTransactionManagerUniqueName("");
        java.lang.Object obj27 = properties18.remove((java.lang.Object) atomikosProperties20);
        boolean boolean28 = properties0.containsKey((java.lang.Object) properties18);
        java.util.Properties properties29 = new java.util.Properties(properties18);
        java.lang.String str31 = properties18.getProperty("{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=0, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog, {}={}}");
        java.io.PrintWriter printWriter32 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties18.list(printWriter32);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardEnumeration1);
        org.junit.Assert.assertNotNull(obj2);
        org.junit.Assert.assertEquals(obj2.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj2), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj2), "{}");
        org.junit.Assert.assertNull(obj9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(properties18);
        org.junit.Assert.assertNull(obj19);
        org.junit.Assert.assertNull(obj27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNull(str31);
    }

    @Test
    public void test1233() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1233");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Properties properties2 = new java.util.Properties(properties0);
        java.util.Properties properties3 = null;
        java.util.Properties properties4 = new java.util.Properties(properties3);
        java.lang.Object obj6 = properties2.put((java.lang.Object) properties4, (java.lang.Object) (short) 1);
        properties4.clear();
        java.util.Properties properties8 = null;
        java.util.Properties properties9 = new java.util.Properties(properties8);
        java.util.Properties properties10 = new java.util.Properties(properties8);
        java.util.Properties properties11 = null;
        java.util.Properties properties12 = new java.util.Properties(properties11);
        java.lang.Object obj14 = properties10.put((java.lang.Object) properties12, (java.lang.Object) (short) 1);
        java.util.Collection<java.lang.Object> objCollection15 = properties12.values();
        boolean boolean16 = properties4.containsKey((java.lang.Object) objCollection15);
        boolean boolean17 = properties4.isEmpty();
        java.util.Enumeration<java.lang.Object> objEnumeration18 = properties4.elements();
        java.util.Properties properties19 = null;
        java.util.Properties properties20 = new java.util.Properties(properties19);
        java.util.Properties properties21 = new java.util.Properties(properties19);
        java.util.Properties properties22 = null;
        java.util.Properties properties23 = new java.util.Properties(properties22);
        java.lang.Object obj25 = properties21.put((java.lang.Object) properties23, (java.lang.Object) (short) 1);
        boolean boolean26 = properties21.isEmpty();
        java.util.Properties properties27 = null;
        java.util.Properties properties28 = new java.util.Properties(properties27);
        java.util.Properties properties29 = new java.util.Properties(properties27);
        boolean boolean30 = properties21.containsKey((java.lang.Object) properties29);
        java.util.Properties properties31 = new java.util.Properties(properties29);
        java.util.Properties properties32 = null;
        java.util.Properties properties33 = new java.util.Properties(properties32);
        java.util.Properties properties34 = new java.util.Properties(properties32);
        java.util.Properties properties35 = null;
        java.util.Properties properties36 = new java.util.Properties(properties35);
        java.lang.Object obj38 = properties34.put((java.lang.Object) properties36, (java.lang.Object) (short) 1);
        boolean boolean39 = properties34.isEmpty();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties40 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties40.setDefaultJtaTimeout((long) (byte) 10);
        atomikosProperties40.setCheckpointInterval((long) (byte) 0);
        atomikosProperties40.setTransactionManagerUniqueName("");
        java.util.Properties properties47 = atomikosProperties40.asProperties();
        java.lang.Object obj48 = properties34.remove((java.lang.Object) properties47);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties49 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties49.setDefaultJtaTimeout((long) (byte) 10);
        atomikosProperties49.setCheckpointInterval((long) (byte) 0);
        atomikosProperties49.setTransactionManagerUniqueName("");
        java.lang.Object obj56 = properties47.remove((java.lang.Object) atomikosProperties49);
        java.util.Enumeration<java.lang.Object> objEnumeration57 = properties47.elements();
        java.lang.Object obj58 = properties31.get((java.lang.Object) properties47);
        java.util.Properties properties59 = new java.util.Properties(properties31);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties60 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties60.setDefaultJtaTimeout((long) (byte) 10);
        atomikosProperties60.setCheckpointInterval((long) (byte) 0);
        long long65 = atomikosProperties60.getMaxTimeout();
        atomikosProperties60.setSerialJtaTransactions(true);
        java.util.Properties properties68 = null;
        java.util.Properties properties69 = new java.util.Properties(properties68);
        java.util.Properties properties70 = new java.util.Properties(properties68);
        java.util.Properties properties71 = null;
        java.util.Properties properties72 = new java.util.Properties(properties71);
        java.lang.Object obj74 = properties70.put((java.lang.Object) properties72, (java.lang.Object) (short) 1);
        java.util.Properties properties76 = null;
        java.util.Properties properties77 = new java.util.Properties(properties76);
        java.util.Properties properties78 = new java.util.Properties(properties76);
        java.util.Properties properties79 = null;
        java.util.Properties properties80 = new java.util.Properties(properties79);
        java.lang.Object obj82 = properties78.put((java.lang.Object) properties80, (java.lang.Object) (short) 1);
        boolean boolean83 = properties72.remove((java.lang.Object) false, (java.lang.Object) (short) 1);
        java.util.Set<java.lang.String> strSet84 = properties72.stringPropertyNames();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties85 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties85.setDefaultJtaTimeout((long) (byte) 10);
        long long88 = atomikosProperties85.getDefaultJtaTimeout();
        java.lang.Object obj89 = properties72.get((java.lang.Object) atomikosProperties85);
        long long90 = atomikosProperties85.getCheckpointInterval();
        boolean boolean91 = atomikosProperties85.isEnableLogging();
        boolean boolean92 = properties4.replace((java.lang.Object) properties31, (java.lang.Object) atomikosProperties60, (java.lang.Object) atomikosProperties85);
        atomikosProperties60.setLogBaseName("{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=true, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=true, com.atomikos.icatch.max_actives=35, com.atomikos.icatch.log_base_name=tmlog}");
        org.junit.Assert.assertNull(obj6);
        org.junit.Assert.assertNull(obj14);
        org.junit.Assert.assertNotNull(objCollection15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(objEnumeration18);
        org.junit.Assert.assertNull(obj25);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNull(obj38);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(properties47);
        org.junit.Assert.assertNull(obj48);
        org.junit.Assert.assertNull(obj56);
        org.junit.Assert.assertNotNull(objEnumeration57);
        org.junit.Assert.assertNull(obj58);
        org.junit.Assert.assertTrue("'" + long65 + "' != '" + 300000L + "'", long65 == 300000L);
        org.junit.Assert.assertNull(obj74);
        org.junit.Assert.assertNull(obj82);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + false + "'", boolean83 == false);
        org.junit.Assert.assertNotNull(strSet84);
        org.junit.Assert.assertTrue("'" + long88 + "' != '" + 10L + "'", long88 == 10L);
        org.junit.Assert.assertNull(obj89);
        org.junit.Assert.assertTrue("'" + long90 + "' != '" + 500L + "'", long90 == 500L);
        org.junit.Assert.assertTrue("'" + boolean91 + "' != '" + true + "'", boolean91 == true);
        org.junit.Assert.assertTrue("'" + boolean92 + "' != '" + false + "'", boolean92 == false);
    }

    @Test
    public void test1234() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1234");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Properties properties2 = new java.util.Properties(properties0);
        java.util.Properties properties3 = null;
        java.util.Properties properties4 = new java.util.Properties(properties3);
        java.lang.Object obj6 = properties2.put((java.lang.Object) properties4, (java.lang.Object) (short) 1);
        boolean boolean7 = properties2.isEmpty();
        java.util.Properties properties8 = null;
        java.util.Properties properties9 = new java.util.Properties(properties8);
        java.util.Properties properties10 = new java.util.Properties(properties8);
        boolean boolean11 = properties2.containsKey((java.lang.Object) properties10);
        java.util.Properties properties12 = null;
        java.util.Properties properties13 = new java.util.Properties(properties12);
        java.util.Properties properties14 = new java.util.Properties(properties12);
        java.util.Properties properties15 = null;
        java.util.Properties properties16 = new java.util.Properties(properties15);
        java.lang.Object obj18 = properties14.put((java.lang.Object) properties16, (java.lang.Object) (short) 1);
        java.util.Properties properties20 = null;
        java.util.Properties properties21 = new java.util.Properties(properties20);
        java.util.Properties properties22 = new java.util.Properties(properties20);
        java.util.Properties properties23 = null;
        java.util.Properties properties24 = new java.util.Properties(properties23);
        java.lang.Object obj26 = properties22.put((java.lang.Object) properties24, (java.lang.Object) (short) 1);
        boolean boolean27 = properties16.remove((java.lang.Object) false, (java.lang.Object) (short) 1);
        java.util.Set<java.lang.String> strSet28 = properties16.stringPropertyNames();
        boolean boolean29 = properties10.containsKey((java.lang.Object) strSet28);
        java.util.Properties properties30 = null;
        java.util.Properties properties31 = new java.util.Properties(properties30);
        java.util.Properties properties32 = new java.util.Properties(properties30);
        java.util.Properties properties33 = null;
        java.util.Properties properties34 = new java.util.Properties(properties33);
        java.lang.Object obj36 = properties32.put((java.lang.Object) properties34, (java.lang.Object) (short) 1);
        properties34.clear();
        java.lang.String str39 = properties34.getProperty("");
        java.util.Properties properties40 = null;
        java.util.Properties properties41 = new java.util.Properties(properties40);
        java.util.Properties properties42 = new java.util.Properties(properties40);
        java.util.Properties properties43 = null;
        java.util.Properties properties44 = new java.util.Properties(properties43);
        java.lang.Object obj46 = properties42.put((java.lang.Object) properties44, (java.lang.Object) (short) 1);
        properties34.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties42);
        boolean boolean48 = properties10.containsKey((java.lang.Object) properties34);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties50 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties50.setThreadedTwoPhaseCommit(true);
        boolean boolean53 = atomikosProperties50.isEnableLogging();
        java.lang.Object obj54 = properties10.put((java.lang.Object) '4', (java.lang.Object) boolean53);
        java.util.Properties properties55 = new java.util.Properties(properties10);
        boolean boolean56 = properties10.isEmpty();
        java.lang.Object obj59 = properties10.setProperty("tmlog", "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=0, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.tm_unique_name=, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
        java.lang.String str60 = properties10.toString();
        java.lang.Object obj61 = properties10.clone();
        java.lang.Object obj62 = properties10.clone();
        java.util.Enumeration<java.lang.Object> objEnumeration63 = properties10.keys();
        java.lang.String str66 = properties10.getProperty("{{}=tmlog}", "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.max_actives=0, com.atomikos.icatch.log_base_name=tmlog}");
        org.junit.Assert.assertNull(obj6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNull(obj18);
        org.junit.Assert.assertNull(obj26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(strSet28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNull(obj36);
        org.junit.Assert.assertNull(str39);
        org.junit.Assert.assertNull(obj46);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertNull(obj54);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertNull(obj59);
// flaky:         org.junit.Assert.assertEquals("'" + str60 + "' != '" + "{tmlog={com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=0, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.tm_unique_name=, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}, 4=true}" + "'", str60, "{tmlog={com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=0, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.tm_unique_name=, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}, 4=true}");
        org.junit.Assert.assertNotNull(obj61);
// flaky:         org.junit.Assert.assertEquals(obj61.toString(), "{tmlog={com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=0, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.tm_unique_name=, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}, 4=true}");
// flaky:         org.junit.Assert.assertEquals(java.lang.String.valueOf(obj61), "{tmlog={com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=0, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.tm_unique_name=, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}, 4=true}");
// flaky:         org.junit.Assert.assertEquals(java.util.Objects.toString(obj61), "{tmlog={com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=0, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.tm_unique_name=, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}, 4=true}");
        org.junit.Assert.assertNotNull(obj62);
// flaky:         org.junit.Assert.assertEquals(obj62.toString(), "{tmlog={com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=0, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.tm_unique_name=, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}, 4=true}");
// flaky:         org.junit.Assert.assertEquals(java.lang.String.valueOf(obj62), "{tmlog={com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=0, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.tm_unique_name=, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}, 4=true}");
// flaky:         org.junit.Assert.assertEquals(java.util.Objects.toString(obj62), "{tmlog={com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=0, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.tm_unique_name=, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}, 4=true}");
        org.junit.Assert.assertNotNull(objEnumeration63);
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.max_actives=0, com.atomikos.icatch.log_base_name=tmlog}" + "'", str66, "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.max_actives=0, com.atomikos.icatch.log_base_name=tmlog}");
    }

    @Test
    public void test1235() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1235");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setDefaultJtaTimeout((long) (byte) 10);
        atomikosProperties0.setCheckpointInterval((long) (byte) 0);
        long long5 = atomikosProperties0.getMaxTimeout();
        atomikosProperties0.setSerialJtaTransactions(true);
        atomikosProperties0.setCheckpointInterval((long) (short) 100);
        boolean boolean10 = atomikosProperties0.isEnableLogging();
        atomikosProperties0.setSerialJtaTransactions(true);
        org.junit.Assert.assertTrue("'" + long5 + "' != '" + 300000L + "'", long5 == 300000L);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
    }

    @Test
    public void test1236() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1236");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setDefaultJtaTimeout((long) (byte) 10);
        atomikosProperties0.setCheckpointInterval((long) (byte) 0);
        atomikosProperties0.setEnableLogging(true);
        java.lang.String str7 = atomikosProperties0.getLogBaseName();
        atomikosProperties0.setCheckpointInterval((long) ' ');
        atomikosProperties0.setService("{}");
        java.lang.String str12 = atomikosProperties0.getLogBaseName();
        atomikosProperties0.setMaxActives((int) ' ');
        boolean boolean15 = atomikosProperties0.isSerialJtaTransactions();
        boolean boolean16 = atomikosProperties0.isEnableLogging();
        atomikosProperties0.setMaxTimeout((long) ' ');
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "tmlog" + "'", str7, "tmlog");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "tmlog" + "'", str12, "tmlog");
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
    }

    @Test
    public void test1237() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1237");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setDefaultJtaTimeout((long) (byte) 10);
        long long3 = atomikosProperties0.getDefaultJtaTimeout();
        atomikosProperties0.setTransactionManagerUniqueName("");
        boolean boolean6 = atomikosProperties0.isEnableLogging();
        atomikosProperties0.setLogBaseName("tmlog");
        boolean boolean9 = atomikosProperties0.isThreadedTwoPhaseCommit();
        long long10 = atomikosProperties0.getCheckpointInterval();
        java.util.Properties properties11 = atomikosProperties0.asProperties();
        java.io.InputStream inputStream12 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties11.load(inputStream12);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + long3 + "' != '" + 10L + "'", long3 == 10L);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + long10 + "' != '" + 500L + "'", long10 == 500L);
        org.junit.Assert.assertNotNull(properties11);
    }

    @Test
    public void test1238() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1238");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Properties properties2 = new java.util.Properties(properties0);
        boolean boolean4 = properties2.containsValue((java.lang.Object) (short) 100);
        java.util.Enumeration<java.lang.Object> objEnumeration5 = properties2.keys();
        java.util.Properties properties6 = null;
        java.util.Properties properties7 = new java.util.Properties(properties6);
        java.util.Properties properties8 = new java.util.Properties(properties6);
        java.util.Properties properties9 = null;
        java.util.Properties properties10 = new java.util.Properties(properties9);
        java.lang.Object obj12 = properties8.put((java.lang.Object) properties10, (java.lang.Object) (short) 1);
        boolean boolean13 = properties8.isEmpty();
        java.util.Properties properties14 = null;
        java.util.Properties properties15 = new java.util.Properties(properties14);
        java.util.Properties properties16 = new java.util.Properties(properties14);
        boolean boolean17 = properties8.containsKey((java.lang.Object) properties16);
        java.util.Properties properties18 = new java.util.Properties(properties16);
        java.lang.Object obj19 = properties18.clone();
        java.lang.Object obj20 = properties2.remove(obj19);
        properties2.clear();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet22 = properties2.entrySet();
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(objEnumeration5);
        org.junit.Assert.assertNull(obj12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(obj19);
        org.junit.Assert.assertEquals(obj19.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj19), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj19), "{}");
        org.junit.Assert.assertNull(obj20);
        org.junit.Assert.assertNotNull(objEntrySet22);
    }

    @Test
    public void test1239() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1239");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setDefaultJtaTimeout((long) (byte) 10);
        long long3 = atomikosProperties0.getDefaultJtaTimeout();
        atomikosProperties0.setTransactionManagerUniqueName("hi!");
        atomikosProperties0.setTransactionManagerUniqueName("{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=0, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.tm_unique_name=, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
        atomikosProperties0.setService("");
        atomikosProperties0.setDefaultJtaTimeout(0L);
        atomikosProperties0.setSerialJtaTransactions(false);
        boolean boolean14 = atomikosProperties0.isSerialJtaTransactions();
        org.junit.Assert.assertTrue("'" + long3 + "' != '" + 10L + "'", long3 == 10L);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
    }

    @Test
    public void test1240() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1240");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Properties properties2 = new java.util.Properties(properties0);
        java.util.Properties properties3 = null;
        java.util.Properties properties4 = new java.util.Properties(properties3);
        java.lang.Object obj6 = properties2.put((java.lang.Object) properties4, (java.lang.Object) (short) 1);
        java.util.Properties properties8 = null;
        java.util.Properties properties9 = new java.util.Properties(properties8);
        java.util.Properties properties10 = new java.util.Properties(properties8);
        java.util.Properties properties11 = null;
        java.util.Properties properties12 = new java.util.Properties(properties11);
        java.lang.Object obj14 = properties10.put((java.lang.Object) properties12, (java.lang.Object) (short) 1);
        boolean boolean15 = properties4.remove((java.lang.Object) false, (java.lang.Object) (short) 1);
        java.util.Properties properties16 = new java.util.Properties(properties4);
        int int17 = properties16.size();
        java.util.Properties properties18 = new java.util.Properties(properties16);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties19 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties19.setDefaultJtaTimeout((long) (byte) 10);
        long long22 = atomikosProperties19.getDefaultJtaTimeout();
        atomikosProperties19.setTransactionManagerUniqueName("hi!");
        atomikosProperties19.setLogBaseName("tmlog");
        atomikosProperties19.setCheckpointInterval(300000L);
        long long29 = atomikosProperties19.getMaxTimeout();
        boolean boolean30 = properties18.containsKey((java.lang.Object) long29);
        java.util.Properties properties31 = new java.util.Properties(properties18);
        java.lang.String str33 = properties18.getProperty("{{tmlog={com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=0, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.tm_unique_name=, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}, 4=true}={com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=0, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog, {}={}}}");
        org.junit.Assert.assertNull(obj6);
        org.junit.Assert.assertNull(obj14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 0 + "'", int17 == 0);
        org.junit.Assert.assertTrue("'" + long22 + "' != '" + 10L + "'", long22 == 10L);
        org.junit.Assert.assertTrue("'" + long29 + "' != '" + 300000L + "'", long29 == 300000L);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNull(str33);
    }

    @Test
    public void test1241() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1241");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Properties properties2 = new java.util.Properties(properties0);
        java.util.Properties properties3 = null;
        java.util.Properties properties4 = new java.util.Properties(properties3);
        java.lang.Object obj6 = properties2.put((java.lang.Object) properties4, (java.lang.Object) (short) 1);
        boolean boolean7 = properties2.isEmpty();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties8 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties8.setDefaultJtaTimeout((long) (byte) 10);
        atomikosProperties8.setCheckpointInterval((long) (byte) 0);
        atomikosProperties8.setTransactionManagerUniqueName("");
        java.util.Properties properties15 = atomikosProperties8.asProperties();
        java.lang.Object obj16 = properties2.remove((java.lang.Object) properties15);
        java.util.Properties properties17 = null;
        java.util.Properties properties18 = new java.util.Properties(properties17);
        java.util.Properties properties19 = new java.util.Properties(properties17);
        java.util.Properties properties20 = null;
        java.util.Properties properties21 = new java.util.Properties(properties20);
        java.lang.Object obj23 = properties19.put((java.lang.Object) properties21, (java.lang.Object) (short) 1);
        boolean boolean24 = properties19.isEmpty();
        java.util.Properties properties25 = null;
        java.util.Properties properties26 = new java.util.Properties(properties25);
        java.util.Properties properties27 = new java.util.Properties(properties25);
        boolean boolean28 = properties19.containsKey((java.lang.Object) properties27);
        java.util.Properties properties29 = new java.util.Properties(properties27);
        java.util.Properties properties30 = null;
        java.util.Properties properties31 = new java.util.Properties(properties30);
        java.util.Properties properties32 = new java.util.Properties(properties30);
        java.util.Properties properties33 = null;
        java.util.Properties properties34 = new java.util.Properties(properties33);
        java.lang.Object obj36 = properties32.put((java.lang.Object) properties34, (java.lang.Object) (short) 1);
        boolean boolean37 = properties32.isEmpty();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties38 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties38.setDefaultJtaTimeout((long) (byte) 10);
        atomikosProperties38.setCheckpointInterval((long) (byte) 0);
        atomikosProperties38.setTransactionManagerUniqueName("");
        java.util.Properties properties45 = atomikosProperties38.asProperties();
        java.lang.Object obj46 = properties32.remove((java.lang.Object) properties45);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties47 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties47.setDefaultJtaTimeout((long) (byte) 10);
        atomikosProperties47.setCheckpointInterval((long) (byte) 0);
        atomikosProperties47.setTransactionManagerUniqueName("");
        java.lang.Object obj54 = properties45.remove((java.lang.Object) atomikosProperties47);
        java.util.Enumeration<java.lang.Object> objEnumeration55 = properties45.elements();
        java.lang.Object obj56 = properties29.get((java.lang.Object) properties45);
        java.util.Properties properties57 = null;
        java.util.Properties properties58 = new java.util.Properties(properties57);
        java.util.Properties properties59 = new java.util.Properties(properties57);
        java.util.Properties properties60 = null;
        java.util.Properties properties61 = new java.util.Properties(properties60);
        java.lang.Object obj63 = properties59.put((java.lang.Object) properties61, (java.lang.Object) (short) 1);
        java.util.Properties properties65 = null;
        java.util.Properties properties66 = new java.util.Properties(properties65);
        java.util.Properties properties67 = new java.util.Properties(properties65);
        java.util.Properties properties68 = null;
        java.util.Properties properties69 = new java.util.Properties(properties68);
        java.lang.Object obj71 = properties67.put((java.lang.Object) properties69, (java.lang.Object) (short) 1);
        boolean boolean72 = properties61.remove((java.lang.Object) false, (java.lang.Object) (short) 1);
        java.util.Set<java.lang.String> strSet73 = properties61.stringPropertyNames();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties74 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        int int75 = atomikosProperties74.getMaxActives();
        long long76 = atomikosProperties74.getMaxTimeout();
        java.lang.String str77 = atomikosProperties74.getLogBaseDir();
        long long78 = atomikosProperties74.getCheckpointInterval();
        java.lang.Object obj79 = properties45.putIfAbsent((java.lang.Object) properties61, (java.lang.Object) long78);
        java.util.Properties properties80 = new java.util.Properties(properties45);
        boolean boolean81 = properties2.equals((java.lang.Object) properties80);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties82 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties82.setDefaultJtaTimeout((long) (byte) 10);
        long long85 = atomikosProperties82.getDefaultJtaTimeout();
        atomikosProperties82.setTransactionManagerUniqueName("");
        boolean boolean88 = atomikosProperties82.isEnableLogging();
        java.lang.String str89 = atomikosProperties82.getLogBaseName();
        atomikosProperties82.setMaxTimeout(10L);
        long long92 = atomikosProperties82.getDefaultJtaTimeout();
        java.util.Properties properties93 = atomikosProperties82.asProperties();
        java.lang.Object obj94 = properties80.remove((java.lang.Object) properties93);
        java.io.Reader reader95 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties80.load(reader95);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(obj6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(properties15);
        org.junit.Assert.assertNull(obj16);
        org.junit.Assert.assertNull(obj23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNull(obj36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(properties45);
        org.junit.Assert.assertNull(obj46);
        org.junit.Assert.assertNull(obj54);
        org.junit.Assert.assertNotNull(objEnumeration55);
        org.junit.Assert.assertNull(obj56);
        org.junit.Assert.assertNull(obj63);
        org.junit.Assert.assertNull(obj71);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertNotNull(strSet73);
        org.junit.Assert.assertTrue("'" + int75 + "' != '" + 50 + "'", int75 == 50);
        org.junit.Assert.assertTrue("'" + long76 + "' != '" + 300000L + "'", long76 == 300000L);
        org.junit.Assert.assertNull(str77);
        org.junit.Assert.assertTrue("'" + long78 + "' != '" + 500L + "'", long78 == 500L);
        org.junit.Assert.assertNull(obj79);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + false + "'", boolean81 == false);
        org.junit.Assert.assertTrue("'" + long85 + "' != '" + 10L + "'", long85 == 10L);
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + true + "'", boolean88 == true);
        org.junit.Assert.assertEquals("'" + str89 + "' != '" + "tmlog" + "'", str89, "tmlog");
        org.junit.Assert.assertTrue("'" + long92 + "' != '" + 10L + "'", long92 == 10L);
        org.junit.Assert.assertNotNull(properties93);
        org.junit.Assert.assertNull(obj94);
    }

    @Test
    public void test1242() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1242");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setDefaultJtaTimeout((long) (byte) 10);
        atomikosProperties0.setCheckpointInterval((long) (byte) 0);
        atomikosProperties0.setTransactionManagerUniqueName("");
        boolean boolean7 = atomikosProperties0.isEnableLogging();
        java.util.Properties properties8 = atomikosProperties0.asProperties();
        java.util.Properties properties9 = new java.util.Properties(properties8);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties10 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties10.setDefaultJtaTimeout((long) (byte) 10);
        atomikosProperties10.setSerialJtaTransactions(false);
        atomikosProperties10.setMaxTimeout((long) (short) -1);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties17 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties17.setDefaultJtaTimeout((long) (byte) 10);
        atomikosProperties17.setCheckpointInterval((long) (byte) 0);
        atomikosProperties17.setTransactionManagerUniqueName("");
        java.util.Properties properties24 = atomikosProperties17.asProperties();
        java.lang.String str25 = atomikosProperties17.getLogBaseName();
        java.util.Properties properties26 = atomikosProperties17.asProperties();
        java.lang.Object obj27 = properties8.getOrDefault((java.lang.Object) (short) -1, (java.lang.Object) atomikosProperties17);
        java.util.Properties properties28 = atomikosProperties17.asProperties();
        atomikosProperties17.setForceShutdownOnVmExit(false);
        atomikosProperties17.setSerialJtaTransactions(false);
        atomikosProperties17.setLogBaseDir("hi!");
        java.lang.String str35 = atomikosProperties17.getLogBaseDir();
        atomikosProperties17.setService("{tmlog={com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=0, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.tm_unique_name=, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}, 4=true}");
        atomikosProperties17.setEnableLogging(true);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(properties8);
        org.junit.Assert.assertNotNull(properties24);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "tmlog" + "'", str25, "tmlog");
        org.junit.Assert.assertNotNull(properties26);
        org.junit.Assert.assertNotNull(obj27);
        org.junit.Assert.assertNotNull(properties28);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "hi!" + "'", str35, "hi!");
    }

    @Test
    public void test1243() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1243");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Properties properties2 = new java.util.Properties(properties0);
        java.util.Properties properties3 = null;
        java.util.Properties properties4 = new java.util.Properties(properties3);
        java.lang.Object obj6 = properties2.put((java.lang.Object) properties4, (java.lang.Object) (short) 1);
        java.util.Properties properties8 = null;
        java.util.Properties properties9 = new java.util.Properties(properties8);
        java.util.Properties properties10 = new java.util.Properties(properties8);
        java.util.Properties properties11 = null;
        java.util.Properties properties12 = new java.util.Properties(properties11);
        java.lang.Object obj14 = properties10.put((java.lang.Object) properties12, (java.lang.Object) (short) 1);
        boolean boolean15 = properties4.remove((java.lang.Object) false, (java.lang.Object) (short) 1);
        java.util.Properties properties16 = new java.util.Properties(properties4);
        boolean boolean17 = properties4.isEmpty();
        java.util.Enumeration<?> wildcardEnumeration18 = properties4.propertyNames();
        java.lang.Object obj19 = null;
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties20 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties20.setDefaultJtaTimeout((long) (byte) 10);
        atomikosProperties20.setCheckpointInterval((long) (byte) 0);
        atomikosProperties20.setTransactionManagerUniqueName("");
        boolean boolean27 = atomikosProperties20.isEnableLogging();
        java.util.Properties properties28 = atomikosProperties20.asProperties();
        java.util.Properties properties29 = new java.util.Properties(properties28);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties30 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties30.setDefaultJtaTimeout((long) (byte) 10);
        atomikosProperties30.setSerialJtaTransactions(false);
        atomikosProperties30.setMaxTimeout((long) (short) -1);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties37 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties37.setDefaultJtaTimeout((long) (byte) 10);
        atomikosProperties37.setCheckpointInterval((long) (byte) 0);
        atomikosProperties37.setTransactionManagerUniqueName("");
        java.util.Properties properties44 = atomikosProperties37.asProperties();
        java.lang.String str45 = atomikosProperties37.getLogBaseName();
        java.util.Properties properties46 = atomikosProperties37.asProperties();
        java.lang.Object obj47 = properties28.getOrDefault((java.lang.Object) (short) -1, (java.lang.Object) atomikosProperties37);
        java.util.Set<java.lang.Object> objSet48 = properties28.keySet();
        java.lang.String str49 = properties28.toString();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj50 = properties4.put(obj19, (java.lang.Object) str49);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(obj6);
        org.junit.Assert.assertNull(obj14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(wildcardEnumeration18);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNotNull(properties28);
        org.junit.Assert.assertNotNull(properties44);
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "tmlog" + "'", str45, "tmlog");
        org.junit.Assert.assertNotNull(properties46);
        org.junit.Assert.assertNotNull(obj47);
        org.junit.Assert.assertNotNull(objSet48);
// flaky:         org.junit.Assert.assertEquals("'" + str49 + "' != '" + "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=0, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.tm_unique_name=, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}" + "'", str49, "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=0, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.tm_unique_name=, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
    }

    @Test
    public void test1244() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1244");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setDefaultJtaTimeout((long) (byte) 10);
        long long3 = atomikosProperties0.getDefaultJtaTimeout();
        atomikosProperties0.setTransactionManagerUniqueName("");
        boolean boolean6 = atomikosProperties0.isEnableLogging();
        java.lang.String str7 = atomikosProperties0.getLogBaseDir();
        atomikosProperties0.setEnableLogging(true);
        atomikosProperties0.setMaxTimeout(500L);
        java.lang.String str12 = atomikosProperties0.getLogBaseName();
        org.junit.Assert.assertTrue("'" + long3 + "' != '" + 10L + "'", long3 == 10L);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "tmlog" + "'", str12, "tmlog");
    }

    @Test
    public void test1245() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1245");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Properties properties2 = new java.util.Properties(properties0);
        java.util.Properties properties3 = null;
        java.util.Properties properties4 = new java.util.Properties(properties3);
        java.lang.Object obj6 = properties2.put((java.lang.Object) properties4, (java.lang.Object) (short) 1);
        java.util.Properties properties8 = null;
        java.util.Properties properties9 = new java.util.Properties(properties8);
        java.util.Properties properties10 = new java.util.Properties(properties8);
        java.util.Properties properties11 = null;
        java.util.Properties properties12 = new java.util.Properties(properties11);
        java.lang.Object obj14 = properties10.put((java.lang.Object) properties12, (java.lang.Object) (short) 1);
        boolean boolean15 = properties4.remove((java.lang.Object) false, (java.lang.Object) (short) 1);
        java.util.Set<java.lang.String> strSet16 = properties4.stringPropertyNames();
        java.lang.Object obj17 = properties4.clone();
        java.io.OutputStream outputStream18 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties4.storeToXML(outputStream18, "hi!", "{[]={com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=0, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.tm_unique_name=, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}}");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(obj6);
        org.junit.Assert.assertNull(obj14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(strSet16);
        org.junit.Assert.assertNotNull(obj17);
        org.junit.Assert.assertEquals(obj17.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj17), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj17), "{}");
    }

    @Test
    public void test1246() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1246");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setDefaultJtaTimeout((long) (byte) 10);
        atomikosProperties0.setCheckpointInterval((long) (byte) 0);
        atomikosProperties0.setTransactionManagerUniqueName("");
        java.util.Properties properties7 = atomikosProperties0.asProperties();
        java.lang.String str8 = atomikosProperties0.getTransactionManagerUniqueName();
        atomikosProperties0.setDefaultJtaTimeout((long) (-1));
        java.lang.String str11 = atomikosProperties0.getTransactionManagerUniqueName();
        atomikosProperties0.setMaxActives(100);
        atomikosProperties0.setThreadedTwoPhaseCommit(false);
        atomikosProperties0.setCheckpointInterval((long) 11);
        atomikosProperties0.setService("{=}");
        atomikosProperties0.setMaxActives((int) (byte) 1);
        org.junit.Assert.assertNotNull(properties7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "" + "'", str8, "");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
    }

    @Test
    public void test1247() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1247");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Properties properties2 = new java.util.Properties(properties0);
        java.util.Properties properties3 = null;
        java.util.Properties properties4 = new java.util.Properties(properties3);
        java.lang.Object obj6 = properties2.put((java.lang.Object) properties4, (java.lang.Object) (short) 1);
        java.util.Enumeration<java.lang.Object> objEnumeration7 = properties4.elements();
        java.lang.String str8 = properties4.toString();
        java.util.Properties properties9 = null;
        java.util.Properties properties10 = new java.util.Properties(properties9);
        java.util.Properties properties11 = new java.util.Properties(properties9);
        java.util.Properties properties12 = null;
        java.util.Properties properties13 = new java.util.Properties(properties12);
        java.lang.Object obj15 = properties11.put((java.lang.Object) properties13, (java.lang.Object) (short) 1);
        properties13.clear();
        java.lang.String str18 = properties13.getProperty("");
        java.util.Properties properties19 = null;
        java.util.Properties properties20 = new java.util.Properties(properties19);
        java.util.Properties properties21 = new java.util.Properties(properties19);
        java.util.Properties properties22 = null;
        java.util.Properties properties23 = new java.util.Properties(properties22);
        java.lang.Object obj25 = properties21.put((java.lang.Object) properties23, (java.lang.Object) (short) 1);
        properties13.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties21);
        java.util.Enumeration<java.lang.Object> objEnumeration27 = properties13.keys();
        java.util.Enumeration<java.lang.Object> objEnumeration28 = properties13.elements();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties29 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties29.setDefaultJtaTimeout((long) (byte) 10);
        atomikosProperties29.setCheckpointInterval((long) (byte) 0);
        atomikosProperties29.setEnableLogging(true);
        java.lang.String str36 = atomikosProperties29.getLogBaseName();
        atomikosProperties29.setMaxActives((int) (short) 100);
        boolean boolean39 = properties4.remove((java.lang.Object) properties13, (java.lang.Object) atomikosProperties29);
        java.io.OutputStream outputStream40 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties4.store(outputStream40, "");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(obj6);
        org.junit.Assert.assertNotNull(objEnumeration7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "{}" + "'", str8, "{}");
        org.junit.Assert.assertNull(obj15);
        org.junit.Assert.assertNull(str18);
        org.junit.Assert.assertNull(obj25);
        org.junit.Assert.assertNotNull(objEnumeration27);
        org.junit.Assert.assertNotNull(objEnumeration28);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "tmlog" + "'", str36, "tmlog");
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
    }

    @Test
    public void test1248() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1248");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Properties properties2 = new java.util.Properties(properties0);
        java.util.Properties properties3 = null;
        java.util.Properties properties4 = new java.util.Properties(properties3);
        java.lang.Object obj6 = properties2.put((java.lang.Object) properties4, (java.lang.Object) (short) 1);
        java.util.Properties properties8 = null;
        java.util.Properties properties9 = new java.util.Properties(properties8);
        java.util.Properties properties10 = new java.util.Properties(properties8);
        java.util.Properties properties11 = null;
        java.util.Properties properties12 = new java.util.Properties(properties11);
        java.lang.Object obj14 = properties10.put((java.lang.Object) properties12, (java.lang.Object) (short) 1);
        boolean boolean15 = properties4.remove((java.lang.Object) false, (java.lang.Object) (short) 1);
        java.util.Set<java.lang.String> strSet16 = properties4.stringPropertyNames();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties17 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties17.setDefaultJtaTimeout((long) (byte) 10);
        long long20 = atomikosProperties17.getDefaultJtaTimeout();
        java.lang.Object obj21 = properties4.get((java.lang.Object) atomikosProperties17);
        java.util.Properties properties22 = null;
        java.util.Properties properties23 = new java.util.Properties(properties22);
        java.util.Properties properties24 = new java.util.Properties(properties22);
        java.util.Properties properties25 = null;
        java.util.Properties properties26 = new java.util.Properties(properties25);
        java.lang.Object obj28 = properties24.put((java.lang.Object) properties26, (java.lang.Object) (short) 1);
        java.util.Properties properties30 = null;
        java.util.Properties properties31 = new java.util.Properties(properties30);
        java.util.Properties properties32 = new java.util.Properties(properties30);
        java.util.Properties properties33 = null;
        java.util.Properties properties34 = new java.util.Properties(properties33);
        java.lang.Object obj36 = properties32.put((java.lang.Object) properties34, (java.lang.Object) (short) 1);
        boolean boolean37 = properties26.remove((java.lang.Object) false, (java.lang.Object) (short) 1);
        java.lang.Object obj39 = properties26.remove((java.lang.Object) '#');
        java.util.Set<java.lang.Object> objSet40 = properties26.keySet();
        boolean boolean41 = properties4.containsKey((java.lang.Object) properties26);
        properties4.clear();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties43 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties43.setDefaultJtaTimeout((long) (byte) 10);
        atomikosProperties43.setCheckpointInterval((long) (byte) 0);
        atomikosProperties43.setTransactionManagerUniqueName("");
        java.util.Properties properties50 = atomikosProperties43.asProperties();
        java.lang.String str51 = atomikosProperties43.getTransactionManagerUniqueName();
        atomikosProperties43.setDefaultJtaTimeout((long) (-1));
        java.util.Properties properties54 = atomikosProperties43.asProperties();
        long long55 = atomikosProperties43.getMaxTimeout();
        java.util.Properties properties56 = null;
        java.util.Properties properties57 = new java.util.Properties(properties56);
        java.util.Properties properties58 = new java.util.Properties(properties56);
        java.util.Properties properties59 = null;
        java.util.Properties properties60 = new java.util.Properties(properties59);
        java.lang.Object obj62 = properties58.put((java.lang.Object) properties60, (java.lang.Object) (short) 1);
        java.util.Properties properties63 = new java.util.Properties(properties60);
        java.util.Enumeration<java.lang.Object> objEnumeration64 = properties63.elements();
        java.util.Enumeration<java.lang.Object> objEnumeration65 = properties63.elements();
        java.util.Properties properties66 = new java.util.Properties(properties63);
        java.util.Enumeration<java.lang.Object> objEnumeration67 = properties66.elements();
        java.lang.Object obj68 = properties4.putIfAbsent((java.lang.Object) atomikosProperties43, (java.lang.Object) objEnumeration67);
        atomikosProperties43.setService("{[]={com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=0, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.tm_unique_name=, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}}");
        org.junit.Assert.assertNull(obj6);
        org.junit.Assert.assertNull(obj14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(strSet16);
        org.junit.Assert.assertTrue("'" + long20 + "' != '" + 10L + "'", long20 == 10L);
        org.junit.Assert.assertNull(obj21);
        org.junit.Assert.assertNull(obj28);
        org.junit.Assert.assertNull(obj36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNull(obj39);
        org.junit.Assert.assertNotNull(objSet40);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(properties50);
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "" + "'", str51, "");
        org.junit.Assert.assertNotNull(properties54);
        org.junit.Assert.assertTrue("'" + long55 + "' != '" + 300000L + "'", long55 == 300000L);
        org.junit.Assert.assertNull(obj62);
        org.junit.Assert.assertNotNull(objEnumeration64);
        org.junit.Assert.assertNotNull(objEnumeration65);
        org.junit.Assert.assertNotNull(objEnumeration67);
        org.junit.Assert.assertNull(obj68);
    }

    @Test
    public void test1249() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1249");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Properties properties2 = new java.util.Properties(properties0);
        java.util.Properties properties3 = null;
        java.util.Properties properties4 = new java.util.Properties(properties3);
        java.lang.Object obj6 = properties2.put((java.lang.Object) properties4, (java.lang.Object) (short) 1);
        boolean boolean7 = properties2.isEmpty();
        java.util.Properties properties8 = null;
        java.util.Properties properties9 = new java.util.Properties(properties8);
        java.util.Properties properties10 = new java.util.Properties(properties8);
        boolean boolean11 = properties2.containsKey((java.lang.Object) properties10);
        java.util.Properties properties12 = new java.util.Properties(properties10);
        java.util.Properties properties13 = null;
        java.util.Properties properties14 = new java.util.Properties(properties13);
        java.util.Properties properties15 = new java.util.Properties(properties13);
        java.util.Properties properties16 = null;
        java.util.Properties properties17 = new java.util.Properties(properties16);
        java.lang.Object obj19 = properties15.put((java.lang.Object) properties17, (java.lang.Object) (short) 1);
        boolean boolean20 = properties15.isEmpty();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties21 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties21.setDefaultJtaTimeout((long) (byte) 10);
        atomikosProperties21.setCheckpointInterval((long) (byte) 0);
        atomikosProperties21.setTransactionManagerUniqueName("");
        java.util.Properties properties28 = atomikosProperties21.asProperties();
        java.lang.Object obj29 = properties15.remove((java.lang.Object) properties28);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties30 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties30.setDefaultJtaTimeout((long) (byte) 10);
        atomikosProperties30.setCheckpointInterval((long) (byte) 0);
        atomikosProperties30.setTransactionManagerUniqueName("");
        java.lang.Object obj37 = properties28.remove((java.lang.Object) atomikosProperties30);
        java.util.Enumeration<java.lang.Object> objEnumeration38 = properties28.elements();
        java.lang.Object obj39 = properties12.get((java.lang.Object) properties28);
        java.util.Enumeration<?> wildcardEnumeration40 = properties28.propertyNames();
        org.junit.Assert.assertNull(obj6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNull(obj19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(properties28);
        org.junit.Assert.assertNull(obj29);
        org.junit.Assert.assertNull(obj37);
        org.junit.Assert.assertNotNull(objEnumeration38);
        org.junit.Assert.assertNull(obj39);
        org.junit.Assert.assertNotNull(wildcardEnumeration40);
    }

    @Test
    public void test1250() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1250");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Properties properties2 = new java.util.Properties(properties0);
        java.util.Properties properties3 = null;
        java.util.Properties properties4 = new java.util.Properties(properties3);
        java.lang.Object obj6 = properties2.put((java.lang.Object) properties4, (java.lang.Object) (short) 1);
        properties4.clear();
        java.lang.String str9 = properties4.getProperty("");
        java.util.Properties properties10 = null;
        java.util.Properties properties11 = new java.util.Properties(properties10);
        java.util.Properties properties12 = new java.util.Properties(properties10);
        java.util.Properties properties13 = null;
        java.util.Properties properties14 = new java.util.Properties(properties13);
        java.lang.Object obj16 = properties12.put((java.lang.Object) properties14, (java.lang.Object) (short) 1);
        properties4.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties12);
        java.util.Properties properties18 = new java.util.Properties(properties12);
        int int19 = properties18.size();
        java.io.OutputStream outputStream20 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties18.storeToXML(outputStream20, "{{tmlog={com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=0, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.tm_unique_name=, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}, 4=true}={com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=0, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog, {}={}}}", "tmlog");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(obj6);
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertNull(obj16);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 0 + "'", int19 == 0);
    }

    @Test
    public void test1251() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1251");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Properties properties2 = new java.util.Properties(properties0);
        java.util.Properties properties3 = null;
        java.util.Properties properties4 = new java.util.Properties(properties3);
        java.lang.Object obj6 = properties2.put((java.lang.Object) properties4, (java.lang.Object) (short) 1);
        boolean boolean7 = properties2.isEmpty();
        java.util.Properties properties8 = null;
        java.util.Properties properties9 = new java.util.Properties(properties8);
        java.util.Properties properties10 = new java.util.Properties(properties8);
        boolean boolean11 = properties2.containsKey((java.lang.Object) properties10);
        java.util.Properties properties12 = null;
        java.util.Properties properties13 = new java.util.Properties(properties12);
        java.util.Properties properties14 = new java.util.Properties(properties12);
        java.util.Properties properties15 = null;
        java.util.Properties properties16 = new java.util.Properties(properties15);
        java.lang.Object obj18 = properties14.put((java.lang.Object) properties16, (java.lang.Object) (short) 1);
        java.util.Properties properties20 = null;
        java.util.Properties properties21 = new java.util.Properties(properties20);
        java.util.Properties properties22 = new java.util.Properties(properties20);
        java.util.Properties properties23 = null;
        java.util.Properties properties24 = new java.util.Properties(properties23);
        java.lang.Object obj26 = properties22.put((java.lang.Object) properties24, (java.lang.Object) (short) 1);
        boolean boolean27 = properties16.remove((java.lang.Object) false, (java.lang.Object) (short) 1);
        java.util.Set<java.lang.String> strSet28 = properties16.stringPropertyNames();
        boolean boolean29 = properties10.containsKey((java.lang.Object) strSet28);
        java.util.Properties properties30 = null;
        java.util.Properties properties31 = new java.util.Properties(properties30);
        java.util.Properties properties32 = new java.util.Properties(properties30);
        java.util.Properties properties33 = null;
        java.util.Properties properties34 = new java.util.Properties(properties33);
        java.lang.Object obj36 = properties32.put((java.lang.Object) properties34, (java.lang.Object) (short) 1);
        properties34.clear();
        java.lang.String str39 = properties34.getProperty("");
        java.util.Properties properties40 = null;
        java.util.Properties properties41 = new java.util.Properties(properties40);
        java.util.Properties properties42 = new java.util.Properties(properties40);
        java.util.Properties properties43 = null;
        java.util.Properties properties44 = new java.util.Properties(properties43);
        java.lang.Object obj46 = properties42.put((java.lang.Object) properties44, (java.lang.Object) (short) 1);
        properties34.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties42);
        boolean boolean48 = properties10.containsKey((java.lang.Object) properties34);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties50 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties50.setThreadedTwoPhaseCommit(true);
        boolean boolean53 = atomikosProperties50.isEnableLogging();
        java.lang.Object obj54 = properties10.put((java.lang.Object) '4', (java.lang.Object) boolean53);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties56 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties56.setDefaultJtaTimeout((long) (byte) 10);
        atomikosProperties56.setCheckpointInterval((long) (byte) 0);
        atomikosProperties56.setTransactionManagerUniqueName("");
        java.util.Properties properties63 = atomikosProperties56.asProperties();
        atomikosProperties56.setDefaultJtaTimeout((long) 'a');
        boolean boolean66 = atomikosProperties56.isEnableLogging();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties67 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties67.setDefaultJtaTimeout((long) (byte) 10);
        long long70 = atomikosProperties67.getDefaultJtaTimeout();
        atomikosProperties67.setTransactionManagerUniqueName("");
        boolean boolean73 = atomikosProperties67.isEnableLogging();
        java.lang.String str74 = atomikosProperties67.getLogBaseDir();
        java.util.Properties properties75 = atomikosProperties67.asProperties();
        java.lang.String str76 = properties75.toString();
        java.util.Properties properties77 = null;
        java.util.Properties properties78 = new java.util.Properties(properties77);
        java.util.Properties properties79 = new java.util.Properties(properties77);
        java.util.Properties properties80 = null;
        java.util.Properties properties81 = new java.util.Properties(properties80);
        java.lang.Object obj83 = properties79.put((java.lang.Object) properties81, (java.lang.Object) (short) 1);
        java.util.Properties properties85 = null;
        java.util.Properties properties86 = new java.util.Properties(properties85);
        java.util.Properties properties87 = new java.util.Properties(properties85);
        java.util.Properties properties88 = null;
        java.util.Properties properties89 = new java.util.Properties(properties88);
        java.lang.Object obj91 = properties87.put((java.lang.Object) properties89, (java.lang.Object) (short) 1);
        boolean boolean92 = properties81.remove((java.lang.Object) false, (java.lang.Object) (short) 1);
        java.util.Set<java.lang.String> strSet93 = properties81.stringPropertyNames();
        java.lang.Object obj94 = properties81.clone();
        properties75.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties81);
        boolean boolean96 = properties10.replace((java.lang.Object) "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.tm_unique_name=, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}", (java.lang.Object) atomikosProperties56, (java.lang.Object) properties81);
        java.util.Collection<java.lang.Object> objCollection97 = properties81.values();
        java.util.Properties properties98 = new java.util.Properties(properties81);
        java.util.Set<java.lang.String> strSet99 = properties81.stringPropertyNames();
        org.junit.Assert.assertNull(obj6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNull(obj18);
        org.junit.Assert.assertNull(obj26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(strSet28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNull(obj36);
        org.junit.Assert.assertNull(str39);
        org.junit.Assert.assertNull(obj46);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertNull(obj54);
        org.junit.Assert.assertNotNull(properties63);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66 == true);
        org.junit.Assert.assertTrue("'" + long70 + "' != '" + 10L + "'", long70 == 10L);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + true + "'", boolean73 == true);
        org.junit.Assert.assertNull(str74);
        org.junit.Assert.assertNotNull(properties75);
// flaky:         org.junit.Assert.assertEquals("'" + str76 + "' != '" + "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.tm_unique_name=, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}" + "'", str76, "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.tm_unique_name=, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
        org.junit.Assert.assertNull(obj83);
        org.junit.Assert.assertNull(obj91);
        org.junit.Assert.assertTrue("'" + boolean92 + "' != '" + false + "'", boolean92 == false);
        org.junit.Assert.assertNotNull(strSet93);
        org.junit.Assert.assertNotNull(obj94);
        org.junit.Assert.assertEquals(obj94.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj94), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj94), "{}");
        org.junit.Assert.assertTrue("'" + boolean96 + "' != '" + false + "'", boolean96 == false);
        org.junit.Assert.assertNotNull(objCollection97);
        org.junit.Assert.assertNotNull(strSet99);
    }

    @Test
    public void test1252() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1252");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setDefaultJtaTimeout((long) (byte) 10);
        long long3 = atomikosProperties0.getDefaultJtaTimeout();
        atomikosProperties0.setTransactionManagerUniqueName("");
        boolean boolean6 = atomikosProperties0.isEnableLogging();
        java.lang.String str7 = atomikosProperties0.getLogBaseDir();
        java.util.Properties properties8 = atomikosProperties0.asProperties();
        boolean boolean9 = atomikosProperties0.isEnableLogging();
        java.util.Properties properties10 = atomikosProperties0.asProperties();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties11 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties11.setDefaultJtaTimeout((long) (byte) 10);
        atomikosProperties11.setCheckpointInterval((long) (byte) 0);
        atomikosProperties11.setTransactionManagerUniqueName("");
        boolean boolean18 = atomikosProperties11.isEnableLogging();
        java.util.Properties properties19 = atomikosProperties11.asProperties();
        java.util.Enumeration<java.lang.Object> objEnumeration20 = properties19.keys();
        java.util.Properties properties21 = null;
        java.util.Properties properties22 = new java.util.Properties(properties21);
        java.util.Properties properties23 = new java.util.Properties(properties21);
        java.util.Properties properties24 = null;
        java.util.Properties properties25 = new java.util.Properties(properties24);
        java.lang.Object obj27 = properties23.put((java.lang.Object) properties25, (java.lang.Object) (short) 1);
        java.util.Properties properties29 = null;
        java.util.Properties properties30 = new java.util.Properties(properties29);
        java.util.Properties properties31 = new java.util.Properties(properties29);
        java.util.Properties properties32 = null;
        java.util.Properties properties33 = new java.util.Properties(properties32);
        java.lang.Object obj35 = properties31.put((java.lang.Object) properties33, (java.lang.Object) (short) 1);
        boolean boolean36 = properties25.remove((java.lang.Object) false, (java.lang.Object) (short) 1);
        java.util.Set<java.lang.String> strSet37 = properties25.stringPropertyNames();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties38 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties38.setDefaultJtaTimeout((long) (byte) 10);
        long long41 = atomikosProperties38.getDefaultJtaTimeout();
        java.lang.Object obj42 = properties25.get((java.lang.Object) atomikosProperties38);
        atomikosProperties38.setCheckpointInterval((long) (short) 100);
        java.util.Properties properties45 = atomikosProperties38.asProperties();
        java.util.Enumeration<?> wildcardEnumeration46 = properties45.propertyNames();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet47 = properties45.entrySet();
        java.lang.Object obj48 = properties10.getOrDefault((java.lang.Object) objEnumeration20, (java.lang.Object) properties45);
        boolean boolean50 = properties10.containsValue((java.lang.Object) 50L);
        int int51 = properties10.size();
        java.io.OutputStream outputStream52 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties10.store(outputStream52, "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=0, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.tm_unique_name=, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + long3 + "' != '" + 10L + "'", long3 == 10L);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNotNull(properties8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertNotNull(properties10);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(properties19);
        org.junit.Assert.assertNotNull(objEnumeration20);
        org.junit.Assert.assertNull(obj27);
        org.junit.Assert.assertNull(obj35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(strSet37);
        org.junit.Assert.assertTrue("'" + long41 + "' != '" + 10L + "'", long41 == 10L);
        org.junit.Assert.assertNull(obj42);
        org.junit.Assert.assertNotNull(properties45);
        org.junit.Assert.assertNotNull(wildcardEnumeration46);
        org.junit.Assert.assertNotNull(objEntrySet47);
        org.junit.Assert.assertNotNull(obj48);
// flaky:         org.junit.Assert.assertEquals(obj48.toString(), "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=100, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
// flaky:         org.junit.Assert.assertEquals(java.lang.String.valueOf(obj48), "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=100, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
// flaky:         org.junit.Assert.assertEquals(java.util.Objects.toString(obj48), "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=100, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + 10 + "'", int51 == 10);
    }

    @Test
    public void test1253() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1253");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Properties properties2 = new java.util.Properties(properties0);
        java.lang.Object obj3 = properties2.clone();
        java.util.Enumeration<java.lang.Object> objEnumeration4 = properties2.elements();
        java.util.Enumeration<?> wildcardEnumeration5 = properties2.propertyNames();
        org.junit.Assert.assertNotNull(obj3);
        org.junit.Assert.assertEquals(obj3.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj3), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj3), "{}");
        org.junit.Assert.assertNotNull(objEnumeration4);
        org.junit.Assert.assertNotNull(wildcardEnumeration5);
    }

    @Test
    public void test1254() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1254");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Properties properties2 = new java.util.Properties(properties0);
        java.util.Properties properties3 = null;
        java.util.Properties properties4 = new java.util.Properties(properties3);
        java.lang.Object obj6 = properties2.put((java.lang.Object) properties4, (java.lang.Object) (short) 1);
        java.util.Properties properties8 = null;
        java.util.Properties properties9 = new java.util.Properties(properties8);
        java.util.Properties properties10 = new java.util.Properties(properties8);
        java.util.Properties properties11 = null;
        java.util.Properties properties12 = new java.util.Properties(properties11);
        java.lang.Object obj14 = properties10.put((java.lang.Object) properties12, (java.lang.Object) (short) 1);
        boolean boolean15 = properties4.remove((java.lang.Object) false, (java.lang.Object) (short) 1);
        java.util.Set<java.lang.String> strSet16 = properties4.stringPropertyNames();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties17 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties17.setDefaultJtaTimeout((long) (byte) 10);
        atomikosProperties17.setCheckpointInterval((long) (byte) 0);
        atomikosProperties17.setTransactionManagerUniqueName("");
        boolean boolean24 = atomikosProperties17.isEnableLogging();
        atomikosProperties17.setSerialJtaTransactions(false);
        atomikosProperties17.setLogBaseDir("");
        java.util.Properties properties29 = null;
        java.util.Properties properties30 = new java.util.Properties(properties29);
        java.util.Properties properties31 = new java.util.Properties(properties29);
        java.util.Properties properties32 = null;
        java.util.Properties properties33 = new java.util.Properties(properties32);
        java.lang.Object obj35 = properties31.put((java.lang.Object) properties33, (java.lang.Object) (short) 1);
        java.util.Properties properties36 = new java.util.Properties(properties33);
        boolean boolean37 = properties4.remove((java.lang.Object) "", (java.lang.Object) properties36);
        java.lang.String str39 = properties4.getProperty("{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.tm_unique_name=, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties40 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties40.setDefaultJtaTimeout((long) (byte) 10);
        atomikosProperties40.setCheckpointInterval((long) (byte) 0);
        atomikosProperties40.setTransactionManagerUniqueName("");
        boolean boolean47 = atomikosProperties40.isEnableLogging();
        atomikosProperties40.setSerialJtaTransactions(false);
        java.lang.Object obj50 = properties4.remove((java.lang.Object) atomikosProperties40);
        properties4.clear();
        java.util.Properties properties52 = null;
        java.util.Properties properties53 = new java.util.Properties(properties52);
        java.util.Properties properties54 = new java.util.Properties(properties52);
        java.util.Properties properties55 = null;
        java.util.Properties properties56 = new java.util.Properties(properties55);
        java.lang.Object obj58 = properties54.put((java.lang.Object) properties56, (java.lang.Object) (short) 1);
        properties56.clear();
        int int60 = properties56.size();
        java.util.Properties properties61 = new java.util.Properties(properties56);
        boolean boolean62 = properties56.isEmpty();
        java.util.Enumeration<java.lang.Object> objEnumeration63 = properties56.elements();
        java.util.Properties properties64 = null;
        java.util.Properties properties65 = new java.util.Properties(properties64);
        java.util.Properties properties66 = new java.util.Properties(properties64);
        java.util.Properties properties67 = null;
        java.util.Properties properties68 = new java.util.Properties(properties67);
        java.lang.Object obj70 = properties66.put((java.lang.Object) properties68, (java.lang.Object) (short) 1);
        java.util.Properties properties71 = new java.util.Properties(properties68);
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet72 = properties68.entrySet();
        boolean boolean73 = properties56.contains((java.lang.Object) objEntrySet72);
        java.lang.Object obj74 = properties4.remove((java.lang.Object) boolean73);
        java.io.PrintWriter printWriter75 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties4.list(printWriter75);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(obj6);
        org.junit.Assert.assertNull(obj14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(strSet16);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNull(obj35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNull(str39);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertNull(obj50);
        org.junit.Assert.assertNull(obj58);
        org.junit.Assert.assertTrue("'" + int60 + "' != '" + 0 + "'", int60 == 0);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + true + "'", boolean62 == true);
        org.junit.Assert.assertNotNull(objEnumeration63);
        org.junit.Assert.assertNull(obj70);
        org.junit.Assert.assertNotNull(objEntrySet72);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertNull(obj74);
    }

    @Test
    public void test1255() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1255");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Properties properties2 = new java.util.Properties(properties0);
        java.util.Properties properties3 = null;
        java.util.Properties properties4 = new java.util.Properties(properties3);
        java.lang.Object obj6 = properties2.put((java.lang.Object) properties4, (java.lang.Object) (short) 1);
        java.util.Properties properties8 = null;
        java.util.Properties properties9 = new java.util.Properties(properties8);
        java.util.Properties properties10 = new java.util.Properties(properties8);
        java.util.Properties properties11 = null;
        java.util.Properties properties12 = new java.util.Properties(properties11);
        java.lang.Object obj14 = properties10.put((java.lang.Object) properties12, (java.lang.Object) (short) 1);
        boolean boolean15 = properties4.remove((java.lang.Object) false, (java.lang.Object) (short) 1);
        java.util.Set<java.lang.String> strSet16 = properties4.stringPropertyNames();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties17 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties17.setThreadedTwoPhaseCommit(true);
        atomikosProperties17.setMaxActives((int) (byte) 0);
        atomikosProperties17.setEnableLogging(true);
        atomikosProperties17.setForceShutdownOnVmExit(false);
        java.lang.Object obj26 = properties4.get((java.lang.Object) false);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties27 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties27.setDefaultJtaTimeout((long) (byte) 10);
        long long30 = atomikosProperties27.getDefaultJtaTimeout();
        atomikosProperties27.setTransactionManagerUniqueName("");
        long long33 = atomikosProperties27.getDefaultJtaTimeout();
        boolean boolean34 = atomikosProperties27.isEnableLogging();
        atomikosProperties27.setService("{}");
        atomikosProperties27.setTransactionManagerUniqueName("{tmlog={com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=0, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.tm_unique_name=, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}, 4=true}");
        java.util.Properties properties39 = null;
        java.util.Properties properties40 = new java.util.Properties(properties39);
        java.util.Properties properties41 = new java.util.Properties(properties39);
        java.util.Properties properties42 = null;
        java.util.Properties properties43 = new java.util.Properties(properties42);
        java.lang.Object obj45 = properties41.put((java.lang.Object) properties43, (java.lang.Object) (short) 1);
        java.util.Properties properties47 = null;
        java.util.Properties properties48 = new java.util.Properties(properties47);
        java.util.Properties properties49 = new java.util.Properties(properties47);
        java.util.Properties properties50 = null;
        java.util.Properties properties51 = new java.util.Properties(properties50);
        java.lang.Object obj53 = properties49.put((java.lang.Object) properties51, (java.lang.Object) (short) 1);
        boolean boolean54 = properties43.remove((java.lang.Object) false, (java.lang.Object) (short) 1);
        java.lang.Object obj56 = properties43.remove((java.lang.Object) '#');
        java.util.Set<java.lang.Object> objSet57 = properties43.keySet();
        properties43.clear();
        java.util.Properties properties59 = null;
        java.util.Properties properties60 = new java.util.Properties(properties59);
        java.util.Properties properties61 = new java.util.Properties(properties59);
        java.util.Properties properties62 = null;
        java.util.Properties properties63 = new java.util.Properties(properties62);
        java.lang.Object obj65 = properties61.put((java.lang.Object) properties63, (java.lang.Object) (short) 1);
        java.util.Enumeration<java.lang.Object> objEnumeration66 = properties63.elements();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet67 = properties63.entrySet();
        boolean boolean68 = properties43.equals((java.lang.Object) properties63);
        java.util.Enumeration<java.lang.Object> objEnumeration69 = properties63.elements();
        boolean boolean70 = properties4.remove((java.lang.Object) "{tmlog={com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=0, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.tm_unique_name=, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}, 4=true}", (java.lang.Object) objEnumeration69);
        java.util.Properties properties71 = new java.util.Properties(properties4);
        java.lang.Object obj72 = properties71.clone();
        java.io.Writer writer73 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties71.store(writer73, "{{}=tmlog}");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(obj6);
        org.junit.Assert.assertNull(obj14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(strSet16);
        org.junit.Assert.assertNull(obj26);
        org.junit.Assert.assertTrue("'" + long30 + "' != '" + 10L + "'", long30 == 10L);
        org.junit.Assert.assertTrue("'" + long33 + "' != '" + 10L + "'", long33 == 10L);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertNull(obj45);
        org.junit.Assert.assertNull(obj53);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertNull(obj56);
        org.junit.Assert.assertNotNull(objSet57);
        org.junit.Assert.assertNull(obj65);
        org.junit.Assert.assertNotNull(objEnumeration66);
        org.junit.Assert.assertNotNull(objEntrySet67);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + true + "'", boolean68 == true);
        org.junit.Assert.assertNotNull(objEnumeration69);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertNotNull(obj72);
        org.junit.Assert.assertEquals(obj72.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj72), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj72), "{}");
    }

    @Test
    public void test1256() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1256");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setEnableLogging(false);
        atomikosProperties0.setThreadedTwoPhaseCommit(true);
        atomikosProperties0.setTransactionManagerUniqueName("tmlog");
        atomikosProperties0.setThreadedTwoPhaseCommit(false);
        atomikosProperties0.setLogBaseName("hi!");
        atomikosProperties0.setDefaultJtaTimeout((long) 1);
        java.lang.String str13 = atomikosProperties0.getLogBaseDir();
        org.junit.Assert.assertNull(str13);
    }

    @Test
    public void test1257() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1257");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Properties properties2 = new java.util.Properties(properties0);
        java.util.Properties properties3 = null;
        java.util.Properties properties4 = new java.util.Properties(properties3);
        java.lang.Object obj6 = properties2.put((java.lang.Object) properties4, (java.lang.Object) (short) 1);
        java.util.Enumeration<java.lang.Object> objEnumeration7 = properties4.elements();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet8 = properties4.entrySet();
        java.util.Set<java.lang.Object> objSet9 = properties4.keySet();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties10 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties10.setDefaultJtaTimeout((long) (byte) 10);
        atomikosProperties10.setCheckpointInterval((long) (byte) 0);
        atomikosProperties10.setEnableLogging(true);
        java.lang.Object obj17 = properties4.get((java.lang.Object) atomikosProperties10);
        java.util.Properties properties18 = atomikosProperties10.asProperties();
        java.lang.String str19 = atomikosProperties10.getLogBaseName();
        atomikosProperties10.setForceShutdownOnVmExit(false);
        atomikosProperties10.setMaxActives(0);
        atomikosProperties10.setDefaultJtaTimeout(10000L);
        org.junit.Assert.assertNull(obj6);
        org.junit.Assert.assertNotNull(objEnumeration7);
        org.junit.Assert.assertNotNull(objEntrySet8);
        org.junit.Assert.assertNotNull(objSet9);
        org.junit.Assert.assertNull(obj17);
        org.junit.Assert.assertNotNull(properties18);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "tmlog" + "'", str19, "tmlog");
    }

    @Test
    public void test1258() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1258");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setDefaultJtaTimeout((long) (byte) 10);
        atomikosProperties0.setCheckpointInterval((long) (byte) 0);
        atomikosProperties0.setTransactionManagerUniqueName("");
        java.util.Properties properties7 = atomikosProperties0.asProperties();
        java.lang.String str8 = atomikosProperties0.getLogBaseName();
        atomikosProperties0.setCheckpointInterval(100L);
        java.lang.String str11 = atomikosProperties0.getTransactionManagerUniqueName();
        atomikosProperties0.setLogBaseName("{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.tm_unique_name=, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
        atomikosProperties0.setThreadedTwoPhaseCommit(true);
        java.util.Properties properties16 = atomikosProperties0.asProperties();
        java.util.Properties properties17 = atomikosProperties0.asProperties();
        java.io.Writer writer18 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties17.store(writer18, "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=0, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=true, com.atomikos.icatch.max_actives=100, com.atomikos.icatch.log_base_name=tmlog}");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(properties7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "tmlog" + "'", str8, "tmlog");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertNotNull(properties16);
        org.junit.Assert.assertNotNull(properties17);
    }

    @Test
    public void test1259() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1259");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setDefaultJtaTimeout((long) (byte) 10);
        atomikosProperties0.setCheckpointInterval((long) (byte) 0);
        atomikosProperties0.setTransactionManagerUniqueName("");
        java.util.Properties properties7 = atomikosProperties0.asProperties();
        java.util.Properties properties8 = atomikosProperties0.asProperties();
        java.lang.Object obj11 = properties8.setProperty("tmlog", "hi!");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties12 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties12.setDefaultJtaTimeout((long) (byte) 10);
        long long15 = atomikosProperties12.getDefaultJtaTimeout();
        atomikosProperties12.setTransactionManagerUniqueName("");
        boolean boolean18 = atomikosProperties12.isEnableLogging();
        java.lang.String str19 = atomikosProperties12.getLogBaseDir();
        java.util.Properties properties20 = atomikosProperties12.asProperties();
        boolean boolean21 = atomikosProperties12.isEnableLogging();
        java.lang.String str22 = atomikosProperties12.getLogBaseName();
        java.util.Properties properties23 = atomikosProperties12.asProperties();
        java.util.Set<java.lang.Object> objSet24 = properties23.keySet();
        java.lang.Object obj25 = properties8.remove((java.lang.Object) properties23);
        java.io.OutputStream outputStream26 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties8.storeToXML(outputStream26, "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=0, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.tm_unique_name=, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}", "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=0, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=true, com.atomikos.icatch.max_actives=100, com.atomikos.icatch.log_base_name=tmlog}");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(properties7);
        org.junit.Assert.assertNotNull(properties8);
        org.junit.Assert.assertNull(obj11);
        org.junit.Assert.assertTrue("'" + long15 + "' != '" + 10L + "'", long15 == 10L);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNull(str19);
        org.junit.Assert.assertNotNull(properties20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "tmlog" + "'", str22, "tmlog");
        org.junit.Assert.assertNotNull(properties23);
        org.junit.Assert.assertNotNull(objSet24);
        org.junit.Assert.assertNull(obj25);
    }

    @Test
    public void test1260() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1260");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Properties properties2 = new java.util.Properties(properties0);
        java.util.Properties properties3 = null;
        java.util.Properties properties4 = new java.util.Properties(properties3);
        java.lang.Object obj6 = properties2.put((java.lang.Object) properties4, (java.lang.Object) (short) 1);
        java.util.Collection<java.lang.Object> objCollection7 = properties4.values();
        java.util.Properties properties8 = null;
        java.util.Properties properties9 = new java.util.Properties(properties8);
        java.util.Properties properties10 = new java.util.Properties(properties8);
        java.util.Properties properties11 = null;
        java.util.Properties properties12 = new java.util.Properties(properties11);
        java.lang.Object obj14 = properties10.put((java.lang.Object) properties12, (java.lang.Object) (short) 1);
        java.util.Properties properties16 = null;
        java.util.Properties properties17 = new java.util.Properties(properties16);
        java.util.Properties properties18 = new java.util.Properties(properties16);
        java.util.Properties properties19 = null;
        java.util.Properties properties20 = new java.util.Properties(properties19);
        java.lang.Object obj22 = properties18.put((java.lang.Object) properties20, (java.lang.Object) (short) 1);
        boolean boolean23 = properties12.remove((java.lang.Object) false, (java.lang.Object) (short) 1);
        java.util.Set<java.lang.String> strSet24 = properties12.stringPropertyNames();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties25 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties25.setDefaultJtaTimeout((long) (byte) 10);
        long long28 = atomikosProperties25.getDefaultJtaTimeout();
        java.lang.Object obj29 = properties12.get((java.lang.Object) atomikosProperties25);
        java.util.Enumeration<java.lang.Object> objEnumeration30 = properties12.elements();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties31 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties31.setThreadedTwoPhaseCommit(true);
        atomikosProperties31.setMaxActives((int) '#');
        atomikosProperties31.setEnableLogging(true);
        int int38 = atomikosProperties31.getMaxActives();
        boolean boolean39 = properties12.containsValue((java.lang.Object) atomikosProperties31);
        java.util.Properties properties40 = atomikosProperties31.asProperties();
        java.util.Properties properties41 = null;
        java.util.Properties properties42 = new java.util.Properties(properties41);
        java.util.Properties properties43 = new java.util.Properties(properties41);
        java.util.Properties properties44 = null;
        java.util.Properties properties45 = new java.util.Properties(properties44);
        java.lang.Object obj47 = properties43.put((java.lang.Object) properties45, (java.lang.Object) (short) 1);
        boolean boolean48 = properties43.isEmpty();
        java.util.Properties properties49 = null;
        java.util.Properties properties50 = new java.util.Properties(properties49);
        java.util.Properties properties51 = new java.util.Properties(properties49);
        boolean boolean52 = properties43.containsKey((java.lang.Object) properties51);
        java.util.Properties properties53 = new java.util.Properties(properties51);
        java.util.Properties properties54 = null;
        java.util.Properties properties55 = new java.util.Properties(properties54);
        java.util.Properties properties56 = new java.util.Properties(properties54);
        java.util.Properties properties57 = null;
        java.util.Properties properties58 = new java.util.Properties(properties57);
        java.lang.Object obj60 = properties56.put((java.lang.Object) properties58, (java.lang.Object) (short) 1);
        boolean boolean61 = properties56.isEmpty();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties62 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties62.setDefaultJtaTimeout((long) (byte) 10);
        atomikosProperties62.setCheckpointInterval((long) (byte) 0);
        atomikosProperties62.setTransactionManagerUniqueName("");
        java.util.Properties properties69 = atomikosProperties62.asProperties();
        java.lang.Object obj70 = properties56.remove((java.lang.Object) properties69);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties71 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties71.setDefaultJtaTimeout((long) (byte) 10);
        atomikosProperties71.setCheckpointInterval((long) (byte) 0);
        atomikosProperties71.setTransactionManagerUniqueName("");
        java.lang.Object obj78 = properties69.remove((java.lang.Object) atomikosProperties71);
        java.util.Enumeration<java.lang.Object> objEnumeration79 = properties69.elements();
        java.lang.Object obj80 = properties53.get((java.lang.Object) properties69);
        java.lang.Object obj81 = properties4.putIfAbsent((java.lang.Object) properties40, (java.lang.Object) properties53);
        boolean boolean82 = properties53.isEmpty();
        java.util.Properties properties83 = new java.util.Properties(properties53);
        java.io.PrintWriter printWriter84 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties83.list(printWriter84);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(obj6);
        org.junit.Assert.assertNotNull(objCollection7);
        org.junit.Assert.assertNull(obj14);
        org.junit.Assert.assertNull(obj22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(strSet24);
        org.junit.Assert.assertTrue("'" + long28 + "' != '" + 10L + "'", long28 == 10L);
        org.junit.Assert.assertNull(obj29);
        org.junit.Assert.assertNotNull(objEnumeration30);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 35 + "'", int38 == 35);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(properties40);
        org.junit.Assert.assertNull(obj47);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertNull(obj60);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertNotNull(properties69);
        org.junit.Assert.assertNull(obj70);
        org.junit.Assert.assertNull(obj78);
        org.junit.Assert.assertNotNull(objEnumeration79);
        org.junit.Assert.assertNull(obj80);
        org.junit.Assert.assertNull(obj81);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + true + "'", boolean82 == true);
    }

    @Test
    public void test1261() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1261");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Properties properties2 = new java.util.Properties(properties0);
        java.util.Properties properties3 = null;
        java.util.Properties properties4 = new java.util.Properties(properties3);
        java.lang.Object obj6 = properties2.put((java.lang.Object) properties4, (java.lang.Object) (short) 1);
        java.util.Properties properties8 = null;
        java.util.Properties properties9 = new java.util.Properties(properties8);
        java.util.Properties properties10 = new java.util.Properties(properties8);
        java.util.Properties properties11 = null;
        java.util.Properties properties12 = new java.util.Properties(properties11);
        java.lang.Object obj14 = properties10.put((java.lang.Object) properties12, (java.lang.Object) (short) 1);
        boolean boolean15 = properties4.remove((java.lang.Object) false, (java.lang.Object) (short) 1);
        java.util.Properties properties16 = new java.util.Properties(properties4);
        int int17 = properties16.size();
        java.util.Properties properties18 = null;
        java.util.Properties properties19 = new java.util.Properties(properties18);
        java.util.Properties properties20 = new java.util.Properties(properties18);
        java.util.Properties properties21 = null;
        java.util.Properties properties22 = new java.util.Properties(properties21);
        java.lang.Object obj24 = properties20.put((java.lang.Object) properties22, (java.lang.Object) (short) 1);
        java.util.Enumeration<java.lang.Object> objEnumeration25 = properties22.elements();
        java.util.Properties properties26 = new java.util.Properties(properties22);
        boolean boolean27 = properties16.contains((java.lang.Object) properties22);
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet28 = properties16.entrySet();
        java.util.Properties properties29 = null;
        java.util.Properties properties30 = new java.util.Properties(properties29);
        java.util.Properties properties31 = new java.util.Properties(properties29);
        java.util.Properties properties32 = null;
        java.util.Properties properties33 = new java.util.Properties(properties32);
        java.lang.Object obj35 = properties31.put((java.lang.Object) properties33, (java.lang.Object) (short) 1);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties36 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties36.setThreadedTwoPhaseCommit(true);
        atomikosProperties36.setMaxActives((int) (byte) 0);
        boolean boolean41 = properties31.containsValue((java.lang.Object) atomikosProperties36);
        atomikosProperties36.setCheckpointInterval((long) 9);
        atomikosProperties36.setEnableLogging(false);
        boolean boolean46 = properties16.containsValue((java.lang.Object) atomikosProperties36);
        java.lang.String str47 = atomikosProperties36.getLogBaseName();
        atomikosProperties36.setDefaultJtaTimeout((long) 32);
        long long50 = atomikosProperties36.getCheckpointInterval();
        org.junit.Assert.assertNull(obj6);
        org.junit.Assert.assertNull(obj14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 0 + "'", int17 == 0);
        org.junit.Assert.assertNull(obj24);
        org.junit.Assert.assertNotNull(objEnumeration25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(objEntrySet28);
        org.junit.Assert.assertNull(obj35);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "tmlog" + "'", str47, "tmlog");
        org.junit.Assert.assertTrue("'" + long50 + "' != '" + 9L + "'", long50 == 9L);
    }

    @Test
    public void test1262() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1262");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Properties properties2 = new java.util.Properties(properties0);
        java.util.Properties properties3 = null;
        java.util.Properties properties4 = new java.util.Properties(properties3);
        java.lang.Object obj6 = properties2.put((java.lang.Object) properties4, (java.lang.Object) (short) 1);
        java.util.Properties properties8 = null;
        java.util.Properties properties9 = new java.util.Properties(properties8);
        java.util.Properties properties10 = new java.util.Properties(properties8);
        java.util.Properties properties11 = null;
        java.util.Properties properties12 = new java.util.Properties(properties11);
        java.lang.Object obj14 = properties10.put((java.lang.Object) properties12, (java.lang.Object) (short) 1);
        boolean boolean15 = properties4.remove((java.lang.Object) false, (java.lang.Object) (short) 1);
        java.util.Set<java.lang.String> strSet16 = properties4.stringPropertyNames();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties17 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties17.setDefaultJtaTimeout((long) (byte) 10);
        long long20 = atomikosProperties17.getDefaultJtaTimeout();
        java.lang.Object obj21 = properties4.get((java.lang.Object) atomikosProperties17);
        java.util.Properties properties22 = null;
        java.util.Properties properties23 = new java.util.Properties(properties22);
        java.util.Properties properties24 = new java.util.Properties(properties22);
        java.util.Properties properties25 = null;
        java.util.Properties properties26 = new java.util.Properties(properties25);
        java.lang.Object obj28 = properties24.put((java.lang.Object) properties26, (java.lang.Object) (short) 1);
        java.util.Properties properties30 = null;
        java.util.Properties properties31 = new java.util.Properties(properties30);
        java.util.Properties properties32 = new java.util.Properties(properties30);
        java.util.Properties properties33 = null;
        java.util.Properties properties34 = new java.util.Properties(properties33);
        java.lang.Object obj36 = properties32.put((java.lang.Object) properties34, (java.lang.Object) (short) 1);
        boolean boolean37 = properties26.remove((java.lang.Object) false, (java.lang.Object) (short) 1);
        java.lang.Object obj39 = properties26.remove((java.lang.Object) '#');
        java.util.Set<java.lang.Object> objSet40 = properties26.keySet();
        boolean boolean41 = properties4.containsKey((java.lang.Object) properties26);
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet42 = properties4.entrySet();
        java.util.Properties properties43 = null;
        java.util.Properties properties44 = new java.util.Properties(properties43);
        java.util.Properties properties45 = new java.util.Properties(properties43);
        java.util.Properties properties46 = null;
        java.util.Properties properties47 = new java.util.Properties(properties46);
        java.lang.Object obj49 = properties45.put((java.lang.Object) properties47, (java.lang.Object) (short) 1);
        boolean boolean50 = properties45.isEmpty();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties51 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties51.setDefaultJtaTimeout((long) (byte) 10);
        atomikosProperties51.setCheckpointInterval((long) (byte) 0);
        atomikosProperties51.setTransactionManagerUniqueName("");
        java.util.Properties properties58 = atomikosProperties51.asProperties();
        java.lang.Object obj59 = properties45.remove((java.lang.Object) properties58);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties60 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties60.setDefaultJtaTimeout((long) (byte) 10);
        atomikosProperties60.setCheckpointInterval((long) (byte) 0);
        atomikosProperties60.setTransactionManagerUniqueName("");
        java.util.Properties properties67 = atomikosProperties60.asProperties();
        java.lang.String str68 = atomikosProperties60.getTransactionManagerUniqueName();
        atomikosProperties60.setDefaultJtaTimeout((long) (-1));
        java.lang.String str71 = atomikosProperties60.getService();
        java.util.Properties properties72 = null;
        java.util.Properties properties73 = new java.util.Properties(properties72);
        java.util.Properties properties74 = new java.util.Properties(properties72);
        boolean boolean76 = properties74.containsValue((java.lang.Object) (short) 100);
        java.util.Properties properties77 = null;
        java.util.Properties properties78 = new java.util.Properties(properties77);
        java.util.Properties properties79 = new java.util.Properties(properties77);
        java.util.Properties properties80 = null;
        java.util.Properties properties81 = new java.util.Properties(properties80);
        java.lang.Object obj83 = properties79.put((java.lang.Object) properties81, (java.lang.Object) (short) 1);
        java.util.Enumeration<java.lang.Object> objEnumeration84 = properties81.elements();
        java.lang.Object obj85 = properties74.remove((java.lang.Object) properties81);
        boolean boolean86 = properties81.isEmpty();
        boolean boolean87 = properties4.replace((java.lang.Object) properties58, (java.lang.Object) atomikosProperties60, (java.lang.Object) boolean86);
        java.util.Properties properties88 = new java.util.Properties(properties58);
        java.io.InputStream inputStream89 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties88.load(inputStream89);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(obj6);
        org.junit.Assert.assertNull(obj14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(strSet16);
        org.junit.Assert.assertTrue("'" + long20 + "' != '" + 10L + "'", long20 == 10L);
        org.junit.Assert.assertNull(obj21);
        org.junit.Assert.assertNull(obj28);
        org.junit.Assert.assertNull(obj36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNull(obj39);
        org.junit.Assert.assertNotNull(objSet40);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(objEntrySet42);
        org.junit.Assert.assertNull(obj49);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertNotNull(properties58);
        org.junit.Assert.assertNull(obj59);
        org.junit.Assert.assertNotNull(properties67);
        org.junit.Assert.assertEquals("'" + str68 + "' != '" + "" + "'", str68, "");
        org.junit.Assert.assertNull(str71);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
        org.junit.Assert.assertNull(obj83);
        org.junit.Assert.assertNotNull(objEnumeration84);
        org.junit.Assert.assertNull(obj85);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + true + "'", boolean86 == true);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + false + "'", boolean87 == false);
    }

    @Test
    public void test1263() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1263");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setDefaultJtaTimeout((long) (byte) 10);
        atomikosProperties0.setCheckpointInterval((long) (byte) 0);
        atomikosProperties0.setTransactionManagerUniqueName("");
        boolean boolean7 = atomikosProperties0.isEnableLogging();
        java.util.Properties properties8 = atomikosProperties0.asProperties();
        java.util.Properties properties9 = new java.util.Properties(properties8);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties10 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties10.setDefaultJtaTimeout((long) (byte) 10);
        atomikosProperties10.setSerialJtaTransactions(false);
        atomikosProperties10.setMaxTimeout((long) (short) -1);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties17 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties17.setDefaultJtaTimeout((long) (byte) 10);
        atomikosProperties17.setCheckpointInterval((long) (byte) 0);
        atomikosProperties17.setTransactionManagerUniqueName("");
        java.util.Properties properties24 = atomikosProperties17.asProperties();
        java.lang.String str25 = atomikosProperties17.getLogBaseName();
        java.util.Properties properties26 = atomikosProperties17.asProperties();
        java.lang.Object obj27 = properties8.getOrDefault((java.lang.Object) (short) -1, (java.lang.Object) atomikosProperties17);
        java.util.Properties properties28 = atomikosProperties17.asProperties();
        atomikosProperties17.setForceShutdownOnVmExit(false);
        atomikosProperties17.setSerialJtaTransactions(false);
        atomikosProperties17.setLogBaseDir("hi!");
        java.lang.String str35 = atomikosProperties17.getLogBaseDir();
        atomikosProperties17.setForceShutdownOnVmExit(false);
        java.lang.String str38 = atomikosProperties17.getTransactionManagerUniqueName();
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(properties8);
        org.junit.Assert.assertNotNull(properties24);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "tmlog" + "'", str25, "tmlog");
        org.junit.Assert.assertNotNull(properties26);
        org.junit.Assert.assertNotNull(obj27);
        org.junit.Assert.assertNotNull(properties28);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "hi!" + "'", str35, "hi!");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "" + "'", str38, "");
    }

    @Test
    public void test1264() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1264");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Properties properties2 = new java.util.Properties(properties0);
        java.util.Properties properties3 = null;
        java.util.Properties properties4 = new java.util.Properties(properties3);
        java.lang.Object obj6 = properties2.put((java.lang.Object) properties4, (java.lang.Object) (short) 1);
        java.util.Properties properties8 = null;
        java.util.Properties properties9 = new java.util.Properties(properties8);
        java.util.Properties properties10 = new java.util.Properties(properties8);
        java.util.Properties properties11 = null;
        java.util.Properties properties12 = new java.util.Properties(properties11);
        java.lang.Object obj14 = properties10.put((java.lang.Object) properties12, (java.lang.Object) (short) 1);
        boolean boolean15 = properties4.remove((java.lang.Object) false, (java.lang.Object) (short) 1);
        java.util.Set<java.lang.String> strSet16 = properties4.stringPropertyNames();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties17 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties17.setDefaultJtaTimeout((long) (byte) 10);
        atomikosProperties17.setCheckpointInterval((long) (byte) 0);
        atomikosProperties17.setTransactionManagerUniqueName("");
        boolean boolean24 = atomikosProperties17.isEnableLogging();
        atomikosProperties17.setSerialJtaTransactions(false);
        atomikosProperties17.setLogBaseDir("");
        java.util.Properties properties29 = null;
        java.util.Properties properties30 = new java.util.Properties(properties29);
        java.util.Properties properties31 = new java.util.Properties(properties29);
        java.util.Properties properties32 = null;
        java.util.Properties properties33 = new java.util.Properties(properties32);
        java.lang.Object obj35 = properties31.put((java.lang.Object) properties33, (java.lang.Object) (short) 1);
        java.util.Properties properties36 = new java.util.Properties(properties33);
        boolean boolean37 = properties4.remove((java.lang.Object) "", (java.lang.Object) properties36);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties38 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties38.setDefaultJtaTimeout((long) (byte) 10);
        atomikosProperties38.setCheckpointInterval((long) (byte) 0);
        atomikosProperties38.setEnableLogging(true);
        long long45 = atomikosProperties38.getDefaultJtaTimeout();
        java.lang.Object obj46 = properties4.remove((java.lang.Object) atomikosProperties38);
        properties4.clear();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties48 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties48.setDefaultJtaTimeout((long) (byte) 10);
        long long51 = atomikosProperties48.getDefaultJtaTimeout();
        atomikosProperties48.setTransactionManagerUniqueName("");
        boolean boolean54 = atomikosProperties48.isEnableLogging();
        java.lang.String str55 = atomikosProperties48.getLogBaseDir();
        java.util.Properties properties56 = atomikosProperties48.asProperties();
        java.lang.String str57 = properties56.toString();
        java.util.Properties properties58 = null;
        java.util.Properties properties59 = new java.util.Properties(properties58);
        java.util.Properties properties60 = new java.util.Properties(properties58);
        java.util.Properties properties61 = null;
        java.util.Properties properties62 = new java.util.Properties(properties61);
        java.lang.Object obj64 = properties60.put((java.lang.Object) properties62, (java.lang.Object) (short) 1);
        java.util.Properties properties66 = null;
        java.util.Properties properties67 = new java.util.Properties(properties66);
        java.util.Properties properties68 = new java.util.Properties(properties66);
        java.util.Properties properties69 = null;
        java.util.Properties properties70 = new java.util.Properties(properties69);
        java.lang.Object obj72 = properties68.put((java.lang.Object) properties70, (java.lang.Object) (short) 1);
        boolean boolean73 = properties62.remove((java.lang.Object) false, (java.lang.Object) (short) 1);
        java.util.Set<java.lang.String> strSet74 = properties62.stringPropertyNames();
        java.lang.Object obj75 = properties62.clone();
        properties56.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties62);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties77 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties77.setDefaultJtaTimeout((long) (byte) 10);
        long long80 = atomikosProperties77.getDefaultJtaTimeout();
        atomikosProperties77.setTransactionManagerUniqueName("hi!");
        atomikosProperties77.setLogBaseName("tmlog");
        atomikosProperties77.setTransactionManagerUniqueName("{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=0, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.tm_unique_name=, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
        java.lang.Object obj87 = properties56.get((java.lang.Object) "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=0, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.tm_unique_name=, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
        java.util.Properties properties88 = null;
        java.util.Properties properties89 = new java.util.Properties(properties88);
        java.util.Properties properties90 = new java.util.Properties(properties88);
        java.util.Properties properties91 = null;
        java.util.Properties properties92 = new java.util.Properties(properties91);
        java.lang.Object obj94 = properties90.put((java.lang.Object) properties92, (java.lang.Object) (short) 1);
        boolean boolean95 = properties90.isEmpty();
        java.util.Collection<java.lang.Object> objCollection96 = properties90.values();
        java.util.Enumeration<java.lang.Object> objEnumeration97 = properties90.elements();
        java.lang.Object obj98 = properties4.getOrDefault((java.lang.Object) "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=0, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.tm_unique_name=, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}", (java.lang.Object) objEnumeration97);
        org.junit.Assert.assertNull(obj6);
        org.junit.Assert.assertNull(obj14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(strSet16);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNull(obj35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertTrue("'" + long45 + "' != '" + 10L + "'", long45 == 10L);
        org.junit.Assert.assertNull(obj46);
        org.junit.Assert.assertTrue("'" + long51 + "' != '" + 10L + "'", long51 == 10L);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertNull(str55);
        org.junit.Assert.assertNotNull(properties56);
// flaky:         org.junit.Assert.assertEquals("'" + str57 + "' != '" + "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.tm_unique_name=, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}" + "'", str57, "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.tm_unique_name=, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
        org.junit.Assert.assertNull(obj64);
        org.junit.Assert.assertNull(obj72);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertNotNull(strSet74);
        org.junit.Assert.assertNotNull(obj75);
        org.junit.Assert.assertEquals(obj75.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj75), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj75), "{}");
        org.junit.Assert.assertTrue("'" + long80 + "' != '" + 10L + "'", long80 == 10L);
        org.junit.Assert.assertNull(obj87);
        org.junit.Assert.assertNull(obj94);
        org.junit.Assert.assertTrue("'" + boolean95 + "' != '" + false + "'", boolean95 == false);
        org.junit.Assert.assertNotNull(objCollection96);
        org.junit.Assert.assertNotNull(objEnumeration97);
        org.junit.Assert.assertNotNull(obj98);
    }

    @Test
    public void test1265() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1265");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Properties properties2 = new java.util.Properties(properties0);
        java.util.Properties properties3 = null;
        java.util.Properties properties4 = new java.util.Properties(properties3);
        java.lang.Object obj6 = properties2.put((java.lang.Object) properties4, (java.lang.Object) (short) 1);
        boolean boolean7 = properties2.isEmpty();
        java.util.Properties properties8 = null;
        java.util.Properties properties9 = new java.util.Properties(properties8);
        java.util.Properties properties10 = new java.util.Properties(properties8);
        boolean boolean11 = properties2.containsKey((java.lang.Object) properties10);
        java.util.Properties properties12 = new java.util.Properties(properties10);
        java.lang.Object obj13 = properties12.clone();
        java.util.Properties properties15 = null;
        java.util.Properties properties16 = new java.util.Properties(properties15);
        java.util.Properties properties17 = new java.util.Properties(properties15);
        java.util.Properties properties18 = null;
        java.util.Properties properties19 = new java.util.Properties(properties18);
        java.lang.Object obj21 = properties17.put((java.lang.Object) properties19, (java.lang.Object) (short) 1);
        boolean boolean22 = properties17.isEmpty();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties23 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties23.setDefaultJtaTimeout((long) (byte) 10);
        atomikosProperties23.setCheckpointInterval((long) (byte) 0);
        atomikosProperties23.setTransactionManagerUniqueName("");
        java.util.Properties properties30 = atomikosProperties23.asProperties();
        java.lang.Object obj31 = properties17.remove((java.lang.Object) properties30);
        java.lang.Object obj32 = properties12.putIfAbsent((java.lang.Object) 1L, (java.lang.Object) properties17);
        java.lang.String str34 = properties12.getProperty("{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=0, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog, {}={}}");
        java.util.Properties properties35 = new java.util.Properties(properties12);
        boolean boolean36 = properties12.isEmpty();
        org.junit.Assert.assertNull(obj6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNotNull(obj13);
        org.junit.Assert.assertEquals(obj13.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj13), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj13), "{}");
        org.junit.Assert.assertNull(obj21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(properties30);
        org.junit.Assert.assertNull(obj31);
        org.junit.Assert.assertNull(obj32);
        org.junit.Assert.assertNull(str34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
    }

    @Test
    public void test1266() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1266");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Properties properties2 = new java.util.Properties(properties0);
        java.util.Properties properties3 = null;
        java.util.Properties properties4 = new java.util.Properties(properties3);
        java.lang.Object obj6 = properties2.put((java.lang.Object) properties4, (java.lang.Object) (short) 1);
        boolean boolean7 = properties2.isEmpty();
        java.util.Properties properties8 = null;
        java.util.Properties properties9 = new java.util.Properties(properties8);
        java.util.Properties properties10 = new java.util.Properties(properties8);
        boolean boolean11 = properties2.containsKey((java.lang.Object) properties10);
        java.util.Properties properties12 = new java.util.Properties(properties10);
        java.lang.Object obj13 = properties12.clone();
        java.util.Set<java.lang.String> strSet14 = properties12.stringPropertyNames();
        java.util.Enumeration<?> wildcardEnumeration15 = properties12.propertyNames();
        java.lang.String str17 = properties12.getProperty("");
        org.junit.Assert.assertNull(obj6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNotNull(obj13);
        org.junit.Assert.assertEquals(obj13.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj13), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj13), "{}");
        org.junit.Assert.assertNotNull(strSet14);
        org.junit.Assert.assertNotNull(wildcardEnumeration15);
        org.junit.Assert.assertNull(str17);
    }

    @Test
    public void test1267() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1267");
        java.util.Properties properties0 = new java.util.Properties();
        java.util.Enumeration<?> wildcardEnumeration1 = properties0.propertyNames();
        java.lang.Object obj2 = properties0.clone();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties3 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties3.setDefaultJtaTimeout((long) (byte) 10);
        atomikosProperties3.setCheckpointInterval((long) (byte) 0);
        atomikosProperties3.setTransactionManagerUniqueName("");
        boolean boolean10 = atomikosProperties3.isEnableLogging();
        java.util.Properties properties11 = atomikosProperties3.asProperties();
        java.util.Properties properties12 = new java.util.Properties(properties11);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties13 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties13.setDefaultJtaTimeout((long) (byte) 10);
        atomikosProperties13.setSerialJtaTransactions(false);
        atomikosProperties13.setMaxTimeout((long) (short) -1);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties20 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties20.setDefaultJtaTimeout((long) (byte) 10);
        atomikosProperties20.setCheckpointInterval((long) (byte) 0);
        atomikosProperties20.setTransactionManagerUniqueName("");
        java.util.Properties properties27 = atomikosProperties20.asProperties();
        java.lang.String str28 = atomikosProperties20.getLogBaseName();
        java.util.Properties properties29 = atomikosProperties20.asProperties();
        java.lang.Object obj30 = properties11.getOrDefault((java.lang.Object) (short) -1, (java.lang.Object) atomikosProperties20);
        long long31 = atomikosProperties20.getCheckpointInterval();
        java.lang.Object obj32 = properties0.remove((java.lang.Object) atomikosProperties20);
        java.util.Properties properties33 = new java.util.Properties(properties0);
        java.util.Properties properties34 = null;
        java.util.Properties properties35 = new java.util.Properties(properties34);
        java.util.Properties properties36 = new java.util.Properties(properties34);
        java.util.Properties properties37 = null;
        java.util.Properties properties38 = new java.util.Properties(properties37);
        java.lang.Object obj40 = properties36.put((java.lang.Object) properties38, (java.lang.Object) (short) 1);
        properties38.clear();
        int int42 = properties38.size();
        java.util.Properties properties43 = null;
        java.util.Properties properties44 = new java.util.Properties(properties43);
        java.util.Properties properties45 = new java.util.Properties(properties43);
        java.util.Properties properties46 = null;
        java.util.Properties properties47 = new java.util.Properties(properties46);
        java.lang.Object obj49 = properties45.put((java.lang.Object) properties47, (java.lang.Object) (short) 1);
        java.util.Properties properties50 = new java.util.Properties(properties47);
        java.util.Properties properties51 = new java.util.Properties(properties47);
        boolean boolean53 = properties38.remove((java.lang.Object) properties47, (java.lang.Object) 10.0f);
        java.util.Enumeration<java.lang.Object> objEnumeration54 = properties47.elements();
        java.util.Enumeration<java.lang.Object> objEnumeration55 = properties47.elements();
        java.util.Properties properties56 = null;
        java.util.Properties properties57 = new java.util.Properties(properties56);
        java.util.Properties properties58 = new java.util.Properties(properties56);
        java.util.Properties properties59 = null;
        java.util.Properties properties60 = new java.util.Properties(properties59);
        java.lang.Object obj62 = properties58.put((java.lang.Object) properties60, (java.lang.Object) (short) 1);
        properties60.clear();
        int int64 = properties60.size();
        java.util.Properties properties65 = null;
        java.util.Properties properties66 = new java.util.Properties(properties65);
        java.util.Properties properties67 = new java.util.Properties(properties65);
        java.util.Properties properties68 = null;
        java.util.Properties properties69 = new java.util.Properties(properties68);
        java.lang.Object obj71 = properties67.put((java.lang.Object) properties69, (java.lang.Object) (short) 1);
        java.util.Properties properties72 = new java.util.Properties(properties69);
        java.util.Properties properties73 = new java.util.Properties(properties69);
        boolean boolean75 = properties60.remove((java.lang.Object) properties69, (java.lang.Object) 10.0f);
        java.util.Enumeration<java.lang.Object> objEnumeration76 = properties69.elements();
        java.util.Properties properties77 = null;
        java.util.Properties properties78 = new java.util.Properties(properties77);
        java.util.Properties properties79 = new java.util.Properties(properties77);
        java.util.Properties properties80 = null;
        java.util.Properties properties81 = new java.util.Properties(properties80);
        java.lang.Object obj83 = properties79.put((java.lang.Object) properties81, (java.lang.Object) (short) 1);
        properties81.clear();
        int int85 = properties81.size();
        java.util.Properties properties86 = new java.util.Properties(properties81);
        properties69.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties86);
        boolean boolean88 = properties0.remove((java.lang.Object) properties47, (java.lang.Object) properties86);
        java.io.OutputStream outputStream89 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties86.storeToXML(outputStream89, "{[]={com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=0, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.tm_unique_name=, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}}");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardEnumeration1);
        org.junit.Assert.assertNotNull(obj2);
        org.junit.Assert.assertEquals(obj2.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj2), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj2), "{}");
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(properties11);
        org.junit.Assert.assertNotNull(properties27);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "tmlog" + "'", str28, "tmlog");
        org.junit.Assert.assertNotNull(properties29);
        org.junit.Assert.assertNotNull(obj30);
        org.junit.Assert.assertTrue("'" + long31 + "' != '" + 0L + "'", long31 == 0L);
        org.junit.Assert.assertNull(obj32);
        org.junit.Assert.assertNull(obj40);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 0 + "'", int42 == 0);
        org.junit.Assert.assertNull(obj49);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertNotNull(objEnumeration54);
        org.junit.Assert.assertNotNull(objEnumeration55);
        org.junit.Assert.assertNull(obj62);
        org.junit.Assert.assertTrue("'" + int64 + "' != '" + 0 + "'", int64 == 0);
        org.junit.Assert.assertNull(obj71);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
        org.junit.Assert.assertNotNull(objEnumeration76);
        org.junit.Assert.assertNull(obj83);
        org.junit.Assert.assertTrue("'" + int85 + "' != '" + 0 + "'", int85 == 0);
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + false + "'", boolean88 == false);
    }

    @Test
    public void test1268() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1268");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Properties properties2 = new java.util.Properties(properties0);
        java.util.Properties properties3 = null;
        java.util.Properties properties4 = new java.util.Properties(properties3);
        java.lang.Object obj6 = properties2.put((java.lang.Object) properties4, (java.lang.Object) (short) 1);
        java.util.Properties properties8 = null;
        java.util.Properties properties9 = new java.util.Properties(properties8);
        java.util.Properties properties10 = new java.util.Properties(properties8);
        java.util.Properties properties11 = null;
        java.util.Properties properties12 = new java.util.Properties(properties11);
        java.lang.Object obj14 = properties10.put((java.lang.Object) properties12, (java.lang.Object) (short) 1);
        boolean boolean15 = properties4.remove((java.lang.Object) false, (java.lang.Object) (short) 1);
        java.lang.Object obj17 = properties4.remove((java.lang.Object) '#');
        java.util.Set<java.lang.Object> objSet18 = properties4.keySet();
        properties4.clear();
        java.util.Properties properties20 = null;
        java.util.Properties properties21 = new java.util.Properties(properties20);
        java.util.Properties properties22 = new java.util.Properties(properties20);
        java.util.Properties properties23 = null;
        java.util.Properties properties24 = new java.util.Properties(properties23);
        java.lang.Object obj26 = properties22.put((java.lang.Object) properties24, (java.lang.Object) (short) 1);
        java.util.Enumeration<java.lang.Object> objEnumeration27 = properties24.elements();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet28 = properties24.entrySet();
        boolean boolean29 = properties4.equals((java.lang.Object) properties24);
        java.lang.Object obj30 = properties4.clone();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties31 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties31.setDefaultJtaTimeout((long) (byte) 10);
        atomikosProperties31.setCheckpointInterval((long) (byte) 0);
        atomikosProperties31.setEnableLogging(true);
        atomikosProperties31.setThreadedTwoPhaseCommit(false);
        boolean boolean40 = atomikosProperties31.isForceShutdownOnVmExit();
        boolean boolean41 = properties4.containsKey((java.lang.Object) atomikosProperties31);
        java.util.Properties properties42 = null;
        java.util.Properties properties43 = new java.util.Properties(properties42);
        java.util.Properties properties44 = new java.util.Properties(properties42);
        java.util.Properties properties45 = null;
        java.util.Properties properties46 = new java.util.Properties(properties45);
        java.lang.Object obj48 = properties44.put((java.lang.Object) properties46, (java.lang.Object) (short) 1);
        java.util.Properties properties50 = null;
        java.util.Properties properties51 = new java.util.Properties(properties50);
        java.util.Properties properties52 = new java.util.Properties(properties50);
        java.util.Properties properties53 = null;
        java.util.Properties properties54 = new java.util.Properties(properties53);
        java.lang.Object obj56 = properties52.put((java.lang.Object) properties54, (java.lang.Object) (short) 1);
        boolean boolean57 = properties46.remove((java.lang.Object) false, (java.lang.Object) (short) 1);
        java.util.Set<java.lang.String> strSet58 = properties46.stringPropertyNames();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties59 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties59.setDefaultJtaTimeout((long) (byte) 10);
        atomikosProperties59.setCheckpointInterval((long) (byte) 0);
        atomikosProperties59.setTransactionManagerUniqueName("");
        boolean boolean66 = atomikosProperties59.isEnableLogging();
        atomikosProperties59.setSerialJtaTransactions(false);
        atomikosProperties59.setLogBaseDir("");
        java.util.Properties properties71 = null;
        java.util.Properties properties72 = new java.util.Properties(properties71);
        java.util.Properties properties73 = new java.util.Properties(properties71);
        java.util.Properties properties74 = null;
        java.util.Properties properties75 = new java.util.Properties(properties74);
        java.lang.Object obj77 = properties73.put((java.lang.Object) properties75, (java.lang.Object) (short) 1);
        java.util.Properties properties78 = new java.util.Properties(properties75);
        boolean boolean79 = properties46.remove((java.lang.Object) "", (java.lang.Object) properties78);
        java.util.Properties properties80 = null;
        java.util.Properties properties81 = new java.util.Properties(properties80);
        java.util.Properties properties82 = new java.util.Properties(properties80);
        java.lang.Object obj83 = properties82.clone();
        boolean boolean84 = properties46.contains(obj83);
        boolean boolean85 = properties4.equals((java.lang.Object) boolean84);
        java.util.Properties properties86 = new java.util.Properties(properties4);
        java.util.Properties properties87 = new java.util.Properties(properties86);
        java.io.OutputStream outputStream88 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties87.storeToXML(outputStream88, "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(obj6);
        org.junit.Assert.assertNull(obj14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNull(obj17);
        org.junit.Assert.assertNotNull(objSet18);
        org.junit.Assert.assertNull(obj26);
        org.junit.Assert.assertNotNull(objEnumeration27);
        org.junit.Assert.assertNotNull(objEntrySet28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNotNull(obj30);
        org.junit.Assert.assertEquals(obj30.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj30), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj30), "{}");
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNull(obj48);
        org.junit.Assert.assertNull(obj56);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertNotNull(strSet58);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66 == true);
        org.junit.Assert.assertNull(obj77);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + false + "'", boolean79 == false);
        org.junit.Assert.assertNotNull(obj83);
        org.junit.Assert.assertEquals(obj83.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj83), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj83), "{}");
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + false + "'", boolean84 == false);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + false + "'", boolean85 == false);
    }

    @Test
    public void test1269() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1269");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Properties properties2 = new java.util.Properties(properties0);
        boolean boolean4 = properties2.containsValue((java.lang.Object) (short) 100);
        java.util.Enumeration<java.lang.Object> objEnumeration5 = properties2.keys();
        java.util.Properties properties6 = null;
        java.util.Properties properties7 = new java.util.Properties(properties6);
        java.util.Properties properties8 = new java.util.Properties(properties6);
        java.util.Properties properties9 = null;
        java.util.Properties properties10 = new java.util.Properties(properties9);
        java.lang.Object obj12 = properties8.put((java.lang.Object) properties10, (java.lang.Object) (short) 1);
        boolean boolean13 = properties8.isEmpty();
        java.util.Properties properties14 = null;
        java.util.Properties properties15 = new java.util.Properties(properties14);
        java.util.Properties properties16 = new java.util.Properties(properties14);
        boolean boolean17 = properties8.containsKey((java.lang.Object) properties16);
        java.util.Properties properties18 = new java.util.Properties(properties16);
        java.lang.Object obj19 = properties18.clone();
        java.lang.Object obj20 = properties2.remove(obj19);
        properties2.clear();
        java.util.Properties properties23 = null;
        java.util.Properties properties24 = new java.util.Properties(properties23);
        java.util.Properties properties25 = new java.util.Properties(properties23);
        java.util.Properties properties26 = null;
        java.util.Properties properties27 = new java.util.Properties(properties26);
        java.lang.Object obj29 = properties25.put((java.lang.Object) properties27, (java.lang.Object) (short) 1);
        java.util.Enumeration<java.lang.Object> objEnumeration30 = properties27.elements();
        java.lang.String str31 = properties27.toString();
        boolean boolean32 = properties2.remove((java.lang.Object) (short) 10, (java.lang.Object) str31);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties33 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties33.setDefaultJtaTimeout((long) (byte) 10);
        long long36 = atomikosProperties33.getDefaultJtaTimeout();
        atomikosProperties33.setTransactionManagerUniqueName("");
        long long39 = atomikosProperties33.getDefaultJtaTimeout();
        boolean boolean40 = atomikosProperties33.isEnableLogging();
        boolean boolean41 = properties2.equals((java.lang.Object) atomikosProperties33);
        atomikosProperties33.setDefaultJtaTimeout(10000L);
        atomikosProperties33.setSerialJtaTransactions(true);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(objEnumeration5);
        org.junit.Assert.assertNull(obj12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(obj19);
        org.junit.Assert.assertEquals(obj19.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj19), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj19), "{}");
        org.junit.Assert.assertNull(obj20);
        org.junit.Assert.assertNull(obj29);
        org.junit.Assert.assertNotNull(objEnumeration30);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "{}" + "'", str31, "{}");
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue("'" + long36 + "' != '" + 10L + "'", long36 == 10L);
        org.junit.Assert.assertTrue("'" + long39 + "' != '" + 10L + "'", long39 == 10L);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
    }

    @Test
    public void test1270() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1270");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        int int1 = atomikosProperties0.getMaxActives();
        java.util.Properties properties2 = atomikosProperties0.asProperties();
        java.util.Properties properties3 = null;
        java.util.Properties properties4 = new java.util.Properties(properties3);
        java.util.Properties properties5 = new java.util.Properties(properties3);
        boolean boolean7 = properties5.containsValue((java.lang.Object) (short) 100);
        java.util.Properties properties8 = null;
        java.util.Properties properties9 = new java.util.Properties(properties8);
        java.util.Properties properties10 = new java.util.Properties(properties8);
        java.util.Properties properties11 = null;
        java.util.Properties properties12 = new java.util.Properties(properties11);
        java.lang.Object obj14 = properties10.put((java.lang.Object) properties12, (java.lang.Object) (short) 1);
        java.util.Enumeration<java.lang.Object> objEnumeration15 = properties12.elements();
        java.lang.Object obj16 = properties5.remove((java.lang.Object) properties12);
        java.util.Properties properties17 = null;
        java.util.Properties properties18 = new java.util.Properties(properties17);
        java.util.Properties properties19 = new java.util.Properties(properties17);
        java.util.Properties properties20 = null;
        java.util.Properties properties21 = new java.util.Properties(properties20);
        java.lang.Object obj23 = properties19.put((java.lang.Object) properties21, (java.lang.Object) (short) 1);
        java.util.Enumeration<java.lang.Object> objEnumeration24 = properties21.elements();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet25 = properties21.entrySet();
        java.util.Set<java.lang.Object> objSet26 = properties21.keySet();
        java.util.Properties properties27 = null;
        java.util.Properties properties28 = new java.util.Properties(properties27);
        java.util.Properties properties29 = new java.util.Properties(properties27);
        java.util.Properties properties30 = null;
        java.util.Properties properties31 = new java.util.Properties(properties30);
        java.lang.Object obj33 = properties29.put((java.lang.Object) properties31, (java.lang.Object) (short) 1);
        properties31.clear();
        int int35 = properties31.size();
        java.util.Properties properties36 = new java.util.Properties(properties31);
        java.util.Properties properties37 = null;
        java.util.Properties properties38 = new java.util.Properties(properties37);
        java.util.Properties properties39 = new java.util.Properties(properties37);
        java.util.Properties properties40 = null;
        java.util.Properties properties41 = new java.util.Properties(properties40);
        java.lang.Object obj43 = properties39.put((java.lang.Object) properties41, (java.lang.Object) (short) 1);
        properties41.clear();
        java.lang.String str46 = properties41.getProperty("");
        java.util.Properties properties47 = null;
        java.util.Properties properties48 = new java.util.Properties(properties47);
        java.util.Properties properties49 = new java.util.Properties(properties47);
        java.util.Properties properties50 = null;
        java.util.Properties properties51 = new java.util.Properties(properties50);
        java.lang.Object obj53 = properties49.put((java.lang.Object) properties51, (java.lang.Object) (short) 1);
        properties41.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties49);
        java.lang.Object obj55 = properties21.put((java.lang.Object) properties31, (java.lang.Object) properties49);
        java.util.Properties properties56 = null;
        java.util.Properties properties57 = new java.util.Properties(properties56);
        java.util.Properties properties58 = new java.util.Properties(properties56);
        java.util.Properties properties59 = null;
        java.util.Properties properties60 = new java.util.Properties(properties59);
        java.lang.Object obj62 = properties58.put((java.lang.Object) properties60, (java.lang.Object) (short) 1);
        java.util.Properties properties63 = new java.util.Properties(properties60);
        java.util.Properties properties64 = new java.util.Properties(properties60);
        java.util.Set<java.lang.Object> objSet65 = properties64.keySet();
        java.lang.Object obj66 = properties5.replace((java.lang.Object) properties21, (java.lang.Object) objSet65);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties67 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        int int68 = atomikosProperties67.getMaxActives();
        long long69 = atomikosProperties67.getMaxTimeout();
        java.util.Properties properties70 = atomikosProperties67.asProperties();
        atomikosProperties67.setService("hi!");
        boolean boolean73 = properties2.remove((java.lang.Object) properties5, (java.lang.Object) "hi!");
        java.util.Properties properties74 = new java.util.Properties(properties5);
        java.util.Properties properties75 = new java.util.Properties(properties74);
        properties74.clear();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 50 + "'", int1 == 50);
        org.junit.Assert.assertNotNull(properties2);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNull(obj14);
        org.junit.Assert.assertNotNull(objEnumeration15);
        org.junit.Assert.assertNull(obj16);
        org.junit.Assert.assertNull(obj23);
        org.junit.Assert.assertNotNull(objEnumeration24);
        org.junit.Assert.assertNotNull(objEntrySet25);
        org.junit.Assert.assertNotNull(objSet26);
        org.junit.Assert.assertNull(obj33);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 0 + "'", int35 == 0);
        org.junit.Assert.assertNull(obj43);
        org.junit.Assert.assertNull(str46);
        org.junit.Assert.assertNull(obj53);
        org.junit.Assert.assertNull(obj55);
        org.junit.Assert.assertNull(obj62);
        org.junit.Assert.assertNotNull(objSet65);
        org.junit.Assert.assertNull(obj66);
        org.junit.Assert.assertTrue("'" + int68 + "' != '" + 50 + "'", int68 == 50);
        org.junit.Assert.assertTrue("'" + long69 + "' != '" + 300000L + "'", long69 == 300000L);
        org.junit.Assert.assertNotNull(properties70);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
    }

    @Test
    public void test1271() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1271");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Properties properties2 = new java.util.Properties(properties0);
        java.lang.Object obj3 = properties2.clone();
        java.util.Properties properties4 = new java.util.Properties(properties2);
        java.io.OutputStream outputStream5 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties2.storeToXML(outputStream5, "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.tm_unique_name=, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}", "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=true, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=true, com.atomikos.icatch.max_actives=35, com.atomikos.icatch.log_base_name=tmlog}");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(obj3);
        org.junit.Assert.assertEquals(obj3.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj3), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj3), "{}");
    }

    @Test
    public void test1272() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1272");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Properties properties2 = new java.util.Properties(properties0);
        java.util.Properties properties3 = null;
        java.util.Properties properties4 = new java.util.Properties(properties3);
        java.lang.Object obj6 = properties2.put((java.lang.Object) properties4, (java.lang.Object) (short) 1);
        properties4.clear();
        int int8 = properties4.size();
        java.util.Properties properties9 = new java.util.Properties(properties4);
        java.lang.Object obj11 = properties4.get((java.lang.Object) (byte) -1);
        properties4.clear();
        java.io.InputStream inputStream13 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties4.loadFromXML(inputStream13);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(obj6);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertNull(obj11);
    }

    @Test
    public void test1273() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1273");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Properties properties2 = new java.util.Properties(properties0);
        boolean boolean4 = properties2.containsValue((java.lang.Object) (short) 100);
        java.lang.Object obj5 = properties2.clone();
        java.util.Enumeration<?> wildcardEnumeration6 = properties2.propertyNames();
        java.lang.Class<?> wildcardClass7 = properties2.getClass();
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(obj5);
        org.junit.Assert.assertEquals(obj5.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj5), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj5), "{}");
        org.junit.Assert.assertNotNull(wildcardEnumeration6);
        org.junit.Assert.assertNotNull(wildcardClass7);
    }

    @Test
    public void test1274() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1274");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Properties properties2 = new java.util.Properties(properties0);
        java.util.Properties properties3 = null;
        java.util.Properties properties4 = new java.util.Properties(properties3);
        java.lang.Object obj6 = properties2.put((java.lang.Object) properties4, (java.lang.Object) (short) 1);
        boolean boolean7 = properties2.isEmpty();
        java.util.Properties properties8 = null;
        java.util.Properties properties9 = new java.util.Properties(properties8);
        java.util.Properties properties10 = new java.util.Properties(properties8);
        boolean boolean11 = properties2.containsKey((java.lang.Object) properties10);
        java.util.Properties properties12 = null;
        java.util.Properties properties13 = new java.util.Properties(properties12);
        java.util.Properties properties14 = new java.util.Properties(properties12);
        java.util.Properties properties15 = null;
        java.util.Properties properties16 = new java.util.Properties(properties15);
        java.lang.Object obj18 = properties14.put((java.lang.Object) properties16, (java.lang.Object) (short) 1);
        java.util.Properties properties20 = null;
        java.util.Properties properties21 = new java.util.Properties(properties20);
        java.util.Properties properties22 = new java.util.Properties(properties20);
        java.util.Properties properties23 = null;
        java.util.Properties properties24 = new java.util.Properties(properties23);
        java.lang.Object obj26 = properties22.put((java.lang.Object) properties24, (java.lang.Object) (short) 1);
        boolean boolean27 = properties16.remove((java.lang.Object) false, (java.lang.Object) (short) 1);
        java.util.Set<java.lang.String> strSet28 = properties16.stringPropertyNames();
        boolean boolean29 = properties10.containsKey((java.lang.Object) strSet28);
        java.util.Properties properties30 = null;
        java.util.Properties properties31 = new java.util.Properties(properties30);
        java.util.Properties properties32 = new java.util.Properties(properties30);
        java.util.Properties properties33 = null;
        java.util.Properties properties34 = new java.util.Properties(properties33);
        java.lang.Object obj36 = properties32.put((java.lang.Object) properties34, (java.lang.Object) (short) 1);
        properties34.clear();
        java.lang.String str39 = properties34.getProperty("");
        java.util.Properties properties40 = null;
        java.util.Properties properties41 = new java.util.Properties(properties40);
        java.util.Properties properties42 = new java.util.Properties(properties40);
        java.util.Properties properties43 = null;
        java.util.Properties properties44 = new java.util.Properties(properties43);
        java.lang.Object obj46 = properties42.put((java.lang.Object) properties44, (java.lang.Object) (short) 1);
        properties34.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties42);
        boolean boolean48 = properties10.containsKey((java.lang.Object) properties34);
        java.util.Properties properties50 = null;
        java.util.Properties properties51 = new java.util.Properties(properties50);
        java.util.Properties properties52 = new java.util.Properties(properties50);
        java.util.Properties properties53 = null;
        java.util.Properties properties54 = new java.util.Properties(properties53);
        java.lang.Object obj56 = properties52.put((java.lang.Object) properties54, (java.lang.Object) (short) 1);
        properties54.clear();
        int int58 = properties54.size();
        java.lang.Object obj61 = properties54.setProperty("hi!", "hi!");
        java.lang.Object obj64 = properties54.setProperty("tmlog", "tmlog");
        java.lang.Object obj65 = properties34.putIfAbsent((java.lang.Object) (short) 10, (java.lang.Object) "tmlog");
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet66 = properties34.entrySet();
        java.util.Properties properties67 = new java.util.Properties(properties34);
        java.util.Set<java.lang.Object> objSet68 = properties67.keySet();
        org.junit.Assert.assertNull(obj6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNull(obj18);
        org.junit.Assert.assertNull(obj26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(strSet28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNull(obj36);
        org.junit.Assert.assertNull(str39);
        org.junit.Assert.assertNull(obj46);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNull(obj56);
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + 0 + "'", int58 == 0);
        org.junit.Assert.assertNull(obj61);
        org.junit.Assert.assertNull(obj64);
        org.junit.Assert.assertNull(obj65);
        org.junit.Assert.assertNotNull(objEntrySet66);
        org.junit.Assert.assertNotNull(objSet68);
    }

    @Test
    public void test1275() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1275");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Properties properties2 = new java.util.Properties(properties0);
        java.util.Properties properties3 = null;
        java.util.Properties properties4 = new java.util.Properties(properties3);
        java.lang.Object obj6 = properties2.put((java.lang.Object) properties4, (java.lang.Object) (short) 1);
        java.util.Properties properties8 = null;
        java.util.Properties properties9 = new java.util.Properties(properties8);
        java.util.Properties properties10 = new java.util.Properties(properties8);
        java.util.Properties properties11 = null;
        java.util.Properties properties12 = new java.util.Properties(properties11);
        java.lang.Object obj14 = properties10.put((java.lang.Object) properties12, (java.lang.Object) (short) 1);
        boolean boolean15 = properties4.remove((java.lang.Object) false, (java.lang.Object) (short) 1);
        java.util.Set<java.lang.String> strSet16 = properties4.stringPropertyNames();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties17 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties17.setDefaultJtaTimeout((long) (byte) 10);
        atomikosProperties17.setCheckpointInterval((long) (byte) 0);
        atomikosProperties17.setTransactionManagerUniqueName("");
        boolean boolean24 = atomikosProperties17.isEnableLogging();
        atomikosProperties17.setSerialJtaTransactions(false);
        atomikosProperties17.setLogBaseDir("");
        java.util.Properties properties29 = null;
        java.util.Properties properties30 = new java.util.Properties(properties29);
        java.util.Properties properties31 = new java.util.Properties(properties29);
        java.util.Properties properties32 = null;
        java.util.Properties properties33 = new java.util.Properties(properties32);
        java.lang.Object obj35 = properties31.put((java.lang.Object) properties33, (java.lang.Object) (short) 1);
        java.util.Properties properties36 = new java.util.Properties(properties33);
        boolean boolean37 = properties4.remove((java.lang.Object) "", (java.lang.Object) properties36);
        java.lang.String str39 = properties4.getProperty("{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.tm_unique_name=, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties40 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties40.setDefaultJtaTimeout((long) (byte) 10);
        atomikosProperties40.setCheckpointInterval((long) (byte) 0);
        atomikosProperties40.setTransactionManagerUniqueName("");
        boolean boolean47 = atomikosProperties40.isEnableLogging();
        atomikosProperties40.setSerialJtaTransactions(false);
        java.lang.Object obj50 = properties4.remove((java.lang.Object) atomikosProperties40);
        int int51 = atomikosProperties40.getMaxActives();
        atomikosProperties40.setTransactionManagerUniqueName("{tmlog={com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=0, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.tm_unique_name=, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}, 4=true}");
        atomikosProperties40.setForceShutdownOnVmExit(false);
        org.junit.Assert.assertNull(obj6);
        org.junit.Assert.assertNull(obj14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(strSet16);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNull(obj35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNull(str39);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertNull(obj50);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + 50 + "'", int51 == 50);
    }

    @Test
    public void test1276() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1276");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setDefaultJtaTimeout((long) (byte) 10);
        atomikosProperties0.setCheckpointInterval((long) (byte) 0);
        atomikosProperties0.setTransactionManagerUniqueName("");
        boolean boolean7 = atomikosProperties0.isEnableLogging();
        long long8 = atomikosProperties0.getDefaultJtaTimeout();
        atomikosProperties0.setForceShutdownOnVmExit(true);
        java.util.Properties properties11 = atomikosProperties0.asProperties();
        atomikosProperties0.setCheckpointInterval(300000L);
        atomikosProperties0.setEnableLogging(true);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertTrue("'" + long8 + "' != '" + 10L + "'", long8 == 10L);
        org.junit.Assert.assertNotNull(properties11);
    }

    @Test
    public void test1277() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1277");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setDefaultJtaTimeout((long) (byte) 10);
        atomikosProperties0.setCheckpointInterval((long) (byte) 0);
        atomikosProperties0.setTransactionManagerUniqueName("");
        java.util.Properties properties7 = atomikosProperties0.asProperties();
        java.util.Properties properties8 = atomikosProperties0.asProperties();
        java.lang.Object obj9 = null;
        boolean boolean10 = properties8.equals(obj9);
        java.io.OutputStream outputStream11 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties8.save(outputStream11, "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=true, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=true, com.atomikos.icatch.max_actives=35, com.atomikos.icatch.log_base_name=tmlog}");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(properties7);
        org.junit.Assert.assertNotNull(properties8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
    }

    @Test
    public void test1278() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1278");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Properties properties2 = new java.util.Properties(properties0);
        boolean boolean4 = properties2.containsValue((java.lang.Object) (short) 100);
        java.util.Properties properties5 = null;
        java.util.Properties properties6 = new java.util.Properties(properties5);
        java.util.Properties properties7 = new java.util.Properties(properties5);
        java.util.Properties properties8 = null;
        java.util.Properties properties9 = new java.util.Properties(properties8);
        java.lang.Object obj11 = properties7.put((java.lang.Object) properties9, (java.lang.Object) (short) 1);
        java.util.Enumeration<java.lang.Object> objEnumeration12 = properties9.elements();
        java.lang.Object obj13 = properties2.remove((java.lang.Object) properties9);
        java.util.Enumeration<java.lang.Object> objEnumeration14 = properties2.keys();
        java.io.InputStream inputStream15 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties2.load(inputStream15);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNull(obj11);
        org.junit.Assert.assertNotNull(objEnumeration12);
        org.junit.Assert.assertNull(obj13);
        org.junit.Assert.assertNotNull(objEnumeration14);
    }

    @Test
    public void test1279() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1279");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setDefaultJtaTimeout((long) (byte) 10);
        atomikosProperties0.setCheckpointInterval((long) (byte) 0);
        atomikosProperties0.setTransactionManagerUniqueName("");
        boolean boolean7 = atomikosProperties0.isEnableLogging();
        java.util.Properties properties8 = atomikosProperties0.asProperties();
        java.util.Properties properties9 = new java.util.Properties(properties8);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties10 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties10.setDefaultJtaTimeout((long) (byte) 10);
        atomikosProperties10.setSerialJtaTransactions(false);
        atomikosProperties10.setMaxTimeout((long) (short) -1);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties17 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties17.setDefaultJtaTimeout((long) (byte) 10);
        atomikosProperties17.setCheckpointInterval((long) (byte) 0);
        atomikosProperties17.setTransactionManagerUniqueName("");
        java.util.Properties properties24 = atomikosProperties17.asProperties();
        java.lang.String str25 = atomikosProperties17.getLogBaseName();
        java.util.Properties properties26 = atomikosProperties17.asProperties();
        java.lang.Object obj27 = properties8.getOrDefault((java.lang.Object) (short) -1, (java.lang.Object) atomikosProperties17);
        long long28 = atomikosProperties17.getCheckpointInterval();
        boolean boolean29 = atomikosProperties17.isEnableLogging();
        atomikosProperties17.setSerialJtaTransactions(false);
        java.lang.String str32 = atomikosProperties17.getService();
        atomikosProperties17.setEnableLogging(true);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(properties8);
        org.junit.Assert.assertNotNull(properties24);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "tmlog" + "'", str25, "tmlog");
        org.junit.Assert.assertNotNull(properties26);
        org.junit.Assert.assertNotNull(obj27);
        org.junit.Assert.assertTrue("'" + long28 + "' != '" + 0L + "'", long28 == 0L);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNull(str32);
    }

    @Test
    public void test1280() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1280");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Properties properties2 = new java.util.Properties(properties0);
        java.util.Properties properties3 = null;
        java.util.Properties properties4 = new java.util.Properties(properties3);
        java.lang.Object obj6 = properties2.put((java.lang.Object) properties4, (java.lang.Object) (short) 1);
        properties4.clear();
        int int8 = properties4.size();
        java.util.Properties properties9 = null;
        java.util.Properties properties10 = new java.util.Properties(properties9);
        java.util.Properties properties11 = new java.util.Properties(properties9);
        java.util.Properties properties12 = null;
        java.util.Properties properties13 = new java.util.Properties(properties12);
        java.lang.Object obj15 = properties11.put((java.lang.Object) properties13, (java.lang.Object) (short) 1);
        java.util.Properties properties16 = new java.util.Properties(properties13);
        java.util.Properties properties17 = new java.util.Properties(properties13);
        boolean boolean19 = properties4.remove((java.lang.Object) properties13, (java.lang.Object) 10.0f);
        java.util.Enumeration<java.lang.Object> objEnumeration20 = properties13.elements();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties21 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties21.setDefaultJtaTimeout((long) (byte) 10);
        atomikosProperties21.setCheckpointInterval((long) (byte) 0);
        long long26 = atomikosProperties21.getMaxTimeout();
        atomikosProperties21.setSerialJtaTransactions(true);
        java.util.Properties properties29 = new java.util.Properties();
        java.util.Enumeration<?> wildcardEnumeration30 = properties29.propertyNames();
        java.lang.Object obj31 = properties13.replace((java.lang.Object) atomikosProperties21, (java.lang.Object) properties29);
        java.lang.String str32 = atomikosProperties21.getTransactionManagerUniqueName();
        long long33 = atomikosProperties21.getDefaultJtaTimeout();
        java.util.Properties properties34 = atomikosProperties21.asProperties();
        java.lang.String str37 = properties34.getProperty("{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.tm_unique_name=, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}", "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.tm_unique_name=, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
        org.junit.Assert.assertNull(obj6);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertNull(obj15);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(objEnumeration20);
        org.junit.Assert.assertTrue("'" + long26 + "' != '" + 300000L + "'", long26 == 300000L);
        org.junit.Assert.assertNotNull(wildcardEnumeration30);
        org.junit.Assert.assertNull(obj31);
        org.junit.Assert.assertNull(str32);
        org.junit.Assert.assertTrue("'" + long33 + "' != '" + 10L + "'", long33 == 10L);
        org.junit.Assert.assertNotNull(properties34);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.tm_unique_name=, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}" + "'", str37, "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.tm_unique_name=, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
    }

    @Test
    public void test1281() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1281");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Properties properties2 = new java.util.Properties(properties0);
        java.util.Properties properties3 = null;
        java.util.Properties properties4 = new java.util.Properties(properties3);
        java.lang.Object obj6 = properties2.put((java.lang.Object) properties4, (java.lang.Object) (short) 1);
        properties4.clear();
        int int8 = properties4.size();
        java.lang.Object obj11 = properties4.setProperty("hi!", "hi!");
        java.lang.Object obj14 = properties4.setProperty("tmlog", "tmlog");
        java.util.Enumeration<java.lang.Object> objEnumeration15 = properties4.elements();
        java.util.Properties properties16 = new java.util.Properties(properties4);
        java.util.Properties properties17 = null;
        java.util.Properties properties18 = new java.util.Properties(properties17);
        java.util.Properties properties19 = new java.util.Properties(properties17);
        java.util.Properties properties20 = null;
        java.util.Properties properties21 = new java.util.Properties(properties20);
        java.lang.Object obj23 = properties19.put((java.lang.Object) properties21, (java.lang.Object) (short) 1);
        boolean boolean24 = properties19.isEmpty();
        java.util.Properties properties25 = null;
        java.util.Properties properties26 = new java.util.Properties(properties25);
        java.util.Properties properties27 = new java.util.Properties(properties25);
        boolean boolean28 = properties19.containsKey((java.lang.Object) properties27);
        java.util.Properties properties29 = new java.util.Properties(properties27);
        java.lang.Object obj30 = properties29.clone();
        java.util.Set<java.lang.String> strSet31 = properties29.stringPropertyNames();
        boolean boolean32 = properties4.containsValue((java.lang.Object) properties29);
        java.io.OutputStream outputStream33 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties29.storeToXML(outputStream33, "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=0, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.tm_unique_name=, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(obj6);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertNull(obj11);
        org.junit.Assert.assertNull(obj14);
        org.junit.Assert.assertNotNull(objEnumeration15);
        org.junit.Assert.assertNull(obj23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNotNull(obj30);
        org.junit.Assert.assertEquals(obj30.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj30), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj30), "{}");
        org.junit.Assert.assertNotNull(strSet31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
    }

    @Test
    public void test1282() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1282");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setDefaultJtaTimeout((long) (byte) 10);
        atomikosProperties0.setCheckpointInterval((long) (byte) 0);
        atomikosProperties0.setTransactionManagerUniqueName("");
        boolean boolean7 = atomikosProperties0.isEnableLogging();
        atomikosProperties0.setCheckpointInterval(500L);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
    }

    @Test
    public void test1283() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1283");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setDefaultJtaTimeout((long) (byte) 10);
        atomikosProperties0.setCheckpointInterval((long) (byte) 0);
        atomikosProperties0.setTransactionManagerUniqueName("");
        java.util.Properties properties7 = atomikosProperties0.asProperties();
        java.lang.String str8 = atomikosProperties0.getLogBaseName();
        java.util.Properties properties9 = atomikosProperties0.asProperties();
        java.util.Enumeration<java.lang.Object> objEnumeration10 = properties9.keys();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties12 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties12.setDefaultJtaTimeout((long) (byte) 10);
        long long15 = atomikosProperties12.getDefaultJtaTimeout();
        atomikosProperties12.setTransactionManagerUniqueName("");
        atomikosProperties12.setCheckpointInterval(100L);
        boolean boolean20 = properties9.remove((java.lang.Object) "hi!", (java.lang.Object) atomikosProperties12);
        java.util.Collection<java.lang.Object> objCollection21 = properties9.values();
        java.util.Properties properties22 = new java.util.Properties();
        java.util.Enumeration<?> wildcardEnumeration23 = properties22.propertyNames();
        java.util.Properties properties25 = null;
        java.util.Properties properties26 = new java.util.Properties(properties25);
        java.util.Properties properties27 = new java.util.Properties(properties25);
        java.util.Properties properties28 = null;
        java.util.Properties properties29 = new java.util.Properties(properties28);
        java.lang.Object obj31 = properties27.put((java.lang.Object) properties29, (java.lang.Object) (short) 1);
        java.util.Properties properties32 = new java.util.Properties(properties29);
        java.util.Enumeration<java.lang.Object> objEnumeration33 = properties32.elements();
        java.lang.Object obj34 = properties22.put((java.lang.Object) (-1.0f), (java.lang.Object) objEnumeration33);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties35 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties35.setDefaultJtaTimeout((long) (byte) 10);
        atomikosProperties35.setCheckpointInterval((long) (byte) 0);
        atomikosProperties35.setTransactionManagerUniqueName("");
        boolean boolean42 = atomikosProperties35.isEnableLogging();
        java.util.Properties properties43 = atomikosProperties35.asProperties();
        java.util.Enumeration<java.lang.Object> objEnumeration44 = properties43.keys();
        boolean boolean45 = properties22.contains((java.lang.Object) objEnumeration44);
        java.util.Properties properties46 = new java.util.Properties(properties22);
        java.util.Properties properties47 = null;
        java.util.Properties properties48 = new java.util.Properties(properties47);
        java.util.Properties properties49 = new java.util.Properties(properties47);
        java.util.Properties properties50 = null;
        java.util.Properties properties51 = new java.util.Properties(properties50);
        java.lang.Object obj53 = properties49.put((java.lang.Object) properties51, (java.lang.Object) (short) 1);
        properties51.clear();
        int int55 = properties51.size();
        java.util.Properties properties56 = null;
        java.util.Properties properties57 = new java.util.Properties(properties56);
        java.util.Properties properties58 = new java.util.Properties(properties56);
        java.util.Properties properties59 = null;
        java.util.Properties properties60 = new java.util.Properties(properties59);
        java.lang.Object obj62 = properties58.put((java.lang.Object) properties60, (java.lang.Object) (short) 1);
        java.util.Properties properties63 = new java.util.Properties(properties60);
        java.util.Properties properties64 = new java.util.Properties(properties60);
        boolean boolean66 = properties51.remove((java.lang.Object) properties60, (java.lang.Object) 10.0f);
        java.util.Enumeration<java.lang.Object> objEnumeration67 = properties60.elements();
        java.util.Enumeration<java.lang.Object> objEnumeration68 = properties60.elements();
        java.lang.Object obj69 = properties9.put((java.lang.Object) properties46, (java.lang.Object) properties60);
        java.util.Properties properties70 = new java.util.Properties(properties60);
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet71 = properties60.entrySet();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties72 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties72.setDefaultJtaTimeout((long) (byte) 10);
        atomikosProperties72.setCheckpointInterval((long) (byte) 0);
        atomikosProperties72.setTransactionManagerUniqueName("");
        boolean boolean79 = atomikosProperties72.isEnableLogging();
        atomikosProperties72.setLogBaseDir("hi!");
        atomikosProperties72.setForceShutdownOnVmExit(false);
        java.util.Properties properties84 = atomikosProperties72.asProperties();
        atomikosProperties72.setEnableLogging(false);
        boolean boolean87 = properties60.containsKey((java.lang.Object) false);
        java.util.Enumeration<java.lang.Object> objEnumeration88 = properties60.elements();
        org.junit.Assert.assertNotNull(properties7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "tmlog" + "'", str8, "tmlog");
        org.junit.Assert.assertNotNull(properties9);
        org.junit.Assert.assertNotNull(objEnumeration10);
        org.junit.Assert.assertTrue("'" + long15 + "' != '" + 10L + "'", long15 == 10L);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(objCollection21);
        org.junit.Assert.assertNotNull(wildcardEnumeration23);
        org.junit.Assert.assertNull(obj31);
        org.junit.Assert.assertNotNull(objEnumeration33);
        org.junit.Assert.assertNull(obj34);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertNotNull(properties43);
        org.junit.Assert.assertNotNull(objEnumeration44);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNull(obj53);
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + 0 + "'", int55 == 0);
        org.junit.Assert.assertNull(obj62);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertNotNull(objEnumeration67);
        org.junit.Assert.assertNotNull(objEnumeration68);
        org.junit.Assert.assertNull(obj69);
        org.junit.Assert.assertNotNull(objEntrySet71);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + true + "'", boolean79 == true);
        org.junit.Assert.assertNotNull(properties84);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + false + "'", boolean87 == false);
        org.junit.Assert.assertNotNull(objEnumeration88);
    }

    @Test
    public void test1284() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1284");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setDefaultJtaTimeout((long) (byte) 10);
        atomikosProperties0.setCheckpointInterval((long) (byte) 0);
        atomikosProperties0.setTransactionManagerUniqueName("");
        boolean boolean7 = atomikosProperties0.isEnableLogging();
        long long8 = atomikosProperties0.getDefaultJtaTimeout();
        atomikosProperties0.setForceShutdownOnVmExit(true);
        atomikosProperties0.setSerialJtaTransactions(true);
        atomikosProperties0.setForceShutdownOnVmExit(false);
        java.util.Properties properties15 = atomikosProperties0.asProperties();
        java.util.Properties properties16 = atomikosProperties0.asProperties();
        boolean boolean17 = atomikosProperties0.isForceShutdownOnVmExit();
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertTrue("'" + long8 + "' != '" + 10L + "'", long8 == 10L);
        org.junit.Assert.assertNotNull(properties15);
        org.junit.Assert.assertNotNull(properties16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
    }

    @Test
    public void test1285() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1285");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setDefaultJtaTimeout((long) (byte) 10);
        atomikosProperties0.setCheckpointInterval((long) (byte) 0);
        long long5 = atomikosProperties0.getMaxTimeout();
        atomikosProperties0.setSerialJtaTransactions(true);
        atomikosProperties0.setCheckpointInterval((long) (short) 100);
        boolean boolean10 = atomikosProperties0.isEnableLogging();
        java.util.Properties properties11 = atomikosProperties0.asProperties();
        boolean boolean12 = atomikosProperties0.isSerialJtaTransactions();
        org.junit.Assert.assertTrue("'" + long5 + "' != '" + 300000L + "'", long5 == 300000L);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(properties11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
    }

    @Test
    public void test1286() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1286");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setThreadedTwoPhaseCommit(true);
        atomikosProperties0.setMaxActives((int) '#');
        atomikosProperties0.setEnableLogging(true);
        int int7 = atomikosProperties0.getMaxActives();
        boolean boolean8 = atomikosProperties0.isEnableLogging();
        java.util.Properties properties9 = atomikosProperties0.asProperties();
        java.util.Properties properties10 = atomikosProperties0.asProperties();
        java.util.Properties properties11 = atomikosProperties0.asProperties();
        atomikosProperties0.setService("{com.atomikos.icatch.enable_logging=false, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=true, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 35 + "'", int7 == 35);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(properties9);
        org.junit.Assert.assertNotNull(properties10);
        org.junit.Assert.assertNotNull(properties11);
    }

    @Test
    public void test1287() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1287");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        int int1 = atomikosProperties0.getMaxActives();
        long long2 = atomikosProperties0.getMaxTimeout();
        java.util.Properties properties3 = atomikosProperties0.asProperties();
        java.util.Properties properties4 = atomikosProperties0.asProperties();
        java.util.Properties properties5 = null;
        java.util.Properties properties6 = new java.util.Properties(properties5);
        java.util.Properties properties7 = new java.util.Properties(properties5);
        boolean boolean9 = properties7.containsValue((java.lang.Object) (short) 100);
        java.util.Properties properties10 = null;
        java.util.Properties properties11 = new java.util.Properties(properties10);
        java.util.Properties properties12 = new java.util.Properties(properties10);
        java.util.Properties properties13 = null;
        java.util.Properties properties14 = new java.util.Properties(properties13);
        java.lang.Object obj16 = properties12.put((java.lang.Object) properties14, (java.lang.Object) (short) 1);
        java.util.Enumeration<java.lang.Object> objEnumeration17 = properties14.elements();
        java.lang.Object obj18 = properties7.remove((java.lang.Object) properties14);
        boolean boolean19 = properties14.isEmpty();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet20 = properties14.entrySet();
        java.util.Properties properties21 = new java.util.Properties(properties14);
        boolean boolean22 = properties4.contains((java.lang.Object) properties21);
        java.io.Writer writer23 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties4.store(writer23, "");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 50 + "'", int1 == 50);
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + 300000L + "'", long2 == 300000L);
        org.junit.Assert.assertNotNull(properties3);
        org.junit.Assert.assertNotNull(properties4);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNull(obj16);
        org.junit.Assert.assertNotNull(objEnumeration17);
        org.junit.Assert.assertNull(obj18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(objEntrySet20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
    }

    @Test
    public void test1288() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1288");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Properties properties2 = new java.util.Properties(properties0);
        java.util.Properties properties3 = null;
        java.util.Properties properties4 = new java.util.Properties(properties3);
        java.lang.Object obj6 = properties2.put((java.lang.Object) properties4, (java.lang.Object) (short) 1);
        properties4.clear();
        int int8 = properties4.size();
        java.util.Properties properties9 = null;
        java.util.Properties properties10 = new java.util.Properties(properties9);
        java.util.Properties properties11 = new java.util.Properties(properties9);
        java.util.Properties properties12 = null;
        java.util.Properties properties13 = new java.util.Properties(properties12);
        java.lang.Object obj15 = properties11.put((java.lang.Object) properties13, (java.lang.Object) (short) 1);
        java.util.Properties properties16 = new java.util.Properties(properties13);
        java.util.Properties properties17 = new java.util.Properties(properties13);
        boolean boolean19 = properties4.remove((java.lang.Object) properties13, (java.lang.Object) 10.0f);
        java.util.Enumeration<java.lang.Object> objEnumeration20 = properties13.elements();
        java.util.Properties properties21 = new java.util.Properties(properties13);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties22 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        int int23 = atomikosProperties22.getMaxActives();
        long long24 = atomikosProperties22.getMaxTimeout();
        java.util.Properties properties25 = atomikosProperties22.asProperties();
        int int26 = atomikosProperties22.getMaxActives();
        java.lang.Object obj28 = properties21.putIfAbsent((java.lang.Object) atomikosProperties22, (java.lang.Object) 1);
        atomikosProperties22.setLogBaseDir("{}");
        atomikosProperties22.setDefaultJtaTimeout((long) (short) 10);
        boolean boolean33 = atomikosProperties22.isEnableLogging();
        int int34 = atomikosProperties22.getMaxActives();
        long long35 = atomikosProperties22.getCheckpointInterval();
        int int36 = atomikosProperties22.getMaxActives();
        org.junit.Assert.assertNull(obj6);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertNull(obj15);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(objEnumeration20);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 50 + "'", int23 == 50);
        org.junit.Assert.assertTrue("'" + long24 + "' != '" + 300000L + "'", long24 == 300000L);
        org.junit.Assert.assertNotNull(properties25);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 50 + "'", int26 == 50);
        org.junit.Assert.assertNull(obj28);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 50 + "'", int34 == 50);
        org.junit.Assert.assertTrue("'" + long35 + "' != '" + 500L + "'", long35 == 500L);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 50 + "'", int36 == 50);
    }

    @Test
    public void test1289() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1289");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setDefaultJtaTimeout((long) (byte) 10);
        atomikosProperties0.setCheckpointInterval((long) (byte) 0);
        atomikosProperties0.setTransactionManagerUniqueName("");
        java.util.Properties properties7 = atomikosProperties0.asProperties();
        java.lang.String str8 = atomikosProperties0.getLogBaseName();
        atomikosProperties0.setCheckpointInterval(100L);
        atomikosProperties0.setLogBaseName("");
        atomikosProperties0.setCheckpointInterval((long) (byte) 1);
        boolean boolean15 = atomikosProperties0.isSerialJtaTransactions();
        java.util.Properties properties16 = atomikosProperties0.asProperties();
        java.io.InputStream inputStream17 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties16.loadFromXML(inputStream17);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(properties7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "tmlog" + "'", str8, "tmlog");
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(properties16);
    }

    @Test
    public void test1290() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1290");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Properties properties2 = new java.util.Properties(properties0);
        java.util.Properties properties3 = null;
        java.util.Properties properties4 = new java.util.Properties(properties3);
        java.lang.Object obj6 = properties2.put((java.lang.Object) properties4, (java.lang.Object) (short) 1);
        java.util.Properties properties8 = null;
        java.util.Properties properties9 = new java.util.Properties(properties8);
        java.util.Properties properties10 = new java.util.Properties(properties8);
        java.util.Properties properties11 = null;
        java.util.Properties properties12 = new java.util.Properties(properties11);
        java.lang.Object obj14 = properties10.put((java.lang.Object) properties12, (java.lang.Object) (short) 1);
        boolean boolean15 = properties4.remove((java.lang.Object) false, (java.lang.Object) (short) 1);
        java.util.Enumeration<java.lang.Object> objEnumeration16 = properties4.keys();
        java.util.Properties properties17 = null;
        java.util.Properties properties18 = new java.util.Properties(properties17);
        java.util.Properties properties19 = new java.util.Properties(properties17);
        java.util.Properties properties20 = null;
        java.util.Properties properties21 = new java.util.Properties(properties20);
        java.lang.Object obj23 = properties19.put((java.lang.Object) properties21, (java.lang.Object) (short) 1);
        boolean boolean24 = properties19.isEmpty();
        java.util.Properties properties25 = null;
        java.util.Properties properties26 = new java.util.Properties(properties25);
        java.util.Properties properties27 = new java.util.Properties(properties25);
        boolean boolean28 = properties19.containsKey((java.lang.Object) properties27);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties29 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties29.setThreadedTwoPhaseCommit(true);
        atomikosProperties29.setMaxActives((int) (byte) 0);
        java.lang.Object obj34 = properties4.getOrDefault((java.lang.Object) boolean28, (java.lang.Object) (byte) 0);
        java.util.Set<java.lang.String> strSet35 = properties4.stringPropertyNames();
        java.util.Properties properties36 = null;
        java.util.Properties properties37 = new java.util.Properties(properties36);
        int int38 = properties37.size();
        boolean boolean39 = properties4.contains((java.lang.Object) int38);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties40 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties40.setDefaultJtaTimeout((long) (byte) 10);
        long long43 = atomikosProperties40.getDefaultJtaTimeout();
        atomikosProperties40.setTransactionManagerUniqueName("hi!");
        atomikosProperties40.setSerialJtaTransactions(true);
        java.util.Properties properties48 = atomikosProperties40.asProperties();
        java.util.Properties properties49 = null;
        java.util.Properties properties50 = new java.util.Properties(properties49);
        java.util.Properties properties51 = new java.util.Properties(properties49);
        java.util.Properties properties52 = null;
        java.util.Properties properties53 = new java.util.Properties(properties52);
        java.lang.Object obj55 = properties51.put((java.lang.Object) properties53, (java.lang.Object) (short) 1);
        boolean boolean56 = properties51.isEmpty();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties57 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties57.setDefaultJtaTimeout((long) (byte) 10);
        atomikosProperties57.setCheckpointInterval((long) (byte) 0);
        atomikosProperties57.setTransactionManagerUniqueName("");
        java.util.Properties properties64 = atomikosProperties57.asProperties();
        java.lang.Object obj65 = properties51.remove((java.lang.Object) properties64);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties66 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties66.setDefaultJtaTimeout((long) (byte) 10);
        atomikosProperties66.setCheckpointInterval((long) (byte) 0);
        atomikosProperties66.setTransactionManagerUniqueName("");
        java.lang.Object obj73 = properties64.remove((java.lang.Object) atomikosProperties66);
        java.util.Enumeration<java.lang.Object> objEnumeration74 = properties64.keys();
        java.lang.Object obj75 = properties4.replace((java.lang.Object) atomikosProperties40, (java.lang.Object) objEnumeration74);
        java.util.Properties properties76 = new java.util.Properties(properties4);
        java.util.Set<java.lang.Object> objSet77 = properties4.keySet();
        org.junit.Assert.assertNull(obj6);
        org.junit.Assert.assertNull(obj14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(objEnumeration16);
        org.junit.Assert.assertNull(obj23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertEquals("'" + obj34 + "' != '" + (byte) 0 + "'", obj34, (byte) 0);
        org.junit.Assert.assertNotNull(strSet35);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 0 + "'", int38 == 0);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertTrue("'" + long43 + "' != '" + 10L + "'", long43 == 10L);
        org.junit.Assert.assertNotNull(properties48);
        org.junit.Assert.assertNull(obj55);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertNotNull(properties64);
        org.junit.Assert.assertNull(obj65);
        org.junit.Assert.assertNull(obj73);
        org.junit.Assert.assertNotNull(objEnumeration74);
        org.junit.Assert.assertNull(obj75);
        org.junit.Assert.assertNotNull(objSet77);
    }

    @Test
    public void test1291() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1291");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Properties properties2 = new java.util.Properties(properties0);
        java.util.Properties properties3 = null;
        java.util.Properties properties4 = new java.util.Properties(properties3);
        java.lang.Object obj6 = properties2.put((java.lang.Object) properties4, (java.lang.Object) (short) 1);
        properties4.clear();
        java.util.Properties properties8 = null;
        java.util.Properties properties9 = new java.util.Properties(properties8);
        java.util.Properties properties10 = new java.util.Properties(properties8);
        java.util.Properties properties11 = null;
        java.util.Properties properties12 = new java.util.Properties(properties11);
        java.lang.Object obj14 = properties10.put((java.lang.Object) properties12, (java.lang.Object) (short) 1);
        java.util.Collection<java.lang.Object> objCollection15 = properties12.values();
        boolean boolean16 = properties4.containsKey((java.lang.Object) objCollection15);
        boolean boolean17 = properties4.isEmpty();
        java.util.Properties properties18 = new java.util.Properties(properties4);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties19 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties19.setDefaultJtaTimeout((long) (byte) 10);
        atomikosProperties19.setCheckpointInterval((long) (byte) 0);
        atomikosProperties19.setTransactionManagerUniqueName("");
        java.util.Properties properties26 = atomikosProperties19.asProperties();
        java.util.Properties properties27 = atomikosProperties19.asProperties();
        java.util.Properties properties28 = new java.util.Properties(properties27);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties29 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties29.setDefaultJtaTimeout((long) (byte) 10);
        long long32 = atomikosProperties29.getDefaultJtaTimeout();
        atomikosProperties29.setTransactionManagerUniqueName("");
        boolean boolean35 = atomikosProperties29.isEnableLogging();
        java.lang.String str36 = atomikosProperties29.getLogBaseDir();
        java.util.Properties properties37 = atomikosProperties29.asProperties();
        boolean boolean38 = atomikosProperties29.isEnableLogging();
        long long39 = atomikosProperties29.getDefaultJtaTimeout();
        atomikosProperties29.setMaxActives((int) (short) 10);
        long long42 = atomikosProperties29.getMaxTimeout();
        java.lang.Object obj43 = properties18.putIfAbsent((java.lang.Object) properties27, (java.lang.Object) long42);
        java.io.Reader reader44 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties27.load(reader44);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(obj6);
        org.junit.Assert.assertNull(obj14);
        org.junit.Assert.assertNotNull(objCollection15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(properties26);
        org.junit.Assert.assertNotNull(properties27);
        org.junit.Assert.assertTrue("'" + long32 + "' != '" + 10L + "'", long32 == 10L);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertNull(str36);
        org.junit.Assert.assertNotNull(properties37);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertTrue("'" + long39 + "' != '" + 10L + "'", long39 == 10L);
        org.junit.Assert.assertTrue("'" + long42 + "' != '" + 300000L + "'", long42 == 300000L);
        org.junit.Assert.assertNull(obj43);
    }

    @Test
    public void test1292() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1292");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Properties properties2 = new java.util.Properties(properties0);
        java.util.Properties properties3 = null;
        java.util.Properties properties4 = new java.util.Properties(properties3);
        java.lang.Object obj6 = properties2.put((java.lang.Object) properties4, (java.lang.Object) (short) 1);
        java.util.Properties properties8 = null;
        java.util.Properties properties9 = new java.util.Properties(properties8);
        java.util.Properties properties10 = new java.util.Properties(properties8);
        java.util.Properties properties11 = null;
        java.util.Properties properties12 = new java.util.Properties(properties11);
        java.lang.Object obj14 = properties10.put((java.lang.Object) properties12, (java.lang.Object) (short) 1);
        boolean boolean15 = properties4.remove((java.lang.Object) false, (java.lang.Object) (short) 1);
        java.util.Set<java.lang.String> strSet16 = properties4.stringPropertyNames();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties17 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties17.setDefaultJtaTimeout((long) (byte) 10);
        long long20 = atomikosProperties17.getDefaultJtaTimeout();
        java.lang.Object obj21 = properties4.get((java.lang.Object) atomikosProperties17);
        atomikosProperties17.setCheckpointInterval((long) (short) 100);
        java.util.Properties properties24 = atomikosProperties17.asProperties();
        java.util.Enumeration<?> wildcardEnumeration25 = properties24.propertyNames();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet26 = properties24.entrySet();
        java.util.Properties properties27 = new java.util.Properties(properties24);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties28 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties28.setDefaultJtaTimeout((long) (byte) 10);
        atomikosProperties28.setCheckpointInterval((long) (byte) 0);
        atomikosProperties28.setTransactionManagerUniqueName("");
        boolean boolean35 = atomikosProperties28.isEnableLogging();
        java.util.Properties properties36 = atomikosProperties28.asProperties();
        java.util.Properties properties37 = new java.util.Properties(properties36);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties38 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties38.setDefaultJtaTimeout((long) (byte) 10);
        atomikosProperties38.setSerialJtaTransactions(false);
        atomikosProperties38.setMaxTimeout((long) (short) -1);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties45 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties45.setDefaultJtaTimeout((long) (byte) 10);
        atomikosProperties45.setCheckpointInterval((long) (byte) 0);
        atomikosProperties45.setTransactionManagerUniqueName("");
        java.util.Properties properties52 = atomikosProperties45.asProperties();
        java.lang.String str53 = atomikosProperties45.getLogBaseName();
        java.util.Properties properties54 = atomikosProperties45.asProperties();
        java.lang.Object obj55 = properties36.getOrDefault((java.lang.Object) (short) -1, (java.lang.Object) atomikosProperties45);
        long long56 = atomikosProperties45.getCheckpointInterval();
        boolean boolean57 = atomikosProperties45.isEnableLogging();
        atomikosProperties45.setService("{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.tm_unique_name=, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
        java.lang.Class<?> wildcardClass60 = atomikosProperties45.getClass();
        boolean boolean61 = properties24.equals((java.lang.Object) atomikosProperties45);
        java.io.PrintStream printStream62 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties24.list(printStream62);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(obj6);
        org.junit.Assert.assertNull(obj14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(strSet16);
        org.junit.Assert.assertTrue("'" + long20 + "' != '" + 10L + "'", long20 == 10L);
        org.junit.Assert.assertNull(obj21);
        org.junit.Assert.assertNotNull(properties24);
        org.junit.Assert.assertNotNull(wildcardEnumeration25);
        org.junit.Assert.assertNotNull(objEntrySet26);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertNotNull(properties36);
        org.junit.Assert.assertNotNull(properties52);
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "tmlog" + "'", str53, "tmlog");
        org.junit.Assert.assertNotNull(properties54);
        org.junit.Assert.assertNotNull(obj55);
        org.junit.Assert.assertTrue("'" + long56 + "' != '" + 0L + "'", long56 == 0L);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertNotNull(wildcardClass60);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
    }

    @Test
    public void test1293() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1293");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setThreadedTwoPhaseCommit(true);
        boolean boolean3 = atomikosProperties0.isEnableLogging();
        atomikosProperties0.setCheckpointInterval((long) 35);
        atomikosProperties0.setDefaultJtaTimeout((long) (byte) 0);
        java.lang.String str8 = atomikosProperties0.getLogBaseName();
        atomikosProperties0.setTransactionManagerUniqueName("{tmlog={com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=0, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.tm_unique_name=, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}, 4=true}");
        atomikosProperties0.setMaxActives(11);
        atomikosProperties0.setMaxActives((int) (byte) -1);
        atomikosProperties0.setEnableLogging(false);
        atomikosProperties0.setLogBaseName("{=}");
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "tmlog" + "'", str8, "tmlog");
    }

    @Test
    public void test1294() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1294");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        boolean boolean1 = atomikosProperties0.isSerialJtaTransactions();
        java.lang.String str2 = atomikosProperties0.getService();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertNull(str2);
    }

    @Test
    public void test1295() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1295");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Properties properties2 = new java.util.Properties(properties0);
        java.util.Properties properties3 = null;
        java.util.Properties properties4 = new java.util.Properties(properties3);
        java.lang.Object obj6 = properties2.put((java.lang.Object) properties4, (java.lang.Object) (short) 1);
        boolean boolean7 = properties2.isEmpty();
        java.util.Properties properties8 = null;
        java.util.Properties properties9 = new java.util.Properties(properties8);
        java.util.Properties properties10 = new java.util.Properties(properties8);
        boolean boolean11 = properties2.containsKey((java.lang.Object) properties10);
        java.util.Properties properties12 = null;
        java.util.Properties properties13 = new java.util.Properties(properties12);
        java.util.Properties properties14 = new java.util.Properties(properties12);
        java.util.Properties properties15 = null;
        java.util.Properties properties16 = new java.util.Properties(properties15);
        java.lang.Object obj18 = properties14.put((java.lang.Object) properties16, (java.lang.Object) (short) 1);
        java.util.Properties properties20 = null;
        java.util.Properties properties21 = new java.util.Properties(properties20);
        java.util.Properties properties22 = new java.util.Properties(properties20);
        java.util.Properties properties23 = null;
        java.util.Properties properties24 = new java.util.Properties(properties23);
        java.lang.Object obj26 = properties22.put((java.lang.Object) properties24, (java.lang.Object) (short) 1);
        boolean boolean27 = properties16.remove((java.lang.Object) false, (java.lang.Object) (short) 1);
        java.util.Set<java.lang.String> strSet28 = properties16.stringPropertyNames();
        boolean boolean29 = properties10.containsKey((java.lang.Object) strSet28);
        java.util.Properties properties30 = null;
        java.util.Properties properties31 = new java.util.Properties(properties30);
        java.util.Properties properties32 = new java.util.Properties(properties30);
        java.util.Properties properties33 = null;
        java.util.Properties properties34 = new java.util.Properties(properties33);
        java.lang.Object obj36 = properties32.put((java.lang.Object) properties34, (java.lang.Object) (short) 1);
        properties34.clear();
        java.lang.String str39 = properties34.getProperty("");
        java.util.Properties properties40 = null;
        java.util.Properties properties41 = new java.util.Properties(properties40);
        java.util.Properties properties42 = new java.util.Properties(properties40);
        java.util.Properties properties43 = null;
        java.util.Properties properties44 = new java.util.Properties(properties43);
        java.lang.Object obj46 = properties42.put((java.lang.Object) properties44, (java.lang.Object) (short) 1);
        properties34.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties42);
        boolean boolean48 = properties10.containsKey((java.lang.Object) properties34);
        boolean boolean50 = properties34.contains((java.lang.Object) "hi!");
        properties34.clear();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet52 = properties34.entrySet();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties53 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties53.setDefaultJtaTimeout((long) (byte) 10);
        atomikosProperties53.setSerialJtaTransactions(false);
        atomikosProperties53.setService("{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.tm_unique_name=, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
        atomikosProperties53.setService("tmlog");
        atomikosProperties53.setMaxTimeout((long) 1);
        java.util.Properties properties64 = null;
        java.util.Properties properties65 = new java.util.Properties(properties64);
        java.util.Properties properties66 = new java.util.Properties(properties64);
        java.util.Properties properties67 = null;
        java.util.Properties properties68 = new java.util.Properties(properties67);
        java.lang.Object obj70 = properties66.put((java.lang.Object) properties68, (java.lang.Object) (short) 1);
        properties68.clear();
        int int72 = properties68.size();
        java.util.Properties properties73 = new java.util.Properties(properties68);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties74 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        int int75 = atomikosProperties74.getMaxActives();
        long long76 = atomikosProperties74.getMaxTimeout();
        java.util.Properties properties77 = atomikosProperties74.asProperties();
        java.util.Properties properties78 = atomikosProperties74.asProperties();
        java.util.Properties properties79 = null;
        java.util.Properties properties80 = new java.util.Properties(properties79);
        java.util.Properties properties81 = new java.util.Properties(properties79);
        java.util.Properties properties82 = null;
        java.util.Properties properties83 = new java.util.Properties(properties82);
        java.lang.Object obj85 = properties81.put((java.lang.Object) properties83, (java.lang.Object) (short) 1);
        java.util.Enumeration<java.lang.Object> objEnumeration86 = properties83.elements();
        java.lang.Object obj87 = properties68.replace((java.lang.Object) atomikosProperties74, (java.lang.Object) properties83);
        java.util.Set<java.lang.String> strSet88 = properties68.stringPropertyNames();
        properties68.clear();
        java.util.Properties properties90 = new java.util.Properties(properties68);
        java.lang.Object obj91 = properties34.put((java.lang.Object) atomikosProperties53, (java.lang.Object) properties90);
        java.io.OutputStream outputStream92 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties90.save(outputStream92, "{=}");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(obj6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNull(obj18);
        org.junit.Assert.assertNull(obj26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(strSet28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNull(obj36);
        org.junit.Assert.assertNull(str39);
        org.junit.Assert.assertNull(obj46);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertNotNull(objEntrySet52);
        org.junit.Assert.assertNull(obj70);
        org.junit.Assert.assertTrue("'" + int72 + "' != '" + 0 + "'", int72 == 0);
        org.junit.Assert.assertTrue("'" + int75 + "' != '" + 50 + "'", int75 == 50);
        org.junit.Assert.assertTrue("'" + long76 + "' != '" + 300000L + "'", long76 == 300000L);
        org.junit.Assert.assertNotNull(properties77);
        org.junit.Assert.assertNotNull(properties78);
        org.junit.Assert.assertNull(obj85);
        org.junit.Assert.assertNotNull(objEnumeration86);
        org.junit.Assert.assertNull(obj87);
        org.junit.Assert.assertNotNull(strSet88);
        org.junit.Assert.assertNull(obj91);
    }

    @Test
    public void test1296() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1296");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setDefaultJtaTimeout((long) (byte) 10);
        long long3 = atomikosProperties0.getDefaultJtaTimeout();
        atomikosProperties0.setTransactionManagerUniqueName("");
        boolean boolean6 = atomikosProperties0.isEnableLogging();
        atomikosProperties0.setDefaultJtaTimeout((long) '4');
        java.lang.String str9 = atomikosProperties0.getTransactionManagerUniqueName();
        atomikosProperties0.setThreadedTwoPhaseCommit(true);
        java.util.Properties properties12 = atomikosProperties0.asProperties();
        java.util.Properties properties13 = new java.util.Properties(properties12);
        java.util.Enumeration<?> wildcardEnumeration14 = properties13.propertyNames();
        java.util.Set<java.lang.Object> objSet15 = properties13.keySet();
        java.io.OutputStream outputStream16 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties13.storeToXML(outputStream16, "{com.atomikos.icatch.enable_logging=false, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=true, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}", "{tmlog=}");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + long3 + "' != '" + 10L + "'", long3 == 10L);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "" + "'", str9, "");
        org.junit.Assert.assertNotNull(properties12);
        org.junit.Assert.assertNotNull(wildcardEnumeration14);
        org.junit.Assert.assertNotNull(objSet15);
    }

    @Test
    public void test1297() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1297");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Properties properties2 = new java.util.Properties(properties0);
        java.util.Properties properties3 = null;
        java.util.Properties properties4 = new java.util.Properties(properties3);
        java.lang.Object obj6 = properties2.put((java.lang.Object) properties4, (java.lang.Object) (short) 1);
        java.util.Properties properties8 = null;
        java.util.Properties properties9 = new java.util.Properties(properties8);
        java.util.Properties properties10 = new java.util.Properties(properties8);
        java.util.Properties properties11 = null;
        java.util.Properties properties12 = new java.util.Properties(properties11);
        java.lang.Object obj14 = properties10.put((java.lang.Object) properties12, (java.lang.Object) (short) 1);
        boolean boolean15 = properties4.remove((java.lang.Object) false, (java.lang.Object) (short) 1);
        java.util.Set<java.lang.String> strSet16 = properties4.stringPropertyNames();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties17 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties17.setDefaultJtaTimeout((long) (byte) 10);
        atomikosProperties17.setCheckpointInterval((long) (byte) 0);
        atomikosProperties17.setTransactionManagerUniqueName("");
        boolean boolean24 = atomikosProperties17.isEnableLogging();
        atomikosProperties17.setSerialJtaTransactions(false);
        atomikosProperties17.setLogBaseDir("");
        java.util.Properties properties29 = null;
        java.util.Properties properties30 = new java.util.Properties(properties29);
        java.util.Properties properties31 = new java.util.Properties(properties29);
        java.util.Properties properties32 = null;
        java.util.Properties properties33 = new java.util.Properties(properties32);
        java.lang.Object obj35 = properties31.put((java.lang.Object) properties33, (java.lang.Object) (short) 1);
        java.util.Properties properties36 = new java.util.Properties(properties33);
        boolean boolean37 = properties4.remove((java.lang.Object) "", (java.lang.Object) properties36);
        java.lang.String str39 = properties4.getProperty("{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.tm_unique_name=, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties40 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties40.setDefaultJtaTimeout((long) (byte) 10);
        atomikosProperties40.setCheckpointInterval((long) (byte) 0);
        atomikosProperties40.setTransactionManagerUniqueName("");
        boolean boolean47 = atomikosProperties40.isEnableLogging();
        atomikosProperties40.setSerialJtaTransactions(false);
        java.lang.Object obj50 = properties4.remove((java.lang.Object) atomikosProperties40);
        int int51 = atomikosProperties40.getMaxActives();
        atomikosProperties40.setTransactionManagerUniqueName("{tmlog={com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=0, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.tm_unique_name=, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}, 4=true}");
        java.util.Properties properties54 = atomikosProperties40.asProperties();
        atomikosProperties40.setTransactionManagerUniqueName("{{}=tmlog}");
        org.junit.Assert.assertNull(obj6);
        org.junit.Assert.assertNull(obj14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(strSet16);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNull(obj35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNull(str39);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertNull(obj50);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + 50 + "'", int51 == 50);
        org.junit.Assert.assertNotNull(properties54);
    }

    @Test
    public void test1298() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1298");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setDefaultJtaTimeout((long) (byte) 10);
        atomikosProperties0.setCheckpointInterval((long) (byte) 0);
        atomikosProperties0.setEnableLogging(true);
        java.lang.String str7 = atomikosProperties0.getLogBaseName();
        atomikosProperties0.setCheckpointInterval((long) ' ');
        java.util.Properties properties10 = atomikosProperties0.asProperties();
        java.util.Properties properties11 = new java.util.Properties(properties10);
        java.util.Properties properties12 = null;
        java.util.Properties properties13 = new java.util.Properties(properties12);
        java.util.Properties properties14 = new java.util.Properties(properties12);
        java.util.Properties properties15 = null;
        java.util.Properties properties16 = new java.util.Properties(properties15);
        java.lang.Object obj18 = properties14.put((java.lang.Object) properties16, (java.lang.Object) (short) 1);
        java.util.Properties properties20 = null;
        java.util.Properties properties21 = new java.util.Properties(properties20);
        java.util.Properties properties22 = new java.util.Properties(properties20);
        java.util.Properties properties23 = null;
        java.util.Properties properties24 = new java.util.Properties(properties23);
        java.lang.Object obj26 = properties22.put((java.lang.Object) properties24, (java.lang.Object) (short) 1);
        boolean boolean27 = properties16.remove((java.lang.Object) false, (java.lang.Object) (short) 1);
        java.util.Set<java.lang.String> strSet28 = properties16.stringPropertyNames();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties29 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties29.setDefaultJtaTimeout((long) (byte) 10);
        long long32 = atomikosProperties29.getDefaultJtaTimeout();
        java.lang.Object obj33 = properties16.get((java.lang.Object) atomikosProperties29);
        atomikosProperties29.setCheckpointInterval((long) (short) 100);
        java.util.Properties properties36 = atomikosProperties29.asProperties();
        int int37 = properties36.size();
        java.util.Properties properties38 = new java.util.Properties(properties36);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties39 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties39.setDefaultJtaTimeout((long) (byte) 10);
        atomikosProperties39.setSerialJtaTransactions(false);
        atomikosProperties39.setMaxTimeout((long) (short) -1);
        long long46 = atomikosProperties39.getDefaultJtaTimeout();
        java.util.Properties properties47 = atomikosProperties39.asProperties();
        java.util.Properties properties48 = atomikosProperties39.asProperties();
        java.util.Enumeration<java.lang.Object> objEnumeration49 = properties48.keys();
        java.lang.Object obj50 = properties10.replace((java.lang.Object) properties36, (java.lang.Object) objEnumeration49);
        java.lang.Object obj51 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean52 = properties36.containsValue(obj51);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "tmlog" + "'", str7, "tmlog");
        org.junit.Assert.assertNotNull(properties10);
        org.junit.Assert.assertNull(obj18);
        org.junit.Assert.assertNull(obj26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(strSet28);
        org.junit.Assert.assertTrue("'" + long32 + "' != '" + 10L + "'", long32 == 10L);
        org.junit.Assert.assertNull(obj33);
        org.junit.Assert.assertNotNull(properties36);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 9 + "'", int37 == 9);
        org.junit.Assert.assertTrue("'" + long46 + "' != '" + 10L + "'", long46 == 10L);
        org.junit.Assert.assertNotNull(properties47);
        org.junit.Assert.assertNotNull(properties48);
        org.junit.Assert.assertNotNull(objEnumeration49);
        org.junit.Assert.assertNull(obj50);
    }

    @Test
    public void test1299() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1299");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Properties properties2 = new java.util.Properties(properties0);
        java.util.Properties properties3 = null;
        java.util.Properties properties4 = new java.util.Properties(properties3);
        java.lang.Object obj6 = properties2.put((java.lang.Object) properties4, (java.lang.Object) (short) 1);
        java.util.Properties properties8 = null;
        java.util.Properties properties9 = new java.util.Properties(properties8);
        java.util.Properties properties10 = new java.util.Properties(properties8);
        java.util.Properties properties11 = null;
        java.util.Properties properties12 = new java.util.Properties(properties11);
        java.lang.Object obj14 = properties10.put((java.lang.Object) properties12, (java.lang.Object) (short) 1);
        boolean boolean15 = properties4.remove((java.lang.Object) false, (java.lang.Object) (short) 1);
        java.util.Properties properties16 = new java.util.Properties(properties4);
        boolean boolean17 = properties4.isEmpty();
        java.util.Properties properties18 = null;
        java.util.Properties properties19 = new java.util.Properties(properties18);
        java.util.Properties properties20 = new java.util.Properties(properties18);
        java.util.Properties properties21 = null;
        java.util.Properties properties22 = new java.util.Properties(properties21);
        java.lang.Object obj24 = properties20.put((java.lang.Object) properties22, (java.lang.Object) (short) 1);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties25 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties25.setThreadedTwoPhaseCommit(true);
        atomikosProperties25.setMaxActives((int) (byte) 0);
        boolean boolean30 = properties20.containsValue((java.lang.Object) atomikosProperties25);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties31 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties31.setDefaultJtaTimeout((long) (byte) 10);
        atomikosProperties31.setSerialJtaTransactions(false);
        boolean boolean36 = properties20.containsValue((java.lang.Object) atomikosProperties31);
        java.lang.Object obj39 = properties20.putIfAbsent((java.lang.Object) 10, (java.lang.Object) (byte) -1);
        boolean boolean40 = properties4.equals((java.lang.Object) properties20);
        java.io.InputStream inputStream41 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties20.load(inputStream41);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(obj6);
        org.junit.Assert.assertNull(obj14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNull(obj24);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNull(obj39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
    }

    @Test
    public void test1300() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1300");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setDefaultJtaTimeout((long) (byte) 10);
        long long3 = atomikosProperties0.getDefaultJtaTimeout();
        atomikosProperties0.setTransactionManagerUniqueName("");
        boolean boolean6 = atomikosProperties0.isEnableLogging();
        java.lang.String str7 = atomikosProperties0.getLogBaseDir();
        java.util.Properties properties8 = atomikosProperties0.asProperties();
        boolean boolean9 = atomikosProperties0.isEnableLogging();
        java.lang.String str10 = atomikosProperties0.getLogBaseName();
        atomikosProperties0.setMaxTimeout(9L);
        org.junit.Assert.assertTrue("'" + long3 + "' != '" + 10L + "'", long3 == 10L);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNotNull(properties8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "tmlog" + "'", str10, "tmlog");
    }

    @Test
    public void test1301() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1301");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setThreadedTwoPhaseCommit(true);
        boolean boolean3 = atomikosProperties0.isEnableLogging();
        atomikosProperties0.setCheckpointInterval((long) 35);
        atomikosProperties0.setDefaultJtaTimeout((long) (byte) 0);
        java.lang.String str8 = atomikosProperties0.getLogBaseName();
        boolean boolean9 = atomikosProperties0.isThreadedTwoPhaseCommit();
        atomikosProperties0.setTransactionManagerUniqueName("tmlog");
        java.lang.String str12 = atomikosProperties0.getService();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "tmlog" + "'", str8, "tmlog");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertNull(str12);
    }

    @Test
    public void test1302() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1302");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Properties properties2 = new java.util.Properties(properties0);
        boolean boolean4 = properties2.containsValue((java.lang.Object) (short) 100);
        java.util.Properties properties5 = new java.util.Properties(properties2);
        java.lang.String str7 = properties5.getProperty("hi!");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties8 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties8.setDefaultJtaTimeout((long) (byte) 10);
        long long11 = atomikosProperties8.getDefaultJtaTimeout();
        atomikosProperties8.setTransactionManagerUniqueName("hi!");
        atomikosProperties8.setLogBaseName("tmlog");
        boolean boolean16 = atomikosProperties8.isSerialJtaTransactions();
        java.util.Properties properties17 = atomikosProperties8.asProperties();
        boolean boolean18 = properties5.equals((java.lang.Object) atomikosProperties8);
        java.util.Set<java.lang.Object> objSet19 = properties5.keySet();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties20 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        boolean boolean21 = atomikosProperties20.isForceShutdownOnVmExit();
        java.util.Properties properties22 = atomikosProperties20.asProperties();
        java.util.Properties properties23 = null;
        java.util.Properties properties24 = new java.util.Properties(properties23);
        java.util.Properties properties25 = new java.util.Properties(properties23);
        java.util.Properties properties26 = null;
        java.util.Properties properties27 = new java.util.Properties(properties26);
        java.lang.Object obj29 = properties25.put((java.lang.Object) properties27, (java.lang.Object) (short) 1);
        properties27.clear();
        int int31 = properties27.size();
        java.util.Properties properties32 = null;
        java.util.Properties properties33 = new java.util.Properties(properties32);
        java.util.Properties properties34 = new java.util.Properties(properties32);
        java.util.Properties properties35 = null;
        java.util.Properties properties36 = new java.util.Properties(properties35);
        java.lang.Object obj38 = properties34.put((java.lang.Object) properties36, (java.lang.Object) (short) 1);
        java.util.Properties properties39 = new java.util.Properties(properties36);
        java.util.Properties properties40 = new java.util.Properties(properties36);
        boolean boolean42 = properties27.remove((java.lang.Object) properties36, (java.lang.Object) 10.0f);
        boolean boolean43 = properties22.containsKey((java.lang.Object) 10.0f);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties45 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties45.setDefaultJtaTimeout((long) (byte) 10);
        atomikosProperties45.setCheckpointInterval((long) (byte) 0);
        atomikosProperties45.setEnableLogging(true);
        java.lang.Object obj52 = properties22.getOrDefault((java.lang.Object) (byte) 0, (java.lang.Object) true);
        java.util.Properties properties53 = new java.util.Properties(properties22);
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet54 = properties22.entrySet();
        java.util.Properties properties55 = null;
        java.util.Properties properties56 = new java.util.Properties(properties55);
        java.util.Properties properties57 = new java.util.Properties(properties55);
        java.util.Properties properties58 = null;
        java.util.Properties properties59 = new java.util.Properties(properties58);
        java.lang.Object obj61 = properties57.put((java.lang.Object) properties59, (java.lang.Object) (short) 1);
        boolean boolean62 = properties57.isEmpty();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties63 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties63.setDefaultJtaTimeout((long) (byte) 10);
        atomikosProperties63.setCheckpointInterval((long) (byte) 0);
        atomikosProperties63.setTransactionManagerUniqueName("");
        java.util.Properties properties70 = atomikosProperties63.asProperties();
        java.lang.Object obj71 = properties57.remove((java.lang.Object) properties70);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties72 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties72.setDefaultJtaTimeout((long) (byte) 10);
        atomikosProperties72.setCheckpointInterval((long) (byte) 0);
        atomikosProperties72.setTransactionManagerUniqueName("");
        java.lang.Object obj79 = properties70.remove((java.lang.Object) atomikosProperties72);
        java.util.Enumeration<java.lang.Object> objEnumeration80 = properties70.keys();
        boolean boolean81 = properties5.remove((java.lang.Object) properties22, (java.lang.Object) objEnumeration80);
        java.util.Properties properties82 = new java.util.Properties(properties5);
        java.lang.Object obj83 = properties5.clone();
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertTrue("'" + long11 + "' != '" + 10L + "'", long11 == 10L);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(properties17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(objSet19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(properties22);
        org.junit.Assert.assertNull(obj29);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 0 + "'", int31 == 0);
        org.junit.Assert.assertNull(obj38);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertEquals("'" + obj52 + "' != '" + true + "'", obj52, true);
        org.junit.Assert.assertNotNull(objEntrySet54);
        org.junit.Assert.assertNull(obj61);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertNotNull(properties70);
        org.junit.Assert.assertNull(obj71);
        org.junit.Assert.assertNull(obj79);
        org.junit.Assert.assertNotNull(objEnumeration80);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + false + "'", boolean81 == false);
        org.junit.Assert.assertNotNull(obj83);
        org.junit.Assert.assertEquals(obj83.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj83), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj83), "{}");
    }

    @Test
    public void test1303() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1303");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        int int1 = atomikosProperties0.getMaxActives();
        long long2 = atomikosProperties0.getMaxTimeout();
        java.util.Properties properties3 = atomikosProperties0.asProperties();
        java.util.Properties properties4 = atomikosProperties0.asProperties();
        long long5 = atomikosProperties0.getCheckpointInterval();
        atomikosProperties0.setDefaultJtaTimeout((long) (short) 100);
        long long8 = atomikosProperties0.getMaxTimeout();
        atomikosProperties0.setEnableLogging(true);
        atomikosProperties0.setForceShutdownOnVmExit(false);
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 50 + "'", int1 == 50);
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + 300000L + "'", long2 == 300000L);
        org.junit.Assert.assertNotNull(properties3);
        org.junit.Assert.assertNotNull(properties4);
        org.junit.Assert.assertTrue("'" + long5 + "' != '" + 500L + "'", long5 == 500L);
        org.junit.Assert.assertTrue("'" + long8 + "' != '" + 300000L + "'", long8 == 300000L);
    }

    @Test
    public void test1304() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1304");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setDefaultJtaTimeout((long) (byte) 10);
        long long3 = atomikosProperties0.getDefaultJtaTimeout();
        atomikosProperties0.setTransactionManagerUniqueName("");
        atomikosProperties0.setCheckpointInterval(100L);
        java.lang.String str8 = atomikosProperties0.getTransactionManagerUniqueName();
        org.junit.Assert.assertTrue("'" + long3 + "' != '" + 10L + "'", long3 == 10L);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "" + "'", str8, "");
    }

    @Test
    public void test1305() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1305");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setDefaultJtaTimeout((long) (byte) 10);
        atomikosProperties0.setCheckpointInterval((long) (byte) 0);
        atomikosProperties0.setTransactionManagerUniqueName("");
        boolean boolean7 = atomikosProperties0.isEnableLogging();
        java.util.Properties properties8 = atomikosProperties0.asProperties();
        java.util.Properties properties9 = new java.util.Properties(properties8);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties10 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties10.setDefaultJtaTimeout((long) (byte) 10);
        atomikosProperties10.setSerialJtaTransactions(false);
        atomikosProperties10.setMaxTimeout((long) (short) -1);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties17 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties17.setDefaultJtaTimeout((long) (byte) 10);
        atomikosProperties17.setCheckpointInterval((long) (byte) 0);
        atomikosProperties17.setTransactionManagerUniqueName("");
        java.util.Properties properties24 = atomikosProperties17.asProperties();
        java.lang.String str25 = atomikosProperties17.getLogBaseName();
        java.util.Properties properties26 = atomikosProperties17.asProperties();
        java.lang.Object obj27 = properties8.getOrDefault((java.lang.Object) (short) -1, (java.lang.Object) atomikosProperties17);
        java.util.Properties properties28 = atomikosProperties17.asProperties();
        java.lang.String str29 = atomikosProperties17.getLogBaseName();
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(properties8);
        org.junit.Assert.assertNotNull(properties24);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "tmlog" + "'", str25, "tmlog");
        org.junit.Assert.assertNotNull(properties26);
        org.junit.Assert.assertNotNull(obj27);
        org.junit.Assert.assertNotNull(properties28);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "tmlog" + "'", str29, "tmlog");
    }

    @Test
    public void test1306() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1306");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Properties properties2 = new java.util.Properties(properties0);
        java.util.Properties properties3 = null;
        java.util.Properties properties4 = new java.util.Properties(properties3);
        java.lang.Object obj6 = properties2.put((java.lang.Object) properties4, (java.lang.Object) (short) 1);
        properties4.clear();
        java.lang.String str9 = properties4.getProperty("");
        java.util.Properties properties10 = new java.util.Properties(properties4);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties11 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties11.setDefaultJtaTimeout((long) (byte) 10);
        atomikosProperties11.setCheckpointInterval((long) (byte) 0);
        atomikosProperties11.setTransactionManagerUniqueName("");
        java.util.Properties properties18 = atomikosProperties11.asProperties();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties19 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties19.setThreadedTwoPhaseCommit(true);
        atomikosProperties19.setMaxActives((int) '#');
        atomikosProperties19.setForceShutdownOnVmExit(true);
        java.lang.String str26 = atomikosProperties19.getLogBaseDir();
        java.lang.Object obj27 = properties18.remove((java.lang.Object) atomikosProperties19);
        java.util.Collection<java.lang.Object> objCollection28 = properties18.values();
        java.util.Properties properties29 = null;
        java.util.Properties properties30 = new java.util.Properties(properties29);
        java.util.Properties properties31 = new java.util.Properties(properties29);
        java.util.Properties properties32 = null;
        java.util.Properties properties33 = new java.util.Properties(properties32);
        java.lang.Object obj35 = properties31.put((java.lang.Object) properties33, (java.lang.Object) (short) 1);
        java.util.Properties properties36 = new java.util.Properties(properties33);
        int int37 = properties33.size();
        java.lang.Object obj39 = properties33.get((java.lang.Object) (short) 100);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties40 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        int int41 = atomikosProperties40.getMaxActives();
        long long42 = atomikosProperties40.getMaxTimeout();
        java.util.Properties properties43 = atomikosProperties40.asProperties();
        java.util.Properties properties44 = null;
        java.util.Properties properties45 = new java.util.Properties(properties44);
        java.util.Properties properties46 = new java.util.Properties(properties44);
        java.util.Properties properties47 = null;
        java.util.Properties properties48 = new java.util.Properties(properties47);
        java.lang.Object obj50 = properties46.put((java.lang.Object) properties48, (java.lang.Object) (short) 1);
        java.util.Properties properties51 = new java.util.Properties(properties48);
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet52 = properties48.entrySet();
        java.lang.Object obj53 = properties43.remove((java.lang.Object) properties48);
        java.util.Enumeration<?> wildcardEnumeration54 = properties43.propertyNames();
        java.util.Properties properties55 = new java.util.Properties(properties43);
        boolean boolean56 = properties10.replace((java.lang.Object) objCollection28, (java.lang.Object) properties33, (java.lang.Object) properties55);
        java.util.Properties properties57 = new java.util.Properties(properties55);
        java.io.OutputStream outputStream58 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties57.save(outputStream58, "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(obj6);
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertNotNull(properties18);
        org.junit.Assert.assertNull(str26);
        org.junit.Assert.assertNull(obj27);
        org.junit.Assert.assertNotNull(objCollection28);
        org.junit.Assert.assertNull(obj35);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 0 + "'", int37 == 0);
        org.junit.Assert.assertNull(obj39);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 50 + "'", int41 == 50);
        org.junit.Assert.assertTrue("'" + long42 + "' != '" + 300000L + "'", long42 == 300000L);
        org.junit.Assert.assertNotNull(properties43);
        org.junit.Assert.assertNull(obj50);
        org.junit.Assert.assertNotNull(objEntrySet52);
        org.junit.Assert.assertNull(obj53);
        org.junit.Assert.assertNotNull(wildcardEnumeration54);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
    }

    @Test
    public void test1307() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1307");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Properties properties2 = new java.util.Properties(properties0);
        boolean boolean4 = properties2.containsValue((java.lang.Object) (short) 100);
        java.util.Enumeration<java.lang.Object> objEnumeration5 = properties2.keys();
        java.util.Enumeration<java.lang.Object> objEnumeration6 = properties2.keys();
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(objEnumeration5);
        org.junit.Assert.assertNotNull(objEnumeration6);
    }

    @Test
    public void test1308() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1308");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Properties properties2 = new java.util.Properties(properties0);
        java.util.Properties properties3 = null;
        java.util.Properties properties4 = new java.util.Properties(properties3);
        java.lang.Object obj6 = properties2.put((java.lang.Object) properties4, (java.lang.Object) (short) 1);
        java.util.Properties properties8 = null;
        java.util.Properties properties9 = new java.util.Properties(properties8);
        java.util.Properties properties10 = new java.util.Properties(properties8);
        java.util.Properties properties11 = null;
        java.util.Properties properties12 = new java.util.Properties(properties11);
        java.lang.Object obj14 = properties10.put((java.lang.Object) properties12, (java.lang.Object) (short) 1);
        boolean boolean15 = properties4.remove((java.lang.Object) false, (java.lang.Object) (short) 1);
        java.util.Set<java.lang.String> strSet16 = properties4.stringPropertyNames();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties17 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties17.setDefaultJtaTimeout((long) (byte) 10);
        long long20 = atomikosProperties17.getDefaultJtaTimeout();
        java.lang.Object obj21 = properties4.get((java.lang.Object) atomikosProperties17);
        atomikosProperties17.setCheckpointInterval((long) (short) 100);
        java.util.Properties properties24 = atomikosProperties17.asProperties();
        java.lang.String str25 = atomikosProperties17.getLogBaseName();
        atomikosProperties17.setLogBaseDir("{}");
        java.util.Properties properties28 = atomikosProperties17.asProperties();
        java.io.OutputStream outputStream29 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties28.storeToXML(outputStream29, "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=0, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=true, com.atomikos.icatch.max_actives=100, com.atomikos.icatch.log_base_name=tmlog}");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(obj6);
        org.junit.Assert.assertNull(obj14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(strSet16);
        org.junit.Assert.assertTrue("'" + long20 + "' != '" + 10L + "'", long20 == 10L);
        org.junit.Assert.assertNull(obj21);
        org.junit.Assert.assertNotNull(properties24);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "tmlog" + "'", str25, "tmlog");
        org.junit.Assert.assertNotNull(properties28);
    }

    @Test
    public void test1309() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1309");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Properties properties2 = new java.util.Properties(properties0);
        java.util.Properties properties3 = null;
        java.util.Properties properties4 = new java.util.Properties(properties3);
        java.lang.Object obj6 = properties2.put((java.lang.Object) properties4, (java.lang.Object) (short) 1);
        boolean boolean7 = properties2.isEmpty();
        java.util.Properties properties8 = null;
        java.util.Properties properties9 = new java.util.Properties(properties8);
        java.util.Properties properties10 = new java.util.Properties(properties8);
        boolean boolean11 = properties2.containsKey((java.lang.Object) properties10);
        java.util.Properties properties12 = new java.util.Properties(properties10);
        java.util.Properties properties13 = null;
        java.util.Properties properties14 = new java.util.Properties(properties13);
        java.util.Properties properties15 = new java.util.Properties(properties13);
        boolean boolean17 = properties15.containsValue((java.lang.Object) (short) 100);
        java.util.Properties properties18 = new java.util.Properties(properties15);
        java.lang.String str20 = properties18.getProperty("hi!");
        boolean boolean21 = properties10.containsKey((java.lang.Object) properties18);
        java.util.Set<java.lang.Object> objSet22 = properties10.keySet();
        org.junit.Assert.assertNull(obj6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNull(str20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(objSet22);
    }

    @Test
    public void test1310() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1310");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Properties properties2 = new java.util.Properties(properties0);
        java.util.Properties properties3 = null;
        java.util.Properties properties4 = new java.util.Properties(properties3);
        java.lang.Object obj6 = properties2.put((java.lang.Object) properties4, (java.lang.Object) (short) 1);
        java.util.Enumeration<java.lang.Object> objEnumeration7 = properties4.elements();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet8 = properties4.entrySet();
        java.util.Set<java.lang.Object> objSet9 = properties4.keySet();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties10 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties10.setDefaultJtaTimeout((long) (byte) 10);
        atomikosProperties10.setCheckpointInterval((long) (byte) 0);
        atomikosProperties10.setEnableLogging(true);
        java.lang.Object obj17 = properties4.get((java.lang.Object) atomikosProperties10);
        java.util.Properties properties18 = atomikosProperties10.asProperties();
        java.util.Properties properties19 = null;
        java.util.Properties properties20 = new java.util.Properties(properties19);
        java.util.Properties properties21 = new java.util.Properties(properties19);
        java.util.Properties properties22 = null;
        java.util.Properties properties23 = new java.util.Properties(properties22);
        java.lang.Object obj25 = properties21.put((java.lang.Object) properties23, (java.lang.Object) (short) 1);
        properties23.clear();
        int int27 = properties23.size();
        java.util.Properties properties28 = null;
        java.util.Properties properties29 = new java.util.Properties(properties28);
        java.util.Properties properties30 = new java.util.Properties(properties28);
        java.util.Properties properties31 = null;
        java.util.Properties properties32 = new java.util.Properties(properties31);
        java.lang.Object obj34 = properties30.put((java.lang.Object) properties32, (java.lang.Object) (short) 1);
        java.util.Properties properties35 = new java.util.Properties(properties32);
        java.util.Properties properties36 = new java.util.Properties(properties32);
        boolean boolean38 = properties23.remove((java.lang.Object) properties32, (java.lang.Object) 10.0f);
        java.util.Enumeration<java.lang.Object> objEnumeration39 = properties32.elements();
        java.util.Properties properties40 = new java.util.Properties(properties32);
        java.util.Properties properties41 = null;
        java.util.Properties properties42 = new java.util.Properties(properties41);
        java.util.Properties properties43 = new java.util.Properties(properties41);
        java.util.Properties properties44 = null;
        java.util.Properties properties45 = new java.util.Properties(properties44);
        java.lang.Object obj47 = properties43.put((java.lang.Object) properties45, (java.lang.Object) (short) 1);
        java.util.Properties properties49 = null;
        java.util.Properties properties50 = new java.util.Properties(properties49);
        java.util.Properties properties51 = new java.util.Properties(properties49);
        java.util.Properties properties52 = null;
        java.util.Properties properties53 = new java.util.Properties(properties52);
        java.lang.Object obj55 = properties51.put((java.lang.Object) properties53, (java.lang.Object) (short) 1);
        boolean boolean56 = properties45.remove((java.lang.Object) false, (java.lang.Object) (short) 1);
        java.util.Set<java.lang.String> strSet57 = properties45.stringPropertyNames();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties58 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties58.setDefaultJtaTimeout((long) (byte) 10);
        long long61 = atomikosProperties58.getDefaultJtaTimeout();
        java.lang.Object obj62 = properties45.get((java.lang.Object) atomikosProperties58);
        java.util.Properties properties63 = null;
        java.util.Properties properties64 = new java.util.Properties(properties63);
        java.util.Properties properties65 = new java.util.Properties(properties63);
        java.util.Properties properties66 = null;
        java.util.Properties properties67 = new java.util.Properties(properties66);
        java.lang.Object obj69 = properties65.put((java.lang.Object) properties67, (java.lang.Object) (short) 1);
        java.util.Properties properties71 = null;
        java.util.Properties properties72 = new java.util.Properties(properties71);
        java.util.Properties properties73 = new java.util.Properties(properties71);
        java.util.Properties properties74 = null;
        java.util.Properties properties75 = new java.util.Properties(properties74);
        java.lang.Object obj77 = properties73.put((java.lang.Object) properties75, (java.lang.Object) (short) 1);
        boolean boolean78 = properties67.remove((java.lang.Object) false, (java.lang.Object) (short) 1);
        java.lang.Object obj80 = properties67.remove((java.lang.Object) '#');
        java.util.Set<java.lang.Object> objSet81 = properties67.keySet();
        boolean boolean82 = properties45.containsKey((java.lang.Object) properties67);
        java.lang.Object obj83 = properties18.put((java.lang.Object) properties32, (java.lang.Object) properties67);
        java.io.PrintWriter printWriter84 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties32.list(printWriter84);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(obj6);
        org.junit.Assert.assertNotNull(objEnumeration7);
        org.junit.Assert.assertNotNull(objEntrySet8);
        org.junit.Assert.assertNotNull(objSet9);
        org.junit.Assert.assertNull(obj17);
        org.junit.Assert.assertNotNull(properties18);
        org.junit.Assert.assertNull(obj25);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 0 + "'", int27 == 0);
        org.junit.Assert.assertNull(obj34);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(objEnumeration39);
        org.junit.Assert.assertNull(obj47);
        org.junit.Assert.assertNull(obj55);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertNotNull(strSet57);
        org.junit.Assert.assertTrue("'" + long61 + "' != '" + 10L + "'", long61 == 10L);
        org.junit.Assert.assertNull(obj62);
        org.junit.Assert.assertNull(obj69);
        org.junit.Assert.assertNull(obj77);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + false + "'", boolean78 == false);
        org.junit.Assert.assertNull(obj80);
        org.junit.Assert.assertNotNull(objSet81);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + false + "'", boolean82 == false);
        org.junit.Assert.assertNull(obj83);
    }

    @Test
    public void test1311() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1311");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setThreadedTwoPhaseCommit(true);
        atomikosProperties0.setMaxActives((int) (byte) 0);
        atomikosProperties0.setEnableLogging(true);
        long long7 = atomikosProperties0.getDefaultJtaTimeout();
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + 10000L + "'", long7 == 10000L);
    }

    @Test
    public void test1312() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1312");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Properties properties2 = new java.util.Properties(properties0);
        java.util.Properties properties3 = null;
        java.util.Properties properties4 = new java.util.Properties(properties3);
        java.lang.Object obj6 = properties2.put((java.lang.Object) properties4, (java.lang.Object) (short) 1);
        boolean boolean7 = properties2.isEmpty();
        java.util.Properties properties8 = null;
        java.util.Properties properties9 = new java.util.Properties(properties8);
        java.util.Properties properties10 = new java.util.Properties(properties8);
        boolean boolean11 = properties2.containsKey((java.lang.Object) properties10);
        java.util.Properties properties12 = new java.util.Properties(properties10);
        java.lang.Object obj13 = properties12.clone();
        java.util.Set<java.lang.String> strSet14 = properties12.stringPropertyNames();
        java.io.OutputStream outputStream15 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties12.store(outputStream15, "{tmlog=}");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(obj6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNotNull(obj13);
        org.junit.Assert.assertEquals(obj13.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj13), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj13), "{}");
        org.junit.Assert.assertNotNull(strSet14);
    }

    @Test
    public void test1313() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1313");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setDefaultJtaTimeout((long) (byte) 10);
        long long3 = atomikosProperties0.getDefaultJtaTimeout();
        atomikosProperties0.setTransactionManagerUniqueName("");
        boolean boolean6 = atomikosProperties0.isEnableLogging();
        atomikosProperties0.setDefaultJtaTimeout((long) '4');
        boolean boolean9 = atomikosProperties0.isSerialJtaTransactions();
        java.util.Properties properties10 = atomikosProperties0.asProperties();
        java.util.Properties properties11 = null;
        java.util.Properties properties12 = new java.util.Properties(properties11);
        java.util.Properties properties13 = new java.util.Properties(properties11);
        java.util.Properties properties14 = null;
        java.util.Properties properties15 = new java.util.Properties(properties14);
        java.lang.Object obj17 = properties13.put((java.lang.Object) properties15, (java.lang.Object) (short) 1);
        boolean boolean18 = properties13.isEmpty();
        java.util.Properties properties19 = null;
        java.util.Properties properties20 = new java.util.Properties(properties19);
        java.util.Properties properties21 = new java.util.Properties(properties19);
        boolean boolean22 = properties13.containsKey((java.lang.Object) properties21);
        java.util.Properties properties23 = new java.util.Properties(properties21);
        java.lang.Object obj24 = properties23.clone();
        java.util.Properties properties26 = null;
        java.util.Properties properties27 = new java.util.Properties(properties26);
        java.util.Properties properties28 = new java.util.Properties(properties26);
        java.util.Properties properties29 = null;
        java.util.Properties properties30 = new java.util.Properties(properties29);
        java.lang.Object obj32 = properties28.put((java.lang.Object) properties30, (java.lang.Object) (short) 1);
        boolean boolean33 = properties28.isEmpty();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties34 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties34.setDefaultJtaTimeout((long) (byte) 10);
        atomikosProperties34.setCheckpointInterval((long) (byte) 0);
        atomikosProperties34.setTransactionManagerUniqueName("");
        java.util.Properties properties41 = atomikosProperties34.asProperties();
        java.lang.Object obj42 = properties28.remove((java.lang.Object) properties41);
        java.lang.Object obj43 = properties23.putIfAbsent((java.lang.Object) 1L, (java.lang.Object) properties28);
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet44 = properties23.entrySet();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties45 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        boolean boolean46 = atomikosProperties45.isForceShutdownOnVmExit();
        java.util.Properties properties47 = atomikosProperties45.asProperties();
        java.util.Properties properties48 = null;
        java.util.Properties properties49 = new java.util.Properties(properties48);
        java.util.Properties properties50 = new java.util.Properties(properties48);
        java.util.Properties properties51 = null;
        java.util.Properties properties52 = new java.util.Properties(properties51);
        java.lang.Object obj54 = properties50.put((java.lang.Object) properties52, (java.lang.Object) (short) 1);
        properties52.clear();
        int int56 = properties52.size();
        java.util.Properties properties57 = null;
        java.util.Properties properties58 = new java.util.Properties(properties57);
        java.util.Properties properties59 = new java.util.Properties(properties57);
        java.util.Properties properties60 = null;
        java.util.Properties properties61 = new java.util.Properties(properties60);
        java.lang.Object obj63 = properties59.put((java.lang.Object) properties61, (java.lang.Object) (short) 1);
        java.util.Properties properties64 = new java.util.Properties(properties61);
        java.util.Properties properties65 = new java.util.Properties(properties61);
        boolean boolean67 = properties52.remove((java.lang.Object) properties61, (java.lang.Object) 10.0f);
        boolean boolean68 = properties47.containsKey((java.lang.Object) 10.0f);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties70 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties70.setDefaultJtaTimeout((long) (byte) 10);
        atomikosProperties70.setCheckpointInterval((long) (byte) 0);
        atomikosProperties70.setEnableLogging(true);
        java.lang.Object obj77 = properties47.getOrDefault((java.lang.Object) (byte) 0, (java.lang.Object) true);
        java.util.Properties properties78 = new java.util.Properties(properties47);
        boolean boolean79 = properties23.containsKey((java.lang.Object) properties78);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties80 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties80.setDefaultJtaTimeout((long) (byte) 10);
        long long83 = atomikosProperties80.getDefaultJtaTimeout();
        atomikosProperties80.setTransactionManagerUniqueName("");
        boolean boolean86 = atomikosProperties80.isEnableLogging();
        java.lang.String str87 = atomikosProperties80.getLogBaseDir();
        java.util.Properties properties88 = atomikosProperties80.asProperties();
        boolean boolean89 = atomikosProperties80.isEnableLogging();
        java.lang.String str90 = atomikosProperties80.getLogBaseName();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties91 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties91.setDefaultJtaTimeout((long) (byte) 10);
        long long94 = atomikosProperties91.getDefaultJtaTimeout();
        atomikosProperties91.setTransactionManagerUniqueName("");
        java.lang.String str97 = atomikosProperties91.getTransactionManagerUniqueName();
        boolean boolean98 = properties10.replace((java.lang.Object) properties78, (java.lang.Object) atomikosProperties80, (java.lang.Object) str97);
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet99 = properties10.entrySet();
        org.junit.Assert.assertTrue("'" + long3 + "' != '" + 10L + "'", long3 == 10L);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertNotNull(properties10);
        org.junit.Assert.assertNull(obj17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNotNull(obj24);
        org.junit.Assert.assertEquals(obj24.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj24), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj24), "{}");
        org.junit.Assert.assertNull(obj32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(properties41);
        org.junit.Assert.assertNull(obj42);
        org.junit.Assert.assertNull(obj43);
        org.junit.Assert.assertNotNull(objEntrySet44);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(properties47);
        org.junit.Assert.assertNull(obj54);
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + 0 + "'", int56 == 0);
        org.junit.Assert.assertNull(obj63);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertEquals("'" + obj77 + "' != '" + true + "'", obj77, true);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + false + "'", boolean79 == false);
        org.junit.Assert.assertTrue("'" + long83 + "' != '" + 10L + "'", long83 == 10L);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + true + "'", boolean86 == true);
        org.junit.Assert.assertNull(str87);
        org.junit.Assert.assertNotNull(properties88);
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + true + "'", boolean89 == true);
        org.junit.Assert.assertEquals("'" + str90 + "' != '" + "tmlog" + "'", str90, "tmlog");
        org.junit.Assert.assertTrue("'" + long94 + "' != '" + 10L + "'", long94 == 10L);
        org.junit.Assert.assertEquals("'" + str97 + "' != '" + "" + "'", str97, "");
        org.junit.Assert.assertTrue("'" + boolean98 + "' != '" + false + "'", boolean98 == false);
        org.junit.Assert.assertNotNull(objEntrySet99);
    }

    @Test
    public void test1314() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1314");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Properties properties2 = new java.util.Properties(properties0);
        java.util.Properties properties3 = null;
        java.util.Properties properties4 = new java.util.Properties(properties3);
        java.lang.Object obj6 = properties2.put((java.lang.Object) properties4, (java.lang.Object) (short) 1);
        boolean boolean7 = properties2.isEmpty();
        java.util.Properties properties8 = null;
        java.util.Properties properties9 = new java.util.Properties(properties8);
        java.util.Properties properties10 = new java.util.Properties(properties8);
        boolean boolean11 = properties2.containsKey((java.lang.Object) properties10);
        java.util.Properties properties12 = null;
        java.util.Properties properties13 = new java.util.Properties(properties12);
        java.util.Properties properties14 = new java.util.Properties(properties12);
        java.util.Properties properties15 = null;
        java.util.Properties properties16 = new java.util.Properties(properties15);
        java.lang.Object obj18 = properties14.put((java.lang.Object) properties16, (java.lang.Object) (short) 1);
        java.util.Properties properties20 = null;
        java.util.Properties properties21 = new java.util.Properties(properties20);
        java.util.Properties properties22 = new java.util.Properties(properties20);
        java.util.Properties properties23 = null;
        java.util.Properties properties24 = new java.util.Properties(properties23);
        java.lang.Object obj26 = properties22.put((java.lang.Object) properties24, (java.lang.Object) (short) 1);
        boolean boolean27 = properties16.remove((java.lang.Object) false, (java.lang.Object) (short) 1);
        java.util.Set<java.lang.String> strSet28 = properties16.stringPropertyNames();
        boolean boolean29 = properties10.containsKey((java.lang.Object) strSet28);
        properties10.clear();
        int int31 = properties10.size();
        java.util.Set<java.lang.String> strSet32 = properties10.stringPropertyNames();
        properties10.clear();
        java.util.Set<java.lang.Object> objSet34 = properties10.keySet();
        org.junit.Assert.assertNull(obj6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNull(obj18);
        org.junit.Assert.assertNull(obj26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(strSet28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 0 + "'", int31 == 0);
        org.junit.Assert.assertNotNull(strSet32);
        org.junit.Assert.assertNotNull(objSet34);
    }

    @Test
    public void test1315() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1315");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setDefaultJtaTimeout((long) (byte) 10);
        atomikosProperties0.setSerialJtaTransactions(false);
        atomikosProperties0.setMaxTimeout((long) (short) -1);
        long long7 = atomikosProperties0.getDefaultJtaTimeout();
        boolean boolean8 = atomikosProperties0.isThreadedTwoPhaseCommit();
        long long9 = atomikosProperties0.getDefaultJtaTimeout();
        atomikosProperties0.setSerialJtaTransactions(true);
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + 10L + "'", long7 == 10L);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + long9 + "' != '" + 10L + "'", long9 == 10L);
    }

    @Test
    public void test1316() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1316");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Properties properties2 = new java.util.Properties(properties0);
        java.util.Properties properties3 = null;
        java.util.Properties properties4 = new java.util.Properties(properties3);
        java.lang.Object obj6 = properties2.put((java.lang.Object) properties4, (java.lang.Object) (short) 1);
        boolean boolean7 = properties2.isEmpty();
        properties2.clear();
        java.util.Properties properties9 = new java.util.Properties(properties2);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties10 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties10.setDefaultJtaTimeout((long) (byte) 10);
        long long13 = atomikosProperties10.getDefaultJtaTimeout();
        atomikosProperties10.setTransactionManagerUniqueName("hi!");
        atomikosProperties10.setLogBaseName("tmlog");
        atomikosProperties10.setCheckpointInterval(300000L);
        boolean boolean20 = properties2.containsKey((java.lang.Object) 300000L);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties21 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties21.setDefaultJtaTimeout((long) (byte) 10);
        atomikosProperties21.setCheckpointInterval((long) (byte) 0);
        atomikosProperties21.setTransactionManagerUniqueName("");
        java.util.Properties properties28 = atomikosProperties21.asProperties();
        java.lang.String str29 = atomikosProperties21.getTransactionManagerUniqueName();
        atomikosProperties21.setDefaultJtaTimeout((long) (-1));
        java.lang.Object obj32 = properties2.get((java.lang.Object) (-1));
        java.util.Properties properties33 = new java.util.Properties(properties2);
        java.lang.String str34 = properties2.toString();
        java.util.Set<java.lang.String> strSet35 = properties2.stringPropertyNames();
        org.junit.Assert.assertNull(obj6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + long13 + "' != '" + 10L + "'", long13 == 10L);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(properties28);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "" + "'", str29, "");
        org.junit.Assert.assertNull(obj32);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "{}" + "'", str34, "{}");
        org.junit.Assert.assertNotNull(strSet35);
    }

    @Test
    public void test1317() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1317");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Properties properties2 = new java.util.Properties(properties0);
        java.util.Properties properties3 = null;
        java.util.Properties properties4 = new java.util.Properties(properties3);
        java.lang.Object obj6 = properties2.put((java.lang.Object) properties4, (java.lang.Object) (short) 1);
        properties4.clear();
        java.lang.String str9 = properties4.getProperty("");
        java.util.Properties properties10 = new java.util.Properties(properties4);
        java.util.Properties properties11 = null;
        java.util.Properties properties12 = new java.util.Properties(properties11);
        java.util.Properties properties13 = new java.util.Properties(properties11);
        java.util.Properties properties14 = null;
        java.util.Properties properties15 = new java.util.Properties(properties14);
        java.lang.Object obj17 = properties13.put((java.lang.Object) properties15, (java.lang.Object) (short) 1);
        boolean boolean18 = properties13.isEmpty();
        java.util.Properties properties19 = null;
        java.util.Properties properties20 = new java.util.Properties(properties19);
        java.util.Properties properties21 = new java.util.Properties(properties19);
        boolean boolean22 = properties13.containsKey((java.lang.Object) properties21);
        java.util.Properties properties23 = new java.util.Properties(properties21);
        java.util.Properties properties24 = null;
        java.util.Properties properties25 = new java.util.Properties(properties24);
        java.util.Properties properties26 = new java.util.Properties(properties24);
        java.util.Properties properties27 = null;
        java.util.Properties properties28 = new java.util.Properties(properties27);
        java.lang.Object obj30 = properties26.put((java.lang.Object) properties28, (java.lang.Object) (short) 1);
        boolean boolean31 = properties26.isEmpty();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties32 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties32.setDefaultJtaTimeout((long) (byte) 10);
        atomikosProperties32.setCheckpointInterval((long) (byte) 0);
        atomikosProperties32.setTransactionManagerUniqueName("");
        java.util.Properties properties39 = atomikosProperties32.asProperties();
        java.lang.Object obj40 = properties26.remove((java.lang.Object) properties39);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties41 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties41.setDefaultJtaTimeout((long) (byte) 10);
        atomikosProperties41.setCheckpointInterval((long) (byte) 0);
        atomikosProperties41.setTransactionManagerUniqueName("");
        java.lang.Object obj48 = properties39.remove((java.lang.Object) atomikosProperties41);
        java.util.Enumeration<java.lang.Object> objEnumeration49 = properties39.elements();
        java.lang.Object obj50 = properties23.get((java.lang.Object) properties39);
        java.lang.Object obj51 = properties23.clone();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties52 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        boolean boolean53 = atomikosProperties52.isForceShutdownOnVmExit();
        java.util.Properties properties54 = atomikosProperties52.asProperties();
        java.util.Properties properties55 = null;
        java.util.Properties properties56 = new java.util.Properties(properties55);
        java.util.Properties properties57 = new java.util.Properties(properties55);
        java.util.Properties properties58 = null;
        java.util.Properties properties59 = new java.util.Properties(properties58);
        java.lang.Object obj61 = properties57.put((java.lang.Object) properties59, (java.lang.Object) (short) 1);
        properties59.clear();
        int int63 = properties59.size();
        java.util.Properties properties64 = null;
        java.util.Properties properties65 = new java.util.Properties(properties64);
        java.util.Properties properties66 = new java.util.Properties(properties64);
        java.util.Properties properties67 = null;
        java.util.Properties properties68 = new java.util.Properties(properties67);
        java.lang.Object obj70 = properties66.put((java.lang.Object) properties68, (java.lang.Object) (short) 1);
        java.util.Properties properties71 = new java.util.Properties(properties68);
        java.util.Properties properties72 = new java.util.Properties(properties68);
        boolean boolean74 = properties59.remove((java.lang.Object) properties68, (java.lang.Object) 10.0f);
        boolean boolean75 = properties54.containsKey((java.lang.Object) 10.0f);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties77 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties77.setDefaultJtaTimeout((long) (byte) 10);
        atomikosProperties77.setCheckpointInterval((long) (byte) 0);
        atomikosProperties77.setEnableLogging(true);
        java.lang.Object obj84 = properties54.getOrDefault((java.lang.Object) (byte) 0, (java.lang.Object) true);
        java.util.Properties properties85 = new java.util.Properties(properties54);
        java.lang.Object obj86 = properties10.getOrDefault((java.lang.Object) properties23, (java.lang.Object) properties85);
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet87 = properties23.entrySet();
        java.util.Properties properties88 = new java.util.Properties(properties23);
        java.io.OutputStream outputStream89 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties23.storeToXML(outputStream89, "{[]={com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=0, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.tm_unique_name=, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}}");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(obj6);
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertNull(obj17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNull(obj30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(properties39);
        org.junit.Assert.assertNull(obj40);
        org.junit.Assert.assertNull(obj48);
        org.junit.Assert.assertNotNull(objEnumeration49);
        org.junit.Assert.assertNull(obj50);
        org.junit.Assert.assertNotNull(obj51);
        org.junit.Assert.assertEquals(obj51.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj51), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj51), "{}");
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertNotNull(properties54);
        org.junit.Assert.assertNull(obj61);
        org.junit.Assert.assertTrue("'" + int63 + "' != '" + 0 + "'", int63 == 0);
        org.junit.Assert.assertNull(obj70);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
        org.junit.Assert.assertEquals("'" + obj84 + "' != '" + true + "'", obj84, true);
        org.junit.Assert.assertNotNull(obj86);
        org.junit.Assert.assertEquals(obj86.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj86), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj86), "{}");
        org.junit.Assert.assertNotNull(objEntrySet87);
    }

    @Test
    public void test1318() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1318");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Properties properties2 = new java.util.Properties(properties0);
        java.util.Properties properties3 = null;
        java.util.Properties properties4 = new java.util.Properties(properties3);
        java.lang.Object obj6 = properties2.put((java.lang.Object) properties4, (java.lang.Object) (short) 1);
        boolean boolean7 = properties2.isEmpty();
        java.util.Properties properties8 = null;
        java.util.Properties properties9 = new java.util.Properties(properties8);
        java.util.Properties properties10 = new java.util.Properties(properties8);
        boolean boolean11 = properties2.containsKey((java.lang.Object) properties10);
        java.util.Properties properties12 = new java.util.Properties(properties10);
        java.lang.String str14 = properties10.getProperty("{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=true, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=true, com.atomikos.icatch.max_actives=35, com.atomikos.icatch.log_base_name=tmlog}");
        org.junit.Assert.assertNull(obj6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNull(str14);
    }

    @Test
    public void test1319() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1319");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Properties properties2 = new java.util.Properties(properties0);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties3 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        int int4 = atomikosProperties3.getMaxActives();
        long long5 = atomikosProperties3.getMaxTimeout();
        java.lang.String str6 = atomikosProperties3.getLogBaseDir();
        atomikosProperties3.setCheckpointInterval(100L);
        boolean boolean9 = properties2.equals((java.lang.Object) atomikosProperties3);
        java.util.Properties properties10 = null;
        java.util.Properties properties11 = new java.util.Properties(properties10);
        java.util.Properties properties12 = new java.util.Properties(properties10);
        java.util.Properties properties13 = null;
        java.util.Properties properties14 = new java.util.Properties(properties13);
        java.lang.Object obj16 = properties12.put((java.lang.Object) properties14, (java.lang.Object) (short) 1);
        boolean boolean17 = properties12.isEmpty();
        java.util.Properties properties18 = null;
        java.util.Properties properties19 = new java.util.Properties(properties18);
        java.util.Properties properties20 = new java.util.Properties(properties18);
        boolean boolean21 = properties12.containsKey((java.lang.Object) properties20);
        java.util.Properties properties22 = null;
        java.util.Properties properties23 = new java.util.Properties(properties22);
        java.util.Properties properties24 = new java.util.Properties(properties22);
        java.util.Properties properties25 = null;
        java.util.Properties properties26 = new java.util.Properties(properties25);
        java.lang.Object obj28 = properties24.put((java.lang.Object) properties26, (java.lang.Object) (short) 1);
        java.util.Properties properties30 = null;
        java.util.Properties properties31 = new java.util.Properties(properties30);
        java.util.Properties properties32 = new java.util.Properties(properties30);
        java.util.Properties properties33 = null;
        java.util.Properties properties34 = new java.util.Properties(properties33);
        java.lang.Object obj36 = properties32.put((java.lang.Object) properties34, (java.lang.Object) (short) 1);
        boolean boolean37 = properties26.remove((java.lang.Object) false, (java.lang.Object) (short) 1);
        java.util.Set<java.lang.String> strSet38 = properties26.stringPropertyNames();
        boolean boolean39 = properties20.containsKey((java.lang.Object) strSet38);
        java.util.Properties properties40 = null;
        java.util.Properties properties41 = new java.util.Properties(properties40);
        java.util.Properties properties42 = new java.util.Properties(properties40);
        java.util.Properties properties43 = null;
        java.util.Properties properties44 = new java.util.Properties(properties43);
        java.lang.Object obj46 = properties42.put((java.lang.Object) properties44, (java.lang.Object) (short) 1);
        properties44.clear();
        java.lang.String str49 = properties44.getProperty("");
        java.util.Properties properties50 = null;
        java.util.Properties properties51 = new java.util.Properties(properties50);
        java.util.Properties properties52 = new java.util.Properties(properties50);
        java.util.Properties properties53 = null;
        java.util.Properties properties54 = new java.util.Properties(properties53);
        java.lang.Object obj56 = properties52.put((java.lang.Object) properties54, (java.lang.Object) (short) 1);
        properties44.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties52);
        boolean boolean58 = properties20.containsKey((java.lang.Object) properties44);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties60 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties60.setThreadedTwoPhaseCommit(true);
        boolean boolean63 = atomikosProperties60.isEnableLogging();
        java.lang.Object obj64 = properties20.put((java.lang.Object) '4', (java.lang.Object) boolean63);
        java.util.Properties properties65 = new java.util.Properties(properties20);
        boolean boolean66 = properties20.isEmpty();
        java.lang.Object obj67 = properties2.get((java.lang.Object) properties20);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties68 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties68.setDefaultJtaTimeout((long) (byte) 10);
        atomikosProperties68.setCheckpointInterval((long) (byte) 0);
        atomikosProperties68.setTransactionManagerUniqueName("");
        java.util.Properties properties75 = atomikosProperties68.asProperties();
        java.lang.String str76 = atomikosProperties68.getTransactionManagerUniqueName();
        atomikosProperties68.setDefaultJtaTimeout((long) (-1));
        java.util.Properties properties79 = atomikosProperties68.asProperties();
        java.util.Properties properties80 = atomikosProperties68.asProperties();
        java.util.Properties properties81 = null;
        java.util.Properties properties82 = new java.util.Properties(properties81);
        java.util.Properties properties83 = new java.util.Properties(properties81);
        java.util.Properties properties84 = null;
        java.util.Properties properties85 = new java.util.Properties(properties84);
        java.lang.Object obj87 = properties83.put((java.lang.Object) properties85, (java.lang.Object) (short) 1);
        java.util.Properties properties88 = new java.util.Properties(properties85);
        java.lang.Object obj89 = properties85.clone();
        java.lang.Object obj90 = properties2.putIfAbsent((java.lang.Object) properties80, (java.lang.Object) properties85);
        java.io.PrintWriter printWriter91 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties2.list(printWriter91);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 50 + "'", int4 == 50);
        org.junit.Assert.assertTrue("'" + long5 + "' != '" + 300000L + "'", long5 == 300000L);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNull(obj16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNull(obj28);
        org.junit.Assert.assertNull(obj36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(strSet38);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNull(obj46);
        org.junit.Assert.assertNull(str49);
        org.junit.Assert.assertNull(obj56);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertNull(obj64);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertNull(obj67);
        org.junit.Assert.assertNotNull(properties75);
        org.junit.Assert.assertEquals("'" + str76 + "' != '" + "" + "'", str76, "");
        org.junit.Assert.assertNotNull(properties79);
        org.junit.Assert.assertNotNull(properties80);
        org.junit.Assert.assertNull(obj87);
        org.junit.Assert.assertNotNull(obj89);
        org.junit.Assert.assertEquals(obj89.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj89), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj89), "{}");
        org.junit.Assert.assertNull(obj90);
    }

    @Test
    public void test1320() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1320");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Properties properties2 = new java.util.Properties(properties0);
        java.util.Properties properties3 = null;
        java.util.Properties properties4 = new java.util.Properties(properties3);
        java.lang.Object obj6 = properties2.put((java.lang.Object) properties4, (java.lang.Object) (short) 1);
        java.util.Enumeration<java.lang.Object> objEnumeration7 = properties4.elements();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet8 = properties4.entrySet();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties9 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties9.setDefaultJtaTimeout((long) (byte) 10);
        long long12 = atomikosProperties9.getDefaultJtaTimeout();
        atomikosProperties9.setTransactionManagerUniqueName("");
        boolean boolean15 = atomikosProperties9.isEnableLogging();
        boolean boolean16 = properties4.containsKey((java.lang.Object) boolean15);
        java.util.Properties properties17 = null;
        java.util.Properties properties18 = new java.util.Properties(properties17);
        java.util.Properties properties19 = new java.util.Properties(properties17);
        java.util.Properties properties20 = null;
        java.util.Properties properties21 = new java.util.Properties(properties20);
        java.lang.Object obj23 = properties19.put((java.lang.Object) properties21, (java.lang.Object) (short) 1);
        java.util.Properties properties25 = null;
        java.util.Properties properties26 = new java.util.Properties(properties25);
        java.util.Properties properties27 = new java.util.Properties(properties25);
        java.util.Properties properties28 = null;
        java.util.Properties properties29 = new java.util.Properties(properties28);
        java.lang.Object obj31 = properties27.put((java.lang.Object) properties29, (java.lang.Object) (short) 1);
        boolean boolean32 = properties21.remove((java.lang.Object) false, (java.lang.Object) (short) 1);
        java.util.Set<java.lang.String> strSet33 = properties21.stringPropertyNames();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties34 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties34.setThreadedTwoPhaseCommit(true);
        atomikosProperties34.setMaxActives((int) (byte) 0);
        atomikosProperties34.setEnableLogging(true);
        atomikosProperties34.setForceShutdownOnVmExit(false);
        java.lang.Object obj43 = properties21.get((java.lang.Object) false);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties44 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties44.setDefaultJtaTimeout((long) (byte) 10);
        atomikosProperties44.setCheckpointInterval((long) (byte) 0);
        atomikosProperties44.setTransactionManagerUniqueName("");
        java.util.Properties properties51 = atomikosProperties44.asProperties();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties52 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties52.setThreadedTwoPhaseCommit(true);
        atomikosProperties52.setMaxActives((int) '#');
        atomikosProperties52.setForceShutdownOnVmExit(true);
        java.lang.String str59 = atomikosProperties52.getLogBaseDir();
        java.lang.Object obj60 = properties51.remove((java.lang.Object) atomikosProperties52);
        java.util.Collection<java.lang.Object> objCollection61 = properties51.values();
        boolean boolean62 = properties4.remove((java.lang.Object) false, (java.lang.Object) properties51);
        java.util.Properties properties63 = new java.util.Properties(properties4);
        java.util.Set<java.lang.String> strSet64 = properties63.stringPropertyNames();
        org.junit.Assert.assertNull(obj6);
        org.junit.Assert.assertNotNull(objEnumeration7);
        org.junit.Assert.assertNotNull(objEntrySet8);
        org.junit.Assert.assertTrue("'" + long12 + "' != '" + 10L + "'", long12 == 10L);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNull(obj23);
        org.junit.Assert.assertNull(obj31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(strSet33);
        org.junit.Assert.assertNull(obj43);
        org.junit.Assert.assertNotNull(properties51);
        org.junit.Assert.assertNull(str59);
        org.junit.Assert.assertNull(obj60);
        org.junit.Assert.assertNotNull(objCollection61);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertNotNull(strSet64);
    }

    @Test
    public void test1321() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1321");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Properties properties2 = new java.util.Properties(properties0);
        java.util.Properties properties3 = null;
        java.util.Properties properties4 = new java.util.Properties(properties3);
        java.lang.Object obj6 = properties2.put((java.lang.Object) properties4, (java.lang.Object) (short) 1);
        java.util.Properties properties8 = null;
        java.util.Properties properties9 = new java.util.Properties(properties8);
        java.util.Properties properties10 = new java.util.Properties(properties8);
        java.util.Properties properties11 = null;
        java.util.Properties properties12 = new java.util.Properties(properties11);
        java.lang.Object obj14 = properties10.put((java.lang.Object) properties12, (java.lang.Object) (short) 1);
        boolean boolean15 = properties4.remove((java.lang.Object) false, (java.lang.Object) (short) 1);
        java.util.Set<java.lang.String> strSet16 = properties4.stringPropertyNames();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties17 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties17.setDefaultJtaTimeout((long) (byte) 10);
        long long20 = atomikosProperties17.getDefaultJtaTimeout();
        java.lang.Object obj21 = properties4.get((java.lang.Object) atomikosProperties17);
        java.util.Properties properties22 = null;
        java.util.Properties properties23 = new java.util.Properties(properties22);
        java.util.Properties properties24 = new java.util.Properties(properties22);
        java.util.Properties properties25 = null;
        java.util.Properties properties26 = new java.util.Properties(properties25);
        java.lang.Object obj28 = properties24.put((java.lang.Object) properties26, (java.lang.Object) (short) 1);
        java.util.Properties properties30 = null;
        java.util.Properties properties31 = new java.util.Properties(properties30);
        java.util.Properties properties32 = new java.util.Properties(properties30);
        java.util.Properties properties33 = null;
        java.util.Properties properties34 = new java.util.Properties(properties33);
        java.lang.Object obj36 = properties32.put((java.lang.Object) properties34, (java.lang.Object) (short) 1);
        boolean boolean37 = properties26.remove((java.lang.Object) false, (java.lang.Object) (short) 1);
        java.lang.Object obj39 = properties26.remove((java.lang.Object) '#');
        java.util.Set<java.lang.Object> objSet40 = properties26.keySet();
        boolean boolean41 = properties4.containsKey((java.lang.Object) properties26);
        properties4.clear();
        java.io.OutputStream outputStream43 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties4.storeToXML(outputStream43, "{{tmlog={com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=0, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.tm_unique_name=, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}, 4=true}={com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=0, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog, {}={}}}");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(obj6);
        org.junit.Assert.assertNull(obj14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(strSet16);
        org.junit.Assert.assertTrue("'" + long20 + "' != '" + 10L + "'", long20 == 10L);
        org.junit.Assert.assertNull(obj21);
        org.junit.Assert.assertNull(obj28);
        org.junit.Assert.assertNull(obj36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNull(obj39);
        org.junit.Assert.assertNotNull(objSet40);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
    }

    @Test
    public void test1322() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1322");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Properties properties2 = new java.util.Properties(properties0);
        java.util.Properties properties3 = null;
        java.util.Properties properties4 = new java.util.Properties(properties3);
        java.lang.Object obj6 = properties2.put((java.lang.Object) properties4, (java.lang.Object) (short) 1);
        properties4.clear();
        int int8 = properties4.size();
        java.util.Properties properties9 = null;
        java.util.Properties properties10 = new java.util.Properties(properties9);
        java.util.Properties properties11 = new java.util.Properties(properties9);
        java.util.Properties properties12 = null;
        java.util.Properties properties13 = new java.util.Properties(properties12);
        java.lang.Object obj15 = properties11.put((java.lang.Object) properties13, (java.lang.Object) (short) 1);
        java.util.Properties properties16 = new java.util.Properties(properties13);
        java.util.Properties properties17 = new java.util.Properties(properties13);
        boolean boolean19 = properties4.remove((java.lang.Object) properties13, (java.lang.Object) 10.0f);
        java.util.Enumeration<java.lang.Object> objEnumeration20 = properties13.elements();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties21 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties21.setDefaultJtaTimeout((long) (byte) 10);
        atomikosProperties21.setCheckpointInterval((long) (byte) 0);
        long long26 = atomikosProperties21.getMaxTimeout();
        atomikosProperties21.setSerialJtaTransactions(true);
        java.util.Properties properties29 = new java.util.Properties();
        java.util.Enumeration<?> wildcardEnumeration30 = properties29.propertyNames();
        java.lang.Object obj31 = properties13.replace((java.lang.Object) atomikosProperties21, (java.lang.Object) properties29);
        java.io.OutputStream outputStream32 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties29.storeToXML(outputStream32, "{=}");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(obj6);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertNull(obj15);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(objEnumeration20);
        org.junit.Assert.assertTrue("'" + long26 + "' != '" + 300000L + "'", long26 == 300000L);
        org.junit.Assert.assertNotNull(wildcardEnumeration30);
        org.junit.Assert.assertNull(obj31);
    }

    @Test
    public void test1323() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1323");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Properties properties2 = new java.util.Properties(properties0);
        boolean boolean4 = properties2.containsValue((java.lang.Object) (short) 100);
        java.util.Properties properties5 = null;
        java.util.Properties properties6 = new java.util.Properties(properties5);
        java.util.Properties properties7 = new java.util.Properties(properties5);
        java.util.Properties properties8 = null;
        java.util.Properties properties9 = new java.util.Properties(properties8);
        java.lang.Object obj11 = properties7.put((java.lang.Object) properties9, (java.lang.Object) (short) 1);
        java.util.Enumeration<java.lang.Object> objEnumeration12 = properties9.elements();
        java.lang.Object obj13 = properties2.remove((java.lang.Object) properties9);
        java.lang.Object obj16 = properties9.setProperty("", "");
        java.util.Properties properties17 = null;
        java.util.Properties properties18 = new java.util.Properties(properties17);
        java.util.Properties properties19 = new java.util.Properties(properties17);
        java.util.Properties properties20 = null;
        java.util.Properties properties21 = new java.util.Properties(properties20);
        java.lang.Object obj23 = properties19.put((java.lang.Object) properties21, (java.lang.Object) (short) 1);
        java.util.Properties properties25 = null;
        java.util.Properties properties26 = new java.util.Properties(properties25);
        java.util.Properties properties27 = new java.util.Properties(properties25);
        java.util.Properties properties28 = null;
        java.util.Properties properties29 = new java.util.Properties(properties28);
        java.lang.Object obj31 = properties27.put((java.lang.Object) properties29, (java.lang.Object) (short) 1);
        boolean boolean32 = properties21.remove((java.lang.Object) false, (java.lang.Object) (short) 1);
        java.util.Properties properties33 = new java.util.Properties(properties21);
        properties9.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties33);
        java.util.Properties properties35 = null;
        java.util.Properties properties36 = new java.util.Properties(properties35);
        java.util.Properties properties37 = new java.util.Properties(properties35);
        java.util.Properties properties38 = null;
        java.util.Properties properties39 = new java.util.Properties(properties38);
        java.lang.Object obj41 = properties37.put((java.lang.Object) properties39, (java.lang.Object) (short) 1);
        properties39.clear();
        int int43 = properties39.size();
        java.util.Properties properties44 = null;
        java.util.Properties properties45 = new java.util.Properties(properties44);
        java.util.Properties properties46 = new java.util.Properties(properties44);
        java.util.Properties properties47 = null;
        java.util.Properties properties48 = new java.util.Properties(properties47);
        java.lang.Object obj50 = properties46.put((java.lang.Object) properties48, (java.lang.Object) (short) 1);
        java.util.Properties properties51 = new java.util.Properties(properties48);
        java.util.Properties properties52 = new java.util.Properties(properties48);
        boolean boolean54 = properties39.remove((java.lang.Object) properties48, (java.lang.Object) 10.0f);
        java.util.Enumeration<java.lang.Object> objEnumeration55 = properties48.elements();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties56 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties56.setDefaultJtaTimeout((long) (byte) 10);
        atomikosProperties56.setCheckpointInterval((long) (byte) 0);
        long long61 = atomikosProperties56.getMaxTimeout();
        atomikosProperties56.setSerialJtaTransactions(true);
        java.util.Properties properties64 = new java.util.Properties();
        java.util.Enumeration<?> wildcardEnumeration65 = properties64.propertyNames();
        java.lang.Object obj66 = properties48.replace((java.lang.Object) atomikosProperties56, (java.lang.Object) properties64);
        boolean boolean67 = properties9.contains((java.lang.Object) properties64);
        java.util.Set<java.lang.Object> objSet68 = properties9.keySet();
        java.util.Set<java.lang.Object> objSet69 = properties9.keySet();
        java.io.InputStream inputStream70 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties9.loadFromXML(inputStream70);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNull(obj11);
        org.junit.Assert.assertNotNull(objEnumeration12);
        org.junit.Assert.assertNull(obj13);
        org.junit.Assert.assertNull(obj16);
        org.junit.Assert.assertNull(obj23);
        org.junit.Assert.assertNull(obj31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNull(obj41);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 0 + "'", int43 == 0);
        org.junit.Assert.assertNull(obj50);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertNotNull(objEnumeration55);
        org.junit.Assert.assertTrue("'" + long61 + "' != '" + 300000L + "'", long61 == 300000L);
        org.junit.Assert.assertNotNull(wildcardEnumeration65);
        org.junit.Assert.assertNull(obj66);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertNotNull(objSet68);
        org.junit.Assert.assertNotNull(objSet69);
    }

    @Test
    public void test1324() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1324");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setThreadedTwoPhaseCommit(true);
        atomikosProperties0.setMaxActives((int) (byte) 0);
        java.lang.String str5 = atomikosProperties0.getLogBaseDir();
        atomikosProperties0.setThreadedTwoPhaseCommit(true);
        java.lang.String str8 = atomikosProperties0.getTransactionManagerUniqueName();
        java.lang.String str9 = atomikosProperties0.getService();
        atomikosProperties0.setDefaultJtaTimeout((long) 11);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNull(str9);
    }

    @Test
    public void test1325() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1325");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setDefaultJtaTimeout((long) (byte) 10);
        long long3 = atomikosProperties0.getDefaultJtaTimeout();
        atomikosProperties0.setTransactionManagerUniqueName("");
        boolean boolean6 = atomikosProperties0.isEnableLogging();
        java.lang.String str7 = atomikosProperties0.getLogBaseDir();
        java.util.Properties properties8 = atomikosProperties0.asProperties();
        atomikosProperties0.setForceShutdownOnVmExit(true);
        long long11 = atomikosProperties0.getCheckpointInterval();
        atomikosProperties0.setForceShutdownOnVmExit(true);
        atomikosProperties0.setLogBaseDir("");
        java.lang.String str16 = atomikosProperties0.getService();
        atomikosProperties0.setForceShutdownOnVmExit(false);
        org.junit.Assert.assertTrue("'" + long3 + "' != '" + 10L + "'", long3 == 10L);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNotNull(properties8);
        org.junit.Assert.assertTrue("'" + long11 + "' != '" + 500L + "'", long11 == 500L);
        org.junit.Assert.assertNull(str16);
    }

    @Test
    public void test1326() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1326");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Properties properties2 = new java.util.Properties(properties0);
        java.util.Properties properties3 = null;
        java.util.Properties properties4 = new java.util.Properties(properties3);
        java.lang.Object obj6 = properties2.put((java.lang.Object) properties4, (java.lang.Object) (short) 1);
        boolean boolean7 = properties2.isEmpty();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties8 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties8.setDefaultJtaTimeout((long) (byte) 10);
        atomikosProperties8.setCheckpointInterval((long) (byte) 0);
        atomikosProperties8.setTransactionManagerUniqueName("");
        java.util.Properties properties15 = atomikosProperties8.asProperties();
        java.lang.Object obj16 = properties2.remove((java.lang.Object) properties15);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties17 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties17.setDefaultJtaTimeout((long) (byte) 10);
        atomikosProperties17.setCheckpointInterval((long) (byte) 0);
        atomikosProperties17.setTransactionManagerUniqueName("");
        java.lang.Object obj24 = properties15.remove((java.lang.Object) atomikosProperties17);
        java.util.Enumeration<java.lang.Object> objEnumeration25 = properties15.elements();
        java.util.Properties properties26 = null;
        java.util.Properties properties27 = new java.util.Properties(properties26);
        java.util.Properties properties28 = new java.util.Properties(properties26);
        java.lang.Object obj29 = properties28.clone();
        java.lang.Object obj32 = properties28.setProperty("tmlog", "");
        java.util.Properties properties33 = null;
        java.util.Properties properties34 = new java.util.Properties(properties33);
        java.util.Properties properties35 = new java.util.Properties(properties33);
        java.util.Properties properties36 = null;
        java.util.Properties properties37 = new java.util.Properties(properties36);
        java.lang.Object obj39 = properties35.put((java.lang.Object) properties37, (java.lang.Object) (short) 1);
        java.util.Properties properties41 = null;
        java.util.Properties properties42 = new java.util.Properties(properties41);
        java.util.Properties properties43 = new java.util.Properties(properties41);
        java.util.Properties properties44 = null;
        java.util.Properties properties45 = new java.util.Properties(properties44);
        java.lang.Object obj47 = properties43.put((java.lang.Object) properties45, (java.lang.Object) (short) 1);
        boolean boolean48 = properties37.remove((java.lang.Object) false, (java.lang.Object) (short) 1);
        java.util.Set<java.lang.String> strSet49 = properties37.stringPropertyNames();
        java.lang.Object obj50 = properties37.clone();
        boolean boolean51 = properties28.equals(obj50);
        java.lang.Class<?> wildcardClass52 = properties28.getClass();
        boolean boolean53 = properties15.containsValue((java.lang.Object) properties28);
        org.junit.Assert.assertNull(obj6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(properties15);
        org.junit.Assert.assertNull(obj16);
        org.junit.Assert.assertNull(obj24);
        org.junit.Assert.assertNotNull(objEnumeration25);
        org.junit.Assert.assertNotNull(obj29);
        org.junit.Assert.assertEquals(obj29.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj29), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj29), "{}");
        org.junit.Assert.assertNull(obj32);
        org.junit.Assert.assertNull(obj39);
        org.junit.Assert.assertNull(obj47);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNotNull(strSet49);
        org.junit.Assert.assertNotNull(obj50);
        org.junit.Assert.assertEquals(obj50.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj50), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj50), "{}");
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertNotNull(wildcardClass52);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
    }

    @Test
    public void test1327() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1327");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Properties properties2 = new java.util.Properties(properties0);
        java.util.Properties properties3 = null;
        java.util.Properties properties4 = new java.util.Properties(properties3);
        java.lang.Object obj6 = properties2.put((java.lang.Object) properties4, (java.lang.Object) (short) 1);
        properties4.clear();
        int int8 = properties4.size();
        java.util.Properties properties9 = new java.util.Properties(properties4);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties10 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        int int11 = atomikosProperties10.getMaxActives();
        long long12 = atomikosProperties10.getMaxTimeout();
        java.util.Properties properties13 = atomikosProperties10.asProperties();
        java.util.Properties properties14 = atomikosProperties10.asProperties();
        java.util.Properties properties15 = null;
        java.util.Properties properties16 = new java.util.Properties(properties15);
        java.util.Properties properties17 = new java.util.Properties(properties15);
        java.util.Properties properties18 = null;
        java.util.Properties properties19 = new java.util.Properties(properties18);
        java.lang.Object obj21 = properties17.put((java.lang.Object) properties19, (java.lang.Object) (short) 1);
        java.util.Enumeration<java.lang.Object> objEnumeration22 = properties19.elements();
        java.lang.Object obj23 = properties4.replace((java.lang.Object) atomikosProperties10, (java.lang.Object) properties19);
        java.lang.String str24 = properties19.toString();
        boolean boolean25 = properties19.isEmpty();
        org.junit.Assert.assertNull(obj6);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 50 + "'", int11 == 50);
        org.junit.Assert.assertTrue("'" + long12 + "' != '" + 300000L + "'", long12 == 300000L);
        org.junit.Assert.assertNotNull(properties13);
        org.junit.Assert.assertNotNull(properties14);
        org.junit.Assert.assertNull(obj21);
        org.junit.Assert.assertNotNull(objEnumeration22);
        org.junit.Assert.assertNull(obj23);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "{}" + "'", str24, "{}");
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
    }

    @Test
    public void test1328() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1328");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setDefaultJtaTimeout((long) (byte) 10);
        atomikosProperties0.setSerialJtaTransactions(false);
        atomikosProperties0.setMaxTimeout((long) (short) -1);
        long long7 = atomikosProperties0.getDefaultJtaTimeout();
        java.util.Properties properties8 = atomikosProperties0.asProperties();
        java.lang.Class<?> wildcardClass9 = atomikosProperties0.getClass();
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + 10L + "'", long7 == 10L);
        org.junit.Assert.assertNotNull(properties8);
        org.junit.Assert.assertNotNull(wildcardClass9);
    }

    @Test
    public void test1329() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1329");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Properties properties2 = new java.util.Properties(properties0);
        boolean boolean4 = properties2.containsValue((java.lang.Object) (short) 100);
        java.util.Properties properties5 = null;
        java.util.Properties properties6 = new java.util.Properties(properties5);
        java.util.Properties properties7 = new java.util.Properties(properties5);
        java.util.Properties properties8 = null;
        java.util.Properties properties9 = new java.util.Properties(properties8);
        java.lang.Object obj11 = properties7.put((java.lang.Object) properties9, (java.lang.Object) (short) 1);
        java.util.Enumeration<java.lang.Object> objEnumeration12 = properties9.elements();
        java.lang.Object obj13 = properties2.remove((java.lang.Object) properties9);
        java.lang.Object obj16 = properties9.setProperty("", "");
        java.util.Properties properties17 = null;
        java.util.Properties properties18 = new java.util.Properties(properties17);
        java.util.Properties properties19 = new java.util.Properties(properties17);
        java.util.Properties properties20 = null;
        java.util.Properties properties21 = new java.util.Properties(properties20);
        java.lang.Object obj23 = properties19.put((java.lang.Object) properties21, (java.lang.Object) (short) 1);
        java.util.Properties properties25 = null;
        java.util.Properties properties26 = new java.util.Properties(properties25);
        java.util.Properties properties27 = new java.util.Properties(properties25);
        java.util.Properties properties28 = null;
        java.util.Properties properties29 = new java.util.Properties(properties28);
        java.lang.Object obj31 = properties27.put((java.lang.Object) properties29, (java.lang.Object) (short) 1);
        boolean boolean32 = properties21.remove((java.lang.Object) false, (java.lang.Object) (short) 1);
        java.util.Properties properties33 = new java.util.Properties(properties21);
        properties9.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties33);
        java.lang.Object obj35 = properties9.clone();
        boolean boolean36 = properties9.isEmpty();
        java.io.Reader reader37 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties9.load(reader37);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNull(obj11);
        org.junit.Assert.assertNotNull(objEnumeration12);
        org.junit.Assert.assertNull(obj13);
        org.junit.Assert.assertNull(obj16);
        org.junit.Assert.assertNull(obj23);
        org.junit.Assert.assertNull(obj31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(obj35);
        org.junit.Assert.assertEquals(obj35.toString(), "{=}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj35), "{=}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj35), "{=}");
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
    }

    @Test
    public void test1330() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1330");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setDefaultJtaTimeout((long) (byte) 10);
        atomikosProperties0.setSerialJtaTransactions(false);
        atomikosProperties0.setMaxTimeout((long) (short) -1);
        long long7 = atomikosProperties0.getDefaultJtaTimeout();
        boolean boolean8 = atomikosProperties0.isThreadedTwoPhaseCommit();
        atomikosProperties0.setForceShutdownOnVmExit(true);
        boolean boolean11 = atomikosProperties0.isEnableLogging();
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + 10L + "'", long7 == 10L);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
    }

    @Test
    public void test1331() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1331");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        int int1 = atomikosProperties0.getMaxActives();
        java.util.Properties properties2 = atomikosProperties0.asProperties();
        java.util.Properties properties3 = null;
        java.util.Properties properties4 = new java.util.Properties(properties3);
        java.util.Properties properties5 = new java.util.Properties(properties3);
        boolean boolean7 = properties5.containsValue((java.lang.Object) (short) 100);
        java.util.Properties properties8 = null;
        java.util.Properties properties9 = new java.util.Properties(properties8);
        java.util.Properties properties10 = new java.util.Properties(properties8);
        java.util.Properties properties11 = null;
        java.util.Properties properties12 = new java.util.Properties(properties11);
        java.lang.Object obj14 = properties10.put((java.lang.Object) properties12, (java.lang.Object) (short) 1);
        java.util.Enumeration<java.lang.Object> objEnumeration15 = properties12.elements();
        java.lang.Object obj16 = properties5.remove((java.lang.Object) properties12);
        java.util.Properties properties17 = null;
        java.util.Properties properties18 = new java.util.Properties(properties17);
        java.util.Properties properties19 = new java.util.Properties(properties17);
        java.util.Properties properties20 = null;
        java.util.Properties properties21 = new java.util.Properties(properties20);
        java.lang.Object obj23 = properties19.put((java.lang.Object) properties21, (java.lang.Object) (short) 1);
        java.util.Enumeration<java.lang.Object> objEnumeration24 = properties21.elements();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet25 = properties21.entrySet();
        java.util.Set<java.lang.Object> objSet26 = properties21.keySet();
        java.util.Properties properties27 = null;
        java.util.Properties properties28 = new java.util.Properties(properties27);
        java.util.Properties properties29 = new java.util.Properties(properties27);
        java.util.Properties properties30 = null;
        java.util.Properties properties31 = new java.util.Properties(properties30);
        java.lang.Object obj33 = properties29.put((java.lang.Object) properties31, (java.lang.Object) (short) 1);
        properties31.clear();
        int int35 = properties31.size();
        java.util.Properties properties36 = new java.util.Properties(properties31);
        java.util.Properties properties37 = null;
        java.util.Properties properties38 = new java.util.Properties(properties37);
        java.util.Properties properties39 = new java.util.Properties(properties37);
        java.util.Properties properties40 = null;
        java.util.Properties properties41 = new java.util.Properties(properties40);
        java.lang.Object obj43 = properties39.put((java.lang.Object) properties41, (java.lang.Object) (short) 1);
        properties41.clear();
        java.lang.String str46 = properties41.getProperty("");
        java.util.Properties properties47 = null;
        java.util.Properties properties48 = new java.util.Properties(properties47);
        java.util.Properties properties49 = new java.util.Properties(properties47);
        java.util.Properties properties50 = null;
        java.util.Properties properties51 = new java.util.Properties(properties50);
        java.lang.Object obj53 = properties49.put((java.lang.Object) properties51, (java.lang.Object) (short) 1);
        properties41.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties49);
        java.lang.Object obj55 = properties21.put((java.lang.Object) properties31, (java.lang.Object) properties49);
        java.util.Properties properties56 = null;
        java.util.Properties properties57 = new java.util.Properties(properties56);
        java.util.Properties properties58 = new java.util.Properties(properties56);
        java.util.Properties properties59 = null;
        java.util.Properties properties60 = new java.util.Properties(properties59);
        java.lang.Object obj62 = properties58.put((java.lang.Object) properties60, (java.lang.Object) (short) 1);
        java.util.Properties properties63 = new java.util.Properties(properties60);
        java.util.Properties properties64 = new java.util.Properties(properties60);
        java.util.Set<java.lang.Object> objSet65 = properties64.keySet();
        java.lang.Object obj66 = properties5.replace((java.lang.Object) properties21, (java.lang.Object) objSet65);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties67 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        int int68 = atomikosProperties67.getMaxActives();
        long long69 = atomikosProperties67.getMaxTimeout();
        java.util.Properties properties70 = atomikosProperties67.asProperties();
        atomikosProperties67.setService("hi!");
        boolean boolean73 = properties2.remove((java.lang.Object) properties5, (java.lang.Object) "hi!");
        java.lang.Object obj74 = properties2.clone();
        boolean boolean75 = properties2.isEmpty();
        java.util.Properties properties76 = new java.util.Properties(properties2);
        java.io.PrintStream printStream77 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties2.list(printStream77);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 50 + "'", int1 == 50);
        org.junit.Assert.assertNotNull(properties2);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNull(obj14);
        org.junit.Assert.assertNotNull(objEnumeration15);
        org.junit.Assert.assertNull(obj16);
        org.junit.Assert.assertNull(obj23);
        org.junit.Assert.assertNotNull(objEnumeration24);
        org.junit.Assert.assertNotNull(objEntrySet25);
        org.junit.Assert.assertNotNull(objSet26);
        org.junit.Assert.assertNull(obj33);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 0 + "'", int35 == 0);
        org.junit.Assert.assertNull(obj43);
        org.junit.Assert.assertNull(str46);
        org.junit.Assert.assertNull(obj53);
        org.junit.Assert.assertNull(obj55);
        org.junit.Assert.assertNull(obj62);
        org.junit.Assert.assertNotNull(objSet65);
        org.junit.Assert.assertNull(obj66);
        org.junit.Assert.assertTrue("'" + int68 + "' != '" + 50 + "'", int68 == 50);
        org.junit.Assert.assertTrue("'" + long69 + "' != '" + 300000L + "'", long69 == 300000L);
        org.junit.Assert.assertNotNull(properties70);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertNotNull(obj74);
// flaky:         org.junit.Assert.assertEquals(obj74.toString(), "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
// flaky:         org.junit.Assert.assertEquals(java.lang.String.valueOf(obj74), "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
// flaky:         org.junit.Assert.assertEquals(java.util.Objects.toString(obj74), "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
    }

    @Test
    public void test1332() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1332");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Properties properties2 = new java.util.Properties(properties0);
        java.util.Properties properties3 = null;
        java.util.Properties properties4 = new java.util.Properties(properties3);
        java.lang.Object obj6 = properties2.put((java.lang.Object) properties4, (java.lang.Object) (short) 1);
        properties4.clear();
        int int8 = properties4.size();
        java.util.Properties properties9 = new java.util.Properties(properties4);
        java.lang.Object obj11 = properties4.get((java.lang.Object) (byte) -1);
        java.util.Properties properties12 = null;
        java.util.Properties properties13 = new java.util.Properties(properties12);
        java.util.Properties properties14 = new java.util.Properties(properties12);
        boolean boolean16 = properties14.containsValue((java.lang.Object) (short) 100);
        java.util.Properties properties17 = null;
        java.util.Properties properties18 = new java.util.Properties(properties17);
        java.util.Properties properties19 = new java.util.Properties(properties17);
        java.util.Properties properties20 = null;
        java.util.Properties properties21 = new java.util.Properties(properties20);
        java.lang.Object obj23 = properties19.put((java.lang.Object) properties21, (java.lang.Object) (short) 1);
        java.util.Enumeration<java.lang.Object> objEnumeration24 = properties21.elements();
        java.lang.Object obj25 = properties14.remove((java.lang.Object) properties21);
        java.util.Enumeration<?> wildcardEnumeration26 = properties14.propertyNames();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties27 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties27.setDefaultJtaTimeout((long) (byte) 10);
        long long30 = atomikosProperties27.getDefaultJtaTimeout();
        atomikosProperties27.setTransactionManagerUniqueName("");
        boolean boolean33 = atomikosProperties27.isEnableLogging();
        java.lang.String str34 = atomikosProperties27.getLogBaseDir();
        java.util.Properties properties35 = atomikosProperties27.asProperties();
        java.lang.String str36 = atomikosProperties27.getService();
        atomikosProperties27.setLogBaseName("{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=0, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog, {}={}}");
        atomikosProperties27.setForceShutdownOnVmExit(false);
        java.lang.String str41 = atomikosProperties27.getService();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj42 = properties4.put((java.lang.Object) properties14, (java.lang.Object) str41);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(obj6);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertNull(obj11);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNull(obj23);
        org.junit.Assert.assertNotNull(objEnumeration24);
        org.junit.Assert.assertNull(obj25);
        org.junit.Assert.assertNotNull(wildcardEnumeration26);
        org.junit.Assert.assertTrue("'" + long30 + "' != '" + 10L + "'", long30 == 10L);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNull(str34);
        org.junit.Assert.assertNotNull(properties35);
        org.junit.Assert.assertNull(str36);
        org.junit.Assert.assertNull(str41);
    }

    @Test
    public void test1333() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1333");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Properties properties2 = new java.util.Properties(properties0);
        java.util.Properties properties3 = null;
        java.util.Properties properties4 = new java.util.Properties(properties3);
        java.lang.Object obj6 = properties2.put((java.lang.Object) properties4, (java.lang.Object) (short) 1);
        boolean boolean7 = properties2.isEmpty();
        java.util.Properties properties8 = null;
        java.util.Properties properties9 = new java.util.Properties(properties8);
        java.util.Properties properties10 = new java.util.Properties(properties8);
        boolean boolean11 = properties2.containsKey((java.lang.Object) properties10);
        java.util.Properties properties12 = new java.util.Properties(properties10);
        java.util.Properties properties13 = new java.util.Properties(properties12);
        java.util.Properties properties14 = null;
        java.util.Properties properties15 = new java.util.Properties(properties14);
        java.util.Properties properties16 = new java.util.Properties(properties14);
        java.util.Properties properties17 = null;
        java.util.Properties properties18 = new java.util.Properties(properties17);
        java.lang.Object obj20 = properties16.put((java.lang.Object) properties18, (java.lang.Object) (short) 1);
        properties18.clear();
        int int22 = properties18.size();
        java.util.Properties properties23 = new java.util.Properties(properties18);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties24 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        int int25 = atomikosProperties24.getMaxActives();
        long long26 = atomikosProperties24.getMaxTimeout();
        java.util.Properties properties27 = atomikosProperties24.asProperties();
        java.util.Properties properties28 = atomikosProperties24.asProperties();
        java.util.Properties properties29 = null;
        java.util.Properties properties30 = new java.util.Properties(properties29);
        java.util.Properties properties31 = new java.util.Properties(properties29);
        java.util.Properties properties32 = null;
        java.util.Properties properties33 = new java.util.Properties(properties32);
        java.lang.Object obj35 = properties31.put((java.lang.Object) properties33, (java.lang.Object) (short) 1);
        java.util.Enumeration<java.lang.Object> objEnumeration36 = properties33.elements();
        java.lang.Object obj37 = properties18.replace((java.lang.Object) atomikosProperties24, (java.lang.Object) properties33);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties39 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties39.setThreadedTwoPhaseCommit(true);
        java.lang.String str42 = atomikosProperties39.getService();
        boolean boolean43 = atomikosProperties39.isSerialJtaTransactions();
        java.lang.Object obj44 = properties33.getOrDefault((java.lang.Object) "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.tm_unique_name=, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}", (java.lang.Object) atomikosProperties39);
        boolean boolean45 = properties12.equals((java.lang.Object) properties33);
        java.util.Properties properties46 = new java.util.Properties(properties12);
        java.io.OutputStream outputStream47 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties12.save(outputStream47, "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=0, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.tm_unique_name=, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(obj6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNull(obj20);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 0 + "'", int22 == 0);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 50 + "'", int25 == 50);
        org.junit.Assert.assertTrue("'" + long26 + "' != '" + 300000L + "'", long26 == 300000L);
        org.junit.Assert.assertNotNull(properties27);
        org.junit.Assert.assertNotNull(properties28);
        org.junit.Assert.assertNull(obj35);
        org.junit.Assert.assertNotNull(objEnumeration36);
        org.junit.Assert.assertNull(obj37);
        org.junit.Assert.assertNull(str42);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNotNull(obj44);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
    }

    @Test
    public void test1334() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1334");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Properties properties2 = new java.util.Properties(properties0);
        java.util.Properties properties3 = null;
        java.util.Properties properties4 = new java.util.Properties(properties3);
        java.lang.Object obj6 = properties2.put((java.lang.Object) properties4, (java.lang.Object) (short) 1);
        properties4.clear();
        int int8 = properties4.size();
        java.lang.Object obj11 = properties4.setProperty("hi!", "hi!");
        java.lang.Object obj14 = properties4.setProperty("tmlog", "tmlog");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties15 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties15.setThreadedTwoPhaseCommit(true);
        atomikosProperties15.setMaxActives((int) '#');
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties20 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties20.setDefaultJtaTimeout((long) (byte) 10);
        atomikosProperties20.setCheckpointInterval((long) (byte) 0);
        atomikosProperties20.setTransactionManagerUniqueName("");
        java.util.Properties properties27 = atomikosProperties20.asProperties();
        java.lang.String str28 = atomikosProperties20.getLogBaseName();
        atomikosProperties20.setCheckpointInterval(100L);
        atomikosProperties20.setLogBaseName("");
        atomikosProperties20.setCheckpointInterval((long) (byte) 1);
        java.lang.Object obj35 = properties4.getOrDefault((java.lang.Object) atomikosProperties15, (java.lang.Object) (byte) 1);
        java.util.Collection<java.lang.Object> objCollection36 = properties4.values();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties37 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties37.setDefaultJtaTimeout((long) (byte) 10);
        atomikosProperties37.setCheckpointInterval((long) (byte) 0);
        atomikosProperties37.setTransactionManagerUniqueName("");
        java.util.Properties properties44 = atomikosProperties37.asProperties();
        java.lang.String str45 = atomikosProperties37.getLogBaseName();
        atomikosProperties37.setCheckpointInterval(100L);
        atomikosProperties37.setLogBaseName("");
        atomikosProperties37.setCheckpointInterval((long) (byte) 1);
        boolean boolean52 = properties4.containsKey((java.lang.Object) atomikosProperties37);
        boolean boolean53 = atomikosProperties37.isEnableLogging();
        org.junit.Assert.assertNull(obj6);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertNull(obj11);
        org.junit.Assert.assertNull(obj14);
        org.junit.Assert.assertNotNull(properties27);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "tmlog" + "'", str28, "tmlog");
        org.junit.Assert.assertEquals("'" + obj35 + "' != '" + (byte) 1 + "'", obj35, (byte) 1);
        org.junit.Assert.assertNotNull(objCollection36);
        org.junit.Assert.assertNotNull(properties44);
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "tmlog" + "'", str45, "tmlog");
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
    }

    @Test
    public void test1335() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1335");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Properties properties2 = new java.util.Properties(properties0);
        boolean boolean4 = properties2.containsValue((java.lang.Object) (short) 100);
        java.util.Properties properties5 = new java.util.Properties(properties2);
        java.lang.String str7 = properties5.getProperty("hi!");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties8 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties8.setDefaultJtaTimeout((long) (byte) 10);
        long long11 = atomikosProperties8.getDefaultJtaTimeout();
        atomikosProperties8.setTransactionManagerUniqueName("hi!");
        atomikosProperties8.setLogBaseName("tmlog");
        boolean boolean16 = atomikosProperties8.isSerialJtaTransactions();
        java.util.Properties properties17 = atomikosProperties8.asProperties();
        boolean boolean18 = properties5.equals((java.lang.Object) atomikosProperties8);
        java.util.Set<java.lang.Object> objSet19 = properties5.keySet();
        java.util.Properties properties20 = null;
        java.util.Properties properties21 = new java.util.Properties(properties20);
        java.util.Properties properties22 = new java.util.Properties(properties20);
        boolean boolean24 = properties22.containsValue((java.lang.Object) (short) 100);
        java.util.Properties properties25 = null;
        java.util.Properties properties26 = new java.util.Properties(properties25);
        java.util.Properties properties27 = new java.util.Properties(properties25);
        java.util.Properties properties28 = null;
        java.util.Properties properties29 = new java.util.Properties(properties28);
        java.lang.Object obj31 = properties27.put((java.lang.Object) properties29, (java.lang.Object) (short) 1);
        java.util.Enumeration<java.lang.Object> objEnumeration32 = properties29.elements();
        java.lang.Object obj33 = properties22.remove((java.lang.Object) properties29);
        java.util.Enumeration<?> wildcardEnumeration34 = properties22.propertyNames();
        properties5.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties22);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties36 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties36.setThreadedTwoPhaseCommit(true);
        atomikosProperties36.setTransactionManagerUniqueName("tmlog");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties41 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties41.setDefaultJtaTimeout((long) (byte) 10);
        long long44 = atomikosProperties41.getDefaultJtaTimeout();
        atomikosProperties41.setTransactionManagerUniqueName("");
        boolean boolean47 = atomikosProperties41.isEnableLogging();
        java.lang.String str48 = atomikosProperties41.getLogBaseDir();
        java.util.Properties properties49 = atomikosProperties41.asProperties();
        java.lang.String str50 = atomikosProperties41.getService();
        atomikosProperties41.setMaxActives((int) (short) 1);
        atomikosProperties41.setThreadedTwoPhaseCommit(false);
        java.lang.Object obj55 = properties5.put((java.lang.Object) atomikosProperties36, (java.lang.Object) atomikosProperties41);
        java.lang.String str56 = atomikosProperties41.getService();
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertTrue("'" + long11 + "' != '" + 10L + "'", long11 == 10L);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(properties17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(objSet19);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNull(obj31);
        org.junit.Assert.assertNotNull(objEnumeration32);
        org.junit.Assert.assertNull(obj33);
        org.junit.Assert.assertNotNull(wildcardEnumeration34);
        org.junit.Assert.assertTrue("'" + long44 + "' != '" + 10L + "'", long44 == 10L);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertNull(str48);
        org.junit.Assert.assertNotNull(properties49);
        org.junit.Assert.assertNull(str50);
        org.junit.Assert.assertNull(obj55);
        org.junit.Assert.assertNull(str56);
    }

    @Test
    public void test1336() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1336");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setDefaultJtaTimeout((long) (byte) 10);
        long long3 = atomikosProperties0.getDefaultJtaTimeout();
        atomikosProperties0.setTransactionManagerUniqueName("");
        boolean boolean6 = atomikosProperties0.isEnableLogging();
        java.lang.String str7 = atomikosProperties0.getLogBaseName();
        atomikosProperties0.setMaxTimeout(10L);
        long long10 = atomikosProperties0.getDefaultJtaTimeout();
        java.util.Properties properties11 = atomikosProperties0.asProperties();
        java.util.Properties properties12 = new java.util.Properties(properties11);
        java.util.Properties properties13 = null;
        java.util.Properties properties14 = new java.util.Properties(properties13);
        java.util.Properties properties15 = new java.util.Properties(properties13);
        java.util.Properties properties16 = null;
        java.util.Properties properties17 = new java.util.Properties(properties16);
        java.lang.Object obj19 = properties15.put((java.lang.Object) properties17, (java.lang.Object) (short) 1);
        java.util.Properties properties21 = null;
        java.util.Properties properties22 = new java.util.Properties(properties21);
        java.util.Properties properties23 = new java.util.Properties(properties21);
        java.util.Properties properties24 = null;
        java.util.Properties properties25 = new java.util.Properties(properties24);
        java.lang.Object obj27 = properties23.put((java.lang.Object) properties25, (java.lang.Object) (short) 1);
        boolean boolean28 = properties17.remove((java.lang.Object) false, (java.lang.Object) (short) 1);
        java.util.Set<java.lang.String> strSet29 = properties17.stringPropertyNames();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties30 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties30.setDefaultJtaTimeout((long) (byte) 10);
        long long33 = atomikosProperties30.getDefaultJtaTimeout();
        java.lang.Object obj34 = properties17.get((java.lang.Object) atomikosProperties30);
        java.util.Properties properties35 = null;
        java.util.Properties properties36 = new java.util.Properties(properties35);
        java.util.Properties properties37 = new java.util.Properties(properties35);
        java.util.Properties properties38 = null;
        java.util.Properties properties39 = new java.util.Properties(properties38);
        java.lang.Object obj41 = properties37.put((java.lang.Object) properties39, (java.lang.Object) (short) 1);
        java.util.Properties properties43 = null;
        java.util.Properties properties44 = new java.util.Properties(properties43);
        java.util.Properties properties45 = new java.util.Properties(properties43);
        java.util.Properties properties46 = null;
        java.util.Properties properties47 = new java.util.Properties(properties46);
        java.lang.Object obj49 = properties45.put((java.lang.Object) properties47, (java.lang.Object) (short) 1);
        boolean boolean50 = properties39.remove((java.lang.Object) false, (java.lang.Object) (short) 1);
        java.lang.Object obj52 = properties39.remove((java.lang.Object) '#');
        java.util.Set<java.lang.Object> objSet53 = properties39.keySet();
        boolean boolean54 = properties17.containsKey((java.lang.Object) properties39);
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet55 = properties17.entrySet();
        java.util.Enumeration<java.lang.Object> objEnumeration56 = properties17.keys();
        java.lang.Object obj57 = properties17.clone();
        java.util.Properties properties58 = new java.util.Properties(properties17);
        java.lang.Object obj59 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj60 = properties11.putIfAbsent((java.lang.Object) properties17, obj59);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + long3 + "' != '" + 10L + "'", long3 == 10L);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "tmlog" + "'", str7, "tmlog");
        org.junit.Assert.assertTrue("'" + long10 + "' != '" + 10L + "'", long10 == 10L);
        org.junit.Assert.assertNotNull(properties11);
        org.junit.Assert.assertNull(obj19);
        org.junit.Assert.assertNull(obj27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(strSet29);
        org.junit.Assert.assertTrue("'" + long33 + "' != '" + 10L + "'", long33 == 10L);
        org.junit.Assert.assertNull(obj34);
        org.junit.Assert.assertNull(obj41);
        org.junit.Assert.assertNull(obj49);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertNull(obj52);
        org.junit.Assert.assertNotNull(objSet53);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertNotNull(objEntrySet55);
        org.junit.Assert.assertNotNull(objEnumeration56);
        org.junit.Assert.assertNotNull(obj57);
        org.junit.Assert.assertEquals(obj57.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj57), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj57), "{}");
    }

    @Test
    public void test1337() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1337");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Properties properties2 = new java.util.Properties(properties0);
        java.util.Properties properties3 = null;
        java.util.Properties properties4 = new java.util.Properties(properties3);
        java.lang.Object obj6 = properties2.put((java.lang.Object) properties4, (java.lang.Object) (short) 1);
        java.util.Enumeration<java.lang.Object> objEnumeration7 = properties4.elements();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet8 = properties4.entrySet();
        java.util.Set<java.lang.Object> objSet9 = properties4.keySet();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties10 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties10.setDefaultJtaTimeout((long) (byte) 10);
        atomikosProperties10.setCheckpointInterval((long) (byte) 0);
        atomikosProperties10.setEnableLogging(true);
        java.lang.Object obj17 = properties4.get((java.lang.Object) atomikosProperties10);
        java.util.Properties properties18 = atomikosProperties10.asProperties();
        java.lang.String str19 = atomikosProperties10.getLogBaseName();
        atomikosProperties10.setForceShutdownOnVmExit(false);
        boolean boolean22 = atomikosProperties10.isSerialJtaTransactions();
        long long23 = atomikosProperties10.getDefaultJtaTimeout();
        org.junit.Assert.assertNull(obj6);
        org.junit.Assert.assertNotNull(objEnumeration7);
        org.junit.Assert.assertNotNull(objEntrySet8);
        org.junit.Assert.assertNotNull(objSet9);
        org.junit.Assert.assertNull(obj17);
        org.junit.Assert.assertNotNull(properties18);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "tmlog" + "'", str19, "tmlog");
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertTrue("'" + long23 + "' != '" + 10L + "'", long23 == 10L);
    }

    @Test
    public void test1338() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1338");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Properties properties2 = new java.util.Properties(properties0);
        java.util.Properties properties3 = null;
        java.util.Properties properties4 = new java.util.Properties(properties3);
        java.lang.Object obj6 = properties2.put((java.lang.Object) properties4, (java.lang.Object) (short) 1);
        boolean boolean7 = properties2.isEmpty();
        java.util.Properties properties8 = null;
        java.util.Properties properties9 = new java.util.Properties(properties8);
        java.util.Properties properties10 = new java.util.Properties(properties8);
        boolean boolean11 = properties2.containsKey((java.lang.Object) properties10);
        java.util.Properties properties12 = new java.util.Properties(properties10);
        java.util.Properties properties13 = null;
        java.util.Properties properties14 = new java.util.Properties(properties13);
        java.util.Properties properties15 = new java.util.Properties(properties13);
        boolean boolean17 = properties15.containsValue((java.lang.Object) (short) 100);
        java.util.Properties properties18 = new java.util.Properties(properties15);
        java.lang.String str20 = properties18.getProperty("hi!");
        boolean boolean21 = properties10.containsKey((java.lang.Object) properties18);
        java.util.Properties properties22 = new java.util.Properties(properties18);
        java.util.Properties properties23 = new java.util.Properties(properties22);
        java.io.InputStream inputStream24 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties23.load(inputStream24);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(obj6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNull(str20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
    }

    @Test
    public void test1339() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1339");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Properties properties2 = new java.util.Properties(properties0);
        java.util.Properties properties3 = null;
        java.util.Properties properties4 = new java.util.Properties(properties3);
        java.lang.Object obj6 = properties2.put((java.lang.Object) properties4, (java.lang.Object) (short) 1);
        properties4.clear();
        int int8 = properties4.size();
        java.util.Properties properties9 = null;
        java.util.Properties properties10 = new java.util.Properties(properties9);
        java.util.Properties properties11 = new java.util.Properties(properties9);
        java.util.Properties properties12 = null;
        java.util.Properties properties13 = new java.util.Properties(properties12);
        java.lang.Object obj15 = properties11.put((java.lang.Object) properties13, (java.lang.Object) (short) 1);
        java.util.Properties properties16 = new java.util.Properties(properties13);
        java.util.Properties properties17 = new java.util.Properties(properties13);
        boolean boolean19 = properties4.remove((java.lang.Object) properties13, (java.lang.Object) 10.0f);
        java.util.Enumeration<java.lang.Object> objEnumeration20 = properties13.elements();
        java.util.Properties properties21 = new java.util.Properties(properties13);
        java.util.Set<java.lang.Object> objSet22 = properties21.keySet();
        java.util.Set<java.lang.Object> objSet23 = properties21.keySet();
        java.lang.Object obj24 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean25 = properties21.contains(obj24);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(obj6);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertNull(obj15);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(objEnumeration20);
        org.junit.Assert.assertNotNull(objSet22);
        org.junit.Assert.assertNotNull(objSet23);
    }

    @Test
    public void test1340() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1340");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Properties properties2 = new java.util.Properties(properties0);
        java.util.Properties properties3 = null;
        java.util.Properties properties4 = new java.util.Properties(properties3);
        java.lang.Object obj6 = properties2.put((java.lang.Object) properties4, (java.lang.Object) (short) 1);
        properties4.clear();
        int int8 = properties4.size();
        java.util.Properties properties9 = new java.util.Properties(properties4);
        java.lang.Object obj11 = properties4.get((java.lang.Object) (byte) -1);
        java.util.Enumeration<?> wildcardEnumeration12 = properties4.propertyNames();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties13 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties13.setDefaultJtaTimeout((long) (byte) 10);
        atomikosProperties13.setCheckpointInterval((long) (byte) 0);
        atomikosProperties13.setTransactionManagerUniqueName("");
        java.util.Properties properties20 = atomikosProperties13.asProperties();
        java.lang.String str21 = atomikosProperties13.getLogBaseName();
        java.util.Properties properties22 = atomikosProperties13.asProperties();
        atomikosProperties13.setEnableLogging(true);
        boolean boolean25 = atomikosProperties13.isSerialJtaTransactions();
        java.lang.Object obj26 = properties4.get((java.lang.Object) boolean25);
        java.util.Set<java.lang.String> strSet27 = properties4.stringPropertyNames();
        java.io.InputStream inputStream28 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties4.load(inputStream28);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(obj6);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertNull(obj11);
        org.junit.Assert.assertNotNull(wildcardEnumeration12);
        org.junit.Assert.assertNotNull(properties20);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "tmlog" + "'", str21, "tmlog");
        org.junit.Assert.assertNotNull(properties22);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNull(obj26);
        org.junit.Assert.assertNotNull(strSet27);
    }

    @Test
    public void test1341() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1341");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        boolean boolean1 = atomikosProperties0.isForceShutdownOnVmExit();
        java.lang.String str2 = atomikosProperties0.getLogBaseName();
        java.lang.String str3 = atomikosProperties0.getService();
        atomikosProperties0.setLogBaseName("{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.tm_unique_name=, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
        long long6 = atomikosProperties0.getMaxTimeout();
        atomikosProperties0.setEnableLogging(false);
        boolean boolean9 = atomikosProperties0.isForceShutdownOnVmExit();
        boolean boolean10 = atomikosProperties0.isForceShutdownOnVmExit();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "tmlog" + "'", str2, "tmlog");
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertTrue("'" + long6 + "' != '" + 300000L + "'", long6 == 300000L);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
    }

    @Test
    public void test1342() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1342");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Properties properties2 = new java.util.Properties(properties0);
        java.util.Properties properties3 = null;
        java.util.Properties properties4 = new java.util.Properties(properties3);
        java.lang.Object obj6 = properties2.put((java.lang.Object) properties4, (java.lang.Object) (short) 1);
        java.util.Properties properties8 = null;
        java.util.Properties properties9 = new java.util.Properties(properties8);
        java.util.Properties properties10 = new java.util.Properties(properties8);
        java.util.Properties properties11 = null;
        java.util.Properties properties12 = new java.util.Properties(properties11);
        java.lang.Object obj14 = properties10.put((java.lang.Object) properties12, (java.lang.Object) (short) 1);
        boolean boolean15 = properties4.remove((java.lang.Object) false, (java.lang.Object) (short) 1);
        java.lang.Object obj17 = properties4.remove((java.lang.Object) '#');
        java.lang.String str18 = properties4.toString();
        java.lang.Object obj19 = null;
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties20 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties20.setDefaultJtaTimeout((long) (byte) 10);
        long long23 = atomikosProperties20.getDefaultJtaTimeout();
        atomikosProperties20.setTransactionManagerUniqueName("hi!");
        atomikosProperties20.setLogBaseName("tmlog");
        atomikosProperties20.setLogBaseName("");
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean30 = properties4.remove(obj19, (java.lang.Object) atomikosProperties20);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(obj6);
        org.junit.Assert.assertNull(obj14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNull(obj17);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "{}" + "'", str18, "{}");
        org.junit.Assert.assertTrue("'" + long23 + "' != '" + 10L + "'", long23 == 10L);
    }

    @Test
    public void test1343() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1343");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setThreadedTwoPhaseCommit(true);
        atomikosProperties0.setMaxActives((int) (byte) 0);
        atomikosProperties0.setDefaultJtaTimeout((long) 10);
        atomikosProperties0.setDefaultJtaTimeout((long) (short) 10);
        java.util.Properties properties9 = atomikosProperties0.asProperties();
        java.lang.Object obj12 = properties9.setProperty("", "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=100, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=true, com.atomikos.icatch.tm_unique_name=, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name={com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.tm_unique_name=, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}}");
        java.lang.String str15 = properties9.getProperty("{tmlog={com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=0, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.tm_unique_name=, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}, 4=true}", "hi!");
        org.junit.Assert.assertNotNull(properties9);
        org.junit.Assert.assertNull(obj12);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "hi!" + "'", str15, "hi!");
    }

    @Test
    public void test1344() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1344");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setDefaultJtaTimeout((long) (byte) 10);
        atomikosProperties0.setCheckpointInterval((long) (byte) 0);
        atomikosProperties0.setTransactionManagerUniqueName("");
        java.util.Properties properties7 = atomikosProperties0.asProperties();
        java.util.Properties properties8 = atomikosProperties0.asProperties();
        java.lang.Object obj11 = properties8.setProperty("tmlog", "hi!");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties12 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties12.setDefaultJtaTimeout((long) (byte) 10);
        long long15 = atomikosProperties12.getDefaultJtaTimeout();
        atomikosProperties12.setTransactionManagerUniqueName("");
        boolean boolean18 = atomikosProperties12.isEnableLogging();
        java.lang.String str19 = atomikosProperties12.getLogBaseDir();
        java.util.Properties properties20 = atomikosProperties12.asProperties();
        boolean boolean21 = atomikosProperties12.isEnableLogging();
        java.lang.String str22 = atomikosProperties12.getLogBaseName();
        java.util.Properties properties23 = atomikosProperties12.asProperties();
        java.util.Set<java.lang.Object> objSet24 = properties23.keySet();
        java.lang.Object obj25 = properties8.remove((java.lang.Object) properties23);
        java.util.Properties properties26 = null;
        java.util.Properties properties27 = new java.util.Properties(properties26);
        java.util.Properties properties28 = new java.util.Properties(properties26);
        java.lang.Object obj29 = properties28.clone();
        java.util.Enumeration<java.lang.Object> objEnumeration30 = properties28.elements();
        java.lang.Object obj31 = properties28.clone();
        boolean boolean32 = properties8.containsValue((java.lang.Object) properties28);
        java.lang.Object obj33 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean34 = properties28.contains(obj33);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(properties7);
        org.junit.Assert.assertNotNull(properties8);
        org.junit.Assert.assertNull(obj11);
        org.junit.Assert.assertTrue("'" + long15 + "' != '" + 10L + "'", long15 == 10L);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNull(str19);
        org.junit.Assert.assertNotNull(properties20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "tmlog" + "'", str22, "tmlog");
        org.junit.Assert.assertNotNull(properties23);
        org.junit.Assert.assertNotNull(objSet24);
        org.junit.Assert.assertNull(obj25);
        org.junit.Assert.assertNotNull(obj29);
        org.junit.Assert.assertEquals(obj29.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj29), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj29), "{}");
        org.junit.Assert.assertNotNull(objEnumeration30);
        org.junit.Assert.assertNotNull(obj31);
        org.junit.Assert.assertEquals(obj31.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj31), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj31), "{}");
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
    }

    @Test
    public void test1345() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1345");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setDefaultJtaTimeout((long) (byte) 10);
        atomikosProperties0.setCheckpointInterval((long) (byte) 0);
        atomikosProperties0.setEnableLogging(false);
    }

    @Test
    public void test1346() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1346");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Properties properties2 = new java.util.Properties(properties0);
        java.util.Properties properties3 = null;
        java.util.Properties properties4 = new java.util.Properties(properties3);
        java.lang.Object obj6 = properties2.put((java.lang.Object) properties4, (java.lang.Object) (short) 1);
        properties4.clear();
        int int8 = properties4.size();
        java.util.Properties properties9 = new java.util.Properties(properties4);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties10 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        int int11 = atomikosProperties10.getMaxActives();
        long long12 = atomikosProperties10.getMaxTimeout();
        java.util.Properties properties13 = atomikosProperties10.asProperties();
        java.util.Properties properties14 = atomikosProperties10.asProperties();
        java.util.Properties properties15 = null;
        java.util.Properties properties16 = new java.util.Properties(properties15);
        java.util.Properties properties17 = new java.util.Properties(properties15);
        java.util.Properties properties18 = null;
        java.util.Properties properties19 = new java.util.Properties(properties18);
        java.lang.Object obj21 = properties17.put((java.lang.Object) properties19, (java.lang.Object) (short) 1);
        java.util.Enumeration<java.lang.Object> objEnumeration22 = properties19.elements();
        java.lang.Object obj23 = properties4.replace((java.lang.Object) atomikosProperties10, (java.lang.Object) properties19);
        atomikosProperties10.setLogBaseName("");
        java.lang.String str26 = atomikosProperties10.getTransactionManagerUniqueName();
        atomikosProperties10.setDefaultJtaTimeout((long) (short) 1);
        atomikosProperties10.setService("{tmlog={com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=0, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.tm_unique_name=, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}, 4=true}");
        java.lang.String str31 = atomikosProperties10.getTransactionManagerUniqueName();
        org.junit.Assert.assertNull(obj6);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 50 + "'", int11 == 50);
        org.junit.Assert.assertTrue("'" + long12 + "' != '" + 300000L + "'", long12 == 300000L);
        org.junit.Assert.assertNotNull(properties13);
        org.junit.Assert.assertNotNull(properties14);
        org.junit.Assert.assertNull(obj21);
        org.junit.Assert.assertNotNull(objEnumeration22);
        org.junit.Assert.assertNull(obj23);
        org.junit.Assert.assertNull(str26);
        org.junit.Assert.assertNull(str31);
    }

    @Test
    public void test1347() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1347");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Properties properties2 = new java.util.Properties(properties0);
        java.util.Properties properties3 = null;
        java.util.Properties properties4 = new java.util.Properties(properties3);
        java.lang.Object obj6 = properties2.put((java.lang.Object) properties4, (java.lang.Object) (short) 1);
        properties4.clear();
        java.lang.String str9 = properties4.getProperty("");
        java.util.Properties properties10 = null;
        java.util.Properties properties11 = new java.util.Properties(properties10);
        java.util.Properties properties12 = new java.util.Properties(properties10);
        java.util.Properties properties13 = null;
        java.util.Properties properties14 = new java.util.Properties(properties13);
        java.lang.Object obj16 = properties12.put((java.lang.Object) properties14, (java.lang.Object) (short) 1);
        properties4.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties12);
        java.util.Properties properties18 = null;
        java.util.Properties properties19 = new java.util.Properties(properties18);
        java.util.Properties properties20 = new java.util.Properties(properties18);
        boolean boolean22 = properties20.containsValue((java.lang.Object) (short) 100);
        java.util.Properties properties23 = null;
        java.util.Properties properties24 = new java.util.Properties(properties23);
        java.util.Properties properties25 = new java.util.Properties(properties23);
        java.util.Properties properties26 = null;
        java.util.Properties properties27 = new java.util.Properties(properties26);
        java.lang.Object obj29 = properties25.put((java.lang.Object) properties27, (java.lang.Object) (short) 1);
        java.util.Enumeration<java.lang.Object> objEnumeration30 = properties27.elements();
        java.lang.Object obj31 = properties20.remove((java.lang.Object) properties27);
        java.lang.Object obj34 = properties27.setProperty("", "");
        java.util.Properties properties35 = null;
        java.util.Properties properties36 = new java.util.Properties(properties35);
        java.util.Properties properties37 = new java.util.Properties(properties35);
        java.util.Properties properties38 = null;
        java.util.Properties properties39 = new java.util.Properties(properties38);
        java.lang.Object obj41 = properties37.put((java.lang.Object) properties39, (java.lang.Object) (short) 1);
        java.util.Properties properties43 = null;
        java.util.Properties properties44 = new java.util.Properties(properties43);
        java.util.Properties properties45 = new java.util.Properties(properties43);
        java.util.Properties properties46 = null;
        java.util.Properties properties47 = new java.util.Properties(properties46);
        java.lang.Object obj49 = properties45.put((java.lang.Object) properties47, (java.lang.Object) (short) 1);
        boolean boolean50 = properties39.remove((java.lang.Object) false, (java.lang.Object) (short) 1);
        java.util.Properties properties51 = new java.util.Properties(properties39);
        properties27.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties51);
        java.lang.Object obj55 = properties51.setProperty("hi!", "hi!");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties56 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties56.setDefaultJtaTimeout((long) (byte) 10);
        atomikosProperties56.setCheckpointInterval((long) (byte) 0);
        atomikosProperties56.setTransactionManagerUniqueName("");
        java.util.Properties properties63 = atomikosProperties56.asProperties();
        java.lang.String str64 = atomikosProperties56.getTransactionManagerUniqueName();
        atomikosProperties56.setDefaultJtaTimeout((long) (-1));
        java.lang.Object obj67 = properties12.replace((java.lang.Object) "hi!", (java.lang.Object) atomikosProperties56);
        boolean boolean68 = atomikosProperties56.isSerialJtaTransactions();
        org.junit.Assert.assertNull(obj6);
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertNull(obj16);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNull(obj29);
        org.junit.Assert.assertNotNull(objEnumeration30);
        org.junit.Assert.assertNull(obj31);
        org.junit.Assert.assertNull(obj34);
        org.junit.Assert.assertNull(obj41);
        org.junit.Assert.assertNull(obj49);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertNull(obj55);
        org.junit.Assert.assertNotNull(properties63);
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "" + "'", str64, "");
        org.junit.Assert.assertNull(obj67);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + true + "'", boolean68 == true);
    }

    @Test
    public void test1348() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1348");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Properties properties2 = new java.util.Properties(properties0);
        java.util.Properties properties3 = null;
        java.util.Properties properties4 = new java.util.Properties(properties3);
        java.lang.Object obj6 = properties2.put((java.lang.Object) properties4, (java.lang.Object) (short) 1);
        java.util.Enumeration<java.lang.Object> objEnumeration7 = properties4.elements();
        properties4.clear();
        org.junit.Assert.assertNull(obj6);
        org.junit.Assert.assertNotNull(objEnumeration7);
    }

    @Test
    public void test1349() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1349");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Properties properties2 = new java.util.Properties(properties0);
        java.util.Properties properties3 = null;
        java.util.Properties properties4 = new java.util.Properties(properties3);
        java.lang.Object obj6 = properties2.put((java.lang.Object) properties4, (java.lang.Object) (short) 1);
        java.util.Properties properties7 = new java.util.Properties(properties4);
        java.util.Properties properties8 = new java.util.Properties(properties4);
        java.util.Set<java.lang.Object> objSet9 = properties8.keySet();
        java.util.Properties properties10 = new java.util.Properties(properties8);
        java.util.Properties properties11 = new java.util.Properties(properties8);
        java.util.Properties properties12 = null;
        java.util.Properties properties13 = new java.util.Properties(properties12);
        java.util.Properties properties14 = new java.util.Properties(properties12);
        java.util.Properties properties15 = null;
        java.util.Properties properties16 = new java.util.Properties(properties15);
        java.lang.Object obj18 = properties14.put((java.lang.Object) properties16, (java.lang.Object) (short) 1);
        properties16.clear();
        int int20 = properties16.size();
        java.util.Properties properties21 = new java.util.Properties(properties16);
        java.util.Collection<java.lang.Object> objCollection22 = properties16.values();
        java.lang.String str24 = properties16.getProperty("hi!");
        java.util.Properties properties25 = new java.util.Properties();
        java.util.Enumeration<?> wildcardEnumeration26 = properties25.propertyNames();
        java.util.Properties properties28 = null;
        java.util.Properties properties29 = new java.util.Properties(properties28);
        java.util.Properties properties30 = new java.util.Properties(properties28);
        java.util.Properties properties31 = null;
        java.util.Properties properties32 = new java.util.Properties(properties31);
        java.lang.Object obj34 = properties30.put((java.lang.Object) properties32, (java.lang.Object) (short) 1);
        java.util.Properties properties35 = new java.util.Properties(properties32);
        java.util.Enumeration<java.lang.Object> objEnumeration36 = properties35.elements();
        java.lang.Object obj37 = properties25.put((java.lang.Object) (-1.0f), (java.lang.Object) objEnumeration36);
        java.lang.Object obj38 = properties16.remove((java.lang.Object) (-1.0f));
        java.util.Enumeration<java.lang.Object> objEnumeration39 = properties16.elements();
        java.lang.Object obj40 = properties11.get((java.lang.Object) properties16);
        java.util.Properties properties41 = null;
        java.util.Properties properties42 = new java.util.Properties(properties41);
        java.util.Properties properties43 = new java.util.Properties(properties41);
        boolean boolean45 = properties43.containsValue((java.lang.Object) (short) 100);
        java.util.Properties properties46 = null;
        java.util.Properties properties47 = new java.util.Properties(properties46);
        java.util.Properties properties48 = new java.util.Properties(properties46);
        java.util.Properties properties49 = null;
        java.util.Properties properties50 = new java.util.Properties(properties49);
        java.lang.Object obj52 = properties48.put((java.lang.Object) properties50, (java.lang.Object) (short) 1);
        java.util.Enumeration<java.lang.Object> objEnumeration53 = properties50.elements();
        java.lang.Object obj54 = properties43.remove((java.lang.Object) properties50);
        java.lang.Object obj57 = properties50.setProperty("", "");
        java.util.Properties properties58 = null;
        java.util.Properties properties59 = new java.util.Properties(properties58);
        java.util.Properties properties60 = new java.util.Properties(properties58);
        java.util.Properties properties61 = null;
        java.util.Properties properties62 = new java.util.Properties(properties61);
        java.lang.Object obj64 = properties60.put((java.lang.Object) properties62, (java.lang.Object) (short) 1);
        java.util.Properties properties66 = null;
        java.util.Properties properties67 = new java.util.Properties(properties66);
        java.util.Properties properties68 = new java.util.Properties(properties66);
        java.util.Properties properties69 = null;
        java.util.Properties properties70 = new java.util.Properties(properties69);
        java.lang.Object obj72 = properties68.put((java.lang.Object) properties70, (java.lang.Object) (short) 1);
        boolean boolean73 = properties62.remove((java.lang.Object) false, (java.lang.Object) (short) 1);
        java.util.Properties properties74 = new java.util.Properties(properties62);
        properties50.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties74);
        java.util.Properties properties76 = new java.util.Properties(properties74);
        boolean boolean77 = properties11.equals((java.lang.Object) properties76);
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet78 = properties11.entrySet();
        org.junit.Assert.assertNull(obj6);
        org.junit.Assert.assertNotNull(objSet9);
        org.junit.Assert.assertNull(obj18);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 0 + "'", int20 == 0);
        org.junit.Assert.assertNotNull(objCollection22);
        org.junit.Assert.assertNull(str24);
        org.junit.Assert.assertNotNull(wildcardEnumeration26);
        org.junit.Assert.assertNull(obj34);
        org.junit.Assert.assertNotNull(objEnumeration36);
        org.junit.Assert.assertNull(obj37);
        org.junit.Assert.assertNull(obj38);
        org.junit.Assert.assertNotNull(objEnumeration39);
        org.junit.Assert.assertNull(obj40);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNull(obj52);
        org.junit.Assert.assertNotNull(objEnumeration53);
        org.junit.Assert.assertNull(obj54);
        org.junit.Assert.assertNull(obj57);
        org.junit.Assert.assertNull(obj64);
        org.junit.Assert.assertNull(obj72);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + true + "'", boolean77 == true);
        org.junit.Assert.assertNotNull(objEntrySet78);
    }

    @Test
    public void test1350() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1350");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Properties properties2 = new java.util.Properties(properties0);
        java.util.Properties properties3 = null;
        java.util.Properties properties4 = new java.util.Properties(properties3);
        java.lang.Object obj6 = properties2.put((java.lang.Object) properties4, (java.lang.Object) (short) 1);
        boolean boolean7 = properties2.isEmpty();
        java.util.Properties properties8 = null;
        java.util.Properties properties9 = new java.util.Properties(properties8);
        java.util.Properties properties10 = new java.util.Properties(properties8);
        boolean boolean11 = properties2.containsKey((java.lang.Object) properties10);
        java.util.Properties properties12 = new java.util.Properties(properties10);
        java.lang.Object obj13 = properties12.clone();
        java.util.Set<java.lang.String> strSet14 = properties12.stringPropertyNames();
        java.util.Properties properties15 = new java.util.Properties(properties12);
        java.io.Reader reader16 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties15.load(reader16);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(obj6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNotNull(obj13);
        org.junit.Assert.assertEquals(obj13.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj13), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj13), "{}");
        org.junit.Assert.assertNotNull(strSet14);
    }

    @Test
    public void test1351() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1351");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setDefaultJtaTimeout((long) (byte) 10);
        atomikosProperties0.setSerialJtaTransactions(false);
        atomikosProperties0.setService("{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.tm_unique_name=, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
        java.lang.String str7 = atomikosProperties0.getTransactionManagerUniqueName();
        java.util.Properties properties8 = atomikosProperties0.asProperties();
        java.lang.Object obj9 = properties8.clone();
        properties8.clear();
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNotNull(properties8);
        org.junit.Assert.assertNotNull(obj9);
// flaky:         org.junit.Assert.assertEquals(obj9.toString(), "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=false, com.atomikos.icatch.default_jta_timeout=10, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.service={com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.tm_unique_name=, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
// flaky:         org.junit.Assert.assertEquals(java.lang.String.valueOf(obj9), "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=false, com.atomikos.icatch.default_jta_timeout=10, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.service={com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.tm_unique_name=, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
// flaky:         org.junit.Assert.assertEquals(java.util.Objects.toString(obj9), "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=false, com.atomikos.icatch.default_jta_timeout=10, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.service={com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.tm_unique_name=, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
    }

    @Test
    public void test1352() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1352");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Properties properties2 = new java.util.Properties(properties0);
        java.util.Properties properties3 = null;
        java.util.Properties properties4 = new java.util.Properties(properties3);
        java.lang.Object obj6 = properties2.put((java.lang.Object) properties4, (java.lang.Object) (short) 1);
        boolean boolean7 = properties2.isEmpty();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties8 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties8.setDefaultJtaTimeout((long) (byte) 10);
        atomikosProperties8.setCheckpointInterval((long) (byte) 0);
        atomikosProperties8.setTransactionManagerUniqueName("");
        java.util.Properties properties15 = atomikosProperties8.asProperties();
        java.lang.Object obj16 = properties2.remove((java.lang.Object) properties15);
        java.util.Set<java.lang.String> strSet17 = properties15.stringPropertyNames();
        properties15.clear();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties19 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties19.setDefaultJtaTimeout((long) (byte) 10);
        atomikosProperties19.setCheckpointInterval((long) (byte) 0);
        atomikosProperties19.setTransactionManagerUniqueName("");
        java.util.Properties properties26 = atomikosProperties19.asProperties();
        java.util.Properties properties27 = atomikosProperties19.asProperties();
        java.util.Properties properties28 = null;
        java.util.Properties properties29 = new java.util.Properties(properties28);
        java.util.Properties properties30 = new java.util.Properties(properties28);
        java.util.Properties properties31 = null;
        java.util.Properties properties32 = new java.util.Properties(properties31);
        java.lang.Object obj34 = properties30.put((java.lang.Object) properties32, (java.lang.Object) (short) 1);
        properties32.clear();
        int int36 = properties32.size();
        java.lang.Object obj39 = properties32.setProperty("hi!", "hi!");
        java.lang.Object obj42 = properties32.setProperty("tmlog", "tmlog");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties43 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties43.setDefaultJtaTimeout((long) (byte) 10);
        atomikosProperties43.setCheckpointInterval((long) (byte) 0);
        atomikosProperties43.setTransactionManagerUniqueName("");
        boolean boolean50 = atomikosProperties43.isEnableLogging();
        java.lang.String str51 = atomikosProperties43.getLogBaseName();
        atomikosProperties43.setThreadedTwoPhaseCommit(false);
        java.lang.Object obj54 = properties27.put((java.lang.Object) properties32, (java.lang.Object) atomikosProperties43);
        boolean boolean55 = atomikosProperties43.isSerialJtaTransactions();
        java.util.Properties properties56 = null;
        java.util.Properties properties57 = new java.util.Properties(properties56);
        java.util.Properties properties58 = new java.util.Properties(properties56);
        java.util.Properties properties59 = null;
        java.util.Properties properties60 = new java.util.Properties(properties59);
        java.lang.Object obj62 = properties58.put((java.lang.Object) properties60, (java.lang.Object) (short) 1);
        properties60.clear();
        int int64 = properties60.size();
        java.util.Properties properties65 = new java.util.Properties(properties60);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties66 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        int int67 = atomikosProperties66.getMaxActives();
        long long68 = atomikosProperties66.getMaxTimeout();
        java.util.Properties properties69 = atomikosProperties66.asProperties();
        java.util.Properties properties70 = atomikosProperties66.asProperties();
        java.util.Properties properties71 = null;
        java.util.Properties properties72 = new java.util.Properties(properties71);
        java.util.Properties properties73 = new java.util.Properties(properties71);
        java.util.Properties properties74 = null;
        java.util.Properties properties75 = new java.util.Properties(properties74);
        java.lang.Object obj77 = properties73.put((java.lang.Object) properties75, (java.lang.Object) (short) 1);
        java.util.Enumeration<java.lang.Object> objEnumeration78 = properties75.elements();
        java.lang.Object obj79 = properties60.replace((java.lang.Object) atomikosProperties66, (java.lang.Object) properties75);
        atomikosProperties66.setLogBaseName("");
        java.lang.String str82 = atomikosProperties66.getTransactionManagerUniqueName();
        java.lang.Object obj83 = properties15.replace((java.lang.Object) atomikosProperties43, (java.lang.Object) atomikosProperties66);
        java.lang.String str86 = properties15.getProperty("{{}=tmlog}", "{tmlog=}");
        org.junit.Assert.assertNull(obj6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(properties15);
        org.junit.Assert.assertNull(obj16);
        org.junit.Assert.assertNotNull(strSet17);
        org.junit.Assert.assertNotNull(properties26);
        org.junit.Assert.assertNotNull(properties27);
        org.junit.Assert.assertNull(obj34);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 0 + "'", int36 == 0);
        org.junit.Assert.assertNull(obj39);
        org.junit.Assert.assertNull(obj42);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "tmlog" + "'", str51, "tmlog");
        org.junit.Assert.assertNull(obj54);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertNull(obj62);
        org.junit.Assert.assertTrue("'" + int64 + "' != '" + 0 + "'", int64 == 0);
        org.junit.Assert.assertTrue("'" + int67 + "' != '" + 50 + "'", int67 == 50);
        org.junit.Assert.assertTrue("'" + long68 + "' != '" + 300000L + "'", long68 == 300000L);
        org.junit.Assert.assertNotNull(properties69);
        org.junit.Assert.assertNotNull(properties70);
        org.junit.Assert.assertNull(obj77);
        org.junit.Assert.assertNotNull(objEnumeration78);
        org.junit.Assert.assertNull(obj79);
        org.junit.Assert.assertNull(str82);
        org.junit.Assert.assertNull(obj83);
        org.junit.Assert.assertEquals("'" + str86 + "' != '" + "{tmlog=}" + "'", str86, "{tmlog=}");
    }

    @Test
    public void test1353() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1353");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setDefaultJtaTimeout((long) (byte) 10);
        long long3 = atomikosProperties0.getDefaultJtaTimeout();
        atomikosProperties0.setTransactionManagerUniqueName("hi!");
        atomikosProperties0.setTransactionManagerUniqueName("{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=0, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.tm_unique_name=, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
        atomikosProperties0.setService("");
        atomikosProperties0.setDefaultJtaTimeout(0L);
        atomikosProperties0.setSerialJtaTransactions(true);
        boolean boolean14 = atomikosProperties0.isThreadedTwoPhaseCommit();
        int int15 = atomikosProperties0.getMaxActives();
        org.junit.Assert.assertTrue("'" + long3 + "' != '" + 10L + "'", long3 == 10L);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 50 + "'", int15 == 50);
    }

    @Test
    public void test1354() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1354");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Properties properties2 = new java.util.Properties(properties0);
        java.util.Properties properties3 = null;
        java.util.Properties properties4 = new java.util.Properties(properties3);
        java.lang.Object obj6 = properties2.put((java.lang.Object) properties4, (java.lang.Object) (short) 1);
        java.util.Enumeration<java.lang.Object> objEnumeration7 = properties4.elements();
        java.util.Properties properties8 = new java.util.Properties(properties4);
        java.util.Properties properties9 = new java.util.Properties(properties8);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties10 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties10.setDefaultJtaTimeout((long) (byte) 10);
        atomikosProperties10.setCheckpointInterval((long) (byte) 0);
        atomikosProperties10.setTransactionManagerUniqueName("");
        boolean boolean17 = atomikosProperties10.isEnableLogging();
        java.util.Properties properties18 = atomikosProperties10.asProperties();
        java.util.Properties properties19 = new java.util.Properties(properties18);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties20 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties20.setDefaultJtaTimeout((long) (byte) 10);
        atomikosProperties20.setSerialJtaTransactions(false);
        atomikosProperties20.setMaxTimeout((long) (short) -1);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties27 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties27.setDefaultJtaTimeout((long) (byte) 10);
        atomikosProperties27.setCheckpointInterval((long) (byte) 0);
        atomikosProperties27.setTransactionManagerUniqueName("");
        java.util.Properties properties34 = atomikosProperties27.asProperties();
        java.lang.String str35 = atomikosProperties27.getLogBaseName();
        java.util.Properties properties36 = atomikosProperties27.asProperties();
        java.lang.Object obj37 = properties18.getOrDefault((java.lang.Object) (short) -1, (java.lang.Object) atomikosProperties27);
        boolean boolean38 = properties8.containsKey((java.lang.Object) atomikosProperties27);
        java.io.Writer writer39 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties8.store(writer39, "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=0, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=true, com.atomikos.icatch.max_actives=100, com.atomikos.icatch.log_base_name=tmlog}");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(obj6);
        org.junit.Assert.assertNotNull(objEnumeration7);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(properties18);
        org.junit.Assert.assertNotNull(properties34);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "tmlog" + "'", str35, "tmlog");
        org.junit.Assert.assertNotNull(properties36);
        org.junit.Assert.assertNotNull(obj37);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
    }

    @Test
    public void test1355() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1355");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setThreadedTwoPhaseCommit(true);
        atomikosProperties0.setMaxActives((int) (byte) 0);
        atomikosProperties0.setEnableLogging(true);
        atomikosProperties0.setMaxActives((int) (byte) 1);
        atomikosProperties0.setTransactionManagerUniqueName("hi!");
        java.lang.String str11 = atomikosProperties0.getLogBaseDir();
        java.lang.String str12 = atomikosProperties0.getService();
        atomikosProperties0.setService("{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=100, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=true, com.atomikos.icatch.tm_unique_name=, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name={com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.tm_unique_name=, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}}");
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertNull(str12);
    }

    @Test
    public void test1356() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1356");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        boolean boolean1 = atomikosProperties0.isForceShutdownOnVmExit();
        java.util.Properties properties2 = atomikosProperties0.asProperties();
        java.util.Properties properties3 = null;
        java.util.Properties properties4 = new java.util.Properties(properties3);
        java.util.Properties properties5 = new java.util.Properties(properties3);
        java.util.Properties properties6 = null;
        java.util.Properties properties7 = new java.util.Properties(properties6);
        java.lang.Object obj9 = properties5.put((java.lang.Object) properties7, (java.lang.Object) (short) 1);
        properties7.clear();
        int int11 = properties7.size();
        java.util.Properties properties12 = null;
        java.util.Properties properties13 = new java.util.Properties(properties12);
        java.util.Properties properties14 = new java.util.Properties(properties12);
        java.util.Properties properties15 = null;
        java.util.Properties properties16 = new java.util.Properties(properties15);
        java.lang.Object obj18 = properties14.put((java.lang.Object) properties16, (java.lang.Object) (short) 1);
        java.util.Properties properties19 = new java.util.Properties(properties16);
        java.util.Properties properties20 = new java.util.Properties(properties16);
        boolean boolean22 = properties7.remove((java.lang.Object) properties16, (java.lang.Object) 10.0f);
        boolean boolean23 = properties2.containsKey((java.lang.Object) 10.0f);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties25 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties25.setDefaultJtaTimeout((long) (byte) 10);
        atomikosProperties25.setCheckpointInterval((long) (byte) 0);
        atomikosProperties25.setEnableLogging(true);
        java.lang.Object obj32 = properties2.getOrDefault((java.lang.Object) (byte) 0, (java.lang.Object) true);
        java.util.Properties properties33 = new java.util.Properties(properties2);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties34 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties34.setDefaultJtaTimeout((long) (byte) 10);
        atomikosProperties34.setCheckpointInterval((long) (byte) 0);
        long long39 = atomikosProperties34.getMaxTimeout();
        java.util.Properties properties40 = null;
        java.util.Properties properties41 = new java.util.Properties(properties40);
        java.util.Properties properties42 = new java.util.Properties(properties40);
        java.util.Properties properties43 = null;
        java.util.Properties properties44 = new java.util.Properties(properties43);
        java.lang.Object obj46 = properties42.put((java.lang.Object) properties44, (java.lang.Object) (short) 1);
        java.util.Properties properties48 = null;
        java.util.Properties properties49 = new java.util.Properties(properties48);
        java.util.Properties properties50 = new java.util.Properties(properties48);
        java.util.Properties properties51 = null;
        java.util.Properties properties52 = new java.util.Properties(properties51);
        java.lang.Object obj54 = properties50.put((java.lang.Object) properties52, (java.lang.Object) (short) 1);
        boolean boolean55 = properties44.remove((java.lang.Object) false, (java.lang.Object) (short) 1);
        java.lang.Object obj57 = properties44.remove((java.lang.Object) '#');
        java.util.Set<java.lang.Object> objSet58 = properties44.keySet();
        properties44.clear();
        java.util.Properties properties60 = null;
        java.util.Properties properties61 = new java.util.Properties(properties60);
        java.util.Properties properties62 = new java.util.Properties(properties60);
        java.util.Properties properties63 = null;
        java.util.Properties properties64 = new java.util.Properties(properties63);
        java.lang.Object obj66 = properties62.put((java.lang.Object) properties64, (java.lang.Object) (short) 1);
        java.util.Enumeration<java.lang.Object> objEnumeration67 = properties64.elements();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet68 = properties64.entrySet();
        boolean boolean69 = properties44.equals((java.lang.Object) properties64);
        java.util.Enumeration<java.lang.Object> objEnumeration70 = properties64.elements();
        java.lang.Object obj71 = properties33.put((java.lang.Object) atomikosProperties34, (java.lang.Object) properties64);
        boolean boolean72 = properties64.isEmpty();
        java.io.PrintWriter printWriter73 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties64.list(printWriter73);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertNotNull(properties2);
        org.junit.Assert.assertNull(obj9);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertNull(obj18);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertEquals("'" + obj32 + "' != '" + true + "'", obj32, true);
        org.junit.Assert.assertTrue("'" + long39 + "' != '" + 300000L + "'", long39 == 300000L);
        org.junit.Assert.assertNull(obj46);
        org.junit.Assert.assertNull(obj54);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertNull(obj57);
        org.junit.Assert.assertNotNull(objSet58);
        org.junit.Assert.assertNull(obj66);
        org.junit.Assert.assertNotNull(objEnumeration67);
        org.junit.Assert.assertNotNull(objEntrySet68);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + true + "'", boolean69 == true);
        org.junit.Assert.assertNotNull(objEnumeration70);
        org.junit.Assert.assertNull(obj71);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + true + "'", boolean72 == true);
    }

    @Test
    public void test1357() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1357");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Properties properties2 = new java.util.Properties(properties0);
        java.util.Properties properties3 = null;
        java.util.Properties properties4 = new java.util.Properties(properties3);
        java.lang.Object obj6 = properties2.put((java.lang.Object) properties4, (java.lang.Object) (short) 1);
        properties4.clear();
        int int8 = properties4.size();
        java.util.Properties properties9 = null;
        java.util.Properties properties10 = new java.util.Properties(properties9);
        java.util.Properties properties11 = new java.util.Properties(properties9);
        java.util.Properties properties12 = null;
        java.util.Properties properties13 = new java.util.Properties(properties12);
        java.lang.Object obj15 = properties11.put((java.lang.Object) properties13, (java.lang.Object) (short) 1);
        java.util.Properties properties16 = new java.util.Properties(properties13);
        java.util.Properties properties17 = new java.util.Properties(properties13);
        boolean boolean19 = properties4.remove((java.lang.Object) properties13, (java.lang.Object) 10.0f);
        java.util.Enumeration<java.lang.Object> objEnumeration20 = properties13.elements();
        java.util.Properties properties21 = new java.util.Properties(properties13);
        java.util.Properties properties22 = null;
        java.util.Properties properties23 = new java.util.Properties(properties22);
        java.util.Properties properties24 = new java.util.Properties(properties22);
        java.lang.Object obj25 = properties24.clone();
        java.lang.Object obj28 = properties24.setProperty("tmlog", "");
        properties13.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties24);
        java.util.Collection<java.lang.Object> objCollection30 = properties24.values();
        java.io.OutputStream outputStream31 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties24.store(outputStream31, "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=0, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.tm_unique_name=, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(obj6);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertNull(obj15);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(objEnumeration20);
        org.junit.Assert.assertNotNull(obj25);
        org.junit.Assert.assertEquals(obj25.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj25), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj25), "{}");
        org.junit.Assert.assertNull(obj28);
        org.junit.Assert.assertNotNull(objCollection30);
    }

    @Test
    public void test1358() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1358");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Properties properties2 = new java.util.Properties(properties0);
        java.util.Properties properties3 = null;
        java.util.Properties properties4 = new java.util.Properties(properties3);
        java.lang.Object obj6 = properties2.put((java.lang.Object) properties4, (java.lang.Object) (short) 1);
        java.util.Properties properties8 = null;
        java.util.Properties properties9 = new java.util.Properties(properties8);
        java.util.Properties properties10 = new java.util.Properties(properties8);
        java.util.Properties properties11 = null;
        java.util.Properties properties12 = new java.util.Properties(properties11);
        java.lang.Object obj14 = properties10.put((java.lang.Object) properties12, (java.lang.Object) (short) 1);
        boolean boolean15 = properties4.remove((java.lang.Object) false, (java.lang.Object) (short) 1);
        java.util.Properties properties16 = new java.util.Properties(properties4);
        int int17 = properties16.size();
        java.util.Properties properties18 = null;
        java.util.Properties properties19 = new java.util.Properties(properties18);
        java.util.Properties properties20 = new java.util.Properties(properties18);
        java.util.Properties properties21 = null;
        java.util.Properties properties22 = new java.util.Properties(properties21);
        java.lang.Object obj24 = properties20.put((java.lang.Object) properties22, (java.lang.Object) (short) 1);
        properties22.clear();
        java.lang.String str27 = properties22.getProperty("");
        java.util.Properties properties28 = null;
        java.util.Properties properties29 = new java.util.Properties(properties28);
        java.util.Properties properties30 = new java.util.Properties(properties28);
        java.util.Properties properties31 = null;
        java.util.Properties properties32 = new java.util.Properties(properties31);
        java.lang.Object obj34 = properties30.put((java.lang.Object) properties32, (java.lang.Object) (short) 1);
        properties22.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties30);
        java.lang.Object obj36 = properties16.remove((java.lang.Object) properties22);
        java.lang.Object obj39 = properties22.setProperty("tmlog", "hi!");
        java.util.Properties properties40 = null;
        java.util.Properties properties41 = new java.util.Properties(properties40);
        java.util.Properties properties42 = new java.util.Properties(properties40);
        java.util.Properties properties43 = null;
        java.util.Properties properties44 = new java.util.Properties(properties43);
        java.lang.Object obj46 = properties42.put((java.lang.Object) properties44, (java.lang.Object) (short) 1);
        java.util.Properties properties48 = null;
        java.util.Properties properties49 = new java.util.Properties(properties48);
        java.util.Properties properties50 = new java.util.Properties(properties48);
        java.util.Properties properties51 = null;
        java.util.Properties properties52 = new java.util.Properties(properties51);
        java.lang.Object obj54 = properties50.put((java.lang.Object) properties52, (java.lang.Object) (short) 1);
        boolean boolean55 = properties44.remove((java.lang.Object) false, (java.lang.Object) (short) 1);
        java.util.Set<java.lang.String> strSet56 = properties44.stringPropertyNames();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties57 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties57.setDefaultJtaTimeout((long) (byte) 10);
        long long60 = atomikosProperties57.getDefaultJtaTimeout();
        java.lang.Object obj61 = properties44.get((java.lang.Object) atomikosProperties57);
        java.util.Properties properties62 = null;
        java.util.Properties properties63 = new java.util.Properties(properties62);
        java.util.Properties properties64 = new java.util.Properties(properties62);
        java.util.Properties properties65 = null;
        java.util.Properties properties66 = new java.util.Properties(properties65);
        java.lang.Object obj68 = properties64.put((java.lang.Object) properties66, (java.lang.Object) (short) 1);
        java.util.Properties properties70 = null;
        java.util.Properties properties71 = new java.util.Properties(properties70);
        java.util.Properties properties72 = new java.util.Properties(properties70);
        java.util.Properties properties73 = null;
        java.util.Properties properties74 = new java.util.Properties(properties73);
        java.lang.Object obj76 = properties72.put((java.lang.Object) properties74, (java.lang.Object) (short) 1);
        boolean boolean77 = properties66.remove((java.lang.Object) false, (java.lang.Object) (short) 1);
        java.lang.Object obj79 = properties66.remove((java.lang.Object) '#');
        java.util.Set<java.lang.Object> objSet80 = properties66.keySet();
        boolean boolean81 = properties44.containsKey((java.lang.Object) properties66);
        java.lang.Object obj84 = properties66.setProperty("{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.tm_unique_name=, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}", "{}");
        java.util.Enumeration<java.lang.Object> objEnumeration85 = properties66.keys();
        boolean boolean86 = properties22.containsValue((java.lang.Object) properties66);
        java.lang.Class<?> wildcardClass87 = properties22.getClass();
        org.junit.Assert.assertNull(obj6);
        org.junit.Assert.assertNull(obj14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 0 + "'", int17 == 0);
        org.junit.Assert.assertNull(obj24);
        org.junit.Assert.assertNull(str27);
        org.junit.Assert.assertNull(obj34);
        org.junit.Assert.assertNull(obj36);
        org.junit.Assert.assertNull(obj39);
        org.junit.Assert.assertNull(obj46);
        org.junit.Assert.assertNull(obj54);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertNotNull(strSet56);
        org.junit.Assert.assertTrue("'" + long60 + "' != '" + 10L + "'", long60 == 10L);
        org.junit.Assert.assertNull(obj61);
        org.junit.Assert.assertNull(obj68);
        org.junit.Assert.assertNull(obj76);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + false + "'", boolean77 == false);
        org.junit.Assert.assertNull(obj79);
        org.junit.Assert.assertNotNull(objSet80);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + false + "'", boolean81 == false);
        org.junit.Assert.assertNull(obj84);
        org.junit.Assert.assertNotNull(objEnumeration85);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + false + "'", boolean86 == false);
        org.junit.Assert.assertNotNull(wildcardClass87);
    }

    @Test
    public void test1359() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1359");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Properties properties2 = new java.util.Properties(properties0);
        java.util.Properties properties3 = null;
        java.util.Properties properties4 = new java.util.Properties(properties3);
        java.lang.Object obj6 = properties2.put((java.lang.Object) properties4, (java.lang.Object) (short) 1);
        properties4.clear();
        java.lang.String str9 = properties4.getProperty("");
        java.util.Properties properties10 = null;
        java.util.Properties properties11 = new java.util.Properties(properties10);
        java.util.Properties properties12 = new java.util.Properties(properties10);
        java.util.Properties properties13 = null;
        java.util.Properties properties14 = new java.util.Properties(properties13);
        java.lang.Object obj16 = properties12.put((java.lang.Object) properties14, (java.lang.Object) (short) 1);
        properties4.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties12);
        java.lang.String str19 = properties12.getProperty("{tmlog={com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=0, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.tm_unique_name=, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}, 4=true}");
        // The following exception was thrown during execution in test generation
        try {
            java.util.Enumeration<?> wildcardEnumeration20 = properties12.propertyNames();
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: java.util.Properties cannot be cast to java.lang.String");
        } catch (java.lang.ClassCastException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(obj6);
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertNull(obj16);
        org.junit.Assert.assertNull(str19);
    }

    @Test
    public void test1360() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1360");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Properties properties2 = new java.util.Properties(properties0);
        java.util.Properties properties3 = null;
        java.util.Properties properties4 = new java.util.Properties(properties3);
        java.lang.Object obj6 = properties2.put((java.lang.Object) properties4, (java.lang.Object) (short) 1);
        boolean boolean7 = properties2.isEmpty();
        java.util.Properties properties8 = null;
        java.util.Properties properties9 = new java.util.Properties(properties8);
        java.util.Properties properties10 = new java.util.Properties(properties8);
        boolean boolean11 = properties2.containsKey((java.lang.Object) properties10);
        java.util.Properties properties12 = null;
        java.util.Properties properties13 = new java.util.Properties(properties12);
        java.util.Properties properties14 = new java.util.Properties(properties12);
        java.util.Properties properties15 = null;
        java.util.Properties properties16 = new java.util.Properties(properties15);
        java.lang.Object obj18 = properties14.put((java.lang.Object) properties16, (java.lang.Object) (short) 1);
        java.util.Properties properties20 = null;
        java.util.Properties properties21 = new java.util.Properties(properties20);
        java.util.Properties properties22 = new java.util.Properties(properties20);
        java.util.Properties properties23 = null;
        java.util.Properties properties24 = new java.util.Properties(properties23);
        java.lang.Object obj26 = properties22.put((java.lang.Object) properties24, (java.lang.Object) (short) 1);
        boolean boolean27 = properties16.remove((java.lang.Object) false, (java.lang.Object) (short) 1);
        java.util.Set<java.lang.String> strSet28 = properties16.stringPropertyNames();
        boolean boolean29 = properties10.containsKey((java.lang.Object) strSet28);
        java.util.Properties properties30 = null;
        java.util.Properties properties31 = new java.util.Properties(properties30);
        java.util.Properties properties32 = new java.util.Properties(properties30);
        java.util.Properties properties33 = null;
        java.util.Properties properties34 = new java.util.Properties(properties33);
        java.lang.Object obj36 = properties32.put((java.lang.Object) properties34, (java.lang.Object) (short) 1);
        properties34.clear();
        java.lang.String str39 = properties34.getProperty("");
        java.util.Properties properties40 = null;
        java.util.Properties properties41 = new java.util.Properties(properties40);
        java.util.Properties properties42 = new java.util.Properties(properties40);
        java.util.Properties properties43 = null;
        java.util.Properties properties44 = new java.util.Properties(properties43);
        java.lang.Object obj46 = properties42.put((java.lang.Object) properties44, (java.lang.Object) (short) 1);
        properties34.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties42);
        boolean boolean48 = properties10.containsKey((java.lang.Object) properties34);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties50 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties50.setThreadedTwoPhaseCommit(true);
        boolean boolean53 = atomikosProperties50.isEnableLogging();
        java.lang.Object obj54 = properties10.put((java.lang.Object) '4', (java.lang.Object) boolean53);
        java.util.Properties properties55 = new java.util.Properties(properties10);
        boolean boolean56 = properties10.isEmpty();
        java.lang.Object obj59 = properties10.setProperty("tmlog", "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=0, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.tm_unique_name=, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
        java.io.OutputStream outputStream60 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties10.store(outputStream60, "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(obj6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNull(obj18);
        org.junit.Assert.assertNull(obj26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(strSet28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNull(obj36);
        org.junit.Assert.assertNull(str39);
        org.junit.Assert.assertNull(obj46);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertNull(obj54);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertNull(obj59);
    }

    @Test
    public void test1361() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1361");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        int int1 = atomikosProperties0.getMaxActives();
        long long2 = atomikosProperties0.getMaxTimeout();
        java.util.Properties properties3 = atomikosProperties0.asProperties();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties4 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties4.setDefaultJtaTimeout((long) (byte) 10);
        long long7 = atomikosProperties4.getDefaultJtaTimeout();
        atomikosProperties4.setTransactionManagerUniqueName("hi!");
        atomikosProperties4.setLogBaseName("tmlog");
        atomikosProperties4.setTransactionManagerUniqueName("{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=0, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.tm_unique_name=, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
        atomikosProperties4.setThreadedTwoPhaseCommit(false);
        java.lang.Object obj16 = properties3.get((java.lang.Object) false);
        java.io.OutputStream outputStream17 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties3.save(outputStream17, "hi!");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 50 + "'", int1 == 50);
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + 300000L + "'", long2 == 300000L);
        org.junit.Assert.assertNotNull(properties3);
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + 10L + "'", long7 == 10L);
        org.junit.Assert.assertNull(obj16);
    }

    @Test
    public void test1362() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1362");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Properties properties2 = new java.util.Properties(properties0);
        java.util.Properties properties3 = null;
        java.util.Properties properties4 = new java.util.Properties(properties3);
        java.lang.Object obj6 = properties2.put((java.lang.Object) properties4, (java.lang.Object) (short) 1);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties7 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties7.setThreadedTwoPhaseCommit(true);
        atomikosProperties7.setMaxActives((int) (byte) 0);
        boolean boolean12 = properties2.containsValue((java.lang.Object) atomikosProperties7);
        java.util.Enumeration<java.lang.Object> objEnumeration13 = properties2.keys();
        java.io.PrintStream printStream14 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties2.list(printStream14);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(obj6);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(objEnumeration13);
    }

    @Test
    public void test1363() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1363");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Properties properties2 = new java.util.Properties(properties0);
        java.util.Properties properties3 = null;
        java.util.Properties properties4 = new java.util.Properties(properties3);
        java.lang.Object obj6 = properties2.put((java.lang.Object) properties4, (java.lang.Object) (short) 1);
        java.util.Properties properties8 = null;
        java.util.Properties properties9 = new java.util.Properties(properties8);
        java.util.Properties properties10 = new java.util.Properties(properties8);
        java.util.Properties properties11 = null;
        java.util.Properties properties12 = new java.util.Properties(properties11);
        java.lang.Object obj14 = properties10.put((java.lang.Object) properties12, (java.lang.Object) (short) 1);
        boolean boolean15 = properties4.remove((java.lang.Object) false, (java.lang.Object) (short) 1);
        java.util.Set<java.lang.String> strSet16 = properties4.stringPropertyNames();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties17 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties17.setDefaultJtaTimeout((long) (byte) 10);
        long long20 = atomikosProperties17.getDefaultJtaTimeout();
        java.lang.Object obj21 = properties4.get((java.lang.Object) atomikosProperties17);
        int int22 = properties4.size();
        java.util.Properties properties23 = new java.util.Properties(properties4);
        java.util.Properties properties24 = new java.util.Properties(properties23);
        java.util.Enumeration<java.lang.Object> objEnumeration25 = properties23.keys();
        java.util.Properties properties26 = null;
        java.util.Properties properties27 = new java.util.Properties(properties26);
        java.util.Properties properties28 = new java.util.Properties(properties26);
        java.util.Properties properties29 = null;
        java.util.Properties properties30 = new java.util.Properties(properties29);
        java.lang.Object obj32 = properties28.put((java.lang.Object) properties30, (java.lang.Object) (short) 1);
        properties30.clear();
        java.lang.String str35 = properties30.getProperty("");
        java.util.Properties properties36 = null;
        java.util.Properties properties37 = new java.util.Properties(properties36);
        java.util.Properties properties38 = new java.util.Properties(properties36);
        java.util.Properties properties39 = null;
        java.util.Properties properties40 = new java.util.Properties(properties39);
        java.lang.Object obj42 = properties38.put((java.lang.Object) properties40, (java.lang.Object) (short) 1);
        properties30.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties38);
        java.util.Enumeration<java.lang.Object> objEnumeration44 = properties30.keys();
        java.util.Enumeration<java.lang.Object> objEnumeration45 = properties30.elements();
        java.util.Set<java.lang.Object> objSet46 = properties30.keySet();
        java.lang.Object obj49 = properties30.setProperty("{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=0, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.tm_unique_name=, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}", "");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties50 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        boolean boolean51 = atomikosProperties50.isSerialJtaTransactions();
        java.util.Properties properties52 = atomikosProperties50.asProperties();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties53 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties53.setDefaultJtaTimeout((long) (byte) 10);
        atomikosProperties53.setCheckpointInterval((long) (byte) 0);
        atomikosProperties53.setTransactionManagerUniqueName("");
        java.util.Properties properties60 = atomikosProperties53.asProperties();
        java.lang.String str61 = atomikosProperties53.getLogBaseName();
        java.util.Properties properties62 = atomikosProperties53.asProperties();
        java.lang.Object obj63 = properties30.replace((java.lang.Object) properties52, (java.lang.Object) atomikosProperties53);
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean64 = properties23.containsValue(obj63);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(obj6);
        org.junit.Assert.assertNull(obj14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(strSet16);
        org.junit.Assert.assertTrue("'" + long20 + "' != '" + 10L + "'", long20 == 10L);
        org.junit.Assert.assertNull(obj21);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 0 + "'", int22 == 0);
        org.junit.Assert.assertNotNull(objEnumeration25);
        org.junit.Assert.assertNull(obj32);
        org.junit.Assert.assertNull(str35);
        org.junit.Assert.assertNull(obj42);
        org.junit.Assert.assertNotNull(objEnumeration44);
        org.junit.Assert.assertNotNull(objEnumeration45);
        org.junit.Assert.assertNotNull(objSet46);
        org.junit.Assert.assertNull(obj49);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertNotNull(properties52);
        org.junit.Assert.assertNotNull(properties60);
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "tmlog" + "'", str61, "tmlog");
        org.junit.Assert.assertNotNull(properties62);
        org.junit.Assert.assertNull(obj63);
    }

    @Test
    public void test1364() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1364");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Properties properties2 = new java.util.Properties(properties0);
        java.util.Properties properties3 = null;
        java.util.Properties properties4 = new java.util.Properties(properties3);
        java.lang.Object obj6 = properties2.put((java.lang.Object) properties4, (java.lang.Object) (short) 1);
        properties4.clear();
        int int8 = properties4.size();
        java.util.Properties properties9 = null;
        java.util.Properties properties10 = new java.util.Properties(properties9);
        java.util.Properties properties11 = new java.util.Properties(properties9);
        java.util.Properties properties12 = null;
        java.util.Properties properties13 = new java.util.Properties(properties12);
        java.lang.Object obj15 = properties11.put((java.lang.Object) properties13, (java.lang.Object) (short) 1);
        java.util.Properties properties16 = new java.util.Properties(properties13);
        java.util.Properties properties17 = new java.util.Properties(properties13);
        boolean boolean19 = properties4.remove((java.lang.Object) properties13, (java.lang.Object) 10.0f);
        java.util.Enumeration<java.lang.Object> objEnumeration20 = properties13.elements();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties21 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties21.setDefaultJtaTimeout((long) (byte) 10);
        atomikosProperties21.setCheckpointInterval((long) (byte) 0);
        long long26 = atomikosProperties21.getMaxTimeout();
        atomikosProperties21.setSerialJtaTransactions(true);
        java.util.Properties properties29 = new java.util.Properties();
        java.util.Enumeration<?> wildcardEnumeration30 = properties29.propertyNames();
        java.lang.Object obj31 = properties13.replace((java.lang.Object) atomikosProperties21, (java.lang.Object) properties29);
        java.util.Properties properties32 = null;
        java.util.Properties properties33 = new java.util.Properties(properties32);
        java.util.Properties properties34 = new java.util.Properties(properties32);
        java.util.Properties properties35 = null;
        java.util.Properties properties36 = new java.util.Properties(properties35);
        java.lang.Object obj38 = properties34.put((java.lang.Object) properties36, (java.lang.Object) (short) 1);
        boolean boolean39 = properties34.isEmpty();
        java.util.Properties properties40 = null;
        java.util.Properties properties41 = new java.util.Properties(properties40);
        java.util.Properties properties42 = new java.util.Properties(properties40);
        boolean boolean43 = properties34.containsKey((java.lang.Object) properties42);
        java.util.Properties properties44 = new java.util.Properties(properties42);
        java.util.Properties properties45 = null;
        java.util.Properties properties46 = new java.util.Properties(properties45);
        java.util.Properties properties47 = new java.util.Properties(properties45);
        java.util.Properties properties48 = null;
        java.util.Properties properties49 = new java.util.Properties(properties48);
        java.lang.Object obj51 = properties47.put((java.lang.Object) properties49, (java.lang.Object) (short) 1);
        boolean boolean52 = properties47.isEmpty();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties53 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties53.setDefaultJtaTimeout((long) (byte) 10);
        atomikosProperties53.setCheckpointInterval((long) (byte) 0);
        atomikosProperties53.setTransactionManagerUniqueName("");
        java.util.Properties properties60 = atomikosProperties53.asProperties();
        java.lang.Object obj61 = properties47.remove((java.lang.Object) properties60);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties62 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties62.setDefaultJtaTimeout((long) (byte) 10);
        atomikosProperties62.setCheckpointInterval((long) (byte) 0);
        atomikosProperties62.setTransactionManagerUniqueName("");
        java.lang.Object obj69 = properties60.remove((java.lang.Object) atomikosProperties62);
        java.util.Enumeration<java.lang.Object> objEnumeration70 = properties60.elements();
        java.lang.Object obj71 = properties44.get((java.lang.Object) properties60);
        properties13.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties60);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties73 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties73.setThreadedTwoPhaseCommit(true);
        atomikosProperties73.setMaxActives((int) (byte) 0);
        atomikosProperties73.setEnableLogging(true);
        atomikosProperties73.setForceShutdownOnVmExit(false);
        java.util.Properties properties82 = atomikosProperties73.asProperties();
        boolean boolean83 = atomikosProperties73.isThreadedTwoPhaseCommit();
        atomikosProperties73.setEnableLogging(true);
        boolean boolean86 = properties60.containsValue((java.lang.Object) atomikosProperties73);
        java.util.Properties properties87 = new java.util.Properties(properties60);
        java.lang.String str90 = properties60.getProperty("hi!", "{[]={com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=0, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.tm_unique_name=, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}}");
        org.junit.Assert.assertNull(obj6);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertNull(obj15);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(objEnumeration20);
        org.junit.Assert.assertTrue("'" + long26 + "' != '" + 300000L + "'", long26 == 300000L);
        org.junit.Assert.assertNotNull(wildcardEnumeration30);
        org.junit.Assert.assertNull(obj31);
        org.junit.Assert.assertNull(obj38);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNull(obj51);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNotNull(properties60);
        org.junit.Assert.assertNull(obj61);
        org.junit.Assert.assertNull(obj69);
        org.junit.Assert.assertNotNull(objEnumeration70);
        org.junit.Assert.assertNull(obj71);
        org.junit.Assert.assertNotNull(properties82);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + true + "'", boolean83 == true);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + false + "'", boolean86 == false);
        org.junit.Assert.assertEquals("'" + str90 + "' != '" + "{[]={com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=0, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.tm_unique_name=, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}}" + "'", str90, "{[]={com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=0, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.tm_unique_name=, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}}");
    }

    @Test
    public void test1365() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1365");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        boolean boolean1 = atomikosProperties0.isForceShutdownOnVmExit();
        java.util.Properties properties2 = atomikosProperties0.asProperties();
        atomikosProperties0.setMaxTimeout((long) '4');
        atomikosProperties0.setTransactionManagerUniqueName("hi!");
        atomikosProperties0.setDefaultJtaTimeout(52L);
        atomikosProperties0.setLogBaseDir("{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=0, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog, {}={}}");
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertNotNull(properties2);
    }

    @Test
    public void test1366() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1366");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        int int1 = atomikosProperties0.getMaxActives();
        long long2 = atomikosProperties0.getMaxTimeout();
        java.util.Properties properties3 = atomikosProperties0.asProperties();
        atomikosProperties0.setService("hi!");
        int int6 = atomikosProperties0.getMaxActives();
        atomikosProperties0.setThreadedTwoPhaseCommit(true);
        boolean boolean9 = atomikosProperties0.isEnableLogging();
        long long10 = atomikosProperties0.getDefaultJtaTimeout();
        boolean boolean11 = atomikosProperties0.isForceShutdownOnVmExit();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 50 + "'", int1 == 50);
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + 300000L + "'", long2 == 300000L);
        org.junit.Assert.assertNotNull(properties3);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 50 + "'", int6 == 50);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertTrue("'" + long10 + "' != '" + 10000L + "'", long10 == 10000L);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
    }

    @Test
    public void test1367() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1367");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Properties properties2 = new java.util.Properties(properties0);
        java.util.Properties properties3 = null;
        java.util.Properties properties4 = new java.util.Properties(properties3);
        java.lang.Object obj6 = properties2.put((java.lang.Object) properties4, (java.lang.Object) (short) 1);
        properties4.clear();
        int int8 = properties4.size();
        java.util.Properties properties9 = null;
        java.util.Properties properties10 = new java.util.Properties(properties9);
        java.util.Properties properties11 = new java.util.Properties(properties9);
        java.util.Properties properties12 = null;
        java.util.Properties properties13 = new java.util.Properties(properties12);
        java.lang.Object obj15 = properties11.put((java.lang.Object) properties13, (java.lang.Object) (short) 1);
        java.util.Properties properties16 = new java.util.Properties(properties13);
        java.util.Properties properties17 = new java.util.Properties(properties13);
        boolean boolean19 = properties4.remove((java.lang.Object) properties13, (java.lang.Object) 10.0f);
        java.util.Enumeration<java.lang.Object> objEnumeration20 = properties13.elements();
        java.util.Properties properties21 = new java.util.Properties(properties13);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties22 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        int int23 = atomikosProperties22.getMaxActives();
        long long24 = atomikosProperties22.getMaxTimeout();
        java.util.Properties properties25 = atomikosProperties22.asProperties();
        int int26 = atomikosProperties22.getMaxActives();
        java.lang.Object obj28 = properties21.putIfAbsent((java.lang.Object) atomikosProperties22, (java.lang.Object) 1);
        atomikosProperties22.setLogBaseDir("{}");
        atomikosProperties22.setDefaultJtaTimeout((long) (short) 10);
        long long33 = atomikosProperties22.getMaxTimeout();
        long long34 = atomikosProperties22.getDefaultJtaTimeout();
        atomikosProperties22.setTransactionManagerUniqueName("{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=0, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog, {}={}}");
        org.junit.Assert.assertNull(obj6);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertNull(obj15);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(objEnumeration20);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 50 + "'", int23 == 50);
        org.junit.Assert.assertTrue("'" + long24 + "' != '" + 300000L + "'", long24 == 300000L);
        org.junit.Assert.assertNotNull(properties25);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 50 + "'", int26 == 50);
        org.junit.Assert.assertNull(obj28);
        org.junit.Assert.assertTrue("'" + long33 + "' != '" + 300000L + "'", long33 == 300000L);
        org.junit.Assert.assertTrue("'" + long34 + "' != '" + 10L + "'", long34 == 10L);
    }

    @Test
    public void test1368() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1368");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setDefaultJtaTimeout((long) (byte) 10);
        atomikosProperties0.setCheckpointInterval((long) (byte) 0);
        atomikosProperties0.setTransactionManagerUniqueName("");
        java.util.Properties properties7 = atomikosProperties0.asProperties();
        java.lang.String str8 = atomikosProperties0.getTransactionManagerUniqueName();
        atomikosProperties0.setDefaultJtaTimeout((long) (-1));
        java.lang.String str11 = atomikosProperties0.getService();
        boolean boolean12 = atomikosProperties0.isEnableLogging();
        long long13 = atomikosProperties0.getCheckpointInterval();
        org.junit.Assert.assertNotNull(properties7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "" + "'", str8, "");
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + long13 + "' != '" + 0L + "'", long13 == 0L);
    }

    @Test
    public void test1369() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1369");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setDefaultJtaTimeout((long) (byte) 10);
        long long3 = atomikosProperties0.getDefaultJtaTimeout();
        atomikosProperties0.setTransactionManagerUniqueName("");
        boolean boolean6 = atomikosProperties0.isEnableLogging();
        atomikosProperties0.setDefaultJtaTimeout((long) '4');
        java.lang.String str9 = atomikosProperties0.getTransactionManagerUniqueName();
        atomikosProperties0.setThreadedTwoPhaseCommit(true);
        java.lang.String str12 = atomikosProperties0.getTransactionManagerUniqueName();
        boolean boolean13 = atomikosProperties0.isThreadedTwoPhaseCommit();
        long long14 = atomikosProperties0.getMaxTimeout();
        org.junit.Assert.assertTrue("'" + long3 + "' != '" + 10L + "'", long3 == 10L);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "" + "'", str9, "");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "" + "'", str12, "");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + long14 + "' != '" + 300000L + "'", long14 == 300000L);
    }

    @Test
    public void test1370() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1370");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setDefaultJtaTimeout((long) (byte) 10);
        atomikosProperties0.setCheckpointInterval((long) (byte) 0);
        atomikosProperties0.setTransactionManagerUniqueName("");
        java.util.Properties properties7 = atomikosProperties0.asProperties();
        java.util.Properties properties8 = atomikosProperties0.asProperties();
        java.util.Collection<java.lang.Object> objCollection9 = properties8.values();
        java.util.Properties properties10 = null;
        java.util.Properties properties11 = new java.util.Properties(properties10);
        java.util.Properties properties12 = new java.util.Properties(properties10);
        java.util.Properties properties13 = null;
        java.util.Properties properties14 = new java.util.Properties(properties13);
        java.lang.Object obj16 = properties12.put((java.lang.Object) properties14, (java.lang.Object) (short) 1);
        boolean boolean17 = properties12.isEmpty();
        java.util.Properties properties18 = null;
        java.util.Properties properties19 = new java.util.Properties(properties18);
        java.util.Properties properties20 = new java.util.Properties(properties18);
        boolean boolean21 = properties12.containsKey((java.lang.Object) properties20);
        java.util.Properties properties22 = new java.util.Properties(properties20);
        java.util.Properties properties23 = new java.util.Properties(properties22);
        java.util.Properties properties24 = null;
        java.util.Properties properties25 = new java.util.Properties(properties24);
        java.util.Properties properties26 = new java.util.Properties(properties24);
        java.util.Properties properties27 = null;
        java.util.Properties properties28 = new java.util.Properties(properties27);
        java.lang.Object obj30 = properties26.put((java.lang.Object) properties28, (java.lang.Object) (short) 1);
        properties28.clear();
        int int32 = properties28.size();
        java.util.Properties properties33 = new java.util.Properties(properties28);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties34 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        int int35 = atomikosProperties34.getMaxActives();
        long long36 = atomikosProperties34.getMaxTimeout();
        java.util.Properties properties37 = atomikosProperties34.asProperties();
        java.util.Properties properties38 = atomikosProperties34.asProperties();
        java.util.Properties properties39 = null;
        java.util.Properties properties40 = new java.util.Properties(properties39);
        java.util.Properties properties41 = new java.util.Properties(properties39);
        java.util.Properties properties42 = null;
        java.util.Properties properties43 = new java.util.Properties(properties42);
        java.lang.Object obj45 = properties41.put((java.lang.Object) properties43, (java.lang.Object) (short) 1);
        java.util.Enumeration<java.lang.Object> objEnumeration46 = properties43.elements();
        java.lang.Object obj47 = properties28.replace((java.lang.Object) atomikosProperties34, (java.lang.Object) properties43);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties49 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties49.setThreadedTwoPhaseCommit(true);
        java.lang.String str52 = atomikosProperties49.getService();
        boolean boolean53 = atomikosProperties49.isSerialJtaTransactions();
        java.lang.Object obj54 = properties43.getOrDefault((java.lang.Object) "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.tm_unique_name=, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}", (java.lang.Object) atomikosProperties49);
        boolean boolean55 = properties22.equals((java.lang.Object) properties43);
        properties8.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties43);
        java.lang.String str59 = properties43.getProperty("{=}", "");
        org.junit.Assert.assertNotNull(properties7);
        org.junit.Assert.assertNotNull(properties8);
        org.junit.Assert.assertNotNull(objCollection9);
        org.junit.Assert.assertNull(obj16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNull(obj30);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 0 + "'", int32 == 0);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 50 + "'", int35 == 50);
        org.junit.Assert.assertTrue("'" + long36 + "' != '" + 300000L + "'", long36 == 300000L);
        org.junit.Assert.assertNotNull(properties37);
        org.junit.Assert.assertNotNull(properties38);
        org.junit.Assert.assertNull(obj45);
        org.junit.Assert.assertNotNull(objEnumeration46);
        org.junit.Assert.assertNull(obj47);
        org.junit.Assert.assertNull(str52);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertNotNull(obj54);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "" + "'", str59, "");
    }

    @Test
    public void test1371() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1371");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setDefaultJtaTimeout((long) (byte) 10);
        long long3 = atomikosProperties0.getDefaultJtaTimeout();
        atomikosProperties0.setTransactionManagerUniqueName("");
        boolean boolean6 = atomikosProperties0.isEnableLogging();
        atomikosProperties0.setDefaultJtaTimeout((long) '4');
        java.lang.String str9 = atomikosProperties0.getTransactionManagerUniqueName();
        atomikosProperties0.setThreadedTwoPhaseCommit(true);
        java.util.Properties properties12 = atomikosProperties0.asProperties();
        java.util.Properties properties13 = new java.util.Properties(properties12);
        java.util.Properties properties14 = new java.util.Properties(properties12);
        java.io.InputStream inputStream15 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties14.loadFromXML(inputStream15);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + long3 + "' != '" + 10L + "'", long3 == 10L);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "" + "'", str9, "");
        org.junit.Assert.assertNotNull(properties12);
    }

    @Test
    public void test1372() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1372");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setDefaultJtaTimeout((long) (byte) 10);
        atomikosProperties0.setCheckpointInterval((long) (byte) 0);
        atomikosProperties0.setTransactionManagerUniqueName("");
        boolean boolean7 = atomikosProperties0.isEnableLogging();
        java.util.Properties properties8 = atomikosProperties0.asProperties();
        java.util.Properties properties9 = new java.util.Properties(properties8);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties10 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties10.setDefaultJtaTimeout((long) (byte) 10);
        atomikosProperties10.setSerialJtaTransactions(false);
        atomikosProperties10.setMaxTimeout((long) (short) -1);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties17 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties17.setDefaultJtaTimeout((long) (byte) 10);
        atomikosProperties17.setCheckpointInterval((long) (byte) 0);
        atomikosProperties17.setTransactionManagerUniqueName("");
        java.util.Properties properties24 = atomikosProperties17.asProperties();
        java.lang.String str25 = atomikosProperties17.getLogBaseName();
        java.util.Properties properties26 = atomikosProperties17.asProperties();
        java.lang.Object obj27 = properties8.getOrDefault((java.lang.Object) (short) -1, (java.lang.Object) atomikosProperties17);
        java.util.Properties properties28 = atomikosProperties17.asProperties();
        java.util.Enumeration<java.lang.Object> objEnumeration29 = properties28.elements();
        java.util.Properties properties30 = new java.util.Properties(properties28);
        java.io.PrintWriter printWriter31 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties28.list(printWriter31);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(properties8);
        org.junit.Assert.assertNotNull(properties24);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "tmlog" + "'", str25, "tmlog");
        org.junit.Assert.assertNotNull(properties26);
        org.junit.Assert.assertNotNull(obj27);
        org.junit.Assert.assertNotNull(properties28);
        org.junit.Assert.assertNotNull(objEnumeration29);
    }

    @Test
    public void test1373() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1373");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Properties properties2 = new java.util.Properties(properties0);
        java.util.Properties properties3 = null;
        java.util.Properties properties4 = new java.util.Properties(properties3);
        java.lang.Object obj6 = properties2.put((java.lang.Object) properties4, (java.lang.Object) (short) 1);
        boolean boolean7 = properties2.isEmpty();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties8 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties8.setDefaultJtaTimeout((long) (byte) 10);
        atomikosProperties8.setCheckpointInterval((long) (byte) 0);
        atomikosProperties8.setTransactionManagerUniqueName("");
        java.util.Properties properties15 = atomikosProperties8.asProperties();
        java.lang.Object obj16 = properties2.remove((java.lang.Object) properties15);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties17 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties17.setDefaultJtaTimeout((long) (byte) 10);
        atomikosProperties17.setCheckpointInterval((long) (byte) 0);
        atomikosProperties17.setTransactionManagerUniqueName("");
        java.lang.Object obj24 = properties15.remove((java.lang.Object) atomikosProperties17);
        java.util.Enumeration<java.lang.Object> objEnumeration25 = properties15.keys();
        java.util.Map<java.lang.Object, java.lang.Object> objMap26 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties15.putAll(objMap26);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(obj6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(properties15);
        org.junit.Assert.assertNull(obj16);
        org.junit.Assert.assertNull(obj24);
        org.junit.Assert.assertNotNull(objEnumeration25);
    }

    @Test
    public void test1374() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1374");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Properties properties2 = new java.util.Properties(properties0);
        java.util.Properties properties3 = null;
        java.util.Properties properties4 = new java.util.Properties(properties3);
        java.lang.Object obj6 = properties2.put((java.lang.Object) properties4, (java.lang.Object) (short) 1);
        java.util.Properties properties8 = null;
        java.util.Properties properties9 = new java.util.Properties(properties8);
        java.util.Properties properties10 = new java.util.Properties(properties8);
        java.util.Properties properties11 = null;
        java.util.Properties properties12 = new java.util.Properties(properties11);
        java.lang.Object obj14 = properties10.put((java.lang.Object) properties12, (java.lang.Object) (short) 1);
        boolean boolean15 = properties4.remove((java.lang.Object) false, (java.lang.Object) (short) 1);
        java.util.Set<java.lang.String> strSet16 = properties4.stringPropertyNames();
        java.lang.Object obj17 = properties4.clone();
        java.util.Properties properties18 = new java.util.Properties(properties4);
        java.util.Enumeration<java.lang.Object> objEnumeration19 = properties4.keys();
        java.lang.String str20 = properties4.toString();
        java.lang.String str21 = properties4.toString();
        java.util.Properties properties22 = new java.util.Properties(properties4);
        java.io.OutputStream outputStream23 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties22.storeToXML(outputStream23, "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=true, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=true, com.atomikos.icatch.max_actives=35, com.atomikos.icatch.log_base_name=tmlog}", "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=0, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.tm_unique_name=, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(obj6);
        org.junit.Assert.assertNull(obj14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(strSet16);
        org.junit.Assert.assertNotNull(obj17);
        org.junit.Assert.assertEquals(obj17.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj17), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj17), "{}");
        org.junit.Assert.assertNotNull(objEnumeration19);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "{}" + "'", str20, "{}");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "{}" + "'", str21, "{}");
    }

    @Test
    public void test1375() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1375");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Properties properties2 = new java.util.Properties(properties0);
        java.util.Properties properties3 = null;
        java.util.Properties properties4 = new java.util.Properties(properties3);
        java.lang.Object obj6 = properties2.put((java.lang.Object) properties4, (java.lang.Object) (short) 1);
        boolean boolean7 = properties2.isEmpty();
        java.util.Properties properties8 = null;
        java.util.Properties properties9 = new java.util.Properties(properties8);
        java.util.Properties properties10 = new java.util.Properties(properties8);
        boolean boolean11 = properties2.containsKey((java.lang.Object) properties10);
        java.util.Properties properties12 = null;
        java.util.Properties properties13 = new java.util.Properties(properties12);
        java.util.Properties properties14 = new java.util.Properties(properties12);
        java.util.Properties properties15 = null;
        java.util.Properties properties16 = new java.util.Properties(properties15);
        java.lang.Object obj18 = properties14.put((java.lang.Object) properties16, (java.lang.Object) (short) 1);
        java.util.Properties properties20 = null;
        java.util.Properties properties21 = new java.util.Properties(properties20);
        java.util.Properties properties22 = new java.util.Properties(properties20);
        java.util.Properties properties23 = null;
        java.util.Properties properties24 = new java.util.Properties(properties23);
        java.lang.Object obj26 = properties22.put((java.lang.Object) properties24, (java.lang.Object) (short) 1);
        boolean boolean27 = properties16.remove((java.lang.Object) false, (java.lang.Object) (short) 1);
        java.util.Set<java.lang.String> strSet28 = properties16.stringPropertyNames();
        boolean boolean29 = properties10.containsKey((java.lang.Object) strSet28);
        java.util.Properties properties30 = null;
        java.util.Properties properties31 = new java.util.Properties(properties30);
        java.util.Properties properties32 = new java.util.Properties(properties30);
        java.util.Properties properties33 = null;
        java.util.Properties properties34 = new java.util.Properties(properties33);
        java.lang.Object obj36 = properties32.put((java.lang.Object) properties34, (java.lang.Object) (short) 1);
        properties34.clear();
        java.lang.String str39 = properties34.getProperty("");
        java.util.Properties properties40 = null;
        java.util.Properties properties41 = new java.util.Properties(properties40);
        java.util.Properties properties42 = new java.util.Properties(properties40);
        java.util.Properties properties43 = null;
        java.util.Properties properties44 = new java.util.Properties(properties43);
        java.lang.Object obj46 = properties42.put((java.lang.Object) properties44, (java.lang.Object) (short) 1);
        properties34.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties42);
        boolean boolean48 = properties10.containsKey((java.lang.Object) properties34);
        java.util.Properties properties50 = null;
        java.util.Properties properties51 = new java.util.Properties(properties50);
        java.util.Properties properties52 = new java.util.Properties(properties50);
        java.util.Properties properties53 = null;
        java.util.Properties properties54 = new java.util.Properties(properties53);
        java.lang.Object obj56 = properties52.put((java.lang.Object) properties54, (java.lang.Object) (short) 1);
        properties54.clear();
        int int58 = properties54.size();
        java.lang.Object obj61 = properties54.setProperty("hi!", "hi!");
        java.lang.Object obj64 = properties54.setProperty("tmlog", "tmlog");
        java.lang.Object obj65 = properties34.putIfAbsent((java.lang.Object) (short) 10, (java.lang.Object) "tmlog");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties66 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        int int67 = atomikosProperties66.getMaxActives();
        long long68 = atomikosProperties66.getMaxTimeout();
        java.util.Properties properties69 = atomikosProperties66.asProperties();
        boolean boolean70 = properties34.containsValue((java.lang.Object) properties69);
        java.util.Properties properties71 = new java.util.Properties(properties69);
        boolean boolean72 = properties71.isEmpty();
        boolean boolean73 = properties71.isEmpty();
        java.util.Properties properties74 = new java.util.Properties(properties71);
        java.lang.Object obj75 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean76 = properties71.contains(obj75);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(obj6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNull(obj18);
        org.junit.Assert.assertNull(obj26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(strSet28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNull(obj36);
        org.junit.Assert.assertNull(str39);
        org.junit.Assert.assertNull(obj46);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNull(obj56);
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + 0 + "'", int58 == 0);
        org.junit.Assert.assertNull(obj61);
        org.junit.Assert.assertNull(obj64);
        org.junit.Assert.assertNull(obj65);
        org.junit.Assert.assertTrue("'" + int67 + "' != '" + 50 + "'", int67 == 50);
        org.junit.Assert.assertTrue("'" + long68 + "' != '" + 300000L + "'", long68 == 300000L);
        org.junit.Assert.assertNotNull(properties69);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + true + "'", boolean72 == true);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + true + "'", boolean73 == true);
    }

    @Test
    public void test1376() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1376");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setDefaultJtaTimeout((long) (byte) 10);
        atomikosProperties0.setCheckpointInterval((long) (byte) 0);
        atomikosProperties0.setTransactionManagerUniqueName("");
        boolean boolean7 = atomikosProperties0.isEnableLogging();
        java.util.Properties properties8 = atomikosProperties0.asProperties();
        java.util.Properties properties9 = new java.util.Properties(properties8);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties10 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties10.setDefaultJtaTimeout((long) (byte) 10);
        atomikosProperties10.setSerialJtaTransactions(false);
        atomikosProperties10.setMaxTimeout((long) (short) -1);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties17 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties17.setDefaultJtaTimeout((long) (byte) 10);
        atomikosProperties17.setCheckpointInterval((long) (byte) 0);
        atomikosProperties17.setTransactionManagerUniqueName("");
        java.util.Properties properties24 = atomikosProperties17.asProperties();
        java.lang.String str25 = atomikosProperties17.getLogBaseName();
        java.util.Properties properties26 = atomikosProperties17.asProperties();
        java.lang.Object obj27 = properties8.getOrDefault((java.lang.Object) (short) -1, (java.lang.Object) atomikosProperties17);
        java.util.Properties properties28 = atomikosProperties17.asProperties();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet29 = properties28.entrySet();
        java.util.Properties properties30 = null;
        java.util.Properties properties31 = new java.util.Properties(properties30);
        java.util.Properties properties32 = new java.util.Properties(properties30);
        java.util.Properties properties33 = null;
        java.util.Properties properties34 = new java.util.Properties(properties33);
        java.lang.Object obj36 = properties32.put((java.lang.Object) properties34, (java.lang.Object) (short) 1);
        properties34.clear();
        int int38 = properties34.size();
        java.lang.Object obj41 = properties34.setProperty("hi!", "hi!");
        java.lang.Object obj44 = properties34.setProperty("tmlog", "tmlog");
        java.util.Enumeration<java.lang.Object> objEnumeration45 = properties34.elements();
        java.util.Properties properties46 = new java.util.Properties(properties34);
        java.util.Properties properties47 = null;
        java.util.Properties properties48 = new java.util.Properties(properties47);
        java.util.Properties properties49 = new java.util.Properties(properties47);
        java.util.Properties properties50 = null;
        java.util.Properties properties51 = new java.util.Properties(properties50);
        java.lang.Object obj53 = properties49.put((java.lang.Object) properties51, (java.lang.Object) (short) 1);
        boolean boolean54 = properties49.isEmpty();
        java.util.Properties properties55 = null;
        java.util.Properties properties56 = new java.util.Properties(properties55);
        java.util.Properties properties57 = new java.util.Properties(properties55);
        boolean boolean58 = properties49.containsKey((java.lang.Object) properties57);
        java.util.Properties properties59 = new java.util.Properties(properties57);
        java.lang.Object obj60 = properties59.clone();
        java.util.Set<java.lang.String> strSet61 = properties59.stringPropertyNames();
        boolean boolean62 = properties34.containsValue((java.lang.Object) properties59);
        java.util.Properties properties63 = null;
        java.util.Properties properties64 = new java.util.Properties(properties63);
        java.util.Properties properties65 = new java.util.Properties(properties63);
        java.util.Properties properties66 = null;
        java.util.Properties properties67 = new java.util.Properties(properties66);
        java.lang.Object obj69 = properties65.put((java.lang.Object) properties67, (java.lang.Object) (short) 1);
        java.util.Properties properties70 = new java.util.Properties(properties67);
        int int71 = properties67.size();
        java.lang.Object obj72 = properties28.put((java.lang.Object) properties34, (java.lang.Object) properties67);
        java.io.OutputStream outputStream73 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties28.storeToXML(outputStream73, "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=true, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=true, com.atomikos.icatch.max_actives=35, com.atomikos.icatch.log_base_name=tmlog}");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(properties8);
        org.junit.Assert.assertNotNull(properties24);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "tmlog" + "'", str25, "tmlog");
        org.junit.Assert.assertNotNull(properties26);
        org.junit.Assert.assertNotNull(obj27);
        org.junit.Assert.assertNotNull(properties28);
        org.junit.Assert.assertNotNull(objEntrySet29);
        org.junit.Assert.assertNull(obj36);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 0 + "'", int38 == 0);
        org.junit.Assert.assertNull(obj41);
        org.junit.Assert.assertNull(obj44);
        org.junit.Assert.assertNotNull(objEnumeration45);
        org.junit.Assert.assertNull(obj53);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertNotNull(obj60);
        org.junit.Assert.assertEquals(obj60.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj60), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj60), "{}");
        org.junit.Assert.assertNotNull(strSet61);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertNull(obj69);
        org.junit.Assert.assertTrue("'" + int71 + "' != '" + 0 + "'", int71 == 0);
        org.junit.Assert.assertNull(obj72);
    }

    @Test
    public void test1377() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1377");
        java.util.Properties properties0 = new java.util.Properties();
        java.util.Enumeration<?> wildcardEnumeration1 = properties0.propertyNames();
        java.lang.Object obj2 = properties0.clone();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties3 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties3.setThreadedTwoPhaseCommit(true);
        atomikosProperties3.setMaxActives((int) '#');
        atomikosProperties3.setForceShutdownOnVmExit(true);
        java.lang.String str10 = atomikosProperties3.getLogBaseDir();
        java.util.Properties properties11 = atomikosProperties3.asProperties();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties12 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties12.setThreadedTwoPhaseCommit(true);
        atomikosProperties12.setMaxActives((int) '#');
        atomikosProperties12.setEnableLogging(true);
        boolean boolean19 = properties11.containsKey((java.lang.Object) true);
        java.lang.String str21 = properties11.getProperty("{}");
        java.util.Properties properties22 = null;
        java.util.Properties properties23 = new java.util.Properties(properties22);
        java.util.Properties properties24 = new java.util.Properties(properties22);
        java.util.Properties properties25 = null;
        java.util.Properties properties26 = new java.util.Properties(properties25);
        java.lang.Object obj28 = properties24.put((java.lang.Object) properties26, (java.lang.Object) (short) 1);
        properties26.clear();
        int int30 = properties26.size();
        java.util.Properties properties31 = new java.util.Properties(properties26);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties32 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        int int33 = atomikosProperties32.getMaxActives();
        long long34 = atomikosProperties32.getMaxTimeout();
        java.util.Properties properties35 = atomikosProperties32.asProperties();
        java.util.Properties properties36 = atomikosProperties32.asProperties();
        java.util.Properties properties37 = null;
        java.util.Properties properties38 = new java.util.Properties(properties37);
        java.util.Properties properties39 = new java.util.Properties(properties37);
        java.util.Properties properties40 = null;
        java.util.Properties properties41 = new java.util.Properties(properties40);
        java.lang.Object obj43 = properties39.put((java.lang.Object) properties41, (java.lang.Object) (short) 1);
        java.util.Enumeration<java.lang.Object> objEnumeration44 = properties41.elements();
        java.lang.Object obj45 = properties26.replace((java.lang.Object) atomikosProperties32, (java.lang.Object) properties41);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties47 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties47.setThreadedTwoPhaseCommit(true);
        java.lang.String str50 = atomikosProperties47.getService();
        boolean boolean51 = atomikosProperties47.isSerialJtaTransactions();
        java.lang.Object obj52 = properties41.getOrDefault((java.lang.Object) "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.tm_unique_name=, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}", (java.lang.Object) atomikosProperties47);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties53 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties53.setDefaultJtaTimeout((long) (byte) 10);
        long long56 = atomikosProperties53.getDefaultJtaTimeout();
        java.lang.String str57 = atomikosProperties53.getTransactionManagerUniqueName();
        atomikosProperties53.setThreadedTwoPhaseCommit(true);
        java.lang.Object obj60 = properties11.putIfAbsent((java.lang.Object) atomikosProperties47, (java.lang.Object) atomikosProperties53);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties61 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties61.setDefaultJtaTimeout((long) (byte) 10);
        atomikosProperties61.setSerialJtaTransactions(false);
        atomikosProperties61.setMaxTimeout((long) (short) -1);
        long long68 = atomikosProperties61.getDefaultJtaTimeout();
        java.util.Properties properties69 = atomikosProperties61.asProperties();
        boolean boolean70 = properties0.remove((java.lang.Object) atomikosProperties53, (java.lang.Object) atomikosProperties61);
        java.lang.String str71 = atomikosProperties53.getService();
        org.junit.Assert.assertNotNull(wildcardEnumeration1);
        org.junit.Assert.assertNotNull(obj2);
        org.junit.Assert.assertEquals(obj2.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj2), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj2), "{}");
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertNotNull(properties11);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNull(str21);
        org.junit.Assert.assertNull(obj28);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 0 + "'", int30 == 0);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 50 + "'", int33 == 50);
        org.junit.Assert.assertTrue("'" + long34 + "' != '" + 300000L + "'", long34 == 300000L);
        org.junit.Assert.assertNotNull(properties35);
        org.junit.Assert.assertNotNull(properties36);
        org.junit.Assert.assertNull(obj43);
        org.junit.Assert.assertNotNull(objEnumeration44);
        org.junit.Assert.assertNull(obj45);
        org.junit.Assert.assertNull(str50);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertNotNull(obj52);
        org.junit.Assert.assertTrue("'" + long56 + "' != '" + 10L + "'", long56 == 10L);
        org.junit.Assert.assertNull(str57);
        org.junit.Assert.assertNull(obj60);
        org.junit.Assert.assertTrue("'" + long68 + "' != '" + 10L + "'", long68 == 10L);
        org.junit.Assert.assertNotNull(properties69);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertNull(str71);
    }

    @Test
    public void test1378() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1378");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Properties properties2 = new java.util.Properties(properties0);
        java.util.Properties properties3 = null;
        java.util.Properties properties4 = new java.util.Properties(properties3);
        java.lang.Object obj6 = properties2.put((java.lang.Object) properties4, (java.lang.Object) (short) 1);
        java.util.Properties properties8 = null;
        java.util.Properties properties9 = new java.util.Properties(properties8);
        java.util.Properties properties10 = new java.util.Properties(properties8);
        java.util.Properties properties11 = null;
        java.util.Properties properties12 = new java.util.Properties(properties11);
        java.lang.Object obj14 = properties10.put((java.lang.Object) properties12, (java.lang.Object) (short) 1);
        boolean boolean15 = properties4.remove((java.lang.Object) false, (java.lang.Object) (short) 1);
        java.util.Set<java.lang.String> strSet16 = properties4.stringPropertyNames();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties17 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties17.setDefaultJtaTimeout((long) (byte) 10);
        long long20 = atomikosProperties17.getDefaultJtaTimeout();
        java.lang.Object obj21 = properties4.get((java.lang.Object) atomikosProperties17);
        atomikosProperties17.setCheckpointInterval(52L);
        atomikosProperties17.setThreadedTwoPhaseCommit(true);
        atomikosProperties17.setService("{}");
        java.lang.Class<?> wildcardClass28 = atomikosProperties17.getClass();
        org.junit.Assert.assertNull(obj6);
        org.junit.Assert.assertNull(obj14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(strSet16);
        org.junit.Assert.assertTrue("'" + long20 + "' != '" + 10L + "'", long20 == 10L);
        org.junit.Assert.assertNull(obj21);
        org.junit.Assert.assertNotNull(wildcardClass28);
    }

    @Test
    public void test1379() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1379");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Properties properties2 = new java.util.Properties(properties0);
        java.util.Properties properties3 = null;
        java.util.Properties properties4 = new java.util.Properties(properties3);
        java.lang.Object obj6 = properties2.put((java.lang.Object) properties4, (java.lang.Object) (short) 1);
        properties4.clear();
        int int8 = properties4.size();
        java.util.Properties properties9 = null;
        java.util.Properties properties10 = new java.util.Properties(properties9);
        java.util.Properties properties11 = new java.util.Properties(properties9);
        java.util.Properties properties12 = null;
        java.util.Properties properties13 = new java.util.Properties(properties12);
        java.lang.Object obj15 = properties11.put((java.lang.Object) properties13, (java.lang.Object) (short) 1);
        java.util.Properties properties16 = new java.util.Properties(properties13);
        java.util.Properties properties17 = new java.util.Properties(properties13);
        boolean boolean19 = properties4.remove((java.lang.Object) properties13, (java.lang.Object) 10.0f);
        java.util.Enumeration<java.lang.Object> objEnumeration20 = properties13.elements();
        java.util.Properties properties21 = new java.util.Properties(properties13);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties22 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        int int23 = atomikosProperties22.getMaxActives();
        long long24 = atomikosProperties22.getMaxTimeout();
        java.util.Properties properties25 = atomikosProperties22.asProperties();
        int int26 = atomikosProperties22.getMaxActives();
        java.lang.Object obj28 = properties21.putIfAbsent((java.lang.Object) atomikosProperties22, (java.lang.Object) 1);
        atomikosProperties22.setLogBaseDir("{}");
        atomikosProperties22.setDefaultJtaTimeout((long) (short) 10);
        long long33 = atomikosProperties22.getMaxTimeout();
        long long34 = atomikosProperties22.getDefaultJtaTimeout();
        atomikosProperties22.setForceShutdownOnVmExit(true);
        boolean boolean37 = atomikosProperties22.isEnableLogging();
        atomikosProperties22.setLogBaseName("{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
        org.junit.Assert.assertNull(obj6);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertNull(obj15);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(objEnumeration20);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 50 + "'", int23 == 50);
        org.junit.Assert.assertTrue("'" + long24 + "' != '" + 300000L + "'", long24 == 300000L);
        org.junit.Assert.assertNotNull(properties25);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 50 + "'", int26 == 50);
        org.junit.Assert.assertNull(obj28);
        org.junit.Assert.assertTrue("'" + long33 + "' != '" + 300000L + "'", long33 == 300000L);
        org.junit.Assert.assertTrue("'" + long34 + "' != '" + 10L + "'", long34 == 10L);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
    }

    @Test
    public void test1380() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1380");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setDefaultJtaTimeout((long) (byte) 10);
        atomikosProperties0.setCheckpointInterval((long) (byte) 0);
        atomikosProperties0.setTransactionManagerUniqueName("");
        java.util.Properties properties7 = atomikosProperties0.asProperties();
        java.util.Properties properties8 = atomikosProperties0.asProperties();
        java.util.Collection<java.lang.Object> objCollection9 = properties8.values();
        java.util.Properties properties10 = null;
        java.util.Properties properties11 = new java.util.Properties(properties10);
        java.util.Properties properties12 = new java.util.Properties(properties10);
        java.util.Properties properties13 = null;
        java.util.Properties properties14 = new java.util.Properties(properties13);
        java.lang.Object obj16 = properties12.put((java.lang.Object) properties14, (java.lang.Object) (short) 1);
        boolean boolean17 = properties12.isEmpty();
        java.util.Properties properties18 = null;
        java.util.Properties properties19 = new java.util.Properties(properties18);
        java.util.Properties properties20 = new java.util.Properties(properties18);
        boolean boolean21 = properties12.containsKey((java.lang.Object) properties20);
        java.util.Properties properties22 = new java.util.Properties(properties20);
        java.util.Properties properties23 = new java.util.Properties(properties22);
        java.util.Properties properties24 = null;
        java.util.Properties properties25 = new java.util.Properties(properties24);
        java.util.Properties properties26 = new java.util.Properties(properties24);
        java.util.Properties properties27 = null;
        java.util.Properties properties28 = new java.util.Properties(properties27);
        java.lang.Object obj30 = properties26.put((java.lang.Object) properties28, (java.lang.Object) (short) 1);
        properties28.clear();
        int int32 = properties28.size();
        java.util.Properties properties33 = new java.util.Properties(properties28);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties34 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        int int35 = atomikosProperties34.getMaxActives();
        long long36 = atomikosProperties34.getMaxTimeout();
        java.util.Properties properties37 = atomikosProperties34.asProperties();
        java.util.Properties properties38 = atomikosProperties34.asProperties();
        java.util.Properties properties39 = null;
        java.util.Properties properties40 = new java.util.Properties(properties39);
        java.util.Properties properties41 = new java.util.Properties(properties39);
        java.util.Properties properties42 = null;
        java.util.Properties properties43 = new java.util.Properties(properties42);
        java.lang.Object obj45 = properties41.put((java.lang.Object) properties43, (java.lang.Object) (short) 1);
        java.util.Enumeration<java.lang.Object> objEnumeration46 = properties43.elements();
        java.lang.Object obj47 = properties28.replace((java.lang.Object) atomikosProperties34, (java.lang.Object) properties43);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties49 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties49.setThreadedTwoPhaseCommit(true);
        java.lang.String str52 = atomikosProperties49.getService();
        boolean boolean53 = atomikosProperties49.isSerialJtaTransactions();
        java.lang.Object obj54 = properties43.getOrDefault((java.lang.Object) "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.tm_unique_name=, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}", (java.lang.Object) atomikosProperties49);
        boolean boolean55 = properties22.equals((java.lang.Object) properties43);
        properties8.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties43);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties57 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties57.setDefaultJtaTimeout((long) (byte) 10);
        atomikosProperties57.setCheckpointInterval((long) (byte) 0);
        atomikosProperties57.setTransactionManagerUniqueName("");
        boolean boolean64 = atomikosProperties57.isEnableLogging();
        atomikosProperties57.setLogBaseDir("hi!");
        atomikosProperties57.setForceShutdownOnVmExit(false);
        java.util.Properties properties69 = atomikosProperties57.asProperties();
        java.lang.Object obj70 = properties43.get((java.lang.Object) properties69);
        java.io.InputStream inputStream71 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties69.loadFromXML(inputStream71);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(properties7);
        org.junit.Assert.assertNotNull(properties8);
        org.junit.Assert.assertNotNull(objCollection9);
        org.junit.Assert.assertNull(obj16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNull(obj30);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 0 + "'", int32 == 0);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 50 + "'", int35 == 50);
        org.junit.Assert.assertTrue("'" + long36 + "' != '" + 300000L + "'", long36 == 300000L);
        org.junit.Assert.assertNotNull(properties37);
        org.junit.Assert.assertNotNull(properties38);
        org.junit.Assert.assertNull(obj45);
        org.junit.Assert.assertNotNull(objEnumeration46);
        org.junit.Assert.assertNull(obj47);
        org.junit.Assert.assertNull(str52);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertNotNull(obj54);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64 == true);
        org.junit.Assert.assertNotNull(properties69);
        org.junit.Assert.assertNull(obj70);
    }

    @Test
    public void test1381() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1381");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Properties properties2 = new java.util.Properties(properties0);
        java.util.Properties properties3 = null;
        java.util.Properties properties4 = new java.util.Properties(properties3);
        java.lang.Object obj6 = properties2.put((java.lang.Object) properties4, (java.lang.Object) (short) 1);
        java.util.Properties properties8 = null;
        java.util.Properties properties9 = new java.util.Properties(properties8);
        java.util.Properties properties10 = new java.util.Properties(properties8);
        java.util.Properties properties11 = null;
        java.util.Properties properties12 = new java.util.Properties(properties11);
        java.lang.Object obj14 = properties10.put((java.lang.Object) properties12, (java.lang.Object) (short) 1);
        boolean boolean15 = properties4.remove((java.lang.Object) false, (java.lang.Object) (short) 1);
        java.util.Enumeration<java.lang.Object> objEnumeration16 = properties4.elements();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties17 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties17.setDefaultJtaTimeout((long) (byte) 10);
        atomikosProperties17.setCheckpointInterval((long) (byte) 0);
        atomikosProperties17.setTransactionManagerUniqueName("");
        java.util.Properties properties24 = atomikosProperties17.asProperties();
        boolean boolean25 = atomikosProperties17.isForceShutdownOnVmExit();
        boolean boolean26 = properties4.containsValue((java.lang.Object) atomikosProperties17);
        properties4.clear();
        java.lang.String str29 = properties4.getProperty("");
        org.junit.Assert.assertNull(obj6);
        org.junit.Assert.assertNull(obj14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(objEnumeration16);
        org.junit.Assert.assertNotNull(properties24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNull(str29);
    }

    @Test
    public void test1382() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1382");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Properties properties2 = new java.util.Properties(properties0);
        java.util.Properties properties3 = null;
        java.util.Properties properties4 = new java.util.Properties(properties3);
        java.lang.Object obj6 = properties2.put((java.lang.Object) properties4, (java.lang.Object) (short) 1);
        java.util.Properties properties8 = null;
        java.util.Properties properties9 = new java.util.Properties(properties8);
        java.util.Properties properties10 = new java.util.Properties(properties8);
        java.util.Properties properties11 = null;
        java.util.Properties properties12 = new java.util.Properties(properties11);
        java.lang.Object obj14 = properties10.put((java.lang.Object) properties12, (java.lang.Object) (short) 1);
        boolean boolean15 = properties4.remove((java.lang.Object) false, (java.lang.Object) (short) 1);
        java.util.Set<java.lang.String> strSet16 = properties4.stringPropertyNames();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties17 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties17.setDefaultJtaTimeout((long) (byte) 10);
        atomikosProperties17.setCheckpointInterval((long) (byte) 0);
        atomikosProperties17.setTransactionManagerUniqueName("");
        boolean boolean24 = atomikosProperties17.isEnableLogging();
        atomikosProperties17.setSerialJtaTransactions(false);
        atomikosProperties17.setLogBaseDir("");
        java.util.Properties properties29 = null;
        java.util.Properties properties30 = new java.util.Properties(properties29);
        java.util.Properties properties31 = new java.util.Properties(properties29);
        java.util.Properties properties32 = null;
        java.util.Properties properties33 = new java.util.Properties(properties32);
        java.lang.Object obj35 = properties31.put((java.lang.Object) properties33, (java.lang.Object) (short) 1);
        java.util.Properties properties36 = new java.util.Properties(properties33);
        boolean boolean37 = properties4.remove((java.lang.Object) "", (java.lang.Object) properties36);
        java.lang.Class<?> wildcardClass38 = properties36.getClass();
        org.junit.Assert.assertNull(obj6);
        org.junit.Assert.assertNull(obj14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(strSet16);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNull(obj35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(wildcardClass38);
    }

    @Test
    public void test1383() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1383");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setDefaultJtaTimeout((long) (byte) 10);
        long long3 = atomikosProperties0.getDefaultJtaTimeout();
        atomikosProperties0.setTransactionManagerUniqueName("hi!");
        atomikosProperties0.setTransactionManagerUniqueName("{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=0, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.tm_unique_name=, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
        atomikosProperties0.setMaxActives(1);
        int int10 = atomikosProperties0.getMaxActives();
        boolean boolean11 = atomikosProperties0.isForceShutdownOnVmExit();
        java.util.Properties properties12 = atomikosProperties0.asProperties();
        java.io.Reader reader13 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties12.load(reader13);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + long3 + "' != '" + 10L + "'", long3 == 10L);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 1 + "'", int10 == 1);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(properties12);
    }

    @Test
    public void test1384() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1384");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setDefaultJtaTimeout((long) (byte) 10);
        atomikosProperties0.setCheckpointInterval((long) (byte) 0);
        atomikosProperties0.setTransactionManagerUniqueName("");
        java.util.Properties properties7 = atomikosProperties0.asProperties();
        java.lang.String str8 = atomikosProperties0.getLogBaseName();
        atomikosProperties0.setCheckpointInterval(100L);
        java.lang.String str11 = atomikosProperties0.getTransactionManagerUniqueName();
        atomikosProperties0.setLogBaseName("{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.tm_unique_name=, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
        atomikosProperties0.setThreadedTwoPhaseCommit(true);
        atomikosProperties0.setEnableLogging(false);
        atomikosProperties0.setLogBaseDir("{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.tm_unique_name=, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
        java.util.Properties properties20 = atomikosProperties0.asProperties();
        properties20.clear();
        org.junit.Assert.assertNotNull(properties7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "tmlog" + "'", str8, "tmlog");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertNotNull(properties20);
    }

    @Test
    public void test1385() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1385");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Properties properties2 = new java.util.Properties(properties0);
        java.util.Properties properties3 = null;
        java.util.Properties properties4 = new java.util.Properties(properties3);
        java.lang.Object obj6 = properties2.put((java.lang.Object) properties4, (java.lang.Object) (short) 1);
        boolean boolean7 = properties2.isEmpty();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties8 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties8.setDefaultJtaTimeout((long) (byte) 10);
        atomikosProperties8.setCheckpointInterval((long) (byte) 0);
        atomikosProperties8.setTransactionManagerUniqueName("");
        java.util.Properties properties15 = atomikosProperties8.asProperties();
        java.lang.Object obj16 = properties2.remove((java.lang.Object) properties15);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties17 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties17.setDefaultJtaTimeout((long) (byte) 10);
        atomikosProperties17.setCheckpointInterval((long) (byte) 0);
        atomikosProperties17.setTransactionManagerUniqueName("");
        java.lang.Object obj24 = properties15.remove((java.lang.Object) atomikosProperties17);
        java.util.Properties properties25 = null;
        java.util.Properties properties26 = new java.util.Properties(properties25);
        java.util.Properties properties27 = new java.util.Properties(properties25);
        java.util.Properties properties28 = null;
        java.util.Properties properties29 = new java.util.Properties(properties28);
        java.lang.Object obj31 = properties27.put((java.lang.Object) properties29, (java.lang.Object) (short) 1);
        java.util.Enumeration<java.lang.Object> objEnumeration32 = properties29.elements();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet33 = properties29.entrySet();
        java.util.Set<java.lang.Object> objSet34 = properties29.keySet();
        java.util.Properties properties35 = null;
        java.util.Properties properties36 = new java.util.Properties(properties35);
        java.util.Properties properties37 = new java.util.Properties(properties35);
        java.util.Properties properties38 = null;
        java.util.Properties properties39 = new java.util.Properties(properties38);
        java.lang.Object obj41 = properties37.put((java.lang.Object) properties39, (java.lang.Object) (short) 1);
        properties39.clear();
        int int43 = properties39.size();
        java.util.Properties properties44 = new java.util.Properties(properties39);
        java.util.Properties properties45 = null;
        java.util.Properties properties46 = new java.util.Properties(properties45);
        java.util.Properties properties47 = new java.util.Properties(properties45);
        java.util.Properties properties48 = null;
        java.util.Properties properties49 = new java.util.Properties(properties48);
        java.lang.Object obj51 = properties47.put((java.lang.Object) properties49, (java.lang.Object) (short) 1);
        properties49.clear();
        java.lang.String str54 = properties49.getProperty("");
        java.util.Properties properties55 = null;
        java.util.Properties properties56 = new java.util.Properties(properties55);
        java.util.Properties properties57 = new java.util.Properties(properties55);
        java.util.Properties properties58 = null;
        java.util.Properties properties59 = new java.util.Properties(properties58);
        java.lang.Object obj61 = properties57.put((java.lang.Object) properties59, (java.lang.Object) (short) 1);
        properties49.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties57);
        java.lang.Object obj63 = properties29.put((java.lang.Object) properties39, (java.lang.Object) properties57);
        java.util.Enumeration<java.lang.Object> objEnumeration64 = properties39.elements();
        java.lang.Object obj66 = properties15.put((java.lang.Object) properties39, (java.lang.Object) "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=0, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.tm_unique_name=, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
        java.lang.String str68 = properties15.getProperty("{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
        org.junit.Assert.assertNull(obj6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(properties15);
        org.junit.Assert.assertNull(obj16);
        org.junit.Assert.assertNull(obj24);
        org.junit.Assert.assertNull(obj31);
        org.junit.Assert.assertNotNull(objEnumeration32);
        org.junit.Assert.assertNotNull(objEntrySet33);
        org.junit.Assert.assertNotNull(objSet34);
        org.junit.Assert.assertNull(obj41);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 0 + "'", int43 == 0);
        org.junit.Assert.assertNull(obj51);
        org.junit.Assert.assertNull(str54);
        org.junit.Assert.assertNull(obj61);
        org.junit.Assert.assertNull(obj63);
        org.junit.Assert.assertNotNull(objEnumeration64);
        org.junit.Assert.assertNull(obj66);
        org.junit.Assert.assertNull(str68);
    }

    @Test
    public void test1386() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1386");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Properties properties2 = new java.util.Properties(properties0);
        java.util.Properties properties3 = null;
        java.util.Properties properties4 = new java.util.Properties(properties3);
        java.lang.Object obj6 = properties2.put((java.lang.Object) properties4, (java.lang.Object) (short) 1);
        java.util.Properties properties8 = null;
        java.util.Properties properties9 = new java.util.Properties(properties8);
        java.util.Properties properties10 = new java.util.Properties(properties8);
        java.util.Properties properties11 = null;
        java.util.Properties properties12 = new java.util.Properties(properties11);
        java.lang.Object obj14 = properties10.put((java.lang.Object) properties12, (java.lang.Object) (short) 1);
        boolean boolean15 = properties4.remove((java.lang.Object) false, (java.lang.Object) (short) 1);
        java.util.Set<java.lang.String> strSet16 = properties4.stringPropertyNames();
        java.lang.Object obj17 = properties4.clone();
        java.util.Properties properties18 = new java.util.Properties(properties4);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties19 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties19.setDefaultJtaTimeout((long) (byte) 10);
        atomikosProperties19.setCheckpointInterval((long) (byte) 0);
        long long24 = atomikosProperties19.getMaxTimeout();
        java.util.Properties properties25 = null;
        java.util.Properties properties26 = new java.util.Properties(properties25);
        java.util.Properties properties27 = new java.util.Properties(properties25);
        java.util.Properties properties28 = null;
        java.util.Properties properties29 = new java.util.Properties(properties28);
        java.lang.Object obj31 = properties27.put((java.lang.Object) properties29, (java.lang.Object) (short) 1);
        java.util.Enumeration<java.lang.Object> objEnumeration32 = properties29.elements();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet33 = properties29.entrySet();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties34 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties34.setDefaultJtaTimeout((long) (byte) 10);
        long long37 = atomikosProperties34.getDefaultJtaTimeout();
        atomikosProperties34.setTransactionManagerUniqueName("");
        boolean boolean40 = atomikosProperties34.isEnableLogging();
        boolean boolean41 = properties29.containsKey((java.lang.Object) boolean40);
        java.util.Properties properties42 = null;
        java.util.Properties properties43 = new java.util.Properties(properties42);
        java.util.Properties properties44 = new java.util.Properties(properties42);
        java.util.Properties properties45 = null;
        java.util.Properties properties46 = new java.util.Properties(properties45);
        java.lang.Object obj48 = properties44.put((java.lang.Object) properties46, (java.lang.Object) (short) 1);
        java.util.Enumeration<java.lang.Object> objEnumeration49 = properties46.elements();
        boolean boolean50 = properties29.containsKey((java.lang.Object) objEnumeration49);
        java.lang.Object obj51 = properties18.put((java.lang.Object) long24, (java.lang.Object) properties29);
        java.io.OutputStream outputStream52 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties18.storeToXML(outputStream52, "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=0, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.tm_unique_name=, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(obj6);
        org.junit.Assert.assertNull(obj14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(strSet16);
        org.junit.Assert.assertNotNull(obj17);
        org.junit.Assert.assertEquals(obj17.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj17), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj17), "{}");
        org.junit.Assert.assertTrue("'" + long24 + "' != '" + 300000L + "'", long24 == 300000L);
        org.junit.Assert.assertNull(obj31);
        org.junit.Assert.assertNotNull(objEnumeration32);
        org.junit.Assert.assertNotNull(objEntrySet33);
        org.junit.Assert.assertTrue("'" + long37 + "' != '" + 10L + "'", long37 == 10L);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNull(obj48);
        org.junit.Assert.assertNotNull(objEnumeration49);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertNull(obj51);
    }

    @Test
    public void test1387() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1387");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Properties properties2 = new java.util.Properties(properties0);
        java.util.Properties properties3 = null;
        java.util.Properties properties4 = new java.util.Properties(properties3);
        java.lang.Object obj6 = properties2.put((java.lang.Object) properties4, (java.lang.Object) (short) 1);
        properties4.clear();
        int int8 = properties4.size();
        java.util.Properties properties9 = null;
        java.util.Properties properties10 = new java.util.Properties(properties9);
        java.util.Properties properties11 = new java.util.Properties(properties9);
        java.util.Properties properties12 = null;
        java.util.Properties properties13 = new java.util.Properties(properties12);
        java.lang.Object obj15 = properties11.put((java.lang.Object) properties13, (java.lang.Object) (short) 1);
        java.util.Properties properties16 = new java.util.Properties(properties13);
        java.util.Properties properties17 = new java.util.Properties(properties13);
        boolean boolean19 = properties4.remove((java.lang.Object) properties13, (java.lang.Object) 10.0f);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties20 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties20.setDefaultJtaTimeout((long) (byte) 10);
        atomikosProperties20.setCheckpointInterval((long) (byte) 0);
        atomikosProperties20.setTransactionManagerUniqueName("");
        java.util.Properties properties27 = atomikosProperties20.asProperties();
        java.util.Properties properties28 = atomikosProperties20.asProperties();
        java.lang.String str29 = atomikosProperties20.getService();
        java.lang.Object obj30 = properties4.remove((java.lang.Object) atomikosProperties20);
        java.lang.String str33 = properties4.getProperty("{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.tm_unique_name=, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}", "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=52, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.tm_unique_name=, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
        org.junit.Assert.assertNull(obj6);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertNull(obj15);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(properties27);
        org.junit.Assert.assertNotNull(properties28);
        org.junit.Assert.assertNull(str29);
        org.junit.Assert.assertNull(obj30);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=52, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.tm_unique_name=, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}" + "'", str33, "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=52, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.tm_unique_name=, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
    }

    @Test
    public void test1388() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1388");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setThreadedTwoPhaseCommit(true);
        atomikosProperties0.setMaxActives((int) (byte) 0);
        java.lang.String str5 = atomikosProperties0.getLogBaseDir();
        atomikosProperties0.setThreadedTwoPhaseCommit(true);
        java.lang.String str8 = atomikosProperties0.getTransactionManagerUniqueName();
        atomikosProperties0.setMaxActives((int) ' ');
        atomikosProperties0.setForceShutdownOnVmExit(true);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNull(str8);
    }

    @Test
    public void test1389() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1389");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setDefaultJtaTimeout((long) (byte) 10);
        atomikosProperties0.setCheckpointInterval((long) (byte) 0);
        atomikosProperties0.setTransactionManagerUniqueName("");
        boolean boolean7 = atomikosProperties0.isEnableLogging();
        java.lang.String str8 = atomikosProperties0.getLogBaseName();
        atomikosProperties0.setThreadedTwoPhaseCommit(false);
        atomikosProperties0.setSerialJtaTransactions(true);
        java.lang.String str13 = atomikosProperties0.getTransactionManagerUniqueName();
        long long14 = atomikosProperties0.getMaxTimeout();
        boolean boolean15 = atomikosProperties0.isSerialJtaTransactions();
        atomikosProperties0.setMaxActives(100);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "tmlog" + "'", str8, "tmlog");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "" + "'", str13, "");
        org.junit.Assert.assertTrue("'" + long14 + "' != '" + 300000L + "'", long14 == 300000L);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
    }

    @Test
    public void test1390() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1390");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Properties properties2 = new java.util.Properties(properties0);
        java.util.Enumeration<java.lang.Object> objEnumeration3 = properties2.elements();
        java.io.PrintWriter printWriter4 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties2.list(printWriter4);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(objEnumeration3);
    }

    @Test
    public void test1391() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1391");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Properties properties2 = new java.util.Properties(properties0);
        java.util.Properties properties3 = null;
        java.util.Properties properties4 = new java.util.Properties(properties3);
        java.lang.Object obj6 = properties2.put((java.lang.Object) properties4, (java.lang.Object) (short) 1);
        java.util.Properties properties8 = null;
        java.util.Properties properties9 = new java.util.Properties(properties8);
        java.util.Properties properties10 = new java.util.Properties(properties8);
        java.util.Properties properties11 = null;
        java.util.Properties properties12 = new java.util.Properties(properties11);
        java.lang.Object obj14 = properties10.put((java.lang.Object) properties12, (java.lang.Object) (short) 1);
        boolean boolean15 = properties4.remove((java.lang.Object) false, (java.lang.Object) (short) 1);
        java.util.Set<java.lang.String> strSet16 = properties4.stringPropertyNames();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties17 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties17.setDefaultJtaTimeout((long) (byte) 10);
        long long20 = atomikosProperties17.getDefaultJtaTimeout();
        java.lang.Object obj21 = properties4.get((java.lang.Object) atomikosProperties17);
        java.util.Enumeration<java.lang.Object> objEnumeration22 = properties4.elements();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties23 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties23.setThreadedTwoPhaseCommit(true);
        atomikosProperties23.setMaxActives((int) '#');
        atomikosProperties23.setEnableLogging(true);
        int int30 = atomikosProperties23.getMaxActives();
        boolean boolean31 = properties4.containsValue((java.lang.Object) atomikosProperties23);
        java.util.Properties properties32 = atomikosProperties23.asProperties();
        atomikosProperties23.setThreadedTwoPhaseCommit(false);
        atomikosProperties23.setMaxTimeout(10L);
        java.lang.String str37 = atomikosProperties23.getService();
        org.junit.Assert.assertNull(obj6);
        org.junit.Assert.assertNull(obj14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(strSet16);
        org.junit.Assert.assertTrue("'" + long20 + "' != '" + 10L + "'", long20 == 10L);
        org.junit.Assert.assertNull(obj21);
        org.junit.Assert.assertNotNull(objEnumeration22);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 35 + "'", int30 == 35);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(properties32);
        org.junit.Assert.assertNull(str37);
    }

    @Test
    public void test1392() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1392");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setDefaultJtaTimeout((long) (byte) 10);
        atomikosProperties0.setCheckpointInterval((long) (byte) 0);
        atomikosProperties0.setTransactionManagerUniqueName("");
        java.util.Properties properties7 = atomikosProperties0.asProperties();
        java.lang.String str8 = atomikosProperties0.getTransactionManagerUniqueName();
        atomikosProperties0.setDefaultJtaTimeout((long) (-1));
        java.lang.String str11 = atomikosProperties0.getService();
        boolean boolean12 = atomikosProperties0.isEnableLogging();
        long long13 = atomikosProperties0.getDefaultJtaTimeout();
        atomikosProperties0.setTransactionManagerUniqueName("{{}=tmlog}");
        org.junit.Assert.assertNotNull(properties7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "" + "'", str8, "");
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + long13 + "' != '" + (-1L) + "'", long13 == (-1L));
    }

    @Test
    public void test1393() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1393");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Properties properties2 = new java.util.Properties(properties0);
        java.util.Properties properties3 = null;
        java.util.Properties properties4 = new java.util.Properties(properties3);
        java.lang.Object obj6 = properties2.put((java.lang.Object) properties4, (java.lang.Object) (short) 1);
        java.util.Enumeration<java.lang.Object> objEnumeration7 = properties4.elements();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet8 = properties4.entrySet();
        java.util.Set<java.lang.Object> objSet9 = properties4.keySet();
        java.util.Properties properties10 = null;
        java.util.Properties properties11 = new java.util.Properties(properties10);
        java.util.Properties properties12 = new java.util.Properties(properties10);
        java.util.Properties properties13 = null;
        java.util.Properties properties14 = new java.util.Properties(properties13);
        java.lang.Object obj16 = properties12.put((java.lang.Object) properties14, (java.lang.Object) (short) 1);
        properties14.clear();
        int int18 = properties14.size();
        java.util.Properties properties19 = new java.util.Properties(properties14);
        java.util.Properties properties20 = null;
        java.util.Properties properties21 = new java.util.Properties(properties20);
        java.util.Properties properties22 = new java.util.Properties(properties20);
        java.util.Properties properties23 = null;
        java.util.Properties properties24 = new java.util.Properties(properties23);
        java.lang.Object obj26 = properties22.put((java.lang.Object) properties24, (java.lang.Object) (short) 1);
        properties24.clear();
        java.lang.String str29 = properties24.getProperty("");
        java.util.Properties properties30 = null;
        java.util.Properties properties31 = new java.util.Properties(properties30);
        java.util.Properties properties32 = new java.util.Properties(properties30);
        java.util.Properties properties33 = null;
        java.util.Properties properties34 = new java.util.Properties(properties33);
        java.lang.Object obj36 = properties32.put((java.lang.Object) properties34, (java.lang.Object) (short) 1);
        properties24.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties32);
        java.lang.Object obj38 = properties4.put((java.lang.Object) properties14, (java.lang.Object) properties32);
        java.util.Properties properties39 = null;
        java.util.Properties properties40 = new java.util.Properties(properties39);
        java.util.Properties properties41 = new java.util.Properties(properties39);
        java.util.Properties properties42 = null;
        java.util.Properties properties43 = new java.util.Properties(properties42);
        java.lang.Object obj45 = properties41.put((java.lang.Object) properties43, (java.lang.Object) (short) 1);
        java.util.Properties properties47 = null;
        java.util.Properties properties48 = new java.util.Properties(properties47);
        java.util.Properties properties49 = new java.util.Properties(properties47);
        java.util.Properties properties50 = null;
        java.util.Properties properties51 = new java.util.Properties(properties50);
        java.lang.Object obj53 = properties49.put((java.lang.Object) properties51, (java.lang.Object) (short) 1);
        boolean boolean54 = properties43.remove((java.lang.Object) false, (java.lang.Object) (short) 1);
        java.util.Set<java.lang.String> strSet55 = properties43.stringPropertyNames();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties56 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties56.setDefaultJtaTimeout((long) (byte) 10);
        atomikosProperties56.setCheckpointInterval((long) (byte) 0);
        atomikosProperties56.setTransactionManagerUniqueName("");
        boolean boolean63 = atomikosProperties56.isEnableLogging();
        atomikosProperties56.setSerialJtaTransactions(false);
        atomikosProperties56.setLogBaseDir("");
        java.util.Properties properties68 = null;
        java.util.Properties properties69 = new java.util.Properties(properties68);
        java.util.Properties properties70 = new java.util.Properties(properties68);
        java.util.Properties properties71 = null;
        java.util.Properties properties72 = new java.util.Properties(properties71);
        java.lang.Object obj74 = properties70.put((java.lang.Object) properties72, (java.lang.Object) (short) 1);
        java.util.Properties properties75 = new java.util.Properties(properties72);
        boolean boolean76 = properties43.remove((java.lang.Object) "", (java.lang.Object) properties75);
        java.util.Properties properties77 = null;
        java.util.Properties properties78 = new java.util.Properties(properties77);
        java.util.Properties properties79 = new java.util.Properties(properties77);
        java.lang.Object obj80 = properties79.clone();
        boolean boolean81 = properties43.contains(obj80);
        java.util.Collection<java.lang.Object> objCollection82 = properties43.values();
        java.lang.String str84 = properties43.getProperty("{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=0, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.tm_unique_name=, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
        java.lang.Object obj85 = properties43.clone();
        boolean boolean86 = properties14.containsValue((java.lang.Object) properties43);
        java.util.Set<java.lang.Object> objSet87 = properties43.keySet();
        java.util.Properties properties88 = new java.util.Properties(properties43);
        java.io.OutputStream outputStream89 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties43.storeToXML(outputStream89, "");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(obj6);
        org.junit.Assert.assertNotNull(objEnumeration7);
        org.junit.Assert.assertNotNull(objEntrySet8);
        org.junit.Assert.assertNotNull(objSet9);
        org.junit.Assert.assertNull(obj16);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 0 + "'", int18 == 0);
        org.junit.Assert.assertNull(obj26);
        org.junit.Assert.assertNull(str29);
        org.junit.Assert.assertNull(obj36);
        org.junit.Assert.assertNull(obj38);
        org.junit.Assert.assertNull(obj45);
        org.junit.Assert.assertNull(obj53);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertNotNull(strSet55);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertNull(obj74);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
        org.junit.Assert.assertNotNull(obj80);
        org.junit.Assert.assertEquals(obj80.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj80), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj80), "{}");
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + false + "'", boolean81 == false);
        org.junit.Assert.assertNotNull(objCollection82);
        org.junit.Assert.assertNull(str84);
        org.junit.Assert.assertNotNull(obj85);
        org.junit.Assert.assertEquals(obj85.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj85), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj85), "{}");
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + false + "'", boolean86 == false);
        org.junit.Assert.assertNotNull(objSet87);
    }

    @Test
    public void test1394() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1394");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Properties properties2 = new java.util.Properties(properties0);
        java.util.Properties properties3 = null;
        java.util.Properties properties4 = new java.util.Properties(properties3);
        java.lang.Object obj6 = properties2.put((java.lang.Object) properties4, (java.lang.Object) (short) 1);
        properties4.clear();
        int int8 = properties4.size();
        java.lang.Object obj11 = properties4.setProperty("hi!", "hi!");
        java.lang.Object obj14 = properties4.setProperty("tmlog", "tmlog");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties15 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties15.setThreadedTwoPhaseCommit(true);
        atomikosProperties15.setMaxActives((int) '#');
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties20 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties20.setDefaultJtaTimeout((long) (byte) 10);
        atomikosProperties20.setCheckpointInterval((long) (byte) 0);
        atomikosProperties20.setTransactionManagerUniqueName("");
        java.util.Properties properties27 = atomikosProperties20.asProperties();
        java.lang.String str28 = atomikosProperties20.getLogBaseName();
        atomikosProperties20.setCheckpointInterval(100L);
        atomikosProperties20.setLogBaseName("");
        atomikosProperties20.setCheckpointInterval((long) (byte) 1);
        java.lang.Object obj35 = properties4.getOrDefault((java.lang.Object) atomikosProperties15, (java.lang.Object) (byte) 1);
        atomikosProperties15.setService("tmlog");
        atomikosProperties15.setMaxActives((int) '4');
        java.lang.String str40 = atomikosProperties15.getLogBaseDir();
        atomikosProperties15.setForceShutdownOnVmExit(true);
        java.lang.Class<?> wildcardClass43 = atomikosProperties15.getClass();
        org.junit.Assert.assertNull(obj6);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertNull(obj11);
        org.junit.Assert.assertNull(obj14);
        org.junit.Assert.assertNotNull(properties27);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "tmlog" + "'", str28, "tmlog");
        org.junit.Assert.assertEquals("'" + obj35 + "' != '" + (byte) 1 + "'", obj35, (byte) 1);
        org.junit.Assert.assertNull(str40);
        org.junit.Assert.assertNotNull(wildcardClass43);
    }

    @Test
    public void test1395() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1395");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setDefaultJtaTimeout((long) (byte) 10);
        atomikosProperties0.setCheckpointInterval((long) (byte) 0);
        atomikosProperties0.setTransactionManagerUniqueName("");
        boolean boolean7 = atomikosProperties0.isEnableLogging();
        java.util.Properties properties8 = atomikosProperties0.asProperties();
        java.util.Enumeration<java.lang.Object> objEnumeration9 = properties8.keys();
        java.util.Properties properties10 = null;
        java.util.Properties properties11 = new java.util.Properties(properties10);
        java.util.Properties properties12 = new java.util.Properties(properties10);
        java.util.Properties properties13 = null;
        java.util.Properties properties14 = new java.util.Properties(properties13);
        java.lang.Object obj16 = properties12.put((java.lang.Object) properties14, (java.lang.Object) (short) 1);
        boolean boolean17 = properties12.isEmpty();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties18 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties18.setDefaultJtaTimeout((long) (byte) 10);
        atomikosProperties18.setCheckpointInterval((long) (byte) 0);
        atomikosProperties18.setTransactionManagerUniqueName("");
        java.util.Properties properties25 = atomikosProperties18.asProperties();
        java.lang.Object obj26 = properties12.remove((java.lang.Object) properties25);
        boolean boolean27 = properties8.equals((java.lang.Object) properties25);
        java.util.Enumeration<java.lang.Object> objEnumeration28 = properties8.keys();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties29 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties29.setDefaultJtaTimeout((long) (byte) 10);
        atomikosProperties29.setSerialJtaTransactions(false);
        atomikosProperties29.setService("{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.tm_unique_name=, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
        atomikosProperties29.setService("tmlog");
        java.lang.String str38 = atomikosProperties29.getLogBaseName();
        int int39 = atomikosProperties29.getMaxActives();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties40 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties40.setEnableLogging(false);
        atomikosProperties40.setThreadedTwoPhaseCommit(true);
        atomikosProperties40.setTransactionManagerUniqueName("tmlog");
        java.lang.Object obj47 = properties8.put((java.lang.Object) atomikosProperties29, (java.lang.Object) atomikosProperties40);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(properties8);
        org.junit.Assert.assertNotNull(objEnumeration9);
        org.junit.Assert.assertNull(obj16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(properties25);
        org.junit.Assert.assertNull(obj26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNotNull(objEnumeration28);
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "tmlog" + "'", str38, "tmlog");
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 50 + "'", int39 == 50);
        org.junit.Assert.assertNull(obj47);
    }

    @Test
    public void test1396() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1396");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Properties properties2 = new java.util.Properties(properties0);
        java.util.Properties properties3 = null;
        java.util.Properties properties4 = new java.util.Properties(properties3);
        java.lang.Object obj6 = properties2.put((java.lang.Object) properties4, (java.lang.Object) (short) 1);
        properties4.clear();
        int int8 = properties4.size();
        java.util.Properties properties9 = null;
        java.util.Properties properties10 = new java.util.Properties(properties9);
        java.util.Properties properties11 = new java.util.Properties(properties9);
        java.util.Properties properties12 = null;
        java.util.Properties properties13 = new java.util.Properties(properties12);
        java.lang.Object obj15 = properties11.put((java.lang.Object) properties13, (java.lang.Object) (short) 1);
        java.util.Properties properties16 = new java.util.Properties(properties13);
        java.util.Properties properties17 = new java.util.Properties(properties13);
        boolean boolean19 = properties4.remove((java.lang.Object) properties13, (java.lang.Object) 10.0f);
        java.util.Enumeration<java.lang.Object> objEnumeration20 = properties13.elements();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties21 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties21.setDefaultJtaTimeout((long) (byte) 10);
        atomikosProperties21.setCheckpointInterval((long) (byte) 0);
        long long26 = atomikosProperties21.getMaxTimeout();
        atomikosProperties21.setSerialJtaTransactions(true);
        java.util.Properties properties29 = new java.util.Properties();
        java.util.Enumeration<?> wildcardEnumeration30 = properties29.propertyNames();
        java.lang.Object obj31 = properties13.replace((java.lang.Object) atomikosProperties21, (java.lang.Object) properties29);
        java.util.Collection<java.lang.Object> objCollection32 = properties13.values();
        org.junit.Assert.assertNull(obj6);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertNull(obj15);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(objEnumeration20);
        org.junit.Assert.assertTrue("'" + long26 + "' != '" + 300000L + "'", long26 == 300000L);
        org.junit.Assert.assertNotNull(wildcardEnumeration30);
        org.junit.Assert.assertNull(obj31);
        org.junit.Assert.assertNotNull(objCollection32);
    }

    @Test
    public void test1397() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1397");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Properties properties2 = new java.util.Properties(properties0);
        java.util.Properties properties3 = null;
        java.util.Properties properties4 = new java.util.Properties(properties3);
        java.lang.Object obj6 = properties2.put((java.lang.Object) properties4, (java.lang.Object) (short) 1);
        java.util.Properties properties8 = null;
        java.util.Properties properties9 = new java.util.Properties(properties8);
        java.util.Properties properties10 = new java.util.Properties(properties8);
        java.util.Properties properties11 = null;
        java.util.Properties properties12 = new java.util.Properties(properties11);
        java.lang.Object obj14 = properties10.put((java.lang.Object) properties12, (java.lang.Object) (short) 1);
        boolean boolean15 = properties4.remove((java.lang.Object) false, (java.lang.Object) (short) 1);
        java.util.Set<java.lang.String> strSet16 = properties4.stringPropertyNames();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties17 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties17.setDefaultJtaTimeout((long) (byte) 10);
        atomikosProperties17.setCheckpointInterval((long) (byte) 0);
        atomikosProperties17.setTransactionManagerUniqueName("");
        boolean boolean24 = atomikosProperties17.isEnableLogging();
        atomikosProperties17.setSerialJtaTransactions(false);
        atomikosProperties17.setLogBaseDir("");
        java.util.Properties properties29 = null;
        java.util.Properties properties30 = new java.util.Properties(properties29);
        java.util.Properties properties31 = new java.util.Properties(properties29);
        java.util.Properties properties32 = null;
        java.util.Properties properties33 = new java.util.Properties(properties32);
        java.lang.Object obj35 = properties31.put((java.lang.Object) properties33, (java.lang.Object) (short) 1);
        java.util.Properties properties36 = new java.util.Properties(properties33);
        boolean boolean37 = properties4.remove((java.lang.Object) "", (java.lang.Object) properties36);
        java.util.Properties properties38 = null;
        java.util.Properties properties39 = new java.util.Properties(properties38);
        java.util.Properties properties40 = new java.util.Properties(properties38);
        java.lang.Object obj41 = properties40.clone();
        boolean boolean42 = properties4.contains(obj41);
        java.util.Collection<java.lang.Object> objCollection43 = properties4.values();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties44 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties44.setDefaultJtaTimeout((long) (byte) 10);
        atomikosProperties44.setCheckpointInterval((long) (byte) 0);
        atomikosProperties44.setTransactionManagerUniqueName("");
        java.util.Properties properties51 = atomikosProperties44.asProperties();
        java.lang.String str52 = atomikosProperties44.getLogBaseName();
        atomikosProperties44.setCheckpointInterval(100L);
        java.lang.String str55 = atomikosProperties44.getTransactionManagerUniqueName();
        atomikosProperties44.setLogBaseName("{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.tm_unique_name=, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
        atomikosProperties44.setThreadedTwoPhaseCommit(true);
        atomikosProperties44.setEnableLogging(false);
        java.lang.Object obj62 = properties4.get((java.lang.Object) atomikosProperties44);
        java.util.Properties properties63 = atomikosProperties44.asProperties();
        java.util.Properties properties64 = atomikosProperties44.asProperties();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties65 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties65.setDefaultJtaTimeout((long) (byte) 10);
        long long68 = atomikosProperties65.getDefaultJtaTimeout();
        atomikosProperties65.setTransactionManagerUniqueName("hi!");
        atomikosProperties65.setLogBaseName("tmlog");
        boolean boolean73 = atomikosProperties65.isSerialJtaTransactions();
        java.util.Properties properties74 = atomikosProperties65.asProperties();
        long long75 = atomikosProperties65.getMaxTimeout();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties76 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties76.setThreadedTwoPhaseCommit(true);
        atomikosProperties76.setMaxActives((int) (byte) 0);
        atomikosProperties76.setEnableLogging(true);
        atomikosProperties76.setMaxActives((int) (byte) 1);
        atomikosProperties76.setTransactionManagerUniqueName("hi!");
        java.lang.String str87 = atomikosProperties76.getLogBaseName();
        atomikosProperties76.setSerialJtaTransactions(false);
        java.util.Properties properties90 = atomikosProperties76.asProperties();
        java.lang.Object obj91 = properties64.replace((java.lang.Object) atomikosProperties65, (java.lang.Object) atomikosProperties76);
        atomikosProperties76.setLogBaseDir("{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=0, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog, {}={}}");
        org.junit.Assert.assertNull(obj6);
        org.junit.Assert.assertNull(obj14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(strSet16);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNull(obj35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(obj41);
        org.junit.Assert.assertEquals(obj41.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj41), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj41), "{}");
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(objCollection43);
        org.junit.Assert.assertNotNull(properties51);
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "tmlog" + "'", str52, "tmlog");
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "" + "'", str55, "");
        org.junit.Assert.assertNull(obj62);
        org.junit.Assert.assertNotNull(properties63);
        org.junit.Assert.assertNotNull(properties64);
        org.junit.Assert.assertTrue("'" + long68 + "' != '" + 10L + "'", long68 == 10L);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + true + "'", boolean73 == true);
        org.junit.Assert.assertNotNull(properties74);
        org.junit.Assert.assertTrue("'" + long75 + "' != '" + 300000L + "'", long75 == 300000L);
        org.junit.Assert.assertEquals("'" + str87 + "' != '" + "tmlog" + "'", str87, "tmlog");
        org.junit.Assert.assertNotNull(properties90);
        org.junit.Assert.assertNull(obj91);
    }

    @Test
    public void test1398() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1398");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Properties properties2 = new java.util.Properties(properties0);
        java.util.Properties properties3 = null;
        java.util.Properties properties4 = new java.util.Properties(properties3);
        java.lang.Object obj6 = properties2.put((java.lang.Object) properties4, (java.lang.Object) (short) 1);
        java.util.Properties properties8 = null;
        java.util.Properties properties9 = new java.util.Properties(properties8);
        java.util.Properties properties10 = new java.util.Properties(properties8);
        java.util.Properties properties11 = null;
        java.util.Properties properties12 = new java.util.Properties(properties11);
        java.lang.Object obj14 = properties10.put((java.lang.Object) properties12, (java.lang.Object) (short) 1);
        boolean boolean15 = properties4.remove((java.lang.Object) false, (java.lang.Object) (short) 1);
        java.util.Set<java.lang.String> strSet16 = properties4.stringPropertyNames();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties17 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties17.setDefaultJtaTimeout((long) (byte) 10);
        long long20 = atomikosProperties17.getDefaultJtaTimeout();
        java.lang.Object obj21 = properties4.get((java.lang.Object) atomikosProperties17);
        java.util.Properties properties22 = null;
        java.util.Properties properties23 = new java.util.Properties(properties22);
        java.util.Properties properties24 = new java.util.Properties(properties22);
        java.util.Properties properties25 = null;
        java.util.Properties properties26 = new java.util.Properties(properties25);
        java.lang.Object obj28 = properties24.put((java.lang.Object) properties26, (java.lang.Object) (short) 1);
        java.util.Properties properties30 = null;
        java.util.Properties properties31 = new java.util.Properties(properties30);
        java.util.Properties properties32 = new java.util.Properties(properties30);
        java.util.Properties properties33 = null;
        java.util.Properties properties34 = new java.util.Properties(properties33);
        java.lang.Object obj36 = properties32.put((java.lang.Object) properties34, (java.lang.Object) (short) 1);
        boolean boolean37 = properties26.remove((java.lang.Object) false, (java.lang.Object) (short) 1);
        java.lang.Object obj39 = properties26.remove((java.lang.Object) '#');
        java.util.Set<java.lang.Object> objSet40 = properties26.keySet();
        boolean boolean41 = properties4.containsKey((java.lang.Object) properties26);
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet42 = properties4.entrySet();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties43 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties43.setThreadedTwoPhaseCommit(true);
        boolean boolean46 = atomikosProperties43.isEnableLogging();
        atomikosProperties43.setTransactionManagerUniqueName("{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=0, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog, {}={}}");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties49 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties49.setDefaultJtaTimeout((long) (byte) 10);
        atomikosProperties49.setCheckpointInterval((long) (byte) 0);
        atomikosProperties49.setTransactionManagerUniqueName("");
        boolean boolean56 = atomikosProperties49.isEnableLogging();
        java.lang.Class<?> wildcardClass57 = atomikosProperties49.getClass();
        java.lang.Object obj58 = properties4.put((java.lang.Object) "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=0, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog, {}={}}", (java.lang.Object) atomikosProperties49);
        java.util.Properties properties59 = new java.util.Properties(properties4);
        java.io.Reader reader60 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties59.load(reader60);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(obj6);
        org.junit.Assert.assertNull(obj14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(strSet16);
        org.junit.Assert.assertTrue("'" + long20 + "' != '" + 10L + "'", long20 == 10L);
        org.junit.Assert.assertNull(obj21);
        org.junit.Assert.assertNull(obj28);
        org.junit.Assert.assertNull(obj36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNull(obj39);
        org.junit.Assert.assertNotNull(objSet40);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(objEntrySet42);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertNotNull(wildcardClass57);
        org.junit.Assert.assertNull(obj58);
    }

    @Test
    public void test1399() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1399");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        int int1 = atomikosProperties0.getMaxActives();
        atomikosProperties0.setLogBaseName("");
        java.lang.String str4 = atomikosProperties0.getService();
        atomikosProperties0.setLogBaseDir("{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=52, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.tm_unique_name=, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 50 + "'", int1 == 50);
        org.junit.Assert.assertNull(str4);
    }

    @Test
    public void test1400() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1400");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Properties properties2 = new java.util.Properties(properties0);
        java.util.Properties properties3 = null;
        java.util.Properties properties4 = new java.util.Properties(properties3);
        java.lang.Object obj6 = properties2.put((java.lang.Object) properties4, (java.lang.Object) (short) 1);
        java.util.Properties properties8 = null;
        java.util.Properties properties9 = new java.util.Properties(properties8);
        java.util.Properties properties10 = new java.util.Properties(properties8);
        java.util.Properties properties11 = null;
        java.util.Properties properties12 = new java.util.Properties(properties11);
        java.lang.Object obj14 = properties10.put((java.lang.Object) properties12, (java.lang.Object) (short) 1);
        boolean boolean15 = properties4.remove((java.lang.Object) false, (java.lang.Object) (short) 1);
        java.util.Set<java.lang.String> strSet16 = properties4.stringPropertyNames();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties17 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties17.setDefaultJtaTimeout((long) (byte) 10);
        atomikosProperties17.setCheckpointInterval((long) (byte) 0);
        atomikosProperties17.setTransactionManagerUniqueName("");
        boolean boolean24 = atomikosProperties17.isEnableLogging();
        atomikosProperties17.setSerialJtaTransactions(false);
        atomikosProperties17.setLogBaseDir("");
        java.util.Properties properties29 = null;
        java.util.Properties properties30 = new java.util.Properties(properties29);
        java.util.Properties properties31 = new java.util.Properties(properties29);
        java.util.Properties properties32 = null;
        java.util.Properties properties33 = new java.util.Properties(properties32);
        java.lang.Object obj35 = properties31.put((java.lang.Object) properties33, (java.lang.Object) (short) 1);
        java.util.Properties properties36 = new java.util.Properties(properties33);
        boolean boolean37 = properties4.remove((java.lang.Object) "", (java.lang.Object) properties36);
        java.lang.String str39 = properties4.getProperty("{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.tm_unique_name=, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties40 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties40.setDefaultJtaTimeout((long) (byte) 10);
        atomikosProperties40.setCheckpointInterval((long) (byte) 0);
        atomikosProperties40.setTransactionManagerUniqueName("");
        boolean boolean47 = atomikosProperties40.isEnableLogging();
        atomikosProperties40.setSerialJtaTransactions(false);
        java.lang.Object obj50 = properties4.remove((java.lang.Object) atomikosProperties40);
        properties4.clear();
        java.util.Set<java.lang.Object> objSet52 = properties4.keySet();
        org.junit.Assert.assertNull(obj6);
        org.junit.Assert.assertNull(obj14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(strSet16);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNull(obj35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNull(str39);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertNull(obj50);
        org.junit.Assert.assertNotNull(objSet52);
    }

    @Test
    public void test1401() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1401");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setDefaultJtaTimeout((long) (byte) 10);
        boolean boolean3 = atomikosProperties0.isForceShutdownOnVmExit();
        atomikosProperties0.setMaxActives(0);
        atomikosProperties0.setDefaultJtaTimeout((long) (byte) 10);
        boolean boolean8 = atomikosProperties0.isThreadedTwoPhaseCommit();
        atomikosProperties0.setCheckpointInterval((long) 2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
    }

    @Test
    public void test1402() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1402");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Properties properties2 = new java.util.Properties(properties0);
        java.util.Properties properties3 = null;
        java.util.Properties properties4 = new java.util.Properties(properties3);
        java.lang.Object obj6 = properties2.put((java.lang.Object) properties4, (java.lang.Object) (short) 1);
        java.util.Enumeration<java.lang.Object> objEnumeration7 = properties4.elements();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet8 = properties4.entrySet();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties9 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties9.setDefaultJtaTimeout((long) (byte) 10);
        long long12 = atomikosProperties9.getDefaultJtaTimeout();
        atomikosProperties9.setTransactionManagerUniqueName("");
        boolean boolean15 = atomikosProperties9.isEnableLogging();
        boolean boolean16 = properties4.containsKey((java.lang.Object) boolean15);
        java.util.Properties properties17 = null;
        java.util.Properties properties18 = new java.util.Properties(properties17);
        java.util.Properties properties19 = new java.util.Properties(properties17);
        java.util.Properties properties20 = null;
        java.util.Properties properties21 = new java.util.Properties(properties20);
        java.lang.Object obj23 = properties19.put((java.lang.Object) properties21, (java.lang.Object) (short) 1);
        java.util.Enumeration<java.lang.Object> objEnumeration24 = properties21.elements();
        boolean boolean25 = properties4.containsKey((java.lang.Object) objEnumeration24);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties26 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties26.setDefaultJtaTimeout((long) (byte) 10);
        atomikosProperties26.setCheckpointInterval((long) (byte) 0);
        atomikosProperties26.setTransactionManagerUniqueName("");
        java.util.Properties properties33 = atomikosProperties26.asProperties();
        java.lang.String str34 = atomikosProperties26.getTransactionManagerUniqueName();
        atomikosProperties26.setLogBaseDir("{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=0, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.tm_unique_name=, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
        atomikosProperties26.setCheckpointInterval((long) (byte) 0);
        long long39 = atomikosProperties26.getDefaultJtaTimeout();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties40 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties40.setThreadedTwoPhaseCommit(true);
        atomikosProperties40.setMaxActives((int) (byte) 0);
        atomikosProperties40.setEnableLogging(true);
        atomikosProperties40.setForceShutdownOnVmExit(false);
        boolean boolean49 = atomikosProperties40.isThreadedTwoPhaseCommit();
        atomikosProperties40.setForceShutdownOnVmExit(false);
        atomikosProperties40.setMaxActives((int) (short) -1);
        java.lang.Object obj54 = properties4.putIfAbsent((java.lang.Object) long39, (java.lang.Object) (short) -1);
        java.lang.Object obj57 = properties4.setProperty("{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=100, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=true, com.atomikos.icatch.tm_unique_name=, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name={com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.tm_unique_name=, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}}", "{}");
        java.io.Reader reader58 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties4.load(reader58);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(obj6);
        org.junit.Assert.assertNotNull(objEnumeration7);
        org.junit.Assert.assertNotNull(objEntrySet8);
        org.junit.Assert.assertTrue("'" + long12 + "' != '" + 10L + "'", long12 == 10L);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNull(obj23);
        org.junit.Assert.assertNotNull(objEnumeration24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(properties33);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "" + "'", str34, "");
        org.junit.Assert.assertTrue("'" + long39 + "' != '" + 10L + "'", long39 == 10L);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertNull(obj54);
        org.junit.Assert.assertNull(obj57);
    }

    @Test
    public void test1403() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1403");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setDefaultJtaTimeout((long) (byte) 10);
        atomikosProperties0.setCheckpointInterval((long) (byte) 0);
        atomikosProperties0.setTransactionManagerUniqueName("");
        boolean boolean7 = atomikosProperties0.isEnableLogging();
        java.lang.String str8 = atomikosProperties0.getLogBaseName();
        atomikosProperties0.setThreadedTwoPhaseCommit(false);
        boolean boolean11 = atomikosProperties0.isSerialJtaTransactions();
        long long12 = atomikosProperties0.getDefaultJtaTimeout();
        java.lang.String str13 = atomikosProperties0.getTransactionManagerUniqueName();
        atomikosProperties0.setSerialJtaTransactions(false);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "tmlog" + "'", str8, "tmlog");
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + long12 + "' != '" + 10L + "'", long12 == 10L);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "" + "'", str13, "");
    }

    @Test
    public void test1404() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1404");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setDefaultJtaTimeout((long) (byte) 10);
        long long3 = atomikosProperties0.getDefaultJtaTimeout();
        atomikosProperties0.setTransactionManagerUniqueName("");
        boolean boolean6 = atomikosProperties0.isEnableLogging();
        java.lang.String str7 = atomikosProperties0.getLogBaseDir();
        java.util.Properties properties8 = atomikosProperties0.asProperties();
        boolean boolean9 = atomikosProperties0.isEnableLogging();
        java.util.Properties properties10 = atomikosProperties0.asProperties();
        boolean boolean11 = atomikosProperties0.isSerialJtaTransactions();
        java.lang.String str12 = atomikosProperties0.getService();
        org.junit.Assert.assertTrue("'" + long3 + "' != '" + 10L + "'", long3 == 10L);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNotNull(properties8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertNotNull(properties10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNull(str12);
    }

    @Test
    public void test1405() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1405");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setThreadedTwoPhaseCommit(true);
        atomikosProperties0.setMaxActives((int) '#');
        boolean boolean5 = atomikosProperties0.isSerialJtaTransactions();
        atomikosProperties0.setCheckpointInterval((long) (-1));
        atomikosProperties0.setThreadedTwoPhaseCommit(false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
    }

    @Test
    public void test1406() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1406");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        int int1 = atomikosProperties0.getMaxActives();
        java.util.Properties properties2 = atomikosProperties0.asProperties();
        java.util.Properties properties3 = null;
        java.util.Properties properties4 = new java.util.Properties(properties3);
        java.util.Properties properties5 = new java.util.Properties(properties3);
        boolean boolean7 = properties5.containsValue((java.lang.Object) (short) 100);
        java.util.Properties properties8 = null;
        java.util.Properties properties9 = new java.util.Properties(properties8);
        java.util.Properties properties10 = new java.util.Properties(properties8);
        java.util.Properties properties11 = null;
        java.util.Properties properties12 = new java.util.Properties(properties11);
        java.lang.Object obj14 = properties10.put((java.lang.Object) properties12, (java.lang.Object) (short) 1);
        java.util.Enumeration<java.lang.Object> objEnumeration15 = properties12.elements();
        java.lang.Object obj16 = properties5.remove((java.lang.Object) properties12);
        java.util.Properties properties17 = null;
        java.util.Properties properties18 = new java.util.Properties(properties17);
        java.util.Properties properties19 = new java.util.Properties(properties17);
        java.util.Properties properties20 = null;
        java.util.Properties properties21 = new java.util.Properties(properties20);
        java.lang.Object obj23 = properties19.put((java.lang.Object) properties21, (java.lang.Object) (short) 1);
        java.util.Enumeration<java.lang.Object> objEnumeration24 = properties21.elements();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet25 = properties21.entrySet();
        java.util.Set<java.lang.Object> objSet26 = properties21.keySet();
        java.util.Properties properties27 = null;
        java.util.Properties properties28 = new java.util.Properties(properties27);
        java.util.Properties properties29 = new java.util.Properties(properties27);
        java.util.Properties properties30 = null;
        java.util.Properties properties31 = new java.util.Properties(properties30);
        java.lang.Object obj33 = properties29.put((java.lang.Object) properties31, (java.lang.Object) (short) 1);
        properties31.clear();
        int int35 = properties31.size();
        java.util.Properties properties36 = new java.util.Properties(properties31);
        java.util.Properties properties37 = null;
        java.util.Properties properties38 = new java.util.Properties(properties37);
        java.util.Properties properties39 = new java.util.Properties(properties37);
        java.util.Properties properties40 = null;
        java.util.Properties properties41 = new java.util.Properties(properties40);
        java.lang.Object obj43 = properties39.put((java.lang.Object) properties41, (java.lang.Object) (short) 1);
        properties41.clear();
        java.lang.String str46 = properties41.getProperty("");
        java.util.Properties properties47 = null;
        java.util.Properties properties48 = new java.util.Properties(properties47);
        java.util.Properties properties49 = new java.util.Properties(properties47);
        java.util.Properties properties50 = null;
        java.util.Properties properties51 = new java.util.Properties(properties50);
        java.lang.Object obj53 = properties49.put((java.lang.Object) properties51, (java.lang.Object) (short) 1);
        properties41.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties49);
        java.lang.Object obj55 = properties21.put((java.lang.Object) properties31, (java.lang.Object) properties49);
        java.util.Properties properties56 = null;
        java.util.Properties properties57 = new java.util.Properties(properties56);
        java.util.Properties properties58 = new java.util.Properties(properties56);
        java.util.Properties properties59 = null;
        java.util.Properties properties60 = new java.util.Properties(properties59);
        java.lang.Object obj62 = properties58.put((java.lang.Object) properties60, (java.lang.Object) (short) 1);
        java.util.Properties properties63 = new java.util.Properties(properties60);
        java.util.Properties properties64 = new java.util.Properties(properties60);
        java.util.Set<java.lang.Object> objSet65 = properties64.keySet();
        java.lang.Object obj66 = properties5.replace((java.lang.Object) properties21, (java.lang.Object) objSet65);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties67 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        int int68 = atomikosProperties67.getMaxActives();
        long long69 = atomikosProperties67.getMaxTimeout();
        java.util.Properties properties70 = atomikosProperties67.asProperties();
        atomikosProperties67.setService("hi!");
        boolean boolean73 = properties2.remove((java.lang.Object) properties5, (java.lang.Object) "hi!");
        java.util.Properties properties74 = new java.util.Properties(properties2);
        java.lang.String str76 = properties74.getProperty("{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=0, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.tm_unique_name=, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
        java.util.Enumeration<?> wildcardEnumeration77 = properties74.propertyNames();
        java.util.Properties properties78 = new java.util.Properties(properties74);
        java.io.PrintStream printStream79 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties74.list(printStream79);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 50 + "'", int1 == 50);
        org.junit.Assert.assertNotNull(properties2);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNull(obj14);
        org.junit.Assert.assertNotNull(objEnumeration15);
        org.junit.Assert.assertNull(obj16);
        org.junit.Assert.assertNull(obj23);
        org.junit.Assert.assertNotNull(objEnumeration24);
        org.junit.Assert.assertNotNull(objEntrySet25);
        org.junit.Assert.assertNotNull(objSet26);
        org.junit.Assert.assertNull(obj33);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 0 + "'", int35 == 0);
        org.junit.Assert.assertNull(obj43);
        org.junit.Assert.assertNull(str46);
        org.junit.Assert.assertNull(obj53);
        org.junit.Assert.assertNull(obj55);
        org.junit.Assert.assertNull(obj62);
        org.junit.Assert.assertNotNull(objSet65);
        org.junit.Assert.assertNull(obj66);
        org.junit.Assert.assertTrue("'" + int68 + "' != '" + 50 + "'", int68 == 50);
        org.junit.Assert.assertTrue("'" + long69 + "' != '" + 300000L + "'", long69 == 300000L);
        org.junit.Assert.assertNotNull(properties70);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertNull(str76);
        org.junit.Assert.assertNotNull(wildcardEnumeration77);
    }

    @Test
    public void test1407() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1407");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Properties properties2 = new java.util.Properties(properties0);
        java.util.Properties properties3 = null;
        java.util.Properties properties4 = new java.util.Properties(properties3);
        java.lang.Object obj6 = properties2.put((java.lang.Object) properties4, (java.lang.Object) (short) 1);
        boolean boolean7 = properties2.isEmpty();
        properties2.clear();
        java.util.Properties properties9 = null;
        java.util.Properties properties10 = new java.util.Properties(properties9);
        java.util.Properties properties11 = new java.util.Properties(properties9);
        java.util.Properties properties12 = null;
        java.util.Properties properties13 = new java.util.Properties(properties12);
        java.lang.Object obj15 = properties11.put((java.lang.Object) properties13, (java.lang.Object) (short) 1);
        boolean boolean16 = properties11.isEmpty();
        java.util.Properties properties17 = null;
        java.util.Properties properties18 = new java.util.Properties(properties17);
        java.util.Properties properties19 = new java.util.Properties(properties17);
        boolean boolean20 = properties11.containsKey((java.lang.Object) properties19);
        java.util.Properties properties21 = new java.util.Properties(properties11);
        java.util.Properties properties22 = null;
        java.util.Properties properties23 = new java.util.Properties(properties22);
        java.util.Properties properties24 = new java.util.Properties(properties22);
        boolean boolean26 = properties24.containsValue((java.lang.Object) (short) 100);
        java.util.Properties properties27 = null;
        java.util.Properties properties28 = new java.util.Properties(properties27);
        java.util.Properties properties29 = new java.util.Properties(properties27);
        java.util.Properties properties30 = null;
        java.util.Properties properties31 = new java.util.Properties(properties30);
        java.lang.Object obj33 = properties29.put((java.lang.Object) properties31, (java.lang.Object) (short) 1);
        java.util.Enumeration<java.lang.Object> objEnumeration34 = properties31.elements();
        java.lang.Object obj35 = properties24.remove((java.lang.Object) properties31);
        boolean boolean36 = properties31.isEmpty();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet37 = properties31.entrySet();
        java.util.Properties properties38 = new java.util.Properties(properties31);
        java.util.Set<java.lang.String> strSet39 = properties31.stringPropertyNames();
        boolean boolean41 = properties2.replace((java.lang.Object) properties21, (java.lang.Object) strSet39, (java.lang.Object) "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.tm_unique_name=, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
        java.lang.String str44 = properties21.getProperty("{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}", "{=}");
        org.junit.Assert.assertNull(obj6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNull(obj15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNull(obj33);
        org.junit.Assert.assertNotNull(objEnumeration34);
        org.junit.Assert.assertNull(obj35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNotNull(objEntrySet37);
        org.junit.Assert.assertNotNull(strSet39);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "{=}" + "'", str44, "{=}");
    }

    @Test
    public void test1408() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1408");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        int int1 = atomikosProperties0.getMaxActives();
        long long2 = atomikosProperties0.getMaxTimeout();
        java.util.Properties properties3 = atomikosProperties0.asProperties();
        java.util.Properties properties4 = atomikosProperties0.asProperties();
        java.lang.String str5 = atomikosProperties0.getTransactionManagerUniqueName();
        java.util.Properties properties6 = atomikosProperties0.asProperties();
        atomikosProperties0.setLogBaseName("{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=52, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.tm_unique_name=, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 50 + "'", int1 == 50);
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + 300000L + "'", long2 == 300000L);
        org.junit.Assert.assertNotNull(properties3);
        org.junit.Assert.assertNotNull(properties4);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNotNull(properties6);
    }

    @Test
    public void test1409() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1409");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Properties properties2 = new java.util.Properties(properties0);
        java.util.Properties properties3 = null;
        java.util.Properties properties4 = new java.util.Properties(properties3);
        java.lang.Object obj6 = properties2.put((java.lang.Object) properties4, (java.lang.Object) (short) 1);
        java.util.Properties properties8 = null;
        java.util.Properties properties9 = new java.util.Properties(properties8);
        java.util.Properties properties10 = new java.util.Properties(properties8);
        java.util.Properties properties11 = null;
        java.util.Properties properties12 = new java.util.Properties(properties11);
        java.lang.Object obj14 = properties10.put((java.lang.Object) properties12, (java.lang.Object) (short) 1);
        boolean boolean15 = properties4.remove((java.lang.Object) false, (java.lang.Object) (short) 1);
        java.io.OutputStream outputStream16 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties4.storeToXML(outputStream16, "{}");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(obj6);
        org.junit.Assert.assertNull(obj14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
    }

    @Test
    public void test1410() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1410");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setDefaultJtaTimeout((long) (byte) 10);
        long long3 = atomikosProperties0.getDefaultJtaTimeout();
        atomikosProperties0.setTransactionManagerUniqueName("");
        boolean boolean6 = atomikosProperties0.isEnableLogging();
        java.lang.String str7 = atomikosProperties0.getLogBaseDir();
        java.util.Properties properties8 = atomikosProperties0.asProperties();
        boolean boolean9 = atomikosProperties0.isEnableLogging();
        long long10 = atomikosProperties0.getDefaultJtaTimeout();
        java.util.Properties properties11 = atomikosProperties0.asProperties();
        java.io.OutputStream outputStream12 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties11.store(outputStream12, "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=0, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=true, com.atomikos.icatch.max_actives=100, com.atomikos.icatch.log_base_name=tmlog}");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + long3 + "' != '" + 10L + "'", long3 == 10L);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNotNull(properties8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertTrue("'" + long10 + "' != '" + 10L + "'", long10 == 10L);
        org.junit.Assert.assertNotNull(properties11);
    }

    @Test
    public void test1411() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1411");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        boolean boolean1 = atomikosProperties0.isForceShutdownOnVmExit();
        java.util.Properties properties2 = atomikosProperties0.asProperties();
        java.util.Properties properties3 = null;
        java.util.Properties properties4 = new java.util.Properties(properties3);
        java.util.Properties properties5 = new java.util.Properties(properties3);
        java.util.Properties properties6 = null;
        java.util.Properties properties7 = new java.util.Properties(properties6);
        java.lang.Object obj9 = properties5.put((java.lang.Object) properties7, (java.lang.Object) (short) 1);
        properties7.clear();
        int int11 = properties7.size();
        java.util.Properties properties12 = null;
        java.util.Properties properties13 = new java.util.Properties(properties12);
        java.util.Properties properties14 = new java.util.Properties(properties12);
        java.util.Properties properties15 = null;
        java.util.Properties properties16 = new java.util.Properties(properties15);
        java.lang.Object obj18 = properties14.put((java.lang.Object) properties16, (java.lang.Object) (short) 1);
        java.util.Properties properties19 = new java.util.Properties(properties16);
        java.util.Properties properties20 = new java.util.Properties(properties16);
        boolean boolean22 = properties7.remove((java.lang.Object) properties16, (java.lang.Object) 10.0f);
        boolean boolean23 = properties2.containsKey((java.lang.Object) 10.0f);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties25 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties25.setDefaultJtaTimeout((long) (byte) 10);
        atomikosProperties25.setCheckpointInterval((long) (byte) 0);
        atomikosProperties25.setEnableLogging(true);
        java.lang.Object obj32 = properties2.getOrDefault((java.lang.Object) (byte) 0, (java.lang.Object) true);
        java.util.Properties properties33 = new java.util.Properties(properties2);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties34 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties34.setDefaultJtaTimeout((long) (byte) 10);
        atomikosProperties34.setCheckpointInterval((long) (byte) 0);
        long long39 = atomikosProperties34.getMaxTimeout();
        java.util.Properties properties40 = null;
        java.util.Properties properties41 = new java.util.Properties(properties40);
        java.util.Properties properties42 = new java.util.Properties(properties40);
        java.util.Properties properties43 = null;
        java.util.Properties properties44 = new java.util.Properties(properties43);
        java.lang.Object obj46 = properties42.put((java.lang.Object) properties44, (java.lang.Object) (short) 1);
        java.util.Properties properties48 = null;
        java.util.Properties properties49 = new java.util.Properties(properties48);
        java.util.Properties properties50 = new java.util.Properties(properties48);
        java.util.Properties properties51 = null;
        java.util.Properties properties52 = new java.util.Properties(properties51);
        java.lang.Object obj54 = properties50.put((java.lang.Object) properties52, (java.lang.Object) (short) 1);
        boolean boolean55 = properties44.remove((java.lang.Object) false, (java.lang.Object) (short) 1);
        java.lang.Object obj57 = properties44.remove((java.lang.Object) '#');
        java.util.Set<java.lang.Object> objSet58 = properties44.keySet();
        properties44.clear();
        java.util.Properties properties60 = null;
        java.util.Properties properties61 = new java.util.Properties(properties60);
        java.util.Properties properties62 = new java.util.Properties(properties60);
        java.util.Properties properties63 = null;
        java.util.Properties properties64 = new java.util.Properties(properties63);
        java.lang.Object obj66 = properties62.put((java.lang.Object) properties64, (java.lang.Object) (short) 1);
        java.util.Enumeration<java.lang.Object> objEnumeration67 = properties64.elements();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet68 = properties64.entrySet();
        boolean boolean69 = properties44.equals((java.lang.Object) properties64);
        java.util.Enumeration<java.lang.Object> objEnumeration70 = properties64.elements();
        java.lang.Object obj71 = properties33.put((java.lang.Object) atomikosProperties34, (java.lang.Object) properties64);
        long long72 = atomikosProperties34.getCheckpointInterval();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertNotNull(properties2);
        org.junit.Assert.assertNull(obj9);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertNull(obj18);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertEquals("'" + obj32 + "' != '" + true + "'", obj32, true);
        org.junit.Assert.assertTrue("'" + long39 + "' != '" + 300000L + "'", long39 == 300000L);
        org.junit.Assert.assertNull(obj46);
        org.junit.Assert.assertNull(obj54);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertNull(obj57);
        org.junit.Assert.assertNotNull(objSet58);
        org.junit.Assert.assertNull(obj66);
        org.junit.Assert.assertNotNull(objEnumeration67);
        org.junit.Assert.assertNotNull(objEntrySet68);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + true + "'", boolean69 == true);
        org.junit.Assert.assertNotNull(objEnumeration70);
        org.junit.Assert.assertNull(obj71);
        org.junit.Assert.assertTrue("'" + long72 + "' != '" + 0L + "'", long72 == 0L);
    }

    @Test
    public void test1412() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1412");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setDefaultJtaTimeout((long) (byte) 10);
        long long3 = atomikosProperties0.getDefaultJtaTimeout();
        atomikosProperties0.setTransactionManagerUniqueName("");
        long long6 = atomikosProperties0.getDefaultJtaTimeout();
        boolean boolean7 = atomikosProperties0.isEnableLogging();
        atomikosProperties0.setSerialJtaTransactions(false);
        atomikosProperties0.setDefaultJtaTimeout(0L);
        org.junit.Assert.assertTrue("'" + long3 + "' != '" + 10L + "'", long3 == 10L);
        org.junit.Assert.assertTrue("'" + long6 + "' != '" + 10L + "'", long6 == 10L);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
    }

    @Test
    public void test1413() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1413");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Properties properties2 = new java.util.Properties(properties0);
        boolean boolean4 = properties2.containsValue((java.lang.Object) (short) 100);
        java.util.Enumeration<java.lang.Object> objEnumeration5 = properties2.keys();
        java.util.Properties properties6 = null;
        java.util.Properties properties7 = new java.util.Properties(properties6);
        java.util.Properties properties8 = new java.util.Properties(properties6);
        java.util.Properties properties9 = null;
        java.util.Properties properties10 = new java.util.Properties(properties9);
        java.lang.Object obj12 = properties8.put((java.lang.Object) properties10, (java.lang.Object) (short) 1);
        boolean boolean13 = properties8.isEmpty();
        java.util.Properties properties14 = null;
        java.util.Properties properties15 = new java.util.Properties(properties14);
        java.util.Properties properties16 = new java.util.Properties(properties14);
        boolean boolean17 = properties8.containsKey((java.lang.Object) properties16);
        java.util.Properties properties18 = new java.util.Properties(properties16);
        java.lang.Object obj19 = properties18.clone();
        java.lang.Object obj20 = properties2.remove(obj19);
        properties2.clear();
        java.util.Properties properties23 = null;
        java.util.Properties properties24 = new java.util.Properties(properties23);
        java.util.Properties properties25 = new java.util.Properties(properties23);
        java.util.Properties properties26 = null;
        java.util.Properties properties27 = new java.util.Properties(properties26);
        java.lang.Object obj29 = properties25.put((java.lang.Object) properties27, (java.lang.Object) (short) 1);
        java.util.Enumeration<java.lang.Object> objEnumeration30 = properties27.elements();
        java.lang.String str31 = properties27.toString();
        boolean boolean32 = properties2.remove((java.lang.Object) (short) 10, (java.lang.Object) str31);
        java.util.Properties properties33 = null;
        java.util.Properties properties34 = new java.util.Properties(properties33);
        java.util.Properties properties35 = new java.util.Properties(properties33);
        boolean boolean37 = properties35.containsValue((java.lang.Object) (short) 100);
        java.util.Enumeration<java.lang.Object> objEnumeration38 = properties35.keys();
        java.lang.Object obj39 = properties2.get((java.lang.Object) objEnumeration38);
        java.lang.Object obj40 = properties2.clone();
        int int41 = properties2.size();
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(objEnumeration5);
        org.junit.Assert.assertNull(obj12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(obj19);
        org.junit.Assert.assertEquals(obj19.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj19), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj19), "{}");
        org.junit.Assert.assertNull(obj20);
        org.junit.Assert.assertNull(obj29);
        org.junit.Assert.assertNotNull(objEnumeration30);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "{}" + "'", str31, "{}");
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(objEnumeration38);
        org.junit.Assert.assertNull(obj39);
        org.junit.Assert.assertNotNull(obj40);
        org.junit.Assert.assertEquals(obj40.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj40), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj40), "{}");
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 0 + "'", int41 == 0);
    }

    @Test
    public void test1414() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1414");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setDefaultJtaTimeout((long) (byte) 10);
        long long3 = atomikosProperties0.getDefaultJtaTimeout();
        atomikosProperties0.setTransactionManagerUniqueName("");
        boolean boolean6 = atomikosProperties0.isThreadedTwoPhaseCommit();
        long long7 = atomikosProperties0.getDefaultJtaTimeout();
        atomikosProperties0.setLogBaseDir("tmlog");
        org.junit.Assert.assertTrue("'" + long3 + "' != '" + 10L + "'", long3 == 10L);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + 10L + "'", long7 == 10L);
    }

    @Test
    public void test1415() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1415");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Properties properties2 = new java.util.Properties(properties0);
        java.util.Properties properties3 = null;
        java.util.Properties properties4 = new java.util.Properties(properties3);
        java.lang.Object obj6 = properties2.put((java.lang.Object) properties4, (java.lang.Object) (short) 1);
        java.util.Properties properties7 = new java.util.Properties(properties4);
        int int8 = properties4.size();
        java.lang.Object obj10 = properties4.get((java.lang.Object) (short) 100);
        java.lang.String str13 = properties4.getProperty("{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=100, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=true, com.atomikos.icatch.tm_unique_name=, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name={com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.tm_unique_name=, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}}", "{tmlog=}");
        org.junit.Assert.assertNull(obj6);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertNull(obj10);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "{tmlog=}" + "'", str13, "{tmlog=}");
    }

    @Test
    public void test1416() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1416");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Properties properties2 = new java.util.Properties(properties0);
        java.util.Properties properties3 = null;
        java.util.Properties properties4 = new java.util.Properties(properties3);
        java.lang.Object obj6 = properties2.put((java.lang.Object) properties4, (java.lang.Object) (short) 1);
        java.util.Properties properties8 = null;
        java.util.Properties properties9 = new java.util.Properties(properties8);
        java.util.Properties properties10 = new java.util.Properties(properties8);
        java.util.Properties properties11 = null;
        java.util.Properties properties12 = new java.util.Properties(properties11);
        java.lang.Object obj14 = properties10.put((java.lang.Object) properties12, (java.lang.Object) (short) 1);
        boolean boolean15 = properties4.remove((java.lang.Object) false, (java.lang.Object) (short) 1);
        java.lang.Object obj17 = properties4.remove((java.lang.Object) '#');
        java.util.Set<java.lang.Object> objSet18 = properties4.keySet();
        properties4.clear();
        java.util.Properties properties20 = null;
        java.util.Properties properties21 = new java.util.Properties(properties20);
        java.util.Properties properties22 = new java.util.Properties(properties20);
        java.util.Properties properties23 = null;
        java.util.Properties properties24 = new java.util.Properties(properties23);
        java.lang.Object obj26 = properties22.put((java.lang.Object) properties24, (java.lang.Object) (short) 1);
        java.util.Enumeration<java.lang.Object> objEnumeration27 = properties24.elements();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet28 = properties24.entrySet();
        boolean boolean29 = properties4.equals((java.lang.Object) properties24);
        java.lang.Object obj30 = properties4.clone();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties31 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties31.setDefaultJtaTimeout((long) (byte) 10);
        atomikosProperties31.setCheckpointInterval((long) (byte) 0);
        atomikosProperties31.setEnableLogging(true);
        atomikosProperties31.setThreadedTwoPhaseCommit(false);
        boolean boolean40 = atomikosProperties31.isForceShutdownOnVmExit();
        boolean boolean41 = properties4.containsKey((java.lang.Object) atomikosProperties31);
        java.util.Properties properties42 = null;
        java.util.Properties properties43 = new java.util.Properties(properties42);
        java.util.Properties properties44 = new java.util.Properties(properties42);
        java.util.Properties properties45 = null;
        java.util.Properties properties46 = new java.util.Properties(properties45);
        java.lang.Object obj48 = properties44.put((java.lang.Object) properties46, (java.lang.Object) (short) 1);
        java.util.Properties properties50 = null;
        java.util.Properties properties51 = new java.util.Properties(properties50);
        java.util.Properties properties52 = new java.util.Properties(properties50);
        java.util.Properties properties53 = null;
        java.util.Properties properties54 = new java.util.Properties(properties53);
        java.lang.Object obj56 = properties52.put((java.lang.Object) properties54, (java.lang.Object) (short) 1);
        boolean boolean57 = properties46.remove((java.lang.Object) false, (java.lang.Object) (short) 1);
        java.util.Set<java.lang.String> strSet58 = properties46.stringPropertyNames();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties59 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties59.setDefaultJtaTimeout((long) (byte) 10);
        atomikosProperties59.setCheckpointInterval((long) (byte) 0);
        atomikosProperties59.setTransactionManagerUniqueName("");
        boolean boolean66 = atomikosProperties59.isEnableLogging();
        atomikosProperties59.setSerialJtaTransactions(false);
        atomikosProperties59.setLogBaseDir("");
        java.util.Properties properties71 = null;
        java.util.Properties properties72 = new java.util.Properties(properties71);
        java.util.Properties properties73 = new java.util.Properties(properties71);
        java.util.Properties properties74 = null;
        java.util.Properties properties75 = new java.util.Properties(properties74);
        java.lang.Object obj77 = properties73.put((java.lang.Object) properties75, (java.lang.Object) (short) 1);
        java.util.Properties properties78 = new java.util.Properties(properties75);
        boolean boolean79 = properties46.remove((java.lang.Object) "", (java.lang.Object) properties78);
        java.util.Properties properties80 = null;
        java.util.Properties properties81 = new java.util.Properties(properties80);
        java.util.Properties properties82 = new java.util.Properties(properties80);
        java.lang.Object obj83 = properties82.clone();
        boolean boolean84 = properties46.contains(obj83);
        boolean boolean85 = properties4.equals((java.lang.Object) boolean84);
        java.util.Enumeration<?> wildcardEnumeration86 = properties4.propertyNames();
        org.junit.Assert.assertNull(obj6);
        org.junit.Assert.assertNull(obj14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNull(obj17);
        org.junit.Assert.assertNotNull(objSet18);
        org.junit.Assert.assertNull(obj26);
        org.junit.Assert.assertNotNull(objEnumeration27);
        org.junit.Assert.assertNotNull(objEntrySet28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNotNull(obj30);
        org.junit.Assert.assertEquals(obj30.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj30), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj30), "{}");
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNull(obj48);
        org.junit.Assert.assertNull(obj56);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertNotNull(strSet58);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66 == true);
        org.junit.Assert.assertNull(obj77);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + false + "'", boolean79 == false);
        org.junit.Assert.assertNotNull(obj83);
        org.junit.Assert.assertEquals(obj83.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj83), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj83), "{}");
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + false + "'", boolean84 == false);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + false + "'", boolean85 == false);
        org.junit.Assert.assertNotNull(wildcardEnumeration86);
    }

    @Test
    public void test1417() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1417");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Properties properties2 = new java.util.Properties(properties0);
        java.util.Properties properties3 = null;
        java.util.Properties properties4 = new java.util.Properties(properties3);
        java.lang.Object obj6 = properties2.put((java.lang.Object) properties4, (java.lang.Object) (short) 1);
        properties4.clear();
        int int8 = properties4.size();
        java.util.Properties properties9 = null;
        java.util.Properties properties10 = new java.util.Properties(properties9);
        java.util.Properties properties11 = new java.util.Properties(properties9);
        java.util.Properties properties12 = null;
        java.util.Properties properties13 = new java.util.Properties(properties12);
        java.lang.Object obj15 = properties11.put((java.lang.Object) properties13, (java.lang.Object) (short) 1);
        java.util.Properties properties16 = new java.util.Properties(properties13);
        java.util.Properties properties17 = new java.util.Properties(properties13);
        boolean boolean19 = properties4.remove((java.lang.Object) properties13, (java.lang.Object) 10.0f);
        java.util.Enumeration<java.lang.Object> objEnumeration20 = properties13.elements();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties21 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties21.setDefaultJtaTimeout((long) (byte) 10);
        atomikosProperties21.setCheckpointInterval((long) (byte) 0);
        long long26 = atomikosProperties21.getMaxTimeout();
        atomikosProperties21.setSerialJtaTransactions(true);
        java.util.Properties properties29 = new java.util.Properties();
        java.util.Enumeration<?> wildcardEnumeration30 = properties29.propertyNames();
        java.lang.Object obj31 = properties13.replace((java.lang.Object) atomikosProperties21, (java.lang.Object) properties29);
        java.util.Properties properties32 = null;
        java.util.Properties properties33 = new java.util.Properties(properties32);
        java.util.Properties properties34 = new java.util.Properties(properties32);
        java.util.Properties properties35 = null;
        java.util.Properties properties36 = new java.util.Properties(properties35);
        java.lang.Object obj38 = properties34.put((java.lang.Object) properties36, (java.lang.Object) (short) 1);
        boolean boolean39 = properties34.isEmpty();
        java.util.Properties properties40 = null;
        java.util.Properties properties41 = new java.util.Properties(properties40);
        java.util.Properties properties42 = new java.util.Properties(properties40);
        boolean boolean43 = properties34.containsKey((java.lang.Object) properties42);
        java.util.Properties properties44 = new java.util.Properties(properties42);
        java.util.Properties properties45 = null;
        java.util.Properties properties46 = new java.util.Properties(properties45);
        java.util.Properties properties47 = new java.util.Properties(properties45);
        java.util.Properties properties48 = null;
        java.util.Properties properties49 = new java.util.Properties(properties48);
        java.lang.Object obj51 = properties47.put((java.lang.Object) properties49, (java.lang.Object) (short) 1);
        boolean boolean52 = properties47.isEmpty();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties53 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties53.setDefaultJtaTimeout((long) (byte) 10);
        atomikosProperties53.setCheckpointInterval((long) (byte) 0);
        atomikosProperties53.setTransactionManagerUniqueName("");
        java.util.Properties properties60 = atomikosProperties53.asProperties();
        java.lang.Object obj61 = properties47.remove((java.lang.Object) properties60);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties62 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties62.setDefaultJtaTimeout((long) (byte) 10);
        atomikosProperties62.setCheckpointInterval((long) (byte) 0);
        atomikosProperties62.setTransactionManagerUniqueName("");
        java.lang.Object obj69 = properties60.remove((java.lang.Object) atomikosProperties62);
        java.util.Enumeration<java.lang.Object> objEnumeration70 = properties60.elements();
        java.lang.Object obj71 = properties44.get((java.lang.Object) properties60);
        properties13.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties60);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties73 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties73.setThreadedTwoPhaseCommit(true);
        atomikosProperties73.setMaxActives((int) (byte) 0);
        atomikosProperties73.setEnableLogging(true);
        atomikosProperties73.setForceShutdownOnVmExit(false);
        java.util.Properties properties82 = atomikosProperties73.asProperties();
        boolean boolean83 = atomikosProperties73.isThreadedTwoPhaseCommit();
        atomikosProperties73.setEnableLogging(true);
        boolean boolean86 = properties60.containsValue((java.lang.Object) atomikosProperties73);
        java.lang.String str87 = atomikosProperties73.getLogBaseName();
        org.junit.Assert.assertNull(obj6);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertNull(obj15);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(objEnumeration20);
        org.junit.Assert.assertTrue("'" + long26 + "' != '" + 300000L + "'", long26 == 300000L);
        org.junit.Assert.assertNotNull(wildcardEnumeration30);
        org.junit.Assert.assertNull(obj31);
        org.junit.Assert.assertNull(obj38);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNull(obj51);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNotNull(properties60);
        org.junit.Assert.assertNull(obj61);
        org.junit.Assert.assertNull(obj69);
        org.junit.Assert.assertNotNull(objEnumeration70);
        org.junit.Assert.assertNull(obj71);
        org.junit.Assert.assertNotNull(properties82);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + true + "'", boolean83 == true);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + false + "'", boolean86 == false);
        org.junit.Assert.assertEquals("'" + str87 + "' != '" + "tmlog" + "'", str87, "tmlog");
    }

    @Test
    public void test1418() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1418");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Properties properties2 = new java.util.Properties(properties0);
        java.util.Properties properties3 = null;
        java.util.Properties properties4 = new java.util.Properties(properties3);
        java.lang.Object obj6 = properties2.put((java.lang.Object) properties4, (java.lang.Object) (short) 1);
        boolean boolean7 = properties2.isEmpty();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties8 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties8.setDefaultJtaTimeout((long) (byte) 10);
        atomikosProperties8.setCheckpointInterval((long) (byte) 0);
        atomikosProperties8.setTransactionManagerUniqueName("");
        java.util.Properties properties15 = atomikosProperties8.asProperties();
        java.lang.Object obj16 = properties2.remove((java.lang.Object) properties15);
        java.util.Set<java.lang.String> strSet17 = properties15.stringPropertyNames();
        properties15.clear();
        java.util.Properties properties19 = null;
        java.util.Properties properties20 = new java.util.Properties(properties19);
        java.util.Properties properties21 = new java.util.Properties(properties19);
        boolean boolean23 = properties21.containsValue((java.lang.Object) (short) 100);
        java.util.Properties properties24 = null;
        java.util.Properties properties25 = new java.util.Properties(properties24);
        java.util.Properties properties26 = new java.util.Properties(properties24);
        java.util.Properties properties27 = null;
        java.util.Properties properties28 = new java.util.Properties(properties27);
        java.lang.Object obj30 = properties26.put((java.lang.Object) properties28, (java.lang.Object) (short) 1);
        java.util.Enumeration<java.lang.Object> objEnumeration31 = properties28.elements();
        java.lang.Object obj32 = properties21.remove((java.lang.Object) properties28);
        boolean boolean33 = properties28.isEmpty();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet34 = properties28.entrySet();
        java.util.Properties properties35 = new java.util.Properties(properties28);
        java.util.Properties properties36 = null;
        java.util.Properties properties37 = new java.util.Properties(properties36);
        java.util.Properties properties38 = new java.util.Properties(properties36);
        java.util.Properties properties39 = null;
        java.util.Properties properties40 = new java.util.Properties(properties39);
        java.lang.Object obj42 = properties38.put((java.lang.Object) properties40, (java.lang.Object) (short) 1);
        java.util.Properties properties43 = new java.util.Properties(properties40);
        java.util.Properties properties44 = new java.util.Properties(properties40);
        java.util.Set<java.lang.Object> objSet45 = properties44.keySet();
        java.util.Properties properties46 = null;
        java.util.Properties properties47 = new java.util.Properties(properties46);
        java.util.Properties properties48 = new java.util.Properties(properties46);
        java.util.Properties properties49 = null;
        java.util.Properties properties50 = new java.util.Properties(properties49);
        java.lang.Object obj52 = properties48.put((java.lang.Object) properties50, (java.lang.Object) (short) 1);
        properties50.clear();
        int int54 = properties50.size();
        java.util.Properties properties55 = null;
        java.util.Properties properties56 = new java.util.Properties(properties55);
        java.util.Properties properties57 = new java.util.Properties(properties55);
        java.util.Properties properties58 = null;
        java.util.Properties properties59 = new java.util.Properties(properties58);
        java.lang.Object obj61 = properties57.put((java.lang.Object) properties59, (java.lang.Object) (short) 1);
        java.util.Properties properties62 = new java.util.Properties(properties59);
        java.util.Properties properties63 = new java.util.Properties(properties59);
        boolean boolean65 = properties50.remove((java.lang.Object) properties59, (java.lang.Object) 10.0f);
        java.util.Enumeration<java.lang.Object> objEnumeration66 = properties59.elements();
        java.util.Properties properties67 = new java.util.Properties(properties59);
        java.lang.Object obj68 = properties35.putIfAbsent((java.lang.Object) objSet45, (java.lang.Object) properties59);
        java.util.Enumeration<java.lang.Object> objEnumeration69 = properties35.elements();
        java.util.Enumeration<java.lang.Object> objEnumeration70 = properties35.elements();
        java.util.Properties properties72 = null;
        java.util.Properties properties73 = new java.util.Properties(properties72);
        java.util.Properties properties74 = new java.util.Properties(properties72);
        java.util.Properties properties75 = null;
        java.util.Properties properties76 = new java.util.Properties(properties75);
        java.lang.Object obj78 = properties74.put((java.lang.Object) properties76, (java.lang.Object) (short) 1);
        properties76.clear();
        java.lang.String str81 = properties76.getProperty("");
        java.util.Properties properties82 = null;
        java.util.Properties properties83 = new java.util.Properties(properties82);
        java.util.Properties properties84 = new java.util.Properties(properties82);
        java.util.Properties properties85 = null;
        java.util.Properties properties86 = new java.util.Properties(properties85);
        java.lang.Object obj88 = properties84.put((java.lang.Object) properties86, (java.lang.Object) (short) 1);
        properties76.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties84);
        java.util.Enumeration<java.lang.Object> objEnumeration90 = properties76.keys();
        java.util.Enumeration<java.lang.Object> objEnumeration91 = properties76.elements();
        java.util.Set<java.lang.Object> objSet92 = properties76.keySet();
        java.lang.Object obj93 = properties35.put((java.lang.Object) "{}", (java.lang.Object) properties76);
        boolean boolean94 = properties15.containsKey((java.lang.Object) properties35);
        java.io.InputStream inputStream95 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties35.load(inputStream95);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(obj6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(properties15);
        org.junit.Assert.assertNull(obj16);
        org.junit.Assert.assertNotNull(strSet17);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNull(obj30);
        org.junit.Assert.assertNotNull(objEnumeration31);
        org.junit.Assert.assertNull(obj32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNotNull(objEntrySet34);
        org.junit.Assert.assertNull(obj42);
        org.junit.Assert.assertNotNull(objSet45);
        org.junit.Assert.assertNull(obj52);
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + 0 + "'", int54 == 0);
        org.junit.Assert.assertNull(obj61);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertNotNull(objEnumeration66);
        org.junit.Assert.assertNull(obj68);
        org.junit.Assert.assertNotNull(objEnumeration69);
        org.junit.Assert.assertNotNull(objEnumeration70);
        org.junit.Assert.assertNull(obj78);
        org.junit.Assert.assertNull(str81);
        org.junit.Assert.assertNull(obj88);
        org.junit.Assert.assertNotNull(objEnumeration90);
        org.junit.Assert.assertNotNull(objEnumeration91);
        org.junit.Assert.assertNotNull(objSet92);
        org.junit.Assert.assertNull(obj93);
        org.junit.Assert.assertTrue("'" + boolean94 + "' != '" + false + "'", boolean94 == false);
    }

    @Test
    public void test1419() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1419");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setDefaultJtaTimeout((long) (byte) 10);
        atomikosProperties0.setCheckpointInterval((long) (byte) 0);
        atomikosProperties0.setTransactionManagerUniqueName("");
        java.util.Properties properties7 = atomikosProperties0.asProperties();
        java.lang.String str8 = atomikosProperties0.getLogBaseName();
        java.util.Properties properties9 = atomikosProperties0.asProperties();
        atomikosProperties0.setEnableLogging(true);
        atomikosProperties0.setForceShutdownOnVmExit(false);
        long long14 = atomikosProperties0.getMaxTimeout();
        java.lang.String str15 = atomikosProperties0.getLogBaseName();
        boolean boolean16 = atomikosProperties0.isEnableLogging();
        boolean boolean17 = atomikosProperties0.isForceShutdownOnVmExit();
        java.lang.String str18 = atomikosProperties0.getService();
        atomikosProperties0.setService("{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=0, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=true, com.atomikos.icatch.max_actives=100, com.atomikos.icatch.log_base_name=tmlog}");
        org.junit.Assert.assertNotNull(properties7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "tmlog" + "'", str8, "tmlog");
        org.junit.Assert.assertNotNull(properties9);
        org.junit.Assert.assertTrue("'" + long14 + "' != '" + 300000L + "'", long14 == 300000L);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "tmlog" + "'", str15, "tmlog");
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNull(str18);
    }

    @Test
    public void test1420() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1420");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Properties properties2 = new java.util.Properties(properties0);
        java.util.Properties properties3 = null;
        java.util.Properties properties4 = new java.util.Properties(properties3);
        java.lang.Object obj6 = properties2.put((java.lang.Object) properties4, (java.lang.Object) (short) 1);
        properties4.clear();
        java.lang.String str9 = properties4.getProperty("");
        java.util.Properties properties10 = null;
        java.util.Properties properties11 = new java.util.Properties(properties10);
        java.util.Properties properties12 = new java.util.Properties(properties10);
        java.util.Properties properties13 = null;
        java.util.Properties properties14 = new java.util.Properties(properties13);
        java.lang.Object obj16 = properties12.put((java.lang.Object) properties14, (java.lang.Object) (short) 1);
        properties4.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties12);
        java.util.Properties properties18 = null;
        java.util.Properties properties19 = new java.util.Properties(properties18);
        java.util.Properties properties20 = new java.util.Properties(properties18);
        boolean boolean22 = properties20.containsValue((java.lang.Object) (short) 100);
        java.util.Properties properties23 = null;
        java.util.Properties properties24 = new java.util.Properties(properties23);
        java.util.Properties properties25 = new java.util.Properties(properties23);
        java.util.Properties properties26 = null;
        java.util.Properties properties27 = new java.util.Properties(properties26);
        java.lang.Object obj29 = properties25.put((java.lang.Object) properties27, (java.lang.Object) (short) 1);
        java.util.Enumeration<java.lang.Object> objEnumeration30 = properties27.elements();
        java.lang.Object obj31 = properties20.remove((java.lang.Object) properties27);
        java.lang.Object obj34 = properties27.setProperty("", "");
        java.util.Properties properties35 = null;
        java.util.Properties properties36 = new java.util.Properties(properties35);
        java.util.Properties properties37 = new java.util.Properties(properties35);
        java.util.Properties properties38 = null;
        java.util.Properties properties39 = new java.util.Properties(properties38);
        java.lang.Object obj41 = properties37.put((java.lang.Object) properties39, (java.lang.Object) (short) 1);
        java.util.Properties properties43 = null;
        java.util.Properties properties44 = new java.util.Properties(properties43);
        java.util.Properties properties45 = new java.util.Properties(properties43);
        java.util.Properties properties46 = null;
        java.util.Properties properties47 = new java.util.Properties(properties46);
        java.lang.Object obj49 = properties45.put((java.lang.Object) properties47, (java.lang.Object) (short) 1);
        boolean boolean50 = properties39.remove((java.lang.Object) false, (java.lang.Object) (short) 1);
        java.util.Properties properties51 = new java.util.Properties(properties39);
        properties27.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties51);
        java.lang.Object obj55 = properties51.setProperty("hi!", "hi!");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties56 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties56.setDefaultJtaTimeout((long) (byte) 10);
        atomikosProperties56.setCheckpointInterval((long) (byte) 0);
        atomikosProperties56.setTransactionManagerUniqueName("");
        java.util.Properties properties63 = atomikosProperties56.asProperties();
        java.lang.String str64 = atomikosProperties56.getTransactionManagerUniqueName();
        atomikosProperties56.setDefaultJtaTimeout((long) (-1));
        java.lang.Object obj67 = properties12.replace((java.lang.Object) "hi!", (java.lang.Object) atomikosProperties56);
        atomikosProperties56.setEnableLogging(true);
        java.util.Properties properties70 = atomikosProperties56.asProperties();
        java.io.PrintStream printStream71 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties70.list(printStream71);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(obj6);
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertNull(obj16);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNull(obj29);
        org.junit.Assert.assertNotNull(objEnumeration30);
        org.junit.Assert.assertNull(obj31);
        org.junit.Assert.assertNull(obj34);
        org.junit.Assert.assertNull(obj41);
        org.junit.Assert.assertNull(obj49);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertNull(obj55);
        org.junit.Assert.assertNotNull(properties63);
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "" + "'", str64, "");
        org.junit.Assert.assertNull(obj67);
        org.junit.Assert.assertNotNull(properties70);
    }

    @Test
    public void test1421() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1421");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setDefaultJtaTimeout((long) (byte) 10);
        long long3 = atomikosProperties0.getDefaultJtaTimeout();
        atomikosProperties0.setTransactionManagerUniqueName("hi!");
        long long6 = atomikosProperties0.getDefaultJtaTimeout();
        atomikosProperties0.setForceShutdownOnVmExit(false);
        atomikosProperties0.setService("{tmlog=}");
        org.junit.Assert.assertTrue("'" + long3 + "' != '" + 10L + "'", long3 == 10L);
        org.junit.Assert.assertTrue("'" + long6 + "' != '" + 10L + "'", long6 == 10L);
    }

    @Test
    public void test1422() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1422");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Properties properties2 = new java.util.Properties(properties0);
        java.util.Properties properties3 = null;
        java.util.Properties properties4 = new java.util.Properties(properties3);
        java.lang.Object obj6 = properties2.put((java.lang.Object) properties4, (java.lang.Object) (short) 1);
        java.util.Properties properties8 = null;
        java.util.Properties properties9 = new java.util.Properties(properties8);
        java.util.Properties properties10 = new java.util.Properties(properties8);
        java.util.Properties properties11 = null;
        java.util.Properties properties12 = new java.util.Properties(properties11);
        java.lang.Object obj14 = properties10.put((java.lang.Object) properties12, (java.lang.Object) (short) 1);
        boolean boolean15 = properties4.remove((java.lang.Object) false, (java.lang.Object) (short) 1);
        java.util.Properties properties16 = new java.util.Properties(properties4);
        boolean boolean17 = properties4.isEmpty();
        java.util.Enumeration<?> wildcardEnumeration18 = properties4.propertyNames();
        java.util.Properties properties19 = null;
        java.util.Properties properties20 = new java.util.Properties(properties19);
        java.util.Properties properties21 = new java.util.Properties(properties19);
        java.lang.Object obj22 = properties21.clone();
        java.util.Properties properties23 = null;
        java.util.Properties properties24 = new java.util.Properties(properties23);
        java.util.Properties properties25 = new java.util.Properties(properties23);
        boolean boolean27 = properties25.containsValue((java.lang.Object) (short) 100);
        java.util.Enumeration<java.lang.Object> objEnumeration28 = properties25.keys();
        java.lang.Object obj29 = properties4.replace((java.lang.Object) properties21, (java.lang.Object) properties25);
        java.io.OutputStream outputStream30 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties21.save(outputStream30, "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(obj6);
        org.junit.Assert.assertNull(obj14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(wildcardEnumeration18);
        org.junit.Assert.assertNotNull(obj22);
        org.junit.Assert.assertEquals(obj22.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj22), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj22), "{}");
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(objEnumeration28);
        org.junit.Assert.assertNull(obj29);
    }

    @Test
    public void test1423() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1423");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Properties properties2 = new java.util.Properties(properties0);
        java.util.Properties properties3 = null;
        java.util.Properties properties4 = new java.util.Properties(properties3);
        java.lang.Object obj6 = properties2.put((java.lang.Object) properties4, (java.lang.Object) (short) 1);
        boolean boolean7 = properties2.isEmpty();
        java.util.Properties properties8 = null;
        java.util.Properties properties9 = new java.util.Properties(properties8);
        java.util.Properties properties10 = new java.util.Properties(properties8);
        boolean boolean11 = properties2.containsKey((java.lang.Object) properties10);
        java.util.Properties properties12 = new java.util.Properties(properties10);
        java.util.Properties properties13 = null;
        java.util.Properties properties14 = new java.util.Properties(properties13);
        java.util.Properties properties15 = new java.util.Properties(properties13);
        boolean boolean17 = properties15.containsValue((java.lang.Object) (short) 100);
        java.util.Properties properties18 = new java.util.Properties(properties15);
        java.lang.String str20 = properties18.getProperty("hi!");
        boolean boolean21 = properties10.containsKey((java.lang.Object) properties18);
        boolean boolean22 = properties10.isEmpty();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties23 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties23.setDefaultJtaTimeout((long) (byte) 10);
        long long26 = atomikosProperties23.getDefaultJtaTimeout();
        atomikosProperties23.setTransactionManagerUniqueName("");
        boolean boolean29 = atomikosProperties23.isEnableLogging();
        java.lang.String str30 = atomikosProperties23.getLogBaseDir();
        java.util.Properties properties31 = atomikosProperties23.asProperties();
        boolean boolean32 = atomikosProperties23.isEnableLogging();
        java.util.Properties properties33 = atomikosProperties23.asProperties();
        boolean boolean34 = properties33.isEmpty();
        java.lang.Object obj35 = properties10.remove((java.lang.Object) boolean34);
        java.util.Properties properties36 = null;
        java.util.Properties properties37 = new java.util.Properties(properties36);
        java.util.Properties properties38 = new java.util.Properties(properties36);
        java.util.Properties properties39 = null;
        java.util.Properties properties40 = new java.util.Properties(properties39);
        java.lang.Object obj42 = properties38.put((java.lang.Object) properties40, (java.lang.Object) (short) 1);
        java.util.Enumeration<java.lang.Object> objEnumeration43 = properties40.elements();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet44 = properties40.entrySet();
        java.util.Set<java.lang.Object> objSet45 = properties40.keySet();
        java.util.Properties properties46 = null;
        java.util.Properties properties47 = new java.util.Properties(properties46);
        java.util.Properties properties48 = new java.util.Properties(properties46);
        java.util.Properties properties49 = null;
        java.util.Properties properties50 = new java.util.Properties(properties49);
        java.lang.Object obj52 = properties48.put((java.lang.Object) properties50, (java.lang.Object) (short) 1);
        properties50.clear();
        int int54 = properties50.size();
        java.util.Properties properties55 = new java.util.Properties(properties50);
        java.util.Properties properties56 = null;
        java.util.Properties properties57 = new java.util.Properties(properties56);
        java.util.Properties properties58 = new java.util.Properties(properties56);
        java.util.Properties properties59 = null;
        java.util.Properties properties60 = new java.util.Properties(properties59);
        java.lang.Object obj62 = properties58.put((java.lang.Object) properties60, (java.lang.Object) (short) 1);
        properties60.clear();
        java.lang.String str65 = properties60.getProperty("");
        java.util.Properties properties66 = null;
        java.util.Properties properties67 = new java.util.Properties(properties66);
        java.util.Properties properties68 = new java.util.Properties(properties66);
        java.util.Properties properties69 = null;
        java.util.Properties properties70 = new java.util.Properties(properties69);
        java.lang.Object obj72 = properties68.put((java.lang.Object) properties70, (java.lang.Object) (short) 1);
        properties60.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties68);
        java.lang.Object obj74 = properties40.put((java.lang.Object) properties50, (java.lang.Object) properties68);
        java.util.Collection<java.lang.Object> objCollection75 = properties68.values();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet76 = properties68.entrySet();
        boolean boolean77 = properties10.contains((java.lang.Object) properties68);
        java.util.Enumeration<java.lang.Object> objEnumeration78 = properties68.keys();
        org.junit.Assert.assertNull(obj6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNull(str20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertTrue("'" + long26 + "' != '" + 10L + "'", long26 == 10L);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNull(str30);
        org.junit.Assert.assertNotNull(properties31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertNotNull(properties33);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNull(obj35);
        org.junit.Assert.assertNull(obj42);
        org.junit.Assert.assertNotNull(objEnumeration43);
        org.junit.Assert.assertNotNull(objEntrySet44);
        org.junit.Assert.assertNotNull(objSet45);
        org.junit.Assert.assertNull(obj52);
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + 0 + "'", int54 == 0);
        org.junit.Assert.assertNull(obj62);
        org.junit.Assert.assertNull(str65);
        org.junit.Assert.assertNull(obj72);
        org.junit.Assert.assertNull(obj74);
        org.junit.Assert.assertNotNull(objCollection75);
        org.junit.Assert.assertNotNull(objEntrySet76);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + false + "'", boolean77 == false);
        org.junit.Assert.assertNotNull(objEnumeration78);
    }

    @Test
    public void test1424() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1424");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Properties properties2 = new java.util.Properties(properties0);
        boolean boolean4 = properties2.containsValue((java.lang.Object) (short) 100);
        java.util.Properties properties5 = null;
        java.util.Properties properties6 = new java.util.Properties(properties5);
        java.util.Properties properties7 = new java.util.Properties(properties5);
        java.util.Properties properties8 = null;
        java.util.Properties properties9 = new java.util.Properties(properties8);
        java.lang.Object obj11 = properties7.put((java.lang.Object) properties9, (java.lang.Object) (short) 1);
        java.util.Enumeration<java.lang.Object> objEnumeration12 = properties9.elements();
        java.lang.Object obj13 = properties2.remove((java.lang.Object) properties9);
        java.lang.Object obj16 = properties9.setProperty("", "");
        java.util.Properties properties17 = null;
        java.util.Properties properties18 = new java.util.Properties(properties17);
        java.util.Properties properties19 = new java.util.Properties(properties17);
        java.util.Properties properties20 = null;
        java.util.Properties properties21 = new java.util.Properties(properties20);
        java.lang.Object obj23 = properties19.put((java.lang.Object) properties21, (java.lang.Object) (short) 1);
        java.util.Properties properties25 = null;
        java.util.Properties properties26 = new java.util.Properties(properties25);
        java.util.Properties properties27 = new java.util.Properties(properties25);
        java.util.Properties properties28 = null;
        java.util.Properties properties29 = new java.util.Properties(properties28);
        java.lang.Object obj31 = properties27.put((java.lang.Object) properties29, (java.lang.Object) (short) 1);
        boolean boolean32 = properties21.remove((java.lang.Object) false, (java.lang.Object) (short) 1);
        java.util.Properties properties33 = new java.util.Properties(properties21);
        properties9.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties33);
        java.util.Properties properties35 = null;
        java.util.Properties properties36 = new java.util.Properties(properties35);
        java.util.Properties properties37 = new java.util.Properties(properties35);
        java.util.Properties properties38 = null;
        java.util.Properties properties39 = new java.util.Properties(properties38);
        java.lang.Object obj41 = properties37.put((java.lang.Object) properties39, (java.lang.Object) (short) 1);
        properties39.clear();
        int int43 = properties39.size();
        java.util.Properties properties44 = null;
        java.util.Properties properties45 = new java.util.Properties(properties44);
        java.util.Properties properties46 = new java.util.Properties(properties44);
        java.util.Properties properties47 = null;
        java.util.Properties properties48 = new java.util.Properties(properties47);
        java.lang.Object obj50 = properties46.put((java.lang.Object) properties48, (java.lang.Object) (short) 1);
        java.util.Properties properties51 = new java.util.Properties(properties48);
        java.util.Properties properties52 = new java.util.Properties(properties48);
        boolean boolean54 = properties39.remove((java.lang.Object) properties48, (java.lang.Object) 10.0f);
        java.util.Enumeration<java.lang.Object> objEnumeration55 = properties48.elements();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties56 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties56.setDefaultJtaTimeout((long) (byte) 10);
        atomikosProperties56.setCheckpointInterval((long) (byte) 0);
        long long61 = atomikosProperties56.getMaxTimeout();
        atomikosProperties56.setSerialJtaTransactions(true);
        java.util.Properties properties64 = new java.util.Properties();
        java.util.Enumeration<?> wildcardEnumeration65 = properties64.propertyNames();
        java.lang.Object obj66 = properties48.replace((java.lang.Object) atomikosProperties56, (java.lang.Object) properties64);
        boolean boolean67 = properties9.contains((java.lang.Object) properties64);
        java.util.Set<java.lang.Object> objSet68 = properties9.keySet();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties69 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties69.setDefaultJtaTimeout((long) (byte) 10);
        long long72 = atomikosProperties69.getDefaultJtaTimeout();
        atomikosProperties69.setTransactionManagerUniqueName("");
        long long75 = atomikosProperties69.getDefaultJtaTimeout();
        boolean boolean76 = atomikosProperties69.isEnableLogging();
        atomikosProperties69.setSerialJtaTransactions(false);
        java.lang.Object obj79 = properties9.remove((java.lang.Object) atomikosProperties69);
        java.lang.String str81 = properties9.getProperty("{{}=tmlog}");
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNull(obj11);
        org.junit.Assert.assertNotNull(objEnumeration12);
        org.junit.Assert.assertNull(obj13);
        org.junit.Assert.assertNull(obj16);
        org.junit.Assert.assertNull(obj23);
        org.junit.Assert.assertNull(obj31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNull(obj41);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 0 + "'", int43 == 0);
        org.junit.Assert.assertNull(obj50);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertNotNull(objEnumeration55);
        org.junit.Assert.assertTrue("'" + long61 + "' != '" + 300000L + "'", long61 == 300000L);
        org.junit.Assert.assertNotNull(wildcardEnumeration65);
        org.junit.Assert.assertNull(obj66);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertNotNull(objSet68);
        org.junit.Assert.assertTrue("'" + long72 + "' != '" + 10L + "'", long72 == 10L);
        org.junit.Assert.assertTrue("'" + long75 + "' != '" + 10L + "'", long75 == 10L);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + true + "'", boolean76 == true);
        org.junit.Assert.assertNull(obj79);
        org.junit.Assert.assertNull(str81);
    }

    @Test
    public void test1425() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1425");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Properties properties2 = new java.util.Properties(properties0);
        java.util.Properties properties3 = null;
        java.util.Properties properties4 = new java.util.Properties(properties3);
        java.lang.Object obj6 = properties2.put((java.lang.Object) properties4, (java.lang.Object) (short) 1);
        java.util.Properties properties8 = null;
        java.util.Properties properties9 = new java.util.Properties(properties8);
        java.util.Properties properties10 = new java.util.Properties(properties8);
        java.util.Properties properties11 = null;
        java.util.Properties properties12 = new java.util.Properties(properties11);
        java.lang.Object obj14 = properties10.put((java.lang.Object) properties12, (java.lang.Object) (short) 1);
        boolean boolean15 = properties4.remove((java.lang.Object) false, (java.lang.Object) (short) 1);
        java.lang.Object obj17 = properties4.remove((java.lang.Object) '#');
        java.util.Set<java.lang.Object> objSet18 = properties4.keySet();
        properties4.clear();
        java.util.Properties properties20 = null;
        java.util.Properties properties21 = new java.util.Properties(properties20);
        java.util.Properties properties22 = new java.util.Properties(properties20);
        java.util.Properties properties23 = null;
        java.util.Properties properties24 = new java.util.Properties(properties23);
        java.lang.Object obj26 = properties22.put((java.lang.Object) properties24, (java.lang.Object) (short) 1);
        java.util.Enumeration<java.lang.Object> objEnumeration27 = properties24.elements();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet28 = properties24.entrySet();
        boolean boolean29 = properties4.equals((java.lang.Object) properties24);
        java.lang.Object obj30 = properties4.clone();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties31 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties31.setDefaultJtaTimeout((long) (byte) 10);
        atomikosProperties31.setCheckpointInterval((long) (byte) 0);
        atomikosProperties31.setEnableLogging(true);
        atomikosProperties31.setThreadedTwoPhaseCommit(false);
        boolean boolean40 = atomikosProperties31.isForceShutdownOnVmExit();
        boolean boolean41 = properties4.containsKey((java.lang.Object) atomikosProperties31);
        atomikosProperties31.setLogBaseDir("{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.tm_unique_name=, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
        atomikosProperties31.setSerialJtaTransactions(true);
        atomikosProperties31.setCheckpointInterval((long) (byte) -1);
        java.util.Properties properties48 = atomikosProperties31.asProperties();
        java.util.Properties properties49 = new java.util.Properties(properties48);
        java.io.PrintStream printStream50 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties49.list(printStream50);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(obj6);
        org.junit.Assert.assertNull(obj14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNull(obj17);
        org.junit.Assert.assertNotNull(objSet18);
        org.junit.Assert.assertNull(obj26);
        org.junit.Assert.assertNotNull(objEnumeration27);
        org.junit.Assert.assertNotNull(objEntrySet28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNotNull(obj30);
        org.junit.Assert.assertEquals(obj30.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj30), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj30), "{}");
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(properties48);
    }

    @Test
    public void test1426() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1426");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Properties properties2 = new java.util.Properties(properties0);
        java.util.Properties properties3 = null;
        java.util.Properties properties4 = new java.util.Properties(properties3);
        java.lang.Object obj6 = properties2.put((java.lang.Object) properties4, (java.lang.Object) (short) 1);
        properties4.clear();
        int int8 = properties4.size();
        java.lang.Object obj11 = properties4.setProperty("hi!", "hi!");
        java.lang.Object obj14 = properties4.setProperty("tmlog", "tmlog");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties15 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties15.setThreadedTwoPhaseCommit(true);
        atomikosProperties15.setMaxActives((int) '#');
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties20 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties20.setDefaultJtaTimeout((long) (byte) 10);
        atomikosProperties20.setCheckpointInterval((long) (byte) 0);
        atomikosProperties20.setTransactionManagerUniqueName("");
        java.util.Properties properties27 = atomikosProperties20.asProperties();
        java.lang.String str28 = atomikosProperties20.getLogBaseName();
        atomikosProperties20.setCheckpointInterval(100L);
        atomikosProperties20.setLogBaseName("");
        atomikosProperties20.setCheckpointInterval((long) (byte) 1);
        java.lang.Object obj35 = properties4.getOrDefault((java.lang.Object) atomikosProperties15, (java.lang.Object) (byte) 1);
        atomikosProperties15.setService("tmlog");
        atomikosProperties15.setMaxActives((int) '4');
        java.lang.String str40 = atomikosProperties15.getLogBaseDir();
        long long41 = atomikosProperties15.getMaxTimeout();
        atomikosProperties15.setCheckpointInterval((long) (short) -1);
        org.junit.Assert.assertNull(obj6);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertNull(obj11);
        org.junit.Assert.assertNull(obj14);
        org.junit.Assert.assertNotNull(properties27);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "tmlog" + "'", str28, "tmlog");
        org.junit.Assert.assertEquals("'" + obj35 + "' != '" + (byte) 1 + "'", obj35, (byte) 1);
        org.junit.Assert.assertNull(str40);
        org.junit.Assert.assertTrue("'" + long41 + "' != '" + 300000L + "'", long41 == 300000L);
    }

    @Test
    public void test1427() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1427");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Properties properties2 = new java.util.Properties(properties0);
        java.util.Properties properties3 = null;
        java.util.Properties properties4 = new java.util.Properties(properties3);
        java.lang.Object obj6 = properties2.put((java.lang.Object) properties4, (java.lang.Object) (short) 1);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties7 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties7.setThreadedTwoPhaseCommit(true);
        atomikosProperties7.setMaxActives((int) (byte) 0);
        boolean boolean12 = properties2.containsValue((java.lang.Object) atomikosProperties7);
        atomikosProperties7.setCheckpointInterval((long) 9);
        boolean boolean15 = atomikosProperties7.isThreadedTwoPhaseCommit();
        java.util.Properties properties16 = atomikosProperties7.asProperties();
        java.io.PrintStream printStream17 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties16.list(printStream17);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(obj6);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(properties16);
    }

    @Test
    public void test1428() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1428");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        boolean boolean1 = atomikosProperties0.isForceShutdownOnVmExit();
        java.util.Properties properties2 = atomikosProperties0.asProperties();
        java.util.Properties properties3 = null;
        java.util.Properties properties4 = new java.util.Properties(properties3);
        java.util.Properties properties5 = new java.util.Properties(properties3);
        java.util.Properties properties6 = null;
        java.util.Properties properties7 = new java.util.Properties(properties6);
        java.lang.Object obj9 = properties5.put((java.lang.Object) properties7, (java.lang.Object) (short) 1);
        properties7.clear();
        int int11 = properties7.size();
        java.util.Properties properties12 = null;
        java.util.Properties properties13 = new java.util.Properties(properties12);
        java.util.Properties properties14 = new java.util.Properties(properties12);
        java.util.Properties properties15 = null;
        java.util.Properties properties16 = new java.util.Properties(properties15);
        java.lang.Object obj18 = properties14.put((java.lang.Object) properties16, (java.lang.Object) (short) 1);
        java.util.Properties properties19 = new java.util.Properties(properties16);
        java.util.Properties properties20 = new java.util.Properties(properties16);
        boolean boolean22 = properties7.remove((java.lang.Object) properties16, (java.lang.Object) 10.0f);
        boolean boolean23 = properties2.containsKey((java.lang.Object) 10.0f);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties25 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties25.setDefaultJtaTimeout((long) (byte) 10);
        atomikosProperties25.setCheckpointInterval((long) (byte) 0);
        atomikosProperties25.setEnableLogging(true);
        java.lang.Object obj32 = properties2.getOrDefault((java.lang.Object) (byte) 0, (java.lang.Object) true);
        java.util.Properties properties33 = new java.util.Properties(properties2);
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet34 = properties2.entrySet();
        java.util.Properties properties35 = new java.util.Properties(properties2);
        java.util.Properties properties36 = null;
        java.util.Properties properties37 = new java.util.Properties(properties36);
        java.util.Properties properties38 = new java.util.Properties(properties36);
        java.util.Properties properties39 = null;
        java.util.Properties properties40 = new java.util.Properties(properties39);
        java.lang.Object obj42 = properties38.put((java.lang.Object) properties40, (java.lang.Object) (short) 1);
        boolean boolean43 = properties38.isEmpty();
        java.util.Properties properties44 = null;
        java.util.Properties properties45 = new java.util.Properties(properties44);
        java.util.Properties properties46 = new java.util.Properties(properties44);
        boolean boolean47 = properties38.containsKey((java.lang.Object) properties46);
        java.util.Properties properties48 = new java.util.Properties(properties46);
        java.lang.Object obj49 = properties48.clone();
        java.util.Properties properties51 = null;
        java.util.Properties properties52 = new java.util.Properties(properties51);
        java.util.Properties properties53 = new java.util.Properties(properties51);
        java.util.Properties properties54 = null;
        java.util.Properties properties55 = new java.util.Properties(properties54);
        java.lang.Object obj57 = properties53.put((java.lang.Object) properties55, (java.lang.Object) (short) 1);
        boolean boolean58 = properties53.isEmpty();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties59 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties59.setDefaultJtaTimeout((long) (byte) 10);
        atomikosProperties59.setCheckpointInterval((long) (byte) 0);
        atomikosProperties59.setTransactionManagerUniqueName("");
        java.util.Properties properties66 = atomikosProperties59.asProperties();
        java.lang.Object obj67 = properties53.remove((java.lang.Object) properties66);
        java.lang.Object obj68 = properties48.putIfAbsent((java.lang.Object) 1L, (java.lang.Object) properties53);
        java.lang.String str70 = properties48.getProperty("{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=0, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog, {}={}}");
        java.util.Properties properties71 = new java.util.Properties(properties48);
        properties71.clear();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties73 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        int int74 = atomikosProperties73.getMaxActives();
        long long75 = atomikosProperties73.getMaxTimeout();
        java.util.Properties properties76 = atomikosProperties73.asProperties();
        java.util.Properties properties77 = atomikosProperties73.asProperties();
        long long78 = atomikosProperties73.getMaxTimeout();
        java.util.Properties properties79 = atomikosProperties73.asProperties();
        atomikosProperties73.setService("");
        java.lang.Object obj82 = properties35.replace((java.lang.Object) properties71, (java.lang.Object) "");
        java.lang.Object obj85 = properties35.setProperty("{{tmlog={com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=0, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.tm_unique_name=, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}, 4=true}={com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=0, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog, {}={}}}", "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=true, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=true, com.atomikos.icatch.max_actives=35, com.atomikos.icatch.log_base_name=tmlog}");
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertNotNull(properties2);
        org.junit.Assert.assertNull(obj9);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertNull(obj18);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertEquals("'" + obj32 + "' != '" + true + "'", obj32, true);
        org.junit.Assert.assertNotNull(objEntrySet34);
        org.junit.Assert.assertNull(obj42);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertNotNull(obj49);
        org.junit.Assert.assertEquals(obj49.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj49), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj49), "{}");
        org.junit.Assert.assertNull(obj57);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertNotNull(properties66);
        org.junit.Assert.assertNull(obj67);
        org.junit.Assert.assertNull(obj68);
        org.junit.Assert.assertNull(str70);
        org.junit.Assert.assertTrue("'" + int74 + "' != '" + 50 + "'", int74 == 50);
        org.junit.Assert.assertTrue("'" + long75 + "' != '" + 300000L + "'", long75 == 300000L);
        org.junit.Assert.assertNotNull(properties76);
        org.junit.Assert.assertNotNull(properties77);
        org.junit.Assert.assertTrue("'" + long78 + "' != '" + 300000L + "'", long78 == 300000L);
        org.junit.Assert.assertNotNull(properties79);
        org.junit.Assert.assertNull(obj82);
        org.junit.Assert.assertNull(obj85);
    }

    @Test
    public void test1429() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1429");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Properties properties2 = new java.util.Properties(properties0);
        java.util.Properties properties3 = null;
        java.util.Properties properties4 = new java.util.Properties(properties3);
        java.lang.Object obj6 = properties2.put((java.lang.Object) properties4, (java.lang.Object) (short) 1);
        java.util.Properties properties8 = null;
        java.util.Properties properties9 = new java.util.Properties(properties8);
        java.util.Properties properties10 = new java.util.Properties(properties8);
        java.util.Properties properties11 = null;
        java.util.Properties properties12 = new java.util.Properties(properties11);
        java.lang.Object obj14 = properties10.put((java.lang.Object) properties12, (java.lang.Object) (short) 1);
        boolean boolean15 = properties4.remove((java.lang.Object) false, (java.lang.Object) (short) 1);
        java.util.Set<java.lang.String> strSet16 = properties4.stringPropertyNames();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties17 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties17.setDefaultJtaTimeout((long) (byte) 10);
        atomikosProperties17.setCheckpointInterval((long) (byte) 0);
        atomikosProperties17.setTransactionManagerUniqueName("");
        boolean boolean24 = atomikosProperties17.isEnableLogging();
        atomikosProperties17.setSerialJtaTransactions(false);
        atomikosProperties17.setLogBaseDir("");
        java.util.Properties properties29 = null;
        java.util.Properties properties30 = new java.util.Properties(properties29);
        java.util.Properties properties31 = new java.util.Properties(properties29);
        java.util.Properties properties32 = null;
        java.util.Properties properties33 = new java.util.Properties(properties32);
        java.lang.Object obj35 = properties31.put((java.lang.Object) properties33, (java.lang.Object) (short) 1);
        java.util.Properties properties36 = new java.util.Properties(properties33);
        boolean boolean37 = properties4.remove((java.lang.Object) "", (java.lang.Object) properties36);
        java.util.Properties properties38 = null;
        java.util.Properties properties39 = new java.util.Properties(properties38);
        java.util.Properties properties40 = new java.util.Properties(properties38);
        java.lang.Object obj41 = properties40.clone();
        boolean boolean42 = properties4.contains(obj41);
        java.util.Collection<java.lang.Object> objCollection43 = properties4.values();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties44 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties44.setDefaultJtaTimeout((long) (byte) 10);
        atomikosProperties44.setCheckpointInterval((long) (byte) 0);
        atomikosProperties44.setTransactionManagerUniqueName("");
        java.util.Properties properties51 = atomikosProperties44.asProperties();
        java.lang.String str52 = atomikosProperties44.getLogBaseName();
        atomikosProperties44.setCheckpointInterval(100L);
        java.lang.String str55 = atomikosProperties44.getTransactionManagerUniqueName();
        atomikosProperties44.setLogBaseName("{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.tm_unique_name=, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
        atomikosProperties44.setThreadedTwoPhaseCommit(true);
        atomikosProperties44.setEnableLogging(false);
        java.lang.Object obj62 = properties4.get((java.lang.Object) atomikosProperties44);
        int int63 = properties4.size();
        java.util.Properties properties64 = null;
        java.util.Properties properties65 = new java.util.Properties(properties64);
        java.util.Properties properties66 = new java.util.Properties(properties64);
        boolean boolean68 = properties66.containsValue((java.lang.Object) (short) 100);
        java.lang.Object obj69 = properties66.clone();
        java.util.Enumeration<?> wildcardEnumeration70 = properties66.propertyNames();
        java.lang.Object obj71 = properties4.get((java.lang.Object) wildcardEnumeration70);
        java.util.Set<java.lang.String> strSet72 = properties4.stringPropertyNames();
        java.util.Enumeration<?> wildcardEnumeration73 = properties4.propertyNames();
        java.lang.String str75 = properties4.getProperty("{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
        org.junit.Assert.assertNull(obj6);
        org.junit.Assert.assertNull(obj14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(strSet16);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNull(obj35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(obj41);
        org.junit.Assert.assertEquals(obj41.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj41), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj41), "{}");
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(objCollection43);
        org.junit.Assert.assertNotNull(properties51);
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "tmlog" + "'", str52, "tmlog");
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "" + "'", str55, "");
        org.junit.Assert.assertNull(obj62);
        org.junit.Assert.assertTrue("'" + int63 + "' != '" + 0 + "'", int63 == 0);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertNotNull(obj69);
        org.junit.Assert.assertEquals(obj69.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj69), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj69), "{}");
        org.junit.Assert.assertNotNull(wildcardEnumeration70);
        org.junit.Assert.assertNull(obj71);
        org.junit.Assert.assertNotNull(strSet72);
        org.junit.Assert.assertNotNull(wildcardEnumeration73);
        org.junit.Assert.assertNull(str75);
    }

    @Test
    public void test1430() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1430");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Properties properties2 = new java.util.Properties(properties0);
        java.util.Properties properties3 = null;
        java.util.Properties properties4 = new java.util.Properties(properties3);
        java.lang.Object obj6 = properties2.put((java.lang.Object) properties4, (java.lang.Object) (short) 1);
        properties4.clear();
        int int8 = properties4.size();
        java.util.Properties properties9 = null;
        java.util.Properties properties10 = new java.util.Properties(properties9);
        java.util.Properties properties11 = new java.util.Properties(properties9);
        java.util.Properties properties12 = null;
        java.util.Properties properties13 = new java.util.Properties(properties12);
        java.lang.Object obj15 = properties11.put((java.lang.Object) properties13, (java.lang.Object) (short) 1);
        java.util.Properties properties16 = new java.util.Properties(properties13);
        java.util.Properties properties17 = new java.util.Properties(properties13);
        boolean boolean19 = properties4.remove((java.lang.Object) properties13, (java.lang.Object) 10.0f);
        java.util.Enumeration<java.lang.Object> objEnumeration20 = properties13.elements();
        java.util.Properties properties21 = new java.util.Properties(properties13);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties22 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        int int23 = atomikosProperties22.getMaxActives();
        long long24 = atomikosProperties22.getMaxTimeout();
        java.util.Properties properties25 = atomikosProperties22.asProperties();
        int int26 = atomikosProperties22.getMaxActives();
        java.lang.Object obj28 = properties21.putIfAbsent((java.lang.Object) atomikosProperties22, (java.lang.Object) 1);
        atomikosProperties22.setLogBaseDir("{}");
        java.util.Properties properties31 = atomikosProperties22.asProperties();
        java.util.Properties properties32 = null;
        java.util.Properties properties33 = new java.util.Properties(properties32);
        java.util.Properties properties34 = new java.util.Properties(properties32);
        java.util.Properties properties35 = null;
        java.util.Properties properties36 = new java.util.Properties(properties35);
        java.lang.Object obj38 = properties34.put((java.lang.Object) properties36, (java.lang.Object) (short) 1);
        java.util.Properties properties40 = null;
        java.util.Properties properties41 = new java.util.Properties(properties40);
        java.util.Properties properties42 = new java.util.Properties(properties40);
        java.util.Properties properties43 = null;
        java.util.Properties properties44 = new java.util.Properties(properties43);
        java.lang.Object obj46 = properties42.put((java.lang.Object) properties44, (java.lang.Object) (short) 1);
        boolean boolean47 = properties36.remove((java.lang.Object) false, (java.lang.Object) (short) 1);
        java.util.Set<java.lang.String> strSet48 = properties36.stringPropertyNames();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties49 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties49.setDefaultJtaTimeout((long) (byte) 10);
        long long52 = atomikosProperties49.getDefaultJtaTimeout();
        java.lang.Object obj53 = properties36.get((java.lang.Object) atomikosProperties49);
        long long54 = atomikosProperties49.getCheckpointInterval();
        atomikosProperties49.setService("hi!");
        java.util.Properties properties57 = null;
        java.util.Properties properties58 = new java.util.Properties(properties57);
        java.util.Properties properties59 = new java.util.Properties(properties57);
        java.util.Properties properties60 = null;
        java.util.Properties properties61 = new java.util.Properties(properties60);
        java.lang.Object obj63 = properties59.put((java.lang.Object) properties61, (java.lang.Object) (short) 1);
        java.util.Properties properties64 = new java.util.Properties(properties61);
        java.util.Properties properties65 = new java.util.Properties(properties61);
        java.util.Set<java.lang.Object> objSet66 = properties65.keySet();
        int int67 = properties65.size();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties68 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties68.setDefaultJtaTimeout((long) (byte) 10);
        atomikosProperties68.setSerialJtaTransactions(false);
        atomikosProperties68.setMaxTimeout((long) (short) -1);
        long long75 = atomikosProperties68.getDefaultJtaTimeout();
        atomikosProperties68.setService("{tmlog={com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=0, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.tm_unique_name=, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}, 4=true}");
        boolean boolean78 = atomikosProperties68.isEnableLogging();
        atomikosProperties68.setForceShutdownOnVmExit(true);
        atomikosProperties68.setLogBaseName("hi!");
        boolean boolean83 = properties31.replace((java.lang.Object) atomikosProperties49, (java.lang.Object) int67, (java.lang.Object) "hi!");
        java.util.Enumeration<java.lang.Object> objEnumeration84 = properties31.elements();
        java.util.Enumeration<java.lang.Object> objEnumeration85 = properties31.keys();
        org.junit.Assert.assertNull(obj6);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertNull(obj15);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(objEnumeration20);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 50 + "'", int23 == 50);
        org.junit.Assert.assertTrue("'" + long24 + "' != '" + 300000L + "'", long24 == 300000L);
        org.junit.Assert.assertNotNull(properties25);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 50 + "'", int26 == 50);
        org.junit.Assert.assertNull(obj28);
        org.junit.Assert.assertNotNull(properties31);
        org.junit.Assert.assertNull(obj38);
        org.junit.Assert.assertNull(obj46);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNotNull(strSet48);
        org.junit.Assert.assertTrue("'" + long52 + "' != '" + 10L + "'", long52 == 10L);
        org.junit.Assert.assertNull(obj53);
        org.junit.Assert.assertTrue("'" + long54 + "' != '" + 500L + "'", long54 == 500L);
        org.junit.Assert.assertNull(obj63);
        org.junit.Assert.assertNotNull(objSet66);
        org.junit.Assert.assertTrue("'" + int67 + "' != '" + 0 + "'", int67 == 0);
        org.junit.Assert.assertTrue("'" + long75 + "' != '" + 10L + "'", long75 == 10L);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + true + "'", boolean78 == true);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + false + "'", boolean83 == false);
        org.junit.Assert.assertNotNull(objEnumeration84);
        org.junit.Assert.assertNotNull(objEnumeration85);
    }

    @Test
    public void test1431() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1431");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        int int1 = atomikosProperties0.getMaxActives();
        long long2 = atomikosProperties0.getMaxTimeout();
        java.util.Properties properties3 = atomikosProperties0.asProperties();
        java.util.Properties properties4 = atomikosProperties0.asProperties();
        long long5 = atomikosProperties0.getMaxTimeout();
        java.lang.String str6 = atomikosProperties0.getTransactionManagerUniqueName();
        atomikosProperties0.setDefaultJtaTimeout((long) (-1));
        atomikosProperties0.setMaxTimeout((-1L));
        boolean boolean11 = atomikosProperties0.isEnableLogging();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 50 + "'", int1 == 50);
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + 300000L + "'", long2 == 300000L);
        org.junit.Assert.assertNotNull(properties3);
        org.junit.Assert.assertNotNull(properties4);
        org.junit.Assert.assertTrue("'" + long5 + "' != '" + 300000L + "'", long5 == 300000L);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
    }

    @Test
    public void test1432() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1432");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Properties properties2 = new java.util.Properties(properties0);
        java.util.Properties properties3 = null;
        java.util.Properties properties4 = new java.util.Properties(properties3);
        java.lang.Object obj6 = properties2.put((java.lang.Object) properties4, (java.lang.Object) (short) 1);
        java.util.Properties properties7 = new java.util.Properties(properties4);
        java.util.Properties properties8 = new java.util.Properties(properties4);
        java.util.Properties properties9 = null;
        java.util.Properties properties10 = new java.util.Properties(properties9);
        java.util.Properties properties11 = new java.util.Properties(properties9);
        java.util.Properties properties12 = null;
        java.util.Properties properties13 = new java.util.Properties(properties12);
        java.lang.Object obj15 = properties11.put((java.lang.Object) properties13, (java.lang.Object) (short) 1);
        java.util.Properties properties17 = null;
        java.util.Properties properties18 = new java.util.Properties(properties17);
        java.util.Properties properties19 = new java.util.Properties(properties17);
        java.util.Properties properties20 = null;
        java.util.Properties properties21 = new java.util.Properties(properties20);
        java.lang.Object obj23 = properties19.put((java.lang.Object) properties21, (java.lang.Object) (short) 1);
        boolean boolean24 = properties13.remove((java.lang.Object) false, (java.lang.Object) (short) 1);
        java.util.Set<java.lang.String> strSet25 = properties13.stringPropertyNames();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties26 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties26.setDefaultJtaTimeout((long) (byte) 10);
        atomikosProperties26.setCheckpointInterval((long) (byte) 0);
        atomikosProperties26.setTransactionManagerUniqueName("");
        boolean boolean33 = atomikosProperties26.isEnableLogging();
        atomikosProperties26.setSerialJtaTransactions(false);
        atomikosProperties26.setLogBaseDir("");
        java.util.Properties properties38 = null;
        java.util.Properties properties39 = new java.util.Properties(properties38);
        java.util.Properties properties40 = new java.util.Properties(properties38);
        java.util.Properties properties41 = null;
        java.util.Properties properties42 = new java.util.Properties(properties41);
        java.lang.Object obj44 = properties40.put((java.lang.Object) properties42, (java.lang.Object) (short) 1);
        java.util.Properties properties45 = new java.util.Properties(properties42);
        boolean boolean46 = properties13.remove((java.lang.Object) "", (java.lang.Object) properties45);
        java.lang.String str48 = properties13.getProperty("{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.tm_unique_name=, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties49 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties49.setDefaultJtaTimeout((long) (byte) 10);
        atomikosProperties49.setCheckpointInterval((long) (byte) 0);
        atomikosProperties49.setTransactionManagerUniqueName("");
        boolean boolean56 = atomikosProperties49.isEnableLogging();
        atomikosProperties49.setSerialJtaTransactions(false);
        java.lang.Object obj59 = properties13.remove((java.lang.Object) atomikosProperties49);
        properties13.clear();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties61 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties61.setDefaultJtaTimeout((long) (byte) 10);
        atomikosProperties61.setCheckpointInterval((long) (byte) 0);
        atomikosProperties61.setTransactionManagerUniqueName("");
        java.util.Properties properties68 = atomikosProperties61.asProperties();
        java.lang.String str69 = atomikosProperties61.getLogBaseName();
        java.util.Properties properties70 = atomikosProperties61.asProperties();
        java.util.Enumeration<java.lang.Object> objEnumeration71 = properties70.keys();
        java.lang.Class<?> wildcardClass72 = properties70.getClass();
        java.lang.Object obj73 = properties8.getOrDefault((java.lang.Object) properties13, (java.lang.Object) wildcardClass72);
        boolean boolean74 = properties13.isEmpty();
        org.junit.Assert.assertNull(obj6);
        org.junit.Assert.assertNull(obj15);
        org.junit.Assert.assertNull(obj23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(strSet25);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNull(obj44);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNull(str48);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertNull(obj59);
        org.junit.Assert.assertNotNull(properties68);
        org.junit.Assert.assertEquals("'" + str69 + "' != '" + "tmlog" + "'", str69, "tmlog");
        org.junit.Assert.assertNotNull(properties70);
        org.junit.Assert.assertNotNull(objEnumeration71);
        org.junit.Assert.assertNotNull(wildcardClass72);
        org.junit.Assert.assertNotNull(obj73);
        org.junit.Assert.assertEquals(obj73.toString(), "class java.util.Properties");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj73), "class java.util.Properties");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj73), "class java.util.Properties");
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + true + "'", boolean74 == true);
    }

    @Test
    public void test1433() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1433");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Properties properties2 = new java.util.Properties(properties0);
        java.util.Properties properties3 = null;
        java.util.Properties properties4 = new java.util.Properties(properties3);
        java.lang.Object obj6 = properties2.put((java.lang.Object) properties4, (java.lang.Object) (short) 1);
        boolean boolean7 = properties2.isEmpty();
        java.util.Properties properties8 = null;
        java.util.Properties properties9 = new java.util.Properties(properties8);
        java.util.Properties properties10 = new java.util.Properties(properties8);
        boolean boolean11 = properties2.containsKey((java.lang.Object) properties10);
        java.util.Properties properties12 = null;
        java.util.Properties properties13 = new java.util.Properties(properties12);
        java.util.Properties properties14 = new java.util.Properties(properties12);
        java.util.Properties properties15 = null;
        java.util.Properties properties16 = new java.util.Properties(properties15);
        java.lang.Object obj18 = properties14.put((java.lang.Object) properties16, (java.lang.Object) (short) 1);
        java.util.Properties properties20 = null;
        java.util.Properties properties21 = new java.util.Properties(properties20);
        java.util.Properties properties22 = new java.util.Properties(properties20);
        java.util.Properties properties23 = null;
        java.util.Properties properties24 = new java.util.Properties(properties23);
        java.lang.Object obj26 = properties22.put((java.lang.Object) properties24, (java.lang.Object) (short) 1);
        boolean boolean27 = properties16.remove((java.lang.Object) false, (java.lang.Object) (short) 1);
        java.util.Set<java.lang.String> strSet28 = properties16.stringPropertyNames();
        boolean boolean29 = properties10.containsKey((java.lang.Object) strSet28);
        java.util.Properties properties30 = null;
        java.util.Properties properties31 = new java.util.Properties(properties30);
        java.util.Properties properties32 = new java.util.Properties(properties30);
        java.util.Properties properties33 = null;
        java.util.Properties properties34 = new java.util.Properties(properties33);
        java.lang.Object obj36 = properties32.put((java.lang.Object) properties34, (java.lang.Object) (short) 1);
        properties34.clear();
        java.lang.String str39 = properties34.getProperty("");
        java.util.Properties properties40 = null;
        java.util.Properties properties41 = new java.util.Properties(properties40);
        java.util.Properties properties42 = new java.util.Properties(properties40);
        java.util.Properties properties43 = null;
        java.util.Properties properties44 = new java.util.Properties(properties43);
        java.lang.Object obj46 = properties42.put((java.lang.Object) properties44, (java.lang.Object) (short) 1);
        properties34.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties42);
        boolean boolean48 = properties10.containsKey((java.lang.Object) properties34);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties50 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties50.setThreadedTwoPhaseCommit(true);
        boolean boolean53 = atomikosProperties50.isEnableLogging();
        java.lang.Object obj54 = properties10.put((java.lang.Object) '4', (java.lang.Object) boolean53);
        java.util.Properties properties55 = new java.util.Properties(properties10);
        boolean boolean56 = properties10.isEmpty();
        java.lang.Object obj59 = properties10.setProperty("tmlog", "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=0, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.tm_unique_name=, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
        java.lang.String str60 = properties10.toString();
        java.lang.Object obj61 = properties10.clone();
        java.util.Enumeration<java.lang.Object> objEnumeration62 = properties10.elements();
        // The following exception was thrown during execution in test generation
        try {
            java.util.Enumeration<?> wildcardEnumeration63 = properties10.propertyNames();
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: java.lang.Character cannot be cast to java.lang.String");
        } catch (java.lang.ClassCastException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(obj6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNull(obj18);
        org.junit.Assert.assertNull(obj26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(strSet28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNull(obj36);
        org.junit.Assert.assertNull(str39);
        org.junit.Assert.assertNull(obj46);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertNull(obj54);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertNull(obj59);
// flaky:         org.junit.Assert.assertEquals("'" + str60 + "' != '" + "{tmlog={com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=0, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.tm_unique_name=, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}, 4=true}" + "'", str60, "{tmlog={com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=0, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.tm_unique_name=, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}, 4=true}");
        org.junit.Assert.assertNotNull(obj61);
// flaky:         org.junit.Assert.assertEquals(obj61.toString(), "{tmlog={com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=0, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.tm_unique_name=, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}, 4=true}");
// flaky:         org.junit.Assert.assertEquals(java.lang.String.valueOf(obj61), "{tmlog={com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=0, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.tm_unique_name=, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}, 4=true}");
// flaky:         org.junit.Assert.assertEquals(java.util.Objects.toString(obj61), "{tmlog={com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=0, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.tm_unique_name=, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}, 4=true}");
        org.junit.Assert.assertNotNull(objEnumeration62);
    }

    @Test
    public void test1434() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1434");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Properties properties2 = new java.util.Properties(properties0);
        java.util.Properties properties3 = null;
        java.util.Properties properties4 = new java.util.Properties(properties3);
        java.lang.Object obj6 = properties2.put((java.lang.Object) properties4, (java.lang.Object) (short) 1);
        java.util.Enumeration<java.lang.Object> objEnumeration7 = properties4.elements();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet8 = properties4.entrySet();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties9 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties9.setDefaultJtaTimeout((long) (byte) 10);
        long long12 = atomikosProperties9.getDefaultJtaTimeout();
        atomikosProperties9.setTransactionManagerUniqueName("");
        boolean boolean15 = atomikosProperties9.isEnableLogging();
        boolean boolean16 = properties4.containsKey((java.lang.Object) boolean15);
        java.util.Properties properties17 = null;
        java.util.Properties properties18 = new java.util.Properties(properties17);
        java.util.Properties properties19 = new java.util.Properties(properties17);
        java.util.Properties properties20 = null;
        java.util.Properties properties21 = new java.util.Properties(properties20);
        java.lang.Object obj23 = properties19.put((java.lang.Object) properties21, (java.lang.Object) (short) 1);
        java.util.Properties properties25 = null;
        java.util.Properties properties26 = new java.util.Properties(properties25);
        java.util.Properties properties27 = new java.util.Properties(properties25);
        java.util.Properties properties28 = null;
        java.util.Properties properties29 = new java.util.Properties(properties28);
        java.lang.Object obj31 = properties27.put((java.lang.Object) properties29, (java.lang.Object) (short) 1);
        boolean boolean32 = properties21.remove((java.lang.Object) false, (java.lang.Object) (short) 1);
        java.util.Set<java.lang.String> strSet33 = properties21.stringPropertyNames();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties34 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties34.setThreadedTwoPhaseCommit(true);
        atomikosProperties34.setMaxActives((int) (byte) 0);
        atomikosProperties34.setEnableLogging(true);
        atomikosProperties34.setForceShutdownOnVmExit(false);
        java.lang.Object obj43 = properties21.get((java.lang.Object) false);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties44 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties44.setDefaultJtaTimeout((long) (byte) 10);
        atomikosProperties44.setCheckpointInterval((long) (byte) 0);
        atomikosProperties44.setTransactionManagerUniqueName("");
        java.util.Properties properties51 = atomikosProperties44.asProperties();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties52 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties52.setThreadedTwoPhaseCommit(true);
        atomikosProperties52.setMaxActives((int) '#');
        atomikosProperties52.setForceShutdownOnVmExit(true);
        java.lang.String str59 = atomikosProperties52.getLogBaseDir();
        java.lang.Object obj60 = properties51.remove((java.lang.Object) atomikosProperties52);
        java.util.Collection<java.lang.Object> objCollection61 = properties51.values();
        boolean boolean62 = properties4.remove((java.lang.Object) false, (java.lang.Object) properties51);
        java.util.Enumeration<?> wildcardEnumeration63 = properties4.propertyNames();
        java.io.OutputStream outputStream64 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties4.save(outputStream64, "{tmlog=}");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(obj6);
        org.junit.Assert.assertNotNull(objEnumeration7);
        org.junit.Assert.assertNotNull(objEntrySet8);
        org.junit.Assert.assertTrue("'" + long12 + "' != '" + 10L + "'", long12 == 10L);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNull(obj23);
        org.junit.Assert.assertNull(obj31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(strSet33);
        org.junit.Assert.assertNull(obj43);
        org.junit.Assert.assertNotNull(properties51);
        org.junit.Assert.assertNull(str59);
        org.junit.Assert.assertNull(obj60);
        org.junit.Assert.assertNotNull(objCollection61);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertNotNull(wildcardEnumeration63);
    }

    @Test
    public void test1435() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1435");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setDefaultJtaTimeout((long) (byte) 10);
        atomikosProperties0.setCheckpointInterval((long) (byte) 0);
        atomikosProperties0.setTransactionManagerUniqueName("");
        java.util.Properties properties7 = atomikosProperties0.asProperties();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties8 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties8.setThreadedTwoPhaseCommit(true);
        atomikosProperties8.setMaxActives((int) '#');
        atomikosProperties8.setForceShutdownOnVmExit(true);
        java.lang.String str15 = atomikosProperties8.getLogBaseDir();
        java.lang.Object obj16 = properties7.remove((java.lang.Object) atomikosProperties8);
        java.util.Collection<java.lang.Object> objCollection17 = properties7.values();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet18 = properties7.entrySet();
        java.io.Reader reader19 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties7.load(reader19);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(properties7);
        org.junit.Assert.assertNull(str15);
        org.junit.Assert.assertNull(obj16);
        org.junit.Assert.assertNotNull(objCollection17);
        org.junit.Assert.assertNotNull(objEntrySet18);
    }

    @Test
    public void test1436() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1436");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setEnableLogging(false);
        atomikosProperties0.setThreadedTwoPhaseCommit(true);
        java.lang.String str5 = atomikosProperties0.getLogBaseName();
        java.util.Properties properties6 = atomikosProperties0.asProperties();
        java.lang.String str7 = properties6.toString();
        java.lang.String str10 = properties6.getProperty("{=}", "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=0, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.tm_unique_name=, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "tmlog" + "'", str5, "tmlog");
        org.junit.Assert.assertNotNull(properties6);
// flaky:         org.junit.Assert.assertEquals("'" + str7 + "' != '" + "{com.atomikos.icatch.enable_logging=false, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=true, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}" + "'", str7, "{com.atomikos.icatch.enable_logging=false, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=true, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=0, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.tm_unique_name=, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}" + "'", str10, "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=0, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.tm_unique_name=, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
    }

    @Test
    public void test1437() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1437");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Properties properties2 = new java.util.Properties(properties0);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties3 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        int int4 = atomikosProperties3.getMaxActives();
        long long5 = atomikosProperties3.getMaxTimeout();
        java.lang.String str6 = atomikosProperties3.getLogBaseDir();
        atomikosProperties3.setCheckpointInterval(100L);
        boolean boolean9 = properties2.equals((java.lang.Object) atomikosProperties3);
        java.util.Properties properties10 = null;
        java.util.Properties properties11 = new java.util.Properties(properties10);
        java.util.Properties properties12 = new java.util.Properties(properties10);
        java.util.Properties properties13 = null;
        java.util.Properties properties14 = new java.util.Properties(properties13);
        java.lang.Object obj16 = properties12.put((java.lang.Object) properties14, (java.lang.Object) (short) 1);
        boolean boolean17 = properties12.isEmpty();
        java.util.Properties properties18 = null;
        java.util.Properties properties19 = new java.util.Properties(properties18);
        java.util.Properties properties20 = new java.util.Properties(properties18);
        boolean boolean21 = properties12.containsKey((java.lang.Object) properties20);
        java.util.Properties properties22 = null;
        java.util.Properties properties23 = new java.util.Properties(properties22);
        java.util.Properties properties24 = new java.util.Properties(properties22);
        java.util.Properties properties25 = null;
        java.util.Properties properties26 = new java.util.Properties(properties25);
        java.lang.Object obj28 = properties24.put((java.lang.Object) properties26, (java.lang.Object) (short) 1);
        java.util.Properties properties30 = null;
        java.util.Properties properties31 = new java.util.Properties(properties30);
        java.util.Properties properties32 = new java.util.Properties(properties30);
        java.util.Properties properties33 = null;
        java.util.Properties properties34 = new java.util.Properties(properties33);
        java.lang.Object obj36 = properties32.put((java.lang.Object) properties34, (java.lang.Object) (short) 1);
        boolean boolean37 = properties26.remove((java.lang.Object) false, (java.lang.Object) (short) 1);
        java.util.Set<java.lang.String> strSet38 = properties26.stringPropertyNames();
        boolean boolean39 = properties20.containsKey((java.lang.Object) strSet38);
        java.util.Properties properties40 = null;
        java.util.Properties properties41 = new java.util.Properties(properties40);
        java.util.Properties properties42 = new java.util.Properties(properties40);
        java.util.Properties properties43 = null;
        java.util.Properties properties44 = new java.util.Properties(properties43);
        java.lang.Object obj46 = properties42.put((java.lang.Object) properties44, (java.lang.Object) (short) 1);
        properties44.clear();
        java.lang.String str49 = properties44.getProperty("");
        java.util.Properties properties50 = null;
        java.util.Properties properties51 = new java.util.Properties(properties50);
        java.util.Properties properties52 = new java.util.Properties(properties50);
        java.util.Properties properties53 = null;
        java.util.Properties properties54 = new java.util.Properties(properties53);
        java.lang.Object obj56 = properties52.put((java.lang.Object) properties54, (java.lang.Object) (short) 1);
        properties44.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties52);
        boolean boolean58 = properties20.containsKey((java.lang.Object) properties44);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties60 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties60.setThreadedTwoPhaseCommit(true);
        boolean boolean63 = atomikosProperties60.isEnableLogging();
        java.lang.Object obj64 = properties20.put((java.lang.Object) '4', (java.lang.Object) boolean63);
        java.util.Properties properties65 = new java.util.Properties(properties20);
        boolean boolean66 = properties20.isEmpty();
        java.lang.Object obj67 = properties2.get((java.lang.Object) properties20);
        java.util.Set<java.lang.Object> objSet68 = properties20.keySet();
        java.util.Enumeration<java.lang.Object> objEnumeration69 = properties20.elements();
        java.io.OutputStream outputStream70 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties20.storeToXML(outputStream70, "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.tm_unique_name=, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}", "");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 50 + "'", int4 == 50);
        org.junit.Assert.assertTrue("'" + long5 + "' != '" + 300000L + "'", long5 == 300000L);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNull(obj16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNull(obj28);
        org.junit.Assert.assertNull(obj36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(strSet38);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNull(obj46);
        org.junit.Assert.assertNull(str49);
        org.junit.Assert.assertNull(obj56);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertNull(obj64);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertNull(obj67);
        org.junit.Assert.assertNotNull(objSet68);
        org.junit.Assert.assertNotNull(objEnumeration69);
    }

    @Test
    public void test1438() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1438");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Properties properties2 = new java.util.Properties(properties0);
        java.util.Properties properties3 = null;
        java.util.Properties properties4 = new java.util.Properties(properties3);
        java.lang.Object obj6 = properties2.put((java.lang.Object) properties4, (java.lang.Object) (short) 1);
        boolean boolean7 = properties2.isEmpty();
        java.util.Properties properties8 = null;
        java.util.Properties properties9 = new java.util.Properties(properties8);
        java.util.Properties properties10 = new java.util.Properties(properties8);
        boolean boolean11 = properties2.containsKey((java.lang.Object) properties10);
        java.util.Properties properties12 = new java.util.Properties(properties10);
        java.lang.Object obj13 = properties12.clone();
        java.util.Properties properties15 = null;
        java.util.Properties properties16 = new java.util.Properties(properties15);
        java.util.Properties properties17 = new java.util.Properties(properties15);
        java.util.Properties properties18 = null;
        java.util.Properties properties19 = new java.util.Properties(properties18);
        java.lang.Object obj21 = properties17.put((java.lang.Object) properties19, (java.lang.Object) (short) 1);
        boolean boolean22 = properties17.isEmpty();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties23 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties23.setDefaultJtaTimeout((long) (byte) 10);
        atomikosProperties23.setCheckpointInterval((long) (byte) 0);
        atomikosProperties23.setTransactionManagerUniqueName("");
        java.util.Properties properties30 = atomikosProperties23.asProperties();
        java.lang.Object obj31 = properties17.remove((java.lang.Object) properties30);
        java.lang.Object obj32 = properties12.putIfAbsent((java.lang.Object) 1L, (java.lang.Object) properties17);
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet33 = properties17.entrySet();
        java.io.OutputStream outputStream34 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties17.storeToXML(outputStream34, "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=52, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.tm_unique_name=, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}", "tmlog");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(obj6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNotNull(obj13);
        org.junit.Assert.assertEquals(obj13.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj13), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj13), "{}");
        org.junit.Assert.assertNull(obj21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(properties30);
        org.junit.Assert.assertNull(obj31);
        org.junit.Assert.assertNull(obj32);
        org.junit.Assert.assertNotNull(objEntrySet33);
    }

    @Test
    public void test1439() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1439");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Properties properties2 = new java.util.Properties(properties0);
        java.util.Properties properties3 = null;
        java.util.Properties properties4 = new java.util.Properties(properties3);
        java.lang.Object obj6 = properties2.put((java.lang.Object) properties4, (java.lang.Object) (short) 1);
        java.util.Properties properties7 = new java.util.Properties(properties4);
        java.util.Enumeration<java.lang.Object> objEnumeration8 = properties7.elements();
        java.util.Enumeration<java.lang.Object> objEnumeration9 = properties7.elements();
        java.util.Properties properties10 = new java.util.Properties(properties7);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties11 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties11.setDefaultJtaTimeout((long) (byte) 10);
        boolean boolean14 = atomikosProperties11.isForceShutdownOnVmExit();
        atomikosProperties11.setMaxActives(0);
        atomikosProperties11.setDefaultJtaTimeout((long) (byte) 10);
        java.util.Properties properties19 = atomikosProperties11.asProperties();
        boolean boolean20 = properties10.equals((java.lang.Object) properties19);
        java.lang.Class<?> wildcardClass21 = properties10.getClass();
        org.junit.Assert.assertNull(obj6);
        org.junit.Assert.assertNotNull(objEnumeration8);
        org.junit.Assert.assertNotNull(objEnumeration9);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(properties19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(wildcardClass21);
    }

    @Test
    public void test1440() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1440");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setThreadedTwoPhaseCommit(true);
        java.lang.String str3 = atomikosProperties0.getService();
        boolean boolean4 = atomikosProperties0.isSerialJtaTransactions();
        java.util.Properties properties5 = atomikosProperties0.asProperties();
        java.io.Reader reader6 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties5.load(reader6);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(properties5);
    }

    @Test
    public void test1441() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1441");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setThreadedTwoPhaseCommit(true);
        atomikosProperties0.setMaxActives((int) '#');
        atomikosProperties0.setForceShutdownOnVmExit(true);
        java.lang.String str7 = atomikosProperties0.getLogBaseDir();
        java.util.Properties properties8 = atomikosProperties0.asProperties();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties9 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties9.setThreadedTwoPhaseCommit(true);
        atomikosProperties9.setMaxActives((int) '#');
        atomikosProperties9.setEnableLogging(true);
        boolean boolean16 = properties8.containsKey((java.lang.Object) true);
        java.lang.String str18 = properties8.getProperty("{}");
        java.util.Properties properties19 = null;
        java.util.Properties properties20 = new java.util.Properties(properties19);
        java.util.Properties properties21 = new java.util.Properties(properties19);
        java.util.Properties properties22 = null;
        java.util.Properties properties23 = new java.util.Properties(properties22);
        java.lang.Object obj25 = properties21.put((java.lang.Object) properties23, (java.lang.Object) (short) 1);
        properties23.clear();
        int int27 = properties23.size();
        java.util.Properties properties28 = new java.util.Properties(properties23);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties29 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        int int30 = atomikosProperties29.getMaxActives();
        long long31 = atomikosProperties29.getMaxTimeout();
        java.util.Properties properties32 = atomikosProperties29.asProperties();
        java.util.Properties properties33 = atomikosProperties29.asProperties();
        java.util.Properties properties34 = null;
        java.util.Properties properties35 = new java.util.Properties(properties34);
        java.util.Properties properties36 = new java.util.Properties(properties34);
        java.util.Properties properties37 = null;
        java.util.Properties properties38 = new java.util.Properties(properties37);
        java.lang.Object obj40 = properties36.put((java.lang.Object) properties38, (java.lang.Object) (short) 1);
        java.util.Enumeration<java.lang.Object> objEnumeration41 = properties38.elements();
        java.lang.Object obj42 = properties23.replace((java.lang.Object) atomikosProperties29, (java.lang.Object) properties38);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties44 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties44.setThreadedTwoPhaseCommit(true);
        java.lang.String str47 = atomikosProperties44.getService();
        boolean boolean48 = atomikosProperties44.isSerialJtaTransactions();
        java.lang.Object obj49 = properties38.getOrDefault((java.lang.Object) "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.tm_unique_name=, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}", (java.lang.Object) atomikosProperties44);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties50 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties50.setDefaultJtaTimeout((long) (byte) 10);
        long long53 = atomikosProperties50.getDefaultJtaTimeout();
        java.lang.String str54 = atomikosProperties50.getTransactionManagerUniqueName();
        atomikosProperties50.setThreadedTwoPhaseCommit(true);
        java.lang.Object obj57 = properties8.putIfAbsent((java.lang.Object) atomikosProperties44, (java.lang.Object) atomikosProperties50);
        java.util.Properties properties58 = new java.util.Properties(properties8);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties59 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties59.setThreadedTwoPhaseCommit(true);
        atomikosProperties59.setMaxActives((int) (byte) 0);
        atomikosProperties59.setEnableLogging(true);
        atomikosProperties59.setMaxActives((int) (byte) 1);
        atomikosProperties59.setTransactionManagerUniqueName("hi!");
        java.lang.String str70 = atomikosProperties59.getLogBaseDir();
        atomikosProperties59.setLogBaseDir("{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.tm_unique_name=, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
        java.lang.Object obj73 = properties8.get((java.lang.Object) atomikosProperties59);
        java.util.Properties properties74 = null;
        java.util.Properties properties75 = new java.util.Properties(properties74);
        java.util.Properties properties76 = new java.util.Properties(properties74);
        boolean boolean78 = properties76.containsValue((java.lang.Object) (short) 100);
        java.util.Properties properties79 = new java.util.Properties(properties76);
        java.lang.String str81 = properties79.getProperty("hi!");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties82 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties82.setDefaultJtaTimeout((long) (byte) 10);
        long long85 = atomikosProperties82.getDefaultJtaTimeout();
        atomikosProperties82.setTransactionManagerUniqueName("hi!");
        atomikosProperties82.setLogBaseName("tmlog");
        boolean boolean90 = atomikosProperties82.isSerialJtaTransactions();
        java.util.Properties properties91 = atomikosProperties82.asProperties();
        boolean boolean92 = properties79.equals((java.lang.Object) atomikosProperties82);
        boolean boolean93 = properties8.equals((java.lang.Object) properties79);
        java.io.OutputStream outputStream94 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties8.storeToXML(outputStream94, "");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNotNull(properties8);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNull(str18);
        org.junit.Assert.assertNull(obj25);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 0 + "'", int27 == 0);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 50 + "'", int30 == 50);
        org.junit.Assert.assertTrue("'" + long31 + "' != '" + 300000L + "'", long31 == 300000L);
        org.junit.Assert.assertNotNull(properties32);
        org.junit.Assert.assertNotNull(properties33);
        org.junit.Assert.assertNull(obj40);
        org.junit.Assert.assertNotNull(objEnumeration41);
        org.junit.Assert.assertNull(obj42);
        org.junit.Assert.assertNull(str47);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertNotNull(obj49);
        org.junit.Assert.assertTrue("'" + long53 + "' != '" + 10L + "'", long53 == 10L);
        org.junit.Assert.assertNull(str54);
        org.junit.Assert.assertNull(obj57);
        org.junit.Assert.assertNull(str70);
        org.junit.Assert.assertNull(obj73);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + false + "'", boolean78 == false);
        org.junit.Assert.assertNull(str81);
        org.junit.Assert.assertTrue("'" + long85 + "' != '" + 10L + "'", long85 == 10L);
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + true + "'", boolean90 == true);
        org.junit.Assert.assertNotNull(properties91);
        org.junit.Assert.assertTrue("'" + boolean92 + "' != '" + false + "'", boolean92 == false);
        org.junit.Assert.assertTrue("'" + boolean93 + "' != '" + false + "'", boolean93 == false);
    }

    @Test
    public void test1442() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1442");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setDefaultJtaTimeout((long) (byte) 10);
        long long3 = atomikosProperties0.getDefaultJtaTimeout();
        atomikosProperties0.setTransactionManagerUniqueName("hi!");
        atomikosProperties0.setLogBaseName("tmlog");
        atomikosProperties0.setCheckpointInterval(300000L);
        long long10 = atomikosProperties0.getMaxTimeout();
        boolean boolean11 = atomikosProperties0.isSerialJtaTransactions();
        org.junit.Assert.assertTrue("'" + long3 + "' != '" + 10L + "'", long3 == 10L);
        org.junit.Assert.assertTrue("'" + long10 + "' != '" + 300000L + "'", long10 == 300000L);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
    }

    @Test
    public void test1443() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1443");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setDefaultJtaTimeout((long) (byte) 10);
        long long3 = atomikosProperties0.getDefaultJtaTimeout();
        atomikosProperties0.setTransactionManagerUniqueName("");
        boolean boolean6 = atomikosProperties0.isEnableLogging();
        java.lang.String str7 = atomikosProperties0.getLogBaseDir();
        java.util.Properties properties8 = atomikosProperties0.asProperties();
        boolean boolean9 = atomikosProperties0.isEnableLogging();
        long long10 = atomikosProperties0.getDefaultJtaTimeout();
        atomikosProperties0.setMaxActives((int) (short) 10);
        long long13 = atomikosProperties0.getDefaultJtaTimeout();
        atomikosProperties0.setEnableLogging(false);
        atomikosProperties0.setForceShutdownOnVmExit(false);
        org.junit.Assert.assertTrue("'" + long3 + "' != '" + 10L + "'", long3 == 10L);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNotNull(properties8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertTrue("'" + long10 + "' != '" + 10L + "'", long10 == 10L);
        org.junit.Assert.assertTrue("'" + long13 + "' != '" + 10L + "'", long13 == 10L);
    }

    @Test
    public void test1444() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1444");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setDefaultJtaTimeout((long) (byte) 10);
        atomikosProperties0.setCheckpointInterval((long) (byte) 0);
        atomikosProperties0.setTransactionManagerUniqueName("");
        java.util.Properties properties7 = atomikosProperties0.asProperties();
        atomikosProperties0.setDefaultJtaTimeout((long) 'a');
        atomikosProperties0.setLogBaseName("");
        org.junit.Assert.assertNotNull(properties7);
    }

    @Test
    public void test1445() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1445");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setThreadedTwoPhaseCommit(true);
        atomikosProperties0.setMaxActives((int) '#');
        java.lang.String str5 = atomikosProperties0.getLogBaseName();
        atomikosProperties0.setThreadedTwoPhaseCommit(false);
        java.util.Properties properties8 = atomikosProperties0.asProperties();
        boolean boolean9 = properties8.isEmpty();
        java.io.PrintStream printStream10 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties8.list(printStream10);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "tmlog" + "'", str5, "tmlog");
        org.junit.Assert.assertNotNull(properties8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
    }

    @Test
    public void test1446() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1446");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setDefaultJtaTimeout((long) (byte) 10);
        long long3 = atomikosProperties0.getDefaultJtaTimeout();
        atomikosProperties0.setTransactionManagerUniqueName("");
        boolean boolean6 = atomikosProperties0.isEnableLogging();
        atomikosProperties0.setDefaultJtaTimeout((long) '4');
        long long9 = atomikosProperties0.getCheckpointInterval();
        java.lang.String str10 = atomikosProperties0.getLogBaseDir();
        boolean boolean11 = atomikosProperties0.isForceShutdownOnVmExit();
        java.util.Properties properties12 = atomikosProperties0.asProperties();
        java.io.InputStream inputStream13 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties12.loadFromXML(inputStream13);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + long3 + "' != '" + 10L + "'", long3 == 10L);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue("'" + long9 + "' != '" + 500L + "'", long9 == 500L);
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(properties12);
    }

    @Test
    public void test1447() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1447");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setDefaultJtaTimeout((long) (byte) 10);
        long long3 = atomikosProperties0.getDefaultJtaTimeout();
        atomikosProperties0.setTransactionManagerUniqueName("hi!");
        atomikosProperties0.setTransactionManagerUniqueName("{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=0, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.tm_unique_name=, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
        atomikosProperties0.setService("");
        atomikosProperties0.setDefaultJtaTimeout(0L);
        java.lang.String str12 = atomikosProperties0.getTransactionManagerUniqueName();
        boolean boolean13 = atomikosProperties0.isForceShutdownOnVmExit();
        org.junit.Assert.assertTrue("'" + long3 + "' != '" + 10L + "'", long3 == 10L);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=0, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.tm_unique_name=, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}" + "'", str12, "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=0, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.tm_unique_name=, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
    }

    @Test
    public void test1448() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1448");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setDefaultJtaTimeout((long) (byte) 10);
        long long3 = atomikosProperties0.getDefaultJtaTimeout();
        atomikosProperties0.setTransactionManagerUniqueName("");
        long long6 = atomikosProperties0.getMaxTimeout();
        java.util.Properties properties7 = atomikosProperties0.asProperties();
        java.io.Writer writer8 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties7.store(writer8, "{com.atomikos.icatch.enable_logging=false, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=true, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + long3 + "' != '" + 10L + "'", long3 == 10L);
        org.junit.Assert.assertTrue("'" + long6 + "' != '" + 300000L + "'", long6 == 300000L);
        org.junit.Assert.assertNotNull(properties7);
    }

    @Test
    public void test1449() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1449");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setDefaultJtaTimeout((long) (byte) 10);
        atomikosProperties0.setCheckpointInterval((long) (byte) 0);
        atomikosProperties0.setEnableLogging(true);
        java.lang.String str7 = atomikosProperties0.getLogBaseName();
        java.lang.String str8 = atomikosProperties0.getTransactionManagerUniqueName();
        atomikosProperties0.setMaxActives((int) '4');
        boolean boolean11 = atomikosProperties0.isThreadedTwoPhaseCommit();
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "tmlog" + "'", str7, "tmlog");
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
    }

    @Test
    public void test1450() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1450");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Properties properties2 = new java.util.Properties(properties0);
        java.util.Properties properties3 = null;
        java.util.Properties properties4 = new java.util.Properties(properties3);
        java.lang.Object obj6 = properties2.put((java.lang.Object) properties4, (java.lang.Object) (short) 1);
        properties4.clear();
        java.lang.String str9 = properties4.getProperty("");
        java.util.Properties properties10 = null;
        java.util.Properties properties11 = new java.util.Properties(properties10);
        java.util.Properties properties12 = new java.util.Properties(properties10);
        java.util.Properties properties13 = null;
        java.util.Properties properties14 = new java.util.Properties(properties13);
        java.lang.Object obj16 = properties12.put((java.lang.Object) properties14, (java.lang.Object) (short) 1);
        properties4.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties12);
        java.util.Collection<java.lang.Object> objCollection18 = properties12.values();
        java.lang.String str21 = properties12.getProperty("hi!", "");
        org.junit.Assert.assertNull(obj6);
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertNull(obj16);
        org.junit.Assert.assertNotNull(objCollection18);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "" + "'", str21, "");
    }

    @Test
    public void test1451() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1451");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        int int1 = atomikosProperties0.getMaxActives();
        long long2 = atomikosProperties0.getMaxTimeout();
        java.util.Properties properties3 = atomikosProperties0.asProperties();
        atomikosProperties0.setTransactionManagerUniqueName("");
        atomikosProperties0.setMaxTimeout((-1L));
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 50 + "'", int1 == 50);
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + 300000L + "'", long2 == 300000L);
        org.junit.Assert.assertNotNull(properties3);
    }

    @Test
    public void test1452() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1452");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Properties properties2 = new java.util.Properties(properties0);
        java.util.Properties properties3 = null;
        java.util.Properties properties4 = new java.util.Properties(properties3);
        java.lang.Object obj6 = properties2.put((java.lang.Object) properties4, (java.lang.Object) (short) 1);
        boolean boolean7 = properties2.isEmpty();
        java.util.Properties properties8 = null;
        java.util.Properties properties9 = new java.util.Properties(properties8);
        java.util.Properties properties10 = new java.util.Properties(properties8);
        boolean boolean11 = properties2.containsKey((java.lang.Object) properties10);
        java.util.Properties properties12 = new java.util.Properties(properties2);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties13 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties13.setDefaultJtaTimeout((long) (byte) 10);
        atomikosProperties13.setCheckpointInterval((long) (byte) 0);
        atomikosProperties13.setTransactionManagerUniqueName("");
        java.util.Properties properties20 = atomikosProperties13.asProperties();
        java.lang.String str21 = atomikosProperties13.getTransactionManagerUniqueName();
        atomikosProperties13.setDefaultJtaTimeout((long) (-1));
        java.util.Properties properties24 = atomikosProperties13.asProperties();
        java.util.Properties properties25 = null;
        java.util.Properties properties26 = new java.util.Properties(properties25);
        java.util.Properties properties27 = new java.util.Properties(properties25);
        java.util.Properties properties28 = null;
        java.util.Properties properties29 = new java.util.Properties(properties28);
        java.lang.Object obj31 = properties27.put((java.lang.Object) properties29, (java.lang.Object) (short) 1);
        java.util.Properties properties33 = null;
        java.util.Properties properties34 = new java.util.Properties(properties33);
        java.util.Properties properties35 = new java.util.Properties(properties33);
        java.util.Properties properties36 = null;
        java.util.Properties properties37 = new java.util.Properties(properties36);
        java.lang.Object obj39 = properties35.put((java.lang.Object) properties37, (java.lang.Object) (short) 1);
        boolean boolean40 = properties29.remove((java.lang.Object) false, (java.lang.Object) (short) 1);
        java.lang.Object obj42 = properties29.remove((java.lang.Object) '#');
        java.util.Set<java.lang.Object> objSet43 = properties29.keySet();
        properties29.clear();
        java.util.Properties properties45 = null;
        java.util.Properties properties46 = new java.util.Properties(properties45);
        java.util.Properties properties47 = new java.util.Properties(properties45);
        java.util.Properties properties48 = null;
        java.util.Properties properties49 = new java.util.Properties(properties48);
        java.lang.Object obj51 = properties47.put((java.lang.Object) properties49, (java.lang.Object) (short) 1);
        java.util.Enumeration<java.lang.Object> objEnumeration52 = properties49.elements();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet53 = properties49.entrySet();
        boolean boolean54 = properties29.equals((java.lang.Object) properties49);
        java.util.Enumeration<java.lang.Object> objEnumeration55 = properties49.elements();
        int int56 = properties49.size();
        java.util.Collection<java.lang.Object> objCollection57 = properties49.values();
        java.lang.Object obj58 = properties2.putIfAbsent((java.lang.Object) atomikosProperties13, (java.lang.Object) properties49);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties59 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties59.setThreadedTwoPhaseCommit(true);
        atomikosProperties59.setMaxActives((int) (byte) 0);
        atomikosProperties59.setDefaultJtaTimeout((long) 10);
        atomikosProperties59.setDefaultJtaTimeout((long) (short) 10);
        java.util.Properties properties68 = atomikosProperties59.asProperties();
        properties2.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties68);
        java.lang.String str72 = properties2.getProperty("{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=0, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=true, com.atomikos.icatch.max_actives=100, com.atomikos.icatch.log_base_name=tmlog}", "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=0, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=true, com.atomikos.icatch.max_actives=100, com.atomikos.icatch.log_base_name=tmlog}");
        org.junit.Assert.assertNull(obj6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNotNull(properties20);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "" + "'", str21, "");
        org.junit.Assert.assertNotNull(properties24);
        org.junit.Assert.assertNull(obj31);
        org.junit.Assert.assertNull(obj39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNull(obj42);
        org.junit.Assert.assertNotNull(objSet43);
        org.junit.Assert.assertNull(obj51);
        org.junit.Assert.assertNotNull(objEnumeration52);
        org.junit.Assert.assertNotNull(objEntrySet53);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertNotNull(objEnumeration55);
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + 0 + "'", int56 == 0);
        org.junit.Assert.assertNotNull(objCollection57);
        org.junit.Assert.assertNull(obj58);
        org.junit.Assert.assertNotNull(properties68);
        org.junit.Assert.assertEquals("'" + str72 + "' != '" + "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=0, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=true, com.atomikos.icatch.max_actives=100, com.atomikos.icatch.log_base_name=tmlog}" + "'", str72, "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=0, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=true, com.atomikos.icatch.max_actives=100, com.atomikos.icatch.log_base_name=tmlog}");
    }

    @Test
    public void test1453() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1453");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Properties properties2 = new java.util.Properties(properties0);
        java.util.Properties properties3 = null;
        java.util.Properties properties4 = new java.util.Properties(properties3);
        java.lang.Object obj6 = properties2.put((java.lang.Object) properties4, (java.lang.Object) (short) 1);
        java.util.Properties properties8 = null;
        java.util.Properties properties9 = new java.util.Properties(properties8);
        java.util.Properties properties10 = new java.util.Properties(properties8);
        java.util.Properties properties11 = null;
        java.util.Properties properties12 = new java.util.Properties(properties11);
        java.lang.Object obj14 = properties10.put((java.lang.Object) properties12, (java.lang.Object) (short) 1);
        boolean boolean15 = properties4.remove((java.lang.Object) false, (java.lang.Object) (short) 1);
        java.util.Set<java.lang.String> strSet16 = properties4.stringPropertyNames();
        java.lang.Object obj17 = properties4.clone();
        java.util.Properties properties18 = new java.util.Properties(properties4);
        java.util.Enumeration<java.lang.Object> objEnumeration19 = properties4.keys();
        java.lang.String str20 = properties4.toString();
        java.lang.String str21 = properties4.toString();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties22 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties22.setDefaultJtaTimeout((long) (byte) 10);
        long long25 = atomikosProperties22.getDefaultJtaTimeout();
        atomikosProperties22.setTransactionManagerUniqueName("");
        boolean boolean28 = atomikosProperties22.isEnableLogging();
        atomikosProperties22.setLogBaseName("tmlog");
        boolean boolean31 = atomikosProperties22.isThreadedTwoPhaseCommit();
        java.lang.String str32 = atomikosProperties22.getLogBaseDir();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj33 = properties4.get((java.lang.Object) str32);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(obj6);
        org.junit.Assert.assertNull(obj14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(strSet16);
        org.junit.Assert.assertNotNull(obj17);
        org.junit.Assert.assertEquals(obj17.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj17), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj17), "{}");
        org.junit.Assert.assertNotNull(objEnumeration19);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "{}" + "'", str20, "{}");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "{}" + "'", str21, "{}");
        org.junit.Assert.assertTrue("'" + long25 + "' != '" + 10L + "'", long25 == 10L);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNull(str32);
    }

    @Test
    public void test1454() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1454");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Properties properties2 = new java.util.Properties(properties0);
        java.util.Properties properties3 = null;
        java.util.Properties properties4 = new java.util.Properties(properties3);
        java.lang.Object obj6 = properties2.put((java.lang.Object) properties4, (java.lang.Object) (short) 1);
        properties4.clear();
        java.lang.String str9 = properties4.getProperty("");
        java.util.Properties properties10 = new java.util.Properties(properties4);
        java.util.Properties properties11 = null;
        java.util.Properties properties12 = new java.util.Properties(properties11);
        java.util.Properties properties13 = new java.util.Properties(properties11);
        java.util.Properties properties14 = null;
        java.util.Properties properties15 = new java.util.Properties(properties14);
        java.lang.Object obj17 = properties13.put((java.lang.Object) properties15, (java.lang.Object) (short) 1);
        boolean boolean18 = properties13.isEmpty();
        java.util.Properties properties19 = null;
        java.util.Properties properties20 = new java.util.Properties(properties19);
        java.util.Properties properties21 = new java.util.Properties(properties19);
        boolean boolean22 = properties13.containsKey((java.lang.Object) properties21);
        java.util.Properties properties23 = new java.util.Properties(properties21);
        java.util.Properties properties24 = null;
        java.util.Properties properties25 = new java.util.Properties(properties24);
        java.util.Properties properties26 = new java.util.Properties(properties24);
        java.util.Properties properties27 = null;
        java.util.Properties properties28 = new java.util.Properties(properties27);
        java.lang.Object obj30 = properties26.put((java.lang.Object) properties28, (java.lang.Object) (short) 1);
        boolean boolean31 = properties26.isEmpty();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties32 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties32.setDefaultJtaTimeout((long) (byte) 10);
        atomikosProperties32.setCheckpointInterval((long) (byte) 0);
        atomikosProperties32.setTransactionManagerUniqueName("");
        java.util.Properties properties39 = atomikosProperties32.asProperties();
        java.lang.Object obj40 = properties26.remove((java.lang.Object) properties39);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties41 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties41.setDefaultJtaTimeout((long) (byte) 10);
        atomikosProperties41.setCheckpointInterval((long) (byte) 0);
        atomikosProperties41.setTransactionManagerUniqueName("");
        java.lang.Object obj48 = properties39.remove((java.lang.Object) atomikosProperties41);
        java.util.Enumeration<java.lang.Object> objEnumeration49 = properties39.elements();
        java.lang.Object obj50 = properties23.get((java.lang.Object) properties39);
        java.lang.Object obj51 = properties23.clone();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties52 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        boolean boolean53 = atomikosProperties52.isForceShutdownOnVmExit();
        java.util.Properties properties54 = atomikosProperties52.asProperties();
        java.util.Properties properties55 = null;
        java.util.Properties properties56 = new java.util.Properties(properties55);
        java.util.Properties properties57 = new java.util.Properties(properties55);
        java.util.Properties properties58 = null;
        java.util.Properties properties59 = new java.util.Properties(properties58);
        java.lang.Object obj61 = properties57.put((java.lang.Object) properties59, (java.lang.Object) (short) 1);
        properties59.clear();
        int int63 = properties59.size();
        java.util.Properties properties64 = null;
        java.util.Properties properties65 = new java.util.Properties(properties64);
        java.util.Properties properties66 = new java.util.Properties(properties64);
        java.util.Properties properties67 = null;
        java.util.Properties properties68 = new java.util.Properties(properties67);
        java.lang.Object obj70 = properties66.put((java.lang.Object) properties68, (java.lang.Object) (short) 1);
        java.util.Properties properties71 = new java.util.Properties(properties68);
        java.util.Properties properties72 = new java.util.Properties(properties68);
        boolean boolean74 = properties59.remove((java.lang.Object) properties68, (java.lang.Object) 10.0f);
        boolean boolean75 = properties54.containsKey((java.lang.Object) 10.0f);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties77 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties77.setDefaultJtaTimeout((long) (byte) 10);
        atomikosProperties77.setCheckpointInterval((long) (byte) 0);
        atomikosProperties77.setEnableLogging(true);
        java.lang.Object obj84 = properties54.getOrDefault((java.lang.Object) (byte) 0, (java.lang.Object) true);
        java.util.Properties properties85 = new java.util.Properties(properties54);
        java.lang.Object obj86 = properties10.getOrDefault((java.lang.Object) properties23, (java.lang.Object) properties85);
        java.lang.String str87 = properties23.toString();
        java.io.PrintWriter printWriter88 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties23.list(printWriter88);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(obj6);
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertNull(obj17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNull(obj30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(properties39);
        org.junit.Assert.assertNull(obj40);
        org.junit.Assert.assertNull(obj48);
        org.junit.Assert.assertNotNull(objEnumeration49);
        org.junit.Assert.assertNull(obj50);
        org.junit.Assert.assertNotNull(obj51);
        org.junit.Assert.assertEquals(obj51.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj51), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj51), "{}");
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertNotNull(properties54);
        org.junit.Assert.assertNull(obj61);
        org.junit.Assert.assertTrue("'" + int63 + "' != '" + 0 + "'", int63 == 0);
        org.junit.Assert.assertNull(obj70);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
        org.junit.Assert.assertEquals("'" + obj84 + "' != '" + true + "'", obj84, true);
        org.junit.Assert.assertNotNull(obj86);
        org.junit.Assert.assertEquals(obj86.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj86), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj86), "{}");
        org.junit.Assert.assertEquals("'" + str87 + "' != '" + "{}" + "'", str87, "{}");
    }

    @Test
    public void test1455() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1455");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Properties properties2 = new java.util.Properties(properties0);
        java.util.Properties properties3 = null;
        java.util.Properties properties4 = new java.util.Properties(properties3);
        java.lang.Object obj6 = properties2.put((java.lang.Object) properties4, (java.lang.Object) (short) 1);
        boolean boolean7 = properties2.isEmpty();
        java.util.Properties properties8 = null;
        java.util.Properties properties9 = new java.util.Properties(properties8);
        java.util.Properties properties10 = new java.util.Properties(properties8);
        boolean boolean11 = properties2.containsKey((java.lang.Object) properties10);
        java.util.Properties properties12 = new java.util.Properties(properties10);
        java.lang.Object obj13 = properties12.clone();
        java.util.Properties properties15 = null;
        java.util.Properties properties16 = new java.util.Properties(properties15);
        java.util.Properties properties17 = new java.util.Properties(properties15);
        java.util.Properties properties18 = null;
        java.util.Properties properties19 = new java.util.Properties(properties18);
        java.lang.Object obj21 = properties17.put((java.lang.Object) properties19, (java.lang.Object) (short) 1);
        boolean boolean22 = properties17.isEmpty();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties23 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties23.setDefaultJtaTimeout((long) (byte) 10);
        atomikosProperties23.setCheckpointInterval((long) (byte) 0);
        atomikosProperties23.setTransactionManagerUniqueName("");
        java.util.Properties properties30 = atomikosProperties23.asProperties();
        java.lang.Object obj31 = properties17.remove((java.lang.Object) properties30);
        java.lang.Object obj32 = properties12.putIfAbsent((java.lang.Object) 1L, (java.lang.Object) properties17);
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet33 = properties17.entrySet();
        java.util.Properties properties34 = new java.util.Properties(properties17);
        java.util.Properties properties35 = null;
        java.util.Properties properties36 = new java.util.Properties(properties35);
        java.util.Properties properties37 = new java.util.Properties(properties35);
        java.util.Properties properties38 = null;
        java.util.Properties properties39 = new java.util.Properties(properties38);
        java.lang.Object obj41 = properties37.put((java.lang.Object) properties39, (java.lang.Object) (short) 1);
        properties39.clear();
        int int43 = properties39.size();
        java.util.Properties properties44 = new java.util.Properties(properties39);
        java.lang.Object obj45 = properties34.remove((java.lang.Object) properties39);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties46 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties46.setDefaultJtaTimeout((long) (byte) 10);
        atomikosProperties46.setCheckpointInterval((long) (byte) 0);
        atomikosProperties46.setTransactionManagerUniqueName("");
        java.util.Properties properties53 = atomikosProperties46.asProperties();
        java.lang.String str54 = atomikosProperties46.getLogBaseName();
        atomikosProperties46.setCheckpointInterval(100L);
        atomikosProperties46.setLogBaseName("");
        atomikosProperties46.setCheckpointInterval((long) (byte) 1);
        boolean boolean61 = properties39.containsValue((java.lang.Object) (byte) 1);
        java.io.OutputStream outputStream62 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties39.save(outputStream62, "");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(obj6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNotNull(obj13);
        org.junit.Assert.assertEquals(obj13.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj13), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj13), "{}");
        org.junit.Assert.assertNull(obj21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(properties30);
        org.junit.Assert.assertNull(obj31);
        org.junit.Assert.assertNull(obj32);
        org.junit.Assert.assertNotNull(objEntrySet33);
        org.junit.Assert.assertNull(obj41);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 0 + "'", int43 == 0);
        org.junit.Assert.assertNull(obj45);
        org.junit.Assert.assertNotNull(properties53);
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "tmlog" + "'", str54, "tmlog");
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
    }

    @Test
    public void test1456() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1456");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Properties properties2 = new java.util.Properties(properties0);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties3 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        int int4 = atomikosProperties3.getMaxActives();
        long long5 = atomikosProperties3.getMaxTimeout();
        java.lang.String str6 = atomikosProperties3.getLogBaseDir();
        atomikosProperties3.setCheckpointInterval(100L);
        boolean boolean9 = properties2.equals((java.lang.Object) atomikosProperties3);
        boolean boolean10 = atomikosProperties3.isForceShutdownOnVmExit();
        java.lang.Class<?> wildcardClass11 = atomikosProperties3.getClass();
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 50 + "'", int4 == 50);
        org.junit.Assert.assertTrue("'" + long5 + "' != '" + 300000L + "'", long5 == 300000L);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(wildcardClass11);
    }

    @Test
    public void test1457() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1457");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        int int1 = atomikosProperties0.getMaxActives();
        java.util.Properties properties2 = atomikosProperties0.asProperties();
        java.util.Properties properties3 = null;
        java.util.Properties properties4 = new java.util.Properties(properties3);
        java.util.Properties properties5 = new java.util.Properties(properties3);
        boolean boolean7 = properties5.containsValue((java.lang.Object) (short) 100);
        java.util.Properties properties8 = null;
        java.util.Properties properties9 = new java.util.Properties(properties8);
        java.util.Properties properties10 = new java.util.Properties(properties8);
        java.util.Properties properties11 = null;
        java.util.Properties properties12 = new java.util.Properties(properties11);
        java.lang.Object obj14 = properties10.put((java.lang.Object) properties12, (java.lang.Object) (short) 1);
        java.util.Enumeration<java.lang.Object> objEnumeration15 = properties12.elements();
        java.lang.Object obj16 = properties5.remove((java.lang.Object) properties12);
        java.util.Properties properties17 = null;
        java.util.Properties properties18 = new java.util.Properties(properties17);
        java.util.Properties properties19 = new java.util.Properties(properties17);
        java.util.Properties properties20 = null;
        java.util.Properties properties21 = new java.util.Properties(properties20);
        java.lang.Object obj23 = properties19.put((java.lang.Object) properties21, (java.lang.Object) (short) 1);
        java.util.Enumeration<java.lang.Object> objEnumeration24 = properties21.elements();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet25 = properties21.entrySet();
        java.util.Set<java.lang.Object> objSet26 = properties21.keySet();
        java.util.Properties properties27 = null;
        java.util.Properties properties28 = new java.util.Properties(properties27);
        java.util.Properties properties29 = new java.util.Properties(properties27);
        java.util.Properties properties30 = null;
        java.util.Properties properties31 = new java.util.Properties(properties30);
        java.lang.Object obj33 = properties29.put((java.lang.Object) properties31, (java.lang.Object) (short) 1);
        properties31.clear();
        int int35 = properties31.size();
        java.util.Properties properties36 = new java.util.Properties(properties31);
        java.util.Properties properties37 = null;
        java.util.Properties properties38 = new java.util.Properties(properties37);
        java.util.Properties properties39 = new java.util.Properties(properties37);
        java.util.Properties properties40 = null;
        java.util.Properties properties41 = new java.util.Properties(properties40);
        java.lang.Object obj43 = properties39.put((java.lang.Object) properties41, (java.lang.Object) (short) 1);
        properties41.clear();
        java.lang.String str46 = properties41.getProperty("");
        java.util.Properties properties47 = null;
        java.util.Properties properties48 = new java.util.Properties(properties47);
        java.util.Properties properties49 = new java.util.Properties(properties47);
        java.util.Properties properties50 = null;
        java.util.Properties properties51 = new java.util.Properties(properties50);
        java.lang.Object obj53 = properties49.put((java.lang.Object) properties51, (java.lang.Object) (short) 1);
        properties41.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties49);
        java.lang.Object obj55 = properties21.put((java.lang.Object) properties31, (java.lang.Object) properties49);
        java.util.Properties properties56 = null;
        java.util.Properties properties57 = new java.util.Properties(properties56);
        java.util.Properties properties58 = new java.util.Properties(properties56);
        java.util.Properties properties59 = null;
        java.util.Properties properties60 = new java.util.Properties(properties59);
        java.lang.Object obj62 = properties58.put((java.lang.Object) properties60, (java.lang.Object) (short) 1);
        java.util.Properties properties63 = new java.util.Properties(properties60);
        java.util.Properties properties64 = new java.util.Properties(properties60);
        java.util.Set<java.lang.Object> objSet65 = properties64.keySet();
        java.lang.Object obj66 = properties5.replace((java.lang.Object) properties21, (java.lang.Object) objSet65);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties67 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        int int68 = atomikosProperties67.getMaxActives();
        long long69 = atomikosProperties67.getMaxTimeout();
        java.util.Properties properties70 = atomikosProperties67.asProperties();
        atomikosProperties67.setService("hi!");
        boolean boolean73 = properties2.remove((java.lang.Object) properties5, (java.lang.Object) "hi!");
        java.util.Properties properties74 = new java.util.Properties(properties2);
        java.lang.String str76 = properties74.getProperty("{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=0, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.tm_unique_name=, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
        java.util.Enumeration<?> wildcardEnumeration77 = properties74.propertyNames();
        java.io.OutputStream outputStream78 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties74.storeToXML(outputStream78, "hi!", "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.max_actives=0, com.atomikos.icatch.log_base_name=tmlog}");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 50 + "'", int1 == 50);
        org.junit.Assert.assertNotNull(properties2);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNull(obj14);
        org.junit.Assert.assertNotNull(objEnumeration15);
        org.junit.Assert.assertNull(obj16);
        org.junit.Assert.assertNull(obj23);
        org.junit.Assert.assertNotNull(objEnumeration24);
        org.junit.Assert.assertNotNull(objEntrySet25);
        org.junit.Assert.assertNotNull(objSet26);
        org.junit.Assert.assertNull(obj33);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 0 + "'", int35 == 0);
        org.junit.Assert.assertNull(obj43);
        org.junit.Assert.assertNull(str46);
        org.junit.Assert.assertNull(obj53);
        org.junit.Assert.assertNull(obj55);
        org.junit.Assert.assertNull(obj62);
        org.junit.Assert.assertNotNull(objSet65);
        org.junit.Assert.assertNull(obj66);
        org.junit.Assert.assertTrue("'" + int68 + "' != '" + 50 + "'", int68 == 50);
        org.junit.Assert.assertTrue("'" + long69 + "' != '" + 300000L + "'", long69 == 300000L);
        org.junit.Assert.assertNotNull(properties70);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertNull(str76);
        org.junit.Assert.assertNotNull(wildcardEnumeration77);
    }

    @Test
    public void test1458() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1458");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        int int1 = atomikosProperties0.getMaxActives();
        java.util.Properties properties2 = atomikosProperties0.asProperties();
        java.util.Enumeration<java.lang.Object> objEnumeration3 = properties2.keys();
        java.util.Properties properties4 = null;
        java.util.Properties properties5 = new java.util.Properties(properties4);
        java.util.Properties properties6 = new java.util.Properties(properties4);
        java.util.Properties properties7 = null;
        java.util.Properties properties8 = new java.util.Properties(properties7);
        java.lang.Object obj10 = properties6.put((java.lang.Object) properties8, (java.lang.Object) (short) 1);
        java.util.Properties properties12 = null;
        java.util.Properties properties13 = new java.util.Properties(properties12);
        java.util.Properties properties14 = new java.util.Properties(properties12);
        java.util.Properties properties15 = null;
        java.util.Properties properties16 = new java.util.Properties(properties15);
        java.lang.Object obj18 = properties14.put((java.lang.Object) properties16, (java.lang.Object) (short) 1);
        boolean boolean19 = properties8.remove((java.lang.Object) false, (java.lang.Object) (short) 1);
        java.util.Set<java.lang.String> strSet20 = properties8.stringPropertyNames();
        java.util.Enumeration<java.lang.Object> objEnumeration21 = properties8.elements();
        java.lang.String str22 = properties8.toString();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties23 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties23.setDefaultJtaTimeout((long) (byte) 10);
        atomikosProperties23.setCheckpointInterval((long) (byte) 0);
        atomikosProperties23.setTransactionManagerUniqueName("");
        java.util.Properties properties30 = atomikosProperties23.asProperties();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties31 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties31.setThreadedTwoPhaseCommit(true);
        atomikosProperties31.setMaxActives((int) '#');
        atomikosProperties31.setForceShutdownOnVmExit(true);
        java.lang.String str38 = atomikosProperties31.getLogBaseDir();
        java.lang.Object obj39 = properties30.remove((java.lang.Object) atomikosProperties31);
        java.util.Properties properties40 = null;
        java.util.Properties properties41 = new java.util.Properties(properties40);
        java.util.Properties properties42 = new java.util.Properties(properties40);
        java.util.Properties properties43 = null;
        java.util.Properties properties44 = new java.util.Properties(properties43);
        java.lang.Object obj46 = properties42.put((java.lang.Object) properties44, (java.lang.Object) (short) 1);
        java.util.Properties properties48 = null;
        java.util.Properties properties49 = new java.util.Properties(properties48);
        java.util.Properties properties50 = new java.util.Properties(properties48);
        java.util.Properties properties51 = null;
        java.util.Properties properties52 = new java.util.Properties(properties51);
        java.lang.Object obj54 = properties50.put((java.lang.Object) properties52, (java.lang.Object) (short) 1);
        boolean boolean55 = properties44.remove((java.lang.Object) false, (java.lang.Object) (short) 1);
        java.util.Set<java.lang.String> strSet56 = properties44.stringPropertyNames();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties57 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties57.setDefaultJtaTimeout((long) (byte) 10);
        atomikosProperties57.setCheckpointInterval((long) (byte) 0);
        atomikosProperties57.setTransactionManagerUniqueName("");
        boolean boolean64 = atomikosProperties57.isEnableLogging();
        atomikosProperties57.setSerialJtaTransactions(false);
        atomikosProperties57.setLogBaseDir("");
        java.util.Properties properties69 = null;
        java.util.Properties properties70 = new java.util.Properties(properties69);
        java.util.Properties properties71 = new java.util.Properties(properties69);
        java.util.Properties properties72 = null;
        java.util.Properties properties73 = new java.util.Properties(properties72);
        java.lang.Object obj75 = properties71.put((java.lang.Object) properties73, (java.lang.Object) (short) 1);
        java.util.Properties properties76 = new java.util.Properties(properties73);
        boolean boolean77 = properties44.remove((java.lang.Object) "", (java.lang.Object) properties76);
        java.util.Properties properties78 = null;
        java.util.Properties properties79 = new java.util.Properties(properties78);
        java.util.Properties properties80 = new java.util.Properties(properties78);
        java.lang.Object obj81 = properties80.clone();
        boolean boolean82 = properties44.contains(obj81);
        java.util.Collection<java.lang.Object> objCollection83 = properties44.values();
        java.lang.Object obj84 = properties8.put((java.lang.Object) atomikosProperties31, (java.lang.Object) objCollection83);
        int int85 = atomikosProperties31.getMaxActives();
        boolean boolean86 = properties2.contains((java.lang.Object) int85);
        java.io.OutputStream outputStream87 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties2.storeToXML(outputStream87, "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=0, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.tm_unique_name=, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}", "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=0, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog, {}={}}");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 50 + "'", int1 == 50);
        org.junit.Assert.assertNotNull(properties2);
        org.junit.Assert.assertNotNull(objEnumeration3);
        org.junit.Assert.assertNull(obj10);
        org.junit.Assert.assertNull(obj18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(strSet20);
        org.junit.Assert.assertNotNull(objEnumeration21);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "{}" + "'", str22, "{}");
        org.junit.Assert.assertNotNull(properties30);
        org.junit.Assert.assertNull(str38);
        org.junit.Assert.assertNull(obj39);
        org.junit.Assert.assertNull(obj46);
        org.junit.Assert.assertNull(obj54);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertNotNull(strSet56);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64 == true);
        org.junit.Assert.assertNull(obj75);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + false + "'", boolean77 == false);
        org.junit.Assert.assertNotNull(obj81);
        org.junit.Assert.assertEquals(obj81.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj81), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj81), "{}");
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + false + "'", boolean82 == false);
        org.junit.Assert.assertNotNull(objCollection83);
        org.junit.Assert.assertNull(obj84);
        org.junit.Assert.assertTrue("'" + int85 + "' != '" + 35 + "'", int85 == 35);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + false + "'", boolean86 == false);
    }

    @Test
    public void test1459() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1459");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setDefaultJtaTimeout((long) (byte) 10);
        long long3 = atomikosProperties0.getDefaultJtaTimeout();
        atomikosProperties0.setTransactionManagerUniqueName("");
        boolean boolean6 = atomikosProperties0.isEnableLogging();
        atomikosProperties0.setDefaultJtaTimeout((long) '4');
        java.lang.String str9 = atomikosProperties0.getTransactionManagerUniqueName();
        atomikosProperties0.setThreadedTwoPhaseCommit(true);
        java.util.Properties properties12 = atomikosProperties0.asProperties();
        java.util.Properties properties13 = new java.util.Properties(properties12);
        java.util.Enumeration<?> wildcardEnumeration14 = properties13.propertyNames();
        java.lang.Object obj17 = properties13.setProperty("{=}", "{}");
        java.lang.String str20 = properties13.getProperty("{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=52, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.tm_unique_name=, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}", "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=100, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=true, com.atomikos.icatch.tm_unique_name=, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name={com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.tm_unique_name=, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}}");
        org.junit.Assert.assertTrue("'" + long3 + "' != '" + 10L + "'", long3 == 10L);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "" + "'", str9, "");
        org.junit.Assert.assertNotNull(properties12);
        org.junit.Assert.assertNotNull(wildcardEnumeration14);
        org.junit.Assert.assertNull(obj17);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=100, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=true, com.atomikos.icatch.tm_unique_name=, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name={com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.tm_unique_name=, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}}" + "'", str20, "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=100, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=true, com.atomikos.icatch.tm_unique_name=, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name={com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.tm_unique_name=, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}}");
    }

    @Test
    public void test1460() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1460");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setDefaultJtaTimeout((long) (byte) 10);
        long long3 = atomikosProperties0.getDefaultJtaTimeout();
        atomikosProperties0.setTransactionManagerUniqueName("");
        boolean boolean6 = atomikosProperties0.isEnableLogging();
        atomikosProperties0.setDefaultJtaTimeout((long) '4');
        boolean boolean9 = atomikosProperties0.isSerialJtaTransactions();
        java.lang.String str10 = atomikosProperties0.getTransactionManagerUniqueName();
        atomikosProperties0.setThreadedTwoPhaseCommit(true);
        long long13 = atomikosProperties0.getCheckpointInterval();
        atomikosProperties0.setMaxActives(0);
        org.junit.Assert.assertTrue("'" + long3 + "' != '" + 10L + "'", long3 == 10L);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertTrue("'" + long13 + "' != '" + 500L + "'", long13 == 500L);
    }

    @Test
    public void test1461() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1461");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Properties properties2 = new java.util.Properties(properties0);
        java.util.Properties properties3 = null;
        java.util.Properties properties4 = new java.util.Properties(properties3);
        java.lang.Object obj6 = properties2.put((java.lang.Object) properties4, (java.lang.Object) (short) 1);
        boolean boolean7 = properties2.isEmpty();
        java.util.Properties properties8 = null;
        java.util.Properties properties9 = new java.util.Properties(properties8);
        java.util.Properties properties10 = new java.util.Properties(properties8);
        boolean boolean11 = properties2.containsKey((java.lang.Object) properties10);
        java.util.Properties properties12 = null;
        java.util.Properties properties13 = new java.util.Properties(properties12);
        java.util.Properties properties14 = new java.util.Properties(properties12);
        java.util.Properties properties15 = null;
        java.util.Properties properties16 = new java.util.Properties(properties15);
        java.lang.Object obj18 = properties14.put((java.lang.Object) properties16, (java.lang.Object) (short) 1);
        java.util.Properties properties20 = null;
        java.util.Properties properties21 = new java.util.Properties(properties20);
        java.util.Properties properties22 = new java.util.Properties(properties20);
        java.util.Properties properties23 = null;
        java.util.Properties properties24 = new java.util.Properties(properties23);
        java.lang.Object obj26 = properties22.put((java.lang.Object) properties24, (java.lang.Object) (short) 1);
        boolean boolean27 = properties16.remove((java.lang.Object) false, (java.lang.Object) (short) 1);
        java.util.Set<java.lang.String> strSet28 = properties16.stringPropertyNames();
        boolean boolean29 = properties10.containsKey((java.lang.Object) strSet28);
        java.util.Properties properties30 = null;
        java.util.Properties properties31 = new java.util.Properties(properties30);
        java.util.Properties properties32 = new java.util.Properties(properties30);
        java.util.Properties properties33 = null;
        java.util.Properties properties34 = new java.util.Properties(properties33);
        java.lang.Object obj36 = properties32.put((java.lang.Object) properties34, (java.lang.Object) (short) 1);
        properties34.clear();
        java.lang.String str39 = properties34.getProperty("");
        java.util.Properties properties40 = null;
        java.util.Properties properties41 = new java.util.Properties(properties40);
        java.util.Properties properties42 = new java.util.Properties(properties40);
        java.util.Properties properties43 = null;
        java.util.Properties properties44 = new java.util.Properties(properties43);
        java.lang.Object obj46 = properties42.put((java.lang.Object) properties44, (java.lang.Object) (short) 1);
        properties34.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties42);
        boolean boolean48 = properties10.containsKey((java.lang.Object) properties34);
        java.util.Properties properties50 = null;
        java.util.Properties properties51 = new java.util.Properties(properties50);
        java.util.Properties properties52 = new java.util.Properties(properties50);
        java.util.Properties properties53 = null;
        java.util.Properties properties54 = new java.util.Properties(properties53);
        java.lang.Object obj56 = properties52.put((java.lang.Object) properties54, (java.lang.Object) (short) 1);
        properties54.clear();
        int int58 = properties54.size();
        java.lang.Object obj61 = properties54.setProperty("hi!", "hi!");
        java.lang.Object obj64 = properties54.setProperty("tmlog", "tmlog");
        java.lang.Object obj65 = properties34.putIfAbsent((java.lang.Object) (short) 10, (java.lang.Object) "tmlog");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties66 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        int int67 = atomikosProperties66.getMaxActives();
        long long68 = atomikosProperties66.getMaxTimeout();
        java.util.Properties properties69 = atomikosProperties66.asProperties();
        boolean boolean70 = properties34.containsValue((java.lang.Object) properties69);
        java.lang.Object obj71 = properties69.clone();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet72 = properties69.entrySet();
        java.io.Writer writer73 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties69.store(writer73, "{com.atomikos.icatch.enable_logging=false, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=true, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(obj6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNull(obj18);
        org.junit.Assert.assertNull(obj26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(strSet28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNull(obj36);
        org.junit.Assert.assertNull(str39);
        org.junit.Assert.assertNull(obj46);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNull(obj56);
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + 0 + "'", int58 == 0);
        org.junit.Assert.assertNull(obj61);
        org.junit.Assert.assertNull(obj64);
        org.junit.Assert.assertNull(obj65);
        org.junit.Assert.assertTrue("'" + int67 + "' != '" + 50 + "'", int67 == 50);
        org.junit.Assert.assertTrue("'" + long68 + "' != '" + 300000L + "'", long68 == 300000L);
        org.junit.Assert.assertNotNull(properties69);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertNotNull(obj71);
// flaky:         org.junit.Assert.assertEquals(obj71.toString(), "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
// flaky:         org.junit.Assert.assertEquals(java.lang.String.valueOf(obj71), "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
// flaky:         org.junit.Assert.assertEquals(java.util.Objects.toString(obj71), "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
        org.junit.Assert.assertNotNull(objEntrySet72);
    }

    @Test
    public void test1462() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1462");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setDefaultJtaTimeout((long) (byte) 10);
        atomikosProperties0.setCheckpointInterval((long) (byte) 0);
        long long5 = atomikosProperties0.getMaxTimeout();
        atomikosProperties0.setSerialJtaTransactions(true);
        atomikosProperties0.setForceShutdownOnVmExit(false);
        java.lang.String str10 = atomikosProperties0.getLogBaseDir();
        atomikosProperties0.setMaxTimeout((long) 32);
        org.junit.Assert.assertTrue("'" + long5 + "' != '" + 300000L + "'", long5 == 300000L);
        org.junit.Assert.assertNull(str10);
    }

    @Test
    public void test1463() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1463");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        int int1 = atomikosProperties0.getMaxActives();
        long long2 = atomikosProperties0.getMaxTimeout();
        java.util.Properties properties3 = atomikosProperties0.asProperties();
        atomikosProperties0.setTransactionManagerUniqueName("");
        java.util.Properties properties6 = atomikosProperties0.asProperties();
        long long7 = atomikosProperties0.getDefaultJtaTimeout();
        boolean boolean8 = atomikosProperties0.isEnableLogging();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 50 + "'", int1 == 50);
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + 300000L + "'", long2 == 300000L);
        org.junit.Assert.assertNotNull(properties3);
        org.junit.Assert.assertNotNull(properties6);
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + 10000L + "'", long7 == 10000L);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
    }

    @Test
    public void test1464() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1464");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setDefaultJtaTimeout((long) (byte) 10);
        long long3 = atomikosProperties0.getDefaultJtaTimeout();
        atomikosProperties0.setTransactionManagerUniqueName("");
        boolean boolean6 = atomikosProperties0.isEnableLogging();
        java.lang.String str7 = atomikosProperties0.getLogBaseDir();
        java.util.Properties properties8 = atomikosProperties0.asProperties();
        boolean boolean9 = atomikosProperties0.isEnableLogging();
        java.util.Properties properties10 = atomikosProperties0.asProperties();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties11 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties11.setDefaultJtaTimeout((long) (byte) 10);
        atomikosProperties11.setCheckpointInterval((long) (byte) 0);
        atomikosProperties11.setTransactionManagerUniqueName("");
        boolean boolean18 = atomikosProperties11.isEnableLogging();
        java.util.Properties properties19 = atomikosProperties11.asProperties();
        java.util.Enumeration<java.lang.Object> objEnumeration20 = properties19.keys();
        java.util.Properties properties21 = null;
        java.util.Properties properties22 = new java.util.Properties(properties21);
        java.util.Properties properties23 = new java.util.Properties(properties21);
        java.util.Properties properties24 = null;
        java.util.Properties properties25 = new java.util.Properties(properties24);
        java.lang.Object obj27 = properties23.put((java.lang.Object) properties25, (java.lang.Object) (short) 1);
        java.util.Properties properties29 = null;
        java.util.Properties properties30 = new java.util.Properties(properties29);
        java.util.Properties properties31 = new java.util.Properties(properties29);
        java.util.Properties properties32 = null;
        java.util.Properties properties33 = new java.util.Properties(properties32);
        java.lang.Object obj35 = properties31.put((java.lang.Object) properties33, (java.lang.Object) (short) 1);
        boolean boolean36 = properties25.remove((java.lang.Object) false, (java.lang.Object) (short) 1);
        java.util.Set<java.lang.String> strSet37 = properties25.stringPropertyNames();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties38 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties38.setDefaultJtaTimeout((long) (byte) 10);
        long long41 = atomikosProperties38.getDefaultJtaTimeout();
        java.lang.Object obj42 = properties25.get((java.lang.Object) atomikosProperties38);
        atomikosProperties38.setCheckpointInterval((long) (short) 100);
        java.util.Properties properties45 = atomikosProperties38.asProperties();
        java.util.Enumeration<?> wildcardEnumeration46 = properties45.propertyNames();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet47 = properties45.entrySet();
        java.lang.Object obj48 = properties10.getOrDefault((java.lang.Object) objEnumeration20, (java.lang.Object) properties45);
        boolean boolean50 = properties10.containsValue((java.lang.Object) 50L);
        java.util.Set<java.lang.Object> objSet51 = properties10.keySet();
        java.io.OutputStream outputStream52 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties10.save(outputStream52, "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=52, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.tm_unique_name=, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + long3 + "' != '" + 10L + "'", long3 == 10L);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNotNull(properties8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertNotNull(properties10);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(properties19);
        org.junit.Assert.assertNotNull(objEnumeration20);
        org.junit.Assert.assertNull(obj27);
        org.junit.Assert.assertNull(obj35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(strSet37);
        org.junit.Assert.assertTrue("'" + long41 + "' != '" + 10L + "'", long41 == 10L);
        org.junit.Assert.assertNull(obj42);
        org.junit.Assert.assertNotNull(properties45);
        org.junit.Assert.assertNotNull(wildcardEnumeration46);
        org.junit.Assert.assertNotNull(objEntrySet47);
        org.junit.Assert.assertNotNull(obj48);
// flaky:         org.junit.Assert.assertEquals(obj48.toString(), "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=100, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
// flaky:         org.junit.Assert.assertEquals(java.lang.String.valueOf(obj48), "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=100, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
// flaky:         org.junit.Assert.assertEquals(java.util.Objects.toString(obj48), "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=100, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertNotNull(objSet51);
    }

    @Test
    public void test1465() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1465");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setThreadedTwoPhaseCommit(true);
        atomikosProperties0.setMaxActives((int) '#');
        atomikosProperties0.setEnableLogging(true);
        int int7 = atomikosProperties0.getMaxActives();
        boolean boolean8 = atomikosProperties0.isEnableLogging();
        java.util.Properties properties9 = atomikosProperties0.asProperties();
        long long10 = atomikosProperties0.getDefaultJtaTimeout();
        atomikosProperties0.setTransactionManagerUniqueName("{}");
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 35 + "'", int7 == 35);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(properties9);
        org.junit.Assert.assertTrue("'" + long10 + "' != '" + 10000L + "'", long10 == 10000L);
    }

    @Test
    public void test1466() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1466");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setDefaultJtaTimeout((long) (byte) 10);
        atomikosProperties0.setCheckpointInterval((long) (byte) 0);
        atomikosProperties0.setTransactionManagerUniqueName("");
        java.util.Properties properties7 = atomikosProperties0.asProperties();
        java.lang.String str8 = atomikosProperties0.getLogBaseName();
        java.util.Properties properties9 = atomikosProperties0.asProperties();
        java.util.Enumeration<java.lang.Object> objEnumeration10 = properties9.keys();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties12 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties12.setDefaultJtaTimeout((long) (byte) 10);
        long long15 = atomikosProperties12.getDefaultJtaTimeout();
        atomikosProperties12.setTransactionManagerUniqueName("");
        atomikosProperties12.setCheckpointInterval(100L);
        boolean boolean20 = properties9.remove((java.lang.Object) "hi!", (java.lang.Object) atomikosProperties12);
        java.util.Properties properties21 = new java.util.Properties(properties9);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties22 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties22.setThreadedTwoPhaseCommit(true);
        boolean boolean25 = atomikosProperties22.isEnableLogging();
        atomikosProperties22.setCheckpointInterval((long) 35);
        atomikosProperties22.setDefaultJtaTimeout((long) (byte) 0);
        java.util.Properties properties30 = null;
        java.util.Properties properties31 = new java.util.Properties(properties30);
        java.util.Properties properties32 = new java.util.Properties(properties30);
        java.util.Properties properties33 = null;
        java.util.Properties properties34 = new java.util.Properties(properties33);
        java.lang.Object obj36 = properties32.put((java.lang.Object) properties34, (java.lang.Object) (short) 1);
        properties34.clear();
        int int38 = properties34.size();
        java.util.Properties properties39 = new java.util.Properties(properties34);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties40 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        int int41 = atomikosProperties40.getMaxActives();
        long long42 = atomikosProperties40.getMaxTimeout();
        java.util.Properties properties43 = atomikosProperties40.asProperties();
        java.util.Properties properties44 = atomikosProperties40.asProperties();
        java.util.Properties properties45 = null;
        java.util.Properties properties46 = new java.util.Properties(properties45);
        java.util.Properties properties47 = new java.util.Properties(properties45);
        java.util.Properties properties48 = null;
        java.util.Properties properties49 = new java.util.Properties(properties48);
        java.lang.Object obj51 = properties47.put((java.lang.Object) properties49, (java.lang.Object) (short) 1);
        java.util.Enumeration<java.lang.Object> objEnumeration52 = properties49.elements();
        java.lang.Object obj53 = properties34.replace((java.lang.Object) atomikosProperties40, (java.lang.Object) properties49);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties55 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties55.setThreadedTwoPhaseCommit(true);
        java.lang.String str58 = atomikosProperties55.getService();
        boolean boolean59 = atomikosProperties55.isSerialJtaTransactions();
        java.lang.Object obj60 = properties49.getOrDefault((java.lang.Object) "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.tm_unique_name=, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}", (java.lang.Object) atomikosProperties55);
        boolean boolean61 = properties9.remove((java.lang.Object) atomikosProperties22, (java.lang.Object) properties49);
        java.io.Writer writer62 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties49.store(writer62, "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=0, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=true, com.atomikos.icatch.max_actives=100, com.atomikos.icatch.log_base_name=tmlog}");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(properties7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "tmlog" + "'", str8, "tmlog");
        org.junit.Assert.assertNotNull(properties9);
        org.junit.Assert.assertNotNull(objEnumeration10);
        org.junit.Assert.assertTrue("'" + long15 + "' != '" + 10L + "'", long15 == 10L);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNull(obj36);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 0 + "'", int38 == 0);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 50 + "'", int41 == 50);
        org.junit.Assert.assertTrue("'" + long42 + "' != '" + 300000L + "'", long42 == 300000L);
        org.junit.Assert.assertNotNull(properties43);
        org.junit.Assert.assertNotNull(properties44);
        org.junit.Assert.assertNull(obj51);
        org.junit.Assert.assertNotNull(objEnumeration52);
        org.junit.Assert.assertNull(obj53);
        org.junit.Assert.assertNull(str58);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertNotNull(obj60);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
    }

    @Test
    public void test1467() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1467");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setDefaultJtaTimeout((long) (byte) 10);
        atomikosProperties0.setSerialJtaTransactions(false);
        atomikosProperties0.setService("{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.tm_unique_name=, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
        java.lang.String str7 = atomikosProperties0.getTransactionManagerUniqueName();
        java.util.Properties properties8 = atomikosProperties0.asProperties();
        java.lang.Object obj9 = properties8.clone();
        java.io.OutputStream outputStream10 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties8.storeToXML(outputStream10, "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}", "{tmlog={com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=0, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.tm_unique_name=, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}, 4=true}");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNotNull(properties8);
        org.junit.Assert.assertNotNull(obj9);
// flaky:         org.junit.Assert.assertEquals(obj9.toString(), "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=false, com.atomikos.icatch.default_jta_timeout=10, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.service={com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.tm_unique_name=, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
// flaky:         org.junit.Assert.assertEquals(java.lang.String.valueOf(obj9), "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=false, com.atomikos.icatch.default_jta_timeout=10, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.service={com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.tm_unique_name=, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
// flaky:         org.junit.Assert.assertEquals(java.util.Objects.toString(obj9), "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=false, com.atomikos.icatch.default_jta_timeout=10, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.service={com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.tm_unique_name=, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
    }

    @Test
    public void test1468() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1468");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        boolean boolean1 = atomikosProperties0.isSerialJtaTransactions();
        java.util.Properties properties2 = atomikosProperties0.asProperties();
        int int3 = properties2.size();
        java.lang.Object obj4 = properties2.clone();
        java.util.Properties properties5 = new java.util.Properties(properties2);
        java.util.Properties properties6 = null;
        java.util.Properties properties7 = new java.util.Properties(properties6);
        java.util.Properties properties8 = new java.util.Properties(properties6);
        java.util.Properties properties9 = null;
        java.util.Properties properties10 = new java.util.Properties(properties9);
        java.lang.Object obj12 = properties8.put((java.lang.Object) properties10, (java.lang.Object) (short) 1);
        properties10.clear();
        int int14 = properties10.size();
        java.util.Properties properties15 = null;
        java.util.Properties properties16 = new java.util.Properties(properties15);
        java.util.Properties properties17 = new java.util.Properties(properties15);
        java.util.Properties properties18 = null;
        java.util.Properties properties19 = new java.util.Properties(properties18);
        java.lang.Object obj21 = properties17.put((java.lang.Object) properties19, (java.lang.Object) (short) 1);
        java.util.Properties properties22 = new java.util.Properties(properties19);
        java.util.Properties properties23 = new java.util.Properties(properties19);
        boolean boolean25 = properties10.remove((java.lang.Object) properties19, (java.lang.Object) 10.0f);
        java.util.Enumeration<java.lang.Object> objEnumeration26 = properties19.elements();
        java.util.Properties properties27 = null;
        java.util.Properties properties28 = new java.util.Properties(properties27);
        java.util.Properties properties29 = new java.util.Properties(properties27);
        java.util.Properties properties30 = null;
        java.util.Properties properties31 = new java.util.Properties(properties30);
        java.lang.Object obj33 = properties29.put((java.lang.Object) properties31, (java.lang.Object) (short) 1);
        properties31.clear();
        int int35 = properties31.size();
        java.util.Properties properties36 = new java.util.Properties(properties31);
        properties19.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties36);
        java.util.Set<java.lang.String> strSet38 = properties36.stringPropertyNames();
        java.util.Properties properties39 = null;
        java.util.Properties properties40 = new java.util.Properties(properties39);
        java.util.Properties properties41 = new java.util.Properties(properties39);
        java.util.Properties properties42 = null;
        java.util.Properties properties43 = new java.util.Properties(properties42);
        java.lang.Object obj45 = properties41.put((java.lang.Object) properties43, (java.lang.Object) (short) 1);
        boolean boolean46 = properties41.isEmpty();
        java.util.Properties properties47 = null;
        java.util.Properties properties48 = new java.util.Properties(properties47);
        java.util.Properties properties49 = new java.util.Properties(properties47);
        boolean boolean50 = properties41.containsKey((java.lang.Object) properties49);
        java.util.Properties properties51 = null;
        java.util.Properties properties52 = new java.util.Properties(properties51);
        java.util.Properties properties53 = new java.util.Properties(properties51);
        java.util.Properties properties54 = null;
        java.util.Properties properties55 = new java.util.Properties(properties54);
        java.lang.Object obj57 = properties53.put((java.lang.Object) properties55, (java.lang.Object) (short) 1);
        java.util.Properties properties59 = null;
        java.util.Properties properties60 = new java.util.Properties(properties59);
        java.util.Properties properties61 = new java.util.Properties(properties59);
        java.util.Properties properties62 = null;
        java.util.Properties properties63 = new java.util.Properties(properties62);
        java.lang.Object obj65 = properties61.put((java.lang.Object) properties63, (java.lang.Object) (short) 1);
        boolean boolean66 = properties55.remove((java.lang.Object) false, (java.lang.Object) (short) 1);
        java.util.Set<java.lang.String> strSet67 = properties55.stringPropertyNames();
        boolean boolean68 = properties49.containsKey((java.lang.Object) strSet67);
        java.util.Properties properties69 = null;
        java.util.Properties properties70 = new java.util.Properties(properties69);
        java.util.Properties properties71 = new java.util.Properties(properties69);
        java.util.Properties properties72 = null;
        java.util.Properties properties73 = new java.util.Properties(properties72);
        java.lang.Object obj75 = properties71.put((java.lang.Object) properties73, (java.lang.Object) (short) 1);
        properties73.clear();
        java.lang.String str78 = properties73.getProperty("");
        java.util.Properties properties79 = null;
        java.util.Properties properties80 = new java.util.Properties(properties79);
        java.util.Properties properties81 = new java.util.Properties(properties79);
        java.util.Properties properties82 = null;
        java.util.Properties properties83 = new java.util.Properties(properties82);
        java.lang.Object obj85 = properties81.put((java.lang.Object) properties83, (java.lang.Object) (short) 1);
        properties73.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties81);
        boolean boolean87 = properties49.containsKey((java.lang.Object) properties73);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties89 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties89.setThreadedTwoPhaseCommit(true);
        boolean boolean92 = atomikosProperties89.isEnableLogging();
        java.lang.Object obj93 = properties49.put((java.lang.Object) '4', (java.lang.Object) boolean92);
        java.util.Properties properties94 = new java.util.Properties(properties49);
        boolean boolean95 = properties49.isEmpty();
        java.lang.Object obj98 = properties49.setProperty("tmlog", "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=0, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.tm_unique_name=, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
        java.lang.Object obj99 = properties5.putIfAbsent((java.lang.Object) strSet38, (java.lang.Object) "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=0, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.tm_unique_name=, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertNotNull(properties2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 9 + "'", int3 == 9);
        org.junit.Assert.assertNotNull(obj4);
// flaky:         org.junit.Assert.assertEquals(obj4.toString(), "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
// flaky:         org.junit.Assert.assertEquals(java.lang.String.valueOf(obj4), "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
// flaky:         org.junit.Assert.assertEquals(java.util.Objects.toString(obj4), "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
        org.junit.Assert.assertNull(obj12);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertNull(obj21);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(objEnumeration26);
        org.junit.Assert.assertNull(obj33);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 0 + "'", int35 == 0);
        org.junit.Assert.assertNotNull(strSet38);
        org.junit.Assert.assertNull(obj45);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertNull(obj57);
        org.junit.Assert.assertNull(obj65);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertNotNull(strSet67);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertNull(obj75);
        org.junit.Assert.assertNull(str78);
        org.junit.Assert.assertNull(obj85);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + false + "'", boolean87 == false);
        org.junit.Assert.assertTrue("'" + boolean92 + "' != '" + true + "'", boolean92 == true);
        org.junit.Assert.assertNull(obj93);
        org.junit.Assert.assertTrue("'" + boolean95 + "' != '" + false + "'", boolean95 == false);
        org.junit.Assert.assertNull(obj98);
        org.junit.Assert.assertNull(obj99);
    }

    @Test
    public void test1469() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1469");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        boolean boolean1 = atomikosProperties0.isForceShutdownOnVmExit();
        java.util.Properties properties2 = atomikosProperties0.asProperties();
        java.util.Properties properties3 = null;
        java.util.Properties properties4 = new java.util.Properties(properties3);
        java.util.Properties properties5 = new java.util.Properties(properties3);
        java.util.Properties properties6 = null;
        java.util.Properties properties7 = new java.util.Properties(properties6);
        java.lang.Object obj9 = properties5.put((java.lang.Object) properties7, (java.lang.Object) (short) 1);
        properties7.clear();
        int int11 = properties7.size();
        java.util.Properties properties12 = null;
        java.util.Properties properties13 = new java.util.Properties(properties12);
        java.util.Properties properties14 = new java.util.Properties(properties12);
        java.util.Properties properties15 = null;
        java.util.Properties properties16 = new java.util.Properties(properties15);
        java.lang.Object obj18 = properties14.put((java.lang.Object) properties16, (java.lang.Object) (short) 1);
        java.util.Properties properties19 = new java.util.Properties(properties16);
        java.util.Properties properties20 = new java.util.Properties(properties16);
        boolean boolean22 = properties7.remove((java.lang.Object) properties16, (java.lang.Object) 10.0f);
        boolean boolean23 = properties2.containsKey((java.lang.Object) 10.0f);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties25 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties25.setDefaultJtaTimeout((long) (byte) 10);
        atomikosProperties25.setCheckpointInterval((long) (byte) 0);
        atomikosProperties25.setEnableLogging(true);
        java.lang.Object obj32 = properties2.getOrDefault((java.lang.Object) (byte) 0, (java.lang.Object) true);
        java.util.Properties properties33 = new java.util.Properties(properties2);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties34 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties34.setDefaultJtaTimeout((long) (byte) 10);
        atomikosProperties34.setCheckpointInterval((long) (byte) 0);
        long long39 = atomikosProperties34.getMaxTimeout();
        java.util.Properties properties40 = null;
        java.util.Properties properties41 = new java.util.Properties(properties40);
        java.util.Properties properties42 = new java.util.Properties(properties40);
        java.util.Properties properties43 = null;
        java.util.Properties properties44 = new java.util.Properties(properties43);
        java.lang.Object obj46 = properties42.put((java.lang.Object) properties44, (java.lang.Object) (short) 1);
        java.util.Properties properties48 = null;
        java.util.Properties properties49 = new java.util.Properties(properties48);
        java.util.Properties properties50 = new java.util.Properties(properties48);
        java.util.Properties properties51 = null;
        java.util.Properties properties52 = new java.util.Properties(properties51);
        java.lang.Object obj54 = properties50.put((java.lang.Object) properties52, (java.lang.Object) (short) 1);
        boolean boolean55 = properties44.remove((java.lang.Object) false, (java.lang.Object) (short) 1);
        java.lang.Object obj57 = properties44.remove((java.lang.Object) '#');
        java.util.Set<java.lang.Object> objSet58 = properties44.keySet();
        properties44.clear();
        java.util.Properties properties60 = null;
        java.util.Properties properties61 = new java.util.Properties(properties60);
        java.util.Properties properties62 = new java.util.Properties(properties60);
        java.util.Properties properties63 = null;
        java.util.Properties properties64 = new java.util.Properties(properties63);
        java.lang.Object obj66 = properties62.put((java.lang.Object) properties64, (java.lang.Object) (short) 1);
        java.util.Enumeration<java.lang.Object> objEnumeration67 = properties64.elements();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet68 = properties64.entrySet();
        boolean boolean69 = properties44.equals((java.lang.Object) properties64);
        java.util.Enumeration<java.lang.Object> objEnumeration70 = properties64.elements();
        java.lang.Object obj71 = properties33.put((java.lang.Object) atomikosProperties34, (java.lang.Object) properties64);
        java.util.Set<java.lang.String> strSet72 = properties64.stringPropertyNames();
        int int73 = properties64.size();
        java.io.OutputStream outputStream74 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties64.store(outputStream74, "{tmlog=}");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertNotNull(properties2);
        org.junit.Assert.assertNull(obj9);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertNull(obj18);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertEquals("'" + obj32 + "' != '" + true + "'", obj32, true);
        org.junit.Assert.assertTrue("'" + long39 + "' != '" + 300000L + "'", long39 == 300000L);
        org.junit.Assert.assertNull(obj46);
        org.junit.Assert.assertNull(obj54);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertNull(obj57);
        org.junit.Assert.assertNotNull(objSet58);
        org.junit.Assert.assertNull(obj66);
        org.junit.Assert.assertNotNull(objEnumeration67);
        org.junit.Assert.assertNotNull(objEntrySet68);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + true + "'", boolean69 == true);
        org.junit.Assert.assertNotNull(objEnumeration70);
        org.junit.Assert.assertNull(obj71);
        org.junit.Assert.assertNotNull(strSet72);
        org.junit.Assert.assertTrue("'" + int73 + "' != '" + 0 + "'", int73 == 0);
    }

    @Test
    public void test1470() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1470");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Properties properties2 = new java.util.Properties(properties0);
        boolean boolean4 = properties2.containsValue((java.lang.Object) (short) 100);
        java.util.Enumeration<java.lang.Object> objEnumeration5 = properties2.keys();
        java.util.Properties properties6 = null;
        java.util.Properties properties7 = new java.util.Properties(properties6);
        java.util.Properties properties8 = new java.util.Properties(properties6);
        java.util.Properties properties9 = null;
        java.util.Properties properties10 = new java.util.Properties(properties9);
        java.lang.Object obj12 = properties8.put((java.lang.Object) properties10, (java.lang.Object) (short) 1);
        java.util.Properties properties14 = null;
        java.util.Properties properties15 = new java.util.Properties(properties14);
        java.util.Properties properties16 = new java.util.Properties(properties14);
        java.util.Properties properties17 = null;
        java.util.Properties properties18 = new java.util.Properties(properties17);
        java.lang.Object obj20 = properties16.put((java.lang.Object) properties18, (java.lang.Object) (short) 1);
        boolean boolean21 = properties10.remove((java.lang.Object) false, (java.lang.Object) (short) 1);
        java.util.Set<java.lang.String> strSet22 = properties10.stringPropertyNames();
        java.util.Enumeration<java.lang.Object> objEnumeration23 = properties10.elements();
        properties10.clear();
        java.util.Set<java.lang.String> strSet25 = properties10.stringPropertyNames();
        properties2.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties10);
        properties10.clear();
        java.lang.Object obj30 = properties10.setProperty("{tmlog={com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=0, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.tm_unique_name=, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}, 4=true}", "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=0, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog, {}={}}");
        java.lang.String str31 = properties10.toString();
        java.lang.Object obj32 = properties10.clone();
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(objEnumeration5);
        org.junit.Assert.assertNull(obj12);
        org.junit.Assert.assertNull(obj20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(strSet22);
        org.junit.Assert.assertNotNull(objEnumeration23);
        org.junit.Assert.assertNotNull(strSet25);
        org.junit.Assert.assertNull(obj30);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "{{tmlog={com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=0, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.tm_unique_name=, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}, 4=true}={com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=0, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog, {}={}}}" + "'", str31, "{{tmlog={com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=0, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.tm_unique_name=, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}, 4=true}={com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=0, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog, {}={}}}");
        org.junit.Assert.assertNotNull(obj32);
        org.junit.Assert.assertEquals(obj32.toString(), "{{tmlog={com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=0, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.tm_unique_name=, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}, 4=true}={com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=0, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog, {}={}}}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj32), "{{tmlog={com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=0, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.tm_unique_name=, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}, 4=true}={com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=0, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog, {}={}}}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj32), "{{tmlog={com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=0, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.tm_unique_name=, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}, 4=true}={com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=0, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog, {}={}}}");
    }

    @Test
    public void test1471() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1471");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setDefaultJtaTimeout((long) (byte) 10);
        long long3 = atomikosProperties0.getDefaultJtaTimeout();
        atomikosProperties0.setTransactionManagerUniqueName("hi!");
        atomikosProperties0.setTransactionManagerUniqueName("{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=0, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.tm_unique_name=, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
        atomikosProperties0.setService("");
        atomikosProperties0.setDefaultJtaTimeout(0L);
        atomikosProperties0.setSerialJtaTransactions(true);
        boolean boolean14 = atomikosProperties0.isThreadedTwoPhaseCommit();
        atomikosProperties0.setForceShutdownOnVmExit(false);
        org.junit.Assert.assertTrue("'" + long3 + "' != '" + 10L + "'", long3 == 10L);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
    }

    @Test
    public void test1472() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1472");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Properties properties2 = new java.util.Properties(properties0);
        boolean boolean4 = properties2.containsValue((java.lang.Object) (short) 100);
        java.util.Properties properties5 = null;
        java.util.Properties properties6 = new java.util.Properties(properties5);
        java.util.Properties properties7 = new java.util.Properties(properties5);
        java.util.Properties properties8 = null;
        java.util.Properties properties9 = new java.util.Properties(properties8);
        java.lang.Object obj11 = properties7.put((java.lang.Object) properties9, (java.lang.Object) (short) 1);
        java.util.Enumeration<java.lang.Object> objEnumeration12 = properties9.elements();
        java.lang.Object obj13 = properties2.remove((java.lang.Object) properties9);
        java.lang.Object obj16 = properties9.setProperty("", "");
        java.util.Properties properties17 = null;
        java.util.Properties properties18 = new java.util.Properties(properties17);
        java.util.Properties properties19 = new java.util.Properties(properties17);
        java.util.Properties properties20 = null;
        java.util.Properties properties21 = new java.util.Properties(properties20);
        java.lang.Object obj23 = properties19.put((java.lang.Object) properties21, (java.lang.Object) (short) 1);
        java.util.Properties properties25 = null;
        java.util.Properties properties26 = new java.util.Properties(properties25);
        java.util.Properties properties27 = new java.util.Properties(properties25);
        java.util.Properties properties28 = null;
        java.util.Properties properties29 = new java.util.Properties(properties28);
        java.lang.Object obj31 = properties27.put((java.lang.Object) properties29, (java.lang.Object) (short) 1);
        boolean boolean32 = properties21.remove((java.lang.Object) false, (java.lang.Object) (short) 1);
        java.util.Properties properties33 = new java.util.Properties(properties21);
        properties9.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties33);
        java.lang.Object obj35 = properties9.clone();
        boolean boolean36 = properties9.isEmpty();
        java.lang.String str37 = properties9.toString();
        properties9.clear();
        java.lang.Object obj39 = null;
        java.util.Properties properties40 = null;
        java.util.Properties properties41 = new java.util.Properties(properties40);
        java.util.Properties properties42 = new java.util.Properties(properties40);
        java.util.Properties properties43 = null;
        java.util.Properties properties44 = new java.util.Properties(properties43);
        java.lang.Object obj46 = properties42.put((java.lang.Object) properties44, (java.lang.Object) (short) 1);
        boolean boolean47 = properties42.isEmpty();
        java.util.Properties properties48 = null;
        java.util.Properties properties49 = new java.util.Properties(properties48);
        java.util.Properties properties50 = new java.util.Properties(properties48);
        boolean boolean51 = properties42.containsKey((java.lang.Object) properties50);
        java.util.Properties properties52 = new java.util.Properties(properties50);
        java.util.Properties properties53 = new java.util.Properties(properties52);
        properties53.clear();
        java.util.Enumeration<?> wildcardEnumeration55 = properties53.propertyNames();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj56 = properties9.replace(obj39, (java.lang.Object) properties53);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNull(obj11);
        org.junit.Assert.assertNotNull(objEnumeration12);
        org.junit.Assert.assertNull(obj13);
        org.junit.Assert.assertNull(obj16);
        org.junit.Assert.assertNull(obj23);
        org.junit.Assert.assertNull(obj31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(obj35);
        org.junit.Assert.assertEquals(obj35.toString(), "{=}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj35), "{=}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj35), "{=}");
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "{=}" + "'", str37, "{=}");
        org.junit.Assert.assertNull(obj46);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertNotNull(wildcardEnumeration55);
    }

    @Test
    public void test1473() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1473");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setDefaultJtaTimeout((long) (byte) 10);
        long long3 = atomikosProperties0.getDefaultJtaTimeout();
        java.lang.String str4 = atomikosProperties0.getTransactionManagerUniqueName();
        atomikosProperties0.setThreadedTwoPhaseCommit(true);
        atomikosProperties0.setEnableLogging(false);
        org.junit.Assert.assertTrue("'" + long3 + "' != '" + 10L + "'", long3 == 10L);
        org.junit.Assert.assertNull(str4);
    }

    @Test
    public void test1474() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1474");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Properties properties2 = new java.util.Properties(properties0);
        java.util.Properties properties3 = null;
        java.util.Properties properties4 = new java.util.Properties(properties3);
        java.lang.Object obj6 = properties2.put((java.lang.Object) properties4, (java.lang.Object) (short) 1);
        java.util.Properties properties8 = null;
        java.util.Properties properties9 = new java.util.Properties(properties8);
        java.util.Properties properties10 = new java.util.Properties(properties8);
        java.util.Properties properties11 = null;
        java.util.Properties properties12 = new java.util.Properties(properties11);
        java.lang.Object obj14 = properties10.put((java.lang.Object) properties12, (java.lang.Object) (short) 1);
        boolean boolean15 = properties4.remove((java.lang.Object) false, (java.lang.Object) (short) 1);
        java.util.Properties properties16 = new java.util.Properties(properties4);
        int int17 = properties16.size();
        java.util.Properties properties18 = new java.util.Properties(properties16);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties19 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties19.setDefaultJtaTimeout((long) (byte) 10);
        long long22 = atomikosProperties19.getDefaultJtaTimeout();
        atomikosProperties19.setTransactionManagerUniqueName("hi!");
        atomikosProperties19.setLogBaseName("tmlog");
        atomikosProperties19.setCheckpointInterval(300000L);
        long long29 = atomikosProperties19.getMaxTimeout();
        boolean boolean30 = properties18.containsKey((java.lang.Object) long29);
        java.lang.Object obj33 = properties18.setProperty("{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=0, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog, {}={}}", "");
        java.lang.Object obj34 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean35 = properties18.containsKey(obj34);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(obj6);
        org.junit.Assert.assertNull(obj14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 0 + "'", int17 == 0);
        org.junit.Assert.assertTrue("'" + long22 + "' != '" + 10L + "'", long22 == 10L);
        org.junit.Assert.assertTrue("'" + long29 + "' != '" + 300000L + "'", long29 == 300000L);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNull(obj33);
    }

    @Test
    public void test1475() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1475");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setDefaultJtaTimeout((long) (byte) 10);
        atomikosProperties0.setCheckpointInterval((long) (byte) 0);
        long long5 = atomikosProperties0.getMaxTimeout();
        atomikosProperties0.setLogBaseName("");
        long long8 = atomikosProperties0.getDefaultJtaTimeout();
        long long9 = atomikosProperties0.getMaxTimeout();
        atomikosProperties0.setService("hi!");
        boolean boolean12 = atomikosProperties0.isEnableLogging();
        atomikosProperties0.setCheckpointInterval(0L);
        org.junit.Assert.assertTrue("'" + long5 + "' != '" + 300000L + "'", long5 == 300000L);
        org.junit.Assert.assertTrue("'" + long8 + "' != '" + 10L + "'", long8 == 10L);
        org.junit.Assert.assertTrue("'" + long9 + "' != '" + 300000L + "'", long9 == 300000L);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
    }

    @Test
    public void test1476() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1476");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Properties properties2 = new java.util.Properties(properties0);
        java.util.Properties properties3 = null;
        java.util.Properties properties4 = new java.util.Properties(properties3);
        java.lang.Object obj6 = properties2.put((java.lang.Object) properties4, (java.lang.Object) (short) 1);
        java.util.Properties properties7 = new java.util.Properties(properties4);
        java.util.Properties properties8 = new java.util.Properties(properties4);
        java.util.Set<java.lang.Object> objSet9 = properties8.keySet();
        java.util.Properties properties10 = new java.util.Properties(properties8);
        int int11 = properties10.size();
        java.util.Properties properties12 = null;
        java.util.Properties properties13 = new java.util.Properties(properties12);
        java.util.Properties properties14 = new java.util.Properties(properties12);
        java.util.Properties properties15 = null;
        java.util.Properties properties16 = new java.util.Properties(properties15);
        java.lang.Object obj18 = properties14.put((java.lang.Object) properties16, (java.lang.Object) (short) 1);
        java.util.Properties properties20 = null;
        java.util.Properties properties21 = new java.util.Properties(properties20);
        java.util.Properties properties22 = new java.util.Properties(properties20);
        java.util.Properties properties23 = null;
        java.util.Properties properties24 = new java.util.Properties(properties23);
        java.lang.Object obj26 = properties22.put((java.lang.Object) properties24, (java.lang.Object) (short) 1);
        boolean boolean27 = properties16.remove((java.lang.Object) false, (java.lang.Object) (short) 1);
        java.util.Set<java.lang.String> strSet28 = properties16.stringPropertyNames();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties29 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties29.setDefaultJtaTimeout((long) (byte) 10);
        long long32 = atomikosProperties29.getDefaultJtaTimeout();
        java.lang.Object obj33 = properties16.get((java.lang.Object) atomikosProperties29);
        atomikosProperties29.setCheckpointInterval((long) (short) 100);
        java.util.Properties properties36 = atomikosProperties29.asProperties();
        java.lang.String str37 = atomikosProperties29.getLogBaseName();
        atomikosProperties29.setLogBaseDir("{}");
        java.util.Properties properties40 = null;
        java.util.Properties properties41 = new java.util.Properties(properties40);
        int int42 = properties41.size();
        java.lang.Object obj43 = properties10.getOrDefault((java.lang.Object) atomikosProperties29, (java.lang.Object) properties41);
        java.util.Properties properties44 = new java.util.Properties(properties10);
        properties10.clear();
        org.junit.Assert.assertNull(obj6);
        org.junit.Assert.assertNotNull(objSet9);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertNull(obj18);
        org.junit.Assert.assertNull(obj26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(strSet28);
        org.junit.Assert.assertTrue("'" + long32 + "' != '" + 10L + "'", long32 == 10L);
        org.junit.Assert.assertNull(obj33);
        org.junit.Assert.assertNotNull(properties36);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "tmlog" + "'", str37, "tmlog");
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 0 + "'", int42 == 0);
        org.junit.Assert.assertNotNull(obj43);
        org.junit.Assert.assertEquals(obj43.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj43), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj43), "{}");
    }

    @Test
    public void test1477() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1477");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setDefaultJtaTimeout((long) (byte) 10);
        atomikosProperties0.setCheckpointInterval((long) (byte) 0);
        atomikosProperties0.setTransactionManagerUniqueName("");
        java.util.Properties properties7 = atomikosProperties0.asProperties();
        java.lang.String str8 = atomikosProperties0.getTransactionManagerUniqueName();
        atomikosProperties0.setDefaultJtaTimeout((long) (-1));
        java.lang.String str11 = atomikosProperties0.getService();
        atomikosProperties0.setLogBaseDir("{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.tm_unique_name=, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
        boolean boolean14 = atomikosProperties0.isSerialJtaTransactions();
        java.util.Properties properties15 = atomikosProperties0.asProperties();
        java.util.Properties properties16 = new java.util.Properties();
        java.util.Enumeration<?> wildcardEnumeration17 = properties16.propertyNames();
        java.lang.Object obj18 = properties16.clone();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties19 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties19.setDefaultJtaTimeout((long) (byte) 10);
        atomikosProperties19.setCheckpointInterval((long) (byte) 0);
        atomikosProperties19.setTransactionManagerUniqueName("");
        boolean boolean26 = atomikosProperties19.isEnableLogging();
        java.util.Properties properties27 = atomikosProperties19.asProperties();
        java.util.Properties properties28 = new java.util.Properties(properties27);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties29 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties29.setDefaultJtaTimeout((long) (byte) 10);
        atomikosProperties29.setSerialJtaTransactions(false);
        atomikosProperties29.setMaxTimeout((long) (short) -1);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties36 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties36.setDefaultJtaTimeout((long) (byte) 10);
        atomikosProperties36.setCheckpointInterval((long) (byte) 0);
        atomikosProperties36.setTransactionManagerUniqueName("");
        java.util.Properties properties43 = atomikosProperties36.asProperties();
        java.lang.String str44 = atomikosProperties36.getLogBaseName();
        java.util.Properties properties45 = atomikosProperties36.asProperties();
        java.lang.Object obj46 = properties27.getOrDefault((java.lang.Object) (short) -1, (java.lang.Object) atomikosProperties36);
        long long47 = atomikosProperties36.getCheckpointInterval();
        java.lang.Object obj48 = properties16.remove((java.lang.Object) atomikosProperties36);
        java.util.Properties properties49 = new java.util.Properties(properties16);
        java.util.Properties properties50 = new java.util.Properties(properties49);
        boolean boolean51 = properties15.containsValue((java.lang.Object) properties49);
        java.io.OutputStream outputStream52 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties49.storeToXML(outputStream52, "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.log_base_dir=hi!, com.atomikos.icatch.threaded_2pc=true, com.atomikos.icatch.max_actives=35, com.atomikos.icatch.log_base_name=tmlog}");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(properties7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "" + "'", str8, "");
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(properties15);
        org.junit.Assert.assertNotNull(wildcardEnumeration17);
        org.junit.Assert.assertNotNull(obj18);
        org.junit.Assert.assertEquals(obj18.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj18), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj18), "{}");
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertNotNull(properties27);
        org.junit.Assert.assertNotNull(properties43);
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "tmlog" + "'", str44, "tmlog");
        org.junit.Assert.assertNotNull(properties45);
        org.junit.Assert.assertNotNull(obj46);
        org.junit.Assert.assertTrue("'" + long47 + "' != '" + 0L + "'", long47 == 0L);
        org.junit.Assert.assertNull(obj48);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
    }

    @Test
    public void test1478() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1478");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Properties properties2 = new java.util.Properties(properties0);
        java.util.Properties properties3 = null;
        java.util.Properties properties4 = new java.util.Properties(properties3);
        java.lang.Object obj6 = properties2.put((java.lang.Object) properties4, (java.lang.Object) (short) 1);
        boolean boolean7 = properties2.isEmpty();
        java.util.Properties properties8 = null;
        java.util.Properties properties9 = new java.util.Properties(properties8);
        java.util.Properties properties10 = new java.util.Properties(properties8);
        boolean boolean11 = properties2.containsKey((java.lang.Object) properties10);
        java.util.Properties properties12 = new java.util.Properties(properties10);
        java.util.Properties properties13 = new java.util.Properties(properties12);
        java.util.Properties properties14 = null;
        java.util.Properties properties15 = new java.util.Properties(properties14);
        java.util.Properties properties16 = new java.util.Properties(properties14);
        java.util.Properties properties17 = null;
        java.util.Properties properties18 = new java.util.Properties(properties17);
        java.lang.Object obj20 = properties16.put((java.lang.Object) properties18, (java.lang.Object) (short) 1);
        properties18.clear();
        int int22 = properties18.size();
        java.util.Properties properties23 = new java.util.Properties(properties18);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties24 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        int int25 = atomikosProperties24.getMaxActives();
        long long26 = atomikosProperties24.getMaxTimeout();
        java.util.Properties properties27 = atomikosProperties24.asProperties();
        java.util.Properties properties28 = atomikosProperties24.asProperties();
        java.util.Properties properties29 = null;
        java.util.Properties properties30 = new java.util.Properties(properties29);
        java.util.Properties properties31 = new java.util.Properties(properties29);
        java.util.Properties properties32 = null;
        java.util.Properties properties33 = new java.util.Properties(properties32);
        java.lang.Object obj35 = properties31.put((java.lang.Object) properties33, (java.lang.Object) (short) 1);
        java.util.Enumeration<java.lang.Object> objEnumeration36 = properties33.elements();
        java.lang.Object obj37 = properties18.replace((java.lang.Object) atomikosProperties24, (java.lang.Object) properties33);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties39 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties39.setThreadedTwoPhaseCommit(true);
        java.lang.String str42 = atomikosProperties39.getService();
        boolean boolean43 = atomikosProperties39.isSerialJtaTransactions();
        java.lang.Object obj44 = properties33.getOrDefault((java.lang.Object) "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.tm_unique_name=, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}", (java.lang.Object) atomikosProperties39);
        boolean boolean45 = properties12.equals((java.lang.Object) properties33);
        java.io.OutputStream outputStream46 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties33.store(outputStream46, "{{tmlog={com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=0, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.tm_unique_name=, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}, 4=true}={com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=0, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog, {}={}}}");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(obj6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNull(obj20);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 0 + "'", int22 == 0);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 50 + "'", int25 == 50);
        org.junit.Assert.assertTrue("'" + long26 + "' != '" + 300000L + "'", long26 == 300000L);
        org.junit.Assert.assertNotNull(properties27);
        org.junit.Assert.assertNotNull(properties28);
        org.junit.Assert.assertNull(obj35);
        org.junit.Assert.assertNotNull(objEnumeration36);
        org.junit.Assert.assertNull(obj37);
        org.junit.Assert.assertNull(str42);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNotNull(obj44);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
    }

    @Test
    public void test1479() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1479");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        int int1 = atomikosProperties0.getMaxActives();
        long long2 = atomikosProperties0.getMaxTimeout();
        java.util.Properties properties3 = atomikosProperties0.asProperties();
        java.util.Properties properties4 = atomikosProperties0.asProperties();
        long long5 = atomikosProperties0.getCheckpointInterval();
        boolean boolean6 = atomikosProperties0.isForceShutdownOnVmExit();
        java.lang.String str7 = atomikosProperties0.getLogBaseName();
        atomikosProperties0.setLogBaseDir("{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=true, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=true, com.atomikos.icatch.max_actives=35, com.atomikos.icatch.log_base_name=tmlog}");
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 50 + "'", int1 == 50);
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + 300000L + "'", long2 == 300000L);
        org.junit.Assert.assertNotNull(properties3);
        org.junit.Assert.assertNotNull(properties4);
        org.junit.Assert.assertTrue("'" + long5 + "' != '" + 500L + "'", long5 == 500L);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "tmlog" + "'", str7, "tmlog");
    }

    @Test
    public void test1480() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1480");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Properties properties2 = new java.util.Properties(properties0);
        java.util.Properties properties3 = null;
        java.util.Properties properties4 = new java.util.Properties(properties3);
        java.lang.Object obj6 = properties2.put((java.lang.Object) properties4, (java.lang.Object) (short) 1);
        java.util.Properties properties7 = new java.util.Properties(properties4);
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet8 = properties4.entrySet();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties9 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties9.setThreadedTwoPhaseCommit(true);
        atomikosProperties9.setMaxActives((int) (byte) 0);
        atomikosProperties9.setEnableLogging(true);
        atomikosProperties9.setMaxActives((int) (byte) 1);
        boolean boolean18 = properties4.containsValue((java.lang.Object) atomikosProperties9);
        java.util.Properties properties19 = new java.util.Properties(properties4);
        java.util.Set<java.lang.Object> objSet20 = properties19.keySet();
        java.io.PrintWriter printWriter21 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties19.list(printWriter21);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(obj6);
        org.junit.Assert.assertNotNull(objEntrySet8);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(objSet20);
    }

    @Test
    public void test1481() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1481");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setDefaultJtaTimeout((long) (byte) 10);
        long long3 = atomikosProperties0.getDefaultJtaTimeout();
        atomikosProperties0.setTransactionManagerUniqueName("hi!");
        atomikosProperties0.setTransactionManagerUniqueName("{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=0, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.tm_unique_name=, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
        atomikosProperties0.setEnableLogging(false);
        java.lang.String str10 = atomikosProperties0.getTransactionManagerUniqueName();
        java.lang.String str11 = atomikosProperties0.getLogBaseName();
        java.lang.String str12 = atomikosProperties0.getTransactionManagerUniqueName();
        boolean boolean13 = atomikosProperties0.isSerialJtaTransactions();
        org.junit.Assert.assertTrue("'" + long3 + "' != '" + 10L + "'", long3 == 10L);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=0, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.tm_unique_name=, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}" + "'", str10, "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=0, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.tm_unique_name=, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "tmlog" + "'", str11, "tmlog");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=0, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.tm_unique_name=, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}" + "'", str12, "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=0, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.tm_unique_name=, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
    }

    @Test
    public void test1482() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1482");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        boolean boolean1 = atomikosProperties0.isForceShutdownOnVmExit();
        java.util.Properties properties2 = atomikosProperties0.asProperties();
        java.util.Properties properties3 = null;
        java.util.Properties properties4 = new java.util.Properties(properties3);
        java.util.Properties properties5 = new java.util.Properties(properties3);
        java.util.Properties properties6 = null;
        java.util.Properties properties7 = new java.util.Properties(properties6);
        java.lang.Object obj9 = properties5.put((java.lang.Object) properties7, (java.lang.Object) (short) 1);
        properties7.clear();
        int int11 = properties7.size();
        java.util.Properties properties12 = null;
        java.util.Properties properties13 = new java.util.Properties(properties12);
        java.util.Properties properties14 = new java.util.Properties(properties12);
        java.util.Properties properties15 = null;
        java.util.Properties properties16 = new java.util.Properties(properties15);
        java.lang.Object obj18 = properties14.put((java.lang.Object) properties16, (java.lang.Object) (short) 1);
        java.util.Properties properties19 = new java.util.Properties(properties16);
        java.util.Properties properties20 = new java.util.Properties(properties16);
        boolean boolean22 = properties7.remove((java.lang.Object) properties16, (java.lang.Object) 10.0f);
        boolean boolean23 = properties2.containsKey((java.lang.Object) 10.0f);
        java.util.Properties properties24 = new java.util.Properties(properties2);
        java.util.Properties properties25 = new java.util.Properties(properties2);
        java.util.Enumeration<?> wildcardEnumeration26 = properties25.propertyNames();
        java.io.OutputStream outputStream27 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties25.storeToXML(outputStream27, "tmlog", "{}");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertNotNull(properties2);
        org.junit.Assert.assertNull(obj9);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertNull(obj18);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(wildcardEnumeration26);
    }

    @Test
    public void test1483() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1483");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        int int1 = atomikosProperties0.getMaxActives();
        java.util.Properties properties2 = atomikosProperties0.asProperties();
        java.util.Properties properties3 = null;
        java.util.Properties properties4 = new java.util.Properties(properties3);
        java.util.Properties properties5 = new java.util.Properties(properties3);
        boolean boolean7 = properties5.containsValue((java.lang.Object) (short) 100);
        java.util.Properties properties8 = null;
        java.util.Properties properties9 = new java.util.Properties(properties8);
        java.util.Properties properties10 = new java.util.Properties(properties8);
        java.util.Properties properties11 = null;
        java.util.Properties properties12 = new java.util.Properties(properties11);
        java.lang.Object obj14 = properties10.put((java.lang.Object) properties12, (java.lang.Object) (short) 1);
        java.util.Enumeration<java.lang.Object> objEnumeration15 = properties12.elements();
        java.lang.Object obj16 = properties5.remove((java.lang.Object) properties12);
        java.util.Properties properties17 = null;
        java.util.Properties properties18 = new java.util.Properties(properties17);
        java.util.Properties properties19 = new java.util.Properties(properties17);
        java.util.Properties properties20 = null;
        java.util.Properties properties21 = new java.util.Properties(properties20);
        java.lang.Object obj23 = properties19.put((java.lang.Object) properties21, (java.lang.Object) (short) 1);
        java.util.Enumeration<java.lang.Object> objEnumeration24 = properties21.elements();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet25 = properties21.entrySet();
        java.util.Set<java.lang.Object> objSet26 = properties21.keySet();
        java.util.Properties properties27 = null;
        java.util.Properties properties28 = new java.util.Properties(properties27);
        java.util.Properties properties29 = new java.util.Properties(properties27);
        java.util.Properties properties30 = null;
        java.util.Properties properties31 = new java.util.Properties(properties30);
        java.lang.Object obj33 = properties29.put((java.lang.Object) properties31, (java.lang.Object) (short) 1);
        properties31.clear();
        int int35 = properties31.size();
        java.util.Properties properties36 = new java.util.Properties(properties31);
        java.util.Properties properties37 = null;
        java.util.Properties properties38 = new java.util.Properties(properties37);
        java.util.Properties properties39 = new java.util.Properties(properties37);
        java.util.Properties properties40 = null;
        java.util.Properties properties41 = new java.util.Properties(properties40);
        java.lang.Object obj43 = properties39.put((java.lang.Object) properties41, (java.lang.Object) (short) 1);
        properties41.clear();
        java.lang.String str46 = properties41.getProperty("");
        java.util.Properties properties47 = null;
        java.util.Properties properties48 = new java.util.Properties(properties47);
        java.util.Properties properties49 = new java.util.Properties(properties47);
        java.util.Properties properties50 = null;
        java.util.Properties properties51 = new java.util.Properties(properties50);
        java.lang.Object obj53 = properties49.put((java.lang.Object) properties51, (java.lang.Object) (short) 1);
        properties41.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties49);
        java.lang.Object obj55 = properties21.put((java.lang.Object) properties31, (java.lang.Object) properties49);
        java.util.Properties properties56 = null;
        java.util.Properties properties57 = new java.util.Properties(properties56);
        java.util.Properties properties58 = new java.util.Properties(properties56);
        java.util.Properties properties59 = null;
        java.util.Properties properties60 = new java.util.Properties(properties59);
        java.lang.Object obj62 = properties58.put((java.lang.Object) properties60, (java.lang.Object) (short) 1);
        java.util.Properties properties63 = new java.util.Properties(properties60);
        java.util.Properties properties64 = new java.util.Properties(properties60);
        java.util.Set<java.lang.Object> objSet65 = properties64.keySet();
        java.lang.Object obj66 = properties5.replace((java.lang.Object) properties21, (java.lang.Object) objSet65);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties67 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        int int68 = atomikosProperties67.getMaxActives();
        long long69 = atomikosProperties67.getMaxTimeout();
        java.util.Properties properties70 = atomikosProperties67.asProperties();
        atomikosProperties67.setService("hi!");
        boolean boolean73 = properties2.remove((java.lang.Object) properties5, (java.lang.Object) "hi!");
        java.util.Properties properties74 = new java.util.Properties(properties5);
        java.util.Enumeration<java.lang.Object> objEnumeration75 = properties74.elements();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 50 + "'", int1 == 50);
        org.junit.Assert.assertNotNull(properties2);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNull(obj14);
        org.junit.Assert.assertNotNull(objEnumeration15);
        org.junit.Assert.assertNull(obj16);
        org.junit.Assert.assertNull(obj23);
        org.junit.Assert.assertNotNull(objEnumeration24);
        org.junit.Assert.assertNotNull(objEntrySet25);
        org.junit.Assert.assertNotNull(objSet26);
        org.junit.Assert.assertNull(obj33);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 0 + "'", int35 == 0);
        org.junit.Assert.assertNull(obj43);
        org.junit.Assert.assertNull(str46);
        org.junit.Assert.assertNull(obj53);
        org.junit.Assert.assertNull(obj55);
        org.junit.Assert.assertNull(obj62);
        org.junit.Assert.assertNotNull(objSet65);
        org.junit.Assert.assertNull(obj66);
        org.junit.Assert.assertTrue("'" + int68 + "' != '" + 50 + "'", int68 == 50);
        org.junit.Assert.assertTrue("'" + long69 + "' != '" + 300000L + "'", long69 == 300000L);
        org.junit.Assert.assertNotNull(properties70);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertNotNull(objEnumeration75);
    }

    @Test
    public void test1484() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1484");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setDefaultJtaTimeout((long) (byte) 10);
        atomikosProperties0.setCheckpointInterval((long) (byte) 0);
        atomikosProperties0.setEnableLogging(true);
        java.lang.String str7 = atomikosProperties0.getLogBaseName();
        atomikosProperties0.setCheckpointInterval((long) ' ');
        atomikosProperties0.setMaxActives(10);
        atomikosProperties0.setLogBaseName("{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.tm_unique_name=, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
        java.lang.String str14 = atomikosProperties0.getLogBaseDir();
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "tmlog" + "'", str7, "tmlog");
        org.junit.Assert.assertNull(str14);
    }

    @Test
    public void test1485() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1485");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setDefaultJtaTimeout((long) (byte) 10);
        atomikosProperties0.setCheckpointInterval((long) (byte) 0);
        atomikosProperties0.setTransactionManagerUniqueName("");
        boolean boolean7 = atomikosProperties0.isEnableLogging();
        java.lang.String str8 = atomikosProperties0.getLogBaseName();
        atomikosProperties0.setEnableLogging(false);
        atomikosProperties0.setThreadedTwoPhaseCommit(true);
        boolean boolean13 = atomikosProperties0.isThreadedTwoPhaseCommit();
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "tmlog" + "'", str8, "tmlog");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
    }

    @Test
    public void test1486() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1486");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Properties properties2 = new java.util.Properties(properties0);
        java.util.Properties properties3 = null;
        java.util.Properties properties4 = new java.util.Properties(properties3);
        java.lang.Object obj6 = properties2.put((java.lang.Object) properties4, (java.lang.Object) (short) 1);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties7 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties7.setThreadedTwoPhaseCommit(true);
        atomikosProperties7.setMaxActives((int) (byte) 0);
        boolean boolean12 = properties2.containsValue((java.lang.Object) atomikosProperties7);
        java.lang.Object obj13 = properties2.clone();
        java.util.Properties properties14 = null;
        java.util.Properties properties15 = new java.util.Properties(properties14);
        java.util.Properties properties16 = new java.util.Properties(properties14);
        boolean boolean18 = properties16.containsValue((java.lang.Object) (short) 100);
        java.util.Properties properties19 = null;
        java.util.Properties properties20 = new java.util.Properties(properties19);
        java.util.Properties properties21 = new java.util.Properties(properties19);
        java.util.Properties properties22 = null;
        java.util.Properties properties23 = new java.util.Properties(properties22);
        java.lang.Object obj25 = properties21.put((java.lang.Object) properties23, (java.lang.Object) (short) 1);
        java.util.Enumeration<java.lang.Object> objEnumeration26 = properties23.elements();
        java.lang.Object obj27 = properties16.remove((java.lang.Object) properties23);
        java.lang.Object obj30 = properties23.setProperty("", "");
        java.util.Properties properties31 = null;
        java.util.Properties properties32 = new java.util.Properties(properties31);
        java.util.Properties properties33 = new java.util.Properties(properties31);
        java.util.Properties properties34 = null;
        java.util.Properties properties35 = new java.util.Properties(properties34);
        java.lang.Object obj37 = properties33.put((java.lang.Object) properties35, (java.lang.Object) (short) 1);
        java.util.Properties properties39 = null;
        java.util.Properties properties40 = new java.util.Properties(properties39);
        java.util.Properties properties41 = new java.util.Properties(properties39);
        java.util.Properties properties42 = null;
        java.util.Properties properties43 = new java.util.Properties(properties42);
        java.lang.Object obj45 = properties41.put((java.lang.Object) properties43, (java.lang.Object) (short) 1);
        boolean boolean46 = properties35.remove((java.lang.Object) false, (java.lang.Object) (short) 1);
        java.util.Properties properties47 = new java.util.Properties(properties35);
        properties23.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties47);
        java.util.Properties properties49 = null;
        java.util.Properties properties50 = new java.util.Properties(properties49);
        java.util.Properties properties51 = new java.util.Properties(properties49);
        java.util.Properties properties52 = null;
        java.util.Properties properties53 = new java.util.Properties(properties52);
        java.lang.Object obj55 = properties51.put((java.lang.Object) properties53, (java.lang.Object) (short) 1);
        properties53.clear();
        int int57 = properties53.size();
        java.util.Properties properties58 = null;
        java.util.Properties properties59 = new java.util.Properties(properties58);
        java.util.Properties properties60 = new java.util.Properties(properties58);
        java.util.Properties properties61 = null;
        java.util.Properties properties62 = new java.util.Properties(properties61);
        java.lang.Object obj64 = properties60.put((java.lang.Object) properties62, (java.lang.Object) (short) 1);
        java.util.Properties properties65 = new java.util.Properties(properties62);
        java.util.Properties properties66 = new java.util.Properties(properties62);
        boolean boolean68 = properties53.remove((java.lang.Object) properties62, (java.lang.Object) 10.0f);
        java.util.Enumeration<java.lang.Object> objEnumeration69 = properties62.elements();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties70 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties70.setDefaultJtaTimeout((long) (byte) 10);
        atomikosProperties70.setCheckpointInterval((long) (byte) 0);
        long long75 = atomikosProperties70.getMaxTimeout();
        atomikosProperties70.setSerialJtaTransactions(true);
        java.util.Properties properties78 = new java.util.Properties();
        java.util.Enumeration<?> wildcardEnumeration79 = properties78.propertyNames();
        java.lang.Object obj80 = properties62.replace((java.lang.Object) atomikosProperties70, (java.lang.Object) properties78);
        boolean boolean81 = properties23.contains((java.lang.Object) properties78);
        java.util.Set<java.lang.Object> objSet82 = properties23.keySet();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties83 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties83.setDefaultJtaTimeout((long) (byte) 10);
        long long86 = atomikosProperties83.getDefaultJtaTimeout();
        atomikosProperties83.setTransactionManagerUniqueName("");
        long long89 = atomikosProperties83.getDefaultJtaTimeout();
        boolean boolean90 = atomikosProperties83.isEnableLogging();
        atomikosProperties83.setSerialJtaTransactions(false);
        java.lang.Object obj93 = properties23.remove((java.lang.Object) atomikosProperties83);
        java.util.Properties properties94 = atomikosProperties83.asProperties();
        boolean boolean95 = properties2.equals((java.lang.Object) properties94);
        java.util.Enumeration<java.lang.Object> objEnumeration96 = properties94.keys();
        java.lang.Object obj99 = properties94.setProperty("", "{[]={com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=0, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.tm_unique_name=, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}}");
        org.junit.Assert.assertNull(obj6);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(obj13);
        org.junit.Assert.assertEquals(obj13.toString(), "{{}=1}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj13), "{{}=1}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj13), "{{}=1}");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNull(obj25);
        org.junit.Assert.assertNotNull(objEnumeration26);
        org.junit.Assert.assertNull(obj27);
        org.junit.Assert.assertNull(obj30);
        org.junit.Assert.assertNull(obj37);
        org.junit.Assert.assertNull(obj45);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNull(obj55);
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + 0 + "'", int57 == 0);
        org.junit.Assert.assertNull(obj64);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertNotNull(objEnumeration69);
        org.junit.Assert.assertTrue("'" + long75 + "' != '" + 300000L + "'", long75 == 300000L);
        org.junit.Assert.assertNotNull(wildcardEnumeration79);
        org.junit.Assert.assertNull(obj80);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + false + "'", boolean81 == false);
        org.junit.Assert.assertNotNull(objSet82);
        org.junit.Assert.assertTrue("'" + long86 + "' != '" + 10L + "'", long86 == 10L);
        org.junit.Assert.assertTrue("'" + long89 + "' != '" + 10L + "'", long89 == 10L);
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + true + "'", boolean90 == true);
        org.junit.Assert.assertNull(obj93);
        org.junit.Assert.assertNotNull(properties94);
        org.junit.Assert.assertTrue("'" + boolean95 + "' != '" + false + "'", boolean95 == false);
        org.junit.Assert.assertNotNull(objEnumeration96);
        org.junit.Assert.assertNull(obj99);
    }

    @Test
    public void test1487() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1487");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setDefaultJtaTimeout((long) (byte) 10);
        atomikosProperties0.setCheckpointInterval((long) (byte) 0);
        atomikosProperties0.setTransactionManagerUniqueName("");
        java.util.Properties properties7 = atomikosProperties0.asProperties();
        java.lang.String str8 = atomikosProperties0.getLogBaseName();
        java.util.Properties properties9 = atomikosProperties0.asProperties();
        java.util.Enumeration<java.lang.Object> objEnumeration10 = properties9.keys();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties12 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties12.setDefaultJtaTimeout((long) (byte) 10);
        long long15 = atomikosProperties12.getDefaultJtaTimeout();
        atomikosProperties12.setTransactionManagerUniqueName("");
        atomikosProperties12.setCheckpointInterval(100L);
        boolean boolean20 = properties9.remove((java.lang.Object) "hi!", (java.lang.Object) atomikosProperties12);
        java.util.Properties properties21 = new java.util.Properties(properties9);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties22 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties22.setDefaultJtaTimeout((long) (byte) 10);
        long long25 = atomikosProperties22.getDefaultJtaTimeout();
        atomikosProperties22.setTransactionManagerUniqueName("");
        boolean boolean28 = atomikosProperties22.isEnableLogging();
        java.lang.String str29 = atomikosProperties22.getLogBaseDir();
        java.util.Properties properties30 = atomikosProperties22.asProperties();
        atomikosProperties22.setForceShutdownOnVmExit(true);
        long long33 = atomikosProperties22.getCheckpointInterval();
        atomikosProperties22.setForceShutdownOnVmExit(true);
        atomikosProperties22.setLogBaseDir("");
        boolean boolean38 = properties21.contains((java.lang.Object) "");
        org.junit.Assert.assertNotNull(properties7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "tmlog" + "'", str8, "tmlog");
        org.junit.Assert.assertNotNull(properties9);
        org.junit.Assert.assertNotNull(objEnumeration10);
        org.junit.Assert.assertTrue("'" + long15 + "' != '" + 10L + "'", long15 == 10L);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertTrue("'" + long25 + "' != '" + 10L + "'", long25 == 10L);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNull(str29);
        org.junit.Assert.assertNotNull(properties30);
        org.junit.Assert.assertTrue("'" + long33 + "' != '" + 500L + "'", long33 == 500L);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
    }

    @Test
    public void test1488() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1488");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setDefaultJtaTimeout((long) (byte) 10);
        atomikosProperties0.setCheckpointInterval((long) (byte) 0);
        atomikosProperties0.setTransactionManagerUniqueName("");
        boolean boolean7 = atomikosProperties0.isEnableLogging();
        atomikosProperties0.setCheckpointInterval((long) ' ');
        java.util.Properties properties10 = atomikosProperties0.asProperties();
        int int11 = properties10.size();
        java.io.OutputStream outputStream12 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties10.store(outputStream12, "{tmlog={}}");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(properties10);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 10 + "'", int11 == 10);
    }

    @Test
    public void test1489() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1489");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Properties properties2 = new java.util.Properties(properties0);
        java.util.Properties properties3 = null;
        java.util.Properties properties4 = new java.util.Properties(properties3);
        java.lang.Object obj6 = properties2.put((java.lang.Object) properties4, (java.lang.Object) (short) 1);
        java.util.Properties properties7 = new java.util.Properties(properties4);
        java.util.Properties properties8 = new java.util.Properties(properties4);
        java.util.Set<java.lang.Object> objSet9 = properties8.keySet();
        java.util.Properties properties10 = new java.util.Properties(properties8);
        int int11 = properties10.size();
        java.util.Properties properties12 = null;
        java.util.Properties properties13 = new java.util.Properties(properties12);
        java.util.Properties properties14 = new java.util.Properties(properties12);
        java.util.Properties properties15 = null;
        java.util.Properties properties16 = new java.util.Properties(properties15);
        java.lang.Object obj18 = properties14.put((java.lang.Object) properties16, (java.lang.Object) (short) 1);
        java.util.Properties properties20 = null;
        java.util.Properties properties21 = new java.util.Properties(properties20);
        java.util.Properties properties22 = new java.util.Properties(properties20);
        java.util.Properties properties23 = null;
        java.util.Properties properties24 = new java.util.Properties(properties23);
        java.lang.Object obj26 = properties22.put((java.lang.Object) properties24, (java.lang.Object) (short) 1);
        boolean boolean27 = properties16.remove((java.lang.Object) false, (java.lang.Object) (short) 1);
        java.util.Set<java.lang.String> strSet28 = properties16.stringPropertyNames();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties29 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties29.setDefaultJtaTimeout((long) (byte) 10);
        long long32 = atomikosProperties29.getDefaultJtaTimeout();
        java.lang.Object obj33 = properties16.get((java.lang.Object) atomikosProperties29);
        atomikosProperties29.setCheckpointInterval((long) (short) 100);
        java.util.Properties properties36 = atomikosProperties29.asProperties();
        java.lang.String str37 = atomikosProperties29.getLogBaseName();
        atomikosProperties29.setLogBaseDir("{}");
        java.util.Properties properties40 = null;
        java.util.Properties properties41 = new java.util.Properties(properties40);
        int int42 = properties41.size();
        java.lang.Object obj43 = properties10.getOrDefault((java.lang.Object) atomikosProperties29, (java.lang.Object) properties41);
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet44 = properties10.entrySet();
        int int45 = properties10.size();
        org.junit.Assert.assertNull(obj6);
        org.junit.Assert.assertNotNull(objSet9);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertNull(obj18);
        org.junit.Assert.assertNull(obj26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(strSet28);
        org.junit.Assert.assertTrue("'" + long32 + "' != '" + 10L + "'", long32 == 10L);
        org.junit.Assert.assertNull(obj33);
        org.junit.Assert.assertNotNull(properties36);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "tmlog" + "'", str37, "tmlog");
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 0 + "'", int42 == 0);
        org.junit.Assert.assertNotNull(obj43);
        org.junit.Assert.assertEquals(obj43.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj43), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj43), "{}");
        org.junit.Assert.assertNotNull(objEntrySet44);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 0 + "'", int45 == 0);
    }

    @Test
    public void test1490() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1490");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setDefaultJtaTimeout((long) (byte) 10);
        atomikosProperties0.setCheckpointInterval((long) (byte) 0);
        atomikosProperties0.setEnableLogging(true);
        atomikosProperties0.setThreadedTwoPhaseCommit(false);
        boolean boolean9 = atomikosProperties0.isForceShutdownOnVmExit();
        atomikosProperties0.setThreadedTwoPhaseCommit(true);
        java.util.Properties properties12 = atomikosProperties0.asProperties();
        atomikosProperties0.setForceShutdownOnVmExit(true);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(properties12);
    }

    @Test
    public void test1491() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1491");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Properties properties2 = new java.util.Properties(properties0);
        java.util.Properties properties3 = null;
        java.util.Properties properties4 = new java.util.Properties(properties3);
        java.lang.Object obj6 = properties2.put((java.lang.Object) properties4, (java.lang.Object) (short) 1);
        boolean boolean7 = properties2.isEmpty();
        java.util.Properties properties8 = null;
        java.util.Properties properties9 = new java.util.Properties(properties8);
        java.util.Properties properties10 = new java.util.Properties(properties8);
        boolean boolean11 = properties2.containsKey((java.lang.Object) properties10);
        java.util.Properties properties12 = new java.util.Properties(properties10);
        java.util.Properties properties13 = null;
        java.util.Properties properties14 = new java.util.Properties(properties13);
        java.util.Properties properties15 = new java.util.Properties(properties13);
        boolean boolean17 = properties15.containsValue((java.lang.Object) (short) 100);
        java.util.Properties properties18 = new java.util.Properties(properties15);
        java.lang.String str20 = properties18.getProperty("hi!");
        boolean boolean21 = properties10.containsKey((java.lang.Object) properties18);
        java.util.Properties properties22 = new java.util.Properties(properties18);
        java.util.Enumeration<java.lang.Object> objEnumeration23 = properties22.elements();
        java.io.InputStream inputStream24 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties22.loadFromXML(inputStream24);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(obj6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNull(str20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(objEnumeration23);
    }

    @Test
    public void test1492() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1492");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Properties properties2 = new java.util.Properties(properties0);
        java.util.Properties properties3 = null;
        java.util.Properties properties4 = new java.util.Properties(properties3);
        java.lang.Object obj6 = properties2.put((java.lang.Object) properties4, (java.lang.Object) (short) 1);
        properties4.clear();
        int int8 = properties4.size();
        java.util.Properties properties9 = null;
        java.util.Properties properties10 = new java.util.Properties(properties9);
        java.util.Properties properties11 = new java.util.Properties(properties9);
        java.util.Properties properties12 = null;
        java.util.Properties properties13 = new java.util.Properties(properties12);
        java.lang.Object obj15 = properties11.put((java.lang.Object) properties13, (java.lang.Object) (short) 1);
        java.util.Properties properties16 = new java.util.Properties(properties13);
        java.util.Properties properties17 = new java.util.Properties(properties13);
        boolean boolean19 = properties4.remove((java.lang.Object) properties13, (java.lang.Object) 10.0f);
        java.util.Enumeration<java.lang.Object> objEnumeration20 = properties13.elements();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties21 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties21.setDefaultJtaTimeout((long) (byte) 10);
        atomikosProperties21.setCheckpointInterval((long) (byte) 0);
        long long26 = atomikosProperties21.getMaxTimeout();
        atomikosProperties21.setSerialJtaTransactions(true);
        java.util.Properties properties29 = new java.util.Properties();
        java.util.Enumeration<?> wildcardEnumeration30 = properties29.propertyNames();
        java.lang.Object obj31 = properties13.replace((java.lang.Object) atomikosProperties21, (java.lang.Object) properties29);
        java.util.Properties properties32 = null;
        java.util.Properties properties33 = new java.util.Properties(properties32);
        java.util.Properties properties34 = new java.util.Properties(properties32);
        java.util.Properties properties35 = null;
        java.util.Properties properties36 = new java.util.Properties(properties35);
        java.lang.Object obj38 = properties34.put((java.lang.Object) properties36, (java.lang.Object) (short) 1);
        boolean boolean39 = properties34.isEmpty();
        java.util.Properties properties40 = null;
        java.util.Properties properties41 = new java.util.Properties(properties40);
        java.util.Properties properties42 = new java.util.Properties(properties40);
        boolean boolean43 = properties34.containsKey((java.lang.Object) properties42);
        java.util.Properties properties44 = new java.util.Properties(properties42);
        java.util.Properties properties45 = null;
        java.util.Properties properties46 = new java.util.Properties(properties45);
        java.util.Properties properties47 = new java.util.Properties(properties45);
        java.util.Properties properties48 = null;
        java.util.Properties properties49 = new java.util.Properties(properties48);
        java.lang.Object obj51 = properties47.put((java.lang.Object) properties49, (java.lang.Object) (short) 1);
        boolean boolean52 = properties47.isEmpty();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties53 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties53.setDefaultJtaTimeout((long) (byte) 10);
        atomikosProperties53.setCheckpointInterval((long) (byte) 0);
        atomikosProperties53.setTransactionManagerUniqueName("");
        java.util.Properties properties60 = atomikosProperties53.asProperties();
        java.lang.Object obj61 = properties47.remove((java.lang.Object) properties60);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties62 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties62.setDefaultJtaTimeout((long) (byte) 10);
        atomikosProperties62.setCheckpointInterval((long) (byte) 0);
        atomikosProperties62.setTransactionManagerUniqueName("");
        java.lang.Object obj69 = properties60.remove((java.lang.Object) atomikosProperties62);
        java.util.Enumeration<java.lang.Object> objEnumeration70 = properties60.elements();
        java.lang.Object obj71 = properties44.get((java.lang.Object) properties60);
        properties13.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties60);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties73 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties73.setThreadedTwoPhaseCommit(true);
        atomikosProperties73.setMaxActives((int) (byte) 0);
        atomikosProperties73.setEnableLogging(true);
        atomikosProperties73.setForceShutdownOnVmExit(false);
        java.util.Properties properties82 = atomikosProperties73.asProperties();
        boolean boolean83 = atomikosProperties73.isThreadedTwoPhaseCommit();
        atomikosProperties73.setEnableLogging(true);
        boolean boolean86 = properties60.containsValue((java.lang.Object) atomikosProperties73);
        atomikosProperties73.setThreadedTwoPhaseCommit(true);
        org.junit.Assert.assertNull(obj6);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertNull(obj15);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(objEnumeration20);
        org.junit.Assert.assertTrue("'" + long26 + "' != '" + 300000L + "'", long26 == 300000L);
        org.junit.Assert.assertNotNull(wildcardEnumeration30);
        org.junit.Assert.assertNull(obj31);
        org.junit.Assert.assertNull(obj38);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNull(obj51);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNotNull(properties60);
        org.junit.Assert.assertNull(obj61);
        org.junit.Assert.assertNull(obj69);
        org.junit.Assert.assertNotNull(objEnumeration70);
        org.junit.Assert.assertNull(obj71);
        org.junit.Assert.assertNotNull(properties82);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + true + "'", boolean83 == true);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + false + "'", boolean86 == false);
    }

    @Test
    public void test1493() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1493");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Properties properties2 = new java.util.Properties(properties0);
        java.util.Properties properties3 = null;
        java.util.Properties properties4 = new java.util.Properties(properties3);
        java.lang.Object obj6 = properties2.put((java.lang.Object) properties4, (java.lang.Object) (short) 1);
        java.util.Properties properties8 = null;
        java.util.Properties properties9 = new java.util.Properties(properties8);
        java.util.Properties properties10 = new java.util.Properties(properties8);
        java.util.Properties properties11 = null;
        java.util.Properties properties12 = new java.util.Properties(properties11);
        java.lang.Object obj14 = properties10.put((java.lang.Object) properties12, (java.lang.Object) (short) 1);
        boolean boolean15 = properties4.remove((java.lang.Object) false, (java.lang.Object) (short) 1);
        java.util.Set<java.lang.String> strSet16 = properties4.stringPropertyNames();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties17 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties17.setDefaultJtaTimeout((long) (byte) 10);
        long long20 = atomikosProperties17.getDefaultJtaTimeout();
        java.lang.Object obj21 = properties4.get((java.lang.Object) atomikosProperties17);
        long long22 = atomikosProperties17.getCheckpointInterval();
        boolean boolean23 = atomikosProperties17.isEnableLogging();
        boolean boolean24 = atomikosProperties17.isThreadedTwoPhaseCommit();
        java.util.Properties properties25 = atomikosProperties17.asProperties();
        java.io.OutputStream outputStream26 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties25.save(outputStream26, "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(obj6);
        org.junit.Assert.assertNull(obj14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(strSet16);
        org.junit.Assert.assertTrue("'" + long20 + "' != '" + 10L + "'", long20 == 10L);
        org.junit.Assert.assertNull(obj21);
        org.junit.Assert.assertTrue("'" + long22 + "' != '" + 500L + "'", long22 == 500L);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(properties25);
    }

    @Test
    public void test1494() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1494");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setDefaultJtaTimeout((long) (byte) 10);
        long long3 = atomikosProperties0.getDefaultJtaTimeout();
        java.lang.String str4 = atomikosProperties0.getTransactionManagerUniqueName();
        atomikosProperties0.setThreadedTwoPhaseCommit(true);
        java.util.Properties properties7 = atomikosProperties0.asProperties();
        java.io.OutputStream outputStream8 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties7.storeToXML(outputStream8, "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.log_base_dir={}, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + long3 + "' != '" + 10L + "'", long3 == 10L);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertNotNull(properties7);
    }

    @Test
    public void test1495() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1495");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        int int1 = atomikosProperties0.getMaxActives();
        long long2 = atomikosProperties0.getMaxTimeout();
        java.util.Properties properties3 = atomikosProperties0.asProperties();
        java.util.Properties properties4 = atomikosProperties0.asProperties();
        long long5 = atomikosProperties0.getMaxTimeout();
        java.util.Properties properties6 = atomikosProperties0.asProperties();
        properties6.clear();
        java.util.Enumeration<java.lang.Object> objEnumeration8 = properties6.elements();
        java.util.Properties properties9 = null;
        java.util.Properties properties10 = new java.util.Properties(properties9);
        java.util.Properties properties11 = new java.util.Properties(properties9);
        java.util.Properties properties12 = null;
        java.util.Properties properties13 = new java.util.Properties(properties12);
        java.lang.Object obj15 = properties11.put((java.lang.Object) properties13, (java.lang.Object) (short) 1);
        java.util.Properties properties17 = null;
        java.util.Properties properties18 = new java.util.Properties(properties17);
        java.util.Properties properties19 = new java.util.Properties(properties17);
        java.util.Properties properties20 = null;
        java.util.Properties properties21 = new java.util.Properties(properties20);
        java.lang.Object obj23 = properties19.put((java.lang.Object) properties21, (java.lang.Object) (short) 1);
        boolean boolean24 = properties13.remove((java.lang.Object) false, (java.lang.Object) (short) 1);
        java.util.Properties properties25 = new java.util.Properties(properties13);
        boolean boolean26 = properties13.isEmpty();
        java.util.Properties properties27 = new java.util.Properties(properties13);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties28 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        boolean boolean29 = atomikosProperties28.isForceShutdownOnVmExit();
        java.lang.String str30 = atomikosProperties28.getLogBaseName();
        java.lang.String str31 = atomikosProperties28.getService();
        atomikosProperties28.setLogBaseName("{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.tm_unique_name=, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
        long long34 = atomikosProperties28.getMaxTimeout();
        atomikosProperties28.setMaxTimeout((long) 0);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties37 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties37.setThreadedTwoPhaseCommit(true);
        java.lang.String str40 = atomikosProperties37.getService();
        java.util.Properties properties41 = atomikosProperties37.asProperties();
        java.lang.Object obj42 = properties13.put((java.lang.Object) 0, (java.lang.Object) properties41);
        boolean boolean43 = properties6.containsValue((java.lang.Object) properties13);
        int int44 = properties13.size();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 50 + "'", int1 == 50);
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + 300000L + "'", long2 == 300000L);
        org.junit.Assert.assertNotNull(properties3);
        org.junit.Assert.assertNotNull(properties4);
        org.junit.Assert.assertTrue("'" + long5 + "' != '" + 300000L + "'", long5 == 300000L);
        org.junit.Assert.assertNotNull(properties6);
        org.junit.Assert.assertNotNull(objEnumeration8);
        org.junit.Assert.assertNull(obj15);
        org.junit.Assert.assertNull(obj23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "tmlog" + "'", str30, "tmlog");
        org.junit.Assert.assertNull(str31);
        org.junit.Assert.assertTrue("'" + long34 + "' != '" + 300000L + "'", long34 == 300000L);
        org.junit.Assert.assertNull(str40);
        org.junit.Assert.assertNotNull(properties41);
        org.junit.Assert.assertNull(obj42);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 1 + "'", int44 == 1);
    }

    @Test
    public void test1496() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1496");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Properties properties2 = new java.util.Properties(properties0);
        boolean boolean4 = properties2.containsValue((java.lang.Object) (short) 100);
        java.util.Properties properties5 = null;
        java.util.Properties properties6 = new java.util.Properties(properties5);
        java.util.Properties properties7 = new java.util.Properties(properties5);
        java.util.Properties properties8 = null;
        java.util.Properties properties9 = new java.util.Properties(properties8);
        java.lang.Object obj11 = properties7.put((java.lang.Object) properties9, (java.lang.Object) (short) 1);
        java.util.Enumeration<java.lang.Object> objEnumeration12 = properties9.elements();
        java.lang.Object obj13 = properties2.remove((java.lang.Object) properties9);
        java.util.Properties properties14 = null;
        java.util.Properties properties15 = new java.util.Properties(properties14);
        java.util.Properties properties16 = new java.util.Properties(properties14);
        java.util.Properties properties17 = null;
        java.util.Properties properties18 = new java.util.Properties(properties17);
        java.lang.Object obj20 = properties16.put((java.lang.Object) properties18, (java.lang.Object) (short) 1);
        java.util.Enumeration<java.lang.Object> objEnumeration21 = properties18.elements();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet22 = properties18.entrySet();
        java.util.Set<java.lang.Object> objSet23 = properties18.keySet();
        java.util.Properties properties24 = null;
        java.util.Properties properties25 = new java.util.Properties(properties24);
        java.util.Properties properties26 = new java.util.Properties(properties24);
        java.util.Properties properties27 = null;
        java.util.Properties properties28 = new java.util.Properties(properties27);
        java.lang.Object obj30 = properties26.put((java.lang.Object) properties28, (java.lang.Object) (short) 1);
        properties28.clear();
        int int32 = properties28.size();
        java.util.Properties properties33 = new java.util.Properties(properties28);
        java.util.Properties properties34 = null;
        java.util.Properties properties35 = new java.util.Properties(properties34);
        java.util.Properties properties36 = new java.util.Properties(properties34);
        java.util.Properties properties37 = null;
        java.util.Properties properties38 = new java.util.Properties(properties37);
        java.lang.Object obj40 = properties36.put((java.lang.Object) properties38, (java.lang.Object) (short) 1);
        properties38.clear();
        java.lang.String str43 = properties38.getProperty("");
        java.util.Properties properties44 = null;
        java.util.Properties properties45 = new java.util.Properties(properties44);
        java.util.Properties properties46 = new java.util.Properties(properties44);
        java.util.Properties properties47 = null;
        java.util.Properties properties48 = new java.util.Properties(properties47);
        java.lang.Object obj50 = properties46.put((java.lang.Object) properties48, (java.lang.Object) (short) 1);
        properties38.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties46);
        java.lang.Object obj52 = properties18.put((java.lang.Object) properties28, (java.lang.Object) properties46);
        java.util.Properties properties53 = null;
        java.util.Properties properties54 = new java.util.Properties(properties53);
        java.util.Properties properties55 = new java.util.Properties(properties53);
        java.util.Properties properties56 = null;
        java.util.Properties properties57 = new java.util.Properties(properties56);
        java.lang.Object obj59 = properties55.put((java.lang.Object) properties57, (java.lang.Object) (short) 1);
        java.util.Properties properties60 = new java.util.Properties(properties57);
        java.util.Properties properties61 = new java.util.Properties(properties57);
        java.util.Set<java.lang.Object> objSet62 = properties61.keySet();
        java.lang.Object obj63 = properties2.replace((java.lang.Object) properties18, (java.lang.Object) objSet62);
        java.util.Properties properties64 = null;
        java.util.Properties properties65 = new java.util.Properties(properties64);
        java.util.Properties properties66 = new java.util.Properties(properties64);
        java.util.Properties properties67 = null;
        java.util.Properties properties68 = new java.util.Properties(properties67);
        java.lang.Object obj70 = properties66.put((java.lang.Object) properties68, (java.lang.Object) (short) 1);
        boolean boolean71 = properties66.isEmpty();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties72 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties72.setDefaultJtaTimeout((long) (byte) 10);
        atomikosProperties72.setCheckpointInterval((long) (byte) 0);
        atomikosProperties72.setTransactionManagerUniqueName("");
        java.util.Properties properties79 = atomikosProperties72.asProperties();
        java.lang.Object obj80 = properties66.remove((java.lang.Object) properties79);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties81 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties81.setDefaultJtaTimeout((long) (byte) 10);
        atomikosProperties81.setCheckpointInterval((long) (byte) 0);
        atomikosProperties81.setTransactionManagerUniqueName("");
        java.lang.Object obj88 = properties79.remove((java.lang.Object) atomikosProperties81);
        java.lang.String str89 = properties79.toString();
        java.lang.Object obj90 = properties2.get((java.lang.Object) str89);
        int int91 = properties2.size();
        java.io.OutputStream outputStream92 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties2.save(outputStream92, "{}");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNull(obj11);
        org.junit.Assert.assertNotNull(objEnumeration12);
        org.junit.Assert.assertNull(obj13);
        org.junit.Assert.assertNull(obj20);
        org.junit.Assert.assertNotNull(objEnumeration21);
        org.junit.Assert.assertNotNull(objEntrySet22);
        org.junit.Assert.assertNotNull(objSet23);
        org.junit.Assert.assertNull(obj30);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 0 + "'", int32 == 0);
        org.junit.Assert.assertNull(obj40);
        org.junit.Assert.assertNull(str43);
        org.junit.Assert.assertNull(obj50);
        org.junit.Assert.assertNull(obj52);
        org.junit.Assert.assertNull(obj59);
        org.junit.Assert.assertNotNull(objSet62);
        org.junit.Assert.assertNull(obj63);
        org.junit.Assert.assertNull(obj70);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertNotNull(properties79);
        org.junit.Assert.assertNull(obj80);
        org.junit.Assert.assertNull(obj88);
// flaky:         org.junit.Assert.assertEquals("'" + str89 + "' != '" + "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=0, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.tm_unique_name=, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}" + "'", str89, "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=0, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.tm_unique_name=, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
        org.junit.Assert.assertNull(obj90);
        org.junit.Assert.assertTrue("'" + int91 + "' != '" + 0 + "'", int91 == 0);
    }

    @Test
    public void test1497() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1497");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Properties properties2 = new java.util.Properties(properties0);
        java.util.Properties properties3 = null;
        java.util.Properties properties4 = new java.util.Properties(properties3);
        java.lang.Object obj6 = properties2.put((java.lang.Object) properties4, (java.lang.Object) (short) 1);
        properties4.clear();
        int int8 = properties4.size();
        java.util.Properties properties9 = null;
        java.util.Properties properties10 = new java.util.Properties(properties9);
        java.util.Properties properties11 = new java.util.Properties(properties9);
        java.util.Properties properties12 = null;
        java.util.Properties properties13 = new java.util.Properties(properties12);
        java.lang.Object obj15 = properties11.put((java.lang.Object) properties13, (java.lang.Object) (short) 1);
        java.util.Properties properties16 = new java.util.Properties(properties13);
        java.util.Properties properties17 = new java.util.Properties(properties13);
        boolean boolean19 = properties4.remove((java.lang.Object) properties13, (java.lang.Object) 10.0f);
        java.util.Enumeration<java.lang.Object> objEnumeration20 = properties13.elements();
        java.util.Properties properties21 = new java.util.Properties(properties13);
        java.util.Properties properties22 = new java.util.Properties(properties21);
        java.io.OutputStream outputStream23 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties22.storeToXML(outputStream23, "{tmlog={}}", "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=0, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.tm_unique_name=, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(obj6);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertNull(obj15);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(objEnumeration20);
    }

    @Test
    public void test1498() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1498");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Properties properties2 = new java.util.Properties(properties0);
        java.util.Properties properties3 = null;
        java.util.Properties properties4 = new java.util.Properties(properties3);
        java.lang.Object obj6 = properties2.put((java.lang.Object) properties4, (java.lang.Object) (short) 1);
        java.util.Properties properties7 = new java.util.Properties(properties4);
        java.util.Properties properties8 = new java.util.Properties(properties4);
        java.util.Set<java.lang.Object> objSet9 = properties8.keySet();
        java.util.Properties properties10 = new java.util.Properties(properties8);
        int int11 = properties10.size();
        java.util.Properties properties12 = null;
        java.util.Properties properties13 = new java.util.Properties(properties12);
        java.util.Properties properties14 = new java.util.Properties(properties12);
        java.util.Properties properties15 = null;
        java.util.Properties properties16 = new java.util.Properties(properties15);
        java.lang.Object obj18 = properties14.put((java.lang.Object) properties16, (java.lang.Object) (short) 1);
        java.util.Properties properties20 = null;
        java.util.Properties properties21 = new java.util.Properties(properties20);
        java.util.Properties properties22 = new java.util.Properties(properties20);
        java.util.Properties properties23 = null;
        java.util.Properties properties24 = new java.util.Properties(properties23);
        java.lang.Object obj26 = properties22.put((java.lang.Object) properties24, (java.lang.Object) (short) 1);
        boolean boolean27 = properties16.remove((java.lang.Object) false, (java.lang.Object) (short) 1);
        java.util.Set<java.lang.String> strSet28 = properties16.stringPropertyNames();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties29 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties29.setDefaultJtaTimeout((long) (byte) 10);
        long long32 = atomikosProperties29.getDefaultJtaTimeout();
        java.lang.Object obj33 = properties16.get((java.lang.Object) atomikosProperties29);
        atomikosProperties29.setCheckpointInterval((long) (short) 100);
        java.util.Properties properties36 = atomikosProperties29.asProperties();
        java.lang.String str37 = atomikosProperties29.getLogBaseName();
        atomikosProperties29.setLogBaseDir("{}");
        java.util.Properties properties40 = null;
        java.util.Properties properties41 = new java.util.Properties(properties40);
        int int42 = properties41.size();
        java.lang.Object obj43 = properties10.getOrDefault((java.lang.Object) atomikosProperties29, (java.lang.Object) properties41);
        atomikosProperties29.setThreadedTwoPhaseCommit(true);
        atomikosProperties29.setSerialJtaTransactions(false);
        atomikosProperties29.setThreadedTwoPhaseCommit(false);
        atomikosProperties29.setDefaultJtaTimeout((long) (short) -1);
        atomikosProperties29.setTransactionManagerUniqueName("hi!");
        org.junit.Assert.assertNull(obj6);
        org.junit.Assert.assertNotNull(objSet9);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertNull(obj18);
        org.junit.Assert.assertNull(obj26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(strSet28);
        org.junit.Assert.assertTrue("'" + long32 + "' != '" + 10L + "'", long32 == 10L);
        org.junit.Assert.assertNull(obj33);
        org.junit.Assert.assertNotNull(properties36);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "tmlog" + "'", str37, "tmlog");
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 0 + "'", int42 == 0);
        org.junit.Assert.assertNotNull(obj43);
        org.junit.Assert.assertEquals(obj43.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj43), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj43), "{}");
    }

    @Test
    public void test1499() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1499");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Properties properties2 = new java.util.Properties(properties0);
        java.util.Properties properties3 = null;
        java.util.Properties properties4 = new java.util.Properties(properties3);
        java.lang.Object obj6 = properties2.put((java.lang.Object) properties4, (java.lang.Object) (short) 1);
        java.util.Properties properties8 = null;
        java.util.Properties properties9 = new java.util.Properties(properties8);
        java.util.Properties properties10 = new java.util.Properties(properties8);
        java.util.Properties properties11 = null;
        java.util.Properties properties12 = new java.util.Properties(properties11);
        java.lang.Object obj14 = properties10.put((java.lang.Object) properties12, (java.lang.Object) (short) 1);
        boolean boolean15 = properties4.remove((java.lang.Object) false, (java.lang.Object) (short) 1);
        java.lang.Object obj17 = properties4.remove((java.lang.Object) '#');
        java.util.Set<java.lang.Object> objSet18 = properties4.keySet();
        properties4.clear();
        java.util.Properties properties20 = null;
        java.util.Properties properties21 = new java.util.Properties(properties20);
        java.util.Properties properties22 = new java.util.Properties(properties20);
        java.util.Properties properties23 = null;
        java.util.Properties properties24 = new java.util.Properties(properties23);
        java.lang.Object obj26 = properties22.put((java.lang.Object) properties24, (java.lang.Object) (short) 1);
        java.util.Enumeration<java.lang.Object> objEnumeration27 = properties24.elements();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet28 = properties24.entrySet();
        boolean boolean29 = properties4.equals((java.lang.Object) properties24);
        java.lang.Object obj30 = properties4.clone();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties31 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties31.setDefaultJtaTimeout((long) (byte) 10);
        atomikosProperties31.setCheckpointInterval((long) (byte) 0);
        atomikosProperties31.setEnableLogging(true);
        atomikosProperties31.setThreadedTwoPhaseCommit(false);
        boolean boolean40 = atomikosProperties31.isForceShutdownOnVmExit();
        boolean boolean41 = properties4.containsKey((java.lang.Object) atomikosProperties31);
        java.util.Properties properties42 = new java.util.Properties(properties4);
        org.junit.Assert.assertNull(obj6);
        org.junit.Assert.assertNull(obj14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNull(obj17);
        org.junit.Assert.assertNotNull(objSet18);
        org.junit.Assert.assertNull(obj26);
        org.junit.Assert.assertNotNull(objEnumeration27);
        org.junit.Assert.assertNotNull(objEntrySet28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNotNull(obj30);
        org.junit.Assert.assertEquals(obj30.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj30), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj30), "{}");
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
    }

    @Test
    public void test1500() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1500");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        boolean boolean1 = atomikosProperties0.isForceShutdownOnVmExit();
        java.util.Properties properties2 = atomikosProperties0.asProperties();
        java.util.Properties properties3 = null;
        java.util.Properties properties4 = new java.util.Properties(properties3);
        java.util.Properties properties5 = new java.util.Properties(properties3);
        java.util.Properties properties6 = null;
        java.util.Properties properties7 = new java.util.Properties(properties6);
        java.lang.Object obj9 = properties5.put((java.lang.Object) properties7, (java.lang.Object) (short) 1);
        properties7.clear();
        int int11 = properties7.size();
        java.util.Properties properties12 = null;
        java.util.Properties properties13 = new java.util.Properties(properties12);
        java.util.Properties properties14 = new java.util.Properties(properties12);
        java.util.Properties properties15 = null;
        java.util.Properties properties16 = new java.util.Properties(properties15);
        java.lang.Object obj18 = properties14.put((java.lang.Object) properties16, (java.lang.Object) (short) 1);
        java.util.Properties properties19 = new java.util.Properties(properties16);
        java.util.Properties properties20 = new java.util.Properties(properties16);
        boolean boolean22 = properties7.remove((java.lang.Object) properties16, (java.lang.Object) 10.0f);
        boolean boolean23 = properties2.containsKey((java.lang.Object) 10.0f);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties25 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties25.setDefaultJtaTimeout((long) (byte) 10);
        atomikosProperties25.setCheckpointInterval((long) (byte) 0);
        atomikosProperties25.setEnableLogging(true);
        java.lang.Object obj32 = properties2.getOrDefault((java.lang.Object) (byte) 0, (java.lang.Object) true);
        java.util.Properties properties33 = new java.util.Properties(properties2);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties34 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties34.setDefaultJtaTimeout((long) (byte) 10);
        atomikosProperties34.setCheckpointInterval((long) (byte) 0);
        long long39 = atomikosProperties34.getMaxTimeout();
        java.util.Properties properties40 = null;
        java.util.Properties properties41 = new java.util.Properties(properties40);
        java.util.Properties properties42 = new java.util.Properties(properties40);
        java.util.Properties properties43 = null;
        java.util.Properties properties44 = new java.util.Properties(properties43);
        java.lang.Object obj46 = properties42.put((java.lang.Object) properties44, (java.lang.Object) (short) 1);
        java.util.Properties properties48 = null;
        java.util.Properties properties49 = new java.util.Properties(properties48);
        java.util.Properties properties50 = new java.util.Properties(properties48);
        java.util.Properties properties51 = null;
        java.util.Properties properties52 = new java.util.Properties(properties51);
        java.lang.Object obj54 = properties50.put((java.lang.Object) properties52, (java.lang.Object) (short) 1);
        boolean boolean55 = properties44.remove((java.lang.Object) false, (java.lang.Object) (short) 1);
        java.lang.Object obj57 = properties44.remove((java.lang.Object) '#');
        java.util.Set<java.lang.Object> objSet58 = properties44.keySet();
        properties44.clear();
        java.util.Properties properties60 = null;
        java.util.Properties properties61 = new java.util.Properties(properties60);
        java.util.Properties properties62 = new java.util.Properties(properties60);
        java.util.Properties properties63 = null;
        java.util.Properties properties64 = new java.util.Properties(properties63);
        java.lang.Object obj66 = properties62.put((java.lang.Object) properties64, (java.lang.Object) (short) 1);
        java.util.Enumeration<java.lang.Object> objEnumeration67 = properties64.elements();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet68 = properties64.entrySet();
        boolean boolean69 = properties44.equals((java.lang.Object) properties64);
        java.util.Enumeration<java.lang.Object> objEnumeration70 = properties64.elements();
        java.lang.Object obj71 = properties33.put((java.lang.Object) atomikosProperties34, (java.lang.Object) properties64);
        java.util.Properties properties72 = new java.util.Properties(properties64);
        java.io.PrintWriter printWriter73 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties72.list(printWriter73);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertNotNull(properties2);
        org.junit.Assert.assertNull(obj9);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertNull(obj18);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertEquals("'" + obj32 + "' != '" + true + "'", obj32, true);
        org.junit.Assert.assertTrue("'" + long39 + "' != '" + 300000L + "'", long39 == 300000L);
        org.junit.Assert.assertNull(obj46);
        org.junit.Assert.assertNull(obj54);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertNull(obj57);
        org.junit.Assert.assertNotNull(objSet58);
        org.junit.Assert.assertNull(obj66);
        org.junit.Assert.assertNotNull(objEnumeration67);
        org.junit.Assert.assertNotNull(objEntrySet68);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + true + "'", boolean69 == true);
        org.junit.Assert.assertNotNull(objEnumeration70);
        org.junit.Assert.assertNull(obj71);
    }
}
