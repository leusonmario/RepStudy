import org.junit.FixMethodOrder;
import org.junit.Test;
import org.junit.runners.MethodSorters;

@FixMethodOrder(MethodSorters.NAME_ASCENDING)
public class RegressionTest10 {

    public static boolean debug = false;

    @Test
    public void test5001() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test5001");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setSerialJtaTransactions(false);
        boolean boolean3 = atomikosProperties0.isThreadedTwoPhaseCommit();
        atomikosProperties0.setThreadedTwoPhaseCommit(false);
        atomikosProperties0.setForceShutdownOnVmExit(false);
        java.util.Properties properties8 = atomikosProperties0.asProperties();
        java.io.InputStream inputStream9 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties8.load(inputStream9);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(properties8);
    }

    @Test
    public void test5002() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test5002");
        java.util.Properties properties0 = new java.util.Properties();
        java.util.Properties properties1 = new java.util.Properties();
        java.lang.Object obj3 = properties1.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet4 = properties1.stringPropertyNames();
        boolean boolean5 = properties0.containsValue((java.lang.Object) properties1);
        java.util.Collection<java.lang.Object> objCollection6 = properties0.values();
        java.util.Properties properties8 = new java.util.Properties();
        java.lang.Object obj10 = properties8.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration11 = properties8.elements();
        boolean boolean12 = properties8.isEmpty();
        java.util.Set<java.lang.Object> objSet13 = properties8.keySet();
        java.lang.Object obj14 = properties0.putIfAbsent((java.lang.Object) "hi!", (java.lang.Object) objSet13);
        java.util.Set<java.lang.Object> objSet15 = properties0.keySet();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties16 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties16.setSerialJtaTransactions(false);
        atomikosProperties16.setThreadedTwoPhaseCommit(true);
        atomikosProperties16.setMaxTimeout((long) '#');
        boolean boolean23 = atomikosProperties16.isEnableLogging();
        atomikosProperties16.setCheckpointInterval((long) (byte) -1);
        atomikosProperties16.setEnableLogging(true);
        java.util.Properties properties28 = new java.util.Properties();
        java.lang.Object obj30 = properties28.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration31 = properties28.elements();
        boolean boolean32 = properties28.isEmpty();
        java.util.Enumeration<java.lang.Object> objEnumeration33 = properties28.elements();
        java.lang.Object obj34 = properties0.replace((java.lang.Object) true, (java.lang.Object) properties28);
        java.util.Properties properties35 = new java.util.Properties();
        java.lang.Object obj37 = properties35.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration38 = properties35.elements();
        int int39 = properties35.size();
        java.util.Properties properties40 = new java.util.Properties(properties35);
        java.util.Set<java.lang.String> strSet41 = properties35.stringPropertyNames();
        boolean boolean42 = properties0.contains((java.lang.Object) strSet41);
        java.util.Collection<java.lang.Object> objCollection43 = properties0.values();
        properties0.clear();
        java.util.Properties properties45 = new java.util.Properties();
        java.util.Properties properties46 = new java.util.Properties();
        java.lang.Object obj48 = properties46.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet49 = properties46.stringPropertyNames();
        boolean boolean50 = properties45.containsValue((java.lang.Object) properties46);
        java.util.Collection<java.lang.Object> objCollection51 = properties45.values();
        java.util.Properties properties53 = new java.util.Properties();
        java.lang.Object obj55 = properties53.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration56 = properties53.elements();
        boolean boolean57 = properties53.isEmpty();
        java.util.Set<java.lang.Object> objSet58 = properties53.keySet();
        java.lang.Object obj59 = properties45.putIfAbsent((java.lang.Object) "hi!", (java.lang.Object) objSet58);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties60 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties60.setSerialJtaTransactions(false);
        boolean boolean63 = atomikosProperties60.isSerialJtaTransactions();
        java.util.Properties properties64 = atomikosProperties60.asProperties();
        java.lang.Object obj67 = properties64.setProperty("hi!", "");
        java.util.Properties properties68 = new java.util.Properties(properties64);
        java.util.Properties properties69 = new java.util.Properties();
        java.lang.Object obj71 = properties69.remove((java.lang.Object) 0.0d);
        java.util.Properties properties72 = new java.util.Properties();
        java.util.Collection<java.lang.Object> objCollection73 = properties72.values();
        java.util.Enumeration<java.lang.Object> objEnumeration74 = properties72.keys();
        java.util.Properties properties75 = new java.util.Properties();
        java.lang.Object obj77 = properties75.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration78 = properties75.elements();
        boolean boolean79 = properties75.isEmpty();
        java.util.Set<java.lang.Object> objSet80 = properties75.keySet();
        java.util.Enumeration<java.lang.Object> objEnumeration81 = properties75.keys();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet82 = properties75.entrySet();
        java.lang.Object obj83 = properties69.put((java.lang.Object) properties72, (java.lang.Object) properties75);
        java.lang.Object obj84 = properties45.putIfAbsent((java.lang.Object) properties68, (java.lang.Object) properties75);
        properties0.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties45);
        java.io.OutputStream outputStream86 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties45.storeToXML(outputStream86, "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=false, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.service={{}={}}, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.tm_unique_name=hi!, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}", "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=false, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.tm_unique_name=tmlog, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(obj3);
        org.junit.Assert.assertNotNull(strSet4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(objCollection6);
        org.junit.Assert.assertNull(obj10);
        org.junit.Assert.assertNotNull(objEnumeration11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(objSet13);
        org.junit.Assert.assertNull(obj14);
        org.junit.Assert.assertNotNull(objSet15);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNull(obj30);
        org.junit.Assert.assertNotNull(objEnumeration31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertNotNull(objEnumeration33);
        org.junit.Assert.assertNull(obj34);
        org.junit.Assert.assertNull(obj37);
        org.junit.Assert.assertNotNull(objEnumeration38);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 0 + "'", int39 == 0);
        org.junit.Assert.assertNotNull(strSet41);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertNotNull(objCollection43);
        org.junit.Assert.assertNull(obj48);
        org.junit.Assert.assertNotNull(strSet49);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertNotNull(objCollection51);
        org.junit.Assert.assertNull(obj55);
        org.junit.Assert.assertNotNull(objEnumeration56);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertNotNull(objSet58);
        org.junit.Assert.assertNull(obj59);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertNotNull(properties64);
        org.junit.Assert.assertNull(obj67);
        org.junit.Assert.assertNull(obj71);
        org.junit.Assert.assertNotNull(objCollection73);
        org.junit.Assert.assertNotNull(objEnumeration74);
        org.junit.Assert.assertNull(obj77);
        org.junit.Assert.assertNotNull(objEnumeration78);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + true + "'", boolean79 == true);
        org.junit.Assert.assertNotNull(objSet80);
        org.junit.Assert.assertNotNull(objEnumeration81);
        org.junit.Assert.assertNotNull(objEntrySet82);
        org.junit.Assert.assertNull(obj83);
        org.junit.Assert.assertNull(obj84);
    }

    @Test
    public void test5003() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test5003");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setSerialJtaTransactions(false);
        boolean boolean3 = atomikosProperties0.isThreadedTwoPhaseCommit();
        boolean boolean4 = atomikosProperties0.isForceShutdownOnVmExit();
        boolean boolean5 = atomikosProperties0.isEnableLogging();
        atomikosProperties0.setCheckpointInterval((long) 50);
        java.util.Properties properties8 = atomikosProperties0.asProperties();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties9 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties9.setSerialJtaTransactions(false);
        atomikosProperties9.setThreadedTwoPhaseCommit(true);
        atomikosProperties9.setMaxTimeout((long) '#');
        boolean boolean16 = atomikosProperties9.isEnableLogging();
        atomikosProperties9.setTransactionManagerUniqueName("hi!");
        atomikosProperties9.setForceShutdownOnVmExit(false);
        atomikosProperties9.setSerialJtaTransactions(false);
        java.lang.Object obj23 = properties8.get((java.lang.Object) false);
        java.util.Properties properties24 = new java.util.Properties();
        java.util.Properties properties25 = new java.util.Properties();
        java.lang.Object obj27 = properties25.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet28 = properties25.stringPropertyNames();
        boolean boolean29 = properties24.containsValue((java.lang.Object) properties25);
        java.util.Collection<java.lang.Object> objCollection30 = properties24.values();
        java.util.Properties properties32 = new java.util.Properties();
        java.lang.Object obj34 = properties32.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration35 = properties32.elements();
        boolean boolean36 = properties32.isEmpty();
        java.util.Set<java.lang.Object> objSet37 = properties32.keySet();
        java.lang.Object obj38 = properties24.putIfAbsent((java.lang.Object) "hi!", (java.lang.Object) objSet37);
        java.util.Set<java.lang.Object> objSet39 = properties24.keySet();
        java.util.Set<java.lang.Object> objSet40 = properties24.keySet();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet41 = properties24.entrySet();
        java.util.Properties properties42 = new java.util.Properties();
        java.lang.Object obj44 = properties42.remove((java.lang.Object) 0.0d);
        boolean boolean45 = properties42.isEmpty();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties46 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        boolean boolean47 = properties42.containsValue((java.lang.Object) atomikosProperties46);
        java.lang.String str49 = properties42.getProperty("tmlog");
        properties24.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties42);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties51 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties51.setSerialJtaTransactions(false);
        atomikosProperties51.setThreadedTwoPhaseCommit(true);
        atomikosProperties51.setMaxTimeout((long) '#');
        java.lang.Object obj58 = properties42.get((java.lang.Object) '#');
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties59 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties59.setSerialJtaTransactions(false);
        boolean boolean62 = atomikosProperties59.isSerialJtaTransactions();
        atomikosProperties59.setCheckpointInterval((long) 10);
        atomikosProperties59.setForceShutdownOnVmExit(true);
        java.lang.String str67 = atomikosProperties59.getTransactionManagerUniqueName();
        long long68 = atomikosProperties59.getMaxTimeout();
        boolean boolean69 = properties8.remove((java.lang.Object) '#', (java.lang.Object) long68);
        java.io.InputStream inputStream70 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties8.load(inputStream70);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNotNull(properties8);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNull(obj23);
        org.junit.Assert.assertNull(obj27);
        org.junit.Assert.assertNotNull(strSet28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(objCollection30);
        org.junit.Assert.assertNull(obj34);
        org.junit.Assert.assertNotNull(objEnumeration35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNotNull(objSet37);
        org.junit.Assert.assertNull(obj38);
        org.junit.Assert.assertNotNull(objSet39);
        org.junit.Assert.assertNotNull(objSet40);
        org.junit.Assert.assertNotNull(objEntrySet41);
        org.junit.Assert.assertNull(obj44);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNull(str49);
        org.junit.Assert.assertNull(obj58);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertNull(str67);
        org.junit.Assert.assertTrue("'" + long68 + "' != '" + 300000L + "'", long68 == 300000L);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
    }

    @Test
    public void test5004() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test5004");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setSerialJtaTransactions(false);
        atomikosProperties0.setThreadedTwoPhaseCommit(true);
        atomikosProperties0.setMaxTimeout((long) '#');
        boolean boolean7 = atomikosProperties0.isEnableLogging();
        int int8 = atomikosProperties0.getMaxActives();
        atomikosProperties0.setCheckpointInterval(10000L);
        atomikosProperties0.setMaxTimeout((long) 35);
        java.lang.String str13 = atomikosProperties0.getLogBaseDir();
        long long14 = atomikosProperties0.getDefaultJtaTimeout();
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 50 + "'", int8 == 50);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertTrue("'" + long14 + "' != '" + 10000L + "'", long14 == 10000L);
    }

    @Test
    public void test5005() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test5005");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet3 = properties0.stringPropertyNames();
        java.util.Properties properties4 = new java.util.Properties();
        java.util.Properties properties5 = new java.util.Properties();
        java.lang.Object obj7 = properties5.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet8 = properties5.stringPropertyNames();
        boolean boolean9 = properties4.containsValue((java.lang.Object) properties5);
        java.util.Collection<java.lang.Object> objCollection10 = properties4.values();
        java.util.Enumeration<?> wildcardEnumeration11 = properties4.propertyNames();
        java.lang.Object obj13 = properties0.put((java.lang.Object) wildcardEnumeration11, (java.lang.Object) 10.0d);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties14 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties14.setSerialJtaTransactions(false);
        atomikosProperties14.setThreadedTwoPhaseCommit(true);
        atomikosProperties14.setMaxTimeout((long) '#');
        boolean boolean21 = atomikosProperties14.isForceShutdownOnVmExit();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties22 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties22.setSerialJtaTransactions(false);
        atomikosProperties22.setThreadedTwoPhaseCommit(true);
        atomikosProperties22.setThreadedTwoPhaseCommit(true);
        java.lang.Object obj29 = properties0.getOrDefault((java.lang.Object) boolean21, (java.lang.Object) atomikosProperties22);
        java.util.Set<java.lang.String> strSet30 = properties0.stringPropertyNames();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties31 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties31.setSerialJtaTransactions(false);
        atomikosProperties31.setThreadedTwoPhaseCommit(true);
        atomikosProperties31.setThreadedTwoPhaseCommit(true);
        long long38 = atomikosProperties31.getMaxTimeout();
        java.lang.String str39 = atomikosProperties31.getLogBaseName();
        boolean boolean40 = atomikosProperties31.isSerialJtaTransactions();
        java.util.Properties properties41 = new java.util.Properties();
        java.lang.Object obj43 = properties41.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet44 = properties41.stringPropertyNames();
        java.util.Properties properties45 = new java.util.Properties();
        java.util.Properties properties46 = new java.util.Properties();
        java.lang.Object obj48 = properties46.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet49 = properties46.stringPropertyNames();
        boolean boolean50 = properties45.containsValue((java.lang.Object) properties46);
        java.util.Collection<java.lang.Object> objCollection51 = properties45.values();
        java.util.Enumeration<?> wildcardEnumeration52 = properties45.propertyNames();
        java.lang.Object obj54 = properties41.put((java.lang.Object) wildcardEnumeration52, (java.lang.Object) 10.0d);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties55 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties55.setSerialJtaTransactions(false);
        atomikosProperties55.setThreadedTwoPhaseCommit(true);
        atomikosProperties55.setMaxTimeout((long) '#');
        boolean boolean62 = atomikosProperties55.isForceShutdownOnVmExit();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties63 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties63.setSerialJtaTransactions(false);
        atomikosProperties63.setThreadedTwoPhaseCommit(true);
        atomikosProperties63.setThreadedTwoPhaseCommit(true);
        java.lang.Object obj70 = properties41.getOrDefault((java.lang.Object) boolean62, (java.lang.Object) atomikosProperties63);
        long long71 = atomikosProperties63.getMaxTimeout();
        java.lang.String str72 = atomikosProperties63.getTransactionManagerUniqueName();
        java.lang.Object obj73 = properties0.getOrDefault((java.lang.Object) atomikosProperties31, (java.lang.Object) str72);
        java.util.Properties properties74 = new java.util.Properties();
        java.lang.Object obj76 = properties74.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration77 = properties74.elements();
        boolean boolean78 = properties74.isEmpty();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet79 = properties74.entrySet();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties81 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties81.setSerialJtaTransactions(false);
        atomikosProperties81.setThreadedTwoPhaseCommit(true);
        atomikosProperties81.setMaxTimeout((long) '#');
        boolean boolean88 = atomikosProperties81.isForceShutdownOnVmExit();
        java.lang.Object obj89 = properties74.put((java.lang.Object) (short) 1, (java.lang.Object) atomikosProperties81);
        atomikosProperties81.setForceShutdownOnVmExit(true);
        java.util.Properties properties92 = atomikosProperties81.asProperties();
        java.util.Properties properties93 = new java.util.Properties(properties92);
        boolean boolean95 = properties92.contains((java.lang.Object) 35);
        boolean boolean96 = properties0.containsKey((java.lang.Object) boolean95);
        // The following exception was thrown during execution in test generation
        try {
            java.util.Enumeration<?> wildcardEnumeration97 = properties0.propertyNames();
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: java.util.Collections$EmptyEnumeration cannot be cast to java.lang.String");
        } catch (java.lang.ClassCastException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(strSet3);
        org.junit.Assert.assertNull(obj7);
        org.junit.Assert.assertNotNull(strSet8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(objCollection10);
        org.junit.Assert.assertNotNull(wildcardEnumeration11);
        org.junit.Assert.assertNull(obj13);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(obj29);
        org.junit.Assert.assertNotNull(strSet30);
        org.junit.Assert.assertTrue("'" + long38 + "' != '" + 300000L + "'", long38 == 300000L);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "tmlog" + "'", str39, "tmlog");
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNull(obj43);
        org.junit.Assert.assertNotNull(strSet44);
        org.junit.Assert.assertNull(obj48);
        org.junit.Assert.assertNotNull(strSet49);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertNotNull(objCollection51);
        org.junit.Assert.assertNotNull(wildcardEnumeration52);
        org.junit.Assert.assertNull(obj54);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertNotNull(obj70);
        org.junit.Assert.assertTrue("'" + long71 + "' != '" + 300000L + "'", long71 == 300000L);
        org.junit.Assert.assertNull(str72);
        org.junit.Assert.assertNull(obj73);
        org.junit.Assert.assertNull(obj76);
        org.junit.Assert.assertNotNull(objEnumeration77);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + true + "'", boolean78 == true);
        org.junit.Assert.assertNotNull(objEntrySet79);
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + false + "'", boolean88 == false);
        org.junit.Assert.assertNull(obj89);
        org.junit.Assert.assertNotNull(properties92);
        org.junit.Assert.assertTrue("'" + boolean95 + "' != '" + false + "'", boolean95 == false);
        org.junit.Assert.assertTrue("'" + boolean96 + "' != '" + false + "'", boolean96 == false);
    }

    @Test
    public void test5006() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test5006");
        java.util.Properties properties0 = new java.util.Properties();
        java.util.Properties properties1 = new java.util.Properties();
        java.lang.Object obj3 = properties1.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet4 = properties1.stringPropertyNames();
        boolean boolean5 = properties0.containsValue((java.lang.Object) properties1);
        java.util.Collection<java.lang.Object> objCollection6 = properties0.values();
        java.util.Properties properties8 = new java.util.Properties();
        java.lang.Object obj10 = properties8.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration11 = properties8.elements();
        boolean boolean12 = properties8.isEmpty();
        java.util.Set<java.lang.Object> objSet13 = properties8.keySet();
        java.lang.Object obj14 = properties0.putIfAbsent((java.lang.Object) "hi!", (java.lang.Object) objSet13);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties15 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties15.setSerialJtaTransactions(false);
        boolean boolean18 = atomikosProperties15.isSerialJtaTransactions();
        java.util.Properties properties19 = atomikosProperties15.asProperties();
        java.lang.Object obj22 = properties19.setProperty("hi!", "");
        java.util.Properties properties23 = new java.util.Properties(properties19);
        java.util.Properties properties24 = new java.util.Properties();
        java.lang.Object obj26 = properties24.remove((java.lang.Object) 0.0d);
        java.util.Properties properties27 = new java.util.Properties();
        java.util.Collection<java.lang.Object> objCollection28 = properties27.values();
        java.util.Enumeration<java.lang.Object> objEnumeration29 = properties27.keys();
        java.util.Properties properties30 = new java.util.Properties();
        java.lang.Object obj32 = properties30.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration33 = properties30.elements();
        boolean boolean34 = properties30.isEmpty();
        java.util.Set<java.lang.Object> objSet35 = properties30.keySet();
        java.util.Enumeration<java.lang.Object> objEnumeration36 = properties30.keys();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet37 = properties30.entrySet();
        java.lang.Object obj38 = properties24.put((java.lang.Object) properties27, (java.lang.Object) properties30);
        java.lang.Object obj39 = properties0.putIfAbsent((java.lang.Object) properties23, (java.lang.Object) properties30);
        java.util.Properties properties40 = new java.util.Properties(properties23);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties41 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties41.setSerialJtaTransactions(false);
        boolean boolean44 = atomikosProperties41.isSerialJtaTransactions();
        java.util.Properties properties45 = atomikosProperties41.asProperties();
        java.lang.String str46 = atomikosProperties41.getService();
        long long47 = atomikosProperties41.getDefaultJtaTimeout();
        atomikosProperties41.setLogBaseDir("{=hi!}");
        atomikosProperties41.setMaxTimeout(10L);
        java.util.Properties properties52 = atomikosProperties41.asProperties();
        boolean boolean53 = properties23.containsValue((java.lang.Object) atomikosProperties41);
        java.io.Writer writer54 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties23.store(writer54, "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=-1, com.atomikos.icatch.serial_jta_transactions=false, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=35, com.atomikos.icatch.threaded_2pc=true, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name={=hi!}}");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(obj3);
        org.junit.Assert.assertNotNull(strSet4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(objCollection6);
        org.junit.Assert.assertNull(obj10);
        org.junit.Assert.assertNotNull(objEnumeration11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(objSet13);
        org.junit.Assert.assertNull(obj14);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(properties19);
        org.junit.Assert.assertNull(obj22);
        org.junit.Assert.assertNull(obj26);
        org.junit.Assert.assertNotNull(objCollection28);
        org.junit.Assert.assertNotNull(objEnumeration29);
        org.junit.Assert.assertNull(obj32);
        org.junit.Assert.assertNotNull(objEnumeration33);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertNotNull(objSet35);
        org.junit.Assert.assertNotNull(objEnumeration36);
        org.junit.Assert.assertNotNull(objEntrySet37);
        org.junit.Assert.assertNull(obj38);
        org.junit.Assert.assertNull(obj39);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(properties45);
        org.junit.Assert.assertNull(str46);
        org.junit.Assert.assertTrue("'" + long47 + "' != '" + 10000L + "'", long47 == 10000L);
        org.junit.Assert.assertNotNull(properties52);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
    }

    @Test
    public void test5007() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test5007");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setSerialJtaTransactions(false);
        atomikosProperties0.setThreadedTwoPhaseCommit(true);
        atomikosProperties0.setEnableLogging(false);
        atomikosProperties0.setForceShutdownOnVmExit(true);
        boolean boolean9 = atomikosProperties0.isSerialJtaTransactions();
        java.util.Properties properties10 = atomikosProperties0.asProperties();
        int int11 = properties10.size();
        boolean boolean12 = properties10.isEmpty();
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(properties10);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 9 + "'", int11 == 9);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
    }

    @Test
    public void test5008() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test5008");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setSerialJtaTransactions(false);
        atomikosProperties0.setThreadedTwoPhaseCommit(true);
        atomikosProperties0.setLogBaseName("{=hi!}");
        java.lang.String str7 = atomikosProperties0.getTransactionManagerUniqueName();
        boolean boolean8 = atomikosProperties0.isForceShutdownOnVmExit();
        long long9 = atomikosProperties0.getCheckpointInterval();
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + long9 + "' != '" + 500L + "'", long9 == 500L);
    }

    @Test
    public void test5009() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test5009");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        boolean boolean3 = properties0.isEmpty();
        java.util.Enumeration<java.lang.Object> objEnumeration4 = properties0.elements();
        java.lang.Object obj7 = properties0.replace((java.lang.Object) 1, (java.lang.Object) 1);
        java.lang.String str9 = properties0.getProperty("hi!");
        boolean boolean10 = properties0.isEmpty();
        java.util.Enumeration<java.lang.Object> objEnumeration11 = properties0.keys();
        java.util.Properties properties12 = new java.util.Properties();
        java.lang.Object obj14 = properties12.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration15 = properties12.elements();
        int int16 = properties12.size();
        java.util.Properties properties17 = new java.util.Properties(properties12);
        boolean boolean18 = properties17.isEmpty();
        java.util.Properties properties19 = new java.util.Properties();
        java.lang.Object obj21 = properties19.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration22 = properties19.elements();
        int int23 = properties19.size();
        java.util.Properties properties24 = new java.util.Properties();
        java.lang.Object obj26 = properties24.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration27 = properties24.elements();
        boolean boolean28 = properties24.isEmpty();
        java.util.Set<java.lang.Object> objSet29 = properties24.keySet();
        boolean boolean30 = properties19.containsKey((java.lang.Object) objSet29);
        java.util.Enumeration<java.lang.Object> objEnumeration31 = properties19.keys();
        java.util.Properties properties32 = new java.util.Properties();
        java.lang.Object obj34 = properties32.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration35 = properties32.elements();
        boolean boolean36 = properties32.isEmpty();
        java.util.Set<java.lang.Object> objSet37 = properties32.keySet();
        java.util.Enumeration<java.lang.Object> objEnumeration38 = properties32.keys();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet39 = properties32.entrySet();
        boolean boolean41 = properties19.remove((java.lang.Object) properties32, (java.lang.Object) 1.0f);
        boolean boolean42 = properties17.contains((java.lang.Object) properties32);
        java.util.Properties properties43 = new java.util.Properties(properties32);
        java.util.Properties properties44 = new java.util.Properties();
        java.lang.Object obj46 = properties44.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration47 = properties44.elements();
        boolean boolean48 = properties44.isEmpty();
        java.util.Set<java.lang.Object> objSet49 = properties44.keySet();
        boolean boolean50 = properties44.isEmpty();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet51 = properties44.entrySet();
        java.util.Properties properties52 = new java.util.Properties();
        java.lang.Object obj54 = properties52.remove((java.lang.Object) 0.0d);
        boolean boolean55 = properties52.isEmpty();
        java.lang.Object obj58 = properties52.setProperty("", "hi!");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties59 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties59.setSerialJtaTransactions(false);
        boolean boolean62 = properties44.remove((java.lang.Object) properties52, (java.lang.Object) atomikosProperties59);
        boolean boolean63 = properties43.contains((java.lang.Object) atomikosProperties59);
        boolean boolean64 = atomikosProperties59.isThreadedTwoPhaseCommit();
        java.lang.Object obj65 = properties0.get((java.lang.Object) atomikosProperties59);
        java.lang.String str66 = atomikosProperties59.getLogBaseDir();
        atomikosProperties59.setEnableLogging(false);
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(objEnumeration4);
        org.junit.Assert.assertNull(obj7);
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(objEnumeration11);
        org.junit.Assert.assertNull(obj14);
        org.junit.Assert.assertNotNull(objEnumeration15);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNull(obj21);
        org.junit.Assert.assertNotNull(objEnumeration22);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 0 + "'", int23 == 0);
        org.junit.Assert.assertNull(obj26);
        org.junit.Assert.assertNotNull(objEnumeration27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNotNull(objSet29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(objEnumeration31);
        org.junit.Assert.assertNull(obj34);
        org.junit.Assert.assertNotNull(objEnumeration35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNotNull(objSet37);
        org.junit.Assert.assertNotNull(objEnumeration38);
        org.junit.Assert.assertNotNull(objEntrySet39);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNull(obj46);
        org.junit.Assert.assertNotNull(objEnumeration47);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertNotNull(objSet49);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertNotNull(objEntrySet51);
        org.junit.Assert.assertNull(obj54);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertNull(obj58);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertNull(obj65);
        org.junit.Assert.assertNull(str66);
    }

    @Test
    public void test5010() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test5010");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setSerialJtaTransactions(false);
        boolean boolean3 = atomikosProperties0.isSerialJtaTransactions();
        java.lang.String str4 = atomikosProperties0.getService();
        boolean boolean5 = atomikosProperties0.isEnableLogging();
        atomikosProperties0.setCheckpointInterval((long) (byte) 100);
        atomikosProperties0.setTransactionManagerUniqueName("{=hi!}");
        atomikosProperties0.setMaxTimeout(10000L);
        atomikosProperties0.setEnableLogging(false);
        long long14 = atomikosProperties0.getDefaultJtaTimeout();
        atomikosProperties0.setLogBaseName("hi!");
        long long17 = atomikosProperties0.getMaxTimeout();
        java.util.Properties properties18 = atomikosProperties0.asProperties();
        atomikosProperties0.setSerialJtaTransactions(false);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertTrue("'" + long14 + "' != '" + 10000L + "'", long14 == 10000L);
        org.junit.Assert.assertTrue("'" + long17 + "' != '" + 10000L + "'", long17 == 10000L);
        org.junit.Assert.assertNotNull(properties18);
    }

    @Test
    public void test5011() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test5011");
        java.util.Properties properties0 = new java.util.Properties();
        java.util.Properties properties1 = new java.util.Properties();
        java.lang.Object obj3 = properties1.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet4 = properties1.stringPropertyNames();
        boolean boolean5 = properties0.containsValue((java.lang.Object) properties1);
        java.util.Enumeration<?> wildcardEnumeration6 = properties1.propertyNames();
        java.util.Properties properties7 = new java.util.Properties();
        java.lang.Object obj9 = properties7.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration10 = properties7.elements();
        boolean boolean11 = properties7.isEmpty();
        java.util.Set<java.lang.Object> objSet12 = properties7.keySet();
        java.util.Enumeration<java.lang.Object> objEnumeration13 = properties7.keys();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet14 = properties7.entrySet();
        boolean boolean15 = properties1.containsValue((java.lang.Object) objEntrySet14);
        java.lang.String str17 = properties1.getProperty("");
        java.util.Properties properties18 = new java.util.Properties();
        java.lang.Object obj20 = properties18.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet21 = properties18.stringPropertyNames();
        java.lang.String str22 = properties18.toString();
        java.lang.String str23 = properties18.toString();
        java.util.Set<java.lang.Object> objSet24 = properties18.keySet();
        boolean boolean25 = properties1.contains((java.lang.Object) objSet24);
        java.lang.Object obj26 = properties1.clone();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties27 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties27.setSerialJtaTransactions(false);
        boolean boolean30 = atomikosProperties27.isSerialJtaTransactions();
        atomikosProperties27.setTransactionManagerUniqueName("hi!");
        java.lang.String str33 = atomikosProperties27.getLogBaseName();
        java.lang.String str34 = atomikosProperties27.getLogBaseName();
        boolean boolean35 = atomikosProperties27.isSerialJtaTransactions();
        long long36 = atomikosProperties27.getMaxTimeout();
        atomikosProperties27.setCheckpointInterval(0L);
        java.lang.String str39 = atomikosProperties27.getLogBaseName();
        boolean boolean40 = properties1.containsKey((java.lang.Object) atomikosProperties27);
        java.io.Reader reader41 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties1.load(reader41);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(obj3);
        org.junit.Assert.assertNotNull(strSet4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(wildcardEnumeration6);
        org.junit.Assert.assertNull(obj9);
        org.junit.Assert.assertNotNull(objEnumeration10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNotNull(objSet12);
        org.junit.Assert.assertNotNull(objEnumeration13);
        org.junit.Assert.assertNotNull(objEntrySet14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNull(str17);
        org.junit.Assert.assertNull(obj20);
        org.junit.Assert.assertNotNull(strSet21);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "{}" + "'", str22, "{}");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "{}" + "'", str23, "{}");
        org.junit.Assert.assertNotNull(objSet24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(obj26);
        org.junit.Assert.assertEquals(obj26.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj26), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj26), "{}");
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "tmlog" + "'", str33, "tmlog");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "tmlog" + "'", str34, "tmlog");
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertTrue("'" + long36 + "' != '" + 300000L + "'", long36 == 300000L);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "tmlog" + "'", str39, "tmlog");
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
    }

    @Test
    public void test5012() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test5012");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setSerialJtaTransactions(false);
        atomikosProperties0.setThreadedTwoPhaseCommit(true);
        atomikosProperties0.setMaxTimeout((long) '#');
        boolean boolean7 = atomikosProperties0.isEnableLogging();
        atomikosProperties0.setForceShutdownOnVmExit(true);
        atomikosProperties0.setSerialJtaTransactions(true);
        boolean boolean12 = atomikosProperties0.isThreadedTwoPhaseCommit();
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
    }

    @Test
    public void test5013() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test5013");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setSerialJtaTransactions(false);
        atomikosProperties0.setThreadedTwoPhaseCommit(true);
        atomikosProperties0.setMaxTimeout((long) '#');
        java.lang.String str7 = atomikosProperties0.getLogBaseDir();
        boolean boolean8 = atomikosProperties0.isThreadedTwoPhaseCommit();
        int int9 = atomikosProperties0.getMaxActives();
        atomikosProperties0.setTransactionManagerUniqueName("tmlog");
        atomikosProperties0.setDefaultJtaTimeout((long) 'a');
        boolean boolean14 = atomikosProperties0.isForceShutdownOnVmExit();
        boolean boolean15 = atomikosProperties0.isEnableLogging();
        boolean boolean16 = atomikosProperties0.isSerialJtaTransactions();
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 50 + "'", int9 == 50);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
    }

    @Test
    public void test5014() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test5014");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setSerialJtaTransactions(false);
        boolean boolean3 = atomikosProperties0.isThreadedTwoPhaseCommit();
        boolean boolean4 = atomikosProperties0.isSerialJtaTransactions();
        atomikosProperties0.setLogBaseDir("");
        atomikosProperties0.setLogBaseDir("{=hi!}");
        atomikosProperties0.setMaxTimeout((long) 0);
        atomikosProperties0.setThreadedTwoPhaseCommit(false);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
    }

    @Test
    public void test5015() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test5015");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration3 = properties0.elements();
        boolean boolean4 = properties0.isEmpty();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet5 = properties0.entrySet();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties7 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties7.setSerialJtaTransactions(false);
        atomikosProperties7.setThreadedTwoPhaseCommit(true);
        atomikosProperties7.setMaxTimeout((long) '#');
        boolean boolean14 = atomikosProperties7.isForceShutdownOnVmExit();
        java.lang.Object obj15 = properties0.put((java.lang.Object) (short) 1, (java.lang.Object) atomikosProperties7);
        atomikosProperties7.setForceShutdownOnVmExit(true);
        java.util.Properties properties18 = atomikosProperties7.asProperties();
        java.lang.String str19 = atomikosProperties7.getService();
        java.lang.String str20 = atomikosProperties7.getTransactionManagerUniqueName();
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(objEnumeration3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(objEntrySet5);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNull(obj15);
        org.junit.Assert.assertNotNull(properties18);
        org.junit.Assert.assertNull(str19);
        org.junit.Assert.assertNull(str20);
    }

    @Test
    public void test5016() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test5016");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet3 = properties0.stringPropertyNames();
        java.util.Properties properties4 = new java.util.Properties();
        java.util.Properties properties5 = new java.util.Properties();
        java.lang.Object obj7 = properties5.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet8 = properties5.stringPropertyNames();
        boolean boolean9 = properties4.containsValue((java.lang.Object) properties5);
        java.util.Collection<java.lang.Object> objCollection10 = properties4.values();
        java.util.Enumeration<?> wildcardEnumeration11 = properties4.propertyNames();
        java.lang.Object obj13 = properties0.put((java.lang.Object) wildcardEnumeration11, (java.lang.Object) 10.0d);
        java.lang.String str15 = properties0.getProperty("{=hi!}");
        java.lang.Object obj18 = properties0.setProperty("tmlog", "");
        java.util.Properties properties19 = new java.util.Properties();
        java.util.Properties properties20 = new java.util.Properties();
        java.lang.Object obj22 = properties20.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet23 = properties20.stringPropertyNames();
        boolean boolean24 = properties19.containsValue((java.lang.Object) properties20);
        java.util.Properties properties25 = new java.util.Properties();
        java.lang.Object obj27 = properties25.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration28 = properties25.elements();
        boolean boolean29 = properties25.isEmpty();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet30 = properties25.entrySet();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties32 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties32.setSerialJtaTransactions(false);
        atomikosProperties32.setThreadedTwoPhaseCommit(true);
        atomikosProperties32.setMaxTimeout((long) '#');
        boolean boolean39 = atomikosProperties32.isForceShutdownOnVmExit();
        java.lang.Object obj40 = properties25.put((java.lang.Object) (short) 1, (java.lang.Object) atomikosProperties32);
        atomikosProperties32.setForceShutdownOnVmExit(true);
        java.util.Properties properties43 = atomikosProperties32.asProperties();
        java.lang.String str44 = atomikosProperties32.getService();
        atomikosProperties32.setLogBaseName("{{}=tmlog}");
        boolean boolean47 = properties19.equals((java.lang.Object) atomikosProperties32);
        boolean boolean48 = properties0.containsKey((java.lang.Object) boolean47);
        java.util.Collection<java.lang.Object> objCollection49 = properties0.values();
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(strSet3);
        org.junit.Assert.assertNull(obj7);
        org.junit.Assert.assertNotNull(strSet8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(objCollection10);
        org.junit.Assert.assertNotNull(wildcardEnumeration11);
        org.junit.Assert.assertNull(obj13);
        org.junit.Assert.assertNull(str15);
        org.junit.Assert.assertNull(obj18);
        org.junit.Assert.assertNull(obj22);
        org.junit.Assert.assertNotNull(strSet23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNull(obj27);
        org.junit.Assert.assertNotNull(objEnumeration28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNotNull(objEntrySet30);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNull(obj40);
        org.junit.Assert.assertNotNull(properties43);
        org.junit.Assert.assertNull(str44);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNotNull(objCollection49);
    }

    @Test
    public void test5017() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test5017");
        java.util.Properties properties0 = new java.util.Properties();
        java.util.Collection<java.lang.Object> objCollection1 = properties0.values();
        int int2 = properties0.size();
        java.util.Properties properties3 = new java.util.Properties();
        java.lang.Object obj5 = properties3.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration6 = properties3.elements();
        boolean boolean7 = properties3.isEmpty();
        java.util.Set<java.lang.Object> objSet8 = properties3.keySet();
        java.util.Enumeration<java.lang.Object> objEnumeration9 = properties3.keys();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet10 = properties3.entrySet();
        java.util.Properties properties12 = new java.util.Properties();
        java.lang.Object obj14 = properties12.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration15 = properties12.elements();
        boolean boolean16 = properties12.isEmpty();
        java.util.Set<java.lang.Object> objSet17 = properties12.keySet();
        boolean boolean18 = properties12.isEmpty();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties19 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties19.setSerialJtaTransactions(false);
        atomikosProperties19.setThreadedTwoPhaseCommit(true);
        atomikosProperties19.setMaxTimeout((long) '#');
        boolean boolean26 = atomikosProperties19.isEnableLogging();
        atomikosProperties19.setCheckpointInterval((long) (byte) -1);
        java.util.Properties properties29 = new java.util.Properties();
        java.util.Properties properties30 = new java.util.Properties();
        java.lang.Object obj32 = properties30.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet33 = properties30.stringPropertyNames();
        boolean boolean34 = properties29.containsValue((java.lang.Object) properties30);
        java.util.Collection<java.lang.Object> objCollection35 = properties29.values();
        java.lang.Object obj36 = properties12.replace((java.lang.Object) atomikosProperties19, (java.lang.Object) objCollection35);
        boolean boolean38 = properties3.replace((java.lang.Object) 100.0d, (java.lang.Object) objCollection35, (java.lang.Object) 10.0d);
        boolean boolean39 = properties0.equals((java.lang.Object) properties3);
        java.util.Properties properties40 = new java.util.Properties();
        java.lang.Object obj42 = properties40.remove((java.lang.Object) 0.0d);
        boolean boolean43 = properties40.isEmpty();
        java.util.Enumeration<java.lang.Object> objEnumeration44 = properties40.elements();
        java.util.Enumeration<java.lang.Object> objEnumeration45 = properties40.elements();
        java.lang.Object obj46 = properties0.remove((java.lang.Object) properties40);
        java.util.Enumeration<java.lang.Object> objEnumeration47 = properties0.elements();
        java.util.Properties properties48 = new java.util.Properties();
        java.lang.Object obj50 = properties48.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration51 = properties48.elements();
        int int52 = properties48.size();
        java.util.Properties properties53 = new java.util.Properties(properties48);
        java.util.Set<java.lang.String> strSet54 = properties48.stringPropertyNames();
        java.util.Set<java.lang.String> strSet55 = properties48.stringPropertyNames();
        java.util.Properties properties56 = new java.util.Properties();
        java.lang.Object obj58 = properties56.remove((java.lang.Object) 0.0d);
        boolean boolean59 = properties56.isEmpty();
        java.util.Enumeration<java.lang.Object> objEnumeration60 = properties56.elements();
        java.util.Properties properties61 = new java.util.Properties();
        java.lang.Object obj63 = properties61.remove((java.lang.Object) 0.0d);
        boolean boolean64 = properties61.isEmpty();
        java.util.Enumeration<java.lang.Object> objEnumeration65 = properties61.elements();
        java.util.Enumeration<java.lang.Object> objEnumeration66 = properties61.elements();
        java.lang.Object obj67 = properties48.replace((java.lang.Object) objEnumeration60, (java.lang.Object) objEnumeration66);
        java.lang.Object obj68 = properties48.clone();
        java.lang.Object obj69 = properties0.remove((java.lang.Object) properties48);
        java.lang.Object obj70 = properties48.clone();
        java.io.OutputStream outputStream71 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties48.storeToXML(outputStream71, "{[]=0.0}");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(objCollection1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertNull(obj5);
        org.junit.Assert.assertNotNull(objEnumeration6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(objSet8);
        org.junit.Assert.assertNotNull(objEnumeration9);
        org.junit.Assert.assertNotNull(objEntrySet10);
        org.junit.Assert.assertNull(obj14);
        org.junit.Assert.assertNotNull(objEnumeration15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(objSet17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertNull(obj32);
        org.junit.Assert.assertNotNull(strSet33);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(objCollection35);
        org.junit.Assert.assertNull(obj36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNull(obj42);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNotNull(objEnumeration44);
        org.junit.Assert.assertNotNull(objEnumeration45);
        org.junit.Assert.assertNull(obj46);
        org.junit.Assert.assertNotNull(objEnumeration47);
        org.junit.Assert.assertNull(obj50);
        org.junit.Assert.assertNotNull(objEnumeration51);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + 0 + "'", int52 == 0);
        org.junit.Assert.assertNotNull(strSet54);
        org.junit.Assert.assertNotNull(strSet55);
        org.junit.Assert.assertNull(obj58);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertNotNull(objEnumeration60);
        org.junit.Assert.assertNull(obj63);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64 == true);
        org.junit.Assert.assertNotNull(objEnumeration65);
        org.junit.Assert.assertNotNull(objEnumeration66);
        org.junit.Assert.assertNull(obj67);
        org.junit.Assert.assertNotNull(obj68);
        org.junit.Assert.assertEquals(obj68.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj68), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj68), "{}");
        org.junit.Assert.assertNull(obj69);
        org.junit.Assert.assertNotNull(obj70);
        org.junit.Assert.assertEquals(obj70.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj70), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj70), "{}");
    }

    @Test
    public void test5018() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test5018");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        java.util.Properties properties3 = new java.util.Properties();
        java.util.Collection<java.lang.Object> objCollection4 = properties3.values();
        java.util.Enumeration<java.lang.Object> objEnumeration5 = properties3.keys();
        java.util.Properties properties6 = new java.util.Properties();
        java.lang.Object obj8 = properties6.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration9 = properties6.elements();
        boolean boolean10 = properties6.isEmpty();
        java.util.Set<java.lang.Object> objSet11 = properties6.keySet();
        java.util.Enumeration<java.lang.Object> objEnumeration12 = properties6.keys();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet13 = properties6.entrySet();
        java.lang.Object obj14 = properties0.put((java.lang.Object) properties3, (java.lang.Object) properties6);
        java.lang.String str16 = properties3.getProperty("{=hi!}");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties17 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties17.setSerialJtaTransactions(false);
        atomikosProperties17.setThreadedTwoPhaseCommit(true);
        atomikosProperties17.setThreadedTwoPhaseCommit(true);
        long long24 = atomikosProperties17.getMaxTimeout();
        boolean boolean25 = properties3.containsValue((java.lang.Object) atomikosProperties17);
        java.util.Enumeration<java.lang.Object> objEnumeration26 = properties3.elements();
        java.util.Properties properties27 = new java.util.Properties();
        java.lang.Object obj29 = properties27.remove((java.lang.Object) 0.0d);
        java.util.Properties properties30 = new java.util.Properties();
        java.util.Collection<java.lang.Object> objCollection31 = properties30.values();
        java.util.Enumeration<java.lang.Object> objEnumeration32 = properties30.keys();
        java.util.Properties properties33 = new java.util.Properties();
        java.lang.Object obj35 = properties33.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration36 = properties33.elements();
        boolean boolean37 = properties33.isEmpty();
        java.util.Set<java.lang.Object> objSet38 = properties33.keySet();
        java.util.Enumeration<java.lang.Object> objEnumeration39 = properties33.keys();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet40 = properties33.entrySet();
        java.lang.Object obj41 = properties27.put((java.lang.Object) properties30, (java.lang.Object) properties33);
        java.lang.Object obj42 = properties30.clone();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties43 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties43.setSerialJtaTransactions(false);
        atomikosProperties43.setThreadedTwoPhaseCommit(true);
        atomikosProperties43.setMaxTimeout((long) '#');
        boolean boolean50 = atomikosProperties43.isEnableLogging();
        atomikosProperties43.setCheckpointInterval((long) 100);
        atomikosProperties43.setSerialJtaTransactions(true);
        boolean boolean55 = properties30.equals((java.lang.Object) atomikosProperties43);
        java.util.Properties properties56 = atomikosProperties43.asProperties();
        properties3.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties56);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties58 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties58.setSerialJtaTransactions(false);
        atomikosProperties58.setThreadedTwoPhaseCommit(true);
        atomikosProperties58.setMaxTimeout((long) '#');
        long long65 = atomikosProperties58.getCheckpointInterval();
        java.lang.String str66 = atomikosProperties58.getTransactionManagerUniqueName();
        atomikosProperties58.setTransactionManagerUniqueName("{=hi!}");
        atomikosProperties58.setSerialJtaTransactions(false);
        atomikosProperties58.setLogBaseName("{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=false, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, hi!=, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
        boolean boolean73 = properties56.equals((java.lang.Object) "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=false, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, hi!=, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(objCollection4);
        org.junit.Assert.assertNotNull(objEnumeration5);
        org.junit.Assert.assertNull(obj8);
        org.junit.Assert.assertNotNull(objEnumeration9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(objSet11);
        org.junit.Assert.assertNotNull(objEnumeration12);
        org.junit.Assert.assertNotNull(objEntrySet13);
        org.junit.Assert.assertNull(obj14);
        org.junit.Assert.assertNull(str16);
        org.junit.Assert.assertTrue("'" + long24 + "' != '" + 300000L + "'", long24 == 300000L);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(objEnumeration26);
        org.junit.Assert.assertNull(obj29);
        org.junit.Assert.assertNotNull(objCollection31);
        org.junit.Assert.assertNotNull(objEnumeration32);
        org.junit.Assert.assertNull(obj35);
        org.junit.Assert.assertNotNull(objEnumeration36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertNotNull(objSet38);
        org.junit.Assert.assertNotNull(objEnumeration39);
        org.junit.Assert.assertNotNull(objEntrySet40);
        org.junit.Assert.assertNull(obj41);
        org.junit.Assert.assertNotNull(obj42);
        org.junit.Assert.assertEquals(obj42.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj42), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj42), "{}");
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertNotNull(properties56);
        org.junit.Assert.assertTrue("'" + long65 + "' != '" + 500L + "'", long65 == 500L);
        org.junit.Assert.assertNull(str66);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
    }

    @Test
    public void test5019() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test5019");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setSerialJtaTransactions(false);
        atomikosProperties0.setThreadedTwoPhaseCommit(true);
        atomikosProperties0.setThreadedTwoPhaseCommit(true);
        java.util.Properties properties7 = atomikosProperties0.asProperties();
        int int8 = atomikosProperties0.getMaxActives();
        atomikosProperties0.setService("hi!");
        long long11 = atomikosProperties0.getMaxTimeout();
        atomikosProperties0.setTransactionManagerUniqueName("hi!");
        java.util.Properties properties14 = atomikosProperties0.asProperties();
        atomikosProperties0.setForceShutdownOnVmExit(true);
        atomikosProperties0.setMaxActives((int) ' ');
        java.util.Properties properties19 = atomikosProperties0.asProperties();
        atomikosProperties0.setEnableLogging(false);
        org.junit.Assert.assertNotNull(properties7);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 50 + "'", int8 == 50);
        org.junit.Assert.assertTrue("'" + long11 + "' != '" + 300000L + "'", long11 == 300000L);
        org.junit.Assert.assertNotNull(properties14);
        org.junit.Assert.assertNotNull(properties19);
    }

    @Test
    public void test5020() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test5020");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet3 = properties0.stringPropertyNames();
        java.util.Properties properties4 = new java.util.Properties();
        java.util.Properties properties5 = new java.util.Properties();
        java.lang.Object obj7 = properties5.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet8 = properties5.stringPropertyNames();
        boolean boolean9 = properties4.containsValue((java.lang.Object) properties5);
        java.util.Collection<java.lang.Object> objCollection10 = properties4.values();
        java.util.Enumeration<?> wildcardEnumeration11 = properties4.propertyNames();
        java.lang.Object obj13 = properties0.put((java.lang.Object) wildcardEnumeration11, (java.lang.Object) 10.0d);
        java.util.Properties properties14 = new java.util.Properties();
        java.lang.Object obj16 = properties14.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration17 = properties14.elements();
        boolean boolean18 = properties14.isEmpty();
        java.util.Set<java.lang.Object> objSet19 = properties14.keySet();
        boolean boolean20 = properties14.isEmpty();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet21 = properties14.entrySet();
        java.util.Properties properties22 = new java.util.Properties();
        java.lang.Object obj24 = properties22.remove((java.lang.Object) 0.0d);
        boolean boolean25 = properties22.isEmpty();
        java.lang.Object obj28 = properties22.setProperty("", "hi!");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties29 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties29.setSerialJtaTransactions(false);
        boolean boolean32 = properties14.remove((java.lang.Object) properties22, (java.lang.Object) atomikosProperties29);
        java.util.Properties properties33 = new java.util.Properties(properties22);
        int int34 = properties33.size();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties36 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties36.setSerialJtaTransactions(false);
        boolean boolean39 = atomikosProperties36.isSerialJtaTransactions();
        java.lang.String str40 = atomikosProperties36.getService();
        boolean boolean41 = atomikosProperties36.isEnableLogging();
        java.lang.String str42 = atomikosProperties36.getTransactionManagerUniqueName();
        boolean boolean43 = properties33.remove((java.lang.Object) (byte) 1, (java.lang.Object) atomikosProperties36);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties44 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties44.setSerialJtaTransactions(false);
        atomikosProperties44.setThreadedTwoPhaseCommit(true);
        atomikosProperties44.setEnableLogging(false);
        boolean boolean51 = atomikosProperties44.isSerialJtaTransactions();
        int int52 = atomikosProperties44.getMaxActives();
        boolean boolean53 = atomikosProperties44.isSerialJtaTransactions();
        boolean boolean54 = properties0.remove((java.lang.Object) properties33, (java.lang.Object) boolean53);
        java.util.Properties properties55 = new java.util.Properties();
        java.lang.Object obj57 = properties55.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration58 = properties55.elements();
        boolean boolean59 = properties55.isEmpty();
        java.util.Set<java.lang.Object> objSet60 = properties55.keySet();
        boolean boolean61 = properties55.isEmpty();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet62 = properties55.entrySet();
        java.util.Properties properties63 = new java.util.Properties();
        java.lang.Object obj65 = properties63.remove((java.lang.Object) 0.0d);
        boolean boolean66 = properties63.isEmpty();
        java.lang.Object obj69 = properties63.setProperty("", "hi!");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties70 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties70.setSerialJtaTransactions(false);
        boolean boolean73 = properties55.remove((java.lang.Object) properties63, (java.lang.Object) atomikosProperties70);
        java.util.Properties properties74 = new java.util.Properties();
        java.lang.Object obj76 = properties74.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration77 = properties74.elements();
        int int78 = properties74.size();
        java.util.Properties properties79 = new java.util.Properties(properties74);
        java.util.Set<java.lang.String> strSet80 = properties74.stringPropertyNames();
        java.util.Set<java.lang.String> strSet81 = properties74.stringPropertyNames();
        java.lang.Object obj82 = properties0.put((java.lang.Object) properties63, (java.lang.Object) properties74);
        java.lang.String str84 = properties0.getProperty("");
        java.util.Set<java.lang.String> strSet85 = properties0.stringPropertyNames();
        properties0.clear();
        java.lang.Class<?> wildcardClass87 = properties0.getClass();
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(strSet3);
        org.junit.Assert.assertNull(obj7);
        org.junit.Assert.assertNotNull(strSet8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(objCollection10);
        org.junit.Assert.assertNotNull(wildcardEnumeration11);
        org.junit.Assert.assertNull(obj13);
        org.junit.Assert.assertNull(obj16);
        org.junit.Assert.assertNotNull(objEnumeration17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(objSet19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNotNull(objEntrySet21);
        org.junit.Assert.assertNull(obj24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNull(obj28);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 0 + "'", int34 == 0);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNull(str40);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertNull(str42);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + 50 + "'", int52 == 50);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertNull(obj57);
        org.junit.Assert.assertNotNull(objEnumeration58);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertNotNull(objSet60);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertNotNull(objEntrySet62);
        org.junit.Assert.assertNull(obj65);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66 == true);
        org.junit.Assert.assertNull(obj69);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertNull(obj76);
        org.junit.Assert.assertNotNull(objEnumeration77);
        org.junit.Assert.assertTrue("'" + int78 + "' != '" + 0 + "'", int78 == 0);
        org.junit.Assert.assertNotNull(strSet80);
        org.junit.Assert.assertNotNull(strSet81);
        org.junit.Assert.assertNull(obj82);
        org.junit.Assert.assertNull(str84);
        org.junit.Assert.assertNotNull(strSet85);
        org.junit.Assert.assertNotNull(wildcardClass87);
    }

    @Test
    public void test5021() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test5021");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration3 = properties0.elements();
        java.util.Enumeration<java.lang.Object> objEnumeration4 = properties0.elements();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties5 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties5.setSerialJtaTransactions(false);
        atomikosProperties5.setThreadedTwoPhaseCommit(true);
        atomikosProperties5.setMaxTimeout((long) '#');
        boolean boolean12 = atomikosProperties5.isEnableLogging();
        atomikosProperties5.setCheckpointInterval((long) (byte) -1);
        atomikosProperties5.setLogBaseName("{=hi!}");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties17 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties17.setSerialJtaTransactions(false);
        atomikosProperties17.setThreadedTwoPhaseCommit(true);
        atomikosProperties17.setThreadedTwoPhaseCommit(true);
        java.util.Properties properties24 = atomikosProperties17.asProperties();
        int int25 = atomikosProperties17.getMaxActives();
        atomikosProperties17.setService("hi!");
        long long28 = atomikosProperties17.getMaxTimeout();
        boolean boolean29 = properties0.remove((java.lang.Object) atomikosProperties5, (java.lang.Object) long28);
        java.util.Properties properties30 = new java.util.Properties(properties0);
        java.io.InputStream inputStream31 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties30.load(inputStream31);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(objEnumeration3);
        org.junit.Assert.assertNotNull(objEnumeration4);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(properties24);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 50 + "'", int25 == 50);
        org.junit.Assert.assertTrue("'" + long28 + "' != '" + 300000L + "'", long28 == 300000L);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
    }

    @Test
    public void test5022() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test5022");
        java.util.Properties properties0 = new java.util.Properties();
        java.util.Collection<java.lang.Object> objCollection1 = properties0.values();
        java.util.Properties properties2 = new java.util.Properties();
        java.lang.Object obj4 = properties2.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet5 = properties2.stringPropertyNames();
        java.util.Properties properties6 = new java.util.Properties();
        java.util.Properties properties7 = new java.util.Properties();
        java.lang.Object obj9 = properties7.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet10 = properties7.stringPropertyNames();
        boolean boolean11 = properties6.containsValue((java.lang.Object) properties7);
        java.util.Collection<java.lang.Object> objCollection12 = properties6.values();
        java.util.Enumeration<?> wildcardEnumeration13 = properties6.propertyNames();
        java.lang.Object obj15 = properties2.put((java.lang.Object) wildcardEnumeration13, (java.lang.Object) 10.0d);
        boolean boolean16 = properties0.equals((java.lang.Object) 10.0d);
        java.util.Enumeration<?> wildcardEnumeration17 = properties0.propertyNames();
        java.util.Properties properties18 = new java.util.Properties();
        java.lang.Object obj20 = properties18.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration21 = properties18.elements();
        int int22 = properties18.size();
        java.util.Properties properties23 = new java.util.Properties(properties18);
        boolean boolean24 = properties23.isEmpty();
        java.util.Properties properties25 = new java.util.Properties();
        java.lang.Object obj27 = properties25.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration28 = properties25.elements();
        int int29 = properties25.size();
        java.util.Properties properties30 = new java.util.Properties();
        java.lang.Object obj32 = properties30.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration33 = properties30.elements();
        boolean boolean34 = properties30.isEmpty();
        java.util.Set<java.lang.Object> objSet35 = properties30.keySet();
        boolean boolean36 = properties25.containsKey((java.lang.Object) objSet35);
        java.util.Enumeration<java.lang.Object> objEnumeration37 = properties25.keys();
        java.util.Properties properties38 = new java.util.Properties();
        java.lang.Object obj40 = properties38.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration41 = properties38.elements();
        boolean boolean42 = properties38.isEmpty();
        java.util.Set<java.lang.Object> objSet43 = properties38.keySet();
        java.util.Enumeration<java.lang.Object> objEnumeration44 = properties38.keys();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet45 = properties38.entrySet();
        boolean boolean47 = properties25.remove((java.lang.Object) properties38, (java.lang.Object) 1.0f);
        boolean boolean48 = properties23.contains((java.lang.Object) properties38);
        boolean boolean49 = properties0.containsValue((java.lang.Object) properties38);
        java.lang.Object obj50 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj51 = properties0.get(obj50);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(objCollection1);
        org.junit.Assert.assertNull(obj4);
        org.junit.Assert.assertNotNull(strSet5);
        org.junit.Assert.assertNull(obj9);
        org.junit.Assert.assertNotNull(strSet10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(objCollection12);
        org.junit.Assert.assertNotNull(wildcardEnumeration13);
        org.junit.Assert.assertNull(obj15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(wildcardEnumeration17);
        org.junit.Assert.assertNull(obj20);
        org.junit.Assert.assertNotNull(objEnumeration21);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 0 + "'", int22 == 0);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNull(obj27);
        org.junit.Assert.assertNotNull(objEnumeration28);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 0 + "'", int29 == 0);
        org.junit.Assert.assertNull(obj32);
        org.junit.Assert.assertNotNull(objEnumeration33);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertNotNull(objSet35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(objEnumeration37);
        org.junit.Assert.assertNull(obj40);
        org.junit.Assert.assertNotNull(objEnumeration41);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertNotNull(objSet43);
        org.junit.Assert.assertNotNull(objEnumeration44);
        org.junit.Assert.assertNotNull(objEntrySet45);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
    }

    @Test
    public void test5023() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test5023");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setSerialJtaTransactions(false);
        atomikosProperties0.setThreadedTwoPhaseCommit(true);
        atomikosProperties0.setSerialJtaTransactions(false);
        atomikosProperties0.setThreadedTwoPhaseCommit(false);
        java.util.Properties properties9 = atomikosProperties0.asProperties();
        boolean boolean10 = atomikosProperties0.isSerialJtaTransactions();
        org.junit.Assert.assertNotNull(properties9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
    }

    @Test
    public void test5024() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test5024");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration3 = properties0.elements();
        boolean boolean4 = properties0.isEmpty();
        java.util.Set<java.lang.Object> objSet5 = properties0.keySet();
        java.util.Enumeration<java.lang.Object> objEnumeration6 = properties0.keys();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet7 = properties0.entrySet();
        java.util.Properties properties9 = new java.util.Properties();
        java.lang.Object obj11 = properties9.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration12 = properties9.elements();
        boolean boolean13 = properties9.isEmpty();
        java.util.Set<java.lang.Object> objSet14 = properties9.keySet();
        boolean boolean15 = properties9.isEmpty();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties16 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties16.setSerialJtaTransactions(false);
        atomikosProperties16.setThreadedTwoPhaseCommit(true);
        atomikosProperties16.setMaxTimeout((long) '#');
        boolean boolean23 = atomikosProperties16.isEnableLogging();
        atomikosProperties16.setCheckpointInterval((long) (byte) -1);
        java.util.Properties properties26 = new java.util.Properties();
        java.util.Properties properties27 = new java.util.Properties();
        java.lang.Object obj29 = properties27.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet30 = properties27.stringPropertyNames();
        boolean boolean31 = properties26.containsValue((java.lang.Object) properties27);
        java.util.Collection<java.lang.Object> objCollection32 = properties26.values();
        java.lang.Object obj33 = properties9.replace((java.lang.Object) atomikosProperties16, (java.lang.Object) objCollection32);
        boolean boolean35 = properties0.replace((java.lang.Object) 100.0d, (java.lang.Object) objCollection32, (java.lang.Object) 10.0d);
        java.util.Properties properties36 = new java.util.Properties();
        java.lang.Object obj38 = properties36.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration39 = properties36.elements();
        int int40 = properties36.size();
        java.util.Properties properties41 = new java.util.Properties(properties36);
        java.util.Set<java.lang.String> strSet42 = properties36.stringPropertyNames();
        java.util.Properties properties43 = new java.util.Properties();
        java.lang.Object obj45 = properties43.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration46 = properties43.elements();
        boolean boolean47 = properties43.isEmpty();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet48 = properties43.entrySet();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties50 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties50.setSerialJtaTransactions(false);
        atomikosProperties50.setThreadedTwoPhaseCommit(true);
        atomikosProperties50.setMaxTimeout((long) '#');
        boolean boolean57 = atomikosProperties50.isForceShutdownOnVmExit();
        java.lang.Object obj58 = properties43.put((java.lang.Object) (short) 1, (java.lang.Object) atomikosProperties50);
        boolean boolean59 = atomikosProperties50.isSerialJtaTransactions();
        java.lang.Object obj60 = properties0.replace((java.lang.Object) properties36, (java.lang.Object) boolean59);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties61 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties61.setSerialJtaTransactions(false);
        atomikosProperties61.setThreadedTwoPhaseCommit(true);
        atomikosProperties61.setSerialJtaTransactions(false);
        java.lang.String str68 = atomikosProperties61.getService();
        boolean boolean69 = properties36.contains((java.lang.Object) atomikosProperties61);
        int int70 = properties36.size();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties71 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties71.setSerialJtaTransactions(false);
        atomikosProperties71.setThreadedTwoPhaseCommit(true);
        atomikosProperties71.setEnableLogging(false);
        atomikosProperties71.setForceShutdownOnVmExit(true);
        java.lang.String str80 = atomikosProperties71.getService();
        java.lang.String str81 = atomikosProperties71.getLogBaseDir();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties82 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties82.setSerialJtaTransactions(false);
        boolean boolean85 = atomikosProperties82.isSerialJtaTransactions();
        atomikosProperties82.setTransactionManagerUniqueName("hi!");
        java.lang.String str88 = atomikosProperties82.getLogBaseName();
        long long89 = atomikosProperties82.getMaxTimeout();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj90 = properties36.put((java.lang.Object) str81, (java.lang.Object) atomikosProperties82);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(objEnumeration3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(objSet5);
        org.junit.Assert.assertNotNull(objEnumeration6);
        org.junit.Assert.assertNotNull(objEntrySet7);
        org.junit.Assert.assertNull(obj11);
        org.junit.Assert.assertNotNull(objEnumeration12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(objSet14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNull(obj29);
        org.junit.Assert.assertNotNull(strSet30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(objCollection32);
        org.junit.Assert.assertNull(obj33);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNull(obj38);
        org.junit.Assert.assertNotNull(objEnumeration39);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 0 + "'", int40 == 0);
        org.junit.Assert.assertNotNull(strSet42);
        org.junit.Assert.assertNull(obj45);
        org.junit.Assert.assertNotNull(objEnumeration46);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertNotNull(objEntrySet48);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertNull(obj58);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertNull(obj60);
        org.junit.Assert.assertNull(str68);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertTrue("'" + int70 + "' != '" + 0 + "'", int70 == 0);
        org.junit.Assert.assertNull(str80);
        org.junit.Assert.assertNull(str81);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + false + "'", boolean85 == false);
        org.junit.Assert.assertEquals("'" + str88 + "' != '" + "tmlog" + "'", str88, "tmlog");
        org.junit.Assert.assertTrue("'" + long89 + "' != '" + 300000L + "'", long89 == 300000L);
    }

    @Test
    public void test5025() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test5025");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setSerialJtaTransactions(false);
        atomikosProperties0.setThreadedTwoPhaseCommit(true);
        atomikosProperties0.setMaxTimeout((long) '#');
        boolean boolean7 = atomikosProperties0.isEnableLogging();
        atomikosProperties0.setCheckpointInterval((long) (byte) -1);
        atomikosProperties0.setMaxActives((int) (byte) 100);
        atomikosProperties0.setForceShutdownOnVmExit(false);
        atomikosProperties0.setThreadedTwoPhaseCommit(true);
        boolean boolean16 = atomikosProperties0.isEnableLogging();
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
    }

    @Test
    public void test5026() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test5026");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration3 = properties0.elements();
        java.util.Enumeration<java.lang.Object> objEnumeration4 = properties0.elements();
        int int5 = properties0.size();
        java.util.Properties properties6 = new java.util.Properties();
        java.lang.Object obj8 = properties6.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration9 = properties6.elements();
        boolean boolean10 = properties6.isEmpty();
        java.util.Set<java.lang.Object> objSet11 = properties6.keySet();
        boolean boolean12 = properties6.isEmpty();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet13 = properties6.entrySet();
        java.util.Properties properties14 = new java.util.Properties();
        java.lang.Object obj16 = properties14.remove((java.lang.Object) 0.0d);
        boolean boolean17 = properties14.isEmpty();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties18 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        boolean boolean19 = properties14.containsValue((java.lang.Object) atomikosProperties18);
        java.util.Properties properties20 = new java.util.Properties();
        java.lang.Object obj22 = properties20.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration23 = properties20.elements();
        int int24 = properties20.size();
        java.util.Properties properties25 = new java.util.Properties(properties20);
        java.util.Set<java.lang.String> strSet26 = properties20.stringPropertyNames();
        java.util.Set<java.lang.String> strSet27 = properties20.stringPropertyNames();
        java.lang.Object obj28 = properties6.getOrDefault((java.lang.Object) properties14, (java.lang.Object) properties20);
        boolean boolean29 = properties0.equals((java.lang.Object) properties20);
        java.util.Properties properties30 = new java.util.Properties();
        java.lang.Object obj32 = properties30.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration33 = properties30.elements();
        boolean boolean34 = properties30.isEmpty();
        java.util.Set<java.lang.Object> objSet35 = properties30.keySet();
        boolean boolean36 = properties30.isEmpty();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet37 = properties30.entrySet();
        java.util.Properties properties38 = new java.util.Properties();
        java.lang.Object obj40 = properties38.remove((java.lang.Object) 0.0d);
        boolean boolean41 = properties38.isEmpty();
        java.lang.Object obj44 = properties38.setProperty("", "hi!");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties45 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties45.setSerialJtaTransactions(false);
        boolean boolean48 = properties30.remove((java.lang.Object) properties38, (java.lang.Object) atomikosProperties45);
        java.util.Properties properties49 = new java.util.Properties(properties38);
        int int50 = properties49.size();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties52 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties52.setSerialJtaTransactions(false);
        boolean boolean55 = atomikosProperties52.isSerialJtaTransactions();
        java.lang.String str56 = atomikosProperties52.getService();
        boolean boolean57 = atomikosProperties52.isEnableLogging();
        java.lang.String str58 = atomikosProperties52.getTransactionManagerUniqueName();
        boolean boolean59 = properties49.remove((java.lang.Object) (byte) 1, (java.lang.Object) atomikosProperties52);
        java.util.Properties properties60 = new java.util.Properties();
        java.lang.Object obj62 = properties60.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration63 = properties60.elements();
        boolean boolean64 = properties60.isEmpty();
        java.util.Enumeration<java.lang.Object> objEnumeration65 = properties60.elements();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet66 = properties60.entrySet();
        java.lang.Object obj67 = properties49.remove((java.lang.Object) objEntrySet66);
        boolean boolean68 = properties49.isEmpty();
        java.lang.String str69 = properties49.toString();
        properties49.clear();
        java.util.Enumeration<java.lang.Object> objEnumeration71 = properties49.elements();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties72 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties72.setSerialJtaTransactions(false);
        atomikosProperties72.setThreadedTwoPhaseCommit(true);
        atomikosProperties72.setThreadedTwoPhaseCommit(true);
        java.util.Properties properties79 = atomikosProperties72.asProperties();
        int int80 = atomikosProperties72.getMaxActives();
        atomikosProperties72.setService("hi!");
        long long83 = atomikosProperties72.getMaxTimeout();
        atomikosProperties72.setTransactionManagerUniqueName("hi!");
        atomikosProperties72.setForceShutdownOnVmExit(false);
        java.lang.String str88 = atomikosProperties72.getService();
        java.lang.String str89 = atomikosProperties72.getLogBaseName();
        java.lang.Object obj90 = properties0.replace((java.lang.Object) objEnumeration71, (java.lang.Object) atomikosProperties72);
        java.lang.String str91 = atomikosProperties72.getTransactionManagerUniqueName();
        atomikosProperties72.setCheckpointInterval(100L);
        atomikosProperties72.setSerialJtaTransactions(true);
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(objEnumeration3);
        org.junit.Assert.assertNotNull(objEnumeration4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertNull(obj8);
        org.junit.Assert.assertNotNull(objEnumeration9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(objSet11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(objEntrySet13);
        org.junit.Assert.assertNull(obj16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNull(obj22);
        org.junit.Assert.assertNotNull(objEnumeration23);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 0 + "'", int24 == 0);
        org.junit.Assert.assertNotNull(strSet26);
        org.junit.Assert.assertNotNull(strSet27);
        org.junit.Assert.assertNotNull(obj28);
        org.junit.Assert.assertEquals(obj28.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj28), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj28), "{}");
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNull(obj32);
        org.junit.Assert.assertNotNull(objEnumeration33);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertNotNull(objSet35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNotNull(objEntrySet37);
        org.junit.Assert.assertNull(obj40);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertNull(obj44);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + 0 + "'", int50 == 0);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertNull(str56);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertNull(str58);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertNull(obj62);
        org.junit.Assert.assertNotNull(objEnumeration63);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64 == true);
        org.junit.Assert.assertNotNull(objEnumeration65);
        org.junit.Assert.assertNotNull(objEntrySet66);
        org.junit.Assert.assertNull(obj67);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + true + "'", boolean68 == true);
        org.junit.Assert.assertEquals("'" + str69 + "' != '" + "{}" + "'", str69, "{}");
        org.junit.Assert.assertNotNull(objEnumeration71);
        org.junit.Assert.assertNotNull(properties79);
        org.junit.Assert.assertTrue("'" + int80 + "' != '" + 50 + "'", int80 == 50);
        org.junit.Assert.assertTrue("'" + long83 + "' != '" + 300000L + "'", long83 == 300000L);
        org.junit.Assert.assertEquals("'" + str88 + "' != '" + "hi!" + "'", str88, "hi!");
        org.junit.Assert.assertEquals("'" + str89 + "' != '" + "tmlog" + "'", str89, "tmlog");
        org.junit.Assert.assertNull(obj90);
        org.junit.Assert.assertEquals("'" + str91 + "' != '" + "hi!" + "'", str91, "hi!");
    }

    @Test
    public void test5027() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test5027");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setSerialJtaTransactions(false);
        atomikosProperties0.setThreadedTwoPhaseCommit(true);
        atomikosProperties0.setMaxTimeout((long) '#');
        boolean boolean7 = atomikosProperties0.isEnableLogging();
        atomikosProperties0.setForceShutdownOnVmExit(true);
        atomikosProperties0.setForceShutdownOnVmExit(true);
        atomikosProperties0.setEnableLogging(false);
        atomikosProperties0.setService("{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=false, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.tm_unique_name=tmlog, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
        atomikosProperties0.setMaxTimeout((long) '4');
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
    }

    @Test
    public void test5028() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test5028");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setSerialJtaTransactions(false);
        atomikosProperties0.setThreadedTwoPhaseCommit(true);
        atomikosProperties0.setLogBaseName("{=hi!}");
        java.lang.String str7 = atomikosProperties0.getTransactionManagerUniqueName();
        boolean boolean8 = atomikosProperties0.isForceShutdownOnVmExit();
        java.lang.String str9 = atomikosProperties0.getService();
        atomikosProperties0.setCheckpointInterval((long) 10);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNull(str9);
    }

    @Test
    public void test5029() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test5029");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        boolean boolean3 = properties0.isEmpty();
        java.lang.Object obj6 = properties0.setProperty("", "hi!");
        java.util.Properties properties7 = new java.util.Properties();
        java.lang.Object obj9 = properties7.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration10 = properties7.elements();
        boolean boolean11 = properties7.isEmpty();
        java.util.Set<java.lang.Object> objSet12 = properties7.keySet();
        boolean boolean13 = properties7.isEmpty();
        java.util.Properties properties14 = new java.util.Properties();
        java.util.Collection<java.lang.Object> objCollection15 = properties14.values();
        java.util.Enumeration<java.lang.Object> objEnumeration16 = properties14.keys();
        java.lang.Object obj17 = properties7.remove((java.lang.Object) properties14);
        java.lang.Object obj18 = properties0.get((java.lang.Object) properties14);
        java.util.Properties properties19 = new java.util.Properties();
        java.lang.Object obj21 = properties19.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration22 = properties19.elements();
        boolean boolean23 = properties19.isEmpty();
        java.util.Set<java.lang.Object> objSet24 = properties19.keySet();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties25 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties25.setSerialJtaTransactions(false);
        atomikosProperties25.setThreadedTwoPhaseCommit(true);
        atomikosProperties25.setThreadedTwoPhaseCommit(true);
        java.util.Properties properties32 = atomikosProperties25.asProperties();
        int int33 = atomikosProperties25.getMaxActives();
        java.util.Properties properties34 = new java.util.Properties();
        java.lang.Object obj36 = properties34.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration37 = properties34.elements();
        boolean boolean38 = properties34.isEmpty();
        java.util.Set<java.lang.Object> objSet39 = properties34.keySet();
        boolean boolean41 = properties34.containsKey((java.lang.Object) (-1.0f));
        java.lang.Object obj42 = properties19.put((java.lang.Object) atomikosProperties25, (java.lang.Object) properties34);
        boolean boolean43 = properties14.containsKey((java.lang.Object) properties34);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties44 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties44.setSerialJtaTransactions(false);
        boolean boolean47 = atomikosProperties44.isSerialJtaTransactions();
        java.lang.String str48 = atomikosProperties44.getService();
        boolean boolean49 = atomikosProperties44.isEnableLogging();
        java.lang.String str50 = atomikosProperties44.getTransactionManagerUniqueName();
        boolean boolean51 = properties34.containsValue((java.lang.Object) atomikosProperties44);
        java.lang.String str52 = atomikosProperties44.getLogBaseDir();
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNull(obj6);
        org.junit.Assert.assertNull(obj9);
        org.junit.Assert.assertNotNull(objEnumeration10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNotNull(objSet12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(objCollection15);
        org.junit.Assert.assertNotNull(objEnumeration16);
        org.junit.Assert.assertNull(obj17);
        org.junit.Assert.assertNull(obj18);
        org.junit.Assert.assertNull(obj21);
        org.junit.Assert.assertNotNull(objEnumeration22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNotNull(objSet24);
        org.junit.Assert.assertNotNull(properties32);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 50 + "'", int33 == 50);
        org.junit.Assert.assertNull(obj36);
        org.junit.Assert.assertNotNull(objEnumeration37);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertNotNull(objSet39);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNull(obj42);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNull(str48);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertNull(str50);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertNull(str52);
    }

    @Test
    public void test5030() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test5030");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setSerialJtaTransactions(false);
        boolean boolean3 = atomikosProperties0.isSerialJtaTransactions();
        atomikosProperties0.setTransactionManagerUniqueName("hi!");
        atomikosProperties0.setForceShutdownOnVmExit(false);
        boolean boolean8 = atomikosProperties0.isThreadedTwoPhaseCommit();
        atomikosProperties0.setMaxTimeout((-1L));
        boolean boolean11 = atomikosProperties0.isEnableLogging();
        int int12 = atomikosProperties0.getMaxActives();
        java.util.Properties properties13 = atomikosProperties0.asProperties();
        java.util.Enumeration<java.lang.Object> objEnumeration14 = properties13.elements();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 50 + "'", int12 == 50);
        org.junit.Assert.assertNotNull(properties13);
        org.junit.Assert.assertNotNull(objEnumeration14);
    }

    @Test
    public void test5031() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test5031");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet3 = properties0.stringPropertyNames();
        java.util.Properties properties4 = new java.util.Properties();
        java.util.Properties properties5 = new java.util.Properties();
        java.lang.Object obj7 = properties5.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet8 = properties5.stringPropertyNames();
        boolean boolean9 = properties4.containsValue((java.lang.Object) properties5);
        java.util.Collection<java.lang.Object> objCollection10 = properties4.values();
        java.util.Enumeration<?> wildcardEnumeration11 = properties4.propertyNames();
        java.lang.Object obj13 = properties0.put((java.lang.Object) wildcardEnumeration11, (java.lang.Object) 10.0d);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties14 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties14.setSerialJtaTransactions(false);
        atomikosProperties14.setThreadedTwoPhaseCommit(true);
        atomikosProperties14.setMaxTimeout((long) '#');
        boolean boolean21 = atomikosProperties14.isForceShutdownOnVmExit();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties22 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties22.setSerialJtaTransactions(false);
        atomikosProperties22.setThreadedTwoPhaseCommit(true);
        atomikosProperties22.setThreadedTwoPhaseCommit(true);
        java.lang.Object obj29 = properties0.getOrDefault((java.lang.Object) boolean21, (java.lang.Object) atomikosProperties22);
        java.util.Properties properties30 = new java.util.Properties();
        java.lang.Object obj32 = properties30.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration33 = properties30.elements();
        boolean boolean34 = properties30.isEmpty();
        java.util.Set<java.lang.Object> objSet35 = properties30.keySet();
        java.util.Enumeration<java.lang.Object> objEnumeration36 = properties30.keys();
        java.lang.String str38 = properties30.getProperty("hi!");
        java.lang.String str40 = properties30.getProperty("");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties41 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties41.setSerialJtaTransactions(false);
        atomikosProperties41.setThreadedTwoPhaseCommit(true);
        atomikosProperties41.setEnableLogging(false);
        boolean boolean48 = properties30.containsKey((java.lang.Object) atomikosProperties41);
        boolean boolean49 = properties0.containsValue((java.lang.Object) properties30);
        java.util.Enumeration<java.lang.Object> objEnumeration50 = properties0.elements();
        properties0.clear();
        java.util.Properties properties52 = new java.util.Properties();
        java.lang.Object obj54 = properties52.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration55 = properties52.elements();
        int int56 = properties52.size();
        java.util.Properties properties57 = new java.util.Properties();
        java.lang.Object obj59 = properties57.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration60 = properties57.elements();
        boolean boolean61 = properties57.isEmpty();
        java.util.Set<java.lang.Object> objSet62 = properties57.keySet();
        boolean boolean63 = properties52.containsKey((java.lang.Object) objSet62);
        java.util.Enumeration<java.lang.Object> objEnumeration64 = properties52.keys();
        int int65 = properties52.size();
        properties0.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties52);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties67 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties67.setSerialJtaTransactions(false);
        atomikosProperties67.setThreadedTwoPhaseCommit(true);
        boolean boolean72 = atomikosProperties67.isForceShutdownOnVmExit();
        java.lang.String str73 = atomikosProperties67.getTransactionManagerUniqueName();
        java.lang.String str74 = atomikosProperties67.getService();
        atomikosProperties67.setCheckpointInterval(0L);
        boolean boolean77 = properties52.equals((java.lang.Object) 0L);
        java.io.Writer writer78 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties52.store(writer78, "{{}=tmlog}");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(strSet3);
        org.junit.Assert.assertNull(obj7);
        org.junit.Assert.assertNotNull(strSet8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(objCollection10);
        org.junit.Assert.assertNotNull(wildcardEnumeration11);
        org.junit.Assert.assertNull(obj13);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(obj29);
        org.junit.Assert.assertNull(obj32);
        org.junit.Assert.assertNotNull(objEnumeration33);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertNotNull(objSet35);
        org.junit.Assert.assertNotNull(objEnumeration36);
        org.junit.Assert.assertNull(str38);
        org.junit.Assert.assertNull(str40);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNotNull(objEnumeration50);
        org.junit.Assert.assertNull(obj54);
        org.junit.Assert.assertNotNull(objEnumeration55);
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + 0 + "'", int56 == 0);
        org.junit.Assert.assertNull(obj59);
        org.junit.Assert.assertNotNull(objEnumeration60);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertNotNull(objSet62);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertNotNull(objEnumeration64);
        org.junit.Assert.assertTrue("'" + int65 + "' != '" + 0 + "'", int65 == 0);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertNull(str73);
        org.junit.Assert.assertNull(str74);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + false + "'", boolean77 == false);
    }

    @Test
    public void test5032() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test5032");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setSerialJtaTransactions(false);
        boolean boolean3 = atomikosProperties0.isSerialJtaTransactions();
        java.lang.String str4 = atomikosProperties0.getService();
        boolean boolean5 = atomikosProperties0.isEnableLogging();
        atomikosProperties0.setCheckpointInterval((long) (byte) 100);
        atomikosProperties0.setTransactionManagerUniqueName("{=hi!}");
        atomikosProperties0.setMaxTimeout(10000L);
        atomikosProperties0.setEnableLogging(false);
        long long14 = atomikosProperties0.getDefaultJtaTimeout();
        atomikosProperties0.setLogBaseName("hi!");
        long long17 = atomikosProperties0.getDefaultJtaTimeout();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertTrue("'" + long14 + "' != '" + 10000L + "'", long14 == 10000L);
        org.junit.Assert.assertTrue("'" + long17 + "' != '" + 10000L + "'", long17 == 10000L);
    }

    @Test
    public void test5033() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test5033");
        java.util.Properties properties0 = new java.util.Properties();
        java.util.Collection<java.lang.Object> objCollection1 = properties0.values();
        java.util.Enumeration<java.lang.Object> objEnumeration2 = properties0.keys();
        java.lang.Object obj5 = properties0.setProperty("{}", "{}");
        java.util.Set<java.lang.String> strSet6 = properties0.stringPropertyNames();
        java.util.Properties properties7 = new java.util.Properties();
        boolean boolean9 = properties7.contains((java.lang.Object) 100.0d);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties10 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties10.setSerialJtaTransactions(false);
        atomikosProperties10.setThreadedTwoPhaseCommit(true);
        atomikosProperties10.setSerialJtaTransactions(false);
        java.lang.String str17 = atomikosProperties10.getService();
        boolean boolean18 = properties7.containsKey((java.lang.Object) atomikosProperties10);
        boolean boolean19 = properties0.containsKey((java.lang.Object) properties7);
        java.lang.String str21 = properties0.getProperty("");
        java.util.Enumeration<java.lang.Object> objEnumeration22 = properties0.elements();
        java.io.InputStream inputStream23 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties0.load(inputStream23);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(objCollection1);
        org.junit.Assert.assertNotNull(objEnumeration2);
        org.junit.Assert.assertNull(obj5);
        org.junit.Assert.assertNotNull(strSet6);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNull(str17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNull(str21);
        org.junit.Assert.assertNotNull(objEnumeration22);
    }

    @Test
    public void test5034() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test5034");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setSerialJtaTransactions(false);
        boolean boolean3 = atomikosProperties0.isThreadedTwoPhaseCommit();
        atomikosProperties0.setLogBaseName("");
        atomikosProperties0.setLogBaseDir("");
        atomikosProperties0.setForceShutdownOnVmExit(false);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
    }

    @Test
    public void test5035() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test5035");
        java.util.Properties properties0 = new java.util.Properties();
        java.util.Properties properties1 = new java.util.Properties();
        java.lang.Object obj3 = properties1.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet4 = properties1.stringPropertyNames();
        boolean boolean5 = properties0.containsValue((java.lang.Object) properties1);
        java.util.Collection<java.lang.Object> objCollection6 = properties0.values();
        java.util.Enumeration<?> wildcardEnumeration7 = properties0.propertyNames();
        java.util.Set<java.lang.String> strSet8 = properties0.stringPropertyNames();
        java.util.Set<java.lang.String> strSet9 = properties0.stringPropertyNames();
        java.util.Properties properties10 = new java.util.Properties();
        java.lang.Object obj12 = properties10.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration13 = properties10.elements();
        int int14 = properties10.size();
        java.util.Properties properties15 = new java.util.Properties();
        java.lang.Object obj17 = properties15.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration18 = properties15.elements();
        boolean boolean19 = properties15.isEmpty();
        java.util.Set<java.lang.Object> objSet20 = properties15.keySet();
        boolean boolean21 = properties10.containsKey((java.lang.Object) objSet20);
        java.util.Enumeration<java.lang.Object> objEnumeration22 = properties10.keys();
        java.util.Properties properties23 = new java.util.Properties();
        java.lang.Object obj25 = properties23.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration26 = properties23.elements();
        boolean boolean27 = properties23.isEmpty();
        java.util.Set<java.lang.Object> objSet28 = properties23.keySet();
        java.util.Enumeration<java.lang.Object> objEnumeration29 = properties23.keys();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet30 = properties23.entrySet();
        boolean boolean32 = properties10.remove((java.lang.Object) properties23, (java.lang.Object) 1.0f);
        java.lang.Object obj33 = properties23.clone();
        java.util.Collection<java.lang.Object> objCollection34 = properties23.values();
        java.util.Collection<java.lang.Object> objCollection35 = properties23.values();
        java.lang.Object obj36 = properties0.get((java.lang.Object) properties23);
        java.io.PrintWriter printWriter37 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties0.list(printWriter37);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(obj3);
        org.junit.Assert.assertNotNull(strSet4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(objCollection6);
        org.junit.Assert.assertNotNull(wildcardEnumeration7);
        org.junit.Assert.assertNotNull(strSet8);
        org.junit.Assert.assertNotNull(strSet9);
        org.junit.Assert.assertNull(obj12);
        org.junit.Assert.assertNotNull(objEnumeration13);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertNull(obj17);
        org.junit.Assert.assertNotNull(objEnumeration18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(objSet20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(objEnumeration22);
        org.junit.Assert.assertNull(obj25);
        org.junit.Assert.assertNotNull(objEnumeration26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNotNull(objSet28);
        org.junit.Assert.assertNotNull(objEnumeration29);
        org.junit.Assert.assertNotNull(objEntrySet30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(obj33);
        org.junit.Assert.assertEquals(obj33.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj33), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj33), "{}");
        org.junit.Assert.assertNotNull(objCollection34);
        org.junit.Assert.assertNotNull(objCollection35);
        org.junit.Assert.assertNull(obj36);
    }

    @Test
    public void test5036() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test5036");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration3 = properties0.elements();
        boolean boolean4 = properties0.isEmpty();
        java.util.Set<java.lang.Object> objSet5 = properties0.keySet();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties6 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties6.setSerialJtaTransactions(false);
        atomikosProperties6.setThreadedTwoPhaseCommit(true);
        atomikosProperties6.setThreadedTwoPhaseCommit(true);
        java.util.Properties properties13 = atomikosProperties6.asProperties();
        int int14 = atomikosProperties6.getMaxActives();
        java.util.Properties properties15 = new java.util.Properties();
        java.lang.Object obj17 = properties15.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration18 = properties15.elements();
        boolean boolean19 = properties15.isEmpty();
        java.util.Set<java.lang.Object> objSet20 = properties15.keySet();
        boolean boolean22 = properties15.containsKey((java.lang.Object) (-1.0f));
        java.lang.Object obj23 = properties0.put((java.lang.Object) atomikosProperties6, (java.lang.Object) properties15);
        properties15.clear();
        java.util.Enumeration<java.lang.Object> objEnumeration25 = properties15.elements();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties26 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties26.setSerialJtaTransactions(false);
        boolean boolean29 = atomikosProperties26.isSerialJtaTransactions();
        atomikosProperties26.setTransactionManagerUniqueName("tmlog");
        java.util.Properties properties32 = atomikosProperties26.asProperties();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties33 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties33.setSerialJtaTransactions(false);
        boolean boolean36 = atomikosProperties33.isSerialJtaTransactions();
        atomikosProperties33.setTransactionManagerUniqueName("hi!");
        boolean boolean39 = atomikosProperties33.isEnableLogging();
        java.lang.String str40 = atomikosProperties33.getTransactionManagerUniqueName();
        atomikosProperties33.setCheckpointInterval(1L);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties43 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties43.setSerialJtaTransactions(false);
        atomikosProperties43.setThreadedTwoPhaseCommit(true);
        atomikosProperties43.setThreadedTwoPhaseCommit(true);
        java.util.Properties properties50 = atomikosProperties43.asProperties();
        int int51 = atomikosProperties43.getMaxActives();
        atomikosProperties43.setService("hi!");
        long long54 = atomikosProperties43.getMaxTimeout();
        atomikosProperties43.setTransactionManagerUniqueName("hi!");
        java.util.Properties properties57 = atomikosProperties43.asProperties();
        java.lang.Object obj58 = properties32.getOrDefault((java.lang.Object) atomikosProperties33, (java.lang.Object) properties57);
        boolean boolean59 = atomikosProperties33.isEnableLogging();
        boolean boolean60 = properties15.equals((java.lang.Object) boolean59);
        java.util.Enumeration<java.lang.Object> objEnumeration61 = properties15.elements();
        java.util.Set<java.lang.Object> objSet62 = properties15.keySet();
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(objEnumeration3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(objSet5);
        org.junit.Assert.assertNotNull(properties13);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 50 + "'", int14 == 50);
        org.junit.Assert.assertNull(obj17);
        org.junit.Assert.assertNotNull(objEnumeration18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(objSet20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNull(obj23);
        org.junit.Assert.assertNotNull(objEnumeration25);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(properties32);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "hi!" + "'", str40, "hi!");
        org.junit.Assert.assertNotNull(properties50);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + 50 + "'", int51 == 50);
        org.junit.Assert.assertTrue("'" + long54 + "' != '" + 300000L + "'", long54 == 300000L);
        org.junit.Assert.assertNotNull(properties57);
        org.junit.Assert.assertNotNull(obj58);
// flaky:         org.junit.Assert.assertEquals(obj58.toString(), "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=false, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.service=hi!, com.atomikos.icatch.threaded_2pc=true, com.atomikos.icatch.tm_unique_name=hi!, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
// flaky:         org.junit.Assert.assertEquals(java.lang.String.valueOf(obj58), "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=false, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.service=hi!, com.atomikos.icatch.threaded_2pc=true, com.atomikos.icatch.tm_unique_name=hi!, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
// flaky:         org.junit.Assert.assertEquals(java.util.Objects.toString(obj58), "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=false, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.service=hi!, com.atomikos.icatch.threaded_2pc=true, com.atomikos.icatch.tm_unique_name=hi!, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertNotNull(objEnumeration61);
        org.junit.Assert.assertNotNull(objSet62);
    }

    @Test
    public void test5037() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test5037");
        java.util.Properties properties0 = new java.util.Properties();
        java.util.Properties properties1 = new java.util.Properties();
        java.lang.Object obj3 = properties1.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet4 = properties1.stringPropertyNames();
        boolean boolean5 = properties0.containsValue((java.lang.Object) properties1);
        boolean boolean6 = properties1.isEmpty();
        java.util.Properties properties7 = new java.util.Properties(properties1);
        java.util.Properties properties8 = new java.util.Properties();
        java.lang.Object obj10 = properties8.remove((java.lang.Object) 0.0d);
        boolean boolean11 = properties8.isEmpty();
        java.util.Enumeration<java.lang.Object> objEnumeration12 = properties8.elements();
        java.util.Enumeration<java.lang.Object> objEnumeration13 = properties8.elements();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties14 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties14.setSerialJtaTransactions(false);
        atomikosProperties14.setThreadedTwoPhaseCommit(true);
        atomikosProperties14.setMaxTimeout((long) '#');
        boolean boolean21 = atomikosProperties14.isForceShutdownOnVmExit();
        int int22 = atomikosProperties14.getMaxActives();
        java.lang.Object obj23 = properties8.remove((java.lang.Object) int22);
        java.util.Collection<java.lang.Object> objCollection24 = properties8.values();
        java.util.Properties properties25 = new java.util.Properties();
        java.lang.Object obj27 = properties25.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration28 = properties25.elements();
        boolean boolean29 = properties25.isEmpty();
        java.util.Set<java.lang.Object> objSet30 = properties25.keySet();
        java.util.Enumeration<java.lang.Object> objEnumeration31 = properties25.keys();
        java.util.Enumeration<java.lang.Object> objEnumeration32 = properties25.elements();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties33 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties33.setSerialJtaTransactions(false);
        boolean boolean36 = atomikosProperties33.isSerialJtaTransactions();
        java.lang.String str37 = atomikosProperties33.getService();
        boolean boolean38 = atomikosProperties33.isEnableLogging();
        atomikosProperties33.setCheckpointInterval((long) (byte) 100);
        java.lang.String str41 = atomikosProperties33.getLogBaseName();
        boolean boolean42 = properties25.contains((java.lang.Object) atomikosProperties33);
        java.lang.Object obj43 = properties25.clone();
        properties25.clear();
        java.lang.Object obj47 = properties25.setProperty("{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=100, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=35, com.atomikos.icatch.threaded_2pc=true, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}", "{hi!=[], {}={}}");
        properties8.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties25);
        java.util.Properties properties49 = new java.util.Properties(properties25);
        java.util.Properties properties50 = new java.util.Properties();
        java.lang.Object obj52 = properties50.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration53 = properties50.elements();
        boolean boolean54 = properties50.isEmpty();
        java.util.Enumeration<java.lang.Object> objEnumeration55 = properties50.elements();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet56 = properties50.entrySet();
        java.util.Set<java.lang.String> strSet57 = properties50.stringPropertyNames();
        boolean boolean58 = properties50.isEmpty();
        java.util.Set<java.lang.Object> objSet59 = properties50.keySet();
        java.util.Enumeration<java.lang.Object> objEnumeration60 = properties50.keys();
        java.lang.Object obj61 = properties7.put((java.lang.Object) properties49, (java.lang.Object) properties50);
        java.lang.String str64 = properties7.getProperty("{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=false, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, hi!=, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}", "{{}=tmlog}");
        org.junit.Assert.assertNull(obj3);
        org.junit.Assert.assertNotNull(strSet4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNull(obj10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNotNull(objEnumeration12);
        org.junit.Assert.assertNotNull(objEnumeration13);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 50 + "'", int22 == 50);
        org.junit.Assert.assertNull(obj23);
        org.junit.Assert.assertNotNull(objCollection24);
        org.junit.Assert.assertNull(obj27);
        org.junit.Assert.assertNotNull(objEnumeration28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNotNull(objSet30);
        org.junit.Assert.assertNotNull(objEnumeration31);
        org.junit.Assert.assertNotNull(objEnumeration32);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNull(str37);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "tmlog" + "'", str41, "tmlog");
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(obj43);
        org.junit.Assert.assertEquals(obj43.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj43), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj43), "{}");
        org.junit.Assert.assertNull(obj47);
        org.junit.Assert.assertNull(obj52);
        org.junit.Assert.assertNotNull(objEnumeration53);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertNotNull(objEnumeration55);
        org.junit.Assert.assertNotNull(objEntrySet56);
        org.junit.Assert.assertNotNull(strSet57);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertNotNull(objSet59);
        org.junit.Assert.assertNotNull(objEnumeration60);
        org.junit.Assert.assertNull(obj61);
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "{{}=tmlog}" + "'", str64, "{{}=tmlog}");
    }

    @Test
    public void test5038() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test5038");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration3 = properties0.elements();
        boolean boolean4 = properties0.isEmpty();
        java.util.Set<java.lang.Object> objSet5 = properties0.keySet();
        java.util.Enumeration<java.lang.Object> objEnumeration6 = properties0.keys();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet7 = properties0.entrySet();
        java.util.Properties properties8 = new java.util.Properties(properties0);
        java.util.Set<java.lang.String> strSet9 = properties0.stringPropertyNames();
        int int10 = properties0.size();
        java.lang.String str11 = properties0.toString();
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(objEnumeration3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(objSet5);
        org.junit.Assert.assertNotNull(objEnumeration6);
        org.junit.Assert.assertNotNull(objEntrySet7);
        org.junit.Assert.assertNotNull(strSet9);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "{}" + "'", str11, "{}");
    }

    @Test
    public void test5039() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test5039");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration3 = properties0.elements();
        boolean boolean4 = properties0.isEmpty();
        java.util.Set<java.lang.Object> objSet5 = properties0.keySet();
        boolean boolean6 = properties0.isEmpty();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet7 = properties0.entrySet();
        java.util.Properties properties8 = new java.util.Properties();
        java.lang.Object obj10 = properties8.remove((java.lang.Object) 0.0d);
        boolean boolean11 = properties8.isEmpty();
        java.lang.Object obj14 = properties8.setProperty("", "hi!");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties15 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties15.setSerialJtaTransactions(false);
        boolean boolean18 = properties0.remove((java.lang.Object) properties8, (java.lang.Object) atomikosProperties15);
        java.util.Properties properties19 = new java.util.Properties(properties8);
        java.util.Enumeration<java.lang.Object> objEnumeration20 = properties8.elements();
        boolean boolean21 = properties8.isEmpty();
        java.io.OutputStream outputStream22 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties8.save(outputStream22, "");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(objEnumeration3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(objSet5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(objEntrySet7);
        org.junit.Assert.assertNull(obj10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNull(obj14);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(objEnumeration20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
    }

    @Test
    public void test5040() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test5040");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration3 = properties0.elements();
        boolean boolean4 = properties0.isEmpty();
        java.util.Set<java.lang.Object> objSet5 = properties0.keySet();
        java.util.Properties properties6 = new java.util.Properties();
        java.lang.Object obj8 = properties6.remove((java.lang.Object) 0.0d);
        java.util.Properties properties9 = new java.util.Properties();
        java.util.Collection<java.lang.Object> objCollection10 = properties9.values();
        java.util.Enumeration<java.lang.Object> objEnumeration11 = properties9.keys();
        java.util.Properties properties12 = new java.util.Properties();
        java.lang.Object obj14 = properties12.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration15 = properties12.elements();
        boolean boolean16 = properties12.isEmpty();
        java.util.Set<java.lang.Object> objSet17 = properties12.keySet();
        java.util.Enumeration<java.lang.Object> objEnumeration18 = properties12.keys();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet19 = properties12.entrySet();
        java.lang.Object obj20 = properties6.put((java.lang.Object) properties9, (java.lang.Object) properties12);
        java.lang.String str22 = properties9.getProperty("{=hi!}");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties23 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties23.setSerialJtaTransactions(false);
        atomikosProperties23.setThreadedTwoPhaseCommit(true);
        atomikosProperties23.setThreadedTwoPhaseCommit(true);
        long long30 = atomikosProperties23.getMaxTimeout();
        boolean boolean31 = properties9.containsValue((java.lang.Object) atomikosProperties23);
        java.util.Enumeration<java.lang.Object> objEnumeration32 = properties9.elements();
        java.util.Set<java.lang.String> strSet33 = properties9.stringPropertyNames();
        boolean boolean34 = properties0.contains((java.lang.Object) properties9);
        java.util.Properties properties35 = new java.util.Properties();
        java.lang.Object obj37 = properties35.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration38 = properties35.elements();
        int int39 = properties35.size();
        java.util.Properties properties40 = new java.util.Properties(properties35);
        java.lang.Object obj41 = properties9.remove((java.lang.Object) properties40);
        java.io.OutputStream outputStream42 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties9.save(outputStream42, "{=hi!}");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(objEnumeration3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(objSet5);
        org.junit.Assert.assertNull(obj8);
        org.junit.Assert.assertNotNull(objCollection10);
        org.junit.Assert.assertNotNull(objEnumeration11);
        org.junit.Assert.assertNull(obj14);
        org.junit.Assert.assertNotNull(objEnumeration15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(objSet17);
        org.junit.Assert.assertNotNull(objEnumeration18);
        org.junit.Assert.assertNotNull(objEntrySet19);
        org.junit.Assert.assertNull(obj20);
        org.junit.Assert.assertNull(str22);
        org.junit.Assert.assertTrue("'" + long30 + "' != '" + 300000L + "'", long30 == 300000L);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(objEnumeration32);
        org.junit.Assert.assertNotNull(strSet33);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNull(obj37);
        org.junit.Assert.assertNotNull(objEnumeration38);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 0 + "'", int39 == 0);
        org.junit.Assert.assertNull(obj41);
    }

    @Test
    public void test5041() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test5041");
        java.util.Properties properties0 = new java.util.Properties();
        java.util.Collection<java.lang.Object> objCollection1 = properties0.values();
        java.util.Enumeration<java.lang.Object> objEnumeration2 = properties0.keys();
        java.util.Properties properties3 = new java.util.Properties();
        java.lang.Object obj5 = properties3.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration6 = properties3.elements();
        boolean boolean7 = properties3.isEmpty();
        java.util.Set<java.lang.Object> objSet8 = properties3.keySet();
        boolean boolean10 = properties3.containsKey((java.lang.Object) (-1.0f));
        java.util.Collection<java.lang.Object> objCollection11 = properties3.values();
        java.lang.Object obj12 = properties3.clone();
        boolean boolean13 = properties0.equals((java.lang.Object) properties3);
        java.util.Properties properties14 = new java.util.Properties();
        java.util.Properties properties15 = new java.util.Properties();
        java.lang.Object obj17 = properties15.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet18 = properties15.stringPropertyNames();
        boolean boolean19 = properties14.containsValue((java.lang.Object) properties15);
        java.util.Collection<java.lang.Object> objCollection20 = properties14.values();
        java.util.Properties properties22 = new java.util.Properties();
        java.lang.Object obj24 = properties22.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration25 = properties22.elements();
        boolean boolean26 = properties22.isEmpty();
        java.util.Set<java.lang.Object> objSet27 = properties22.keySet();
        java.lang.Object obj28 = properties14.putIfAbsent((java.lang.Object) "hi!", (java.lang.Object) objSet27);
        java.util.Set<java.lang.Object> objSet29 = properties14.keySet();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties30 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties30.setSerialJtaTransactions(false);
        atomikosProperties30.setThreadedTwoPhaseCommit(true);
        atomikosProperties30.setMaxTimeout((long) '#');
        boolean boolean37 = atomikosProperties30.isEnableLogging();
        atomikosProperties30.setCheckpointInterval((long) (byte) -1);
        atomikosProperties30.setEnableLogging(true);
        java.util.Properties properties42 = new java.util.Properties();
        java.lang.Object obj44 = properties42.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration45 = properties42.elements();
        boolean boolean46 = properties42.isEmpty();
        java.util.Enumeration<java.lang.Object> objEnumeration47 = properties42.elements();
        java.lang.Object obj48 = properties14.replace((java.lang.Object) true, (java.lang.Object) properties42);
        java.util.Properties properties49 = new java.util.Properties();
        java.util.Properties properties50 = new java.util.Properties();
        java.lang.Object obj52 = properties50.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet53 = properties50.stringPropertyNames();
        boolean boolean54 = properties49.containsValue((java.lang.Object) properties50);
        java.util.Collection<java.lang.Object> objCollection55 = properties49.values();
        java.util.Properties properties57 = new java.util.Properties();
        java.lang.Object obj59 = properties57.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration60 = properties57.elements();
        boolean boolean61 = properties57.isEmpty();
        java.util.Set<java.lang.Object> objSet62 = properties57.keySet();
        java.lang.Object obj63 = properties49.putIfAbsent((java.lang.Object) "hi!", (java.lang.Object) objSet62);
        java.util.Set<java.lang.Object> objSet64 = properties49.keySet();
        java.lang.Object obj65 = properties0.putIfAbsent((java.lang.Object) properties14, (java.lang.Object) properties49);
        java.util.Enumeration<java.lang.Object> objEnumeration66 = properties14.elements();
        java.lang.Object obj69 = properties14.setProperty("{hi!=[]}", "");
        java.util.Set<java.lang.String> strSet70 = properties14.stringPropertyNames();
        java.lang.String str72 = properties14.getProperty("tmlog");
        java.util.Enumeration<?> wildcardEnumeration73 = properties14.propertyNames();
        java.lang.Object obj76 = properties14.setProperty("{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=100, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=35, com.atomikos.icatch.threaded_2pc=true, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}", "{com.atomikos.icatch.enable_logging=false, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=false, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
        org.junit.Assert.assertNotNull(objCollection1);
        org.junit.Assert.assertNotNull(objEnumeration2);
        org.junit.Assert.assertNull(obj5);
        org.junit.Assert.assertNotNull(objEnumeration6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(objSet8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(objCollection11);
        org.junit.Assert.assertNotNull(obj12);
        org.junit.Assert.assertEquals(obj12.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj12), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj12), "{}");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNull(obj17);
        org.junit.Assert.assertNotNull(strSet18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(objCollection20);
        org.junit.Assert.assertNull(obj24);
        org.junit.Assert.assertNotNull(objEnumeration25);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertNotNull(objSet27);
        org.junit.Assert.assertNull(obj28);
        org.junit.Assert.assertNotNull(objSet29);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertNull(obj44);
        org.junit.Assert.assertNotNull(objEnumeration45);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertNotNull(objEnumeration47);
        org.junit.Assert.assertNull(obj48);
        org.junit.Assert.assertNull(obj52);
        org.junit.Assert.assertNotNull(strSet53);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertNotNull(objCollection55);
        org.junit.Assert.assertNull(obj59);
        org.junit.Assert.assertNotNull(objEnumeration60);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertNotNull(objSet62);
        org.junit.Assert.assertNull(obj63);
        org.junit.Assert.assertNotNull(objSet64);
        org.junit.Assert.assertNull(obj65);
        org.junit.Assert.assertNotNull(objEnumeration66);
        org.junit.Assert.assertNull(obj69);
        org.junit.Assert.assertNotNull(strSet70);
        org.junit.Assert.assertNull(str72);
        org.junit.Assert.assertNotNull(wildcardEnumeration73);
        org.junit.Assert.assertNull(obj76);
    }

    @Test
    public void test5042() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test5042");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setSerialJtaTransactions(false);
        boolean boolean3 = atomikosProperties0.isSerialJtaTransactions();
        atomikosProperties0.setTransactionManagerUniqueName("hi!");
        java.lang.String str6 = atomikosProperties0.getLogBaseName();
        java.lang.String str7 = atomikosProperties0.getLogBaseName();
        boolean boolean8 = atomikosProperties0.isSerialJtaTransactions();
        long long9 = atomikosProperties0.getMaxTimeout();
        atomikosProperties0.setCheckpointInterval(0L);
        java.lang.String str12 = atomikosProperties0.getLogBaseName();
        atomikosProperties0.setSerialJtaTransactions(false);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "tmlog" + "'", str6, "tmlog");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "tmlog" + "'", str7, "tmlog");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + long9 + "' != '" + 300000L + "'", long9 == 300000L);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "tmlog" + "'", str12, "tmlog");
    }

    @Test
    public void test5043() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test5043");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration3 = properties0.elements();
        boolean boolean4 = properties0.isEmpty();
        java.util.Set<java.lang.Object> objSet5 = properties0.keySet();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties6 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties6.setSerialJtaTransactions(false);
        atomikosProperties6.setThreadedTwoPhaseCommit(true);
        atomikosProperties6.setThreadedTwoPhaseCommit(true);
        java.util.Properties properties13 = atomikosProperties6.asProperties();
        int int14 = atomikosProperties6.getMaxActives();
        java.util.Properties properties15 = new java.util.Properties();
        java.lang.Object obj17 = properties15.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration18 = properties15.elements();
        boolean boolean19 = properties15.isEmpty();
        java.util.Set<java.lang.Object> objSet20 = properties15.keySet();
        boolean boolean22 = properties15.containsKey((java.lang.Object) (-1.0f));
        java.lang.Object obj23 = properties0.put((java.lang.Object) atomikosProperties6, (java.lang.Object) properties15);
        java.util.Properties properties24 = new java.util.Properties();
        java.lang.Object obj26 = properties24.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet27 = properties24.stringPropertyNames();
        java.util.Properties properties28 = new java.util.Properties();
        java.lang.Object obj30 = properties28.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet31 = properties28.stringPropertyNames();
        java.lang.Object obj33 = properties24.put((java.lang.Object) strSet31, (java.lang.Object) 0.0d);
        java.util.Properties properties34 = new java.util.Properties();
        java.util.Properties properties35 = new java.util.Properties();
        java.lang.Object obj37 = properties35.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet38 = properties35.stringPropertyNames();
        boolean boolean39 = properties34.containsValue((java.lang.Object) properties35);
        java.util.Collection<java.lang.Object> objCollection40 = properties34.values();
        java.util.Properties properties42 = new java.util.Properties();
        java.lang.Object obj44 = properties42.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration45 = properties42.elements();
        boolean boolean46 = properties42.isEmpty();
        java.util.Set<java.lang.Object> objSet47 = properties42.keySet();
        java.lang.Object obj48 = properties34.putIfAbsent((java.lang.Object) "hi!", (java.lang.Object) objSet47);
        java.util.Set<java.lang.Object> objSet49 = properties34.keySet();
        java.lang.Object obj51 = properties24.putIfAbsent((java.lang.Object) properties34, (java.lang.Object) (short) 10);
        java.util.Enumeration<?> wildcardEnumeration52 = properties34.propertyNames();
        properties0.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties34);
        java.util.Collection<java.lang.Object> objCollection54 = properties0.values();
        java.util.Enumeration<java.lang.Object> objEnumeration55 = properties0.keys();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties56 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties56.setSerialJtaTransactions(false);
        atomikosProperties56.setThreadedTwoPhaseCommit(true);
        atomikosProperties56.setEnableLogging(false);
        boolean boolean63 = atomikosProperties56.isSerialJtaTransactions();
        int int64 = atomikosProperties56.getMaxActives();
        boolean boolean65 = atomikosProperties56.isEnableLogging();
        long long66 = atomikosProperties56.getCheckpointInterval();
        long long67 = atomikosProperties56.getDefaultJtaTimeout();
        atomikosProperties56.setMaxActives((-1));
        atomikosProperties56.setLogBaseName("{}");
        java.lang.Object obj72 = properties0.remove((java.lang.Object) "{}");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties73 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties73.setSerialJtaTransactions(false);
        boolean boolean76 = atomikosProperties73.isSerialJtaTransactions();
        java.lang.String str77 = atomikosProperties73.getService();
        atomikosProperties73.setDefaultJtaTimeout((long) 0);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties80 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties80.setSerialJtaTransactions(false);
        atomikosProperties80.setThreadedTwoPhaseCommit(true);
        atomikosProperties80.setMaxTimeout((long) '#');
        boolean boolean87 = atomikosProperties80.isEnableLogging();
        atomikosProperties80.setCheckpointInterval((long) (byte) -1);
        boolean boolean90 = atomikosProperties80.isSerialJtaTransactions();
        java.lang.String str91 = atomikosProperties80.getLogBaseDir();
        boolean boolean92 = properties0.remove((java.lang.Object) atomikosProperties73, (java.lang.Object) atomikosProperties80);
        boolean boolean93 = atomikosProperties80.isEnableLogging();
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(objEnumeration3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(objSet5);
        org.junit.Assert.assertNotNull(properties13);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 50 + "'", int14 == 50);
        org.junit.Assert.assertNull(obj17);
        org.junit.Assert.assertNotNull(objEnumeration18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(objSet20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNull(obj23);
        org.junit.Assert.assertNull(obj26);
        org.junit.Assert.assertNotNull(strSet27);
        org.junit.Assert.assertNull(obj30);
        org.junit.Assert.assertNotNull(strSet31);
        org.junit.Assert.assertNull(obj33);
        org.junit.Assert.assertNull(obj37);
        org.junit.Assert.assertNotNull(strSet38);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(objCollection40);
        org.junit.Assert.assertNull(obj44);
        org.junit.Assert.assertNotNull(objEnumeration45);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertNotNull(objSet47);
        org.junit.Assert.assertNull(obj48);
        org.junit.Assert.assertNotNull(objSet49);
        org.junit.Assert.assertNull(obj51);
        org.junit.Assert.assertNotNull(wildcardEnumeration52);
        org.junit.Assert.assertNotNull(objCollection54);
        org.junit.Assert.assertNotNull(objEnumeration55);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertTrue("'" + int64 + "' != '" + 50 + "'", int64 == 50);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertTrue("'" + long66 + "' != '" + 500L + "'", long66 == 500L);
        org.junit.Assert.assertTrue("'" + long67 + "' != '" + 10000L + "'", long67 == 10000L);
        org.junit.Assert.assertNull(obj72);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
        org.junit.Assert.assertNull(str77);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + true + "'", boolean87 == true);
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + false + "'", boolean90 == false);
        org.junit.Assert.assertNull(str91);
        org.junit.Assert.assertTrue("'" + boolean92 + "' != '" + false + "'", boolean92 == false);
        org.junit.Assert.assertTrue("'" + boolean93 + "' != '" + true + "'", boolean93 == true);
    }

    @Test
    public void test5044() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test5044");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration3 = properties0.elements();
        boolean boolean4 = properties0.isEmpty();
        java.util.Enumeration<java.lang.Object> objEnumeration5 = properties0.elements();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet6 = properties0.entrySet();
        java.util.Set<java.lang.String> strSet7 = properties0.stringPropertyNames();
        java.util.Properties properties8 = new java.util.Properties();
        java.lang.Object obj10 = properties8.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration11 = properties8.elements();
        boolean boolean12 = properties8.isEmpty();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet13 = properties8.entrySet();
        boolean boolean14 = properties0.contains((java.lang.Object) properties8);
        java.util.Properties properties15 = new java.util.Properties();
        java.lang.Object obj17 = properties15.remove((java.lang.Object) 0.0d);
        java.util.Properties properties18 = new java.util.Properties();
        java.util.Collection<java.lang.Object> objCollection19 = properties18.values();
        java.util.Enumeration<java.lang.Object> objEnumeration20 = properties18.keys();
        java.util.Properties properties21 = new java.util.Properties();
        java.lang.Object obj23 = properties21.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration24 = properties21.elements();
        boolean boolean25 = properties21.isEmpty();
        java.util.Set<java.lang.Object> objSet26 = properties21.keySet();
        java.util.Enumeration<java.lang.Object> objEnumeration27 = properties21.keys();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet28 = properties21.entrySet();
        java.lang.Object obj29 = properties15.put((java.lang.Object) properties18, (java.lang.Object) properties21);
        java.lang.Object obj30 = properties18.clone();
        boolean boolean31 = properties0.containsKey((java.lang.Object) properties18);
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet32 = properties18.entrySet();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties33 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties33.setSerialJtaTransactions(false);
        boolean boolean36 = atomikosProperties33.isSerialJtaTransactions();
        java.lang.String str37 = atomikosProperties33.getService();
        boolean boolean38 = atomikosProperties33.isEnableLogging();
        java.util.Properties properties39 = atomikosProperties33.asProperties();
        atomikosProperties33.setMaxTimeout((long) 9);
        java.lang.String str42 = atomikosProperties33.getTransactionManagerUniqueName();
        java.util.Properties properties43 = new java.util.Properties();
        java.lang.Object obj45 = properties43.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration46 = properties43.elements();
        boolean boolean47 = properties43.isEmpty();
        java.util.Enumeration<java.lang.Object> objEnumeration48 = properties43.elements();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet49 = properties43.entrySet();
        int int50 = properties43.size();
        properties43.clear();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj52 = properties18.replace((java.lang.Object) str42, (java.lang.Object) properties43);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(objEnumeration3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(objEnumeration5);
        org.junit.Assert.assertNotNull(objEntrySet6);
        org.junit.Assert.assertNotNull(strSet7);
        org.junit.Assert.assertNull(obj10);
        org.junit.Assert.assertNotNull(objEnumeration11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(objEntrySet13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNull(obj17);
        org.junit.Assert.assertNotNull(objCollection19);
        org.junit.Assert.assertNotNull(objEnumeration20);
        org.junit.Assert.assertNull(obj23);
        org.junit.Assert.assertNotNull(objEnumeration24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(objSet26);
        org.junit.Assert.assertNotNull(objEnumeration27);
        org.junit.Assert.assertNotNull(objEntrySet28);
        org.junit.Assert.assertNull(obj29);
        org.junit.Assert.assertNotNull(obj30);
        org.junit.Assert.assertEquals(obj30.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj30), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj30), "{}");
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(objEntrySet32);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNull(str37);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertNotNull(properties39);
        org.junit.Assert.assertNull(str42);
        org.junit.Assert.assertNull(obj45);
        org.junit.Assert.assertNotNull(objEnumeration46);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertNotNull(objEnumeration48);
        org.junit.Assert.assertNotNull(objEntrySet49);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + 0 + "'", int50 == 0);
    }

    @Test
    public void test5045() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test5045");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        boolean boolean4 = properties0.containsValue((java.lang.Object) "hi!");
        java.lang.Object obj7 = properties0.put((java.lang.Object) (byte) -1, (java.lang.Object) 100L);
        java.util.Enumeration<java.lang.Object> objEnumeration8 = properties0.keys();
        java.util.Properties properties9 = new java.util.Properties();
        java.lang.Object obj11 = properties9.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration12 = properties9.elements();
        boolean boolean13 = properties9.isEmpty();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet14 = properties9.entrySet();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties16 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties16.setSerialJtaTransactions(false);
        atomikosProperties16.setThreadedTwoPhaseCommit(true);
        atomikosProperties16.setMaxTimeout((long) '#');
        boolean boolean23 = atomikosProperties16.isForceShutdownOnVmExit();
        java.lang.Object obj24 = properties9.put((java.lang.Object) (short) 1, (java.lang.Object) atomikosProperties16);
        long long25 = atomikosProperties16.getDefaultJtaTimeout();
        java.lang.String str26 = atomikosProperties16.getLogBaseDir();
        java.util.Properties properties27 = new java.util.Properties();
        java.lang.Object obj29 = properties27.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration30 = properties27.elements();
        boolean boolean31 = properties27.isEmpty();
        java.lang.Object obj34 = properties27.setProperty("tmlog", "");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties35 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties35.setSerialJtaTransactions(false);
        boolean boolean38 = atomikosProperties35.isSerialJtaTransactions();
        atomikosProperties35.setTransactionManagerUniqueName("hi!");
        atomikosProperties35.setForceShutdownOnVmExit(false);
        atomikosProperties35.setDefaultJtaTimeout((long) (byte) 10);
        java.lang.String str45 = atomikosProperties35.getTransactionManagerUniqueName();
        java.util.Properties properties46 = new java.util.Properties();
        java.util.Properties properties47 = new java.util.Properties();
        java.lang.Object obj49 = properties47.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet50 = properties47.stringPropertyNames();
        boolean boolean51 = properties46.containsValue((java.lang.Object) properties47);
        java.util.Collection<java.lang.Object> objCollection52 = properties46.values();
        java.util.Properties properties54 = new java.util.Properties();
        java.lang.Object obj56 = properties54.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration57 = properties54.elements();
        boolean boolean58 = properties54.isEmpty();
        java.util.Set<java.lang.Object> objSet59 = properties54.keySet();
        java.lang.Object obj60 = properties46.putIfAbsent((java.lang.Object) "hi!", (java.lang.Object) objSet59);
        java.util.Set<java.lang.Object> objSet61 = properties46.keySet();
        java.util.Set<java.lang.Object> objSet62 = properties46.keySet();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet63 = properties46.entrySet();
        java.util.Set<java.lang.Object> objSet64 = properties46.keySet();
        java.lang.Object obj65 = properties27.replace((java.lang.Object) atomikosProperties35, (java.lang.Object) properties46);
        java.util.Properties properties66 = atomikosProperties35.asProperties();
        boolean boolean67 = atomikosProperties35.isSerialJtaTransactions();
        java.lang.Object obj68 = properties0.putIfAbsent((java.lang.Object) atomikosProperties16, (java.lang.Object) boolean67);
        int int69 = properties0.size();
        java.io.Writer writer70 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties0.store(writer70, "{true=true}");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNull(obj7);
        org.junit.Assert.assertNotNull(objEnumeration8);
        org.junit.Assert.assertNull(obj11);
        org.junit.Assert.assertNotNull(objEnumeration12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(objEntrySet14);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNull(obj24);
        org.junit.Assert.assertTrue("'" + long25 + "' != '" + 10000L + "'", long25 == 10000L);
        org.junit.Assert.assertNull(str26);
        org.junit.Assert.assertNull(obj29);
        org.junit.Assert.assertNotNull(objEnumeration30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNull(obj34);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "hi!" + "'", str45, "hi!");
        org.junit.Assert.assertNull(obj49);
        org.junit.Assert.assertNotNull(strSet50);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertNotNull(objCollection52);
        org.junit.Assert.assertNull(obj56);
        org.junit.Assert.assertNotNull(objEnumeration57);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertNotNull(objSet59);
        org.junit.Assert.assertNull(obj60);
        org.junit.Assert.assertNotNull(objSet61);
        org.junit.Assert.assertNotNull(objSet62);
        org.junit.Assert.assertNotNull(objEntrySet63);
        org.junit.Assert.assertNotNull(objSet64);
        org.junit.Assert.assertNull(obj65);
        org.junit.Assert.assertNotNull(properties66);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertNull(obj68);
        org.junit.Assert.assertTrue("'" + int69 + "' != '" + 2 + "'", int69 == 2);
    }

    @Test
    public void test5046() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test5046");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        java.util.Collection<java.lang.Object> objCollection3 = properties0.values();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties4 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties4.setSerialJtaTransactions(false);
        atomikosProperties4.setThreadedTwoPhaseCommit(true);
        atomikosProperties4.setMaxTimeout((long) '#');
        atomikosProperties4.setLogBaseName("{=hi!}");
        boolean boolean13 = atomikosProperties4.isSerialJtaTransactions();
        java.util.Properties properties14 = atomikosProperties4.asProperties();
        java.util.Properties properties15 = new java.util.Properties();
        java.lang.Object obj17 = properties15.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration18 = properties15.elements();
        boolean boolean19 = properties15.isEmpty();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet20 = properties15.entrySet();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties22 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties22.setSerialJtaTransactions(false);
        atomikosProperties22.setThreadedTwoPhaseCommit(true);
        atomikosProperties22.setMaxTimeout((long) '#');
        boolean boolean29 = atomikosProperties22.isForceShutdownOnVmExit();
        java.lang.Object obj30 = properties15.put((java.lang.Object) (short) 1, (java.lang.Object) atomikosProperties22);
        atomikosProperties22.setForceShutdownOnVmExit(true);
        java.util.Properties properties33 = atomikosProperties22.asProperties();
        java.lang.String str34 = atomikosProperties22.getService();
        atomikosProperties22.setLogBaseName("{{}=tmlog}");
        atomikosProperties22.setCheckpointInterval(300000L);
        java.lang.Object obj39 = properties0.put((java.lang.Object) properties14, (java.lang.Object) atomikosProperties22);
        java.lang.String str41 = properties14.getProperty("");
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(objCollection3);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(properties14);
        org.junit.Assert.assertNull(obj17);
        org.junit.Assert.assertNotNull(objEnumeration18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(objEntrySet20);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNull(obj30);
        org.junit.Assert.assertNotNull(properties33);
        org.junit.Assert.assertNull(str34);
        org.junit.Assert.assertNull(obj39);
        org.junit.Assert.assertNull(str41);
    }

    @Test
    public void test5047() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test5047");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        boolean boolean4 = properties0.containsValue((java.lang.Object) "hi!");
        java.lang.Object obj7 = properties0.put((java.lang.Object) (byte) -1, (java.lang.Object) 100L);
        java.util.Properties properties8 = new java.util.Properties();
        java.util.Properties properties9 = new java.util.Properties();
        java.lang.Object obj11 = properties9.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet12 = properties9.stringPropertyNames();
        boolean boolean13 = properties8.containsValue((java.lang.Object) properties9);
        java.util.Collection<java.lang.Object> objCollection14 = properties8.values();
        java.util.Properties properties16 = new java.util.Properties();
        java.lang.Object obj18 = properties16.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration19 = properties16.elements();
        boolean boolean20 = properties16.isEmpty();
        java.util.Set<java.lang.Object> objSet21 = properties16.keySet();
        java.lang.Object obj22 = properties8.putIfAbsent((java.lang.Object) "hi!", (java.lang.Object) objSet21);
        java.util.Set<java.lang.Object> objSet23 = properties8.keySet();
        boolean boolean24 = properties0.containsKey((java.lang.Object) properties8);
        java.util.Collection<java.lang.Object> objCollection25 = properties8.values();
        java.util.Set<java.lang.Object> objSet26 = properties8.keySet();
        java.util.Enumeration<java.lang.Object> objEnumeration27 = properties8.elements();
        java.util.Enumeration<java.lang.Object> objEnumeration28 = properties8.elements();
        java.util.Enumeration<java.lang.Object> objEnumeration29 = properties8.elements();
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNull(obj7);
        org.junit.Assert.assertNull(obj11);
        org.junit.Assert.assertNotNull(strSet12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(objCollection14);
        org.junit.Assert.assertNull(obj18);
        org.junit.Assert.assertNotNull(objEnumeration19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNotNull(objSet21);
        org.junit.Assert.assertNull(obj22);
        org.junit.Assert.assertNotNull(objSet23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(objCollection25);
        org.junit.Assert.assertNotNull(objSet26);
        org.junit.Assert.assertNotNull(objEnumeration27);
        org.junit.Assert.assertNotNull(objEnumeration28);
        org.junit.Assert.assertNotNull(objEnumeration29);
    }

    @Test
    public void test5048() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test5048");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration3 = properties0.elements();
        int int4 = properties0.size();
        java.util.Properties properties5 = new java.util.Properties(properties0);
        java.util.Set<java.lang.String> strSet6 = properties0.stringPropertyNames();
        java.util.Set<java.lang.String> strSet7 = properties0.stringPropertyNames();
        java.util.Properties properties8 = new java.util.Properties();
        java.lang.Object obj10 = properties8.remove((java.lang.Object) 0.0d);
        boolean boolean11 = properties8.isEmpty();
        java.util.Enumeration<java.lang.Object> objEnumeration12 = properties8.elements();
        java.util.Properties properties13 = new java.util.Properties();
        java.lang.Object obj15 = properties13.remove((java.lang.Object) 0.0d);
        boolean boolean16 = properties13.isEmpty();
        java.util.Enumeration<java.lang.Object> objEnumeration17 = properties13.elements();
        java.util.Enumeration<java.lang.Object> objEnumeration18 = properties13.elements();
        java.lang.Object obj19 = properties0.replace((java.lang.Object) objEnumeration12, (java.lang.Object) objEnumeration18);
        java.util.Properties properties20 = new java.util.Properties();
        java.lang.Object obj22 = properties20.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration23 = properties20.elements();
        boolean boolean24 = properties20.isEmpty();
        java.util.Set<java.lang.Object> objSet25 = properties20.keySet();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties26 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties26.setSerialJtaTransactions(false);
        atomikosProperties26.setThreadedTwoPhaseCommit(true);
        atomikosProperties26.setThreadedTwoPhaseCommit(true);
        java.util.Properties properties33 = atomikosProperties26.asProperties();
        int int34 = atomikosProperties26.getMaxActives();
        java.util.Properties properties35 = new java.util.Properties();
        java.lang.Object obj37 = properties35.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration38 = properties35.elements();
        boolean boolean39 = properties35.isEmpty();
        java.util.Set<java.lang.Object> objSet40 = properties35.keySet();
        boolean boolean42 = properties35.containsKey((java.lang.Object) (-1.0f));
        java.lang.Object obj43 = properties20.put((java.lang.Object) atomikosProperties26, (java.lang.Object) properties35);
        java.util.Properties properties44 = new java.util.Properties();
        java.lang.Object obj46 = properties44.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet47 = properties44.stringPropertyNames();
        java.util.Properties properties48 = new java.util.Properties();
        java.lang.Object obj50 = properties48.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet51 = properties48.stringPropertyNames();
        java.lang.Object obj53 = properties44.put((java.lang.Object) strSet51, (java.lang.Object) 0.0d);
        java.util.Properties properties54 = new java.util.Properties();
        java.util.Properties properties55 = new java.util.Properties();
        java.lang.Object obj57 = properties55.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet58 = properties55.stringPropertyNames();
        boolean boolean59 = properties54.containsValue((java.lang.Object) properties55);
        java.util.Collection<java.lang.Object> objCollection60 = properties54.values();
        java.util.Properties properties62 = new java.util.Properties();
        java.lang.Object obj64 = properties62.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration65 = properties62.elements();
        boolean boolean66 = properties62.isEmpty();
        java.util.Set<java.lang.Object> objSet67 = properties62.keySet();
        java.lang.Object obj68 = properties54.putIfAbsent((java.lang.Object) "hi!", (java.lang.Object) objSet67);
        java.util.Set<java.lang.Object> objSet69 = properties54.keySet();
        java.lang.Object obj71 = properties44.putIfAbsent((java.lang.Object) properties54, (java.lang.Object) (short) 10);
        java.util.Enumeration<?> wildcardEnumeration72 = properties54.propertyNames();
        properties20.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties54);
        java.util.Collection<java.lang.Object> objCollection74 = properties20.values();
        boolean boolean75 = properties0.containsValue((java.lang.Object) objCollection74);
        java.util.Set<java.lang.String> strSet76 = properties0.stringPropertyNames();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties77 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties77.setSerialJtaTransactions(false);
        boolean boolean80 = atomikosProperties77.isSerialJtaTransactions();
        java.lang.String str81 = atomikosProperties77.getService();
        boolean boolean82 = atomikosProperties77.isEnableLogging();
        atomikosProperties77.setCheckpointInterval((long) (byte) 100);
        java.lang.String str85 = atomikosProperties77.getLogBaseName();
        atomikosProperties77.setTransactionManagerUniqueName("tmlog");
        atomikosProperties77.setSerialJtaTransactions(false);
        boolean boolean90 = atomikosProperties77.isForceShutdownOnVmExit();
        boolean boolean91 = properties0.containsKey((java.lang.Object) atomikosProperties77);
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(objEnumeration3);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNotNull(strSet6);
        org.junit.Assert.assertNotNull(strSet7);
        org.junit.Assert.assertNull(obj10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNotNull(objEnumeration12);
        org.junit.Assert.assertNull(obj15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(objEnumeration17);
        org.junit.Assert.assertNotNull(objEnumeration18);
        org.junit.Assert.assertNull(obj19);
        org.junit.Assert.assertNull(obj22);
        org.junit.Assert.assertNotNull(objEnumeration23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNotNull(objSet25);
        org.junit.Assert.assertNotNull(properties33);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 50 + "'", int34 == 50);
        org.junit.Assert.assertNull(obj37);
        org.junit.Assert.assertNotNull(objEnumeration38);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNotNull(objSet40);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNull(obj43);
        org.junit.Assert.assertNull(obj46);
        org.junit.Assert.assertNotNull(strSet47);
        org.junit.Assert.assertNull(obj50);
        org.junit.Assert.assertNotNull(strSet51);
        org.junit.Assert.assertNull(obj53);
        org.junit.Assert.assertNull(obj57);
        org.junit.Assert.assertNotNull(strSet58);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertNotNull(objCollection60);
        org.junit.Assert.assertNull(obj64);
        org.junit.Assert.assertNotNull(objEnumeration65);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66 == true);
        org.junit.Assert.assertNotNull(objSet67);
        org.junit.Assert.assertNull(obj68);
        org.junit.Assert.assertNotNull(objSet69);
        org.junit.Assert.assertNull(obj71);
        org.junit.Assert.assertNotNull(wildcardEnumeration72);
        org.junit.Assert.assertNotNull(objCollection74);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
        org.junit.Assert.assertNotNull(strSet76);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", boolean80 == false);
        org.junit.Assert.assertNull(str81);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + true + "'", boolean82 == true);
        org.junit.Assert.assertEquals("'" + str85 + "' != '" + "tmlog" + "'", str85, "tmlog");
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + false + "'", boolean90 == false);
        org.junit.Assert.assertTrue("'" + boolean91 + "' != '" + false + "'", boolean91 == false);
    }

    @Test
    public void test5049() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test5049");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        boolean boolean3 = properties0.isEmpty();
        java.lang.Object obj6 = properties0.setProperty("", "hi!");
        java.util.Properties properties7 = new java.util.Properties();
        java.lang.Object obj9 = properties7.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration10 = properties7.elements();
        boolean boolean11 = properties7.isEmpty();
        java.util.Set<java.lang.Object> objSet12 = properties7.keySet();
        boolean boolean13 = properties7.isEmpty();
        java.util.Properties properties14 = new java.util.Properties();
        java.util.Collection<java.lang.Object> objCollection15 = properties14.values();
        java.util.Enumeration<java.lang.Object> objEnumeration16 = properties14.keys();
        java.lang.Object obj17 = properties7.remove((java.lang.Object) properties14);
        java.lang.Object obj18 = properties0.get((java.lang.Object) properties14);
        java.util.Enumeration<java.lang.Object> objEnumeration19 = properties14.keys();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties20 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties20.setSerialJtaTransactions(false);
        atomikosProperties20.setThreadedTwoPhaseCommit(true);
        atomikosProperties20.setMaxTimeout((long) '#');
        boolean boolean27 = atomikosProperties20.isForceShutdownOnVmExit();
        long long28 = atomikosProperties20.getCheckpointInterval();
        java.lang.Object obj29 = new java.lang.Object();
        boolean boolean31 = properties14.replace((java.lang.Object) long28, obj29, (java.lang.Object) "hi!");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties32 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties32.setSerialJtaTransactions(false);
        boolean boolean35 = atomikosProperties32.isSerialJtaTransactions();
        atomikosProperties32.setTransactionManagerUniqueName("hi!");
        java.lang.String str38 = atomikosProperties32.getLogBaseName();
        java.lang.String str39 = atomikosProperties32.getLogBaseName();
        boolean boolean40 = atomikosProperties32.isSerialJtaTransactions();
        java.util.Properties properties41 = new java.util.Properties();
        java.util.Properties properties42 = new java.util.Properties();
        java.lang.Object obj44 = properties42.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet45 = properties42.stringPropertyNames();
        boolean boolean46 = properties41.containsValue((java.lang.Object) properties42);
        java.util.Properties properties47 = new java.util.Properties();
        java.lang.Object obj49 = properties47.remove((java.lang.Object) 0.0d);
        boolean boolean51 = properties47.containsValue((java.lang.Object) "hi!");
        boolean boolean52 = properties42.contains((java.lang.Object) "hi!");
        boolean boolean53 = properties14.remove((java.lang.Object) atomikosProperties32, (java.lang.Object) boolean52);
        atomikosProperties32.setMaxActives((int) (short) 0);
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNull(obj6);
        org.junit.Assert.assertNull(obj9);
        org.junit.Assert.assertNotNull(objEnumeration10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNotNull(objSet12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(objCollection15);
        org.junit.Assert.assertNotNull(objEnumeration16);
        org.junit.Assert.assertNull(obj17);
        org.junit.Assert.assertNull(obj18);
        org.junit.Assert.assertNotNull(objEnumeration19);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertTrue("'" + long28 + "' != '" + 500L + "'", long28 == 500L);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "tmlog" + "'", str38, "tmlog");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "tmlog" + "'", str39, "tmlog");
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNull(obj44);
        org.junit.Assert.assertNotNull(strSet45);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNull(obj49);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
    }

    @Test
    public void test5050() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test5050");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setSerialJtaTransactions(false);
        boolean boolean3 = atomikosProperties0.isSerialJtaTransactions();
        java.util.Properties properties4 = atomikosProperties0.asProperties();
        java.lang.Object obj7 = properties4.setProperty("hi!", "");
        java.util.Properties properties8 = new java.util.Properties(properties4);
        java.util.Properties properties9 = new java.util.Properties();
        java.lang.Object obj11 = properties9.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration12 = properties9.elements();
        boolean boolean13 = properties9.isEmpty();
        java.util.Set<java.lang.Object> objSet14 = properties9.keySet();
        java.util.Enumeration<java.lang.Object> objEnumeration15 = properties9.keys();
        java.lang.String str17 = properties9.getProperty("hi!");
        java.lang.String str19 = properties9.getProperty("");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties20 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties20.setSerialJtaTransactions(false);
        atomikosProperties20.setThreadedTwoPhaseCommit(true);
        atomikosProperties20.setEnableLogging(false);
        boolean boolean27 = properties9.containsKey((java.lang.Object) atomikosProperties20);
        atomikosProperties20.setTransactionManagerUniqueName("tmlog");
        java.util.Properties properties30 = new java.util.Properties();
        java.lang.Object obj32 = properties30.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration33 = properties30.elements();
        boolean boolean34 = properties30.isEmpty();
        java.util.Set<java.lang.Object> objSet35 = properties30.keySet();
        boolean boolean37 = properties30.containsKey((java.lang.Object) (-1.0f));
        java.util.Collection<java.lang.Object> objCollection38 = properties30.values();
        java.lang.Object obj39 = properties30.clone();
        java.util.Collection<java.lang.Object> objCollection40 = properties30.values();
        boolean boolean41 = properties4.remove((java.lang.Object) atomikosProperties20, (java.lang.Object) objCollection40);
        atomikosProperties20.setMaxActives(0);
        int int44 = atomikosProperties20.getMaxActives();
        java.util.Properties properties45 = atomikosProperties20.asProperties();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(properties4);
        org.junit.Assert.assertNull(obj7);
        org.junit.Assert.assertNull(obj11);
        org.junit.Assert.assertNotNull(objEnumeration12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(objSet14);
        org.junit.Assert.assertNotNull(objEnumeration15);
        org.junit.Assert.assertNull(str17);
        org.junit.Assert.assertNull(str19);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNull(obj32);
        org.junit.Assert.assertNotNull(objEnumeration33);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertNotNull(objSet35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(objCollection38);
        org.junit.Assert.assertNotNull(obj39);
        org.junit.Assert.assertEquals(obj39.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj39), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj39), "{}");
        org.junit.Assert.assertNotNull(objCollection40);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 0 + "'", int44 == 0);
        org.junit.Assert.assertNotNull(properties45);
    }

    @Test
    public void test5051() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test5051");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration3 = properties0.elements();
        boolean boolean4 = properties0.isEmpty();
        java.util.Set<java.lang.Object> objSet5 = properties0.keySet();
        boolean boolean6 = properties0.isEmpty();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties7 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties7.setSerialJtaTransactions(false);
        atomikosProperties7.setThreadedTwoPhaseCommit(true);
        atomikosProperties7.setMaxTimeout((long) '#');
        boolean boolean14 = atomikosProperties7.isEnableLogging();
        atomikosProperties7.setCheckpointInterval((long) (byte) -1);
        java.util.Properties properties17 = new java.util.Properties();
        java.util.Properties properties18 = new java.util.Properties();
        java.lang.Object obj20 = properties18.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet21 = properties18.stringPropertyNames();
        boolean boolean22 = properties17.containsValue((java.lang.Object) properties18);
        java.util.Collection<java.lang.Object> objCollection23 = properties17.values();
        java.lang.Object obj24 = properties0.replace((java.lang.Object) atomikosProperties7, (java.lang.Object) objCollection23);
        atomikosProperties7.setLogBaseName("tmlog");
        long long27 = atomikosProperties7.getDefaultJtaTimeout();
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(objEnumeration3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(objSet5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNull(obj20);
        org.junit.Assert.assertNotNull(strSet21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(objCollection23);
        org.junit.Assert.assertNull(obj24);
        org.junit.Assert.assertTrue("'" + long27 + "' != '" + 10000L + "'", long27 == 10000L);
    }

    @Test
    public void test5052() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test5052");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        boolean boolean3 = properties0.isEmpty();
        java.util.Set<java.lang.String> strSet4 = properties0.stringPropertyNames();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties5 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties5.setSerialJtaTransactions(false);
        boolean boolean8 = atomikosProperties5.isSerialJtaTransactions();
        java.lang.String str9 = atomikosProperties5.getService();
        atomikosProperties5.setEnableLogging(false);
        java.util.Properties properties12 = atomikosProperties5.asProperties();
        atomikosProperties5.setCheckpointInterval((long) 1);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties15 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties15.setSerialJtaTransactions(false);
        boolean boolean18 = atomikosProperties15.isSerialJtaTransactions();
        java.lang.String str19 = atomikosProperties15.getService();
        boolean boolean20 = atomikosProperties15.isEnableLogging();
        atomikosProperties15.setCheckpointInterval((long) (byte) 100);
        java.lang.Class<?> wildcardClass23 = atomikosProperties15.getClass();
        java.lang.Object obj24 = properties0.getOrDefault((java.lang.Object) atomikosProperties5, (java.lang.Object) wildcardClass23);
        boolean boolean25 = atomikosProperties5.isThreadedTwoPhaseCommit();
        atomikosProperties5.setSerialJtaTransactions(true);
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(strSet4);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertNotNull(properties12);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNull(str19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertNotNull(obj24);
        org.junit.Assert.assertEquals(obj24.toString(), "class org.springframework.boot.jta.atomikos.AtomikosProperties");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj24), "class org.springframework.boot.jta.atomikos.AtomikosProperties");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj24), "class org.springframework.boot.jta.atomikos.AtomikosProperties");
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
    }

    @Test
    public void test5053() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test5053");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setSerialJtaTransactions(false);
        boolean boolean3 = atomikosProperties0.isSerialJtaTransactions();
        java.lang.String str4 = atomikosProperties0.getService();
        boolean boolean5 = atomikosProperties0.isEnableLogging();
        java.util.Properties properties6 = atomikosProperties0.asProperties();
        atomikosProperties0.setForceShutdownOnVmExit(true);
        atomikosProperties0.setMaxActives((int) (short) -1);
        atomikosProperties0.setMaxTimeout((long) ' ');
        atomikosProperties0.setEnableLogging(false);
        atomikosProperties0.setService("{{}={}}");
        atomikosProperties0.setLogBaseName("{{}={}}");
        atomikosProperties0.setLogBaseDir("{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=false, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=true, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
        long long21 = atomikosProperties0.getDefaultJtaTimeout();
        java.lang.String str22 = atomikosProperties0.getLogBaseName();
        atomikosProperties0.setSerialJtaTransactions(false);
        java.lang.String str25 = atomikosProperties0.getLogBaseDir();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNotNull(properties6);
        org.junit.Assert.assertTrue("'" + long21 + "' != '" + 10000L + "'", long21 == 10000L);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "{{}={}}" + "'", str22, "{{}={}}");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=false, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=true, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}" + "'", str25, "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=false, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=true, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
    }

    @Test
    public void test5054() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test5054");
        java.util.Properties properties0 = new java.util.Properties();
        boolean boolean2 = properties0.contains((java.lang.Object) 100.0d);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties3 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties3.setSerialJtaTransactions(false);
        atomikosProperties3.setThreadedTwoPhaseCommit(true);
        atomikosProperties3.setSerialJtaTransactions(false);
        java.lang.String str10 = atomikosProperties3.getService();
        boolean boolean11 = properties0.containsKey((java.lang.Object) atomikosProperties3);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties12 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties12.setSerialJtaTransactions(false);
        atomikosProperties12.setThreadedTwoPhaseCommit(true);
        atomikosProperties12.setMaxTimeout((long) '#');
        boolean boolean19 = atomikosProperties12.isEnableLogging();
        atomikosProperties12.setCheckpointInterval((long) 100);
        atomikosProperties12.setForceShutdownOnVmExit(false);
        boolean boolean24 = properties0.containsValue((java.lang.Object) atomikosProperties12);
        atomikosProperties12.setService("{=hi!}");
        atomikosProperties12.setDefaultJtaTimeout(0L);
        atomikosProperties12.setLogBaseName("");
        atomikosProperties12.setMaxActives(50);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
    }

    @Test
    public void test5055() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test5055");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setSerialJtaTransactions(false);
        atomikosProperties0.setThreadedTwoPhaseCommit(true);
        atomikosProperties0.setEnableLogging(false);
        boolean boolean7 = atomikosProperties0.isSerialJtaTransactions();
        int int8 = atomikosProperties0.getMaxActives();
        boolean boolean9 = atomikosProperties0.isSerialJtaTransactions();
        java.lang.String str10 = atomikosProperties0.getService();
        atomikosProperties0.setLogBaseDir("{}");
        atomikosProperties0.setLogBaseName("{=hi!}");
        long long15 = atomikosProperties0.getDefaultJtaTimeout();
        boolean boolean16 = atomikosProperties0.isSerialJtaTransactions();
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 50 + "'", int8 == 50);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertTrue("'" + long15 + "' != '" + 10000L + "'", long15 == 10000L);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
    }

    @Test
    public void test5056() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test5056");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration3 = properties0.elements();
        boolean boolean4 = properties0.isEmpty();
        java.util.Set<java.lang.Object> objSet5 = properties0.keySet();
        java.util.Enumeration<java.lang.Object> objEnumeration6 = properties0.keys();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet7 = properties0.entrySet();
        java.util.Properties properties8 = new java.util.Properties();
        java.lang.Object obj10 = properties8.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration11 = properties8.elements();
        boolean boolean12 = properties8.isEmpty();
        java.util.Set<java.lang.Object> objSet13 = properties8.keySet();
        java.util.Enumeration<java.lang.Object> objEnumeration14 = properties8.keys();
        java.lang.String str16 = properties8.getProperty("hi!");
        java.lang.String str18 = properties8.getProperty("");
        java.lang.Object obj20 = properties0.putIfAbsent((java.lang.Object) "", (java.lang.Object) 100.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration21 = properties0.elements();
        java.io.InputStream inputStream22 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties0.loadFromXML(inputStream22);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(objEnumeration3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(objSet5);
        org.junit.Assert.assertNotNull(objEnumeration6);
        org.junit.Assert.assertNotNull(objEntrySet7);
        org.junit.Assert.assertNull(obj10);
        org.junit.Assert.assertNotNull(objEnumeration11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(objSet13);
        org.junit.Assert.assertNotNull(objEnumeration14);
        org.junit.Assert.assertNull(str16);
        org.junit.Assert.assertNull(str18);
        org.junit.Assert.assertNull(obj20);
        org.junit.Assert.assertNotNull(objEnumeration21);
    }

    @Test
    public void test5057() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test5057");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration3 = properties0.elements();
        java.util.Properties properties5 = new java.util.Properties();
        java.lang.Object obj7 = properties5.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration8 = properties5.elements();
        boolean boolean9 = properties5.isEmpty();
        java.util.Set<java.lang.Object> objSet10 = properties5.keySet();
        boolean boolean11 = properties5.isEmpty();
        java.lang.Object obj12 = properties0.getOrDefault((java.lang.Object) true, (java.lang.Object) boolean11);
        java.lang.Object obj13 = properties0.clone();
        int int14 = properties0.size();
        java.util.Set<java.lang.String> strSet15 = properties0.stringPropertyNames();
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(objEnumeration3);
        org.junit.Assert.assertNull(obj7);
        org.junit.Assert.assertNotNull(objEnumeration8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertNotNull(objSet10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertEquals("'" + obj12 + "' != '" + true + "'", obj12, true);
        org.junit.Assert.assertNotNull(obj13);
        org.junit.Assert.assertEquals(obj13.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj13), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj13), "{}");
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertNotNull(strSet15);
    }

    @Test
    public void test5058() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test5058");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setSerialJtaTransactions(false);
        atomikosProperties0.setThreadedTwoPhaseCommit(true);
        atomikosProperties0.setThreadedTwoPhaseCommit(true);
        java.util.Properties properties7 = atomikosProperties0.asProperties();
        java.util.Set<java.lang.String> strSet8 = properties7.stringPropertyNames();
        java.util.Properties properties9 = new java.util.Properties();
        java.lang.Object obj11 = properties9.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration12 = properties9.elements();
        boolean boolean13 = properties9.isEmpty();
        java.util.Set<java.lang.Object> objSet14 = properties9.keySet();
        java.util.Enumeration<java.lang.Object> objEnumeration15 = properties9.keys();
        java.lang.String str17 = properties9.getProperty("hi!");
        java.util.Enumeration<?> wildcardEnumeration18 = properties9.propertyNames();
        java.util.Properties properties19 = new java.util.Properties();
        java.lang.Object obj21 = properties19.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration22 = properties19.elements();
        boolean boolean23 = properties19.isEmpty();
        java.util.Enumeration<java.lang.Object> objEnumeration24 = properties19.elements();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet25 = properties19.entrySet();
        java.util.Set<java.lang.String> strSet26 = properties19.stringPropertyNames();
        boolean boolean27 = properties19.isEmpty();
        properties9.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties19);
        boolean boolean29 = properties7.containsKey((java.lang.Object) properties9);
        java.util.Properties properties30 = new java.util.Properties();
        java.lang.Object obj32 = properties30.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration33 = properties30.elements();
        java.util.Properties properties35 = new java.util.Properties();
        java.lang.Object obj37 = properties35.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration38 = properties35.elements();
        boolean boolean39 = properties35.isEmpty();
        java.util.Set<java.lang.Object> objSet40 = properties35.keySet();
        boolean boolean41 = properties35.isEmpty();
        java.lang.Object obj42 = properties30.getOrDefault((java.lang.Object) true, (java.lang.Object) boolean41);
        java.util.Properties properties43 = new java.util.Properties();
        java.lang.Object obj45 = properties43.remove((java.lang.Object) 0.0d);
        boolean boolean46 = properties43.isEmpty();
        java.util.Enumeration<java.lang.Object> objEnumeration47 = properties43.keys();
        java.util.Properties properties48 = new java.util.Properties();
        java.lang.Object obj50 = properties48.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet51 = properties48.stringPropertyNames();
        java.util.Properties properties52 = new java.util.Properties();
        java.util.Properties properties53 = new java.util.Properties();
        java.lang.Object obj55 = properties53.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet56 = properties53.stringPropertyNames();
        boolean boolean57 = properties52.containsValue((java.lang.Object) properties53);
        java.util.Collection<java.lang.Object> objCollection58 = properties52.values();
        java.util.Enumeration<?> wildcardEnumeration59 = properties52.propertyNames();
        java.lang.Object obj61 = properties48.put((java.lang.Object) wildcardEnumeration59, (java.lang.Object) 10.0d);
        java.util.Properties properties62 = new java.util.Properties();
        java.util.Properties properties63 = new java.util.Properties();
        java.lang.Object obj65 = properties63.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet66 = properties63.stringPropertyNames();
        boolean boolean67 = properties62.containsValue((java.lang.Object) properties63);
        java.util.Collection<java.lang.Object> objCollection68 = properties62.values();
        java.lang.Object obj69 = properties62.clone();
        boolean boolean70 = properties30.replace((java.lang.Object) properties43, (java.lang.Object) 10.0d, obj69);
        boolean boolean71 = properties7.containsValue((java.lang.Object) 10.0d);
        properties7.clear();
        org.junit.Assert.assertNotNull(properties7);
        org.junit.Assert.assertNotNull(strSet8);
        org.junit.Assert.assertNull(obj11);
        org.junit.Assert.assertNotNull(objEnumeration12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(objSet14);
        org.junit.Assert.assertNotNull(objEnumeration15);
        org.junit.Assert.assertNull(str17);
        org.junit.Assert.assertNotNull(wildcardEnumeration18);
        org.junit.Assert.assertNull(obj21);
        org.junit.Assert.assertNotNull(objEnumeration22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNotNull(objEnumeration24);
        org.junit.Assert.assertNotNull(objEntrySet25);
        org.junit.Assert.assertNotNull(strSet26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNull(obj32);
        org.junit.Assert.assertNotNull(objEnumeration33);
        org.junit.Assert.assertNull(obj37);
        org.junit.Assert.assertNotNull(objEnumeration38);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNotNull(objSet40);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertEquals("'" + obj42 + "' != '" + true + "'", obj42, true);
        org.junit.Assert.assertNull(obj45);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertNotNull(objEnumeration47);
        org.junit.Assert.assertNull(obj50);
        org.junit.Assert.assertNotNull(strSet51);
        org.junit.Assert.assertNull(obj55);
        org.junit.Assert.assertNotNull(strSet56);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertNotNull(objCollection58);
        org.junit.Assert.assertNotNull(wildcardEnumeration59);
        org.junit.Assert.assertNull(obj61);
        org.junit.Assert.assertNull(obj65);
        org.junit.Assert.assertNotNull(strSet66);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertNotNull(objCollection68);
        org.junit.Assert.assertNotNull(obj69);
        org.junit.Assert.assertEquals(obj69.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj69), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj69), "{}");
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
    }

    @Test
    public void test5059() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test5059");
        java.util.Properties properties0 = new java.util.Properties();
        boolean boolean2 = properties0.contains((java.lang.Object) 100.0d);
        java.util.Properties properties3 = new java.util.Properties();
        java.lang.Object obj5 = properties3.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration6 = properties3.elements();
        boolean boolean7 = properties3.isEmpty();
        java.util.Set<java.lang.Object> objSet8 = properties3.keySet();
        boolean boolean9 = properties3.isEmpty();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet10 = properties3.entrySet();
        java.util.Properties properties11 = new java.util.Properties();
        java.lang.Object obj13 = properties11.remove((java.lang.Object) 0.0d);
        boolean boolean14 = properties11.isEmpty();
        java.lang.Object obj17 = properties11.setProperty("", "hi!");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties18 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties18.setSerialJtaTransactions(false);
        boolean boolean21 = properties3.remove((java.lang.Object) properties11, (java.lang.Object) atomikosProperties18);
        boolean boolean22 = properties0.equals((java.lang.Object) properties3);
        java.util.Enumeration<java.lang.Object> objEnumeration23 = properties0.elements();
        java.lang.String str24 = properties0.toString();
        boolean boolean25 = properties0.isEmpty();
        java.io.PrintStream printStream26 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties0.list(printStream26);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNull(obj5);
        org.junit.Assert.assertNotNull(objEnumeration6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(objSet8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertNotNull(objEntrySet10);
        org.junit.Assert.assertNull(obj13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNull(obj17);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNotNull(objEnumeration23);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "{}" + "'", str24, "{}");
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
    }

    @Test
    public void test5060() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test5060");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration3 = properties0.elements();
        int int4 = properties0.size();
        java.util.Properties properties5 = new java.util.Properties();
        java.lang.Object obj7 = properties5.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration8 = properties5.elements();
        boolean boolean9 = properties5.isEmpty();
        java.util.Set<java.lang.Object> objSet10 = properties5.keySet();
        boolean boolean11 = properties0.containsKey((java.lang.Object) objSet10);
        java.util.Enumeration<java.lang.Object> objEnumeration12 = properties0.keys();
        java.util.Properties properties13 = new java.util.Properties();
        java.lang.Object obj15 = properties13.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration16 = properties13.elements();
        boolean boolean17 = properties13.isEmpty();
        java.util.Set<java.lang.Object> objSet18 = properties13.keySet();
        java.util.Enumeration<java.lang.Object> objEnumeration19 = properties13.keys();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet20 = properties13.entrySet();
        boolean boolean22 = properties0.remove((java.lang.Object) properties13, (java.lang.Object) 1.0f);
        java.lang.Object obj23 = properties13.clone();
        java.util.Collection<java.lang.Object> objCollection24 = properties13.values();
        java.util.Collection<java.lang.Object> objCollection25 = properties13.values();
        java.util.Properties properties26 = new java.util.Properties();
        java.lang.Object obj28 = properties26.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration29 = properties26.elements();
        boolean boolean30 = properties26.isEmpty();
        java.util.Set<java.lang.Object> objSet31 = properties26.keySet();
        java.util.Enumeration<java.lang.Object> objEnumeration32 = properties26.keys();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet33 = properties26.entrySet();
        java.util.Properties properties34 = new java.util.Properties(properties26);
        java.lang.Object obj35 = properties13.get((java.lang.Object) properties26);
        java.io.InputStream inputStream36 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties13.loadFromXML(inputStream36);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(objEnumeration3);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNull(obj7);
        org.junit.Assert.assertNotNull(objEnumeration8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertNotNull(objSet10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(objEnumeration12);
        org.junit.Assert.assertNull(obj15);
        org.junit.Assert.assertNotNull(objEnumeration16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(objSet18);
        org.junit.Assert.assertNotNull(objEnumeration19);
        org.junit.Assert.assertNotNull(objEntrySet20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(obj23);
        org.junit.Assert.assertEquals(obj23.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj23), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj23), "{}");
        org.junit.Assert.assertNotNull(objCollection24);
        org.junit.Assert.assertNotNull(objCollection25);
        org.junit.Assert.assertNull(obj28);
        org.junit.Assert.assertNotNull(objEnumeration29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNotNull(objSet31);
        org.junit.Assert.assertNotNull(objEnumeration32);
        org.junit.Assert.assertNotNull(objEntrySet33);
        org.junit.Assert.assertNull(obj35);
    }

    @Test
    public void test5061() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test5061");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration3 = properties0.elements();
        boolean boolean4 = properties0.isEmpty();
        java.util.Set<java.lang.Object> objSet5 = properties0.keySet();
        boolean boolean6 = properties0.isEmpty();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet7 = properties0.entrySet();
        java.util.Properties properties8 = new java.util.Properties();
        java.lang.Object obj10 = properties8.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration11 = properties8.elements();
        boolean boolean12 = properties8.isEmpty();
        java.util.Set<java.lang.Object> objSet13 = properties8.keySet();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties14 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties14.setSerialJtaTransactions(false);
        atomikosProperties14.setThreadedTwoPhaseCommit(true);
        atomikosProperties14.setThreadedTwoPhaseCommit(true);
        java.util.Properties properties21 = atomikosProperties14.asProperties();
        int int22 = atomikosProperties14.getMaxActives();
        java.util.Properties properties23 = new java.util.Properties();
        java.lang.Object obj25 = properties23.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration26 = properties23.elements();
        boolean boolean27 = properties23.isEmpty();
        java.util.Set<java.lang.Object> objSet28 = properties23.keySet();
        boolean boolean30 = properties23.containsKey((java.lang.Object) (-1.0f));
        java.lang.Object obj31 = properties8.put((java.lang.Object) atomikosProperties14, (java.lang.Object) properties23);
        java.lang.String str32 = properties8.toString();
        boolean boolean34 = properties0.remove((java.lang.Object) str32, (java.lang.Object) 1.0d);
        java.util.Properties properties35 = new java.util.Properties(properties0);
        java.util.Properties properties36 = new java.util.Properties();
        java.lang.Object obj38 = properties36.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet39 = properties36.stringPropertyNames();
        java.util.Properties properties40 = new java.util.Properties();
        java.util.Properties properties41 = new java.util.Properties();
        java.lang.Object obj43 = properties41.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet44 = properties41.stringPropertyNames();
        boolean boolean45 = properties40.containsValue((java.lang.Object) properties41);
        java.util.Collection<java.lang.Object> objCollection46 = properties40.values();
        java.util.Enumeration<?> wildcardEnumeration47 = properties40.propertyNames();
        java.lang.Object obj49 = properties36.put((java.lang.Object) wildcardEnumeration47, (java.lang.Object) 10.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration50 = properties36.elements();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties51 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties51.setSerialJtaTransactions(false);
        boolean boolean54 = atomikosProperties51.isSerialJtaTransactions();
        java.lang.String str55 = atomikosProperties51.getService();
        boolean boolean56 = atomikosProperties51.isEnableLogging();
        java.lang.String str57 = atomikosProperties51.getTransactionManagerUniqueName();
        java.util.Properties properties58 = new java.util.Properties();
        java.lang.Object obj60 = properties58.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration61 = properties58.elements();
        int int62 = properties58.size();
        java.util.Properties properties63 = new java.util.Properties();
        java.lang.Object obj65 = properties63.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration66 = properties63.elements();
        boolean boolean67 = properties63.isEmpty();
        java.util.Set<java.lang.Object> objSet68 = properties63.keySet();
        boolean boolean69 = properties58.containsKey((java.lang.Object) objSet68);
        java.util.Enumeration<java.lang.Object> objEnumeration70 = properties58.keys();
        java.util.Properties properties71 = new java.util.Properties();
        java.lang.Object obj73 = properties71.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration74 = properties71.elements();
        boolean boolean75 = properties71.isEmpty();
        java.util.Set<java.lang.Object> objSet76 = properties71.keySet();
        java.util.Enumeration<java.lang.Object> objEnumeration77 = properties71.keys();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet78 = properties71.entrySet();
        boolean boolean80 = properties58.remove((java.lang.Object) properties71, (java.lang.Object) 1.0f);
        boolean boolean81 = properties71.isEmpty();
        java.lang.Object obj82 = properties36.put((java.lang.Object) atomikosProperties51, (java.lang.Object) properties71);
        properties0.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties36);
        boolean boolean84 = properties36.isEmpty();
        java.io.OutputStream outputStream85 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties36.save(outputStream85, "{tmlog=}");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(objEnumeration3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(objSet5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(objEntrySet7);
        org.junit.Assert.assertNull(obj10);
        org.junit.Assert.assertNotNull(objEnumeration11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(objSet13);
        org.junit.Assert.assertNotNull(properties21);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 50 + "'", int22 == 50);
        org.junit.Assert.assertNull(obj25);
        org.junit.Assert.assertNotNull(objEnumeration26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNotNull(objSet28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNull(obj31);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNull(obj38);
        org.junit.Assert.assertNotNull(strSet39);
        org.junit.Assert.assertNull(obj43);
        org.junit.Assert.assertNotNull(strSet44);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNotNull(objCollection46);
        org.junit.Assert.assertNotNull(wildcardEnumeration47);
        org.junit.Assert.assertNull(obj49);
        org.junit.Assert.assertNotNull(objEnumeration50);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertNull(str55);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertNull(str57);
        org.junit.Assert.assertNull(obj60);
        org.junit.Assert.assertNotNull(objEnumeration61);
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + 0 + "'", int62 == 0);
        org.junit.Assert.assertNull(obj65);
        org.junit.Assert.assertNotNull(objEnumeration66);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + true + "'", boolean67 == true);
        org.junit.Assert.assertNotNull(objSet68);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertNotNull(objEnumeration70);
        org.junit.Assert.assertNull(obj73);
        org.junit.Assert.assertNotNull(objEnumeration74);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + true + "'", boolean75 == true);
        org.junit.Assert.assertNotNull(objSet76);
        org.junit.Assert.assertNotNull(objEnumeration77);
        org.junit.Assert.assertNotNull(objEntrySet78);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", boolean80 == false);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + true + "'", boolean81 == true);
        org.junit.Assert.assertNull(obj82);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + false + "'", boolean84 == false);
    }

    @Test
    public void test5062() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test5062");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setSerialJtaTransactions(false);
        boolean boolean3 = atomikosProperties0.isSerialJtaTransactions();
        java.lang.String str4 = atomikosProperties0.getService();
        java.lang.String str5 = atomikosProperties0.getLogBaseName();
        boolean boolean6 = atomikosProperties0.isEnableLogging();
        atomikosProperties0.setSerialJtaTransactions(false);
        long long9 = atomikosProperties0.getMaxTimeout();
        long long10 = atomikosProperties0.getDefaultJtaTimeout();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "tmlog" + "'", str5, "tmlog");
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue("'" + long9 + "' != '" + 300000L + "'", long9 == 300000L);
        org.junit.Assert.assertTrue("'" + long10 + "' != '" + 10000L + "'", long10 == 10000L);
    }

    @Test
    public void test5063() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test5063");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setSerialJtaTransactions(false);
        boolean boolean3 = atomikosProperties0.isSerialJtaTransactions();
        java.lang.String str4 = atomikosProperties0.getService();
        boolean boolean5 = atomikosProperties0.isEnableLogging();
        boolean boolean6 = atomikosProperties0.isSerialJtaTransactions();
        java.lang.String str7 = atomikosProperties0.getLogBaseName();
        atomikosProperties0.setService("hi!");
        boolean boolean10 = atomikosProperties0.isForceShutdownOnVmExit();
        atomikosProperties0.setThreadedTwoPhaseCommit(false);
        long long13 = atomikosProperties0.getCheckpointInterval();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "tmlog" + "'", str7, "tmlog");
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + long13 + "' != '" + 500L + "'", long13 == 500L);
    }

    @Test
    public void test5064() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test5064");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration3 = properties0.elements();
        int int4 = properties0.size();
        java.util.Properties properties5 = new java.util.Properties(properties0);
        java.util.Set<java.lang.String> strSet6 = properties0.stringPropertyNames();
        java.util.Set<java.lang.String> strSet7 = properties0.stringPropertyNames();
        java.util.Properties properties8 = new java.util.Properties();
        java.lang.Object obj10 = properties8.remove((java.lang.Object) 0.0d);
        boolean boolean11 = properties8.isEmpty();
        java.util.Enumeration<java.lang.Object> objEnumeration12 = properties8.elements();
        java.util.Properties properties13 = new java.util.Properties();
        java.lang.Object obj15 = properties13.remove((java.lang.Object) 0.0d);
        boolean boolean16 = properties13.isEmpty();
        java.util.Enumeration<java.lang.Object> objEnumeration17 = properties13.elements();
        java.util.Enumeration<java.lang.Object> objEnumeration18 = properties13.elements();
        java.lang.Object obj19 = properties0.replace((java.lang.Object) objEnumeration12, (java.lang.Object) objEnumeration18);
        java.util.Enumeration<java.lang.Object> objEnumeration20 = properties0.keys();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties21 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties21.setSerialJtaTransactions(false);
        boolean boolean24 = atomikosProperties21.isSerialJtaTransactions();
        java.lang.String str25 = atomikosProperties21.getService();
        boolean boolean26 = atomikosProperties21.isEnableLogging();
        java.lang.String str27 = atomikosProperties21.getLogBaseName();
        boolean boolean28 = properties0.containsKey((java.lang.Object) atomikosProperties21);
        java.util.Enumeration<java.lang.Object> objEnumeration29 = properties0.elements();
        properties0.clear();
        java.io.PrintWriter printWriter31 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties0.list(printWriter31);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(objEnumeration3);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNotNull(strSet6);
        org.junit.Assert.assertNotNull(strSet7);
        org.junit.Assert.assertNull(obj10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNotNull(objEnumeration12);
        org.junit.Assert.assertNull(obj15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(objEnumeration17);
        org.junit.Assert.assertNotNull(objEnumeration18);
        org.junit.Assert.assertNull(obj19);
        org.junit.Assert.assertNotNull(objEnumeration20);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNull(str25);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "tmlog" + "'", str27, "tmlog");
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(objEnumeration29);
    }

    @Test
    public void test5065() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test5065");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setSerialJtaTransactions(false);
        atomikosProperties0.setThreadedTwoPhaseCommit(true);
        atomikosProperties0.setSerialJtaTransactions(false);
        java.lang.String str7 = atomikosProperties0.getService();
        atomikosProperties0.setMaxTimeout(1L);
        java.lang.String str10 = atomikosProperties0.getTransactionManagerUniqueName();
        atomikosProperties0.setTransactionManagerUniqueName("{=hi!}");
        java.lang.String str13 = atomikosProperties0.getLogBaseName();
        atomikosProperties0.setSerialJtaTransactions(true);
        atomikosProperties0.setMaxActives((int) (short) 1);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "tmlog" + "'", str13, "tmlog");
    }

    @Test
    public void test5066() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test5066");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration3 = properties0.elements();
        int int4 = properties0.size();
        java.util.Properties properties5 = new java.util.Properties();
        java.lang.Object obj7 = properties5.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration8 = properties5.elements();
        boolean boolean9 = properties5.isEmpty();
        java.util.Set<java.lang.Object> objSet10 = properties5.keySet();
        boolean boolean11 = properties0.containsKey((java.lang.Object) objSet10);
        java.util.Enumeration<java.lang.Object> objEnumeration12 = properties0.keys();
        java.util.Properties properties13 = new java.util.Properties();
        java.lang.Object obj15 = properties13.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration16 = properties13.elements();
        boolean boolean17 = properties13.isEmpty();
        java.util.Set<java.lang.Object> objSet18 = properties13.keySet();
        java.util.Enumeration<java.lang.Object> objEnumeration19 = properties13.keys();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet20 = properties13.entrySet();
        boolean boolean22 = properties0.remove((java.lang.Object) properties13, (java.lang.Object) 1.0f);
        java.lang.Object obj23 = properties13.clone();
        java.util.Collection<java.lang.Object> objCollection24 = properties13.values();
        java.util.Collection<java.lang.Object> objCollection25 = properties13.values();
        java.io.PrintStream printStream26 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties13.list(printStream26);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(objEnumeration3);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNull(obj7);
        org.junit.Assert.assertNotNull(objEnumeration8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertNotNull(objSet10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(objEnumeration12);
        org.junit.Assert.assertNull(obj15);
        org.junit.Assert.assertNotNull(objEnumeration16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(objSet18);
        org.junit.Assert.assertNotNull(objEnumeration19);
        org.junit.Assert.assertNotNull(objEntrySet20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(obj23);
        org.junit.Assert.assertEquals(obj23.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj23), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj23), "{}");
        org.junit.Assert.assertNotNull(objCollection24);
        org.junit.Assert.assertNotNull(objCollection25);
    }

    @Test
    public void test5067() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test5067");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration3 = properties0.elements();
        boolean boolean4 = properties0.isEmpty();
        java.util.Set<java.lang.Object> objSet5 = properties0.keySet();
        java.util.Enumeration<java.lang.Object> objEnumeration6 = properties0.keys();
        java.lang.String str8 = properties0.getProperty("hi!");
        java.util.Enumeration<?> wildcardEnumeration9 = properties0.propertyNames();
        java.util.Properties properties10 = new java.util.Properties();
        java.lang.Object obj12 = properties10.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration13 = properties10.elements();
        boolean boolean14 = properties10.isEmpty();
        java.util.Enumeration<java.lang.Object> objEnumeration15 = properties10.elements();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet16 = properties10.entrySet();
        java.util.Set<java.lang.String> strSet17 = properties10.stringPropertyNames();
        boolean boolean18 = properties10.isEmpty();
        properties0.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties10);
        java.util.Set<java.lang.String> strSet20 = properties10.stringPropertyNames();
        java.util.Enumeration<java.lang.Object> objEnumeration21 = properties10.elements();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties22 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties22.setSerialJtaTransactions(false);
        atomikosProperties22.setThreadedTwoPhaseCommit(true);
        atomikosProperties22.setMaxTimeout((long) '#');
        long long29 = atomikosProperties22.getCheckpointInterval();
        atomikosProperties22.setMaxTimeout((long) (byte) 100);
        atomikosProperties22.setThreadedTwoPhaseCommit(false);
        atomikosProperties22.setMaxTimeout((long) '4');
        atomikosProperties22.setEnableLogging(true);
        atomikosProperties22.setLogBaseDir("");
        boolean boolean40 = atomikosProperties22.isForceShutdownOnVmExit();
        boolean boolean41 = properties10.containsValue((java.lang.Object) boolean40);
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(objEnumeration3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(objSet5);
        org.junit.Assert.assertNotNull(objEnumeration6);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNotNull(wildcardEnumeration9);
        org.junit.Assert.assertNull(obj12);
        org.junit.Assert.assertNotNull(objEnumeration13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(objEnumeration15);
        org.junit.Assert.assertNotNull(objEntrySet16);
        org.junit.Assert.assertNotNull(strSet17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(strSet20);
        org.junit.Assert.assertNotNull(objEnumeration21);
        org.junit.Assert.assertTrue("'" + long29 + "' != '" + 500L + "'", long29 == 500L);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
    }

    @Test
    public void test5068() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test5068");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration3 = properties0.elements();
        boolean boolean4 = properties0.isEmpty();
        java.util.Set<java.lang.Object> objSet5 = properties0.keySet();
        boolean boolean6 = properties0.isEmpty();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet7 = properties0.entrySet();
        java.util.Properties properties8 = new java.util.Properties();
        java.lang.Object obj10 = properties8.remove((java.lang.Object) 0.0d);
        boolean boolean11 = properties8.isEmpty();
        java.lang.Object obj14 = properties8.setProperty("", "hi!");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties15 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties15.setSerialJtaTransactions(false);
        boolean boolean18 = properties0.remove((java.lang.Object) properties8, (java.lang.Object) atomikosProperties15);
        java.util.Properties properties19 = new java.util.Properties(properties8);
        int int20 = properties19.size();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties22 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties22.setSerialJtaTransactions(false);
        boolean boolean25 = atomikosProperties22.isSerialJtaTransactions();
        java.lang.String str26 = atomikosProperties22.getService();
        boolean boolean27 = atomikosProperties22.isEnableLogging();
        java.lang.String str28 = atomikosProperties22.getTransactionManagerUniqueName();
        boolean boolean29 = properties19.remove((java.lang.Object) (byte) 1, (java.lang.Object) atomikosProperties22);
        java.io.Reader reader30 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties19.load(reader30);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(objEnumeration3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(objSet5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(objEntrySet7);
        org.junit.Assert.assertNull(obj10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNull(obj14);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 0 + "'", int20 == 0);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNull(str26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNull(str28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
    }

    @Test
    public void test5069() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test5069");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration3 = properties0.elements();
        int int4 = properties0.size();
        java.util.Properties properties5 = new java.util.Properties(properties0);
        boolean boolean6 = properties5.isEmpty();
        java.util.Properties properties7 = new java.util.Properties();
        java.lang.Object obj9 = properties7.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration10 = properties7.elements();
        int int11 = properties7.size();
        java.util.Properties properties12 = new java.util.Properties();
        java.lang.Object obj14 = properties12.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration15 = properties12.elements();
        boolean boolean16 = properties12.isEmpty();
        java.util.Set<java.lang.Object> objSet17 = properties12.keySet();
        boolean boolean18 = properties7.containsKey((java.lang.Object) objSet17);
        java.util.Enumeration<java.lang.Object> objEnumeration19 = properties7.keys();
        java.util.Properties properties20 = new java.util.Properties();
        java.lang.Object obj22 = properties20.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration23 = properties20.elements();
        boolean boolean24 = properties20.isEmpty();
        java.util.Set<java.lang.Object> objSet25 = properties20.keySet();
        java.util.Enumeration<java.lang.Object> objEnumeration26 = properties20.keys();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet27 = properties20.entrySet();
        boolean boolean29 = properties7.remove((java.lang.Object) properties20, (java.lang.Object) 1.0f);
        boolean boolean30 = properties5.contains((java.lang.Object) properties20);
        java.util.Properties properties31 = new java.util.Properties(properties20);
        java.util.Properties properties32 = new java.util.Properties(properties31);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties33 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties33.setSerialJtaTransactions(false);
        atomikosProperties33.setThreadedTwoPhaseCommit(true);
        atomikosProperties33.setSerialJtaTransactions(false);
        java.lang.String str40 = atomikosProperties33.getService();
        java.util.Properties properties41 = atomikosProperties33.asProperties();
        boolean boolean42 = atomikosProperties33.isThreadedTwoPhaseCommit();
        boolean boolean43 = atomikosProperties33.isEnableLogging();
        boolean boolean44 = atomikosProperties33.isForceShutdownOnVmExit();
        atomikosProperties33.setLogBaseName("{{}={}}");
        boolean boolean47 = properties31.contains((java.lang.Object) atomikosProperties33);
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(objEnumeration3);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNull(obj9);
        org.junit.Assert.assertNotNull(objEnumeration10);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertNull(obj14);
        org.junit.Assert.assertNotNull(objEnumeration15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(objSet17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(objEnumeration19);
        org.junit.Assert.assertNull(obj22);
        org.junit.Assert.assertNotNull(objEnumeration23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNotNull(objSet25);
        org.junit.Assert.assertNotNull(objEnumeration26);
        org.junit.Assert.assertNotNull(objEntrySet27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNull(str40);
        org.junit.Assert.assertNotNull(properties41);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
    }

    @Test
    public void test5070() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test5070");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration3 = properties0.elements();
        boolean boolean4 = properties0.isEmpty();
        java.util.Set<java.lang.Object> objSet5 = properties0.keySet();
        java.util.Enumeration<java.lang.Object> objEnumeration6 = properties0.keys();
        java.lang.String str8 = properties0.getProperty("hi!");
        java.util.Properties properties10 = new java.util.Properties();
        java.lang.Object obj12 = properties10.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration13 = properties10.elements();
        int int14 = properties10.size();
        java.util.Properties properties15 = new java.util.Properties(properties10);
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet16 = properties10.entrySet();
        java.util.Properties properties17 = new java.util.Properties();
        java.util.Properties properties18 = new java.util.Properties();
        java.lang.Object obj20 = properties18.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet21 = properties18.stringPropertyNames();
        boolean boolean22 = properties17.containsValue((java.lang.Object) properties18);
        java.util.Collection<java.lang.Object> objCollection23 = properties17.values();
        java.util.Properties properties25 = new java.util.Properties();
        java.lang.Object obj27 = properties25.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration28 = properties25.elements();
        boolean boolean29 = properties25.isEmpty();
        java.util.Set<java.lang.Object> objSet30 = properties25.keySet();
        java.lang.Object obj31 = properties17.putIfAbsent((java.lang.Object) "hi!", (java.lang.Object) objSet30);
        boolean boolean32 = properties0.replace((java.lang.Object) "hi!", (java.lang.Object) properties10, (java.lang.Object) "hi!");
        java.util.Set<java.lang.String> strSet33 = properties10.stringPropertyNames();
        java.util.Properties properties34 = new java.util.Properties();
        java.lang.Object obj36 = properties34.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration37 = properties34.elements();
        int int38 = properties34.size();
        java.util.Properties properties39 = new java.util.Properties(properties34);
        java.util.Set<java.lang.String> strSet40 = properties34.stringPropertyNames();
        java.util.Set<java.lang.String> strSet41 = properties34.stringPropertyNames();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties42 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties42.setSerialJtaTransactions(false);
        atomikosProperties42.setThreadedTwoPhaseCommit(true);
        atomikosProperties42.setMaxTimeout((long) '#');
        boolean boolean49 = atomikosProperties42.isEnableLogging();
        atomikosProperties42.setCheckpointInterval((long) (byte) -1);
        atomikosProperties42.setEnableLogging(true);
        atomikosProperties42.setLogBaseName("{}");
        long long56 = atomikosProperties42.getDefaultJtaTimeout();
        java.lang.Object obj57 = properties10.putIfAbsent((java.lang.Object) properties34, (java.lang.Object) atomikosProperties42);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties58 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties58.setSerialJtaTransactions(false);
        atomikosProperties58.setThreadedTwoPhaseCommit(true);
        boolean boolean63 = atomikosProperties58.isSerialJtaTransactions();
        boolean boolean64 = atomikosProperties58.isForceShutdownOnVmExit();
        java.lang.String str65 = atomikosProperties58.getService();
        boolean boolean66 = atomikosProperties58.isThreadedTwoPhaseCommit();
        java.util.Properties properties67 = new java.util.Properties();
        java.lang.Object obj69 = properties67.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration70 = properties67.elements();
        boolean boolean71 = properties67.isEmpty();
        java.util.Set<java.lang.Object> objSet72 = properties67.keySet();
        boolean boolean73 = properties67.isEmpty();
        java.util.Properties properties74 = new java.util.Properties();
        java.util.Collection<java.lang.Object> objCollection75 = properties74.values();
        java.util.Enumeration<java.lang.Object> objEnumeration76 = properties74.keys();
        java.lang.Object obj77 = properties67.remove((java.lang.Object) properties74);
        int int78 = properties67.size();
        java.lang.Object obj79 = properties34.putIfAbsent((java.lang.Object) atomikosProperties58, (java.lang.Object) int78);
        java.util.Set<java.lang.Object> objSet80 = properties34.keySet();
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(objEnumeration3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(objSet5);
        org.junit.Assert.assertNotNull(objEnumeration6);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNull(obj12);
        org.junit.Assert.assertNotNull(objEnumeration13);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertNotNull(objEntrySet16);
        org.junit.Assert.assertNull(obj20);
        org.junit.Assert.assertNotNull(strSet21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(objCollection23);
        org.junit.Assert.assertNull(obj27);
        org.junit.Assert.assertNotNull(objEnumeration28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNotNull(objSet30);
        org.junit.Assert.assertNull(obj31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(strSet33);
        org.junit.Assert.assertNull(obj36);
        org.junit.Assert.assertNotNull(objEnumeration37);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 0 + "'", int38 == 0);
        org.junit.Assert.assertNotNull(strSet40);
        org.junit.Assert.assertNotNull(strSet41);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertTrue("'" + long56 + "' != '" + 10000L + "'", long56 == 10000L);
        org.junit.Assert.assertNull(obj57);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertNull(str65);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66 == true);
        org.junit.Assert.assertNull(obj69);
        org.junit.Assert.assertNotNull(objEnumeration70);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + true + "'", boolean71 == true);
        org.junit.Assert.assertNotNull(objSet72);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + true + "'", boolean73 == true);
        org.junit.Assert.assertNotNull(objCollection75);
        org.junit.Assert.assertNotNull(objEnumeration76);
        org.junit.Assert.assertNull(obj77);
        org.junit.Assert.assertTrue("'" + int78 + "' != '" + 0 + "'", int78 == 0);
        org.junit.Assert.assertNull(obj79);
        org.junit.Assert.assertNotNull(objSet80);
    }

    @Test
    public void test5071() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test5071");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        java.util.Properties properties3 = new java.util.Properties();
        java.util.Collection<java.lang.Object> objCollection4 = properties3.values();
        java.util.Enumeration<java.lang.Object> objEnumeration5 = properties3.keys();
        java.util.Properties properties6 = new java.util.Properties();
        java.lang.Object obj8 = properties6.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration9 = properties6.elements();
        boolean boolean10 = properties6.isEmpty();
        java.util.Set<java.lang.Object> objSet11 = properties6.keySet();
        java.util.Enumeration<java.lang.Object> objEnumeration12 = properties6.keys();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet13 = properties6.entrySet();
        java.lang.Object obj14 = properties0.put((java.lang.Object) properties3, (java.lang.Object) properties6);
        java.util.Properties properties15 = new java.util.Properties();
        java.util.Collection<java.lang.Object> objCollection16 = properties15.values();
        java.util.Enumeration<java.lang.Object> objEnumeration17 = properties15.keys();
        java.lang.Object obj20 = properties15.setProperty("{}", "{}");
        java.lang.String str21 = properties15.toString();
        java.util.Enumeration<java.lang.Object> objEnumeration22 = properties15.keys();
        boolean boolean23 = properties6.equals((java.lang.Object) properties15);
        java.lang.String str24 = properties6.toString();
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(objCollection4);
        org.junit.Assert.assertNotNull(objEnumeration5);
        org.junit.Assert.assertNull(obj8);
        org.junit.Assert.assertNotNull(objEnumeration9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(objSet11);
        org.junit.Assert.assertNotNull(objEnumeration12);
        org.junit.Assert.assertNotNull(objEntrySet13);
        org.junit.Assert.assertNull(obj14);
        org.junit.Assert.assertNotNull(objCollection16);
        org.junit.Assert.assertNotNull(objEnumeration17);
        org.junit.Assert.assertNull(obj20);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "{{}={}}" + "'", str21, "{{}={}}");
        org.junit.Assert.assertNotNull(objEnumeration22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "{}" + "'", str24, "{}");
    }

    @Test
    public void test5072() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test5072");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<?> wildcardEnumeration3 = properties0.propertyNames();
        java.util.Properties properties4 = new java.util.Properties();
        java.lang.Object obj6 = properties4.remove((java.lang.Object) 0.0d);
        boolean boolean7 = properties4.isEmpty();
        java.util.Enumeration<java.lang.Object> objEnumeration8 = properties4.elements();
        java.util.Enumeration<java.lang.Object> objEnumeration9 = properties4.elements();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties10 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties10.setSerialJtaTransactions(false);
        atomikosProperties10.setThreadedTwoPhaseCommit(true);
        atomikosProperties10.setMaxTimeout((long) '#');
        boolean boolean17 = atomikosProperties10.isForceShutdownOnVmExit();
        int int18 = atomikosProperties10.getMaxActives();
        java.lang.Object obj19 = properties4.remove((java.lang.Object) int18);
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet20 = properties4.entrySet();
        java.util.Properties properties21 = new java.util.Properties();
        java.lang.Object obj23 = properties21.remove((java.lang.Object) 0.0d);
        java.lang.String str25 = properties21.getProperty("");
        java.lang.Object obj26 = properties0.getOrDefault((java.lang.Object) properties4, (java.lang.Object) str25);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties27 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties27.setSerialJtaTransactions(false);
        atomikosProperties27.setThreadedTwoPhaseCommit(true);
        atomikosProperties27.setMaxTimeout((long) '#');
        boolean boolean34 = atomikosProperties27.isEnableLogging();
        atomikosProperties27.setCheckpointInterval((long) 100);
        atomikosProperties27.setForceShutdownOnVmExit(false);
        boolean boolean39 = properties0.equals((java.lang.Object) atomikosProperties27);
        atomikosProperties27.setDefaultJtaTimeout((long) 'a');
        atomikosProperties27.setSerialJtaTransactions(true);
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(wildcardEnumeration3);
        org.junit.Assert.assertNull(obj6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(objEnumeration8);
        org.junit.Assert.assertNotNull(objEnumeration9);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 50 + "'", int18 == 50);
        org.junit.Assert.assertNull(obj19);
        org.junit.Assert.assertNotNull(objEntrySet20);
        org.junit.Assert.assertNull(obj23);
        org.junit.Assert.assertNull(str25);
        org.junit.Assert.assertNull(obj26);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
    }

    @Test
    public void test5073() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test5073");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration3 = properties0.elements();
        int int4 = properties0.size();
        java.util.Properties properties5 = new java.util.Properties();
        java.lang.Object obj7 = properties5.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration8 = properties5.elements();
        boolean boolean9 = properties5.isEmpty();
        java.util.Set<java.lang.Object> objSet10 = properties5.keySet();
        boolean boolean11 = properties0.containsKey((java.lang.Object) objSet10);
        java.util.Enumeration<java.lang.Object> objEnumeration12 = properties0.keys();
        java.util.Properties properties13 = new java.util.Properties();
        java.lang.Object obj15 = properties13.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration16 = properties13.elements();
        boolean boolean17 = properties13.isEmpty();
        java.util.Set<java.lang.Object> objSet18 = properties13.keySet();
        java.util.Enumeration<java.lang.Object> objEnumeration19 = properties13.keys();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet20 = properties13.entrySet();
        boolean boolean22 = properties0.remove((java.lang.Object) properties13, (java.lang.Object) 1.0f);
        java.lang.Object obj23 = properties13.clone();
        java.util.Properties properties24 = new java.util.Properties();
        java.lang.Object obj26 = properties24.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration27 = properties24.elements();
        boolean boolean28 = properties24.isEmpty();
        java.lang.Object obj31 = properties24.setProperty("tmlog", "");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties32 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties32.setSerialJtaTransactions(false);
        boolean boolean35 = atomikosProperties32.isSerialJtaTransactions();
        atomikosProperties32.setTransactionManagerUniqueName("hi!");
        atomikosProperties32.setForceShutdownOnVmExit(false);
        atomikosProperties32.setDefaultJtaTimeout((long) (byte) 10);
        java.lang.String str42 = atomikosProperties32.getTransactionManagerUniqueName();
        java.util.Properties properties43 = new java.util.Properties();
        java.util.Properties properties44 = new java.util.Properties();
        java.lang.Object obj46 = properties44.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet47 = properties44.stringPropertyNames();
        boolean boolean48 = properties43.containsValue((java.lang.Object) properties44);
        java.util.Collection<java.lang.Object> objCollection49 = properties43.values();
        java.util.Properties properties51 = new java.util.Properties();
        java.lang.Object obj53 = properties51.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration54 = properties51.elements();
        boolean boolean55 = properties51.isEmpty();
        java.util.Set<java.lang.Object> objSet56 = properties51.keySet();
        java.lang.Object obj57 = properties43.putIfAbsent((java.lang.Object) "hi!", (java.lang.Object) objSet56);
        java.util.Set<java.lang.Object> objSet58 = properties43.keySet();
        java.util.Set<java.lang.Object> objSet59 = properties43.keySet();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet60 = properties43.entrySet();
        java.util.Set<java.lang.Object> objSet61 = properties43.keySet();
        java.lang.Object obj62 = properties24.replace((java.lang.Object) atomikosProperties32, (java.lang.Object) properties43);
        boolean boolean63 = properties13.containsKey((java.lang.Object) properties43);
        java.util.Properties properties64 = new java.util.Properties();
        java.lang.Object obj66 = properties64.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration67 = properties64.elements();
        boolean boolean68 = properties64.isEmpty();
        java.util.Set<java.lang.Object> objSet69 = properties64.keySet();
        boolean boolean70 = properties64.isEmpty();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet71 = properties64.entrySet();
        java.util.Properties properties72 = new java.util.Properties();
        java.lang.Object obj74 = properties72.remove((java.lang.Object) 0.0d);
        boolean boolean75 = properties72.isEmpty();
        java.lang.Object obj78 = properties72.setProperty("", "hi!");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties79 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties79.setSerialJtaTransactions(false);
        boolean boolean82 = properties64.remove((java.lang.Object) properties72, (java.lang.Object) atomikosProperties79);
        java.util.Properties properties83 = new java.util.Properties(properties72);
        int int84 = properties83.size();
        java.util.Enumeration<?> wildcardEnumeration85 = properties83.propertyNames();
        java.lang.Object obj86 = properties83.clone();
        java.util.Properties properties87 = new java.util.Properties();
        java.lang.Object obj89 = properties87.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration90 = properties87.elements();
        boolean boolean91 = properties87.isEmpty();
        java.util.Set<java.lang.Object> objSet92 = properties87.keySet();
        java.util.Enumeration<java.lang.Object> objEnumeration93 = properties87.keys();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet94 = properties87.entrySet();
        java.util.Properties properties95 = new java.util.Properties();
        java.util.Collection<java.lang.Object> objCollection96 = properties95.values();
        boolean boolean97 = properties13.replace(obj86, (java.lang.Object) properties87, (java.lang.Object) properties95);
        java.lang.Class<?> wildcardClass98 = properties87.getClass();
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(objEnumeration3);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNull(obj7);
        org.junit.Assert.assertNotNull(objEnumeration8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertNotNull(objSet10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(objEnumeration12);
        org.junit.Assert.assertNull(obj15);
        org.junit.Assert.assertNotNull(objEnumeration16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(objSet18);
        org.junit.Assert.assertNotNull(objEnumeration19);
        org.junit.Assert.assertNotNull(objEntrySet20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(obj23);
        org.junit.Assert.assertEquals(obj23.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj23), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj23), "{}");
        org.junit.Assert.assertNull(obj26);
        org.junit.Assert.assertNotNull(objEnumeration27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNull(obj31);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "hi!" + "'", str42, "hi!");
        org.junit.Assert.assertNull(obj46);
        org.junit.Assert.assertNotNull(strSet47);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNotNull(objCollection49);
        org.junit.Assert.assertNull(obj53);
        org.junit.Assert.assertNotNull(objEnumeration54);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertNotNull(objSet56);
        org.junit.Assert.assertNull(obj57);
        org.junit.Assert.assertNotNull(objSet58);
        org.junit.Assert.assertNotNull(objSet59);
        org.junit.Assert.assertNotNull(objEntrySet60);
        org.junit.Assert.assertNotNull(objSet61);
        org.junit.Assert.assertNull(obj62);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertNull(obj66);
        org.junit.Assert.assertNotNull(objEnumeration67);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + true + "'", boolean68 == true);
        org.junit.Assert.assertNotNull(objSet69);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + true + "'", boolean70 == true);
        org.junit.Assert.assertNotNull(objEntrySet71);
        org.junit.Assert.assertNull(obj74);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + true + "'", boolean75 == true);
        org.junit.Assert.assertNull(obj78);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + false + "'", boolean82 == false);
        org.junit.Assert.assertTrue("'" + int84 + "' != '" + 0 + "'", int84 == 0);
        org.junit.Assert.assertNotNull(wildcardEnumeration85);
        org.junit.Assert.assertNotNull(obj86);
        org.junit.Assert.assertEquals(obj86.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj86), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj86), "{}");
        org.junit.Assert.assertNull(obj89);
        org.junit.Assert.assertNotNull(objEnumeration90);
        org.junit.Assert.assertTrue("'" + boolean91 + "' != '" + true + "'", boolean91 == true);
        org.junit.Assert.assertNotNull(objSet92);
        org.junit.Assert.assertNotNull(objEnumeration93);
        org.junit.Assert.assertNotNull(objEntrySet94);
        org.junit.Assert.assertNotNull(objCollection96);
        org.junit.Assert.assertTrue("'" + boolean97 + "' != '" + false + "'", boolean97 == false);
        org.junit.Assert.assertNotNull(wildcardClass98);
    }

    @Test
    public void test5074() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test5074");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        boolean boolean3 = properties0.isEmpty();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties4 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        boolean boolean5 = properties0.containsValue((java.lang.Object) atomikosProperties4);
        java.util.Properties properties6 = new java.util.Properties();
        java.lang.Object obj8 = properties6.remove((java.lang.Object) 0.0d);
        java.util.Properties properties9 = new java.util.Properties();
        java.util.Collection<java.lang.Object> objCollection10 = properties9.values();
        java.util.Enumeration<java.lang.Object> objEnumeration11 = properties9.keys();
        java.util.Properties properties12 = new java.util.Properties();
        java.lang.Object obj14 = properties12.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration15 = properties12.elements();
        boolean boolean16 = properties12.isEmpty();
        java.util.Set<java.lang.Object> objSet17 = properties12.keySet();
        java.util.Enumeration<java.lang.Object> objEnumeration18 = properties12.keys();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet19 = properties12.entrySet();
        java.lang.Object obj20 = properties6.put((java.lang.Object) properties9, (java.lang.Object) properties12);
        java.lang.Object obj21 = properties9.clone();
        properties0.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties9);
        java.lang.Object obj23 = properties9.clone();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties24 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties24.setSerialJtaTransactions(false);
        atomikosProperties24.setThreadedTwoPhaseCommit(true);
        atomikosProperties24.setMaxTimeout((long) '#');
        boolean boolean31 = atomikosProperties24.isEnableLogging();
        atomikosProperties24.setCheckpointInterval((long) (byte) -1);
        atomikosProperties24.setMaxActives((int) (byte) 100);
        atomikosProperties24.setForceShutdownOnVmExit(false);
        boolean boolean38 = atomikosProperties24.isThreadedTwoPhaseCommit();
        boolean boolean39 = atomikosProperties24.isForceShutdownOnVmExit();
        atomikosProperties24.setCheckpointInterval((long) (byte) 100);
        atomikosProperties24.setEnableLogging(true);
        atomikosProperties24.setSerialJtaTransactions(true);
        java.lang.String str46 = atomikosProperties24.getTransactionManagerUniqueName();
        java.lang.String str47 = atomikosProperties24.getService();
        int int48 = atomikosProperties24.getMaxActives();
        java.lang.Object obj49 = properties9.get((java.lang.Object) atomikosProperties24);
        java.io.OutputStream outputStream50 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties9.storeToXML(outputStream50, "{com.atomikos.icatch.enable_logging=false, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=1, com.atomikos.icatch.serial_jta_transactions=false, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}", "{true=class org.springframework.boot.jta.atomikos.AtomikosProperties}");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNull(obj8);
        org.junit.Assert.assertNotNull(objCollection10);
        org.junit.Assert.assertNotNull(objEnumeration11);
        org.junit.Assert.assertNull(obj14);
        org.junit.Assert.assertNotNull(objEnumeration15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(objSet17);
        org.junit.Assert.assertNotNull(objEnumeration18);
        org.junit.Assert.assertNotNull(objEntrySet19);
        org.junit.Assert.assertNull(obj20);
        org.junit.Assert.assertNotNull(obj21);
        org.junit.Assert.assertEquals(obj21.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj21), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj21), "{}");
        org.junit.Assert.assertNotNull(obj23);
        org.junit.Assert.assertEquals(obj23.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj23), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj23), "{}");
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNull(str46);
        org.junit.Assert.assertNull(str47);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 100 + "'", int48 == 100);
        org.junit.Assert.assertNull(obj49);
    }

    @Test
    public void test5075() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test5075");
        java.util.Properties properties0 = new java.util.Properties();
        java.util.Collection<java.lang.Object> objCollection1 = properties0.values();
        java.util.Enumeration<java.lang.Object> objEnumeration2 = properties0.keys();
        java.lang.Object obj5 = properties0.setProperty("{}", "{}");
        java.util.Set<java.lang.String> strSet6 = properties0.stringPropertyNames();
        java.util.Properties properties7 = new java.util.Properties();
        boolean boolean9 = properties7.contains((java.lang.Object) 100.0d);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties10 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties10.setSerialJtaTransactions(false);
        atomikosProperties10.setThreadedTwoPhaseCommit(true);
        atomikosProperties10.setSerialJtaTransactions(false);
        java.lang.String str17 = atomikosProperties10.getService();
        boolean boolean18 = properties7.containsKey((java.lang.Object) atomikosProperties10);
        boolean boolean19 = properties0.containsKey((java.lang.Object) properties7);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties20 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties20.setSerialJtaTransactions(false);
        boolean boolean23 = atomikosProperties20.isSerialJtaTransactions();
        atomikosProperties20.setTransactionManagerUniqueName("hi!");
        java.lang.String str26 = atomikosProperties20.getLogBaseName();
        java.lang.String str27 = atomikosProperties20.getLogBaseName();
        long long28 = atomikosProperties20.getDefaultJtaTimeout();
        java.util.Properties properties29 = new java.util.Properties();
        java.lang.Object obj31 = properties29.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration32 = properties29.elements();
        boolean boolean33 = properties29.isEmpty();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet34 = properties29.entrySet();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties36 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties36.setSerialJtaTransactions(false);
        atomikosProperties36.setThreadedTwoPhaseCommit(true);
        atomikosProperties36.setMaxTimeout((long) '#');
        boolean boolean43 = atomikosProperties36.isForceShutdownOnVmExit();
        java.lang.Object obj44 = properties29.put((java.lang.Object) (short) 1, (java.lang.Object) atomikosProperties36);
        atomikosProperties36.setForceShutdownOnVmExit(true);
        java.util.Properties properties47 = atomikosProperties36.asProperties();
        java.lang.Object obj48 = properties0.getOrDefault((java.lang.Object) atomikosProperties20, (java.lang.Object) properties47);
        atomikosProperties20.setThreadedTwoPhaseCommit(true);
        long long51 = atomikosProperties20.getDefaultJtaTimeout();
        org.junit.Assert.assertNotNull(objCollection1);
        org.junit.Assert.assertNotNull(objEnumeration2);
        org.junit.Assert.assertNull(obj5);
        org.junit.Assert.assertNotNull(strSet6);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNull(str17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "tmlog" + "'", str26, "tmlog");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "tmlog" + "'", str27, "tmlog");
        org.junit.Assert.assertTrue("'" + long28 + "' != '" + 10000L + "'", long28 == 10000L);
        org.junit.Assert.assertNull(obj31);
        org.junit.Assert.assertNotNull(objEnumeration32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNotNull(objEntrySet34);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNull(obj44);
        org.junit.Assert.assertNotNull(properties47);
        org.junit.Assert.assertNotNull(obj48);
// flaky:         org.junit.Assert.assertEquals(obj48.toString(), "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=true, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=false, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=35, com.atomikos.icatch.threaded_2pc=true, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
// flaky:         org.junit.Assert.assertEquals(java.lang.String.valueOf(obj48), "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=true, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=false, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=35, com.atomikos.icatch.threaded_2pc=true, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
// flaky:         org.junit.Assert.assertEquals(java.util.Objects.toString(obj48), "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=true, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=false, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=35, com.atomikos.icatch.threaded_2pc=true, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
        org.junit.Assert.assertTrue("'" + long51 + "' != '" + 10000L + "'", long51 == 10000L);
    }

    @Test
    public void test5076() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test5076");
        java.util.Properties properties0 = new java.util.Properties();
        java.util.Properties properties1 = new java.util.Properties();
        java.lang.Object obj3 = properties1.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet4 = properties1.stringPropertyNames();
        boolean boolean5 = properties0.containsValue((java.lang.Object) properties1);
        java.util.Enumeration<?> wildcardEnumeration6 = properties1.propertyNames();
        java.util.Properties properties7 = new java.util.Properties(properties1);
        java.util.Enumeration<java.lang.Object> objEnumeration8 = properties1.keys();
        java.io.PrintWriter printWriter9 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties1.list(printWriter9);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(obj3);
        org.junit.Assert.assertNotNull(strSet4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(wildcardEnumeration6);
        org.junit.Assert.assertNotNull(objEnumeration8);
    }

    @Test
    public void test5077() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test5077");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration3 = properties0.elements();
        boolean boolean4 = properties0.isEmpty();
        java.util.Set<java.lang.Object> objSet5 = properties0.keySet();
        java.util.Properties properties6 = new java.util.Properties();
        java.lang.Object obj8 = properties6.remove((java.lang.Object) 0.0d);
        java.util.Properties properties9 = new java.util.Properties();
        java.util.Collection<java.lang.Object> objCollection10 = properties9.values();
        java.util.Enumeration<java.lang.Object> objEnumeration11 = properties9.keys();
        java.util.Properties properties12 = new java.util.Properties();
        java.lang.Object obj14 = properties12.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration15 = properties12.elements();
        boolean boolean16 = properties12.isEmpty();
        java.util.Set<java.lang.Object> objSet17 = properties12.keySet();
        java.util.Enumeration<java.lang.Object> objEnumeration18 = properties12.keys();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet19 = properties12.entrySet();
        java.lang.Object obj20 = properties6.put((java.lang.Object) properties9, (java.lang.Object) properties12);
        java.lang.String str22 = properties9.getProperty("{=hi!}");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties23 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties23.setSerialJtaTransactions(false);
        atomikosProperties23.setThreadedTwoPhaseCommit(true);
        atomikosProperties23.setThreadedTwoPhaseCommit(true);
        long long30 = atomikosProperties23.getMaxTimeout();
        boolean boolean31 = properties9.containsValue((java.lang.Object) atomikosProperties23);
        java.util.Enumeration<java.lang.Object> objEnumeration32 = properties9.elements();
        java.util.Set<java.lang.String> strSet33 = properties9.stringPropertyNames();
        boolean boolean34 = properties0.contains((java.lang.Object) properties9);
        java.util.Properties properties35 = new java.util.Properties();
        java.lang.Object obj37 = properties35.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration38 = properties35.elements();
        int int39 = properties35.size();
        java.util.Properties properties40 = new java.util.Properties(properties35);
        java.lang.Object obj41 = properties9.remove((java.lang.Object) properties40);
        java.lang.String str43 = properties40.getProperty("{hi!=[]}");
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(objEnumeration3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(objSet5);
        org.junit.Assert.assertNull(obj8);
        org.junit.Assert.assertNotNull(objCollection10);
        org.junit.Assert.assertNotNull(objEnumeration11);
        org.junit.Assert.assertNull(obj14);
        org.junit.Assert.assertNotNull(objEnumeration15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(objSet17);
        org.junit.Assert.assertNotNull(objEnumeration18);
        org.junit.Assert.assertNotNull(objEntrySet19);
        org.junit.Assert.assertNull(obj20);
        org.junit.Assert.assertNull(str22);
        org.junit.Assert.assertTrue("'" + long30 + "' != '" + 300000L + "'", long30 == 300000L);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(objEnumeration32);
        org.junit.Assert.assertNotNull(strSet33);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNull(obj37);
        org.junit.Assert.assertNotNull(objEnumeration38);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 0 + "'", int39 == 0);
        org.junit.Assert.assertNull(obj41);
        org.junit.Assert.assertNull(str43);
    }

    @Test
    public void test5078() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test5078");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setSerialJtaTransactions(false);
        atomikosProperties0.setThreadedTwoPhaseCommit(true);
        atomikosProperties0.setSerialJtaTransactions(false);
        atomikosProperties0.setService("{=hi!}");
        atomikosProperties0.setLogBaseDir("");
        boolean boolean11 = atomikosProperties0.isForceShutdownOnVmExit();
        atomikosProperties0.setLogBaseName("{=hi!}");
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
    }

    @Test
    public void test5079() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test5079");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration3 = properties0.elements();
        boolean boolean4 = properties0.isEmpty();
        java.util.Set<java.lang.Object> objSet5 = properties0.keySet();
        boolean boolean6 = properties0.isEmpty();
        java.util.Properties properties7 = new java.util.Properties();
        java.lang.Object obj9 = properties7.remove((java.lang.Object) 0.0d);
        boolean boolean10 = properties7.isEmpty();
        java.lang.Object obj13 = properties7.setProperty("", "hi!");
        java.util.Properties properties14 = new java.util.Properties();
        java.lang.Object obj16 = properties14.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration17 = properties14.elements();
        boolean boolean18 = properties14.isEmpty();
        java.util.Set<java.lang.Object> objSet19 = properties14.keySet();
        boolean boolean20 = properties14.isEmpty();
        java.util.Properties properties21 = new java.util.Properties();
        java.util.Collection<java.lang.Object> objCollection22 = properties21.values();
        java.util.Enumeration<java.lang.Object> objEnumeration23 = properties21.keys();
        java.lang.Object obj24 = properties14.remove((java.lang.Object) properties21);
        java.lang.Object obj25 = properties7.get((java.lang.Object) properties21);
        properties0.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties21);
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet27 = properties21.entrySet();
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(objEnumeration3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(objSet5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNull(obj9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNull(obj13);
        org.junit.Assert.assertNull(obj16);
        org.junit.Assert.assertNotNull(objEnumeration17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(objSet19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNotNull(objCollection22);
        org.junit.Assert.assertNotNull(objEnumeration23);
        org.junit.Assert.assertNull(obj24);
        org.junit.Assert.assertNull(obj25);
        org.junit.Assert.assertNotNull(objEntrySet27);
    }

    @Test
    public void test5080() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test5080");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        boolean boolean3 = properties0.isEmpty();
        java.util.Set<java.lang.String> strSet4 = properties0.stringPropertyNames();
        java.lang.String str6 = properties0.getProperty("hi!");
        java.util.Properties properties7 = new java.util.Properties();
        java.lang.Object obj9 = properties7.remove((java.lang.Object) 0.0d);
        boolean boolean10 = properties7.isEmpty();
        java.util.Enumeration<java.lang.Object> objEnumeration11 = properties7.elements();
        java.util.Enumeration<java.lang.Object> objEnumeration12 = properties7.elements();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties13 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties13.setSerialJtaTransactions(false);
        atomikosProperties13.setThreadedTwoPhaseCommit(true);
        atomikosProperties13.setMaxTimeout((long) '#');
        boolean boolean20 = atomikosProperties13.isForceShutdownOnVmExit();
        int int21 = atomikosProperties13.getMaxActives();
        java.lang.Object obj22 = properties7.remove((java.lang.Object) int21);
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet23 = properties7.entrySet();
        java.util.Properties properties24 = new java.util.Properties(properties7);
        boolean boolean25 = properties0.containsValue((java.lang.Object) properties24);
        java.util.Properties properties26 = new java.util.Properties();
        java.lang.Object obj28 = properties26.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet29 = properties26.stringPropertyNames();
        java.util.Properties properties30 = new java.util.Properties();
        java.util.Properties properties31 = new java.util.Properties();
        java.lang.Object obj33 = properties31.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet34 = properties31.stringPropertyNames();
        boolean boolean35 = properties30.containsValue((java.lang.Object) properties31);
        java.util.Collection<java.lang.Object> objCollection36 = properties30.values();
        java.util.Enumeration<?> wildcardEnumeration37 = properties30.propertyNames();
        java.lang.Object obj39 = properties26.put((java.lang.Object) wildcardEnumeration37, (java.lang.Object) 10.0d);
        java.lang.String str41 = properties26.getProperty("{=hi!}");
        java.lang.Object obj44 = properties26.setProperty("{hi!=[]}", "{}");
        boolean boolean45 = properties24.containsKey((java.lang.Object) properties26);
        java.lang.Object obj46 = properties26.clone();
        java.util.Enumeration<java.lang.Object> objEnumeration47 = properties26.elements();
        java.io.OutputStream outputStream48 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties26.store(outputStream48, "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=false, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.tm_unique_name=tmlog, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(strSet4);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertNull(obj9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(objEnumeration11);
        org.junit.Assert.assertNotNull(objEnumeration12);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 50 + "'", int21 == 50);
        org.junit.Assert.assertNull(obj22);
        org.junit.Assert.assertNotNull(objEntrySet23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNull(obj28);
        org.junit.Assert.assertNotNull(strSet29);
        org.junit.Assert.assertNull(obj33);
        org.junit.Assert.assertNotNull(strSet34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(objCollection36);
        org.junit.Assert.assertNotNull(wildcardEnumeration37);
        org.junit.Assert.assertNull(obj39);
        org.junit.Assert.assertNull(str41);
        org.junit.Assert.assertNull(obj44);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNotNull(obj46);
        org.junit.Assert.assertNotNull(objEnumeration47);
    }

    @Test
    public void test5081() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test5081");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setSerialJtaTransactions(false);
        atomikosProperties0.setThreadedTwoPhaseCommit(true);
        atomikosProperties0.setMaxTimeout((long) '#');
        java.lang.String str7 = atomikosProperties0.getLogBaseDir();
        boolean boolean8 = atomikosProperties0.isThreadedTwoPhaseCommit();
        java.util.Properties properties9 = atomikosProperties0.asProperties();
        java.lang.Object obj12 = properties9.setProperty("{}", "{}");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties13 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties13.setSerialJtaTransactions(false);
        boolean boolean16 = atomikosProperties13.isSerialJtaTransactions();
        java.util.Properties properties17 = atomikosProperties13.asProperties();
        int int18 = atomikosProperties13.getMaxActives();
        atomikosProperties13.setForceShutdownOnVmExit(false);
        boolean boolean21 = properties9.contains((java.lang.Object) atomikosProperties13);
        boolean boolean22 = atomikosProperties13.isEnableLogging();
        atomikosProperties13.setMaxActives((int) '#');
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(properties9);
        org.junit.Assert.assertNull(obj12);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(properties17);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 50 + "'", int18 == 50);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
    }

    @Test
    public void test5082() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test5082");
        java.util.Properties properties0 = new java.util.Properties();
        java.util.Collection<java.lang.Object> objCollection1 = properties0.values();
        java.util.Enumeration<java.lang.Object> objEnumeration2 = properties0.keys();
        java.lang.Object obj5 = properties0.setProperty("{}", "{}");
        java.util.Set<java.lang.String> strSet6 = properties0.stringPropertyNames();
        java.util.Properties properties7 = new java.util.Properties();
        boolean boolean9 = properties7.contains((java.lang.Object) 100.0d);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties10 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties10.setSerialJtaTransactions(false);
        atomikosProperties10.setThreadedTwoPhaseCommit(true);
        atomikosProperties10.setSerialJtaTransactions(false);
        java.lang.String str17 = atomikosProperties10.getService();
        boolean boolean18 = properties7.containsKey((java.lang.Object) atomikosProperties10);
        boolean boolean19 = properties0.containsKey((java.lang.Object) properties7);
        java.lang.String str21 = properties0.getProperty("");
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet22 = properties0.entrySet();
        java.util.Properties properties23 = new java.util.Properties();
        java.lang.Object obj25 = properties23.remove((java.lang.Object) 0.0d);
        boolean boolean27 = properties23.containsValue((java.lang.Object) "hi!");
        java.lang.Object obj30 = properties23.put((java.lang.Object) (byte) -1, (java.lang.Object) 100L);
        java.util.Properties properties31 = new java.util.Properties();
        java.util.Properties properties32 = new java.util.Properties();
        java.lang.Object obj34 = properties32.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet35 = properties32.stringPropertyNames();
        boolean boolean36 = properties31.containsValue((java.lang.Object) properties32);
        java.util.Collection<java.lang.Object> objCollection37 = properties31.values();
        java.util.Properties properties39 = new java.util.Properties();
        java.lang.Object obj41 = properties39.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration42 = properties39.elements();
        boolean boolean43 = properties39.isEmpty();
        java.util.Set<java.lang.Object> objSet44 = properties39.keySet();
        java.lang.Object obj45 = properties31.putIfAbsent((java.lang.Object) "hi!", (java.lang.Object) objSet44);
        java.util.Set<java.lang.Object> objSet46 = properties31.keySet();
        boolean boolean47 = properties23.containsKey((java.lang.Object) properties31);
        java.util.Enumeration<java.lang.Object> objEnumeration48 = properties31.elements();
        java.util.Properties properties49 = new java.util.Properties();
        java.lang.Object obj51 = properties49.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration52 = properties49.elements();
        boolean boolean53 = properties49.isEmpty();
        java.util.Set<java.lang.Object> objSet54 = properties49.keySet();
        boolean boolean55 = properties49.isEmpty();
        boolean boolean56 = properties31.contains((java.lang.Object) boolean55);
        java.util.Properties properties57 = new java.util.Properties();
        java.lang.Object obj59 = properties57.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration60 = properties57.elements();
        boolean boolean61 = properties57.isEmpty();
        java.util.Set<java.lang.Object> objSet62 = properties57.keySet();
        boolean boolean64 = properties57.containsKey((java.lang.Object) (-1.0f));
        java.util.Collection<java.lang.Object> objCollection65 = properties57.values();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties66 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties66.setSerialJtaTransactions(false);
        atomikosProperties66.setThreadedTwoPhaseCommit(true);
        atomikosProperties66.setLogBaseName("{=hi!}");
        java.lang.Object obj73 = properties31.put((java.lang.Object) objCollection65, (java.lang.Object) atomikosProperties66);
        properties0.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties31);
        properties31.clear();
        boolean boolean76 = properties31.isEmpty();
        int int77 = properties31.size();
        java.util.Collection<java.lang.Object> objCollection78 = properties31.values();
        java.util.Set<java.lang.Object> objSet79 = properties31.keySet();
        org.junit.Assert.assertNotNull(objCollection1);
        org.junit.Assert.assertNotNull(objEnumeration2);
        org.junit.Assert.assertNull(obj5);
        org.junit.Assert.assertNotNull(strSet6);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNull(str17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNull(str21);
        org.junit.Assert.assertNotNull(objEntrySet22);
        org.junit.Assert.assertNull(obj25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNull(obj30);
        org.junit.Assert.assertNull(obj34);
        org.junit.Assert.assertNotNull(strSet35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(objCollection37);
        org.junit.Assert.assertNull(obj41);
        org.junit.Assert.assertNotNull(objEnumeration42);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNotNull(objSet44);
        org.junit.Assert.assertNull(obj45);
        org.junit.Assert.assertNotNull(objSet46);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNotNull(objEnumeration48);
        org.junit.Assert.assertNull(obj51);
        org.junit.Assert.assertNotNull(objEnumeration52);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertNotNull(objSet54);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertNull(obj59);
        org.junit.Assert.assertNotNull(objEnumeration60);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertNotNull(objSet62);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertNotNull(objCollection65);
        org.junit.Assert.assertNull(obj73);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + true + "'", boolean76 == true);
        org.junit.Assert.assertTrue("'" + int77 + "' != '" + 0 + "'", int77 == 0);
        org.junit.Assert.assertNotNull(objCollection78);
        org.junit.Assert.assertNotNull(objSet79);
    }

    @Test
    public void test5083() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test5083");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration3 = properties0.elements();
        boolean boolean4 = properties0.isEmpty();
        java.util.Set<java.lang.Object> objSet5 = properties0.keySet();
        boolean boolean6 = properties0.isEmpty();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet7 = properties0.entrySet();
        java.util.Properties properties8 = new java.util.Properties();
        java.lang.Object obj10 = properties8.remove((java.lang.Object) 0.0d);
        boolean boolean11 = properties8.isEmpty();
        java.lang.Object obj14 = properties8.setProperty("", "hi!");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties15 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties15.setSerialJtaTransactions(false);
        boolean boolean18 = properties0.remove((java.lang.Object) properties8, (java.lang.Object) atomikosProperties15);
        java.util.Properties properties19 = new java.util.Properties(properties8);
        int int20 = properties19.size();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties22 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties22.setSerialJtaTransactions(false);
        boolean boolean25 = atomikosProperties22.isSerialJtaTransactions();
        java.lang.String str26 = atomikosProperties22.getService();
        boolean boolean27 = atomikosProperties22.isEnableLogging();
        java.lang.String str28 = atomikosProperties22.getTransactionManagerUniqueName();
        boolean boolean29 = properties19.remove((java.lang.Object) (byte) 1, (java.lang.Object) atomikosProperties22);
        atomikosProperties22.setMaxActives((int) (short) -1);
        boolean boolean32 = atomikosProperties22.isThreadedTwoPhaseCommit();
        long long33 = atomikosProperties22.getDefaultJtaTimeout();
        atomikosProperties22.setForceShutdownOnVmExit(true);
        atomikosProperties22.setCheckpointInterval(0L);
        atomikosProperties22.setSerialJtaTransactions(false);
        atomikosProperties22.setSerialJtaTransactions(false);
        long long42 = atomikosProperties22.getMaxTimeout();
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(objEnumeration3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(objSet5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(objEntrySet7);
        org.junit.Assert.assertNull(obj10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNull(obj14);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 0 + "'", int20 == 0);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNull(str26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNull(str28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue("'" + long33 + "' != '" + 10000L + "'", long33 == 10000L);
        org.junit.Assert.assertTrue("'" + long42 + "' != '" + 300000L + "'", long42 == 300000L);
    }

    @Test
    public void test5084() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test5084");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setSerialJtaTransactions(false);
        boolean boolean3 = atomikosProperties0.isSerialJtaTransactions();
        java.util.Properties properties4 = atomikosProperties0.asProperties();
        java.lang.Object obj7 = properties4.setProperty("hi!", "");
        java.util.Properties properties8 = new java.util.Properties(properties4);
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet9 = properties4.entrySet();
        java.lang.Object obj10 = properties4.clone();
        java.io.InputStream inputStream11 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties4.loadFromXML(inputStream11);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(properties4);
        org.junit.Assert.assertNull(obj7);
        org.junit.Assert.assertNotNull(objEntrySet9);
        org.junit.Assert.assertNotNull(obj10);
// flaky:         org.junit.Assert.assertEquals(obj10.toString(), "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=false, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, hi!=, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
// flaky:         org.junit.Assert.assertEquals(java.lang.String.valueOf(obj10), "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=false, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, hi!=, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
// flaky:         org.junit.Assert.assertEquals(java.util.Objects.toString(obj10), "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=false, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, hi!=, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
    }

    @Test
    public void test5085() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test5085");
        java.util.Properties properties0 = new java.util.Properties();
        boolean boolean2 = properties0.contains((java.lang.Object) 100.0d);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties3 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties3.setSerialJtaTransactions(false);
        atomikosProperties3.setThreadedTwoPhaseCommit(true);
        atomikosProperties3.setSerialJtaTransactions(false);
        java.lang.String str10 = atomikosProperties3.getService();
        boolean boolean11 = properties0.containsKey((java.lang.Object) atomikosProperties3);
        java.lang.String str12 = atomikosProperties3.getService();
        long long13 = atomikosProperties3.getCheckpointInterval();
        atomikosProperties3.setEnableLogging(true);
        atomikosProperties3.setLogBaseName("hi!");
        java.lang.String str18 = atomikosProperties3.getLogBaseName();
        long long19 = atomikosProperties3.getMaxTimeout();
        atomikosProperties3.setLogBaseName("");
        java.util.Properties properties22 = atomikosProperties3.asProperties();
        java.lang.Class<?> wildcardClass23 = properties22.getClass();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertTrue("'" + long13 + "' != '" + 500L + "'", long13 == 500L);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "hi!" + "'", str18, "hi!");
        org.junit.Assert.assertTrue("'" + long19 + "' != '" + 300000L + "'", long19 == 300000L);
        org.junit.Assert.assertNotNull(properties22);
        org.junit.Assert.assertNotNull(wildcardClass23);
    }

    @Test
    public void test5086() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test5086");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet3 = properties0.stringPropertyNames();
        java.util.Properties properties4 = new java.util.Properties();
        java.util.Properties properties5 = new java.util.Properties();
        java.lang.Object obj7 = properties5.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet8 = properties5.stringPropertyNames();
        boolean boolean9 = properties4.containsValue((java.lang.Object) properties5);
        java.util.Collection<java.lang.Object> objCollection10 = properties4.values();
        java.util.Enumeration<?> wildcardEnumeration11 = properties4.propertyNames();
        java.lang.Object obj13 = properties0.put((java.lang.Object) wildcardEnumeration11, (java.lang.Object) 10.0d);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties14 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties14.setSerialJtaTransactions(false);
        atomikosProperties14.setThreadedTwoPhaseCommit(true);
        atomikosProperties14.setMaxTimeout((long) '#');
        boolean boolean21 = atomikosProperties14.isForceShutdownOnVmExit();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties22 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties22.setSerialJtaTransactions(false);
        atomikosProperties22.setThreadedTwoPhaseCommit(true);
        atomikosProperties22.setThreadedTwoPhaseCommit(true);
        java.lang.Object obj29 = properties0.getOrDefault((java.lang.Object) boolean21, (java.lang.Object) atomikosProperties22);
        java.util.Properties properties30 = new java.util.Properties();
        java.lang.Object obj32 = properties30.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration33 = properties30.elements();
        boolean boolean34 = properties30.isEmpty();
        java.util.Set<java.lang.Object> objSet35 = properties30.keySet();
        java.util.Enumeration<java.lang.Object> objEnumeration36 = properties30.keys();
        java.lang.String str38 = properties30.getProperty("hi!");
        java.lang.String str40 = properties30.getProperty("");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties41 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties41.setSerialJtaTransactions(false);
        atomikosProperties41.setThreadedTwoPhaseCommit(true);
        atomikosProperties41.setEnableLogging(false);
        boolean boolean48 = properties30.containsKey((java.lang.Object) atomikosProperties41);
        boolean boolean49 = properties0.containsValue((java.lang.Object) properties30);
        java.util.Enumeration<java.lang.Object> objEnumeration50 = properties0.elements();
        java.util.Properties properties51 = new java.util.Properties();
        java.util.Properties properties52 = new java.util.Properties();
        java.lang.Object obj54 = properties52.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet55 = properties52.stringPropertyNames();
        boolean boolean56 = properties51.containsValue((java.lang.Object) properties52);
        java.util.Collection<java.lang.Object> objCollection57 = properties51.values();
        java.util.Enumeration<?> wildcardEnumeration58 = properties51.propertyNames();
        java.lang.String str60 = properties51.getProperty("{=hi!}");
        java.util.Properties properties61 = new java.util.Properties(properties51);
        java.util.Properties properties62 = new java.util.Properties();
        java.lang.Object obj64 = properties62.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration65 = properties62.elements();
        boolean boolean66 = properties62.isEmpty();
        java.util.Set<java.lang.Object> objSet67 = properties62.keySet();
        boolean boolean68 = properties62.isEmpty();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet69 = properties62.entrySet();
        java.util.Properties properties70 = new java.util.Properties();
        java.lang.Object obj72 = properties70.remove((java.lang.Object) 0.0d);
        boolean boolean73 = properties70.isEmpty();
        java.lang.Object obj76 = properties70.setProperty("", "hi!");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties77 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties77.setSerialJtaTransactions(false);
        boolean boolean80 = properties62.remove((java.lang.Object) properties70, (java.lang.Object) atomikosProperties77);
        java.util.Properties properties81 = new java.util.Properties(properties70);
        int int82 = properties81.size();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties84 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties84.setSerialJtaTransactions(false);
        boolean boolean87 = atomikosProperties84.isSerialJtaTransactions();
        java.lang.String str88 = atomikosProperties84.getService();
        boolean boolean89 = atomikosProperties84.isEnableLogging();
        java.lang.String str90 = atomikosProperties84.getTransactionManagerUniqueName();
        boolean boolean91 = properties81.remove((java.lang.Object) (byte) 1, (java.lang.Object) atomikosProperties84);
        atomikosProperties84.setThreadedTwoPhaseCommit(true);
        boolean boolean94 = properties51.equals((java.lang.Object) atomikosProperties84);
        java.lang.String str95 = atomikosProperties84.getLogBaseDir();
        atomikosProperties84.setLogBaseDir("{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=false, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.service={{}={}}, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.tm_unique_name=hi!, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
        boolean boolean98 = properties0.containsValue((java.lang.Object) atomikosProperties84);
        properties0.clear();
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(strSet3);
        org.junit.Assert.assertNull(obj7);
        org.junit.Assert.assertNotNull(strSet8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(objCollection10);
        org.junit.Assert.assertNotNull(wildcardEnumeration11);
        org.junit.Assert.assertNull(obj13);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(obj29);
        org.junit.Assert.assertNull(obj32);
        org.junit.Assert.assertNotNull(objEnumeration33);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertNotNull(objSet35);
        org.junit.Assert.assertNotNull(objEnumeration36);
        org.junit.Assert.assertNull(str38);
        org.junit.Assert.assertNull(str40);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNotNull(objEnumeration50);
        org.junit.Assert.assertNull(obj54);
        org.junit.Assert.assertNotNull(strSet55);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertNotNull(objCollection57);
        org.junit.Assert.assertNotNull(wildcardEnumeration58);
        org.junit.Assert.assertNull(str60);
        org.junit.Assert.assertNull(obj64);
        org.junit.Assert.assertNotNull(objEnumeration65);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66 == true);
        org.junit.Assert.assertNotNull(objSet67);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + true + "'", boolean68 == true);
        org.junit.Assert.assertNotNull(objEntrySet69);
        org.junit.Assert.assertNull(obj72);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + true + "'", boolean73 == true);
        org.junit.Assert.assertNull(obj76);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", boolean80 == false);
        org.junit.Assert.assertTrue("'" + int82 + "' != '" + 0 + "'", int82 == 0);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + false + "'", boolean87 == false);
        org.junit.Assert.assertNull(str88);
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + true + "'", boolean89 == true);
        org.junit.Assert.assertNull(str90);
        org.junit.Assert.assertTrue("'" + boolean91 + "' != '" + false + "'", boolean91 == false);
        org.junit.Assert.assertTrue("'" + boolean94 + "' != '" + false + "'", boolean94 == false);
        org.junit.Assert.assertNull(str95);
        org.junit.Assert.assertTrue("'" + boolean98 + "' != '" + false + "'", boolean98 == false);
    }

    @Test
    public void test5087() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test5087");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setSerialJtaTransactions(false);
        atomikosProperties0.setThreadedTwoPhaseCommit(true);
        atomikosProperties0.setSerialJtaTransactions(false);
        java.lang.String str7 = atomikosProperties0.getService();
        java.util.Properties properties8 = atomikosProperties0.asProperties();
        int int9 = properties8.size();
        java.util.Properties properties10 = new java.util.Properties();
        java.util.Collection<java.lang.Object> objCollection11 = properties10.values();
        int int12 = properties10.size();
        java.util.Properties properties13 = new java.util.Properties();
        java.lang.Object obj15 = properties13.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration16 = properties13.elements();
        boolean boolean17 = properties13.isEmpty();
        java.util.Set<java.lang.Object> objSet18 = properties13.keySet();
        java.util.Enumeration<java.lang.Object> objEnumeration19 = properties13.keys();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet20 = properties13.entrySet();
        java.util.Properties properties22 = new java.util.Properties();
        java.lang.Object obj24 = properties22.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration25 = properties22.elements();
        boolean boolean26 = properties22.isEmpty();
        java.util.Set<java.lang.Object> objSet27 = properties22.keySet();
        boolean boolean28 = properties22.isEmpty();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties29 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties29.setSerialJtaTransactions(false);
        atomikosProperties29.setThreadedTwoPhaseCommit(true);
        atomikosProperties29.setMaxTimeout((long) '#');
        boolean boolean36 = atomikosProperties29.isEnableLogging();
        atomikosProperties29.setCheckpointInterval((long) (byte) -1);
        java.util.Properties properties39 = new java.util.Properties();
        java.util.Properties properties40 = new java.util.Properties();
        java.lang.Object obj42 = properties40.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet43 = properties40.stringPropertyNames();
        boolean boolean44 = properties39.containsValue((java.lang.Object) properties40);
        java.util.Collection<java.lang.Object> objCollection45 = properties39.values();
        java.lang.Object obj46 = properties22.replace((java.lang.Object) atomikosProperties29, (java.lang.Object) objCollection45);
        boolean boolean48 = properties13.replace((java.lang.Object) 100.0d, (java.lang.Object) objCollection45, (java.lang.Object) 10.0d);
        boolean boolean49 = properties10.equals((java.lang.Object) properties13);
        java.util.Properties properties50 = new java.util.Properties();
        java.lang.Object obj52 = properties50.remove((java.lang.Object) 0.0d);
        java.util.Collection<java.lang.Object> objCollection53 = properties50.values();
        java.util.Properties properties54 = new java.util.Properties(properties50);
        java.lang.Object obj55 = properties8.put((java.lang.Object) boolean49, (java.lang.Object) properties54);
        java.util.Enumeration<java.lang.Object> objEnumeration56 = properties8.keys();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties57 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties57.setSerialJtaTransactions(false);
        atomikosProperties57.setThreadedTwoPhaseCommit(true);
        atomikosProperties57.setEnableLogging(false);
        boolean boolean64 = atomikosProperties57.isSerialJtaTransactions();
        int int65 = atomikosProperties57.getMaxActives();
        boolean boolean66 = atomikosProperties57.isEnableLogging();
        atomikosProperties57.setSerialJtaTransactions(true);
        boolean boolean69 = atomikosProperties57.isEnableLogging();
        java.lang.Class<?> wildcardClass70 = atomikosProperties57.getClass();
        boolean boolean71 = properties8.containsValue((java.lang.Object) atomikosProperties57);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNotNull(properties8);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 9 + "'", int9 == 9);
        org.junit.Assert.assertNotNull(objCollection11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertNull(obj15);
        org.junit.Assert.assertNotNull(objEnumeration16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(objSet18);
        org.junit.Assert.assertNotNull(objEnumeration19);
        org.junit.Assert.assertNotNull(objEntrySet20);
        org.junit.Assert.assertNull(obj24);
        org.junit.Assert.assertNotNull(objEnumeration25);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertNotNull(objSet27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNull(obj42);
        org.junit.Assert.assertNotNull(strSet43);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(objCollection45);
        org.junit.Assert.assertNull(obj46);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertNull(obj52);
        org.junit.Assert.assertNotNull(objCollection53);
        org.junit.Assert.assertNull(obj55);
        org.junit.Assert.assertNotNull(objEnumeration56);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertTrue("'" + int65 + "' != '" + 50 + "'", int65 == 50);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertNotNull(wildcardClass70);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
    }

    @Test
    public void test5088() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test5088");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setSerialJtaTransactions(false);
        atomikosProperties0.setThreadedTwoPhaseCommit(true);
        atomikosProperties0.setSerialJtaTransactions(false);
        java.lang.String str7 = atomikosProperties0.getService();
        java.util.Properties properties8 = atomikosProperties0.asProperties();
        java.util.Properties properties9 = atomikosProperties0.asProperties();
        java.util.Properties properties10 = new java.util.Properties(properties9);
        java.util.Properties properties11 = new java.util.Properties();
        java.lang.Object obj13 = properties11.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration14 = properties11.elements();
        int int15 = properties11.size();
        java.util.Properties properties16 = new java.util.Properties();
        java.lang.Object obj18 = properties16.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration19 = properties16.elements();
        boolean boolean20 = properties16.isEmpty();
        java.util.Set<java.lang.Object> objSet21 = properties16.keySet();
        boolean boolean22 = properties11.containsKey((java.lang.Object) objSet21);
        java.util.Enumeration<java.lang.Object> objEnumeration23 = properties11.keys();
        java.util.Properties properties24 = new java.util.Properties();
        java.lang.Object obj26 = properties24.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration27 = properties24.elements();
        boolean boolean28 = properties24.isEmpty();
        java.util.Set<java.lang.Object> objSet29 = properties24.keySet();
        java.util.Enumeration<java.lang.Object> objEnumeration30 = properties24.keys();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet31 = properties24.entrySet();
        boolean boolean33 = properties11.remove((java.lang.Object) properties24, (java.lang.Object) 1.0f);
        java.lang.Object obj34 = properties24.clone();
        java.util.Collection<java.lang.Object> objCollection35 = properties24.values();
        java.util.Collection<java.lang.Object> objCollection36 = properties24.values();
        java.lang.String str37 = properties24.toString();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties38 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties38.setSerialJtaTransactions(false);
        atomikosProperties38.setThreadedTwoPhaseCommit(true);
        atomikosProperties38.setMaxTimeout((long) '#');
        boolean boolean45 = atomikosProperties38.isEnableLogging();
        atomikosProperties38.setMaxActives((int) '#');
        atomikosProperties38.setSerialJtaTransactions(true);
        atomikosProperties38.setThreadedTwoPhaseCommit(true);
        java.lang.Class<?> wildcardClass52 = atomikosProperties38.getClass();
        boolean boolean53 = properties24.contains((java.lang.Object) atomikosProperties38);
        boolean boolean54 = properties9.equals((java.lang.Object) properties24);
        java.util.Properties properties55 = new java.util.Properties();
        java.lang.Object obj57 = properties55.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration58 = properties55.elements();
        boolean boolean59 = properties55.isEmpty();
        java.util.Set<java.lang.Object> objSet60 = properties55.keySet();
        java.util.Enumeration<java.lang.Object> objEnumeration61 = properties55.keys();
        java.lang.String str63 = properties55.getProperty("hi!");
        java.lang.String str65 = properties55.getProperty("");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties66 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties66.setSerialJtaTransactions(false);
        atomikosProperties66.setThreadedTwoPhaseCommit(true);
        atomikosProperties66.setEnableLogging(false);
        boolean boolean73 = properties55.containsKey((java.lang.Object) atomikosProperties66);
        java.lang.Object obj76 = properties55.setProperty("hi!", "");
        int int77 = properties55.size();
        java.util.Properties properties78 = new java.util.Properties();
        java.lang.Object obj80 = properties78.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration81 = properties78.elements();
        boolean boolean82 = properties78.isEmpty();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet83 = properties78.entrySet();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties85 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties85.setSerialJtaTransactions(false);
        atomikosProperties85.setThreadedTwoPhaseCommit(true);
        atomikosProperties85.setMaxTimeout((long) '#');
        boolean boolean92 = atomikosProperties85.isForceShutdownOnVmExit();
        java.lang.Object obj93 = properties78.put((java.lang.Object) (short) 1, (java.lang.Object) atomikosProperties85);
        boolean boolean94 = atomikosProperties85.isSerialJtaTransactions();
        boolean boolean95 = properties55.containsValue((java.lang.Object) boolean94);
        java.util.Set<java.lang.Object> objSet96 = properties55.keySet();
        int int97 = properties55.size();
        java.lang.Object obj98 = properties9.get((java.lang.Object) properties55);
        java.util.Properties properties99 = new java.util.Properties(properties9);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNotNull(properties8);
        org.junit.Assert.assertNotNull(properties9);
        org.junit.Assert.assertNull(obj13);
        org.junit.Assert.assertNotNull(objEnumeration14);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0);
        org.junit.Assert.assertNull(obj18);
        org.junit.Assert.assertNotNull(objEnumeration19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNotNull(objSet21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(objEnumeration23);
        org.junit.Assert.assertNull(obj26);
        org.junit.Assert.assertNotNull(objEnumeration27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNotNull(objSet29);
        org.junit.Assert.assertNotNull(objEnumeration30);
        org.junit.Assert.assertNotNull(objEntrySet31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(obj34);
        org.junit.Assert.assertEquals(obj34.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj34), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj34), "{}");
        org.junit.Assert.assertNotNull(objCollection35);
        org.junit.Assert.assertNotNull(objCollection36);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "{}" + "'", str37, "{}");
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertNotNull(wildcardClass52);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertNull(obj57);
        org.junit.Assert.assertNotNull(objEnumeration58);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertNotNull(objSet60);
        org.junit.Assert.assertNotNull(objEnumeration61);
        org.junit.Assert.assertNull(str63);
        org.junit.Assert.assertNull(str65);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertNull(obj76);
        org.junit.Assert.assertTrue("'" + int77 + "' != '" + 1 + "'", int77 == 1);
        org.junit.Assert.assertNull(obj80);
        org.junit.Assert.assertNotNull(objEnumeration81);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + true + "'", boolean82 == true);
        org.junit.Assert.assertNotNull(objEntrySet83);
        org.junit.Assert.assertTrue("'" + boolean92 + "' != '" + false + "'", boolean92 == false);
        org.junit.Assert.assertNull(obj93);
        org.junit.Assert.assertTrue("'" + boolean94 + "' != '" + false + "'", boolean94 == false);
        org.junit.Assert.assertTrue("'" + boolean95 + "' != '" + false + "'", boolean95 == false);
        org.junit.Assert.assertNotNull(objSet96);
        org.junit.Assert.assertTrue("'" + int97 + "' != '" + 1 + "'", int97 == 1);
        org.junit.Assert.assertNull(obj98);
    }

    @Test
    public void test5089() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test5089");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration3 = properties0.elements();
        boolean boolean4 = properties0.isEmpty();
        java.util.Set<java.lang.Object> objSet5 = properties0.keySet();
        boolean boolean7 = properties0.containsKey((java.lang.Object) (-1.0f));
        java.util.Collection<java.lang.Object> objCollection8 = properties0.values();
        java.lang.Object obj9 = properties0.clone();
        java.util.Properties properties10 = new java.util.Properties();
        java.lang.Object obj12 = properties10.remove((java.lang.Object) 0.0d);
        boolean boolean13 = properties10.isEmpty();
        java.lang.Object obj16 = properties10.setProperty("", "hi!");
        java.util.Properties properties17 = new java.util.Properties();
        java.lang.Object obj19 = properties17.remove((java.lang.Object) 0.0d);
        java.util.Properties properties20 = new java.util.Properties();
        java.util.Collection<java.lang.Object> objCollection21 = properties20.values();
        java.util.Enumeration<java.lang.Object> objEnumeration22 = properties20.keys();
        java.util.Properties properties23 = new java.util.Properties();
        java.lang.Object obj25 = properties23.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration26 = properties23.elements();
        boolean boolean27 = properties23.isEmpty();
        java.util.Set<java.lang.Object> objSet28 = properties23.keySet();
        java.util.Enumeration<java.lang.Object> objEnumeration29 = properties23.keys();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet30 = properties23.entrySet();
        java.lang.Object obj31 = properties17.put((java.lang.Object) properties20, (java.lang.Object) properties23);
        java.lang.String str33 = properties20.getProperty("{=hi!}");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties34 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties34.setSerialJtaTransactions(false);
        atomikosProperties34.setThreadedTwoPhaseCommit(true);
        atomikosProperties34.setThreadedTwoPhaseCommit(true);
        long long41 = atomikosProperties34.getMaxTimeout();
        boolean boolean42 = properties20.containsValue((java.lang.Object) atomikosProperties34);
        java.util.Enumeration<java.lang.Object> objEnumeration43 = properties20.elements();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties44 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties44.setSerialJtaTransactions(false);
        boolean boolean47 = atomikosProperties44.isThreadedTwoPhaseCommit();
        atomikosProperties44.setThreadedTwoPhaseCommit(false);
        java.lang.Object obj50 = properties10.putIfAbsent((java.lang.Object) properties20, (java.lang.Object) atomikosProperties44);
        boolean boolean51 = properties0.contains((java.lang.Object) properties20);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties52 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties52.setSerialJtaTransactions(false);
        atomikosProperties52.setThreadedTwoPhaseCommit(true);
        atomikosProperties52.setMaxTimeout((long) '#');
        boolean boolean59 = atomikosProperties52.isEnableLogging();
        atomikosProperties52.setCheckpointInterval((long) (byte) -1);
        atomikosProperties52.setMaxActives((int) (byte) 100);
        atomikosProperties52.setForceShutdownOnVmExit(false);
        java.util.Properties properties66 = new java.util.Properties();
        java.lang.Object obj68 = properties66.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration69 = properties66.elements();
        int int70 = properties66.size();
        java.util.Properties properties71 = new java.util.Properties();
        java.lang.Object obj73 = properties71.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration74 = properties71.elements();
        boolean boolean75 = properties71.isEmpty();
        java.util.Set<java.lang.Object> objSet76 = properties71.keySet();
        boolean boolean77 = properties66.containsKey((java.lang.Object) objSet76);
        java.util.Enumeration<java.lang.Object> objEnumeration78 = properties66.keys();
        java.util.Properties properties79 = new java.util.Properties();
        java.lang.Object obj81 = properties79.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration82 = properties79.elements();
        boolean boolean83 = properties79.isEmpty();
        java.util.Set<java.lang.Object> objSet84 = properties79.keySet();
        java.util.Enumeration<java.lang.Object> objEnumeration85 = properties79.keys();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet86 = properties79.entrySet();
        boolean boolean88 = properties66.remove((java.lang.Object) properties79, (java.lang.Object) 1.0f);
        java.lang.Object obj89 = properties79.clone();
        java.util.Collection<java.lang.Object> objCollection90 = properties79.values();
        java.util.Collection<java.lang.Object> objCollection91 = properties79.values();
        java.lang.Object obj92 = properties20.replace((java.lang.Object) false, (java.lang.Object) objCollection91);
        java.io.Writer writer93 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties20.store(writer93, "{{{}={}}={}}");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(objEnumeration3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(objSet5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(objCollection8);
        org.junit.Assert.assertNotNull(obj9);
        org.junit.Assert.assertEquals(obj9.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj9), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj9), "{}");
        org.junit.Assert.assertNull(obj12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNull(obj16);
        org.junit.Assert.assertNull(obj19);
        org.junit.Assert.assertNotNull(objCollection21);
        org.junit.Assert.assertNotNull(objEnumeration22);
        org.junit.Assert.assertNull(obj25);
        org.junit.Assert.assertNotNull(objEnumeration26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNotNull(objSet28);
        org.junit.Assert.assertNotNull(objEnumeration29);
        org.junit.Assert.assertNotNull(objEntrySet30);
        org.junit.Assert.assertNull(obj31);
        org.junit.Assert.assertNull(str33);
        org.junit.Assert.assertTrue("'" + long41 + "' != '" + 300000L + "'", long41 == 300000L);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(objEnumeration43);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNull(obj50);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertNull(obj68);
        org.junit.Assert.assertNotNull(objEnumeration69);
        org.junit.Assert.assertTrue("'" + int70 + "' != '" + 0 + "'", int70 == 0);
        org.junit.Assert.assertNull(obj73);
        org.junit.Assert.assertNotNull(objEnumeration74);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + true + "'", boolean75 == true);
        org.junit.Assert.assertNotNull(objSet76);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + false + "'", boolean77 == false);
        org.junit.Assert.assertNotNull(objEnumeration78);
        org.junit.Assert.assertNull(obj81);
        org.junit.Assert.assertNotNull(objEnumeration82);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + true + "'", boolean83 == true);
        org.junit.Assert.assertNotNull(objSet84);
        org.junit.Assert.assertNotNull(objEnumeration85);
        org.junit.Assert.assertNotNull(objEntrySet86);
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + false + "'", boolean88 == false);
        org.junit.Assert.assertNotNull(obj89);
        org.junit.Assert.assertEquals(obj89.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj89), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj89), "{}");
        org.junit.Assert.assertNotNull(objCollection90);
        org.junit.Assert.assertNotNull(objCollection91);
        org.junit.Assert.assertNull(obj92);
    }

    @Test
    public void test5090() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test5090");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration3 = properties0.elements();
        boolean boolean4 = properties0.isEmpty();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet5 = properties0.entrySet();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties7 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties7.setSerialJtaTransactions(false);
        atomikosProperties7.setThreadedTwoPhaseCommit(true);
        atomikosProperties7.setMaxTimeout((long) '#');
        boolean boolean14 = atomikosProperties7.isForceShutdownOnVmExit();
        java.lang.Object obj15 = properties0.put((java.lang.Object) (short) 1, (java.lang.Object) atomikosProperties7);
        long long16 = atomikosProperties7.getDefaultJtaTimeout();
        atomikosProperties7.setLogBaseDir("{}");
        java.util.Properties properties19 = atomikosProperties7.asProperties();
        java.util.Properties properties20 = new java.util.Properties();
        java.lang.Object obj22 = properties20.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration23 = properties20.elements();
        int int24 = properties20.size();
        java.util.Properties properties25 = new java.util.Properties();
        java.lang.Object obj27 = properties25.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration28 = properties25.elements();
        boolean boolean29 = properties25.isEmpty();
        java.util.Set<java.lang.Object> objSet30 = properties25.keySet();
        boolean boolean31 = properties20.containsKey((java.lang.Object) objSet30);
        java.util.Enumeration<java.lang.Object> objEnumeration32 = properties20.keys();
        java.util.Properties properties33 = new java.util.Properties();
        java.lang.Object obj35 = properties33.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration36 = properties33.elements();
        boolean boolean37 = properties33.isEmpty();
        java.util.Set<java.lang.Object> objSet38 = properties33.keySet();
        java.util.Enumeration<java.lang.Object> objEnumeration39 = properties33.keys();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet40 = properties33.entrySet();
        boolean boolean42 = properties20.remove((java.lang.Object) properties33, (java.lang.Object) 1.0f);
        java.util.Enumeration<?> wildcardEnumeration43 = properties33.propertyNames();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties44 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties44.setSerialJtaTransactions(false);
        atomikosProperties44.setThreadedTwoPhaseCommit(true);
        atomikosProperties44.setThreadedTwoPhaseCommit(true);
        java.util.Properties properties51 = atomikosProperties44.asProperties();
        java.util.Set<java.lang.String> strSet52 = properties51.stringPropertyNames();
        java.util.Set<java.lang.Object> objSet53 = properties51.keySet();
        java.util.Properties properties54 = new java.util.Properties();
        java.lang.Object obj56 = properties54.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration57 = properties54.elements();
        boolean boolean58 = properties54.isEmpty();
        java.util.Set<java.lang.Object> objSet59 = properties54.keySet();
        boolean boolean60 = properties54.isEmpty();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet61 = properties54.entrySet();
        java.util.Properties properties62 = new java.util.Properties();
        java.lang.Object obj64 = properties62.remove((java.lang.Object) 0.0d);
        boolean boolean65 = properties62.isEmpty();
        java.lang.Object obj68 = properties62.setProperty("", "hi!");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties69 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties69.setSerialJtaTransactions(false);
        boolean boolean72 = properties54.remove((java.lang.Object) properties62, (java.lang.Object) atomikosProperties69);
        atomikosProperties69.setSerialJtaTransactions(false);
        java.lang.Object obj75 = properties33.put((java.lang.Object) objSet53, (java.lang.Object) false);
        java.lang.Object obj78 = properties33.setProperty("{=hi!}", "");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties79 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties79.setSerialJtaTransactions(false);
        boolean boolean82 = atomikosProperties79.isSerialJtaTransactions();
        java.lang.String str83 = atomikosProperties79.getService();
        boolean boolean84 = atomikosProperties79.isEnableLogging();
        java.util.Properties properties85 = atomikosProperties79.asProperties();
        atomikosProperties79.setForceShutdownOnVmExit(true);
        atomikosProperties79.setMaxActives((int) (short) -1);
        atomikosProperties79.setMaxTimeout((long) ' ');
        atomikosProperties79.setMaxTimeout((long) (short) 100);
        atomikosProperties79.setLogBaseDir("{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=100, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=35, com.atomikos.icatch.threaded_2pc=true, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
        java.lang.Object obj96 = properties19.replace((java.lang.Object) "", (java.lang.Object) "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=100, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=35, com.atomikos.icatch.threaded_2pc=true, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Class<?> wildcardClass97 = obj96.getClass();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(objEnumeration3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(objEntrySet5);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNull(obj15);
        org.junit.Assert.assertTrue("'" + long16 + "' != '" + 10000L + "'", long16 == 10000L);
        org.junit.Assert.assertNotNull(properties19);
        org.junit.Assert.assertNull(obj22);
        org.junit.Assert.assertNotNull(objEnumeration23);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 0 + "'", int24 == 0);
        org.junit.Assert.assertNull(obj27);
        org.junit.Assert.assertNotNull(objEnumeration28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNotNull(objSet30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(objEnumeration32);
        org.junit.Assert.assertNull(obj35);
        org.junit.Assert.assertNotNull(objEnumeration36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertNotNull(objSet38);
        org.junit.Assert.assertNotNull(objEnumeration39);
        org.junit.Assert.assertNotNull(objEntrySet40);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(wildcardEnumeration43);
        org.junit.Assert.assertNotNull(properties51);
        org.junit.Assert.assertNotNull(strSet52);
        org.junit.Assert.assertNotNull(objSet53);
        org.junit.Assert.assertNull(obj56);
        org.junit.Assert.assertNotNull(objEnumeration57);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertNotNull(objSet59);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertNotNull(objEntrySet61);
        org.junit.Assert.assertNull(obj64);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65 == true);
        org.junit.Assert.assertNull(obj68);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertNull(obj75);
        org.junit.Assert.assertNull(obj78);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + false + "'", boolean82 == false);
        org.junit.Assert.assertNull(str83);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + true + "'", boolean84 == true);
        org.junit.Assert.assertNotNull(properties85);
        org.junit.Assert.assertNull(obj96);
    }

    @Test
    public void test5091() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test5091");
        java.util.Properties properties0 = new java.util.Properties();
        java.util.Properties properties1 = new java.util.Properties();
        java.lang.Object obj3 = properties1.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet4 = properties1.stringPropertyNames();
        boolean boolean5 = properties0.containsValue((java.lang.Object) properties1);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties6 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties6.setSerialJtaTransactions(false);
        boolean boolean9 = atomikosProperties6.isSerialJtaTransactions();
        boolean boolean10 = atomikosProperties6.isEnableLogging();
        atomikosProperties6.setSerialJtaTransactions(true);
        java.util.Properties properties13 = new java.util.Properties();
        java.lang.Object obj15 = properties13.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration16 = properties13.elements();
        int int17 = properties13.size();
        java.util.Properties properties18 = new java.util.Properties();
        java.lang.Object obj20 = properties18.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration21 = properties18.elements();
        boolean boolean22 = properties18.isEmpty();
        java.util.Set<java.lang.Object> objSet23 = properties18.keySet();
        boolean boolean24 = properties13.containsKey((java.lang.Object) objSet23);
        java.util.Enumeration<java.lang.Object> objEnumeration25 = properties13.keys();
        java.util.Properties properties26 = new java.util.Properties();
        java.lang.Object obj28 = properties26.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration29 = properties26.elements();
        boolean boolean30 = properties26.isEmpty();
        java.util.Set<java.lang.Object> objSet31 = properties26.keySet();
        java.util.Enumeration<java.lang.Object> objEnumeration32 = properties26.keys();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet33 = properties26.entrySet();
        boolean boolean35 = properties13.remove((java.lang.Object) properties26, (java.lang.Object) 1.0f);
        java.util.Enumeration<?> wildcardEnumeration36 = properties26.propertyNames();
        java.util.Set<java.lang.Object> objSet37 = properties26.keySet();
        boolean boolean38 = properties0.remove((java.lang.Object) atomikosProperties6, (java.lang.Object) objSet37);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties39 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties39.setSerialJtaTransactions(false);
        atomikosProperties39.setThreadedTwoPhaseCommit(true);
        atomikosProperties39.setThreadedTwoPhaseCommit(true);
        java.util.Properties properties46 = atomikosProperties39.asProperties();
        java.util.Set<java.lang.String> strSet47 = properties46.stringPropertyNames();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties48 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties48.setSerialJtaTransactions(false);
        atomikosProperties48.setThreadedTwoPhaseCommit(true);
        atomikosProperties48.setMaxTimeout((long) '#');
        boolean boolean55 = atomikosProperties48.isEnableLogging();
        int int56 = atomikosProperties48.getMaxActives();
        java.util.Properties properties57 = new java.util.Properties();
        java.lang.Object obj59 = properties57.remove((java.lang.Object) 0.0d);
        boolean boolean60 = properties57.isEmpty();
        java.lang.Object obj63 = properties57.setProperty("", "hi!");
        java.util.Set<java.lang.String> strSet64 = properties57.stringPropertyNames();
        java.lang.Object obj65 = properties46.putIfAbsent((java.lang.Object) atomikosProperties48, (java.lang.Object) strSet64);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj66 = properties0.remove(obj65);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(obj3);
        org.junit.Assert.assertNotNull(strSet4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNull(obj15);
        org.junit.Assert.assertNotNull(objEnumeration16);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 0 + "'", int17 == 0);
        org.junit.Assert.assertNull(obj20);
        org.junit.Assert.assertNotNull(objEnumeration21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNotNull(objSet23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(objEnumeration25);
        org.junit.Assert.assertNull(obj28);
        org.junit.Assert.assertNotNull(objEnumeration29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNotNull(objSet31);
        org.junit.Assert.assertNotNull(objEnumeration32);
        org.junit.Assert.assertNotNull(objEntrySet33);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(wildcardEnumeration36);
        org.junit.Assert.assertNotNull(objSet37);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(properties46);
        org.junit.Assert.assertNotNull(strSet47);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + 50 + "'", int56 == 50);
        org.junit.Assert.assertNull(obj59);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertNull(obj63);
        org.junit.Assert.assertNotNull(strSet64);
        org.junit.Assert.assertNull(obj65);
    }

    @Test
    public void test5092() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test5092");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setSerialJtaTransactions(false);
        atomikosProperties0.setThreadedTwoPhaseCommit(true);
        boolean boolean5 = atomikosProperties0.isForceShutdownOnVmExit();
        java.lang.String str6 = atomikosProperties0.getTransactionManagerUniqueName();
        java.lang.String str7 = atomikosProperties0.getService();
        atomikosProperties0.setCheckpointInterval(0L);
        atomikosProperties0.setSerialJtaTransactions(false);
        long long12 = atomikosProperties0.getMaxTimeout();
        long long13 = atomikosProperties0.getMaxTimeout();
        java.lang.String str14 = atomikosProperties0.getTransactionManagerUniqueName();
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertTrue("'" + long12 + "' != '" + 300000L + "'", long12 == 300000L);
        org.junit.Assert.assertTrue("'" + long13 + "' != '" + 300000L + "'", long13 == 300000L);
        org.junit.Assert.assertNull(str14);
    }

    @Test
    public void test5093() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test5093");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration3 = properties0.elements();
        boolean boolean4 = properties0.isEmpty();
        java.util.Set<java.lang.Object> objSet5 = properties0.keySet();
        boolean boolean6 = properties0.isEmpty();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet7 = properties0.entrySet();
        java.util.Properties properties8 = new java.util.Properties();
        java.lang.Object obj10 = properties8.remove((java.lang.Object) 0.0d);
        boolean boolean11 = properties8.isEmpty();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties12 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        boolean boolean13 = properties8.containsValue((java.lang.Object) atomikosProperties12);
        java.util.Properties properties14 = new java.util.Properties();
        java.lang.Object obj16 = properties14.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration17 = properties14.elements();
        int int18 = properties14.size();
        java.util.Properties properties19 = new java.util.Properties(properties14);
        java.util.Set<java.lang.String> strSet20 = properties14.stringPropertyNames();
        java.util.Set<java.lang.String> strSet21 = properties14.stringPropertyNames();
        java.lang.Object obj22 = properties0.getOrDefault((java.lang.Object) properties8, (java.lang.Object) properties14);
        java.util.Properties properties23 = new java.util.Properties();
        java.util.Collection<java.lang.Object> objCollection24 = properties23.values();
        java.util.Collection<java.lang.Object> objCollection25 = properties23.values();
        boolean boolean26 = properties23.isEmpty();
        properties0.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties23);
        java.io.PrintStream printStream28 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties0.list(printStream28);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(objEnumeration3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(objSet5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(objEntrySet7);
        org.junit.Assert.assertNull(obj10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNull(obj16);
        org.junit.Assert.assertNotNull(objEnumeration17);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 0 + "'", int18 == 0);
        org.junit.Assert.assertNotNull(strSet20);
        org.junit.Assert.assertNotNull(strSet21);
        org.junit.Assert.assertNotNull(obj22);
        org.junit.Assert.assertEquals(obj22.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj22), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj22), "{}");
        org.junit.Assert.assertNotNull(objCollection24);
        org.junit.Assert.assertNotNull(objCollection25);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
    }

    @Test
    public void test5094() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test5094");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setSerialJtaTransactions(false);
        boolean boolean3 = atomikosProperties0.isSerialJtaTransactions();
        atomikosProperties0.setCheckpointInterval((long) 10);
        boolean boolean6 = atomikosProperties0.isSerialJtaTransactions();
        boolean boolean7 = atomikosProperties0.isForceShutdownOnVmExit();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
    }

    @Test
    public void test5095() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test5095");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setSerialJtaTransactions(false);
        atomikosProperties0.setThreadedTwoPhaseCommit(true);
        atomikosProperties0.setMaxTimeout((long) '#');
        boolean boolean7 = atomikosProperties0.isEnableLogging();
        atomikosProperties0.setMaxActives((int) '#');
        atomikosProperties0.setSerialJtaTransactions(true);
        java.lang.String str12 = atomikosProperties0.getLogBaseName();
        atomikosProperties0.setSerialJtaTransactions(false);
        atomikosProperties0.setLogBaseDir("{{{}={}}={}}");
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "tmlog" + "'", str12, "tmlog");
    }

    @Test
    public void test5096() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test5096");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setSerialJtaTransactions(false);
        atomikosProperties0.setThreadedTwoPhaseCommit(true);
        atomikosProperties0.setSerialJtaTransactions(false);
        java.lang.String str7 = atomikosProperties0.getService();
        java.util.Properties properties8 = atomikosProperties0.asProperties();
        int int9 = properties8.size();
        java.util.Properties properties10 = new java.util.Properties();
        java.util.Collection<java.lang.Object> objCollection11 = properties10.values();
        int int12 = properties10.size();
        java.util.Properties properties13 = new java.util.Properties();
        java.lang.Object obj15 = properties13.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration16 = properties13.elements();
        boolean boolean17 = properties13.isEmpty();
        java.util.Set<java.lang.Object> objSet18 = properties13.keySet();
        java.util.Enumeration<java.lang.Object> objEnumeration19 = properties13.keys();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet20 = properties13.entrySet();
        java.util.Properties properties22 = new java.util.Properties();
        java.lang.Object obj24 = properties22.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration25 = properties22.elements();
        boolean boolean26 = properties22.isEmpty();
        java.util.Set<java.lang.Object> objSet27 = properties22.keySet();
        boolean boolean28 = properties22.isEmpty();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties29 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties29.setSerialJtaTransactions(false);
        atomikosProperties29.setThreadedTwoPhaseCommit(true);
        atomikosProperties29.setMaxTimeout((long) '#');
        boolean boolean36 = atomikosProperties29.isEnableLogging();
        atomikosProperties29.setCheckpointInterval((long) (byte) -1);
        java.util.Properties properties39 = new java.util.Properties();
        java.util.Properties properties40 = new java.util.Properties();
        java.lang.Object obj42 = properties40.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet43 = properties40.stringPropertyNames();
        boolean boolean44 = properties39.containsValue((java.lang.Object) properties40);
        java.util.Collection<java.lang.Object> objCollection45 = properties39.values();
        java.lang.Object obj46 = properties22.replace((java.lang.Object) atomikosProperties29, (java.lang.Object) objCollection45);
        boolean boolean48 = properties13.replace((java.lang.Object) 100.0d, (java.lang.Object) objCollection45, (java.lang.Object) 10.0d);
        boolean boolean49 = properties10.equals((java.lang.Object) properties13);
        java.util.Properties properties50 = new java.util.Properties();
        java.lang.Object obj52 = properties50.remove((java.lang.Object) 0.0d);
        java.util.Collection<java.lang.Object> objCollection53 = properties50.values();
        java.util.Properties properties54 = new java.util.Properties(properties50);
        java.lang.Object obj55 = properties8.put((java.lang.Object) boolean49, (java.lang.Object) properties54);
        java.util.Enumeration<?> wildcardEnumeration56 = properties54.propertyNames();
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNotNull(properties8);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 9 + "'", int9 == 9);
        org.junit.Assert.assertNotNull(objCollection11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertNull(obj15);
        org.junit.Assert.assertNotNull(objEnumeration16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(objSet18);
        org.junit.Assert.assertNotNull(objEnumeration19);
        org.junit.Assert.assertNotNull(objEntrySet20);
        org.junit.Assert.assertNull(obj24);
        org.junit.Assert.assertNotNull(objEnumeration25);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertNotNull(objSet27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNull(obj42);
        org.junit.Assert.assertNotNull(strSet43);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(objCollection45);
        org.junit.Assert.assertNull(obj46);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertNull(obj52);
        org.junit.Assert.assertNotNull(objCollection53);
        org.junit.Assert.assertNull(obj55);
        org.junit.Assert.assertNotNull(wildcardEnumeration56);
    }

    @Test
    public void test5097() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test5097");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        boolean boolean4 = properties0.containsValue((java.lang.Object) "hi!");
        java.lang.Object obj7 = properties0.put((java.lang.Object) (byte) -1, (java.lang.Object) 100L);
        java.util.Properties properties8 = new java.util.Properties();
        java.util.Properties properties9 = new java.util.Properties();
        java.lang.Object obj11 = properties9.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet12 = properties9.stringPropertyNames();
        boolean boolean13 = properties8.containsValue((java.lang.Object) properties9);
        java.util.Collection<java.lang.Object> objCollection14 = properties8.values();
        java.util.Properties properties16 = new java.util.Properties();
        java.lang.Object obj18 = properties16.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration19 = properties16.elements();
        boolean boolean20 = properties16.isEmpty();
        java.util.Set<java.lang.Object> objSet21 = properties16.keySet();
        java.lang.Object obj22 = properties8.putIfAbsent((java.lang.Object) "hi!", (java.lang.Object) objSet21);
        java.util.Set<java.lang.Object> objSet23 = properties8.keySet();
        boolean boolean24 = properties0.containsKey((java.lang.Object) properties8);
        java.util.Enumeration<java.lang.Object> objEnumeration25 = properties8.elements();
        java.lang.Object obj28 = properties8.setProperty("", "");
        java.lang.Object obj29 = properties8.clone();
        java.io.InputStream inputStream30 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties8.loadFromXML(inputStream30);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNull(obj7);
        org.junit.Assert.assertNull(obj11);
        org.junit.Assert.assertNotNull(strSet12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(objCollection14);
        org.junit.Assert.assertNull(obj18);
        org.junit.Assert.assertNotNull(objEnumeration19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNotNull(objSet21);
        org.junit.Assert.assertNull(obj22);
        org.junit.Assert.assertNotNull(objSet23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(objEnumeration25);
        org.junit.Assert.assertNull(obj28);
        org.junit.Assert.assertNotNull(obj29);
// flaky:         org.junit.Assert.assertEquals(obj29.toString(), "{hi!=[], =}");
// flaky:         org.junit.Assert.assertEquals(java.lang.String.valueOf(obj29), "{hi!=[], =}");
// flaky:         org.junit.Assert.assertEquals(java.util.Objects.toString(obj29), "{hi!=[], =}");
    }

    @Test
    public void test5098() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test5098");
        java.util.Properties properties0 = new java.util.Properties();
        java.util.Properties properties1 = new java.util.Properties();
        java.lang.Object obj3 = properties1.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet4 = properties1.stringPropertyNames();
        boolean boolean5 = properties0.containsValue((java.lang.Object) properties1);
        java.util.Properties properties6 = new java.util.Properties();
        java.lang.Object obj8 = properties6.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration9 = properties6.elements();
        boolean boolean10 = properties6.isEmpty();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet11 = properties6.entrySet();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties13 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties13.setSerialJtaTransactions(false);
        atomikosProperties13.setThreadedTwoPhaseCommit(true);
        atomikosProperties13.setMaxTimeout((long) '#');
        boolean boolean20 = atomikosProperties13.isForceShutdownOnVmExit();
        java.lang.Object obj21 = properties6.put((java.lang.Object) (short) 1, (java.lang.Object) atomikosProperties13);
        atomikosProperties13.setForceShutdownOnVmExit(true);
        java.util.Properties properties24 = atomikosProperties13.asProperties();
        java.lang.String str25 = atomikosProperties13.getService();
        atomikosProperties13.setLogBaseName("{{}=tmlog}");
        boolean boolean28 = properties0.equals((java.lang.Object) atomikosProperties13);
        boolean boolean29 = properties0.isEmpty();
        java.util.Set<java.lang.String> strSet30 = properties0.stringPropertyNames();
        org.junit.Assert.assertNull(obj3);
        org.junit.Assert.assertNotNull(strSet4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNull(obj8);
        org.junit.Assert.assertNotNull(objEnumeration9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(objEntrySet11);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNull(obj21);
        org.junit.Assert.assertNotNull(properties24);
        org.junit.Assert.assertNull(str25);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNotNull(strSet30);
    }

    @Test
    public void test5099() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test5099");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet3 = properties0.stringPropertyNames();
        java.util.Properties properties4 = new java.util.Properties();
        java.util.Properties properties5 = new java.util.Properties();
        java.lang.Object obj7 = properties5.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet8 = properties5.stringPropertyNames();
        boolean boolean9 = properties4.containsValue((java.lang.Object) properties5);
        java.util.Collection<java.lang.Object> objCollection10 = properties4.values();
        java.util.Enumeration<?> wildcardEnumeration11 = properties4.propertyNames();
        java.lang.Object obj13 = properties0.put((java.lang.Object) wildcardEnumeration11, (java.lang.Object) 10.0d);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties14 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties14.setSerialJtaTransactions(false);
        atomikosProperties14.setThreadedTwoPhaseCommit(true);
        atomikosProperties14.setMaxTimeout((long) '#');
        boolean boolean21 = atomikosProperties14.isForceShutdownOnVmExit();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties22 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties22.setSerialJtaTransactions(false);
        atomikosProperties22.setThreadedTwoPhaseCommit(true);
        atomikosProperties22.setThreadedTwoPhaseCommit(true);
        java.lang.Object obj29 = properties0.getOrDefault((java.lang.Object) boolean21, (java.lang.Object) atomikosProperties22);
        properties0.clear();
        java.lang.String str31 = properties0.toString();
        java.io.Reader reader32 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties0.load(reader32);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(strSet3);
        org.junit.Assert.assertNull(obj7);
        org.junit.Assert.assertNotNull(strSet8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(objCollection10);
        org.junit.Assert.assertNotNull(wildcardEnumeration11);
        org.junit.Assert.assertNull(obj13);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(obj29);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "{}" + "'", str31, "{}");
    }

    @Test
    public void test5100() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test5100");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration3 = properties0.elements();
        boolean boolean4 = properties0.isEmpty();
        java.util.Set<java.lang.Object> objSet5 = properties0.keySet();
        java.lang.Object obj6 = properties0.clone();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties7 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties7.setSerialJtaTransactions(false);
        boolean boolean10 = atomikosProperties7.isSerialJtaTransactions();
        atomikosProperties7.setTransactionManagerUniqueName("hi!");
        java.lang.String str13 = atomikosProperties7.getLogBaseName();
        java.lang.String str14 = atomikosProperties7.getLogBaseName();
        long long15 = atomikosProperties7.getDefaultJtaTimeout();
        atomikosProperties7.setThreadedTwoPhaseCommit(true);
        java.util.Properties properties18 = new java.util.Properties();
        java.lang.Object obj20 = properties18.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration21 = properties18.elements();
        int int22 = properties18.size();
        java.util.Properties properties23 = new java.util.Properties(properties18);
        boolean boolean24 = properties23.isEmpty();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties25 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties25.setSerialJtaTransactions(false);
        atomikosProperties25.setThreadedTwoPhaseCommit(true);
        atomikosProperties25.setMaxTimeout((long) '#');
        boolean boolean32 = atomikosProperties25.isEnableLogging();
        atomikosProperties25.setCheckpointInterval((long) (byte) -1);
        atomikosProperties25.setMaxActives((int) (byte) 100);
        atomikosProperties25.setForceShutdownOnVmExit(false);
        boolean boolean39 = atomikosProperties25.isThreadedTwoPhaseCommit();
        boolean boolean40 = atomikosProperties25.isForceShutdownOnVmExit();
        java.lang.Object obj41 = properties23.remove((java.lang.Object) boolean40);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties42 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties42.setSerialJtaTransactions(false);
        boolean boolean45 = atomikosProperties42.isSerialJtaTransactions();
        atomikosProperties42.setTransactionManagerUniqueName("hi!");
        atomikosProperties42.setForceShutdownOnVmExit(false);
        java.util.Properties properties50 = new java.util.Properties();
        java.lang.Object obj52 = properties50.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration53 = properties50.elements();
        boolean boolean54 = properties50.isEmpty();
        java.util.Set<java.lang.Object> objSet55 = properties50.keySet();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties56 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties56.setSerialJtaTransactions(false);
        atomikosProperties56.setThreadedTwoPhaseCommit(true);
        atomikosProperties56.setThreadedTwoPhaseCommit(true);
        java.util.Properties properties63 = atomikosProperties56.asProperties();
        int int64 = atomikosProperties56.getMaxActives();
        java.util.Properties properties65 = new java.util.Properties();
        java.lang.Object obj67 = properties65.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration68 = properties65.elements();
        boolean boolean69 = properties65.isEmpty();
        java.util.Set<java.lang.Object> objSet70 = properties65.keySet();
        boolean boolean72 = properties65.containsKey((java.lang.Object) (-1.0f));
        java.lang.Object obj73 = properties50.put((java.lang.Object) atomikosProperties56, (java.lang.Object) properties65);
        java.lang.String str74 = properties50.toString();
        boolean boolean75 = properties23.remove((java.lang.Object) false, (java.lang.Object) properties50);
        java.util.Properties properties76 = new java.util.Properties();
        java.lang.Object obj78 = properties76.remove((java.lang.Object) 0.0d);
        boolean boolean80 = properties76.containsValue((java.lang.Object) "hi!");
        java.lang.Object obj83 = properties76.put((java.lang.Object) (byte) -1, (java.lang.Object) 100L);
        java.util.Enumeration<java.lang.Object> objEnumeration84 = properties76.keys();
        java.util.Enumeration<java.lang.Object> objEnumeration85 = properties76.elements();
        java.lang.Object obj86 = properties76.clone();
        boolean boolean87 = properties0.replace((java.lang.Object) true, (java.lang.Object) false, obj86);
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet88 = properties0.entrySet();
        java.lang.String str90 = properties0.getProperty("{{}=tmlog}");
        java.io.OutputStream outputStream91 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties0.storeToXML(outputStream91, "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=100, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=35, com.atomikos.icatch.threaded_2pc=true, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}", "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=false, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, hi!=, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(objEnumeration3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(objSet5);
        org.junit.Assert.assertNotNull(obj6);
        org.junit.Assert.assertEquals(obj6.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj6), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj6), "{}");
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "tmlog" + "'", str13, "tmlog");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "tmlog" + "'", str14, "tmlog");
        org.junit.Assert.assertTrue("'" + long15 + "' != '" + 10000L + "'", long15 == 10000L);
        org.junit.Assert.assertNull(obj20);
        org.junit.Assert.assertNotNull(objEnumeration21);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 0 + "'", int22 == 0);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNull(obj41);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNull(obj52);
        org.junit.Assert.assertNotNull(objEnumeration53);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertNotNull(objSet55);
        org.junit.Assert.assertNotNull(properties63);
        org.junit.Assert.assertTrue("'" + int64 + "' != '" + 50 + "'", int64 == 50);
        org.junit.Assert.assertNull(obj67);
        org.junit.Assert.assertNotNull(objEnumeration68);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + true + "'", boolean69 == true);
        org.junit.Assert.assertNotNull(objSet70);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertNull(obj73);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
        org.junit.Assert.assertNull(obj78);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", boolean80 == false);
        org.junit.Assert.assertNull(obj83);
        org.junit.Assert.assertNotNull(objEnumeration84);
        org.junit.Assert.assertNotNull(objEnumeration85);
        org.junit.Assert.assertNotNull(obj86);
        org.junit.Assert.assertEquals(obj86.toString(), "{-1=100}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj86), "{-1=100}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj86), "{-1=100}");
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + false + "'", boolean87 == false);
        org.junit.Assert.assertNotNull(objEntrySet88);
        org.junit.Assert.assertNull(str90);
    }

    @Test
    public void test5101() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test5101");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration3 = properties0.elements();
        boolean boolean4 = properties0.isEmpty();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet5 = properties0.entrySet();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties7 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties7.setSerialJtaTransactions(false);
        atomikosProperties7.setThreadedTwoPhaseCommit(true);
        atomikosProperties7.setMaxTimeout((long) '#');
        boolean boolean14 = atomikosProperties7.isForceShutdownOnVmExit();
        java.lang.Object obj15 = properties0.put((java.lang.Object) (short) 1, (java.lang.Object) atomikosProperties7);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties16 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties16.setSerialJtaTransactions(false);
        boolean boolean19 = atomikosProperties16.isSerialJtaTransactions();
        atomikosProperties16.setTransactionManagerUniqueName("hi!");
        atomikosProperties16.setForceShutdownOnVmExit(false);
        atomikosProperties16.setDefaultJtaTimeout((long) (byte) 10);
        java.lang.String str26 = atomikosProperties16.getTransactionManagerUniqueName();
        boolean boolean27 = properties0.contains((java.lang.Object) str26);
        java.util.Set<java.lang.Object> objSet28 = properties0.keySet();
        java.util.Enumeration<java.lang.Object> objEnumeration29 = properties0.elements();
        properties0.clear();
        java.io.PrintStream printStream31 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties0.list(printStream31);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(objEnumeration3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(objEntrySet5);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNull(obj15);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "hi!" + "'", str26, "hi!");
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(objSet28);
        org.junit.Assert.assertNotNull(objEnumeration29);
    }

    @Test
    public void test5102() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test5102");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration3 = properties0.elements();
        int int4 = properties0.size();
        java.util.Properties properties5 = new java.util.Properties();
        java.lang.Object obj7 = properties5.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration8 = properties5.elements();
        boolean boolean9 = properties5.isEmpty();
        java.util.Set<java.lang.Object> objSet10 = properties5.keySet();
        boolean boolean11 = properties0.containsKey((java.lang.Object) objSet10);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties12 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties12.setSerialJtaTransactions(false);
        atomikosProperties12.setThreadedTwoPhaseCommit(true);
        boolean boolean17 = atomikosProperties12.isForceShutdownOnVmExit();
        java.lang.String str18 = atomikosProperties12.getTransactionManagerUniqueName();
        atomikosProperties12.setCheckpointInterval(10000L);
        java.lang.String str21 = atomikosProperties12.getTransactionManagerUniqueName();
        boolean boolean22 = atomikosProperties12.isForceShutdownOnVmExit();
        java.lang.Object obj23 = null;
        java.lang.Object obj24 = properties0.getOrDefault((java.lang.Object) atomikosProperties12, obj23);
        atomikosProperties12.setForceShutdownOnVmExit(false);
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(objEnumeration3);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNull(obj7);
        org.junit.Assert.assertNotNull(objEnumeration8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertNotNull(objSet10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNull(str18);
        org.junit.Assert.assertNull(str21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNull(obj24);
    }

    @Test
    public void test5103() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test5103");
        java.util.Properties properties0 = new java.util.Properties();
        java.util.Collection<java.lang.Object> objCollection1 = properties0.values();
        int int2 = properties0.size();
        java.util.Properties properties3 = new java.util.Properties();
        java.lang.Object obj5 = properties3.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet6 = properties3.stringPropertyNames();
        java.util.Properties properties7 = new java.util.Properties();
        java.util.Properties properties8 = new java.util.Properties();
        java.lang.Object obj10 = properties8.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet11 = properties8.stringPropertyNames();
        boolean boolean12 = properties7.containsValue((java.lang.Object) properties8);
        java.util.Collection<java.lang.Object> objCollection13 = properties7.values();
        java.util.Enumeration<?> wildcardEnumeration14 = properties7.propertyNames();
        java.lang.Object obj16 = properties3.put((java.lang.Object) wildcardEnumeration14, (java.lang.Object) 10.0d);
        java.util.Properties properties17 = new java.util.Properties();
        java.lang.Object obj19 = properties17.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration20 = properties17.elements();
        boolean boolean21 = properties17.isEmpty();
        java.util.Set<java.lang.Object> objSet22 = properties17.keySet();
        boolean boolean23 = properties17.isEmpty();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet24 = properties17.entrySet();
        java.util.Properties properties25 = new java.util.Properties();
        java.lang.Object obj27 = properties25.remove((java.lang.Object) 0.0d);
        boolean boolean28 = properties25.isEmpty();
        java.lang.Object obj31 = properties25.setProperty("", "hi!");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties32 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties32.setSerialJtaTransactions(false);
        boolean boolean35 = properties17.remove((java.lang.Object) properties25, (java.lang.Object) atomikosProperties32);
        java.util.Properties properties36 = new java.util.Properties(properties25);
        int int37 = properties36.size();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties39 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties39.setSerialJtaTransactions(false);
        boolean boolean42 = atomikosProperties39.isSerialJtaTransactions();
        java.lang.String str43 = atomikosProperties39.getService();
        boolean boolean44 = atomikosProperties39.isEnableLogging();
        java.lang.String str45 = atomikosProperties39.getTransactionManagerUniqueName();
        boolean boolean46 = properties36.remove((java.lang.Object) (byte) 1, (java.lang.Object) atomikosProperties39);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties47 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties47.setSerialJtaTransactions(false);
        atomikosProperties47.setThreadedTwoPhaseCommit(true);
        atomikosProperties47.setEnableLogging(false);
        boolean boolean54 = atomikosProperties47.isSerialJtaTransactions();
        int int55 = atomikosProperties47.getMaxActives();
        boolean boolean56 = atomikosProperties47.isSerialJtaTransactions();
        boolean boolean57 = properties3.remove((java.lang.Object) properties36, (java.lang.Object) boolean56);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties58 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties58.setSerialJtaTransactions(false);
        atomikosProperties58.setThreadedTwoPhaseCommit(true);
        atomikosProperties58.setMaxTimeout((long) '#');
        boolean boolean65 = atomikosProperties58.isEnableLogging();
        atomikosProperties58.setCheckpointInterval((long) 100);
        java.lang.String str68 = atomikosProperties58.getTransactionManagerUniqueName();
        boolean boolean69 = properties36.contains((java.lang.Object) atomikosProperties58);
        boolean boolean70 = properties0.equals((java.lang.Object) boolean69);
        java.util.Properties properties71 = new java.util.Properties();
        java.lang.Object obj73 = properties71.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration74 = properties71.elements();
        boolean boolean75 = properties71.isEmpty();
        java.util.Set<java.lang.Object> objSet76 = properties71.keySet();
        boolean boolean77 = properties71.isEmpty();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet78 = properties71.entrySet();
        java.util.Properties properties79 = new java.util.Properties();
        java.lang.Object obj81 = properties79.remove((java.lang.Object) 0.0d);
        boolean boolean82 = properties79.isEmpty();
        java.lang.Object obj85 = properties79.setProperty("", "hi!");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties86 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties86.setSerialJtaTransactions(false);
        boolean boolean89 = properties71.remove((java.lang.Object) properties79, (java.lang.Object) atomikosProperties86);
        properties0.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties71);
        java.util.Properties properties91 = new java.util.Properties(properties0);
        java.io.InputStream inputStream92 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties0.loadFromXML(inputStream92);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(objCollection1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertNull(obj5);
        org.junit.Assert.assertNotNull(strSet6);
        org.junit.Assert.assertNull(obj10);
        org.junit.Assert.assertNotNull(strSet11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(objCollection13);
        org.junit.Assert.assertNotNull(wildcardEnumeration14);
        org.junit.Assert.assertNull(obj16);
        org.junit.Assert.assertNull(obj19);
        org.junit.Assert.assertNotNull(objEnumeration20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(objSet22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNotNull(objEntrySet24);
        org.junit.Assert.assertNull(obj27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNull(obj31);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 0 + "'", int37 == 0);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNull(str43);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertNull(str45);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + 50 + "'", int55 == 50);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65 == true);
        org.junit.Assert.assertNull(str68);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertNull(obj73);
        org.junit.Assert.assertNotNull(objEnumeration74);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + true + "'", boolean75 == true);
        org.junit.Assert.assertNotNull(objSet76);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + true + "'", boolean77 == true);
        org.junit.Assert.assertNotNull(objEntrySet78);
        org.junit.Assert.assertNull(obj81);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + true + "'", boolean82 == true);
        org.junit.Assert.assertNull(obj85);
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + false + "'", boolean89 == false);
    }

    @Test
    public void test5104() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test5104");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setSerialJtaTransactions(false);
        atomikosProperties0.setThreadedTwoPhaseCommit(true);
        atomikosProperties0.setThreadedTwoPhaseCommit(true);
        long long7 = atomikosProperties0.getMaxTimeout();
        java.lang.String str8 = atomikosProperties0.getLogBaseName();
        long long9 = atomikosProperties0.getMaxTimeout();
        long long10 = atomikosProperties0.getCheckpointInterval();
        boolean boolean11 = atomikosProperties0.isEnableLogging();
        java.lang.String str12 = atomikosProperties0.getTransactionManagerUniqueName();
        atomikosProperties0.setLogBaseName("hi!");
        int int15 = atomikosProperties0.getMaxActives();
        boolean boolean16 = atomikosProperties0.isEnableLogging();
        int int17 = atomikosProperties0.getMaxActives();
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + 300000L + "'", long7 == 300000L);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "tmlog" + "'", str8, "tmlog");
        org.junit.Assert.assertTrue("'" + long9 + "' != '" + 300000L + "'", long9 == 300000L);
        org.junit.Assert.assertTrue("'" + long10 + "' != '" + 500L + "'", long10 == 500L);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 50 + "'", int15 == 50);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 50 + "'", int17 == 50);
    }

    @Test
    public void test5105() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test5105");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration3 = properties0.elements();
        boolean boolean4 = properties0.isEmpty();
        java.util.Set<java.lang.Object> objSet5 = properties0.keySet();
        boolean boolean7 = properties0.containsKey((java.lang.Object) (-1.0f));
        java.util.Collection<java.lang.Object> objCollection8 = properties0.values();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet9 = properties0.entrySet();
        int int10 = properties0.size();
        java.util.Set<java.lang.String> strSet11 = properties0.stringPropertyNames();
        java.io.OutputStream outputStream12 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties0.storeToXML(outputStream12, "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=-1, com.atomikos.icatch.serial_jta_transactions=false, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=35, com.atomikos.icatch.threaded_2pc=true, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name={=hi!}}", "{hi!=[]}");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(objEnumeration3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(objSet5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(objCollection8);
        org.junit.Assert.assertNotNull(objEntrySet9);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertNotNull(strSet11);
    }

    @Test
    public void test5106() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test5106");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setSerialJtaTransactions(false);
        boolean boolean3 = atomikosProperties0.isSerialJtaTransactions();
        java.lang.String str4 = atomikosProperties0.getService();
        boolean boolean5 = atomikosProperties0.isEnableLogging();
        java.util.Properties properties6 = atomikosProperties0.asProperties();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties7 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties7.setSerialJtaTransactions(false);
        boolean boolean10 = atomikosProperties7.isSerialJtaTransactions();
        atomikosProperties7.setCheckpointInterval((long) 10);
        atomikosProperties7.setSerialJtaTransactions(true);
        boolean boolean15 = atomikosProperties7.isSerialJtaTransactions();
        java.util.Properties properties16 = atomikosProperties7.asProperties();
        atomikosProperties7.setLogBaseDir("tmlog");
        boolean boolean19 = properties6.equals((java.lang.Object) atomikosProperties7);
        atomikosProperties7.setDefaultJtaTimeout((long) (short) 0);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNotNull(properties6);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(properties16);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
    }

    @Test
    public void test5107() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test5107");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        java.util.Properties properties3 = new java.util.Properties();
        java.util.Collection<java.lang.Object> objCollection4 = properties3.values();
        java.util.Enumeration<java.lang.Object> objEnumeration5 = properties3.keys();
        java.util.Properties properties6 = new java.util.Properties();
        java.lang.Object obj8 = properties6.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration9 = properties6.elements();
        boolean boolean10 = properties6.isEmpty();
        java.util.Set<java.lang.Object> objSet11 = properties6.keySet();
        java.util.Enumeration<java.lang.Object> objEnumeration12 = properties6.keys();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet13 = properties6.entrySet();
        java.lang.Object obj14 = properties0.put((java.lang.Object) properties3, (java.lang.Object) properties6);
        java.util.Properties properties15 = new java.util.Properties();
        java.util.Properties properties16 = new java.util.Properties();
        java.lang.Object obj18 = properties16.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet19 = properties16.stringPropertyNames();
        boolean boolean20 = properties15.containsValue((java.lang.Object) properties16);
        java.util.Collection<java.lang.Object> objCollection21 = properties15.values();
        java.util.Properties properties23 = new java.util.Properties();
        java.lang.Object obj25 = properties23.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration26 = properties23.elements();
        boolean boolean27 = properties23.isEmpty();
        java.util.Set<java.lang.Object> objSet28 = properties23.keySet();
        java.lang.Object obj29 = properties15.putIfAbsent((java.lang.Object) "hi!", (java.lang.Object) objSet28);
        java.util.Set<java.lang.Object> objSet30 = properties15.keySet();
        java.util.Set<java.lang.Object> objSet31 = properties15.keySet();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet32 = properties15.entrySet();
        java.lang.Object obj33 = properties3.remove((java.lang.Object) objEntrySet32);
        java.lang.String str34 = properties3.toString();
        java.util.Properties properties35 = new java.util.Properties();
        java.lang.Object obj37 = properties35.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet38 = properties35.stringPropertyNames();
        java.lang.String str39 = properties35.toString();
        java.lang.String str40 = properties35.toString();
        java.util.Set<java.lang.Object> objSet41 = properties35.keySet();
        java.util.Properties properties42 = new java.util.Properties();
        java.lang.Object obj44 = properties42.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration45 = properties42.elements();
        boolean boolean46 = properties42.isEmpty();
        java.util.Set<java.lang.Object> objSet47 = properties42.keySet();
        boolean boolean48 = properties42.isEmpty();
        java.lang.Object obj49 = properties3.putIfAbsent((java.lang.Object) properties35, (java.lang.Object) boolean48);
        java.util.Set<java.lang.String> strSet50 = properties35.stringPropertyNames();
        java.util.Properties properties51 = new java.util.Properties(properties35);
        java.util.Properties properties52 = new java.util.Properties();
        boolean boolean54 = properties52.contains((java.lang.Object) 100.0d);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties55 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties55.setSerialJtaTransactions(false);
        atomikosProperties55.setThreadedTwoPhaseCommit(true);
        atomikosProperties55.setSerialJtaTransactions(false);
        java.lang.String str62 = atomikosProperties55.getService();
        boolean boolean63 = properties52.containsKey((java.lang.Object) atomikosProperties55);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties64 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties64.setSerialJtaTransactions(false);
        atomikosProperties64.setThreadedTwoPhaseCommit(true);
        atomikosProperties64.setMaxTimeout((long) '#');
        boolean boolean71 = atomikosProperties64.isEnableLogging();
        atomikosProperties64.setCheckpointInterval((long) 100);
        atomikosProperties64.setForceShutdownOnVmExit(false);
        boolean boolean76 = properties52.containsValue((java.lang.Object) atomikosProperties64);
        atomikosProperties64.setService("{=hi!}");
        java.util.Properties properties79 = atomikosProperties64.asProperties();
        java.util.Properties properties80 = new java.util.Properties();
        java.util.Properties properties81 = new java.util.Properties();
        java.lang.Object obj83 = properties81.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet84 = properties81.stringPropertyNames();
        boolean boolean85 = properties80.containsValue((java.lang.Object) properties81);
        java.util.Collection<java.lang.Object> objCollection86 = properties80.values();
        boolean boolean87 = properties80.isEmpty();
        boolean boolean88 = properties79.equals((java.lang.Object) properties80);
        properties35.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties79);
        java.util.Enumeration<java.lang.Object> objEnumeration90 = properties35.elements();
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(objCollection4);
        org.junit.Assert.assertNotNull(objEnumeration5);
        org.junit.Assert.assertNull(obj8);
        org.junit.Assert.assertNotNull(objEnumeration9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(objSet11);
        org.junit.Assert.assertNotNull(objEnumeration12);
        org.junit.Assert.assertNotNull(objEntrySet13);
        org.junit.Assert.assertNull(obj14);
        org.junit.Assert.assertNull(obj18);
        org.junit.Assert.assertNotNull(strSet19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(objCollection21);
        org.junit.Assert.assertNull(obj25);
        org.junit.Assert.assertNotNull(objEnumeration26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNotNull(objSet28);
        org.junit.Assert.assertNull(obj29);
        org.junit.Assert.assertNotNull(objSet30);
        org.junit.Assert.assertNotNull(objSet31);
        org.junit.Assert.assertNotNull(objEntrySet32);
        org.junit.Assert.assertNull(obj33);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "{}" + "'", str34, "{}");
        org.junit.Assert.assertNull(obj37);
        org.junit.Assert.assertNotNull(strSet38);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "{}" + "'", str39, "{}");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "{}" + "'", str40, "{}");
        org.junit.Assert.assertNotNull(objSet41);
        org.junit.Assert.assertNull(obj44);
        org.junit.Assert.assertNotNull(objEnumeration45);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertNotNull(objSet47);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertNull(obj49);
        org.junit.Assert.assertNotNull(strSet50);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertNull(str62);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + true + "'", boolean71 == true);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
        org.junit.Assert.assertNotNull(properties79);
        org.junit.Assert.assertNull(obj83);
        org.junit.Assert.assertNotNull(strSet84);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + false + "'", boolean85 == false);
        org.junit.Assert.assertNotNull(objCollection86);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + true + "'", boolean87 == true);
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + false + "'", boolean88 == false);
        org.junit.Assert.assertNotNull(objEnumeration90);
    }

    @Test
    public void test5108() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test5108");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        java.util.Properties properties3 = new java.util.Properties();
        java.util.Collection<java.lang.Object> objCollection4 = properties3.values();
        java.util.Enumeration<java.lang.Object> objEnumeration5 = properties3.keys();
        java.util.Properties properties6 = new java.util.Properties();
        java.lang.Object obj8 = properties6.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration9 = properties6.elements();
        boolean boolean10 = properties6.isEmpty();
        java.util.Set<java.lang.Object> objSet11 = properties6.keySet();
        java.util.Enumeration<java.lang.Object> objEnumeration12 = properties6.keys();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet13 = properties6.entrySet();
        java.lang.Object obj14 = properties0.put((java.lang.Object) properties3, (java.lang.Object) properties6);
        java.lang.Object obj15 = properties3.clone();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties16 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties16.setSerialJtaTransactions(false);
        atomikosProperties16.setThreadedTwoPhaseCommit(true);
        atomikosProperties16.setMaxTimeout((long) '#');
        boolean boolean23 = atomikosProperties16.isEnableLogging();
        atomikosProperties16.setCheckpointInterval((long) 100);
        atomikosProperties16.setSerialJtaTransactions(true);
        boolean boolean28 = properties3.equals((java.lang.Object) atomikosProperties16);
        boolean boolean29 = properties3.isEmpty();
        java.lang.String str30 = properties3.toString();
        java.io.OutputStream outputStream31 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties3.save(outputStream31, "{true=true}");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(objCollection4);
        org.junit.Assert.assertNotNull(objEnumeration5);
        org.junit.Assert.assertNull(obj8);
        org.junit.Assert.assertNotNull(objEnumeration9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(objSet11);
        org.junit.Assert.assertNotNull(objEnumeration12);
        org.junit.Assert.assertNotNull(objEntrySet13);
        org.junit.Assert.assertNull(obj14);
        org.junit.Assert.assertNotNull(obj15);
        org.junit.Assert.assertEquals(obj15.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj15), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj15), "{}");
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "{}" + "'", str30, "{}");
    }

    @Test
    public void test5109() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test5109");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setSerialJtaTransactions(false);
        atomikosProperties0.setThreadedTwoPhaseCommit(true);
        atomikosProperties0.setSerialJtaTransactions(false);
        java.lang.String str7 = atomikosProperties0.getService();
        atomikosProperties0.setMaxTimeout(1L);
        boolean boolean10 = atomikosProperties0.isThreadedTwoPhaseCommit();
        long long11 = atomikosProperties0.getMaxTimeout();
        atomikosProperties0.setForceShutdownOnVmExit(false);
        long long14 = atomikosProperties0.getCheckpointInterval();
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + long11 + "' != '" + 1L + "'", long11 == 1L);
        org.junit.Assert.assertTrue("'" + long14 + "' != '" + 500L + "'", long14 == 500L);
    }

    @Test
    public void test5110() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test5110");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet3 = properties0.stringPropertyNames();
        java.util.Properties properties4 = new java.util.Properties();
        java.util.Properties properties5 = new java.util.Properties();
        java.lang.Object obj7 = properties5.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet8 = properties5.stringPropertyNames();
        boolean boolean9 = properties4.containsValue((java.lang.Object) properties5);
        java.util.Collection<java.lang.Object> objCollection10 = properties4.values();
        java.util.Enumeration<?> wildcardEnumeration11 = properties4.propertyNames();
        java.lang.Object obj13 = properties0.put((java.lang.Object) wildcardEnumeration11, (java.lang.Object) 10.0d);
        java.util.Properties properties14 = new java.util.Properties();
        java.lang.Object obj16 = properties14.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration17 = properties14.elements();
        boolean boolean18 = properties14.isEmpty();
        java.util.Set<java.lang.Object> objSet19 = properties14.keySet();
        boolean boolean20 = properties14.isEmpty();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet21 = properties14.entrySet();
        java.util.Properties properties22 = new java.util.Properties();
        java.lang.Object obj24 = properties22.remove((java.lang.Object) 0.0d);
        boolean boolean25 = properties22.isEmpty();
        java.lang.Object obj28 = properties22.setProperty("", "hi!");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties29 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties29.setSerialJtaTransactions(false);
        boolean boolean32 = properties14.remove((java.lang.Object) properties22, (java.lang.Object) atomikosProperties29);
        java.util.Properties properties33 = new java.util.Properties(properties22);
        int int34 = properties33.size();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties36 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties36.setSerialJtaTransactions(false);
        boolean boolean39 = atomikosProperties36.isSerialJtaTransactions();
        java.lang.String str40 = atomikosProperties36.getService();
        boolean boolean41 = atomikosProperties36.isEnableLogging();
        java.lang.String str42 = atomikosProperties36.getTransactionManagerUniqueName();
        boolean boolean43 = properties33.remove((java.lang.Object) (byte) 1, (java.lang.Object) atomikosProperties36);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties44 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties44.setSerialJtaTransactions(false);
        atomikosProperties44.setThreadedTwoPhaseCommit(true);
        atomikosProperties44.setEnableLogging(false);
        boolean boolean51 = atomikosProperties44.isSerialJtaTransactions();
        int int52 = atomikosProperties44.getMaxActives();
        boolean boolean53 = atomikosProperties44.isSerialJtaTransactions();
        boolean boolean54 = properties0.remove((java.lang.Object) properties33, (java.lang.Object) boolean53);
        java.lang.String str55 = properties33.toString();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties56 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties56.setSerialJtaTransactions(false);
        atomikosProperties56.setThreadedTwoPhaseCommit(true);
        atomikosProperties56.setSerialJtaTransactions(false);
        java.lang.String str63 = atomikosProperties56.getService();
        java.util.Properties properties64 = atomikosProperties56.asProperties();
        java.util.Properties properties65 = atomikosProperties56.asProperties();
        boolean boolean66 = properties33.equals((java.lang.Object) atomikosProperties56);
        atomikosProperties56.setService("{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=false, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.tm_unique_name=tmlog, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
        long long69 = atomikosProperties56.getMaxTimeout();
        java.lang.String str70 = atomikosProperties56.getLogBaseName();
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(strSet3);
        org.junit.Assert.assertNull(obj7);
        org.junit.Assert.assertNotNull(strSet8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(objCollection10);
        org.junit.Assert.assertNotNull(wildcardEnumeration11);
        org.junit.Assert.assertNull(obj13);
        org.junit.Assert.assertNull(obj16);
        org.junit.Assert.assertNotNull(objEnumeration17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(objSet19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNotNull(objEntrySet21);
        org.junit.Assert.assertNull(obj24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNull(obj28);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 0 + "'", int34 == 0);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNull(str40);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertNull(str42);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + 50 + "'", int52 == 50);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "{}" + "'", str55, "{}");
        org.junit.Assert.assertNull(str63);
        org.junit.Assert.assertNotNull(properties64);
        org.junit.Assert.assertNotNull(properties65);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertTrue("'" + long69 + "' != '" + 300000L + "'", long69 == 300000L);
        org.junit.Assert.assertEquals("'" + str70 + "' != '" + "tmlog" + "'", str70, "tmlog");
    }

    @Test
    public void test5111() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test5111");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setSerialJtaTransactions(false);
        atomikosProperties0.setThreadedTwoPhaseCommit(true);
        atomikosProperties0.setThreadedTwoPhaseCommit(true);
        java.util.Properties properties7 = atomikosProperties0.asProperties();
        java.util.Set<java.lang.String> strSet8 = properties7.stringPropertyNames();
        java.util.Properties properties9 = new java.util.Properties();
        java.lang.Object obj11 = properties9.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration12 = properties9.elements();
        boolean boolean13 = properties9.isEmpty();
        java.util.Set<java.lang.Object> objSet14 = properties9.keySet();
        java.util.Enumeration<java.lang.Object> objEnumeration15 = properties9.keys();
        java.lang.String str17 = properties9.getProperty("hi!");
        java.util.Enumeration<?> wildcardEnumeration18 = properties9.propertyNames();
        java.util.Properties properties19 = new java.util.Properties();
        java.lang.Object obj21 = properties19.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration22 = properties19.elements();
        boolean boolean23 = properties19.isEmpty();
        java.util.Enumeration<java.lang.Object> objEnumeration24 = properties19.elements();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet25 = properties19.entrySet();
        java.util.Set<java.lang.String> strSet26 = properties19.stringPropertyNames();
        boolean boolean27 = properties19.isEmpty();
        properties9.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties19);
        boolean boolean29 = properties7.containsKey((java.lang.Object) properties9);
        java.lang.Object obj30 = properties7.clone();
        java.io.InputStream inputStream31 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties7.loadFromXML(inputStream31);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(properties7);
        org.junit.Assert.assertNotNull(strSet8);
        org.junit.Assert.assertNull(obj11);
        org.junit.Assert.assertNotNull(objEnumeration12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(objSet14);
        org.junit.Assert.assertNotNull(objEnumeration15);
        org.junit.Assert.assertNull(str17);
        org.junit.Assert.assertNotNull(wildcardEnumeration18);
        org.junit.Assert.assertNull(obj21);
        org.junit.Assert.assertNotNull(objEnumeration22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNotNull(objEnumeration24);
        org.junit.Assert.assertNotNull(objEntrySet25);
        org.junit.Assert.assertNotNull(strSet26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(obj30);
// flaky:         org.junit.Assert.assertEquals(obj30.toString(), "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=false, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=true, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
// flaky:         org.junit.Assert.assertEquals(java.lang.String.valueOf(obj30), "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=false, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=true, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
// flaky:         org.junit.Assert.assertEquals(java.util.Objects.toString(obj30), "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=false, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=true, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
    }

    @Test
    public void test5112() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test5112");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration3 = properties0.elements();
        boolean boolean4 = properties0.isEmpty();
        java.util.Set<java.lang.Object> objSet5 = properties0.keySet();
        java.util.Enumeration<java.lang.Object> objEnumeration6 = properties0.keys();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet7 = properties0.entrySet();
        java.util.Properties properties8 = new java.util.Properties();
        java.lang.Object obj10 = properties8.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration11 = properties8.elements();
        boolean boolean12 = properties8.isEmpty();
        java.util.Set<java.lang.Object> objSet13 = properties8.keySet();
        java.util.Enumeration<java.lang.Object> objEnumeration14 = properties8.keys();
        java.lang.String str16 = properties8.getProperty("hi!");
        java.lang.String str18 = properties8.getProperty("");
        java.lang.Object obj20 = properties0.putIfAbsent((java.lang.Object) "", (java.lang.Object) 100.0d);
        java.util.Properties properties21 = new java.util.Properties();
        java.lang.Object obj23 = properties21.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration24 = properties21.elements();
        int int25 = properties21.size();
        java.util.Properties properties26 = new java.util.Properties(properties21);
        java.util.Set<java.lang.String> strSet27 = properties21.stringPropertyNames();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties28 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties28.setSerialJtaTransactions(false);
        boolean boolean31 = atomikosProperties28.isSerialJtaTransactions();
        atomikosProperties28.setCheckpointInterval((long) 10);
        atomikosProperties28.setSerialJtaTransactions(true);
        java.util.Properties properties36 = new java.util.Properties();
        java.lang.Object obj38 = properties36.remove((java.lang.Object) 0.0d);
        boolean boolean39 = properties36.isEmpty();
        java.util.Enumeration<java.lang.Object> objEnumeration40 = properties36.elements();
        java.util.Enumeration<java.lang.Object> objEnumeration41 = properties36.elements();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties42 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties42.setSerialJtaTransactions(false);
        atomikosProperties42.setThreadedTwoPhaseCommit(true);
        atomikosProperties42.setMaxTimeout((long) '#');
        boolean boolean49 = atomikosProperties42.isForceShutdownOnVmExit();
        int int50 = atomikosProperties42.getMaxActives();
        java.lang.Object obj51 = properties36.remove((java.lang.Object) int50);
        boolean boolean52 = properties0.replace((java.lang.Object) strSet27, (java.lang.Object) true, (java.lang.Object) properties36);
        java.io.InputStream inputStream53 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties36.load(inputStream53);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(objEnumeration3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(objSet5);
        org.junit.Assert.assertNotNull(objEnumeration6);
        org.junit.Assert.assertNotNull(objEntrySet7);
        org.junit.Assert.assertNull(obj10);
        org.junit.Assert.assertNotNull(objEnumeration11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(objSet13);
        org.junit.Assert.assertNotNull(objEnumeration14);
        org.junit.Assert.assertNull(str16);
        org.junit.Assert.assertNull(str18);
        org.junit.Assert.assertNull(obj20);
        org.junit.Assert.assertNull(obj23);
        org.junit.Assert.assertNotNull(objEnumeration24);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 0 + "'", int25 == 0);
        org.junit.Assert.assertNotNull(strSet27);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNull(obj38);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNotNull(objEnumeration40);
        org.junit.Assert.assertNotNull(objEnumeration41);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + 50 + "'", int50 == 50);
        org.junit.Assert.assertNull(obj51);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
    }

    @Test
    public void test5113() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test5113");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setSerialJtaTransactions(false);
        atomikosProperties0.setThreadedTwoPhaseCommit(true);
        atomikosProperties0.setMaxTimeout((long) '#');
        boolean boolean7 = atomikosProperties0.isForceShutdownOnVmExit();
        atomikosProperties0.setCheckpointInterval((long) '4');
        int int10 = atomikosProperties0.getMaxActives();
        atomikosProperties0.setService("{{}={}}");
        atomikosProperties0.setLogBaseDir("{hi!=[]}");
        atomikosProperties0.setMaxTimeout((long) 1);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 50 + "'", int10 == 50);
    }

    @Test
    public void test5114() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test5114");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration3 = properties0.elements();
        boolean boolean4 = properties0.isEmpty();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet5 = properties0.entrySet();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties7 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties7.setSerialJtaTransactions(false);
        atomikosProperties7.setThreadedTwoPhaseCommit(true);
        atomikosProperties7.setMaxTimeout((long) '#');
        boolean boolean14 = atomikosProperties7.isForceShutdownOnVmExit();
        java.lang.Object obj15 = properties0.put((java.lang.Object) (short) 1, (java.lang.Object) atomikosProperties7);
        long long16 = atomikosProperties7.getDefaultJtaTimeout();
        atomikosProperties7.setLogBaseDir("{}");
        atomikosProperties7.setDefaultJtaTimeout((long) ' ');
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(objEnumeration3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(objEntrySet5);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNull(obj15);
        org.junit.Assert.assertTrue("'" + long16 + "' != '" + 10000L + "'", long16 == 10000L);
    }

    @Test
    public void test5115() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test5115");
        java.util.Properties properties0 = new java.util.Properties();
        java.util.Properties properties1 = new java.util.Properties();
        java.lang.Object obj3 = properties1.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet4 = properties1.stringPropertyNames();
        boolean boolean5 = properties0.containsValue((java.lang.Object) properties1);
        java.util.Collection<java.lang.Object> objCollection6 = properties0.values();
        boolean boolean7 = properties0.isEmpty();
        java.util.Properties properties8 = new java.util.Properties();
        java.lang.Object obj10 = properties8.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration11 = properties8.elements();
        boolean boolean12 = properties8.isEmpty();
        java.util.Set<java.lang.Object> objSet13 = properties8.keySet();
        boolean boolean14 = properties8.isEmpty();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet15 = properties8.entrySet();
        java.util.Properties properties16 = new java.util.Properties();
        java.lang.Object obj18 = properties16.remove((java.lang.Object) 0.0d);
        boolean boolean19 = properties16.isEmpty();
        java.lang.Object obj22 = properties16.setProperty("", "hi!");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties23 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties23.setSerialJtaTransactions(false);
        boolean boolean26 = properties8.remove((java.lang.Object) properties16, (java.lang.Object) atomikosProperties23);
        boolean boolean27 = atomikosProperties23.isSerialJtaTransactions();
        atomikosProperties23.setService("{=hi!}");
        boolean boolean30 = properties0.containsKey((java.lang.Object) atomikosProperties23);
        java.io.OutputStream outputStream31 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties0.storeToXML(outputStream31, "hi!", "{hi!=[], {=hi!}={com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=false, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.tm_unique_name=tmlog, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}}");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(obj3);
        org.junit.Assert.assertNotNull(strSet4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(objCollection6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNull(obj10);
        org.junit.Assert.assertNotNull(objEnumeration11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(objSet13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(objEntrySet15);
        org.junit.Assert.assertNull(obj18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNull(obj22);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
    }

    @Test
    public void test5116() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test5116");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setSerialJtaTransactions(false);
        boolean boolean3 = atomikosProperties0.isSerialJtaTransactions();
        boolean boolean4 = atomikosProperties0.isEnableLogging();
        atomikosProperties0.setService("");
        java.util.Properties properties7 = atomikosProperties0.asProperties();
        java.util.Properties properties8 = new java.util.Properties();
        java.lang.Object obj10 = properties8.remove((java.lang.Object) 0.0d);
        boolean boolean11 = properties8.isEmpty();
        java.lang.Object obj14 = properties8.setProperty("", "hi!");
        java.util.Properties properties15 = new java.util.Properties();
        java.lang.Object obj17 = properties15.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration18 = properties15.elements();
        boolean boolean19 = properties15.isEmpty();
        java.util.Set<java.lang.Object> objSet20 = properties15.keySet();
        boolean boolean21 = properties15.isEmpty();
        java.util.Properties properties22 = new java.util.Properties();
        java.util.Collection<java.lang.Object> objCollection23 = properties22.values();
        java.util.Enumeration<java.lang.Object> objEnumeration24 = properties22.keys();
        java.lang.Object obj25 = properties15.remove((java.lang.Object) properties22);
        java.lang.Object obj26 = properties8.get((java.lang.Object) properties22);
        java.util.Properties properties27 = new java.util.Properties();
        java.lang.Object obj29 = properties27.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration30 = properties27.elements();
        boolean boolean31 = properties27.isEmpty();
        java.util.Set<java.lang.Object> objSet32 = properties27.keySet();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties33 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties33.setSerialJtaTransactions(false);
        atomikosProperties33.setThreadedTwoPhaseCommit(true);
        atomikosProperties33.setThreadedTwoPhaseCommit(true);
        java.util.Properties properties40 = atomikosProperties33.asProperties();
        int int41 = atomikosProperties33.getMaxActives();
        java.util.Properties properties42 = new java.util.Properties();
        java.lang.Object obj44 = properties42.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration45 = properties42.elements();
        boolean boolean46 = properties42.isEmpty();
        java.util.Set<java.lang.Object> objSet47 = properties42.keySet();
        boolean boolean49 = properties42.containsKey((java.lang.Object) (-1.0f));
        java.lang.Object obj50 = properties27.put((java.lang.Object) atomikosProperties33, (java.lang.Object) properties42);
        boolean boolean51 = properties22.containsKey((java.lang.Object) properties42);
        java.util.Set<java.lang.String> strSet52 = properties42.stringPropertyNames();
        java.util.Properties properties53 = new java.util.Properties();
        java.lang.Object obj55 = properties53.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration56 = properties53.elements();
        boolean boolean57 = properties53.isEmpty();
        java.util.Set<java.lang.Object> objSet58 = properties53.keySet();
        java.util.Enumeration<java.lang.Object> objEnumeration59 = properties53.keys();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet60 = properties53.entrySet();
        java.util.Properties properties61 = new java.util.Properties();
        java.lang.Object obj63 = properties61.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration64 = properties61.elements();
        boolean boolean65 = properties61.isEmpty();
        java.util.Set<java.lang.Object> objSet66 = properties61.keySet();
        java.util.Enumeration<java.lang.Object> objEnumeration67 = properties61.keys();
        java.lang.String str69 = properties61.getProperty("hi!");
        java.lang.String str71 = properties61.getProperty("");
        java.lang.Object obj73 = properties53.putIfAbsent((java.lang.Object) "", (java.lang.Object) 100.0d);
        java.lang.Object obj74 = properties7.replace((java.lang.Object) strSet52, (java.lang.Object) properties53);
        java.util.Enumeration<?> wildcardEnumeration75 = properties7.propertyNames();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(properties7);
        org.junit.Assert.assertNull(obj10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNull(obj14);
        org.junit.Assert.assertNull(obj17);
        org.junit.Assert.assertNotNull(objEnumeration18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(objSet20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(objCollection23);
        org.junit.Assert.assertNotNull(objEnumeration24);
        org.junit.Assert.assertNull(obj25);
        org.junit.Assert.assertNull(obj26);
        org.junit.Assert.assertNull(obj29);
        org.junit.Assert.assertNotNull(objEnumeration30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNotNull(objSet32);
        org.junit.Assert.assertNotNull(properties40);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 50 + "'", int41 == 50);
        org.junit.Assert.assertNull(obj44);
        org.junit.Assert.assertNotNull(objEnumeration45);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertNotNull(objSet47);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNull(obj50);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertNotNull(strSet52);
        org.junit.Assert.assertNull(obj55);
        org.junit.Assert.assertNotNull(objEnumeration56);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertNotNull(objSet58);
        org.junit.Assert.assertNotNull(objEnumeration59);
        org.junit.Assert.assertNotNull(objEntrySet60);
        org.junit.Assert.assertNull(obj63);
        org.junit.Assert.assertNotNull(objEnumeration64);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65 == true);
        org.junit.Assert.assertNotNull(objSet66);
        org.junit.Assert.assertNotNull(objEnumeration67);
        org.junit.Assert.assertNull(str69);
        org.junit.Assert.assertNull(str71);
        org.junit.Assert.assertNull(obj73);
        org.junit.Assert.assertNull(obj74);
        org.junit.Assert.assertNotNull(wildcardEnumeration75);
    }

    @Test
    public void test5117() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test5117");
        java.util.Properties properties0 = new java.util.Properties();
        java.util.Collection<java.lang.Object> objCollection1 = properties0.values();
        java.util.Properties properties2 = new java.util.Properties();
        java.lang.Object obj4 = properties2.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet5 = properties2.stringPropertyNames();
        java.util.Properties properties6 = new java.util.Properties();
        java.util.Properties properties7 = new java.util.Properties();
        java.lang.Object obj9 = properties7.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet10 = properties7.stringPropertyNames();
        boolean boolean11 = properties6.containsValue((java.lang.Object) properties7);
        java.util.Collection<java.lang.Object> objCollection12 = properties6.values();
        java.util.Enumeration<?> wildcardEnumeration13 = properties6.propertyNames();
        java.lang.Object obj15 = properties2.put((java.lang.Object) wildcardEnumeration13, (java.lang.Object) 10.0d);
        boolean boolean16 = properties0.equals((java.lang.Object) 10.0d);
        boolean boolean18 = properties0.containsKey((java.lang.Object) 35);
        java.util.Properties properties19 = new java.util.Properties();
        java.lang.Object obj21 = properties19.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration22 = properties19.elements();
        boolean boolean23 = properties19.isEmpty();
        java.util.Set<java.lang.Object> objSet24 = properties19.keySet();
        java.util.Enumeration<java.lang.Object> objEnumeration25 = properties19.keys();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet26 = properties19.entrySet();
        java.util.Properties properties27 = new java.util.Properties();
        java.lang.Object obj29 = properties27.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration30 = properties27.elements();
        boolean boolean31 = properties27.isEmpty();
        java.util.Set<java.lang.Object> objSet32 = properties27.keySet();
        java.util.Enumeration<java.lang.Object> objEnumeration33 = properties27.keys();
        java.lang.String str35 = properties27.getProperty("hi!");
        java.lang.String str37 = properties27.getProperty("");
        java.lang.Object obj39 = properties19.putIfAbsent((java.lang.Object) "", (java.lang.Object) 100.0d);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties40 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties40.setSerialJtaTransactions(false);
        atomikosProperties40.setThreadedTwoPhaseCommit(true);
        atomikosProperties40.setMaxTimeout((long) '#');
        boolean boolean47 = atomikosProperties40.isEnableLogging();
        atomikosProperties40.setCheckpointInterval((long) (byte) -1);
        atomikosProperties40.setMaxActives((int) (byte) 100);
        atomikosProperties40.setForceShutdownOnVmExit(false);
        java.util.Properties properties54 = new java.util.Properties();
        java.lang.Object obj56 = properties54.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet57 = properties54.stringPropertyNames();
        java.lang.String str58 = properties54.toString();
        java.lang.String str59 = properties54.toString();
        java.util.Set<java.lang.Object> objSet60 = properties54.keySet();
        boolean boolean61 = properties19.remove((java.lang.Object) false, (java.lang.Object) objSet60);
        java.lang.Object obj62 = properties19.clone();
        boolean boolean63 = properties0.containsKey((java.lang.Object) properties19);
        java.util.Enumeration<java.lang.Object> objEnumeration64 = properties19.elements();
        java.util.Properties properties65 = new java.util.Properties();
        java.util.Properties properties66 = new java.util.Properties();
        java.lang.Object obj68 = properties66.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet69 = properties66.stringPropertyNames();
        boolean boolean70 = properties65.containsValue((java.lang.Object) properties66);
        java.util.Collection<java.lang.Object> objCollection71 = properties65.values();
        java.util.Properties properties73 = new java.util.Properties();
        java.lang.Object obj75 = properties73.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration76 = properties73.elements();
        boolean boolean77 = properties73.isEmpty();
        java.util.Set<java.lang.Object> objSet78 = properties73.keySet();
        java.lang.Object obj79 = properties65.putIfAbsent((java.lang.Object) "hi!", (java.lang.Object) objSet78);
        java.util.Set<java.lang.Object> objSet80 = properties65.keySet();
        java.util.Set<java.lang.Object> objSet81 = properties65.keySet();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet82 = properties65.entrySet();
        java.util.Enumeration<?> wildcardEnumeration83 = properties65.propertyNames();
        properties65.clear();
        properties19.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties65);
        java.util.Collection<java.lang.Object> objCollection86 = properties19.values();
        org.junit.Assert.assertNotNull(objCollection1);
        org.junit.Assert.assertNull(obj4);
        org.junit.Assert.assertNotNull(strSet5);
        org.junit.Assert.assertNull(obj9);
        org.junit.Assert.assertNotNull(strSet10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(objCollection12);
        org.junit.Assert.assertNotNull(wildcardEnumeration13);
        org.junit.Assert.assertNull(obj15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNull(obj21);
        org.junit.Assert.assertNotNull(objEnumeration22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNotNull(objSet24);
        org.junit.Assert.assertNotNull(objEnumeration25);
        org.junit.Assert.assertNotNull(objEntrySet26);
        org.junit.Assert.assertNull(obj29);
        org.junit.Assert.assertNotNull(objEnumeration30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNotNull(objSet32);
        org.junit.Assert.assertNotNull(objEnumeration33);
        org.junit.Assert.assertNull(str35);
        org.junit.Assert.assertNull(str37);
        org.junit.Assert.assertNull(obj39);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertNull(obj56);
        org.junit.Assert.assertNotNull(strSet57);
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "{}" + "'", str58, "{}");
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "{}" + "'", str59, "{}");
        org.junit.Assert.assertNotNull(objSet60);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertNotNull(obj62);
        org.junit.Assert.assertEquals(obj62.toString(), "{=100.0}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj62), "{=100.0}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj62), "{=100.0}");
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertNotNull(objEnumeration64);
        org.junit.Assert.assertNull(obj68);
        org.junit.Assert.assertNotNull(strSet69);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertNotNull(objCollection71);
        org.junit.Assert.assertNull(obj75);
        org.junit.Assert.assertNotNull(objEnumeration76);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + true + "'", boolean77 == true);
        org.junit.Assert.assertNotNull(objSet78);
        org.junit.Assert.assertNull(obj79);
        org.junit.Assert.assertNotNull(objSet80);
        org.junit.Assert.assertNotNull(objSet81);
        org.junit.Assert.assertNotNull(objEntrySet82);
        org.junit.Assert.assertNotNull(wildcardEnumeration83);
        org.junit.Assert.assertNotNull(objCollection86);
    }

    @Test
    public void test5118() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test5118");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        boolean boolean3 = properties0.isEmpty();
        java.util.Enumeration<java.lang.Object> objEnumeration4 = properties0.elements();
        java.util.Enumeration<java.lang.Object> objEnumeration5 = properties0.elements();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties6 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties6.setSerialJtaTransactions(false);
        atomikosProperties6.setThreadedTwoPhaseCommit(true);
        atomikosProperties6.setMaxTimeout((long) '#');
        boolean boolean13 = atomikosProperties6.isForceShutdownOnVmExit();
        int int14 = atomikosProperties6.getMaxActives();
        java.lang.Object obj15 = properties0.remove((java.lang.Object) int14);
        java.util.Properties properties16 = new java.util.Properties();
        java.lang.Object obj18 = properties16.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration19 = properties16.elements();
        boolean boolean20 = properties16.isEmpty();
        java.util.Set<java.lang.Object> objSet21 = properties16.keySet();
        boolean boolean22 = properties16.isEmpty();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet23 = properties16.entrySet();
        java.util.Properties properties24 = new java.util.Properties();
        java.lang.Object obj26 = properties24.remove((java.lang.Object) 0.0d);
        boolean boolean27 = properties24.isEmpty();
        java.lang.Object obj30 = properties24.setProperty("", "hi!");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties31 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties31.setSerialJtaTransactions(false);
        boolean boolean34 = properties16.remove((java.lang.Object) properties24, (java.lang.Object) atomikosProperties31);
        java.util.Properties properties35 = new java.util.Properties(properties24);
        int int36 = properties35.size();
        int int37 = properties35.size();
        java.util.Properties properties38 = new java.util.Properties();
        java.lang.Object obj39 = properties35.get((java.lang.Object) properties38);
        boolean boolean40 = properties0.containsValue((java.lang.Object) properties38);
        java.util.Set<java.lang.String> strSet41 = properties38.stringPropertyNames();
        java.util.Properties properties42 = new java.util.Properties();
        java.lang.Object obj44 = properties42.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration45 = properties42.elements();
        boolean boolean46 = properties42.isEmpty();
        java.util.Set<java.lang.Object> objSet47 = properties42.keySet();
        boolean boolean48 = properties42.isEmpty();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet49 = properties42.entrySet();
        java.util.Properties properties50 = new java.util.Properties();
        java.lang.Object obj52 = properties50.remove((java.lang.Object) 0.0d);
        boolean boolean53 = properties50.isEmpty();
        java.lang.Object obj56 = properties50.setProperty("", "hi!");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties57 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties57.setSerialJtaTransactions(false);
        boolean boolean60 = properties42.remove((java.lang.Object) properties50, (java.lang.Object) atomikosProperties57);
        java.util.Properties properties61 = new java.util.Properties(properties50);
        int int62 = properties61.size();
        int int63 = properties61.size();
        java.util.Properties properties64 = new java.util.Properties();
        java.lang.Object obj66 = properties64.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration67 = properties64.elements();
        boolean boolean68 = properties64.isEmpty();
        java.util.Set<java.lang.Object> objSet69 = properties64.keySet();
        java.util.Enumeration<java.lang.Object> objEnumeration70 = properties64.keys();
        java.lang.String str72 = properties64.getProperty("hi!");
        java.lang.String str74 = properties64.getProperty("");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties75 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties75.setSerialJtaTransactions(false);
        atomikosProperties75.setThreadedTwoPhaseCommit(true);
        atomikosProperties75.setEnableLogging(false);
        boolean boolean82 = properties64.containsKey((java.lang.Object) atomikosProperties75);
        atomikosProperties75.setTransactionManagerUniqueName("tmlog");
        atomikosProperties75.setEnableLogging(true);
        long long87 = atomikosProperties75.getMaxTimeout();
        boolean boolean88 = properties61.containsValue((java.lang.Object) long87);
        java.util.Properties properties89 = new java.util.Properties();
        java.lang.Object obj91 = properties89.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration92 = properties89.elements();
        int int93 = properties89.size();
        java.util.Properties properties94 = new java.util.Properties(properties89);
        java.lang.Object obj95 = properties94.clone();
        java.lang.Object obj96 = properties38.put((java.lang.Object) long87, obj95);
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(objEnumeration4);
        org.junit.Assert.assertNotNull(objEnumeration5);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 50 + "'", int14 == 50);
        org.junit.Assert.assertNull(obj15);
        org.junit.Assert.assertNull(obj18);
        org.junit.Assert.assertNotNull(objEnumeration19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNotNull(objSet21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNotNull(objEntrySet23);
        org.junit.Assert.assertNull(obj26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNull(obj30);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 0 + "'", int36 == 0);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 0 + "'", int37 == 0);
        org.junit.Assert.assertNull(obj39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(strSet41);
        org.junit.Assert.assertNull(obj44);
        org.junit.Assert.assertNotNull(objEnumeration45);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertNotNull(objSet47);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertNotNull(objEntrySet49);
        org.junit.Assert.assertNull(obj52);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertNull(obj56);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + 0 + "'", int62 == 0);
        org.junit.Assert.assertTrue("'" + int63 + "' != '" + 0 + "'", int63 == 0);
        org.junit.Assert.assertNull(obj66);
        org.junit.Assert.assertNotNull(objEnumeration67);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + true + "'", boolean68 == true);
        org.junit.Assert.assertNotNull(objSet69);
        org.junit.Assert.assertNotNull(objEnumeration70);
        org.junit.Assert.assertNull(str72);
        org.junit.Assert.assertNull(str74);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + false + "'", boolean82 == false);
        org.junit.Assert.assertTrue("'" + long87 + "' != '" + 300000L + "'", long87 == 300000L);
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + false + "'", boolean88 == false);
        org.junit.Assert.assertNull(obj91);
        org.junit.Assert.assertNotNull(objEnumeration92);
        org.junit.Assert.assertTrue("'" + int93 + "' != '" + 0 + "'", int93 == 0);
        org.junit.Assert.assertNotNull(obj95);
        org.junit.Assert.assertEquals(obj95.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj95), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj95), "{}");
        org.junit.Assert.assertNull(obj96);
    }

    @Test
    public void test5119() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test5119");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setSerialJtaTransactions(false);
        boolean boolean3 = atomikosProperties0.isSerialJtaTransactions();
        java.lang.String str4 = atomikosProperties0.getService();
        boolean boolean5 = atomikosProperties0.isEnableLogging();
        atomikosProperties0.setCheckpointInterval((long) (byte) 100);
        java.lang.String str8 = atomikosProperties0.getLogBaseName();
        atomikosProperties0.setTransactionManagerUniqueName("tmlog");
        atomikosProperties0.setSerialJtaTransactions(false);
        boolean boolean13 = atomikosProperties0.isForceShutdownOnVmExit();
        atomikosProperties0.setMaxActives(100);
        java.util.Properties properties16 = atomikosProperties0.asProperties();
        java.lang.String str17 = atomikosProperties0.getService();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "tmlog" + "'", str8, "tmlog");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(properties16);
        org.junit.Assert.assertNull(str17);
    }

    @Test
    public void test5120() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test5120");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet3 = properties0.stringPropertyNames();
        java.util.Properties properties4 = new java.util.Properties();
        java.util.Properties properties5 = new java.util.Properties();
        java.lang.Object obj7 = properties5.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet8 = properties5.stringPropertyNames();
        boolean boolean9 = properties4.containsValue((java.lang.Object) properties5);
        java.util.Collection<java.lang.Object> objCollection10 = properties4.values();
        java.util.Enumeration<?> wildcardEnumeration11 = properties4.propertyNames();
        java.lang.Object obj13 = properties0.put((java.lang.Object) wildcardEnumeration11, (java.lang.Object) 10.0d);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties14 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties14.setSerialJtaTransactions(false);
        atomikosProperties14.setThreadedTwoPhaseCommit(true);
        atomikosProperties14.setMaxTimeout((long) '#');
        boolean boolean21 = atomikosProperties14.isForceShutdownOnVmExit();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties22 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties22.setSerialJtaTransactions(false);
        atomikosProperties22.setThreadedTwoPhaseCommit(true);
        atomikosProperties22.setThreadedTwoPhaseCommit(true);
        java.lang.Object obj29 = properties0.getOrDefault((java.lang.Object) boolean21, (java.lang.Object) atomikosProperties22);
        long long30 = atomikosProperties22.getMaxTimeout();
        java.lang.String str31 = atomikosProperties22.getTransactionManagerUniqueName();
        long long32 = atomikosProperties22.getMaxTimeout();
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(strSet3);
        org.junit.Assert.assertNull(obj7);
        org.junit.Assert.assertNotNull(strSet8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(objCollection10);
        org.junit.Assert.assertNotNull(wildcardEnumeration11);
        org.junit.Assert.assertNull(obj13);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(obj29);
        org.junit.Assert.assertTrue("'" + long30 + "' != '" + 300000L + "'", long30 == 300000L);
        org.junit.Assert.assertNull(str31);
        org.junit.Assert.assertTrue("'" + long32 + "' != '" + 300000L + "'", long32 == 300000L);
    }

    @Test
    public void test5121() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test5121");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration3 = properties0.elements();
        boolean boolean4 = properties0.isEmpty();
        java.util.Set<java.lang.Object> objSet5 = properties0.keySet();
        boolean boolean6 = properties0.isEmpty();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet7 = properties0.entrySet();
        java.util.Properties properties8 = new java.util.Properties();
        java.lang.Object obj10 = properties8.remove((java.lang.Object) 0.0d);
        boolean boolean11 = properties8.isEmpty();
        java.lang.Object obj14 = properties8.setProperty("", "hi!");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties15 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties15.setSerialJtaTransactions(false);
        boolean boolean18 = properties0.remove((java.lang.Object) properties8, (java.lang.Object) atomikosProperties15);
        java.util.Properties properties19 = new java.util.Properties(properties8);
        int int20 = properties19.size();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties22 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties22.setSerialJtaTransactions(false);
        boolean boolean25 = atomikosProperties22.isSerialJtaTransactions();
        java.lang.String str26 = atomikosProperties22.getService();
        boolean boolean27 = atomikosProperties22.isEnableLogging();
        java.lang.String str28 = atomikosProperties22.getTransactionManagerUniqueName();
        boolean boolean29 = properties19.remove((java.lang.Object) (byte) 1, (java.lang.Object) atomikosProperties22);
        java.util.Properties properties30 = new java.util.Properties();
        java.lang.Object obj32 = properties30.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration33 = properties30.elements();
        boolean boolean34 = properties30.isEmpty();
        java.util.Enumeration<java.lang.Object> objEnumeration35 = properties30.elements();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet36 = properties30.entrySet();
        java.lang.Object obj37 = properties19.remove((java.lang.Object) objEntrySet36);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Class<?> wildcardClass38 = obj37.getClass();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(objEnumeration3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(objSet5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(objEntrySet7);
        org.junit.Assert.assertNull(obj10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNull(obj14);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 0 + "'", int20 == 0);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNull(str26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNull(str28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNull(obj32);
        org.junit.Assert.assertNotNull(objEnumeration33);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertNotNull(objEnumeration35);
        org.junit.Assert.assertNotNull(objEntrySet36);
        org.junit.Assert.assertNull(obj37);
    }

    @Test
    public void test5122() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test5122");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setSerialJtaTransactions(false);
        boolean boolean3 = atomikosProperties0.isSerialJtaTransactions();
        java.lang.String str4 = atomikosProperties0.getService();
        atomikosProperties0.setEnableLogging(false);
        atomikosProperties0.setDefaultJtaTimeout((long) (byte) 100);
        atomikosProperties0.setCheckpointInterval((long) (byte) 10);
        long long11 = atomikosProperties0.getMaxTimeout();
        atomikosProperties0.setEnableLogging(false);
        java.lang.String str14 = atomikosProperties0.getLogBaseDir();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertTrue("'" + long11 + "' != '" + 300000L + "'", long11 == 300000L);
        org.junit.Assert.assertNull(str14);
    }

    @Test
    public void test5123() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test5123");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        java.lang.String str4 = properties0.getProperty("");
        java.util.Properties properties5 = new java.util.Properties();
        java.lang.Object obj7 = properties5.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration8 = properties5.elements();
        int int9 = properties5.size();
        java.util.Properties properties10 = new java.util.Properties(properties5);
        properties0.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties5);
        java.lang.Object obj14 = properties0.setProperty("", "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=100, com.atomikos.icatch.serial_jta_transactions=false, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=35, com.atomikos.icatch.service={=hi!}, com.atomikos.icatch.threaded_2pc=true, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
        java.io.OutputStream outputStream15 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties0.store(outputStream15, "{{}=tmlog}");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertNull(obj7);
        org.junit.Assert.assertNotNull(objEnumeration8);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertNull(obj14);
    }

    @Test
    public void test5124() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test5124");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet3 = properties0.stringPropertyNames();
        java.util.Properties properties4 = new java.util.Properties();
        java.lang.Object obj6 = properties4.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet7 = properties4.stringPropertyNames();
        java.lang.Object obj9 = properties0.put((java.lang.Object) strSet7, (java.lang.Object) 0.0d);
        java.util.Properties properties10 = new java.util.Properties();
        java.util.Properties properties11 = new java.util.Properties();
        java.lang.Object obj13 = properties11.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet14 = properties11.stringPropertyNames();
        boolean boolean15 = properties10.containsValue((java.lang.Object) properties11);
        java.util.Collection<java.lang.Object> objCollection16 = properties10.values();
        java.util.Properties properties18 = new java.util.Properties();
        java.lang.Object obj20 = properties18.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration21 = properties18.elements();
        boolean boolean22 = properties18.isEmpty();
        java.util.Set<java.lang.Object> objSet23 = properties18.keySet();
        java.lang.Object obj24 = properties10.putIfAbsent((java.lang.Object) "hi!", (java.lang.Object) objSet23);
        java.util.Set<java.lang.Object> objSet25 = properties10.keySet();
        java.lang.Object obj27 = properties0.putIfAbsent((java.lang.Object) properties10, (java.lang.Object) (short) 10);
        java.util.Collection<java.lang.Object> objCollection28 = properties0.values();
        int int29 = properties0.size();
        java.util.Properties properties30 = new java.util.Properties();
        boolean boolean32 = properties30.contains((java.lang.Object) 100.0d);
        java.util.Properties properties33 = new java.util.Properties();
        java.lang.Object obj35 = properties33.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration36 = properties33.elements();
        boolean boolean37 = properties33.isEmpty();
        java.util.Set<java.lang.Object> objSet38 = properties33.keySet();
        boolean boolean39 = properties33.isEmpty();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet40 = properties33.entrySet();
        java.util.Properties properties41 = new java.util.Properties();
        java.lang.Object obj43 = properties41.remove((java.lang.Object) 0.0d);
        boolean boolean44 = properties41.isEmpty();
        java.lang.Object obj47 = properties41.setProperty("", "hi!");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties48 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties48.setSerialJtaTransactions(false);
        boolean boolean51 = properties33.remove((java.lang.Object) properties41, (java.lang.Object) atomikosProperties48);
        boolean boolean52 = properties30.equals((java.lang.Object) properties33);
        java.util.Enumeration<java.lang.Object> objEnumeration53 = properties30.elements();
        java.util.Collection<java.lang.Object> objCollection54 = properties30.values();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties55 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties55.setSerialJtaTransactions(false);
        atomikosProperties55.setThreadedTwoPhaseCommit(true);
        atomikosProperties55.setMaxTimeout((long) '#');
        boolean boolean62 = atomikosProperties55.isEnableLogging();
        atomikosProperties55.setCheckpointInterval((long) (byte) -1);
        atomikosProperties55.setEnableLogging(true);
        java.lang.String str67 = atomikosProperties55.getTransactionManagerUniqueName();
        atomikosProperties55.setCheckpointInterval((long) (byte) -1);
        java.lang.String str70 = atomikosProperties55.getService();
        java.lang.Object obj71 = properties0.replace((java.lang.Object) properties30, (java.lang.Object) atomikosProperties55);
        java.lang.Object obj74 = properties30.setProperty("{{}={}}", "{true=true}");
        java.util.Properties properties75 = new java.util.Properties();
        java.lang.Object obj77 = properties75.remove((java.lang.Object) 0.0d);
        boolean boolean78 = properties75.isEmpty();
        java.util.Enumeration<java.lang.Object> objEnumeration79 = properties75.elements();
        java.lang.Object obj82 = properties75.setProperty("tmlog", "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=false, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=true, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
        boolean boolean83 = properties30.contains((java.lang.Object) properties75);
        java.io.OutputStream outputStream84 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties75.store(outputStream84, "{true=class org.springframework.boot.jta.atomikos.AtomikosProperties}");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(strSet3);
        org.junit.Assert.assertNull(obj6);
        org.junit.Assert.assertNotNull(strSet7);
        org.junit.Assert.assertNull(obj9);
        org.junit.Assert.assertNull(obj13);
        org.junit.Assert.assertNotNull(strSet14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(objCollection16);
        org.junit.Assert.assertNull(obj20);
        org.junit.Assert.assertNotNull(objEnumeration21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNotNull(objSet23);
        org.junit.Assert.assertNull(obj24);
        org.junit.Assert.assertNotNull(objSet25);
        org.junit.Assert.assertNull(obj27);
        org.junit.Assert.assertNotNull(objCollection28);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 2 + "'", int29 == 2);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNull(obj35);
        org.junit.Assert.assertNotNull(objEnumeration36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertNotNull(objSet38);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNotNull(objEntrySet40);
        org.junit.Assert.assertNull(obj43);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertNull(obj47);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertNotNull(objEnumeration53);
        org.junit.Assert.assertNotNull(objCollection54);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + true + "'", boolean62 == true);
        org.junit.Assert.assertNull(str67);
        org.junit.Assert.assertNull(str70);
        org.junit.Assert.assertNull(obj71);
        org.junit.Assert.assertNull(obj74);
        org.junit.Assert.assertNull(obj77);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + true + "'", boolean78 == true);
        org.junit.Assert.assertNotNull(objEnumeration79);
        org.junit.Assert.assertNull(obj82);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + false + "'", boolean83 == false);
    }

    @Test
    public void test5125() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test5125");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration3 = properties0.elements();
        int int4 = properties0.size();
        java.util.Properties properties5 = new java.util.Properties(properties0);
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet6 = properties0.entrySet();
        java.lang.Object obj9 = properties0.setProperty("", "{}");
        java.util.Properties properties10 = new java.util.Properties();
        java.lang.Object obj12 = properties10.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration13 = properties10.elements();
        boolean boolean14 = properties10.isEmpty();
        java.util.Set<java.lang.Object> objSet15 = properties10.keySet();
        boolean boolean16 = properties10.isEmpty();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet17 = properties10.entrySet();
        java.util.Properties properties18 = new java.util.Properties();
        java.lang.Object obj20 = properties18.remove((java.lang.Object) 0.0d);
        boolean boolean21 = properties18.isEmpty();
        java.lang.Object obj24 = properties18.setProperty("", "hi!");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties25 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties25.setSerialJtaTransactions(false);
        boolean boolean28 = properties10.remove((java.lang.Object) properties18, (java.lang.Object) atomikosProperties25);
        java.util.Properties properties29 = new java.util.Properties(properties18);
        int int30 = properties29.size();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties32 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties32.setSerialJtaTransactions(false);
        boolean boolean35 = atomikosProperties32.isSerialJtaTransactions();
        java.lang.String str36 = atomikosProperties32.getService();
        boolean boolean37 = atomikosProperties32.isEnableLogging();
        java.lang.String str38 = atomikosProperties32.getTransactionManagerUniqueName();
        boolean boolean39 = properties29.remove((java.lang.Object) (byte) 1, (java.lang.Object) atomikosProperties32);
        java.util.Properties properties40 = new java.util.Properties();
        java.lang.Object obj42 = properties40.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration43 = properties40.elements();
        boolean boolean44 = properties40.isEmpty();
        java.util.Enumeration<java.lang.Object> objEnumeration45 = properties40.elements();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet46 = properties40.entrySet();
        java.lang.Object obj47 = properties29.remove((java.lang.Object) objEntrySet46);
        boolean boolean48 = properties29.isEmpty();
        java.util.Properties properties49 = new java.util.Properties();
        java.lang.Object obj51 = properties49.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration52 = properties49.elements();
        boolean boolean53 = properties49.isEmpty();
        java.util.Set<java.lang.Object> objSet54 = properties49.keySet();
        java.util.Enumeration<java.lang.Object> objEnumeration55 = properties49.keys();
        java.lang.String str57 = properties49.getProperty("hi!");
        java.lang.String str59 = properties49.getProperty("");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties60 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties60.setSerialJtaTransactions(false);
        atomikosProperties60.setThreadedTwoPhaseCommit(true);
        atomikosProperties60.setEnableLogging(false);
        boolean boolean67 = properties49.containsKey((java.lang.Object) atomikosProperties60);
        atomikosProperties60.setTransactionManagerUniqueName("tmlog");
        boolean boolean70 = atomikosProperties60.isForceShutdownOnVmExit();
        java.lang.Object obj71 = properties0.put((java.lang.Object) boolean48, (java.lang.Object) atomikosProperties60);
        atomikosProperties60.setLogBaseName("");
        atomikosProperties60.setDefaultJtaTimeout((long) (short) 100);
        long long76 = atomikosProperties60.getMaxTimeout();
        atomikosProperties60.setMaxActives((int) (short) 100);
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(objEnumeration3);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNotNull(objEntrySet6);
        org.junit.Assert.assertNull(obj9);
        org.junit.Assert.assertNull(obj12);
        org.junit.Assert.assertNotNull(objEnumeration13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(objSet15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(objEntrySet17);
        org.junit.Assert.assertNull(obj20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNull(obj24);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 0 + "'", int30 == 0);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNull(str36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertNull(str38);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNull(obj42);
        org.junit.Assert.assertNotNull(objEnumeration43);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertNotNull(objEnumeration45);
        org.junit.Assert.assertNotNull(objEntrySet46);
        org.junit.Assert.assertNull(obj47);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertNull(obj51);
        org.junit.Assert.assertNotNull(objEnumeration52);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertNotNull(objSet54);
        org.junit.Assert.assertNotNull(objEnumeration55);
        org.junit.Assert.assertNull(str57);
        org.junit.Assert.assertNull(str59);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertNull(obj71);
        org.junit.Assert.assertTrue("'" + long76 + "' != '" + 300000L + "'", long76 == 300000L);
    }

    @Test
    public void test5126() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test5126");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setSerialJtaTransactions(false);
        atomikosProperties0.setThreadedTwoPhaseCommit(true);
        atomikosProperties0.setThreadedTwoPhaseCommit(true);
        java.util.Properties properties7 = atomikosProperties0.asProperties();
        atomikosProperties0.setLogBaseName("hi!");
        long long10 = atomikosProperties0.getCheckpointInterval();
        boolean boolean11 = atomikosProperties0.isForceShutdownOnVmExit();
        org.junit.Assert.assertNotNull(properties7);
        org.junit.Assert.assertTrue("'" + long10 + "' != '" + 500L + "'", long10 == 500L);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
    }

    @Test
    public void test5127() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test5127");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration3 = properties0.elements();
        boolean boolean4 = properties0.isEmpty();
        java.util.Set<java.lang.Object> objSet5 = properties0.keySet();
        boolean boolean6 = properties0.isEmpty();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet7 = properties0.entrySet();
        java.util.Properties properties8 = new java.util.Properties();
        java.lang.Object obj10 = properties8.remove((java.lang.Object) 0.0d);
        boolean boolean11 = properties8.isEmpty();
        java.lang.Object obj14 = properties8.setProperty("", "hi!");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties15 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties15.setSerialJtaTransactions(false);
        boolean boolean18 = properties0.remove((java.lang.Object) properties8, (java.lang.Object) atomikosProperties15);
        java.util.Properties properties19 = new java.util.Properties(properties8);
        int int20 = properties19.size();
        java.util.Enumeration<java.lang.Object> objEnumeration21 = properties19.elements();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties22 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties22.setSerialJtaTransactions(false);
        boolean boolean25 = atomikosProperties22.isSerialJtaTransactions();
        java.lang.String str26 = atomikosProperties22.getService();
        atomikosProperties22.setEnableLogging(false);
        java.util.Properties properties29 = atomikosProperties22.asProperties();
        atomikosProperties22.setCheckpointInterval((long) 1);
        boolean boolean32 = properties19.containsValue((java.lang.Object) atomikosProperties22);
        java.io.OutputStream outputStream33 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties19.save(outputStream33, "{true=class org.springframework.boot.jta.atomikos.AtomikosProperties}");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(objEnumeration3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(objSet5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(objEntrySet7);
        org.junit.Assert.assertNull(obj10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNull(obj14);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 0 + "'", int20 == 0);
        org.junit.Assert.assertNotNull(objEnumeration21);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNull(str26);
        org.junit.Assert.assertNotNull(properties29);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
    }

    @Test
    public void test5128() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test5128");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet3 = properties0.stringPropertyNames();
        java.util.Properties properties4 = new java.util.Properties();
        java.util.Properties properties5 = new java.util.Properties();
        java.lang.Object obj7 = properties5.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet8 = properties5.stringPropertyNames();
        boolean boolean9 = properties4.containsValue((java.lang.Object) properties5);
        java.util.Collection<java.lang.Object> objCollection10 = properties4.values();
        java.util.Enumeration<?> wildcardEnumeration11 = properties4.propertyNames();
        java.lang.Object obj13 = properties0.put((java.lang.Object) wildcardEnumeration11, (java.lang.Object) 10.0d);
        java.lang.String str15 = properties0.getProperty("");
        java.util.Properties properties16 = new java.util.Properties();
        java.lang.Object obj18 = properties16.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration19 = properties16.elements();
        boolean boolean20 = properties16.isEmpty();
        java.util.Set<java.lang.Object> objSet21 = properties16.keySet();
        boolean boolean22 = properties16.isEmpty();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet23 = properties16.entrySet();
        properties16.clear();
        boolean boolean25 = properties0.containsKey((java.lang.Object) properties16);
        java.util.Collection<java.lang.Object> objCollection26 = properties16.values();
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(strSet3);
        org.junit.Assert.assertNull(obj7);
        org.junit.Assert.assertNotNull(strSet8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(objCollection10);
        org.junit.Assert.assertNotNull(wildcardEnumeration11);
        org.junit.Assert.assertNull(obj13);
        org.junit.Assert.assertNull(str15);
        org.junit.Assert.assertNull(obj18);
        org.junit.Assert.assertNotNull(objEnumeration19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNotNull(objSet21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNotNull(objEntrySet23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(objCollection26);
    }

    @Test
    public void test5129() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test5129");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setSerialJtaTransactions(false);
        atomikosProperties0.setThreadedTwoPhaseCommit(true);
        atomikosProperties0.setEnableLogging(false);
        boolean boolean7 = atomikosProperties0.isSerialJtaTransactions();
        int int8 = atomikosProperties0.getMaxActives();
        boolean boolean9 = atomikosProperties0.isEnableLogging();
        long long10 = atomikosProperties0.getCheckpointInterval();
        java.lang.String str11 = atomikosProperties0.getService();
        atomikosProperties0.setCheckpointInterval((long) (short) 1);
        atomikosProperties0.setService("{}");
        atomikosProperties0.setCheckpointInterval((long) (short) 10);
        long long18 = atomikosProperties0.getMaxTimeout();
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 50 + "'", int8 == 50);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + long10 + "' != '" + 500L + "'", long10 == 500L);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertTrue("'" + long18 + "' != '" + 300000L + "'", long18 == 300000L);
    }

    @Test
    public void test5130() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test5130");
        java.util.Properties properties0 = new java.util.Properties();
        java.util.Collection<java.lang.Object> objCollection1 = properties0.values();
        java.util.Enumeration<java.lang.Object> objEnumeration2 = properties0.keys();
        java.util.Collection<java.lang.Object> objCollection3 = properties0.values();
        java.util.Properties properties4 = new java.util.Properties();
        java.lang.Object obj6 = properties4.remove((java.lang.Object) 0.0d);
        java.util.Properties properties7 = new java.util.Properties();
        java.util.Collection<java.lang.Object> objCollection8 = properties7.values();
        java.util.Enumeration<java.lang.Object> objEnumeration9 = properties7.keys();
        java.util.Properties properties10 = new java.util.Properties();
        java.lang.Object obj12 = properties10.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration13 = properties10.elements();
        boolean boolean14 = properties10.isEmpty();
        java.util.Set<java.lang.Object> objSet15 = properties10.keySet();
        java.util.Enumeration<java.lang.Object> objEnumeration16 = properties10.keys();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet17 = properties10.entrySet();
        java.lang.Object obj18 = properties4.put((java.lang.Object) properties7, (java.lang.Object) properties10);
        java.util.Properties properties19 = new java.util.Properties();
        java.lang.Object obj21 = properties19.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration22 = properties19.elements();
        boolean boolean23 = properties19.isEmpty();
        java.util.Set<java.lang.Object> objSet24 = properties19.keySet();
        boolean boolean25 = properties19.isEmpty();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet26 = properties19.entrySet();
        java.util.Properties properties27 = new java.util.Properties();
        java.lang.Object obj29 = properties27.remove((java.lang.Object) 0.0d);
        boolean boolean30 = properties27.isEmpty();
        java.lang.Object obj33 = properties27.setProperty("", "hi!");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties34 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties34.setSerialJtaTransactions(false);
        boolean boolean37 = properties19.remove((java.lang.Object) properties27, (java.lang.Object) atomikosProperties34);
        java.util.Properties properties38 = new java.util.Properties(properties27);
        int int39 = properties38.size();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties41 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties41.setSerialJtaTransactions(false);
        boolean boolean44 = atomikosProperties41.isSerialJtaTransactions();
        java.lang.String str45 = atomikosProperties41.getService();
        boolean boolean46 = atomikosProperties41.isEnableLogging();
        java.lang.String str47 = atomikosProperties41.getTransactionManagerUniqueName();
        boolean boolean48 = properties38.remove((java.lang.Object) (byte) 1, (java.lang.Object) atomikosProperties41);
        atomikosProperties41.setMaxActives((int) (short) -1);
        boolean boolean51 = atomikosProperties41.isThreadedTwoPhaseCommit();
        long long52 = atomikosProperties41.getDefaultJtaTimeout();
        atomikosProperties41.setForceShutdownOnVmExit(true);
        atomikosProperties41.setSerialJtaTransactions(true);
        java.util.Properties properties57 = new java.util.Properties();
        java.lang.Object obj59 = properties57.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration60 = properties57.elements();
        int int61 = properties57.size();
        java.util.Properties properties62 = new java.util.Properties();
        java.lang.Object obj64 = properties62.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration65 = properties62.elements();
        boolean boolean66 = properties62.isEmpty();
        java.util.Set<java.lang.Object> objSet67 = properties62.keySet();
        boolean boolean68 = properties57.containsKey((java.lang.Object) objSet67);
        java.lang.Object obj69 = properties7.putIfAbsent((java.lang.Object) true, (java.lang.Object) boolean68);
        properties0.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties7);
        java.lang.Object obj73 = properties0.setProperty("tmlog", "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=100, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=35, com.atomikos.icatch.threaded_2pc=true, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
        java.util.Enumeration<java.lang.Object> objEnumeration74 = properties0.elements();
        org.junit.Assert.assertNotNull(objCollection1);
        org.junit.Assert.assertNotNull(objEnumeration2);
        org.junit.Assert.assertNotNull(objCollection3);
        org.junit.Assert.assertNull(obj6);
        org.junit.Assert.assertNotNull(objCollection8);
        org.junit.Assert.assertNotNull(objEnumeration9);
        org.junit.Assert.assertNull(obj12);
        org.junit.Assert.assertNotNull(objEnumeration13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(objSet15);
        org.junit.Assert.assertNotNull(objEnumeration16);
        org.junit.Assert.assertNotNull(objEntrySet17);
        org.junit.Assert.assertNull(obj18);
        org.junit.Assert.assertNull(obj21);
        org.junit.Assert.assertNotNull(objEnumeration22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNotNull(objSet24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(objEntrySet26);
        org.junit.Assert.assertNull(obj29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNull(obj33);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 0 + "'", int39 == 0);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNull(str45);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertNull(str47);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertTrue("'" + long52 + "' != '" + 10000L + "'", long52 == 10000L);
        org.junit.Assert.assertNull(obj59);
        org.junit.Assert.assertNotNull(objEnumeration60);
        org.junit.Assert.assertTrue("'" + int61 + "' != '" + 0 + "'", int61 == 0);
        org.junit.Assert.assertNull(obj64);
        org.junit.Assert.assertNotNull(objEnumeration65);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66 == true);
        org.junit.Assert.assertNotNull(objSet67);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertNull(obj69);
        org.junit.Assert.assertNull(obj73);
        org.junit.Assert.assertNotNull(objEnumeration74);
    }

    @Test
    public void test5131() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test5131");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setSerialJtaTransactions(false);
        boolean boolean3 = atomikosProperties0.isSerialJtaTransactions();
        java.lang.String str4 = atomikosProperties0.getService();
        boolean boolean5 = atomikosProperties0.isEnableLogging();
        java.util.Properties properties6 = atomikosProperties0.asProperties();
        atomikosProperties0.setForceShutdownOnVmExit(true);
        atomikosProperties0.setMaxActives((int) (short) -1);
        atomikosProperties0.setMaxTimeout((long) ' ');
        atomikosProperties0.setEnableLogging(false);
        atomikosProperties0.setService("{{}={}}");
        atomikosProperties0.setLogBaseName("{{}={}}");
        atomikosProperties0.setLogBaseDir("{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=false, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=true, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
        atomikosProperties0.setLogBaseDir("");
        atomikosProperties0.setForceShutdownOnVmExit(true);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNotNull(properties6);
    }

    @Test
    public void test5132() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test5132");
        java.util.Properties properties0 = new java.util.Properties();
        boolean boolean2 = properties0.contains((java.lang.Object) 100.0d);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties3 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties3.setSerialJtaTransactions(false);
        atomikosProperties3.setThreadedTwoPhaseCommit(true);
        atomikosProperties3.setSerialJtaTransactions(false);
        java.lang.String str10 = atomikosProperties3.getService();
        boolean boolean11 = properties0.containsKey((java.lang.Object) atomikosProperties3);
        java.lang.String str12 = atomikosProperties3.getService();
        atomikosProperties3.setLogBaseName("{true=class org.springframework.boot.jta.atomikos.AtomikosProperties}");
        atomikosProperties3.setForceShutdownOnVmExit(false);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNull(str12);
    }

    @Test
    public void test5133() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test5133");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration3 = properties0.elements();
        boolean boolean4 = properties0.isEmpty();
        java.util.Set<java.lang.Object> objSet5 = properties0.keySet();
        java.lang.Object obj6 = properties0.clone();
        java.util.Properties properties7 = new java.util.Properties();
        java.util.Properties properties8 = new java.util.Properties();
        java.lang.Object obj10 = properties8.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet11 = properties8.stringPropertyNames();
        boolean boolean12 = properties7.containsValue((java.lang.Object) properties8);
        java.util.Collection<java.lang.Object> objCollection13 = properties7.values();
        java.lang.Object obj14 = properties7.clone();
        java.util.Properties properties15 = new java.util.Properties();
        java.lang.Object obj17 = properties15.remove((java.lang.Object) 0.0d);
        boolean boolean19 = properties15.containsValue((java.lang.Object) "hi!");
        java.lang.Object obj22 = properties15.put((java.lang.Object) (byte) -1, (java.lang.Object) 100L);
        java.util.Properties properties23 = new java.util.Properties();
        java.util.Properties properties24 = new java.util.Properties();
        java.lang.Object obj26 = properties24.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet27 = properties24.stringPropertyNames();
        boolean boolean28 = properties23.containsValue((java.lang.Object) properties24);
        java.util.Collection<java.lang.Object> objCollection29 = properties23.values();
        java.util.Properties properties31 = new java.util.Properties();
        java.lang.Object obj33 = properties31.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration34 = properties31.elements();
        boolean boolean35 = properties31.isEmpty();
        java.util.Set<java.lang.Object> objSet36 = properties31.keySet();
        java.lang.Object obj37 = properties23.putIfAbsent((java.lang.Object) "hi!", (java.lang.Object) objSet36);
        java.util.Set<java.lang.Object> objSet38 = properties23.keySet();
        boolean boolean39 = properties15.containsKey((java.lang.Object) properties23);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties40 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties40.setSerialJtaTransactions(false);
        boolean boolean43 = atomikosProperties40.isSerialJtaTransactions();
        atomikosProperties40.setCheckpointInterval((long) 10);
        atomikosProperties40.setForceShutdownOnVmExit(true);
        boolean boolean48 = properties0.replace((java.lang.Object) properties7, (java.lang.Object) properties15, (java.lang.Object) true);
        java.util.Enumeration<java.lang.Object> objEnumeration49 = properties15.elements();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties50 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties50.setSerialJtaTransactions(false);
        boolean boolean53 = atomikosProperties50.isSerialJtaTransactions();
        java.lang.String str54 = atomikosProperties50.getService();
        boolean boolean55 = atomikosProperties50.isEnableLogging();
        java.util.Properties properties56 = atomikosProperties50.asProperties();
        atomikosProperties50.setForceShutdownOnVmExit(true);
        atomikosProperties50.setMaxActives((int) (short) -1);
        atomikosProperties50.setMaxTimeout((long) ' ');
        atomikosProperties50.setEnableLogging(false);
        atomikosProperties50.setService("{{}={}}");
        java.lang.String str67 = atomikosProperties50.getLogBaseDir();
        long long68 = atomikosProperties50.getCheckpointInterval();
        boolean boolean69 = properties15.contains((java.lang.Object) long68);
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(objEnumeration3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(objSet5);
        org.junit.Assert.assertNotNull(obj6);
        org.junit.Assert.assertEquals(obj6.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj6), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj6), "{}");
        org.junit.Assert.assertNull(obj10);
        org.junit.Assert.assertNotNull(strSet11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(objCollection13);
        org.junit.Assert.assertNotNull(obj14);
        org.junit.Assert.assertEquals(obj14.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj14), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj14), "{}");
        org.junit.Assert.assertNull(obj17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNull(obj22);
        org.junit.Assert.assertNull(obj26);
        org.junit.Assert.assertNotNull(strSet27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(objCollection29);
        org.junit.Assert.assertNull(obj33);
        org.junit.Assert.assertNotNull(objEnumeration34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertNotNull(objSet36);
        org.junit.Assert.assertNull(obj37);
        org.junit.Assert.assertNotNull(objSet38);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNotNull(objEnumeration49);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertNull(str54);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertNotNull(properties56);
        org.junit.Assert.assertNull(str67);
        org.junit.Assert.assertTrue("'" + long68 + "' != '" + 500L + "'", long68 == 500L);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
    }

    @Test
    public void test5134() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test5134");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration3 = properties0.elements();
        boolean boolean4 = properties0.isEmpty();
        java.util.Set<java.lang.Object> objSet5 = properties0.keySet();
        java.util.Enumeration<java.lang.Object> objEnumeration6 = properties0.keys();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet7 = properties0.entrySet();
        java.util.Properties properties8 = new java.util.Properties();
        java.lang.Object obj10 = properties8.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration11 = properties8.elements();
        boolean boolean12 = properties8.isEmpty();
        java.util.Set<java.lang.Object> objSet13 = properties8.keySet();
        java.util.Enumeration<java.lang.Object> objEnumeration14 = properties8.keys();
        java.lang.String str16 = properties8.getProperty("hi!");
        java.lang.String str18 = properties8.getProperty("");
        java.lang.Object obj20 = properties0.putIfAbsent((java.lang.Object) "", (java.lang.Object) 100.0d);
        java.util.Properties properties21 = new java.util.Properties();
        java.lang.Object obj23 = properties21.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration24 = properties21.elements();
        int int25 = properties21.size();
        java.util.Properties properties26 = new java.util.Properties(properties21);
        java.util.Set<java.lang.String> strSet27 = properties21.stringPropertyNames();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties28 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties28.setSerialJtaTransactions(false);
        boolean boolean31 = atomikosProperties28.isSerialJtaTransactions();
        atomikosProperties28.setCheckpointInterval((long) 10);
        atomikosProperties28.setSerialJtaTransactions(true);
        java.util.Properties properties36 = new java.util.Properties();
        java.lang.Object obj38 = properties36.remove((java.lang.Object) 0.0d);
        boolean boolean39 = properties36.isEmpty();
        java.util.Enumeration<java.lang.Object> objEnumeration40 = properties36.elements();
        java.util.Enumeration<java.lang.Object> objEnumeration41 = properties36.elements();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties42 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties42.setSerialJtaTransactions(false);
        atomikosProperties42.setThreadedTwoPhaseCommit(true);
        atomikosProperties42.setMaxTimeout((long) '#');
        boolean boolean49 = atomikosProperties42.isForceShutdownOnVmExit();
        int int50 = atomikosProperties42.getMaxActives();
        java.lang.Object obj51 = properties36.remove((java.lang.Object) int50);
        boolean boolean52 = properties0.replace((java.lang.Object) strSet27, (java.lang.Object) true, (java.lang.Object) properties36);
        java.util.Enumeration<java.lang.Object> objEnumeration53 = properties36.elements();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties54 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties54.setSerialJtaTransactions(false);
        atomikosProperties54.setThreadedTwoPhaseCommit(true);
        java.lang.String str59 = atomikosProperties54.getLogBaseName();
        atomikosProperties54.setCheckpointInterval((long) 0);
        boolean boolean62 = atomikosProperties54.isEnableLogging();
        boolean boolean63 = atomikosProperties54.isSerialJtaTransactions();
        java.util.Properties properties64 = atomikosProperties54.asProperties();
        java.util.Properties properties65 = new java.util.Properties();
        java.lang.Object obj67 = properties65.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration68 = properties65.elements();
        boolean boolean69 = properties65.isEmpty();
        java.util.Set<java.lang.Object> objSet70 = properties65.keySet();
        boolean boolean71 = properties65.isEmpty();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet72 = properties65.entrySet();
        java.util.Properties properties73 = new java.util.Properties();
        java.lang.Object obj75 = properties73.remove((java.lang.Object) 0.0d);
        boolean boolean76 = properties73.isEmpty();
        java.lang.Object obj79 = properties73.setProperty("", "hi!");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties80 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties80.setSerialJtaTransactions(false);
        boolean boolean83 = properties65.remove((java.lang.Object) properties73, (java.lang.Object) atomikosProperties80);
        java.util.Properties properties84 = new java.util.Properties(properties73);
        int int85 = properties84.size();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties87 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties87.setSerialJtaTransactions(false);
        boolean boolean90 = atomikosProperties87.isSerialJtaTransactions();
        java.lang.String str91 = atomikosProperties87.getService();
        boolean boolean92 = atomikosProperties87.isEnableLogging();
        java.lang.String str93 = atomikosProperties87.getTransactionManagerUniqueName();
        boolean boolean94 = properties84.remove((java.lang.Object) (byte) 1, (java.lang.Object) atomikosProperties87);
        atomikosProperties87.setThreadedTwoPhaseCommit(true);
        java.lang.Object obj97 = properties36.getOrDefault((java.lang.Object) atomikosProperties54, (java.lang.Object) true);
        atomikosProperties54.setLogBaseName("");
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(objEnumeration3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(objSet5);
        org.junit.Assert.assertNotNull(objEnumeration6);
        org.junit.Assert.assertNotNull(objEntrySet7);
        org.junit.Assert.assertNull(obj10);
        org.junit.Assert.assertNotNull(objEnumeration11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(objSet13);
        org.junit.Assert.assertNotNull(objEnumeration14);
        org.junit.Assert.assertNull(str16);
        org.junit.Assert.assertNull(str18);
        org.junit.Assert.assertNull(obj20);
        org.junit.Assert.assertNull(obj23);
        org.junit.Assert.assertNotNull(objEnumeration24);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 0 + "'", int25 == 0);
        org.junit.Assert.assertNotNull(strSet27);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNull(obj38);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNotNull(objEnumeration40);
        org.junit.Assert.assertNotNull(objEnumeration41);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + 50 + "'", int50 == 50);
        org.junit.Assert.assertNull(obj51);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNotNull(objEnumeration53);
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "tmlog" + "'", str59, "tmlog");
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + true + "'", boolean62 == true);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertNotNull(properties64);
        org.junit.Assert.assertNull(obj67);
        org.junit.Assert.assertNotNull(objEnumeration68);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + true + "'", boolean69 == true);
        org.junit.Assert.assertNotNull(objSet70);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + true + "'", boolean71 == true);
        org.junit.Assert.assertNotNull(objEntrySet72);
        org.junit.Assert.assertNull(obj75);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + true + "'", boolean76 == true);
        org.junit.Assert.assertNull(obj79);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + false + "'", boolean83 == false);
        org.junit.Assert.assertTrue("'" + int85 + "' != '" + 0 + "'", int85 == 0);
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + false + "'", boolean90 == false);
        org.junit.Assert.assertNull(str91);
        org.junit.Assert.assertTrue("'" + boolean92 + "' != '" + true + "'", boolean92 == true);
        org.junit.Assert.assertNull(str93);
        org.junit.Assert.assertTrue("'" + boolean94 + "' != '" + false + "'", boolean94 == false);
        org.junit.Assert.assertEquals("'" + obj97 + "' != '" + true + "'", obj97, true);
    }

    @Test
    public void test5135() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test5135");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration3 = properties0.elements();
        int int4 = properties0.size();
        java.util.Properties properties5 = new java.util.Properties(properties0);
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet6 = properties5.entrySet();
        java.util.Properties properties7 = new java.util.Properties();
        java.lang.Object obj9 = properties7.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration10 = properties7.elements();
        boolean boolean11 = properties7.isEmpty();
        java.util.Set<java.lang.Object> objSet12 = properties7.keySet();
        boolean boolean13 = properties7.isEmpty();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet14 = properties7.entrySet();
        java.util.Properties properties15 = new java.util.Properties();
        java.lang.Object obj17 = properties15.remove((java.lang.Object) 0.0d);
        boolean boolean18 = properties15.isEmpty();
        java.lang.Object obj21 = properties15.setProperty("", "hi!");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties22 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties22.setSerialJtaTransactions(false);
        boolean boolean25 = properties7.remove((java.lang.Object) properties15, (java.lang.Object) atomikosProperties22);
        java.util.Properties properties26 = new java.util.Properties(properties15);
        int int27 = properties26.size();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties29 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties29.setSerialJtaTransactions(false);
        boolean boolean32 = atomikosProperties29.isSerialJtaTransactions();
        java.lang.String str33 = atomikosProperties29.getService();
        boolean boolean34 = atomikosProperties29.isEnableLogging();
        java.lang.String str35 = atomikosProperties29.getTransactionManagerUniqueName();
        boolean boolean36 = properties26.remove((java.lang.Object) (byte) 1, (java.lang.Object) atomikosProperties29);
        java.util.Properties properties37 = new java.util.Properties();
        java.lang.Object obj39 = properties37.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration40 = properties37.elements();
        boolean boolean41 = properties37.isEmpty();
        java.util.Enumeration<java.lang.Object> objEnumeration42 = properties37.elements();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet43 = properties37.entrySet();
        java.lang.Object obj44 = properties26.remove((java.lang.Object) objEntrySet43);
        java.lang.Object obj45 = properties26.clone();
        java.util.Set<java.lang.Object> objSet46 = properties26.keySet();
        java.util.Properties properties47 = new java.util.Properties();
        java.lang.Object obj49 = properties47.remove((java.lang.Object) 0.0d);
        boolean boolean50 = properties47.isEmpty();
        java.lang.Object obj53 = properties47.setProperty("", "hi!");
        java.util.Properties properties54 = new java.util.Properties();
        java.lang.Object obj56 = properties54.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration57 = properties54.elements();
        boolean boolean58 = properties54.isEmpty();
        java.util.Set<java.lang.Object> objSet59 = properties54.keySet();
        boolean boolean60 = properties54.isEmpty();
        java.util.Properties properties61 = new java.util.Properties();
        java.util.Collection<java.lang.Object> objCollection62 = properties61.values();
        java.util.Enumeration<java.lang.Object> objEnumeration63 = properties61.keys();
        java.lang.Object obj64 = properties54.remove((java.lang.Object) properties61);
        java.lang.Object obj65 = properties47.get((java.lang.Object) properties61);
        java.util.Properties properties66 = new java.util.Properties();
        java.lang.Object obj68 = properties66.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration69 = properties66.elements();
        boolean boolean70 = properties66.isEmpty();
        java.util.Set<java.lang.Object> objSet71 = properties66.keySet();
        boolean boolean72 = properties66.isEmpty();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet73 = properties66.entrySet();
        java.util.Properties properties74 = new java.util.Properties();
        java.lang.Object obj76 = properties74.remove((java.lang.Object) 0.0d);
        boolean boolean77 = properties74.isEmpty();
        java.lang.Object obj80 = properties74.setProperty("", "hi!");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties81 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties81.setSerialJtaTransactions(false);
        boolean boolean84 = properties66.remove((java.lang.Object) properties74, (java.lang.Object) atomikosProperties81);
        properties61.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties66);
        java.util.Set<java.lang.Object> objSet86 = properties66.keySet();
        java.lang.Object obj87 = properties66.clone();
        boolean boolean88 = properties26.containsKey(obj87);
        properties5.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties26);
        java.lang.String str90 = properties26.toString();
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(objEnumeration3);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNotNull(objEntrySet6);
        org.junit.Assert.assertNull(obj9);
        org.junit.Assert.assertNotNull(objEnumeration10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNotNull(objSet12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(objEntrySet14);
        org.junit.Assert.assertNull(obj17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNull(obj21);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 0 + "'", int27 == 0);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNull(str33);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertNull(str35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNull(obj39);
        org.junit.Assert.assertNotNull(objEnumeration40);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertNotNull(objEnumeration42);
        org.junit.Assert.assertNotNull(objEntrySet43);
        org.junit.Assert.assertNull(obj44);
        org.junit.Assert.assertNotNull(obj45);
        org.junit.Assert.assertEquals(obj45.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj45), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj45), "{}");
        org.junit.Assert.assertNotNull(objSet46);
        org.junit.Assert.assertNull(obj49);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertNull(obj53);
        org.junit.Assert.assertNull(obj56);
        org.junit.Assert.assertNotNull(objEnumeration57);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertNotNull(objSet59);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertNotNull(objCollection62);
        org.junit.Assert.assertNotNull(objEnumeration63);
        org.junit.Assert.assertNull(obj64);
        org.junit.Assert.assertNull(obj65);
        org.junit.Assert.assertNull(obj68);
        org.junit.Assert.assertNotNull(objEnumeration69);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + true + "'", boolean70 == true);
        org.junit.Assert.assertNotNull(objSet71);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + true + "'", boolean72 == true);
        org.junit.Assert.assertNotNull(objEntrySet73);
        org.junit.Assert.assertNull(obj76);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + true + "'", boolean77 == true);
        org.junit.Assert.assertNull(obj80);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + false + "'", boolean84 == false);
        org.junit.Assert.assertNotNull(objSet86);
        org.junit.Assert.assertNotNull(obj87);
        org.junit.Assert.assertEquals(obj87.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj87), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj87), "{}");
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + false + "'", boolean88 == false);
        org.junit.Assert.assertEquals("'" + str90 + "' != '" + "{}" + "'", str90, "{}");
    }

    @Test
    public void test5136() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test5136");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration3 = properties0.elements();
        boolean boolean4 = properties0.isEmpty();
        java.util.Set<java.lang.Object> objSet5 = properties0.keySet();
        boolean boolean6 = properties0.isEmpty();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet7 = properties0.entrySet();
        java.util.Enumeration<java.lang.Object> objEnumeration8 = properties0.keys();
        java.util.Properties properties9 = new java.util.Properties();
        java.lang.Object obj11 = properties9.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration12 = properties9.elements();
        boolean boolean13 = properties9.isEmpty();
        java.util.Set<java.lang.Object> objSet14 = properties9.keySet();
        boolean boolean15 = properties9.isEmpty();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet16 = properties9.entrySet();
        java.util.Properties properties17 = new java.util.Properties();
        java.lang.Object obj19 = properties17.remove((java.lang.Object) 0.0d);
        boolean boolean20 = properties17.isEmpty();
        java.lang.Object obj23 = properties17.setProperty("", "hi!");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties24 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties24.setSerialJtaTransactions(false);
        boolean boolean27 = properties9.remove((java.lang.Object) properties17, (java.lang.Object) atomikosProperties24);
        java.util.Properties properties28 = new java.util.Properties(properties17);
        int int29 = properties28.size();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties31 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties31.setSerialJtaTransactions(false);
        boolean boolean34 = atomikosProperties31.isSerialJtaTransactions();
        java.lang.String str35 = atomikosProperties31.getService();
        boolean boolean36 = atomikosProperties31.isEnableLogging();
        java.lang.String str37 = atomikosProperties31.getTransactionManagerUniqueName();
        boolean boolean38 = properties28.remove((java.lang.Object) (byte) 1, (java.lang.Object) atomikosProperties31);
        atomikosProperties31.setMaxActives((int) (short) -1);
        boolean boolean41 = atomikosProperties31.isThreadedTwoPhaseCommit();
        atomikosProperties31.setDefaultJtaTimeout((long) 100);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties44 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties44.setSerialJtaTransactions(false);
        boolean boolean47 = atomikosProperties44.isSerialJtaTransactions();
        int int48 = atomikosProperties44.getMaxActives();
        atomikosProperties44.setSerialJtaTransactions(true);
        java.util.Properties properties51 = new java.util.Properties();
        java.lang.Object obj53 = properties51.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration54 = properties51.elements();
        boolean boolean55 = properties51.isEmpty();
        java.util.Set<java.lang.Object> objSet56 = properties51.keySet();
        boolean boolean57 = properties51.isEmpty();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet58 = properties51.entrySet();
        java.util.Set<java.lang.Object> objSet59 = properties51.keySet();
        boolean boolean60 = properties0.replace((java.lang.Object) atomikosProperties31, (java.lang.Object) atomikosProperties44, (java.lang.Object) objSet59);
        java.util.Collection<java.lang.Object> objCollection61 = properties0.values();
        java.io.OutputStream outputStream62 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties0.store(outputStream62, "{{}=tmlog}");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(objEnumeration3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(objSet5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(objEntrySet7);
        org.junit.Assert.assertNotNull(objEnumeration8);
        org.junit.Assert.assertNull(obj11);
        org.junit.Assert.assertNotNull(objEnumeration12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(objSet14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(objEntrySet16);
        org.junit.Assert.assertNull(obj19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNull(obj23);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 0 + "'", int29 == 0);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNull(str35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNull(str37);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 50 + "'", int48 == 50);
        org.junit.Assert.assertNull(obj53);
        org.junit.Assert.assertNotNull(objEnumeration54);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertNotNull(objSet56);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertNotNull(objEntrySet58);
        org.junit.Assert.assertNotNull(objSet59);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertNotNull(objCollection61);
    }

    @Test
    public void test5137() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test5137");
        java.util.Properties properties0 = new java.util.Properties();
        java.util.Properties properties1 = new java.util.Properties();
        java.lang.Object obj3 = properties1.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet4 = properties1.stringPropertyNames();
        boolean boolean5 = properties0.containsValue((java.lang.Object) properties1);
        java.util.Collection<java.lang.Object> objCollection6 = properties0.values();
        java.util.Enumeration<?> wildcardEnumeration7 = properties0.propertyNames();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet8 = properties0.entrySet();
        java.util.Properties properties9 = new java.util.Properties();
        java.lang.Object obj11 = properties9.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration12 = properties9.elements();
        boolean boolean13 = properties9.isEmpty();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet14 = properties9.entrySet();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties16 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties16.setSerialJtaTransactions(false);
        atomikosProperties16.setThreadedTwoPhaseCommit(true);
        atomikosProperties16.setMaxTimeout((long) '#');
        boolean boolean23 = atomikosProperties16.isForceShutdownOnVmExit();
        java.lang.Object obj24 = properties9.put((java.lang.Object) (short) 1, (java.lang.Object) atomikosProperties16);
        atomikosProperties16.setForceShutdownOnVmExit(true);
        java.util.Properties properties27 = atomikosProperties16.asProperties();
        boolean boolean28 = properties0.containsValue((java.lang.Object) atomikosProperties16);
        atomikosProperties16.setLogBaseDir("");
        atomikosProperties16.setSerialJtaTransactions(false);
        atomikosProperties16.setService("{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=false, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=35, com.atomikos.icatch.threaded_2pc=true, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
        org.junit.Assert.assertNull(obj3);
        org.junit.Assert.assertNotNull(strSet4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(objCollection6);
        org.junit.Assert.assertNotNull(wildcardEnumeration7);
        org.junit.Assert.assertNotNull(objEntrySet8);
        org.junit.Assert.assertNull(obj11);
        org.junit.Assert.assertNotNull(objEnumeration12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(objEntrySet14);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNull(obj24);
        org.junit.Assert.assertNotNull(properties27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
    }

    @Test
    public void test5138() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test5138");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<?> wildcardEnumeration3 = properties0.propertyNames();
        java.util.Properties properties4 = new java.util.Properties();
        java.lang.Object obj6 = properties4.remove((java.lang.Object) 0.0d);
        boolean boolean7 = properties4.isEmpty();
        java.util.Enumeration<java.lang.Object> objEnumeration8 = properties4.elements();
        java.util.Enumeration<java.lang.Object> objEnumeration9 = properties4.elements();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties10 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties10.setSerialJtaTransactions(false);
        atomikosProperties10.setThreadedTwoPhaseCommit(true);
        atomikosProperties10.setMaxTimeout((long) '#');
        boolean boolean17 = atomikosProperties10.isForceShutdownOnVmExit();
        int int18 = atomikosProperties10.getMaxActives();
        java.lang.Object obj19 = properties4.remove((java.lang.Object) int18);
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet20 = properties4.entrySet();
        java.util.Properties properties21 = new java.util.Properties();
        java.lang.Object obj23 = properties21.remove((java.lang.Object) 0.0d);
        java.lang.String str25 = properties21.getProperty("");
        java.lang.Object obj26 = properties0.getOrDefault((java.lang.Object) properties4, (java.lang.Object) str25);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties27 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties27.setSerialJtaTransactions(false);
        atomikosProperties27.setThreadedTwoPhaseCommit(true);
        atomikosProperties27.setMaxTimeout((long) '#');
        boolean boolean34 = atomikosProperties27.isEnableLogging();
        atomikosProperties27.setCheckpointInterval((long) 100);
        atomikosProperties27.setForceShutdownOnVmExit(false);
        boolean boolean39 = properties0.equals((java.lang.Object) atomikosProperties27);
        java.io.Writer writer40 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties0.store(writer40, "{hi!=[], {}={}}");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(wildcardEnumeration3);
        org.junit.Assert.assertNull(obj6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(objEnumeration8);
        org.junit.Assert.assertNotNull(objEnumeration9);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 50 + "'", int18 == 50);
        org.junit.Assert.assertNull(obj19);
        org.junit.Assert.assertNotNull(objEntrySet20);
        org.junit.Assert.assertNull(obj23);
        org.junit.Assert.assertNull(str25);
        org.junit.Assert.assertNull(obj26);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
    }

    @Test
    public void test5139() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test5139");
        java.util.Properties properties0 = new java.util.Properties();
        java.util.Collection<java.lang.Object> objCollection1 = properties0.values();
        java.util.Enumeration<java.lang.Object> objEnumeration2 = properties0.keys();
        java.lang.Object obj5 = properties0.setProperty("{}", "{}");
        java.util.Set<java.lang.String> strSet6 = properties0.stringPropertyNames();
        java.util.Properties properties7 = new java.util.Properties();
        java.lang.Object obj9 = properties7.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration10 = properties7.elements();
        int int11 = properties7.size();
        java.util.Properties properties12 = new java.util.Properties();
        java.lang.Object obj14 = properties12.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration15 = properties12.elements();
        boolean boolean16 = properties12.isEmpty();
        java.util.Set<java.lang.Object> objSet17 = properties12.keySet();
        boolean boolean18 = properties7.containsKey((java.lang.Object) objSet17);
        java.util.Enumeration<java.lang.Object> objEnumeration19 = properties7.keys();
        java.util.Properties properties20 = new java.util.Properties();
        java.lang.Object obj22 = properties20.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration23 = properties20.elements();
        boolean boolean24 = properties20.isEmpty();
        java.util.Set<java.lang.Object> objSet25 = properties20.keySet();
        java.util.Enumeration<java.lang.Object> objEnumeration26 = properties20.keys();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet27 = properties20.entrySet();
        boolean boolean29 = properties7.remove((java.lang.Object) properties20, (java.lang.Object) 1.0f);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties30 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties30.setSerialJtaTransactions(false);
        atomikosProperties30.setThreadedTwoPhaseCommit(true);
        atomikosProperties30.setMaxTimeout((long) '#');
        long long37 = atomikosProperties30.getCheckpointInterval();
        java.lang.String str38 = atomikosProperties30.getTransactionManagerUniqueName();
        atomikosProperties30.setTransactionManagerUniqueName("{=hi!}");
        atomikosProperties30.setSerialJtaTransactions(false);
        java.util.Properties properties43 = atomikosProperties30.asProperties();
        java.lang.Object obj44 = properties20.remove((java.lang.Object) properties43);
        java.util.Properties properties45 = new java.util.Properties();
        java.lang.Object obj47 = properties45.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration48 = properties45.elements();
        boolean boolean49 = properties45.isEmpty();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet50 = properties45.entrySet();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties52 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties52.setSerialJtaTransactions(false);
        atomikosProperties52.setThreadedTwoPhaseCommit(true);
        atomikosProperties52.setMaxTimeout((long) '#');
        boolean boolean59 = atomikosProperties52.isForceShutdownOnVmExit();
        java.lang.Object obj60 = properties45.put((java.lang.Object) (short) 1, (java.lang.Object) atomikosProperties52);
        atomikosProperties52.setForceShutdownOnVmExit(true);
        java.util.Properties properties63 = atomikosProperties52.asProperties();
        java.lang.Object obj64 = properties0.put((java.lang.Object) properties43, (java.lang.Object) atomikosProperties52);
        long long65 = atomikosProperties52.getCheckpointInterval();
        java.lang.String str66 = atomikosProperties52.getLogBaseName();
        org.junit.Assert.assertNotNull(objCollection1);
        org.junit.Assert.assertNotNull(objEnumeration2);
        org.junit.Assert.assertNull(obj5);
        org.junit.Assert.assertNotNull(strSet6);
        org.junit.Assert.assertNull(obj9);
        org.junit.Assert.assertNotNull(objEnumeration10);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertNull(obj14);
        org.junit.Assert.assertNotNull(objEnumeration15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(objSet17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(objEnumeration19);
        org.junit.Assert.assertNull(obj22);
        org.junit.Assert.assertNotNull(objEnumeration23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNotNull(objSet25);
        org.junit.Assert.assertNotNull(objEnumeration26);
        org.junit.Assert.assertNotNull(objEntrySet27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + long37 + "' != '" + 500L + "'", long37 == 500L);
        org.junit.Assert.assertNull(str38);
        org.junit.Assert.assertNotNull(properties43);
        org.junit.Assert.assertNull(obj44);
        org.junit.Assert.assertNull(obj47);
        org.junit.Assert.assertNotNull(objEnumeration48);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertNotNull(objEntrySet50);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertNull(obj60);
        org.junit.Assert.assertNotNull(properties63);
        org.junit.Assert.assertNull(obj64);
        org.junit.Assert.assertTrue("'" + long65 + "' != '" + 500L + "'", long65 == 500L);
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "tmlog" + "'", str66, "tmlog");
    }

    @Test
    public void test5140() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test5140");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration3 = properties0.elements();
        boolean boolean4 = properties0.isEmpty();
        java.util.Set<java.lang.Object> objSet5 = properties0.keySet();
        boolean boolean6 = properties0.isEmpty();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet7 = properties0.entrySet();
        java.util.Properties properties8 = new java.util.Properties();
        java.lang.Object obj10 = properties8.remove((java.lang.Object) 0.0d);
        boolean boolean11 = properties8.isEmpty();
        java.lang.Object obj14 = properties8.setProperty("", "hi!");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties15 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties15.setSerialJtaTransactions(false);
        boolean boolean18 = properties0.remove((java.lang.Object) properties8, (java.lang.Object) atomikosProperties15);
        java.util.Properties properties19 = new java.util.Properties(properties8);
        int int20 = properties19.size();
        java.util.Enumeration<?> wildcardEnumeration21 = properties19.propertyNames();
        java.lang.Object obj22 = properties19.clone();
        java.util.Properties properties23 = new java.util.Properties(properties19);
        java.util.Properties properties24 = new java.util.Properties();
        java.lang.Object obj26 = properties24.remove((java.lang.Object) 0.0d);
        boolean boolean28 = properties24.containsValue((java.lang.Object) "hi!");
        java.lang.Object obj31 = properties24.put((java.lang.Object) (byte) -1, (java.lang.Object) 100L);
        java.util.Enumeration<java.lang.Object> objEnumeration32 = properties24.keys();
        java.util.Properties properties33 = new java.util.Properties();
        java.lang.Object obj35 = properties33.remove((java.lang.Object) 0.0d);
        boolean boolean37 = properties33.containsValue((java.lang.Object) "hi!");
        java.lang.Object obj40 = properties33.put((java.lang.Object) (byte) -1, (java.lang.Object) 100L);
        java.util.Properties properties41 = new java.util.Properties();
        java.util.Properties properties42 = new java.util.Properties();
        java.lang.Object obj44 = properties42.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet45 = properties42.stringPropertyNames();
        boolean boolean46 = properties41.containsValue((java.lang.Object) properties42);
        java.util.Collection<java.lang.Object> objCollection47 = properties41.values();
        java.util.Properties properties49 = new java.util.Properties();
        java.lang.Object obj51 = properties49.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration52 = properties49.elements();
        boolean boolean53 = properties49.isEmpty();
        java.util.Set<java.lang.Object> objSet54 = properties49.keySet();
        java.lang.Object obj55 = properties41.putIfAbsent((java.lang.Object) "hi!", (java.lang.Object) objSet54);
        java.util.Set<java.lang.Object> objSet56 = properties41.keySet();
        boolean boolean57 = properties33.containsKey((java.lang.Object) properties41);
        java.util.Enumeration<java.lang.Object> objEnumeration58 = properties41.elements();
        java.util.Properties properties59 = new java.util.Properties();
        java.lang.Object obj61 = properties59.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration62 = properties59.elements();
        boolean boolean63 = properties59.isEmpty();
        java.util.Set<java.lang.Object> objSet64 = properties59.keySet();
        boolean boolean65 = properties59.isEmpty();
        boolean boolean66 = properties41.contains((java.lang.Object) boolean65);
        java.lang.String str67 = properties41.toString();
        properties41.clear();
        java.lang.Object obj69 = null;
        java.lang.Object obj70 = properties24.getOrDefault((java.lang.Object) properties41, obj69);
        java.util.Properties properties71 = new java.util.Properties();
        java.lang.Object obj73 = properties71.remove((java.lang.Object) 0.0d);
        boolean boolean74 = properties71.isEmpty();
        java.lang.Object obj77 = properties71.setProperty("", "hi!");
        java.util.Set<java.lang.Object> objSet78 = properties71.keySet();
        boolean boolean79 = properties41.contains((java.lang.Object) objSet78);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties80 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties80.setSerialJtaTransactions(false);
        atomikosProperties80.setThreadedTwoPhaseCommit(true);
        atomikosProperties80.setThreadedTwoPhaseCommit(true);
        atomikosProperties80.setLogBaseName("{=hi!}");
        atomikosProperties80.setService("{hi!=[], {}={}}");
        java.lang.Object obj91 = properties23.putIfAbsent((java.lang.Object) boolean79, (java.lang.Object) "{hi!=[], {}={}}");
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(objEnumeration3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(objSet5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(objEntrySet7);
        org.junit.Assert.assertNull(obj10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNull(obj14);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 0 + "'", int20 == 0);
        org.junit.Assert.assertNotNull(wildcardEnumeration21);
        org.junit.Assert.assertNotNull(obj22);
        org.junit.Assert.assertEquals(obj22.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj22), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj22), "{}");
        org.junit.Assert.assertNull(obj26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNull(obj31);
        org.junit.Assert.assertNotNull(objEnumeration32);
        org.junit.Assert.assertNull(obj35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNull(obj40);
        org.junit.Assert.assertNull(obj44);
        org.junit.Assert.assertNotNull(strSet45);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(objCollection47);
        org.junit.Assert.assertNull(obj51);
        org.junit.Assert.assertNotNull(objEnumeration52);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertNotNull(objSet54);
        org.junit.Assert.assertNull(obj55);
        org.junit.Assert.assertNotNull(objSet56);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertNotNull(objEnumeration58);
        org.junit.Assert.assertNull(obj61);
        org.junit.Assert.assertNotNull(objEnumeration62);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertNotNull(objSet64);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65 == true);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertEquals("'" + str67 + "' != '" + "{hi!=[]}" + "'", str67, "{hi!=[]}");
        org.junit.Assert.assertNull(obj70);
        org.junit.Assert.assertNull(obj73);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + true + "'", boolean74 == true);
        org.junit.Assert.assertNull(obj77);
        org.junit.Assert.assertNotNull(objSet78);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + false + "'", boolean79 == false);
        org.junit.Assert.assertNull(obj91);
    }

    @Test
    public void test5141() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test5141");
        java.util.Properties properties0 = new java.util.Properties();
        boolean boolean2 = properties0.contains((java.lang.Object) 100.0d);
        java.util.Properties properties3 = new java.util.Properties();
        java.lang.Object obj5 = properties3.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration6 = properties3.elements();
        boolean boolean7 = properties3.isEmpty();
        java.util.Set<java.lang.Object> objSet8 = properties3.keySet();
        boolean boolean9 = properties3.isEmpty();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet10 = properties3.entrySet();
        java.util.Properties properties11 = new java.util.Properties();
        java.lang.Object obj13 = properties11.remove((java.lang.Object) 0.0d);
        boolean boolean14 = properties11.isEmpty();
        java.lang.Object obj17 = properties11.setProperty("", "hi!");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties18 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties18.setSerialJtaTransactions(false);
        boolean boolean21 = properties3.remove((java.lang.Object) properties11, (java.lang.Object) atomikosProperties18);
        boolean boolean22 = properties0.equals((java.lang.Object) properties3);
        java.util.Enumeration<java.lang.Object> objEnumeration23 = properties0.elements();
        java.util.Collection<java.lang.Object> objCollection24 = properties0.values();
        java.lang.Object obj27 = properties0.setProperty("{true=class org.springframework.boot.jta.atomikos.AtomikosProperties}", "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=false, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNull(obj5);
        org.junit.Assert.assertNotNull(objEnumeration6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(objSet8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertNotNull(objEntrySet10);
        org.junit.Assert.assertNull(obj13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNull(obj17);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNotNull(objEnumeration23);
        org.junit.Assert.assertNotNull(objCollection24);
        org.junit.Assert.assertNull(obj27);
    }

    @Test
    public void test5142() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test5142");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setSerialJtaTransactions(false);
        boolean boolean3 = atomikosProperties0.isSerialJtaTransactions();
        java.lang.String str4 = atomikosProperties0.getService();
        atomikosProperties0.setEnableLogging(false);
        atomikosProperties0.setLogBaseDir("{}");
        java.lang.String str9 = atomikosProperties0.getService();
        atomikosProperties0.setDefaultJtaTimeout(500L);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertNull(str9);
    }

    @Test
    public void test5143() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test5143");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        boolean boolean3 = properties0.isEmpty();
        java.lang.Object obj6 = properties0.setProperty("", "hi!");
        int int7 = properties0.size();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties8 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties8.setSerialJtaTransactions(false);
        boolean boolean11 = atomikosProperties8.isSerialJtaTransactions();
        java.lang.String str12 = atomikosProperties8.getService();
        atomikosProperties8.setEnableLogging(false);
        java.util.Properties properties15 = atomikosProperties8.asProperties();
        java.util.Properties properties16 = new java.util.Properties();
        java.lang.Object obj18 = properties16.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet19 = properties16.stringPropertyNames();
        java.util.Properties properties20 = new java.util.Properties();
        java.util.Properties properties21 = new java.util.Properties();
        java.lang.Object obj23 = properties21.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet24 = properties21.stringPropertyNames();
        boolean boolean25 = properties20.containsValue((java.lang.Object) properties21);
        java.util.Collection<java.lang.Object> objCollection26 = properties20.values();
        java.util.Enumeration<?> wildcardEnumeration27 = properties20.propertyNames();
        java.lang.Object obj29 = properties16.put((java.lang.Object) wildcardEnumeration27, (java.lang.Object) 10.0d);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties30 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties30.setSerialJtaTransactions(false);
        atomikosProperties30.setThreadedTwoPhaseCommit(true);
        atomikosProperties30.setMaxTimeout((long) '#');
        boolean boolean37 = atomikosProperties30.isForceShutdownOnVmExit();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties38 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties38.setSerialJtaTransactions(false);
        atomikosProperties38.setThreadedTwoPhaseCommit(true);
        atomikosProperties38.setThreadedTwoPhaseCommit(true);
        java.lang.Object obj45 = properties16.getOrDefault((java.lang.Object) boolean37, (java.lang.Object) atomikosProperties38);
        java.lang.Object obj46 = properties0.putIfAbsent((java.lang.Object) atomikosProperties8, (java.lang.Object) atomikosProperties38);
        java.lang.String str47 = atomikosProperties8.getTransactionManagerUniqueName();
        atomikosProperties8.setMaxTimeout(35L);
        long long50 = atomikosProperties8.getDefaultJtaTimeout();
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNull(obj6);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 1 + "'", int7 == 1);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNotNull(properties15);
        org.junit.Assert.assertNull(obj18);
        org.junit.Assert.assertNotNull(strSet19);
        org.junit.Assert.assertNull(obj23);
        org.junit.Assert.assertNotNull(strSet24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(objCollection26);
        org.junit.Assert.assertNotNull(wildcardEnumeration27);
        org.junit.Assert.assertNull(obj29);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(obj45);
        org.junit.Assert.assertNull(obj46);
        org.junit.Assert.assertNull(str47);
        org.junit.Assert.assertTrue("'" + long50 + "' != '" + 10000L + "'", long50 == 10000L);
    }

    @Test
    public void test5144() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test5144");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setSerialJtaTransactions(false);
        atomikosProperties0.setThreadedTwoPhaseCommit(true);
        boolean boolean5 = atomikosProperties0.isForceShutdownOnVmExit();
        java.lang.String str6 = atomikosProperties0.getLogBaseDir();
        atomikosProperties0.setEnableLogging(false);
        java.lang.String str9 = atomikosProperties0.getLogBaseName();
        atomikosProperties0.setLogBaseName("hi!");
        java.lang.String str12 = atomikosProperties0.getLogBaseDir();
        boolean boolean13 = atomikosProperties0.isEnableLogging();
        atomikosProperties0.setService("{tmlog=}");
        atomikosProperties0.setLogBaseDir("{{}=tmlog}");
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "tmlog" + "'", str9, "tmlog");
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
    }

    @Test
    public void test5145() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test5145");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration3 = properties0.elements();
        boolean boolean4 = properties0.isEmpty();
        java.util.Set<java.lang.Object> objSet5 = properties0.keySet();
        java.util.Enumeration<java.lang.Object> objEnumeration6 = properties0.keys();
        java.lang.String str8 = properties0.getProperty("hi!");
        java.lang.String str10 = properties0.getProperty("");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties11 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties11.setSerialJtaTransactions(false);
        atomikosProperties11.setThreadedTwoPhaseCommit(true);
        atomikosProperties11.setEnableLogging(false);
        boolean boolean18 = properties0.containsKey((java.lang.Object) atomikosProperties11);
        atomikosProperties11.setTransactionManagerUniqueName("tmlog");
        atomikosProperties11.setEnableLogging(true);
        long long23 = atomikosProperties11.getMaxTimeout();
        atomikosProperties11.setEnableLogging(false);
        java.util.Properties properties26 = atomikosProperties11.asProperties();
        boolean boolean27 = atomikosProperties11.isForceShutdownOnVmExit();
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(objEnumeration3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(objSet5);
        org.junit.Assert.assertNotNull(objEnumeration6);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + long23 + "' != '" + 300000L + "'", long23 == 300000L);
        org.junit.Assert.assertNotNull(properties26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
    }

    @Test
    public void test5146() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test5146");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet3 = properties0.stringPropertyNames();
        java.util.Properties properties4 = new java.util.Properties();
        java.lang.Object obj6 = properties4.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet7 = properties4.stringPropertyNames();
        java.lang.Object obj9 = properties0.put((java.lang.Object) strSet7, (java.lang.Object) 0.0d);
        java.util.Properties properties10 = new java.util.Properties();
        java.util.Properties properties11 = new java.util.Properties();
        java.lang.Object obj13 = properties11.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet14 = properties11.stringPropertyNames();
        boolean boolean15 = properties10.containsValue((java.lang.Object) properties11);
        java.util.Collection<java.lang.Object> objCollection16 = properties10.values();
        java.util.Properties properties18 = new java.util.Properties();
        java.lang.Object obj20 = properties18.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration21 = properties18.elements();
        boolean boolean22 = properties18.isEmpty();
        java.util.Set<java.lang.Object> objSet23 = properties18.keySet();
        java.lang.Object obj24 = properties10.putIfAbsent((java.lang.Object) "hi!", (java.lang.Object) objSet23);
        java.util.Set<java.lang.Object> objSet25 = properties10.keySet();
        java.lang.Object obj27 = properties0.putIfAbsent((java.lang.Object) properties10, (java.lang.Object) (short) 10);
        java.util.Properties properties28 = new java.util.Properties();
        java.lang.Object obj30 = properties28.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration31 = properties28.elements();
        boolean boolean32 = properties28.isEmpty();
        java.util.Set<java.lang.Object> objSet33 = properties28.keySet();
        java.util.Enumeration<java.lang.Object> objEnumeration34 = properties28.keys();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet35 = properties28.entrySet();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties36 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties36.setSerialJtaTransactions(false);
        boolean boolean39 = atomikosProperties36.isThreadedTwoPhaseCommit();
        java.util.Properties properties40 = new java.util.Properties();
        java.lang.Object obj42 = properties40.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration43 = properties40.elements();
        int int44 = properties40.size();
        java.util.Properties properties45 = new java.util.Properties();
        java.lang.Object obj47 = properties45.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration48 = properties45.elements();
        boolean boolean49 = properties45.isEmpty();
        java.util.Set<java.lang.Object> objSet50 = properties45.keySet();
        boolean boolean51 = properties40.containsKey((java.lang.Object) objSet50);
        java.util.Enumeration<java.lang.Object> objEnumeration52 = properties40.keys();
        java.util.Properties properties53 = new java.util.Properties();
        java.lang.Object obj55 = properties53.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration56 = properties53.elements();
        boolean boolean57 = properties53.isEmpty();
        java.util.Set<java.lang.Object> objSet58 = properties53.keySet();
        java.util.Enumeration<java.lang.Object> objEnumeration59 = properties53.keys();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet60 = properties53.entrySet();
        boolean boolean62 = properties40.remove((java.lang.Object) properties53, (java.lang.Object) 1.0f);
        java.util.Enumeration<?> wildcardEnumeration63 = properties53.propertyNames();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties64 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties64.setSerialJtaTransactions(false);
        atomikosProperties64.setThreadedTwoPhaseCommit(true);
        atomikosProperties64.setThreadedTwoPhaseCommit(true);
        java.util.Properties properties71 = atomikosProperties64.asProperties();
        java.util.Set<java.lang.String> strSet72 = properties71.stringPropertyNames();
        java.util.Set<java.lang.Object> objSet73 = properties71.keySet();
        java.util.Properties properties74 = new java.util.Properties();
        java.lang.Object obj76 = properties74.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration77 = properties74.elements();
        boolean boolean78 = properties74.isEmpty();
        java.util.Set<java.lang.Object> objSet79 = properties74.keySet();
        boolean boolean80 = properties74.isEmpty();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet81 = properties74.entrySet();
        java.util.Properties properties82 = new java.util.Properties();
        java.lang.Object obj84 = properties82.remove((java.lang.Object) 0.0d);
        boolean boolean85 = properties82.isEmpty();
        java.lang.Object obj88 = properties82.setProperty("", "hi!");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties89 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties89.setSerialJtaTransactions(false);
        boolean boolean92 = properties74.remove((java.lang.Object) properties82, (java.lang.Object) atomikosProperties89);
        atomikosProperties89.setSerialJtaTransactions(false);
        java.lang.Object obj95 = properties53.put((java.lang.Object) objSet73, (java.lang.Object) false);
        java.lang.Object obj96 = properties28.replace((java.lang.Object) atomikosProperties36, (java.lang.Object) properties53);
        boolean boolean97 = properties0.equals((java.lang.Object) atomikosProperties36);
        java.util.Properties properties98 = new java.util.Properties(properties0);
        int int99 = properties0.size();
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(strSet3);
        org.junit.Assert.assertNull(obj6);
        org.junit.Assert.assertNotNull(strSet7);
        org.junit.Assert.assertNull(obj9);
        org.junit.Assert.assertNull(obj13);
        org.junit.Assert.assertNotNull(strSet14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(objCollection16);
        org.junit.Assert.assertNull(obj20);
        org.junit.Assert.assertNotNull(objEnumeration21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNotNull(objSet23);
        org.junit.Assert.assertNull(obj24);
        org.junit.Assert.assertNotNull(objSet25);
        org.junit.Assert.assertNull(obj27);
        org.junit.Assert.assertNull(obj30);
        org.junit.Assert.assertNotNull(objEnumeration31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertNotNull(objSet33);
        org.junit.Assert.assertNotNull(objEnumeration34);
        org.junit.Assert.assertNotNull(objEntrySet35);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNull(obj42);
        org.junit.Assert.assertNotNull(objEnumeration43);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 0 + "'", int44 == 0);
        org.junit.Assert.assertNull(obj47);
        org.junit.Assert.assertNotNull(objEnumeration48);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertNotNull(objSet50);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertNotNull(objEnumeration52);
        org.junit.Assert.assertNull(obj55);
        org.junit.Assert.assertNotNull(objEnumeration56);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertNotNull(objSet58);
        org.junit.Assert.assertNotNull(objEnumeration59);
        org.junit.Assert.assertNotNull(objEntrySet60);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertNotNull(wildcardEnumeration63);
        org.junit.Assert.assertNotNull(properties71);
        org.junit.Assert.assertNotNull(strSet72);
        org.junit.Assert.assertNotNull(objSet73);
        org.junit.Assert.assertNull(obj76);
        org.junit.Assert.assertNotNull(objEnumeration77);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + true + "'", boolean78 == true);
        org.junit.Assert.assertNotNull(objSet79);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + true + "'", boolean80 == true);
        org.junit.Assert.assertNotNull(objEntrySet81);
        org.junit.Assert.assertNull(obj84);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + true + "'", boolean85 == true);
        org.junit.Assert.assertNull(obj88);
        org.junit.Assert.assertTrue("'" + boolean92 + "' != '" + false + "'", boolean92 == false);
        org.junit.Assert.assertNull(obj95);
        org.junit.Assert.assertNull(obj96);
        org.junit.Assert.assertTrue("'" + boolean97 + "' != '" + false + "'", boolean97 == false);
        org.junit.Assert.assertTrue("'" + int99 + "' != '" + 2 + "'", int99 == 2);
    }

    @Test
    public void test5147() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test5147");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setSerialJtaTransactions(false);
        boolean boolean3 = atomikosProperties0.isSerialJtaTransactions();
        java.lang.String str4 = atomikosProperties0.getService();
        boolean boolean5 = atomikosProperties0.isEnableLogging();
        java.util.Properties properties6 = atomikosProperties0.asProperties();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties7 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties7.setSerialJtaTransactions(false);
        boolean boolean10 = atomikosProperties7.isSerialJtaTransactions();
        atomikosProperties7.setCheckpointInterval((long) 10);
        atomikosProperties7.setSerialJtaTransactions(true);
        boolean boolean15 = atomikosProperties7.isSerialJtaTransactions();
        java.util.Properties properties16 = atomikosProperties7.asProperties();
        atomikosProperties7.setLogBaseDir("tmlog");
        boolean boolean19 = properties6.equals((java.lang.Object) atomikosProperties7);
        java.lang.String str20 = atomikosProperties7.getLogBaseName();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNotNull(properties6);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(properties16);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "tmlog" + "'", str20, "tmlog");
    }

    @Test
    public void test5148() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test5148");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration3 = properties0.elements();
        java.util.Enumeration<java.lang.Object> objEnumeration4 = properties0.elements();
        int int5 = properties0.size();
        java.util.Properties properties6 = new java.util.Properties();
        java.lang.Object obj8 = properties6.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration9 = properties6.elements();
        boolean boolean10 = properties6.isEmpty();
        java.util.Enumeration<java.lang.Object> objEnumeration11 = properties6.elements();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet12 = properties6.entrySet();
        java.util.Set<java.lang.String> strSet13 = properties6.stringPropertyNames();
        java.lang.Object obj16 = properties6.setProperty("{}", "tmlog");
        java.util.Properties properties17 = new java.util.Properties();
        java.lang.Object obj19 = properties17.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration20 = properties17.elements();
        int int21 = properties17.size();
        java.util.Properties properties22 = new java.util.Properties();
        java.lang.Object obj24 = properties22.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration25 = properties22.elements();
        java.util.Enumeration<java.lang.Object> objEnumeration26 = properties22.keys();
        java.lang.Object obj27 = properties6.getOrDefault((java.lang.Object) properties17, (java.lang.Object) objEnumeration26);
        java.util.Properties properties28 = new java.util.Properties(properties17);
        java.lang.Object obj30 = properties0.getOrDefault((java.lang.Object) properties28, (java.lang.Object) 10000L);
        int int31 = properties28.size();
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(objEnumeration3);
        org.junit.Assert.assertNotNull(objEnumeration4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertNull(obj8);
        org.junit.Assert.assertNotNull(objEnumeration9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(objEnumeration11);
        org.junit.Assert.assertNotNull(objEntrySet12);
        org.junit.Assert.assertNotNull(strSet13);
        org.junit.Assert.assertNull(obj16);
        org.junit.Assert.assertNull(obj19);
        org.junit.Assert.assertNotNull(objEnumeration20);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 0 + "'", int21 == 0);
        org.junit.Assert.assertNull(obj24);
        org.junit.Assert.assertNotNull(objEnumeration25);
        org.junit.Assert.assertNotNull(objEnumeration26);
        org.junit.Assert.assertNotNull(obj27);
        org.junit.Assert.assertEquals("'" + obj30 + "' != '" + 10000L + "'", obj30, 10000L);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 0 + "'", int31 == 0);
    }

    @Test
    public void test5149() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test5149");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration3 = properties0.elements();
        boolean boolean4 = properties0.isEmpty();
        java.util.Enumeration<java.lang.Object> objEnumeration5 = properties0.elements();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet6 = properties0.entrySet();
        java.util.Set<java.lang.String> strSet7 = properties0.stringPropertyNames();
        java.util.Enumeration<?> wildcardEnumeration8 = properties0.propertyNames();
        java.io.OutputStream outputStream9 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties0.save(outputStream9, "{{}={}}");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(objEnumeration3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(objEnumeration5);
        org.junit.Assert.assertNotNull(objEntrySet6);
        org.junit.Assert.assertNotNull(strSet7);
        org.junit.Assert.assertNotNull(wildcardEnumeration8);
    }

    @Test
    public void test5150() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test5150");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration3 = properties0.elements();
        boolean boolean4 = properties0.isEmpty();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet5 = properties0.entrySet();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties7 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties7.setSerialJtaTransactions(false);
        atomikosProperties7.setThreadedTwoPhaseCommit(true);
        atomikosProperties7.setMaxTimeout((long) '#');
        boolean boolean14 = atomikosProperties7.isForceShutdownOnVmExit();
        java.lang.Object obj15 = properties0.put((java.lang.Object) (short) 1, (java.lang.Object) atomikosProperties7);
        atomikosProperties7.setForceShutdownOnVmExit(true);
        java.util.Properties properties18 = atomikosProperties7.asProperties();
        java.util.Properties properties19 = new java.util.Properties(properties18);
        java.util.Map<java.lang.Object, java.lang.Object> objMap20 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties18.putAll(objMap20);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(objEnumeration3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(objEntrySet5);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNull(obj15);
        org.junit.Assert.assertNotNull(properties18);
    }

    @Test
    public void test5151() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test5151");
        java.util.Properties properties0 = new java.util.Properties();
        java.util.Properties properties1 = new java.util.Properties();
        java.lang.Object obj3 = properties1.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet4 = properties1.stringPropertyNames();
        boolean boolean5 = properties0.containsValue((java.lang.Object) properties1);
        java.util.Collection<java.lang.Object> objCollection6 = properties0.values();
        java.util.Properties properties8 = new java.util.Properties();
        java.lang.Object obj10 = properties8.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration11 = properties8.elements();
        boolean boolean12 = properties8.isEmpty();
        java.util.Set<java.lang.Object> objSet13 = properties8.keySet();
        java.lang.Object obj14 = properties0.putIfAbsent((java.lang.Object) "hi!", (java.lang.Object) objSet13);
        java.util.Set<java.lang.Object> objSet15 = properties0.keySet();
        java.util.Set<java.lang.Object> objSet16 = properties0.keySet();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet17 = properties0.entrySet();
        java.util.Properties properties18 = new java.util.Properties();
        java.lang.Object obj20 = properties18.remove((java.lang.Object) 0.0d);
        boolean boolean21 = properties18.isEmpty();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties22 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties22.setSerialJtaTransactions(false);
        atomikosProperties22.setThreadedTwoPhaseCommit(true);
        atomikosProperties22.setThreadedTwoPhaseCommit(true);
        java.util.Properties properties29 = atomikosProperties22.asProperties();
        int int30 = atomikosProperties22.getMaxActives();
        atomikosProperties22.setService("hi!");
        java.lang.Object obj33 = properties18.get((java.lang.Object) atomikosProperties22);
        boolean boolean34 = properties0.containsValue((java.lang.Object) atomikosProperties22);
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet35 = properties0.entrySet();
        java.util.Enumeration<java.lang.Object> objEnumeration36 = properties0.keys();
        java.lang.String str37 = properties0.toString();
        java.util.Properties properties38 = new java.util.Properties();
        java.util.Collection<java.lang.Object> objCollection39 = properties38.values();
        java.util.Collection<java.lang.Object> objCollection40 = properties38.values();
        java.util.Properties properties41 = new java.util.Properties(properties38);
        properties41.clear();
        java.util.Properties properties43 = new java.util.Properties();
        java.lang.Object obj45 = properties43.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration46 = properties43.elements();
        int int47 = properties43.size();
        java.util.Properties properties48 = new java.util.Properties(properties43);
        java.util.Set<java.lang.String> strSet49 = properties43.stringPropertyNames();
        java.util.Set<java.lang.String> strSet50 = properties43.stringPropertyNames();
        java.util.Properties properties51 = new java.util.Properties();
        java.lang.Object obj53 = properties51.remove((java.lang.Object) 0.0d);
        boolean boolean54 = properties51.isEmpty();
        java.util.Enumeration<java.lang.Object> objEnumeration55 = properties51.elements();
        java.util.Properties properties56 = new java.util.Properties();
        java.lang.Object obj58 = properties56.remove((java.lang.Object) 0.0d);
        boolean boolean59 = properties56.isEmpty();
        java.util.Enumeration<java.lang.Object> objEnumeration60 = properties56.elements();
        java.util.Enumeration<java.lang.Object> objEnumeration61 = properties56.elements();
        java.lang.Object obj62 = properties43.replace((java.lang.Object) objEnumeration55, (java.lang.Object) objEnumeration61);
        properties41.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties43);
        properties0.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties43);
        java.util.Properties properties65 = new java.util.Properties(properties43);
        java.util.Properties properties66 = new java.util.Properties();
        java.lang.Object obj68 = properties66.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration69 = properties66.elements();
        int int70 = properties66.size();
        java.util.Properties properties71 = new java.util.Properties();
        java.lang.Object obj73 = properties71.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration74 = properties71.elements();
        boolean boolean75 = properties71.isEmpty();
        java.util.Set<java.lang.Object> objSet76 = properties71.keySet();
        boolean boolean77 = properties66.containsKey((java.lang.Object) objSet76);
        java.lang.Object obj78 = properties43.get((java.lang.Object) properties66);
        org.junit.Assert.assertNull(obj3);
        org.junit.Assert.assertNotNull(strSet4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(objCollection6);
        org.junit.Assert.assertNull(obj10);
        org.junit.Assert.assertNotNull(objEnumeration11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(objSet13);
        org.junit.Assert.assertNull(obj14);
        org.junit.Assert.assertNotNull(objSet15);
        org.junit.Assert.assertNotNull(objSet16);
        org.junit.Assert.assertNotNull(objEntrySet17);
        org.junit.Assert.assertNull(obj20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(properties29);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 50 + "'", int30 == 50);
        org.junit.Assert.assertNull(obj33);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(objEntrySet35);
        org.junit.Assert.assertNotNull(objEnumeration36);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "{hi!=[]}" + "'", str37, "{hi!=[]}");
        org.junit.Assert.assertNotNull(objCollection39);
        org.junit.Assert.assertNotNull(objCollection40);
        org.junit.Assert.assertNull(obj45);
        org.junit.Assert.assertNotNull(objEnumeration46);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 0 + "'", int47 == 0);
        org.junit.Assert.assertNotNull(strSet49);
        org.junit.Assert.assertNotNull(strSet50);
        org.junit.Assert.assertNull(obj53);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertNotNull(objEnumeration55);
        org.junit.Assert.assertNull(obj58);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertNotNull(objEnumeration60);
        org.junit.Assert.assertNotNull(objEnumeration61);
        org.junit.Assert.assertNull(obj62);
        org.junit.Assert.assertNull(obj68);
        org.junit.Assert.assertNotNull(objEnumeration69);
        org.junit.Assert.assertTrue("'" + int70 + "' != '" + 0 + "'", int70 == 0);
        org.junit.Assert.assertNull(obj73);
        org.junit.Assert.assertNotNull(objEnumeration74);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + true + "'", boolean75 == true);
        org.junit.Assert.assertNotNull(objSet76);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + false + "'", boolean77 == false);
        org.junit.Assert.assertNull(obj78);
    }

    @Test
    public void test5152() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test5152");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setSerialJtaTransactions(false);
        atomikosProperties0.setThreadedTwoPhaseCommit(true);
        atomikosProperties0.setSerialJtaTransactions(false);
        java.lang.String str7 = atomikosProperties0.getService();
        java.util.Properties properties8 = atomikosProperties0.asProperties();
        java.lang.String str9 = properties8.toString();
        java.util.Properties properties10 = new java.util.Properties();
        java.lang.Object obj12 = properties10.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration13 = properties10.elements();
        boolean boolean14 = properties10.isEmpty();
        java.util.Set<java.lang.Object> objSet15 = properties10.keySet();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties16 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties16.setSerialJtaTransactions(false);
        atomikosProperties16.setThreadedTwoPhaseCommit(true);
        atomikosProperties16.setThreadedTwoPhaseCommit(true);
        java.util.Properties properties23 = atomikosProperties16.asProperties();
        int int24 = atomikosProperties16.getMaxActives();
        java.util.Properties properties25 = new java.util.Properties();
        java.lang.Object obj27 = properties25.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration28 = properties25.elements();
        boolean boolean29 = properties25.isEmpty();
        java.util.Set<java.lang.Object> objSet30 = properties25.keySet();
        boolean boolean32 = properties25.containsKey((java.lang.Object) (-1.0f));
        java.lang.Object obj33 = properties10.put((java.lang.Object) atomikosProperties16, (java.lang.Object) properties25);
        java.util.Set<java.lang.Object> objSet34 = properties10.keySet();
        java.lang.String str35 = properties10.toString();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties36 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties36.setSerialJtaTransactions(false);
        atomikosProperties36.setThreadedTwoPhaseCommit(true);
        atomikosProperties36.setSerialJtaTransactions(false);
        java.lang.String str43 = atomikosProperties36.getService();
        java.util.Properties properties44 = atomikosProperties36.asProperties();
        boolean boolean45 = atomikosProperties36.isThreadedTwoPhaseCommit();
        java.util.Properties properties46 = atomikosProperties36.asProperties();
        boolean boolean47 = properties8.remove((java.lang.Object) properties10, (java.lang.Object) properties46);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNotNull(properties8);
// flaky:         org.junit.Assert.assertEquals("'" + str9 + "' != '" + "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=false, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=true, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}" + "'", str9, "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=false, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=true, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
        org.junit.Assert.assertNull(obj12);
        org.junit.Assert.assertNotNull(objEnumeration13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(objSet15);
        org.junit.Assert.assertNotNull(properties23);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 50 + "'", int24 == 50);
        org.junit.Assert.assertNull(obj27);
        org.junit.Assert.assertNotNull(objEnumeration28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNotNull(objSet30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNull(obj33);
        org.junit.Assert.assertNotNull(objSet34);
        org.junit.Assert.assertNull(str43);
        org.junit.Assert.assertNotNull(properties44);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertNotNull(properties46);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
    }

    @Test
    public void test5153() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test5153");
        java.util.Properties properties0 = new java.util.Properties();
        java.util.Properties properties1 = new java.util.Properties();
        java.lang.Object obj3 = properties1.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet4 = properties1.stringPropertyNames();
        boolean boolean5 = properties0.containsValue((java.lang.Object) properties1);
        java.util.Enumeration<?> wildcardEnumeration6 = properties1.propertyNames();
        java.util.Properties properties7 = new java.util.Properties();
        java.lang.Object obj9 = properties7.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration10 = properties7.elements();
        boolean boolean11 = properties7.isEmpty();
        java.util.Set<java.lang.Object> objSet12 = properties7.keySet();
        java.util.Enumeration<java.lang.Object> objEnumeration13 = properties7.keys();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet14 = properties7.entrySet();
        boolean boolean15 = properties1.containsValue((java.lang.Object) objEntrySet14);
        java.lang.String str17 = properties1.getProperty("");
        java.util.Properties properties18 = new java.util.Properties();
        java.lang.Object obj20 = properties18.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet21 = properties18.stringPropertyNames();
        java.lang.String str22 = properties18.toString();
        java.lang.String str23 = properties18.toString();
        java.util.Set<java.lang.Object> objSet24 = properties18.keySet();
        boolean boolean25 = properties1.contains((java.lang.Object) objSet24);
        java.lang.Object obj26 = properties1.clone();
        java.lang.String str27 = properties1.toString();
        java.util.Properties properties28 = new java.util.Properties();
        java.lang.Object obj30 = properties28.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration31 = properties28.elements();
        boolean boolean32 = properties28.isEmpty();
        java.util.Set<java.lang.Object> objSet33 = properties28.keySet();
        java.util.Enumeration<java.lang.Object> objEnumeration34 = properties28.keys();
        boolean boolean36 = properties28.equals((java.lang.Object) "");
        java.lang.String str37 = properties28.toString();
        boolean boolean38 = properties28.isEmpty();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties39 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties39.setSerialJtaTransactions(false);
        boolean boolean42 = atomikosProperties39.isSerialJtaTransactions();
        boolean boolean43 = atomikosProperties39.isEnableLogging();
        long long44 = atomikosProperties39.getMaxTimeout();
        atomikosProperties39.setLogBaseName("{=hi!}");
        java.lang.Object obj47 = properties28.get((java.lang.Object) atomikosProperties39);
        java.lang.String str48 = properties28.toString();
        properties28.clear();
        java.lang.Object obj50 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj51 = properties1.put((java.lang.Object) properties28, obj50);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(obj3);
        org.junit.Assert.assertNotNull(strSet4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(wildcardEnumeration6);
        org.junit.Assert.assertNull(obj9);
        org.junit.Assert.assertNotNull(objEnumeration10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNotNull(objSet12);
        org.junit.Assert.assertNotNull(objEnumeration13);
        org.junit.Assert.assertNotNull(objEntrySet14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNull(str17);
        org.junit.Assert.assertNull(obj20);
        org.junit.Assert.assertNotNull(strSet21);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "{}" + "'", str22, "{}");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "{}" + "'", str23, "{}");
        org.junit.Assert.assertNotNull(objSet24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(obj26);
        org.junit.Assert.assertEquals(obj26.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj26), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj26), "{}");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "{}" + "'", str27, "{}");
        org.junit.Assert.assertNull(obj30);
        org.junit.Assert.assertNotNull(objEnumeration31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertNotNull(objSet33);
        org.junit.Assert.assertNotNull(objEnumeration34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "{}" + "'", str37, "{}");
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertTrue("'" + long44 + "' != '" + 300000L + "'", long44 == 300000L);
        org.junit.Assert.assertNull(obj47);
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "{}" + "'", str48, "{}");
    }

    @Test
    public void test5154() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test5154");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet3 = properties0.stringPropertyNames();
        java.util.Properties properties4 = new java.util.Properties();
        java.util.Properties properties5 = new java.util.Properties();
        java.lang.Object obj7 = properties5.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet8 = properties5.stringPropertyNames();
        boolean boolean9 = properties4.containsValue((java.lang.Object) properties5);
        java.util.Collection<java.lang.Object> objCollection10 = properties4.values();
        java.util.Enumeration<?> wildcardEnumeration11 = properties4.propertyNames();
        java.lang.Object obj13 = properties0.put((java.lang.Object) wildcardEnumeration11, (java.lang.Object) 10.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration14 = properties0.elements();
        java.util.Properties properties16 = new java.util.Properties();
        java.lang.Object obj18 = properties16.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration19 = properties16.elements();
        boolean boolean20 = properties16.isEmpty();
        java.util.Set<java.lang.Object> objSet21 = properties16.keySet();
        java.util.Enumeration<java.lang.Object> objEnumeration22 = properties16.keys();
        boolean boolean24 = properties16.equals((java.lang.Object) "");
        java.lang.String str25 = properties16.toString();
        java.lang.Object obj26 = properties0.put((java.lang.Object) 'a', (java.lang.Object) properties16);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties28 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties28.setSerialJtaTransactions(false);
        atomikosProperties28.setThreadedTwoPhaseCommit(true);
        atomikosProperties28.setMaxTimeout((long) '#');
        java.lang.String str35 = atomikosProperties28.getLogBaseDir();
        java.lang.Class<?> wildcardClass36 = atomikosProperties28.getClass();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties37 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties37.setSerialJtaTransactions(false);
        boolean boolean40 = atomikosProperties37.isSerialJtaTransactions();
        java.util.Properties properties41 = atomikosProperties37.asProperties();
        java.lang.Object obj44 = properties41.setProperty("hi!", "");
        java.util.Properties properties45 = new java.util.Properties(properties41);
        boolean boolean46 = properties0.replace((java.lang.Object) "{}", (java.lang.Object) atomikosProperties28, (java.lang.Object) properties41);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties47 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties47.setSerialJtaTransactions(false);
        boolean boolean50 = atomikosProperties47.isThreadedTwoPhaseCommit();
        boolean boolean51 = atomikosProperties47.isForceShutdownOnVmExit();
        boolean boolean52 = properties41.contains((java.lang.Object) atomikosProperties47);
        java.util.Set<java.lang.Object> objSet53 = properties41.keySet();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties54 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties54.setSerialJtaTransactions(false);
        atomikosProperties54.setThreadedTwoPhaseCommit(true);
        atomikosProperties54.setMaxTimeout((long) '#');
        boolean boolean61 = atomikosProperties54.isEnableLogging();
        atomikosProperties54.setCheckpointInterval((long) 100);
        java.lang.String str64 = atomikosProperties54.getTransactionManagerUniqueName();
        atomikosProperties54.setCheckpointInterval((long) (byte) 100);
        java.util.Properties properties67 = atomikosProperties54.asProperties();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties68 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties68.setSerialJtaTransactions(false);
        boolean boolean71 = atomikosProperties68.isSerialJtaTransactions();
        java.lang.String str72 = atomikosProperties68.getService();
        boolean boolean73 = atomikosProperties68.isEnableLogging();
        long long74 = atomikosProperties68.getMaxTimeout();
        java.util.Properties properties75 = atomikosProperties68.asProperties();
        boolean boolean76 = properties67.contains((java.lang.Object) properties75);
        properties75.clear();
        java.lang.Object obj78 = properties75.clone();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties79 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties79.setSerialJtaTransactions(false);
        atomikosProperties79.setThreadedTwoPhaseCommit(true);
        atomikosProperties79.setEnableLogging(false);
        boolean boolean86 = atomikosProperties79.isSerialJtaTransactions();
        int int87 = atomikosProperties79.getMaxActives();
        boolean boolean88 = atomikosProperties79.isEnableLogging();
        long long89 = atomikosProperties79.getCheckpointInterval();
        java.util.Properties properties90 = atomikosProperties79.asProperties();
        java.lang.Object obj91 = properties90.clone();
        java.lang.Object obj92 = properties41.put((java.lang.Object) properties75, (java.lang.Object) properties90);
        java.util.Properties properties93 = new java.util.Properties(properties75);
        java.lang.String str96 = properties75.getProperty("", "{-1=100}");
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(strSet3);
        org.junit.Assert.assertNull(obj7);
        org.junit.Assert.assertNotNull(strSet8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(objCollection10);
        org.junit.Assert.assertNotNull(wildcardEnumeration11);
        org.junit.Assert.assertNull(obj13);
        org.junit.Assert.assertNotNull(objEnumeration14);
        org.junit.Assert.assertNull(obj18);
        org.junit.Assert.assertNotNull(objEnumeration19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNotNull(objSet21);
        org.junit.Assert.assertNotNull(objEnumeration22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "{}" + "'", str25, "{}");
        org.junit.Assert.assertNull(obj26);
        org.junit.Assert.assertNull(str35);
        org.junit.Assert.assertNotNull(wildcardClass36);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(properties41);
        org.junit.Assert.assertNull(obj44);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNotNull(objSet53);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertNull(str64);
        org.junit.Assert.assertNotNull(properties67);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertNull(str72);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + true + "'", boolean73 == true);
        org.junit.Assert.assertTrue("'" + long74 + "' != '" + 300000L + "'", long74 == 300000L);
        org.junit.Assert.assertNotNull(properties75);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
        org.junit.Assert.assertNotNull(obj78);
        org.junit.Assert.assertEquals(obj78.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj78), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj78), "{}");
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + false + "'", boolean86 == false);
        org.junit.Assert.assertTrue("'" + int87 + "' != '" + 50 + "'", int87 == 50);
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + false + "'", boolean88 == false);
        org.junit.Assert.assertTrue("'" + long89 + "' != '" + 500L + "'", long89 == 500L);
        org.junit.Assert.assertNotNull(properties90);
        org.junit.Assert.assertNotNull(obj91);
// flaky:         org.junit.Assert.assertEquals(obj91.toString(), "{com.atomikos.icatch.enable_logging=false, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=false, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=true, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
// flaky:         org.junit.Assert.assertEquals(java.lang.String.valueOf(obj91), "{com.atomikos.icatch.enable_logging=false, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=false, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=true, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
// flaky:         org.junit.Assert.assertEquals(java.util.Objects.toString(obj91), "{com.atomikos.icatch.enable_logging=false, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=false, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=true, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
        org.junit.Assert.assertNull(obj92);
        org.junit.Assert.assertEquals("'" + str96 + "' != '" + "{-1=100}" + "'", str96, "{-1=100}");
    }

    @Test
    public void test5155() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test5155");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        boolean boolean3 = properties0.isEmpty();
        java.util.Enumeration<java.lang.Object> objEnumeration4 = properties0.keys();
        java.util.Set<java.lang.Object> objSet5 = properties0.keySet();
        properties0.clear();
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(objEnumeration4);
        org.junit.Assert.assertNotNull(objSet5);
    }

    @Test
    public void test5156() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test5156");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        java.util.Collection<java.lang.Object> objCollection3 = properties0.values();
        java.util.Properties properties4 = new java.util.Properties(properties0);
        java.util.Properties properties5 = new java.util.Properties();
        java.util.Collection<java.lang.Object> objCollection6 = properties5.values();
        java.util.Enumeration<java.lang.Object> objEnumeration7 = properties5.keys();
        java.util.Properties properties8 = new java.util.Properties();
        java.lang.Object obj10 = properties8.remove((java.lang.Object) 0.0d);
        java.util.Properties properties11 = new java.util.Properties();
        java.util.Collection<java.lang.Object> objCollection12 = properties11.values();
        java.util.Enumeration<java.lang.Object> objEnumeration13 = properties11.keys();
        java.util.Properties properties14 = new java.util.Properties();
        java.lang.Object obj16 = properties14.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration17 = properties14.elements();
        boolean boolean18 = properties14.isEmpty();
        java.util.Set<java.lang.Object> objSet19 = properties14.keySet();
        java.util.Enumeration<java.lang.Object> objEnumeration20 = properties14.keys();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet21 = properties14.entrySet();
        java.lang.Object obj22 = properties8.put((java.lang.Object) properties11, (java.lang.Object) properties14);
        java.lang.String str24 = properties11.getProperty("{=hi!}");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties25 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties25.setSerialJtaTransactions(false);
        atomikosProperties25.setThreadedTwoPhaseCommit(true);
        atomikosProperties25.setThreadedTwoPhaseCommit(true);
        long long32 = atomikosProperties25.getMaxTimeout();
        boolean boolean33 = properties11.containsValue((java.lang.Object) atomikosProperties25);
        java.util.Enumeration<java.lang.Object> objEnumeration34 = properties11.elements();
        java.util.Set<java.lang.String> strSet35 = properties11.stringPropertyNames();
        java.lang.Object obj36 = properties5.get((java.lang.Object) properties11);
        java.lang.String str37 = properties5.toString();
        java.util.Properties properties38 = new java.util.Properties();
        java.lang.Object obj40 = properties38.remove((java.lang.Object) 0.0d);
        java.util.Properties properties41 = new java.util.Properties();
        java.util.Collection<java.lang.Object> objCollection42 = properties41.values();
        java.util.Enumeration<java.lang.Object> objEnumeration43 = properties41.keys();
        java.util.Properties properties44 = new java.util.Properties();
        java.lang.Object obj46 = properties44.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration47 = properties44.elements();
        boolean boolean48 = properties44.isEmpty();
        java.util.Set<java.lang.Object> objSet49 = properties44.keySet();
        java.util.Enumeration<java.lang.Object> objEnumeration50 = properties44.keys();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet51 = properties44.entrySet();
        java.lang.Object obj52 = properties38.put((java.lang.Object) properties41, (java.lang.Object) properties44);
        java.util.Properties properties53 = new java.util.Properties();
        java.lang.Object obj55 = properties53.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration56 = properties53.elements();
        boolean boolean57 = properties53.isEmpty();
        java.util.Set<java.lang.Object> objSet58 = properties53.keySet();
        java.util.Enumeration<java.lang.Object> objEnumeration59 = properties53.keys();
        boolean boolean61 = properties53.equals((java.lang.Object) "");
        java.lang.String str62 = properties53.toString();
        boolean boolean63 = properties53.isEmpty();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties64 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties64.setSerialJtaTransactions(false);
        boolean boolean67 = atomikosProperties64.isSerialJtaTransactions();
        boolean boolean68 = atomikosProperties64.isEnableLogging();
        long long69 = atomikosProperties64.getMaxTimeout();
        atomikosProperties64.setLogBaseName("{=hi!}");
        java.lang.Object obj72 = properties53.get((java.lang.Object) atomikosProperties64);
        atomikosProperties64.setTransactionManagerUniqueName("{=hi!}");
        boolean boolean75 = properties44.contains((java.lang.Object) "{=hi!}");
        java.lang.Object obj76 = properties4.putIfAbsent((java.lang.Object) str37, (java.lang.Object) "{=hi!}");
        int int77 = properties4.size();
        java.util.Set<java.lang.String> strSet78 = properties4.stringPropertyNames();
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(objCollection3);
        org.junit.Assert.assertNotNull(objCollection6);
        org.junit.Assert.assertNotNull(objEnumeration7);
        org.junit.Assert.assertNull(obj10);
        org.junit.Assert.assertNotNull(objCollection12);
        org.junit.Assert.assertNotNull(objEnumeration13);
        org.junit.Assert.assertNull(obj16);
        org.junit.Assert.assertNotNull(objEnumeration17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(objSet19);
        org.junit.Assert.assertNotNull(objEnumeration20);
        org.junit.Assert.assertNotNull(objEntrySet21);
        org.junit.Assert.assertNull(obj22);
        org.junit.Assert.assertNull(str24);
        org.junit.Assert.assertTrue("'" + long32 + "' != '" + 300000L + "'", long32 == 300000L);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(objEnumeration34);
        org.junit.Assert.assertNotNull(strSet35);
        org.junit.Assert.assertNull(obj36);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "{}" + "'", str37, "{}");
        org.junit.Assert.assertNull(obj40);
        org.junit.Assert.assertNotNull(objCollection42);
        org.junit.Assert.assertNotNull(objEnumeration43);
        org.junit.Assert.assertNull(obj46);
        org.junit.Assert.assertNotNull(objEnumeration47);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertNotNull(objSet49);
        org.junit.Assert.assertNotNull(objEnumeration50);
        org.junit.Assert.assertNotNull(objEntrySet51);
        org.junit.Assert.assertNull(obj52);
        org.junit.Assert.assertNull(obj55);
        org.junit.Assert.assertNotNull(objEnumeration56);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertNotNull(objSet58);
        org.junit.Assert.assertNotNull(objEnumeration59);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "{}" + "'", str62, "{}");
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + true + "'", boolean68 == true);
        org.junit.Assert.assertTrue("'" + long69 + "' != '" + 300000L + "'", long69 == 300000L);
        org.junit.Assert.assertNull(obj72);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
        org.junit.Assert.assertNull(obj76);
        org.junit.Assert.assertTrue("'" + int77 + "' != '" + 1 + "'", int77 == 1);
        org.junit.Assert.assertNotNull(strSet78);
    }

    @Test
    public void test5157() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test5157");
        java.util.Properties properties0 = new java.util.Properties();
        boolean boolean2 = properties0.contains((java.lang.Object) 100.0d);
        java.util.Properties properties3 = new java.util.Properties();
        java.lang.Object obj5 = properties3.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration6 = properties3.elements();
        boolean boolean7 = properties3.isEmpty();
        java.util.Set<java.lang.Object> objSet8 = properties3.keySet();
        boolean boolean9 = properties3.isEmpty();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet10 = properties3.entrySet();
        java.util.Properties properties11 = new java.util.Properties();
        java.lang.Object obj13 = properties11.remove((java.lang.Object) 0.0d);
        boolean boolean14 = properties11.isEmpty();
        java.lang.Object obj17 = properties11.setProperty("", "hi!");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties18 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties18.setSerialJtaTransactions(false);
        boolean boolean21 = properties3.remove((java.lang.Object) properties11, (java.lang.Object) atomikosProperties18);
        boolean boolean22 = properties0.equals((java.lang.Object) properties3);
        java.util.Enumeration<?> wildcardEnumeration23 = properties3.propertyNames();
        java.lang.String str25 = properties3.getProperty("{=hi!}");
        java.lang.Object obj26 = properties3.clone();
        properties3.clear();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNull(obj5);
        org.junit.Assert.assertNotNull(objEnumeration6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(objSet8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertNotNull(objEntrySet10);
        org.junit.Assert.assertNull(obj13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNull(obj17);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNotNull(wildcardEnumeration23);
        org.junit.Assert.assertNull(str25);
        org.junit.Assert.assertNotNull(obj26);
        org.junit.Assert.assertEquals(obj26.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj26), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj26), "{}");
    }

    @Test
    public void test5158() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test5158");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet3 = properties0.stringPropertyNames();
        java.util.Properties properties4 = new java.util.Properties();
        java.util.Properties properties5 = new java.util.Properties();
        java.lang.Object obj7 = properties5.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet8 = properties5.stringPropertyNames();
        boolean boolean9 = properties4.containsValue((java.lang.Object) properties5);
        java.util.Collection<java.lang.Object> objCollection10 = properties4.values();
        java.util.Enumeration<?> wildcardEnumeration11 = properties4.propertyNames();
        java.lang.Object obj13 = properties0.put((java.lang.Object) wildcardEnumeration11, (java.lang.Object) 10.0d);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties14 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties14.setSerialJtaTransactions(false);
        atomikosProperties14.setThreadedTwoPhaseCommit(true);
        atomikosProperties14.setMaxTimeout((long) '#');
        boolean boolean21 = atomikosProperties14.isForceShutdownOnVmExit();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties22 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties22.setSerialJtaTransactions(false);
        atomikosProperties22.setThreadedTwoPhaseCommit(true);
        atomikosProperties22.setThreadedTwoPhaseCommit(true);
        java.lang.Object obj29 = properties0.getOrDefault((java.lang.Object) boolean21, (java.lang.Object) atomikosProperties22);
        java.util.Properties properties30 = new java.util.Properties();
        java.lang.Object obj32 = properties30.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration33 = properties30.elements();
        boolean boolean34 = properties30.isEmpty();
        java.util.Set<java.lang.Object> objSet35 = properties30.keySet();
        java.util.Enumeration<java.lang.Object> objEnumeration36 = properties30.keys();
        java.lang.String str38 = properties30.getProperty("hi!");
        java.lang.String str40 = properties30.getProperty("");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties41 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties41.setSerialJtaTransactions(false);
        atomikosProperties41.setThreadedTwoPhaseCommit(true);
        atomikosProperties41.setEnableLogging(false);
        boolean boolean48 = properties30.containsKey((java.lang.Object) atomikosProperties41);
        boolean boolean49 = properties0.containsValue((java.lang.Object) properties30);
        java.util.Properties properties50 = new java.util.Properties();
        java.lang.Object obj52 = properties50.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet53 = properties50.stringPropertyNames();
        java.util.Properties properties54 = new java.util.Properties();
        java.lang.Object obj56 = properties54.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet57 = properties54.stringPropertyNames();
        java.lang.Object obj59 = properties50.put((java.lang.Object) strSet57, (java.lang.Object) 0.0d);
        java.util.Properties properties60 = new java.util.Properties();
        java.util.Properties properties61 = new java.util.Properties();
        java.lang.Object obj63 = properties61.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet64 = properties61.stringPropertyNames();
        boolean boolean65 = properties60.containsValue((java.lang.Object) properties61);
        java.util.Collection<java.lang.Object> objCollection66 = properties60.values();
        java.util.Properties properties68 = new java.util.Properties();
        java.lang.Object obj70 = properties68.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration71 = properties68.elements();
        boolean boolean72 = properties68.isEmpty();
        java.util.Set<java.lang.Object> objSet73 = properties68.keySet();
        java.lang.Object obj74 = properties60.putIfAbsent((java.lang.Object) "hi!", (java.lang.Object) objSet73);
        java.util.Set<java.lang.Object> objSet75 = properties60.keySet();
        java.lang.Object obj77 = properties50.putIfAbsent((java.lang.Object) properties60, (java.lang.Object) (short) 10);
        java.util.Properties properties78 = new java.util.Properties();
        java.lang.Object obj80 = properties78.remove((java.lang.Object) 0.0d);
        boolean boolean81 = properties78.isEmpty();
        java.util.Set<java.lang.String> strSet82 = properties78.stringPropertyNames();
        java.lang.String str84 = properties78.getProperty("hi!");
        java.lang.Object obj85 = properties0.putIfAbsent((java.lang.Object) properties60, (java.lang.Object) properties78);
        java.util.Set<java.lang.Object> objSet86 = properties0.keySet();
        java.util.Enumeration<java.lang.Object> objEnumeration87 = properties0.elements();
        java.io.PrintStream printStream88 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties0.list(printStream88);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(strSet3);
        org.junit.Assert.assertNull(obj7);
        org.junit.Assert.assertNotNull(strSet8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(objCollection10);
        org.junit.Assert.assertNotNull(wildcardEnumeration11);
        org.junit.Assert.assertNull(obj13);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(obj29);
        org.junit.Assert.assertNull(obj32);
        org.junit.Assert.assertNotNull(objEnumeration33);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertNotNull(objSet35);
        org.junit.Assert.assertNotNull(objEnumeration36);
        org.junit.Assert.assertNull(str38);
        org.junit.Assert.assertNull(str40);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNull(obj52);
        org.junit.Assert.assertNotNull(strSet53);
        org.junit.Assert.assertNull(obj56);
        org.junit.Assert.assertNotNull(strSet57);
        org.junit.Assert.assertNull(obj59);
        org.junit.Assert.assertNull(obj63);
        org.junit.Assert.assertNotNull(strSet64);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertNotNull(objCollection66);
        org.junit.Assert.assertNull(obj70);
        org.junit.Assert.assertNotNull(objEnumeration71);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + true + "'", boolean72 == true);
        org.junit.Assert.assertNotNull(objSet73);
        org.junit.Assert.assertNull(obj74);
        org.junit.Assert.assertNotNull(objSet75);
        org.junit.Assert.assertNull(obj77);
        org.junit.Assert.assertNull(obj80);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + true + "'", boolean81 == true);
        org.junit.Assert.assertNotNull(strSet82);
        org.junit.Assert.assertNull(str84);
        org.junit.Assert.assertNull(obj85);
        org.junit.Assert.assertNotNull(objSet86);
        org.junit.Assert.assertNotNull(objEnumeration87);
    }

    @Test
    public void test5159() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test5159");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration3 = properties0.elements();
        boolean boolean4 = properties0.isEmpty();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet5 = properties0.entrySet();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties7 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties7.setSerialJtaTransactions(false);
        atomikosProperties7.setThreadedTwoPhaseCommit(true);
        atomikosProperties7.setMaxTimeout((long) '#');
        boolean boolean14 = atomikosProperties7.isForceShutdownOnVmExit();
        java.lang.Object obj15 = properties0.put((java.lang.Object) (short) 1, (java.lang.Object) atomikosProperties7);
        atomikosProperties7.setForceShutdownOnVmExit(true);
        java.util.Properties properties18 = atomikosProperties7.asProperties();
        java.util.Properties properties19 = new java.util.Properties(properties18);
        boolean boolean21 = properties18.contains((java.lang.Object) 35);
        java.util.Enumeration<java.lang.Object> objEnumeration22 = properties18.elements();
        java.lang.String str24 = properties18.getProperty("{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=false, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=true, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties25 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties25.setSerialJtaTransactions(false);
        atomikosProperties25.setThreadedTwoPhaseCommit(true);
        atomikosProperties25.setMaxTimeout((long) '#');
        boolean boolean32 = atomikosProperties25.isEnableLogging();
        atomikosProperties25.setMaxActives((int) '#');
        atomikosProperties25.setSerialJtaTransactions(true);
        java.lang.String str37 = atomikosProperties25.getTransactionManagerUniqueName();
        long long38 = atomikosProperties25.getDefaultJtaTimeout();
        int int39 = atomikosProperties25.getMaxActives();
        java.lang.Object obj40 = properties18.remove((java.lang.Object) atomikosProperties25);
        long long41 = atomikosProperties25.getCheckpointInterval();
        atomikosProperties25.setTransactionManagerUniqueName("{{}={}}");
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(objEnumeration3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(objEntrySet5);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNull(obj15);
        org.junit.Assert.assertNotNull(properties18);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(objEnumeration22);
        org.junit.Assert.assertNull(str24);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertNull(str37);
        org.junit.Assert.assertTrue("'" + long38 + "' != '" + 10000L + "'", long38 == 10000L);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 35 + "'", int39 == 35);
        org.junit.Assert.assertNull(obj40);
        org.junit.Assert.assertTrue("'" + long41 + "' != '" + 500L + "'", long41 == 500L);
    }

    @Test
    public void test5160() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test5160");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setSerialJtaTransactions(false);
        atomikosProperties0.setThreadedTwoPhaseCommit(true);
        atomikosProperties0.setMaxTimeout((long) '#');
        boolean boolean7 = atomikosProperties0.isEnableLogging();
        atomikosProperties0.setCheckpointInterval((long) (byte) -1);
        atomikosProperties0.setCheckpointInterval(0L);
        java.lang.String str12 = atomikosProperties0.getService();
        atomikosProperties0.setService("{com.atomikos.icatch.enable_logging=false, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=1, com.atomikos.icatch.serial_jta_transactions=false, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
        java.lang.String str15 = atomikosProperties0.getService();
        atomikosProperties0.setThreadedTwoPhaseCommit(false);
        atomikosProperties0.setLogBaseName("");
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "{com.atomikos.icatch.enable_logging=false, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=1, com.atomikos.icatch.serial_jta_transactions=false, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}" + "'", str15, "{com.atomikos.icatch.enable_logging=false, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=1, com.atomikos.icatch.serial_jta_transactions=false, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
    }

    @Test
    public void test5161() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test5161");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setSerialJtaTransactions(false);
        atomikosProperties0.setThreadedTwoPhaseCommit(true);
        atomikosProperties0.setSerialJtaTransactions(false);
        java.lang.String str7 = atomikosProperties0.getService();
        java.util.Properties properties8 = atomikosProperties0.asProperties();
        java.util.Properties properties9 = atomikosProperties0.asProperties();
        java.util.Properties properties10 = new java.util.Properties(properties9);
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet11 = properties10.entrySet();
        java.io.OutputStream outputStream12 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties10.save(outputStream12, "{true=true}");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNotNull(properties8);
        org.junit.Assert.assertNotNull(properties9);
        org.junit.Assert.assertNotNull(objEntrySet11);
    }

    @Test
    public void test5162() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test5162");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setSerialJtaTransactions(false);
        boolean boolean3 = atomikosProperties0.isSerialJtaTransactions();
        boolean boolean4 = atomikosProperties0.isEnableLogging();
        atomikosProperties0.setService("");
        java.util.Properties properties7 = atomikosProperties0.asProperties();
        boolean boolean8 = properties7.isEmpty();
        int int9 = properties7.size();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties10 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties10.setSerialJtaTransactions(false);
        boolean boolean13 = atomikosProperties10.isSerialJtaTransactions();
        atomikosProperties10.setTransactionManagerUniqueName("hi!");
        atomikosProperties10.setForceShutdownOnVmExit(false);
        java.lang.String str18 = atomikosProperties10.getLogBaseDir();
        boolean boolean19 = properties7.equals((java.lang.Object) atomikosProperties10);
        boolean boolean20 = atomikosProperties10.isSerialJtaTransactions();
        atomikosProperties10.setLogBaseName("{}");
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(properties7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 10 + "'", int9 == 10);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNull(str18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
    }

    @Test
    public void test5163() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test5163");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration3 = properties0.elements();
        int int4 = properties0.size();
        java.util.Properties properties5 = new java.util.Properties(properties0);
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet6 = properties0.entrySet();
        java.lang.Object obj9 = properties0.setProperty("", "{}");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties10 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties10.setSerialJtaTransactions(false);
        atomikosProperties10.setThreadedTwoPhaseCommit(true);
        atomikosProperties10.setMaxTimeout((long) '#');
        java.lang.String str17 = atomikosProperties10.getLogBaseDir();
        atomikosProperties10.setMaxActives(1);
        boolean boolean20 = properties0.contains((java.lang.Object) 1);
        java.util.Collection<java.lang.Object> objCollection21 = properties0.values();
        java.io.PrintStream printStream22 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties0.list(printStream22);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(objEnumeration3);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNotNull(objEntrySet6);
        org.junit.Assert.assertNull(obj9);
        org.junit.Assert.assertNull(str17);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(objCollection21);
    }

    @Test
    public void test5164() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test5164");
        java.util.Properties properties0 = new java.util.Properties();
        java.util.Properties properties1 = new java.util.Properties();
        java.lang.Object obj3 = properties1.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet4 = properties1.stringPropertyNames();
        boolean boolean5 = properties0.containsValue((java.lang.Object) properties1);
        java.util.Enumeration<?> wildcardEnumeration6 = properties1.propertyNames();
        java.util.Properties properties7 = new java.util.Properties();
        java.lang.Object obj9 = properties7.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration10 = properties7.elements();
        boolean boolean11 = properties7.isEmpty();
        java.util.Set<java.lang.Object> objSet12 = properties7.keySet();
        java.util.Enumeration<java.lang.Object> objEnumeration13 = properties7.keys();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet14 = properties7.entrySet();
        boolean boolean15 = properties1.containsValue((java.lang.Object) objEntrySet14);
        java.util.Properties properties16 = new java.util.Properties();
        java.lang.Object obj18 = properties16.remove((java.lang.Object) 0.0d);
        boolean boolean20 = properties16.containsValue((java.lang.Object) "hi!");
        java.lang.Object obj23 = properties16.put((java.lang.Object) (byte) -1, (java.lang.Object) 100L);
        java.util.Properties properties24 = new java.util.Properties();
        java.util.Properties properties25 = new java.util.Properties();
        java.lang.Object obj27 = properties25.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet28 = properties25.stringPropertyNames();
        boolean boolean29 = properties24.containsValue((java.lang.Object) properties25);
        java.util.Collection<java.lang.Object> objCollection30 = properties24.values();
        java.util.Properties properties32 = new java.util.Properties();
        java.lang.Object obj34 = properties32.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration35 = properties32.elements();
        boolean boolean36 = properties32.isEmpty();
        java.util.Set<java.lang.Object> objSet37 = properties32.keySet();
        java.lang.Object obj38 = properties24.putIfAbsent((java.lang.Object) "hi!", (java.lang.Object) objSet37);
        java.util.Set<java.lang.Object> objSet39 = properties24.keySet();
        boolean boolean40 = properties16.containsKey((java.lang.Object) properties24);
        java.util.Collection<java.lang.Object> objCollection41 = properties24.values();
        boolean boolean42 = properties1.containsValue((java.lang.Object) objCollection41);
        java.util.Properties properties43 = new java.util.Properties();
        java.util.Properties properties44 = new java.util.Properties();
        java.lang.Object obj46 = properties44.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet47 = properties44.stringPropertyNames();
        boolean boolean48 = properties43.containsValue((java.lang.Object) properties44);
        java.util.Collection<java.lang.Object> objCollection49 = properties43.values();
        java.util.Properties properties51 = new java.util.Properties();
        java.lang.Object obj53 = properties51.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration54 = properties51.elements();
        boolean boolean55 = properties51.isEmpty();
        java.util.Set<java.lang.Object> objSet56 = properties51.keySet();
        java.lang.Object obj57 = properties43.putIfAbsent((java.lang.Object) "hi!", (java.lang.Object) objSet56);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties58 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties58.setSerialJtaTransactions(false);
        boolean boolean61 = atomikosProperties58.isSerialJtaTransactions();
        java.util.Properties properties62 = atomikosProperties58.asProperties();
        java.lang.Object obj65 = properties62.setProperty("hi!", "");
        java.util.Properties properties66 = new java.util.Properties(properties62);
        java.util.Properties properties67 = new java.util.Properties();
        java.lang.Object obj69 = properties67.remove((java.lang.Object) 0.0d);
        java.util.Properties properties70 = new java.util.Properties();
        java.util.Collection<java.lang.Object> objCollection71 = properties70.values();
        java.util.Enumeration<java.lang.Object> objEnumeration72 = properties70.keys();
        java.util.Properties properties73 = new java.util.Properties();
        java.lang.Object obj75 = properties73.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration76 = properties73.elements();
        boolean boolean77 = properties73.isEmpty();
        java.util.Set<java.lang.Object> objSet78 = properties73.keySet();
        java.util.Enumeration<java.lang.Object> objEnumeration79 = properties73.keys();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet80 = properties73.entrySet();
        java.lang.Object obj81 = properties67.put((java.lang.Object) properties70, (java.lang.Object) properties73);
        java.lang.Object obj82 = properties43.putIfAbsent((java.lang.Object) properties66, (java.lang.Object) properties73);
        properties73.clear();
        boolean boolean84 = properties73.isEmpty();
        boolean boolean85 = properties73.isEmpty();
        java.lang.Object obj86 = properties1.get((java.lang.Object) properties73);
        org.junit.Assert.assertNull(obj3);
        org.junit.Assert.assertNotNull(strSet4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(wildcardEnumeration6);
        org.junit.Assert.assertNull(obj9);
        org.junit.Assert.assertNotNull(objEnumeration10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNotNull(objSet12);
        org.junit.Assert.assertNotNull(objEnumeration13);
        org.junit.Assert.assertNotNull(objEntrySet14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNull(obj18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNull(obj23);
        org.junit.Assert.assertNull(obj27);
        org.junit.Assert.assertNotNull(strSet28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(objCollection30);
        org.junit.Assert.assertNull(obj34);
        org.junit.Assert.assertNotNull(objEnumeration35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNotNull(objSet37);
        org.junit.Assert.assertNull(obj38);
        org.junit.Assert.assertNotNull(objSet39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(objCollection41);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNull(obj46);
        org.junit.Assert.assertNotNull(strSet47);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNotNull(objCollection49);
        org.junit.Assert.assertNull(obj53);
        org.junit.Assert.assertNotNull(objEnumeration54);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertNotNull(objSet56);
        org.junit.Assert.assertNull(obj57);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertNotNull(properties62);
        org.junit.Assert.assertNull(obj65);
        org.junit.Assert.assertNull(obj69);
        org.junit.Assert.assertNotNull(objCollection71);
        org.junit.Assert.assertNotNull(objEnumeration72);
        org.junit.Assert.assertNull(obj75);
        org.junit.Assert.assertNotNull(objEnumeration76);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + true + "'", boolean77 == true);
        org.junit.Assert.assertNotNull(objSet78);
        org.junit.Assert.assertNotNull(objEnumeration79);
        org.junit.Assert.assertNotNull(objEntrySet80);
        org.junit.Assert.assertNull(obj81);
        org.junit.Assert.assertNull(obj82);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + true + "'", boolean84 == true);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + true + "'", boolean85 == true);
        org.junit.Assert.assertNull(obj86);
    }

    @Test
    public void test5165() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test5165");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet3 = properties0.stringPropertyNames();
        java.util.Properties properties4 = new java.util.Properties();
        java.util.Properties properties5 = new java.util.Properties();
        java.lang.Object obj7 = properties5.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet8 = properties5.stringPropertyNames();
        boolean boolean9 = properties4.containsValue((java.lang.Object) properties5);
        java.util.Collection<java.lang.Object> objCollection10 = properties4.values();
        java.util.Enumeration<?> wildcardEnumeration11 = properties4.propertyNames();
        java.lang.Object obj13 = properties0.put((java.lang.Object) wildcardEnumeration11, (java.lang.Object) 10.0d);
        java.lang.String str15 = properties0.getProperty("{=hi!}");
        java.lang.Object obj18 = properties0.setProperty("{hi!=[]}", "{}");
        java.io.OutputStream outputStream19 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties0.save(outputStream19, "{-1=100}");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(strSet3);
        org.junit.Assert.assertNull(obj7);
        org.junit.Assert.assertNotNull(strSet8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(objCollection10);
        org.junit.Assert.assertNotNull(wildcardEnumeration11);
        org.junit.Assert.assertNull(obj13);
        org.junit.Assert.assertNull(str15);
        org.junit.Assert.assertNull(obj18);
    }

    @Test
    public void test5166() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test5166");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        boolean boolean3 = properties0.isEmpty();
        java.lang.Object obj6 = properties0.setProperty("", "hi!");
        java.util.Properties properties7 = new java.util.Properties();
        java.lang.Object obj9 = properties7.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration10 = properties7.elements();
        boolean boolean11 = properties7.isEmpty();
        java.util.Set<java.lang.Object> objSet12 = properties7.keySet();
        boolean boolean13 = properties7.isEmpty();
        java.util.Properties properties14 = new java.util.Properties();
        java.util.Collection<java.lang.Object> objCollection15 = properties14.values();
        java.util.Enumeration<java.lang.Object> objEnumeration16 = properties14.keys();
        java.lang.Object obj17 = properties7.remove((java.lang.Object) properties14);
        java.lang.Object obj18 = properties0.get((java.lang.Object) properties14);
        java.util.Enumeration<java.lang.Object> objEnumeration19 = properties14.keys();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties20 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties20.setSerialJtaTransactions(false);
        atomikosProperties20.setThreadedTwoPhaseCommit(true);
        atomikosProperties20.setMaxTimeout((long) '#');
        boolean boolean27 = atomikosProperties20.isForceShutdownOnVmExit();
        long long28 = atomikosProperties20.getCheckpointInterval();
        java.lang.Object obj29 = new java.lang.Object();
        boolean boolean31 = properties14.replace((java.lang.Object) long28, obj29, (java.lang.Object) "hi!");
        java.util.Set<java.lang.Object> objSet32 = properties14.keySet();
        java.util.Properties properties33 = new java.util.Properties();
        java.util.Properties properties34 = new java.util.Properties();
        java.lang.Object obj36 = properties34.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet37 = properties34.stringPropertyNames();
        boolean boolean38 = properties33.containsValue((java.lang.Object) properties34);
        java.util.Collection<java.lang.Object> objCollection39 = properties33.values();
        java.util.Enumeration<?> wildcardEnumeration40 = properties33.propertyNames();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet41 = properties33.entrySet();
        properties14.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties33);
        boolean boolean43 = properties33.isEmpty();
        java.util.Properties properties44 = new java.util.Properties(properties33);
        java.lang.String str45 = properties44.toString();
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNull(obj6);
        org.junit.Assert.assertNull(obj9);
        org.junit.Assert.assertNotNull(objEnumeration10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNotNull(objSet12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(objCollection15);
        org.junit.Assert.assertNotNull(objEnumeration16);
        org.junit.Assert.assertNull(obj17);
        org.junit.Assert.assertNull(obj18);
        org.junit.Assert.assertNotNull(objEnumeration19);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertTrue("'" + long28 + "' != '" + 500L + "'", long28 == 500L);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(objSet32);
        org.junit.Assert.assertNull(obj36);
        org.junit.Assert.assertNotNull(strSet37);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(objCollection39);
        org.junit.Assert.assertNotNull(wildcardEnumeration40);
        org.junit.Assert.assertNotNull(objEntrySet41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "{}" + "'", str45, "{}");
    }

    @Test
    public void test5167() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test5167");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet3 = properties0.stringPropertyNames();
        java.util.Properties properties4 = new java.util.Properties();
        java.util.Properties properties5 = new java.util.Properties();
        java.lang.Object obj7 = properties5.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet8 = properties5.stringPropertyNames();
        boolean boolean9 = properties4.containsValue((java.lang.Object) properties5);
        java.util.Collection<java.lang.Object> objCollection10 = properties4.values();
        java.util.Enumeration<?> wildcardEnumeration11 = properties4.propertyNames();
        java.lang.Object obj13 = properties0.put((java.lang.Object) wildcardEnumeration11, (java.lang.Object) 10.0d);
        java.lang.String str15 = properties0.getProperty("{=hi!}");
        java.lang.Object obj18 = properties0.setProperty("{hi!=[]}", "{}");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties19 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties19.setSerialJtaTransactions(false);
        atomikosProperties19.setThreadedTwoPhaseCommit(true);
        atomikosProperties19.setThreadedTwoPhaseCommit(true);
        atomikosProperties19.setLogBaseName("{{}=tmlog}");
        boolean boolean28 = properties0.containsKey((java.lang.Object) "{{}=tmlog}");
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(strSet3);
        org.junit.Assert.assertNull(obj7);
        org.junit.Assert.assertNotNull(strSet8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(objCollection10);
        org.junit.Assert.assertNotNull(wildcardEnumeration11);
        org.junit.Assert.assertNull(obj13);
        org.junit.Assert.assertNull(str15);
        org.junit.Assert.assertNull(obj18);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
    }

    @Test
    public void test5168() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test5168");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        boolean boolean3 = properties0.isEmpty();
        java.lang.Object obj6 = properties0.setProperty("", "hi!");
        java.util.Properties properties7 = new java.util.Properties();
        java.lang.Object obj9 = properties7.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration10 = properties7.elements();
        boolean boolean11 = properties7.isEmpty();
        java.util.Set<java.lang.Object> objSet12 = properties7.keySet();
        boolean boolean13 = properties7.isEmpty();
        java.util.Properties properties14 = new java.util.Properties();
        java.util.Collection<java.lang.Object> objCollection15 = properties14.values();
        java.util.Enumeration<java.lang.Object> objEnumeration16 = properties14.keys();
        java.lang.Object obj17 = properties7.remove((java.lang.Object) properties14);
        java.lang.Object obj18 = properties0.get((java.lang.Object) properties14);
        java.util.Properties properties19 = new java.util.Properties();
        java.lang.Object obj21 = properties19.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration22 = properties19.elements();
        boolean boolean23 = properties19.isEmpty();
        java.util.Set<java.lang.Object> objSet24 = properties19.keySet();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties25 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties25.setSerialJtaTransactions(false);
        atomikosProperties25.setThreadedTwoPhaseCommit(true);
        atomikosProperties25.setThreadedTwoPhaseCommit(true);
        java.util.Properties properties32 = atomikosProperties25.asProperties();
        int int33 = atomikosProperties25.getMaxActives();
        java.util.Properties properties34 = new java.util.Properties();
        java.lang.Object obj36 = properties34.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration37 = properties34.elements();
        boolean boolean38 = properties34.isEmpty();
        java.util.Set<java.lang.Object> objSet39 = properties34.keySet();
        boolean boolean41 = properties34.containsKey((java.lang.Object) (-1.0f));
        java.lang.Object obj42 = properties19.put((java.lang.Object) atomikosProperties25, (java.lang.Object) properties34);
        boolean boolean43 = properties14.containsKey((java.lang.Object) properties34);
        boolean boolean44 = properties34.isEmpty();
        java.util.Set<java.lang.Object> objSet45 = properties34.keySet();
        java.io.InputStream inputStream46 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties34.load(inputStream46);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNull(obj6);
        org.junit.Assert.assertNull(obj9);
        org.junit.Assert.assertNotNull(objEnumeration10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNotNull(objSet12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(objCollection15);
        org.junit.Assert.assertNotNull(objEnumeration16);
        org.junit.Assert.assertNull(obj17);
        org.junit.Assert.assertNull(obj18);
        org.junit.Assert.assertNull(obj21);
        org.junit.Assert.assertNotNull(objEnumeration22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNotNull(objSet24);
        org.junit.Assert.assertNotNull(properties32);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 50 + "'", int33 == 50);
        org.junit.Assert.assertNull(obj36);
        org.junit.Assert.assertNotNull(objEnumeration37);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertNotNull(objSet39);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNull(obj42);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertNotNull(objSet45);
    }

    @Test
    public void test5169() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test5169");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setSerialJtaTransactions(false);
        boolean boolean3 = atomikosProperties0.isSerialJtaTransactions();
        atomikosProperties0.setTransactionManagerUniqueName("hi!");
        java.lang.String str6 = atomikosProperties0.getTransactionManagerUniqueName();
        boolean boolean7 = atomikosProperties0.isForceShutdownOnVmExit();
        atomikosProperties0.setCheckpointInterval((-1L));
        boolean boolean10 = atomikosProperties0.isThreadedTwoPhaseCommit();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "hi!" + "'", str6, "hi!");
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
    }

    @Test
    public void test5170() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test5170");
        java.util.Properties properties0 = new java.util.Properties();
        java.util.Collection<java.lang.Object> objCollection1 = properties0.values();
        java.util.Enumeration<java.lang.Object> objEnumeration2 = properties0.keys();
        java.util.Properties properties3 = new java.util.Properties();
        java.lang.Object obj5 = properties3.remove((java.lang.Object) 0.0d);
        java.util.Properties properties6 = new java.util.Properties();
        java.util.Collection<java.lang.Object> objCollection7 = properties6.values();
        java.util.Enumeration<java.lang.Object> objEnumeration8 = properties6.keys();
        java.util.Properties properties9 = new java.util.Properties();
        java.lang.Object obj11 = properties9.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration12 = properties9.elements();
        boolean boolean13 = properties9.isEmpty();
        java.util.Set<java.lang.Object> objSet14 = properties9.keySet();
        java.util.Enumeration<java.lang.Object> objEnumeration15 = properties9.keys();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet16 = properties9.entrySet();
        java.lang.Object obj17 = properties3.put((java.lang.Object) properties6, (java.lang.Object) properties9);
        java.lang.String str19 = properties6.getProperty("{=hi!}");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties20 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties20.setSerialJtaTransactions(false);
        atomikosProperties20.setThreadedTwoPhaseCommit(true);
        atomikosProperties20.setThreadedTwoPhaseCommit(true);
        long long27 = atomikosProperties20.getMaxTimeout();
        boolean boolean28 = properties6.containsValue((java.lang.Object) atomikosProperties20);
        java.util.Enumeration<java.lang.Object> objEnumeration29 = properties6.elements();
        java.util.Set<java.lang.String> strSet30 = properties6.stringPropertyNames();
        java.lang.Object obj31 = properties0.get((java.lang.Object) properties6);
        java.util.Properties properties32 = new java.util.Properties();
        java.lang.Object obj34 = properties32.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration35 = properties32.elements();
        int int36 = properties32.size();
        java.util.Properties properties37 = new java.util.Properties(properties32);
        boolean boolean38 = properties37.isEmpty();
        java.util.Properties properties39 = new java.util.Properties();
        java.lang.Object obj41 = properties39.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration42 = properties39.elements();
        int int43 = properties39.size();
        java.util.Properties properties44 = new java.util.Properties();
        java.lang.Object obj46 = properties44.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration47 = properties44.elements();
        boolean boolean48 = properties44.isEmpty();
        java.util.Set<java.lang.Object> objSet49 = properties44.keySet();
        boolean boolean50 = properties39.containsKey((java.lang.Object) objSet49);
        java.util.Enumeration<java.lang.Object> objEnumeration51 = properties39.keys();
        java.util.Properties properties52 = new java.util.Properties();
        java.lang.Object obj54 = properties52.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration55 = properties52.elements();
        boolean boolean56 = properties52.isEmpty();
        java.util.Set<java.lang.Object> objSet57 = properties52.keySet();
        java.util.Enumeration<java.lang.Object> objEnumeration58 = properties52.keys();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet59 = properties52.entrySet();
        boolean boolean61 = properties39.remove((java.lang.Object) properties52, (java.lang.Object) 1.0f);
        boolean boolean62 = properties37.contains((java.lang.Object) properties52);
        java.util.Properties properties63 = new java.util.Properties(properties52);
        boolean boolean64 = properties6.equals((java.lang.Object) properties63);
        java.io.Writer writer65 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties63.store(writer65, "tmlog");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(objCollection1);
        org.junit.Assert.assertNotNull(objEnumeration2);
        org.junit.Assert.assertNull(obj5);
        org.junit.Assert.assertNotNull(objCollection7);
        org.junit.Assert.assertNotNull(objEnumeration8);
        org.junit.Assert.assertNull(obj11);
        org.junit.Assert.assertNotNull(objEnumeration12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(objSet14);
        org.junit.Assert.assertNotNull(objEnumeration15);
        org.junit.Assert.assertNotNull(objEntrySet16);
        org.junit.Assert.assertNull(obj17);
        org.junit.Assert.assertNull(str19);
        org.junit.Assert.assertTrue("'" + long27 + "' != '" + 300000L + "'", long27 == 300000L);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(objEnumeration29);
        org.junit.Assert.assertNotNull(strSet30);
        org.junit.Assert.assertNull(obj31);
        org.junit.Assert.assertNull(obj34);
        org.junit.Assert.assertNotNull(objEnumeration35);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 0 + "'", int36 == 0);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertNull(obj41);
        org.junit.Assert.assertNotNull(objEnumeration42);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 0 + "'", int43 == 0);
        org.junit.Assert.assertNull(obj46);
        org.junit.Assert.assertNotNull(objEnumeration47);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertNotNull(objSet49);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertNotNull(objEnumeration51);
        org.junit.Assert.assertNull(obj54);
        org.junit.Assert.assertNotNull(objEnumeration55);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertNotNull(objSet57);
        org.junit.Assert.assertNotNull(objEnumeration58);
        org.junit.Assert.assertNotNull(objEntrySet59);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64 == true);
    }

    @Test
    public void test5171() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test5171");
        java.util.Properties properties0 = new java.util.Properties();
        java.util.Properties properties1 = new java.util.Properties();
        java.lang.Object obj3 = properties1.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet4 = properties1.stringPropertyNames();
        boolean boolean5 = properties0.containsValue((java.lang.Object) properties1);
        java.util.Collection<java.lang.Object> objCollection6 = properties0.values();
        java.util.Properties properties8 = new java.util.Properties();
        java.lang.Object obj10 = properties8.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration11 = properties8.elements();
        boolean boolean12 = properties8.isEmpty();
        java.util.Set<java.lang.Object> objSet13 = properties8.keySet();
        java.lang.Object obj14 = properties0.putIfAbsent((java.lang.Object) "hi!", (java.lang.Object) objSet13);
        java.util.Set<java.lang.Object> objSet15 = properties0.keySet();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties16 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties16.setSerialJtaTransactions(false);
        atomikosProperties16.setThreadedTwoPhaseCommit(true);
        atomikosProperties16.setMaxTimeout((long) '#');
        boolean boolean23 = atomikosProperties16.isEnableLogging();
        atomikosProperties16.setCheckpointInterval((long) (byte) -1);
        atomikosProperties16.setEnableLogging(true);
        java.util.Properties properties28 = new java.util.Properties();
        java.lang.Object obj30 = properties28.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration31 = properties28.elements();
        boolean boolean32 = properties28.isEmpty();
        java.util.Enumeration<java.lang.Object> objEnumeration33 = properties28.elements();
        java.lang.Object obj34 = properties0.replace((java.lang.Object) true, (java.lang.Object) properties28);
        java.util.Properties properties35 = new java.util.Properties();
        java.lang.Object obj37 = properties35.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration38 = properties35.elements();
        int int39 = properties35.size();
        java.util.Properties properties40 = new java.util.Properties(properties35);
        java.util.Set<java.lang.String> strSet41 = properties35.stringPropertyNames();
        boolean boolean42 = properties0.contains((java.lang.Object) strSet41);
        java.lang.Object obj43 = properties0.clone();
        properties0.clear();
        java.io.Writer writer45 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties0.store(writer45, "{hi!=[], {}={}}");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(obj3);
        org.junit.Assert.assertNotNull(strSet4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(objCollection6);
        org.junit.Assert.assertNull(obj10);
        org.junit.Assert.assertNotNull(objEnumeration11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(objSet13);
        org.junit.Assert.assertNull(obj14);
        org.junit.Assert.assertNotNull(objSet15);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNull(obj30);
        org.junit.Assert.assertNotNull(objEnumeration31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertNotNull(objEnumeration33);
        org.junit.Assert.assertNull(obj34);
        org.junit.Assert.assertNull(obj37);
        org.junit.Assert.assertNotNull(objEnumeration38);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 0 + "'", int39 == 0);
        org.junit.Assert.assertNotNull(strSet41);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertNotNull(obj43);
        org.junit.Assert.assertEquals(obj43.toString(), "{hi!=[]}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj43), "{hi!=[]}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj43), "{hi!=[]}");
    }

    @Test
    public void test5172() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test5172");
        java.util.Properties properties0 = new java.util.Properties();
        java.util.Properties properties1 = new java.util.Properties();
        java.lang.Object obj3 = properties1.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet4 = properties1.stringPropertyNames();
        boolean boolean5 = properties0.containsValue((java.lang.Object) properties1);
        java.util.Properties properties6 = new java.util.Properties();
        java.lang.Object obj8 = properties6.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet9 = properties6.stringPropertyNames();
        java.util.Properties properties10 = new java.util.Properties();
        java.util.Properties properties11 = new java.util.Properties();
        java.lang.Object obj13 = properties11.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet14 = properties11.stringPropertyNames();
        boolean boolean15 = properties10.containsValue((java.lang.Object) properties11);
        java.util.Collection<java.lang.Object> objCollection16 = properties10.values();
        java.util.Enumeration<?> wildcardEnumeration17 = properties10.propertyNames();
        java.lang.Object obj19 = properties6.put((java.lang.Object) wildcardEnumeration17, (java.lang.Object) 10.0d);
        java.util.Properties properties20 = new java.util.Properties();
        java.lang.Object obj22 = properties20.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration23 = properties20.elements();
        boolean boolean24 = properties20.isEmpty();
        java.util.Set<java.lang.Object> objSet25 = properties20.keySet();
        boolean boolean26 = properties20.isEmpty();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet27 = properties20.entrySet();
        java.util.Properties properties28 = new java.util.Properties();
        java.lang.Object obj30 = properties28.remove((java.lang.Object) 0.0d);
        boolean boolean31 = properties28.isEmpty();
        java.lang.Object obj34 = properties28.setProperty("", "hi!");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties35 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties35.setSerialJtaTransactions(false);
        boolean boolean38 = properties20.remove((java.lang.Object) properties28, (java.lang.Object) atomikosProperties35);
        java.util.Properties properties39 = new java.util.Properties(properties28);
        int int40 = properties39.size();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties42 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties42.setSerialJtaTransactions(false);
        boolean boolean45 = atomikosProperties42.isSerialJtaTransactions();
        java.lang.String str46 = atomikosProperties42.getService();
        boolean boolean47 = atomikosProperties42.isEnableLogging();
        java.lang.String str48 = atomikosProperties42.getTransactionManagerUniqueName();
        boolean boolean49 = properties39.remove((java.lang.Object) (byte) 1, (java.lang.Object) atomikosProperties42);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties50 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties50.setSerialJtaTransactions(false);
        atomikosProperties50.setThreadedTwoPhaseCommit(true);
        atomikosProperties50.setEnableLogging(false);
        boolean boolean57 = atomikosProperties50.isSerialJtaTransactions();
        int int58 = atomikosProperties50.getMaxActives();
        boolean boolean59 = atomikosProperties50.isSerialJtaTransactions();
        boolean boolean60 = properties6.remove((java.lang.Object) properties39, (java.lang.Object) boolean59);
        java.util.Properties properties61 = new java.util.Properties();
        java.lang.Object obj63 = properties61.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration64 = properties61.elements();
        boolean boolean65 = properties61.isEmpty();
        java.util.Enumeration<java.lang.Object> objEnumeration66 = properties61.elements();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet67 = properties61.entrySet();
        java.util.Set<java.lang.String> strSet68 = properties61.stringPropertyNames();
        java.util.Properties properties69 = new java.util.Properties();
        java.lang.Object obj71 = properties69.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration72 = properties69.elements();
        boolean boolean73 = properties69.isEmpty();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet74 = properties69.entrySet();
        boolean boolean75 = properties61.contains((java.lang.Object) properties69);
        java.util.Properties properties76 = new java.util.Properties();
        java.lang.Object obj78 = properties76.remove((java.lang.Object) 0.0d);
        java.util.Properties properties79 = new java.util.Properties();
        java.util.Collection<java.lang.Object> objCollection80 = properties79.values();
        java.util.Enumeration<java.lang.Object> objEnumeration81 = properties79.keys();
        java.util.Properties properties82 = new java.util.Properties();
        java.lang.Object obj84 = properties82.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration85 = properties82.elements();
        boolean boolean86 = properties82.isEmpty();
        java.util.Set<java.lang.Object> objSet87 = properties82.keySet();
        java.util.Enumeration<java.lang.Object> objEnumeration88 = properties82.keys();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet89 = properties82.entrySet();
        java.lang.Object obj90 = properties76.put((java.lang.Object) properties79, (java.lang.Object) properties82);
        java.lang.Object obj91 = properties79.clone();
        boolean boolean92 = properties61.containsKey((java.lang.Object) properties79);
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet93 = properties79.entrySet();
        java.util.Enumeration<java.lang.Object> objEnumeration94 = properties79.elements();
        java.lang.Object obj95 = properties1.putIfAbsent((java.lang.Object) properties6, (java.lang.Object) properties79);
        java.util.Collection<java.lang.Object> objCollection96 = properties6.values();
        org.junit.Assert.assertNull(obj3);
        org.junit.Assert.assertNotNull(strSet4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNull(obj8);
        org.junit.Assert.assertNotNull(strSet9);
        org.junit.Assert.assertNull(obj13);
        org.junit.Assert.assertNotNull(strSet14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(objCollection16);
        org.junit.Assert.assertNotNull(wildcardEnumeration17);
        org.junit.Assert.assertNull(obj19);
        org.junit.Assert.assertNull(obj22);
        org.junit.Assert.assertNotNull(objEnumeration23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNotNull(objSet25);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertNotNull(objEntrySet27);
        org.junit.Assert.assertNull(obj30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNull(obj34);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 0 + "'", int40 == 0);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNull(str46);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertNull(str48);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + 50 + "'", int58 == 50);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertNull(obj63);
        org.junit.Assert.assertNotNull(objEnumeration64);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65 == true);
        org.junit.Assert.assertNotNull(objEnumeration66);
        org.junit.Assert.assertNotNull(objEntrySet67);
        org.junit.Assert.assertNotNull(strSet68);
        org.junit.Assert.assertNull(obj71);
        org.junit.Assert.assertNotNull(objEnumeration72);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + true + "'", boolean73 == true);
        org.junit.Assert.assertNotNull(objEntrySet74);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
        org.junit.Assert.assertNull(obj78);
        org.junit.Assert.assertNotNull(objCollection80);
        org.junit.Assert.assertNotNull(objEnumeration81);
        org.junit.Assert.assertNull(obj84);
        org.junit.Assert.assertNotNull(objEnumeration85);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + true + "'", boolean86 == true);
        org.junit.Assert.assertNotNull(objSet87);
        org.junit.Assert.assertNotNull(objEnumeration88);
        org.junit.Assert.assertNotNull(objEntrySet89);
        org.junit.Assert.assertNull(obj90);
        org.junit.Assert.assertNotNull(obj91);
        org.junit.Assert.assertEquals(obj91.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj91), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj91), "{}");
        org.junit.Assert.assertTrue("'" + boolean92 + "' != '" + false + "'", boolean92 == false);
        org.junit.Assert.assertNotNull(objEntrySet93);
        org.junit.Assert.assertNotNull(objEnumeration94);
        org.junit.Assert.assertNull(obj95);
        org.junit.Assert.assertNotNull(objCollection96);
    }

    @Test
    public void test5173() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test5173");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        java.lang.String str4 = properties0.getProperty("");
        java.util.Properties properties5 = new java.util.Properties();
        java.lang.Object obj7 = properties5.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration8 = properties5.elements();
        int int9 = properties5.size();
        java.util.Properties properties10 = new java.util.Properties(properties5);
        properties0.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties5);
        int int12 = properties5.size();
        java.io.OutputStream outputStream13 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties5.storeToXML(outputStream13, "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=-1, com.atomikos.icatch.serial_jta_transactions=false, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=35, com.atomikos.icatch.threaded_2pc=true, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name={=hi!}}", "{hi!=[]}");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertNull(obj7);
        org.junit.Assert.assertNotNull(objEnumeration8);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
    }

    @Test
    public void test5174() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test5174");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        java.util.Properties properties3 = new java.util.Properties();
        java.util.Collection<java.lang.Object> objCollection4 = properties3.values();
        java.util.Enumeration<java.lang.Object> objEnumeration5 = properties3.keys();
        java.util.Properties properties6 = new java.util.Properties();
        java.lang.Object obj8 = properties6.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration9 = properties6.elements();
        boolean boolean10 = properties6.isEmpty();
        java.util.Set<java.lang.Object> objSet11 = properties6.keySet();
        java.util.Enumeration<java.lang.Object> objEnumeration12 = properties6.keys();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet13 = properties6.entrySet();
        java.lang.Object obj14 = properties0.put((java.lang.Object) properties3, (java.lang.Object) properties6);
        java.util.Properties properties15 = new java.util.Properties();
        java.lang.Object obj17 = properties15.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration18 = properties15.elements();
        boolean boolean19 = properties15.isEmpty();
        java.util.Set<java.lang.Object> objSet20 = properties15.keySet();
        boolean boolean21 = properties15.isEmpty();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet22 = properties15.entrySet();
        java.util.Properties properties23 = new java.util.Properties();
        java.lang.Object obj25 = properties23.remove((java.lang.Object) 0.0d);
        boolean boolean26 = properties23.isEmpty();
        java.lang.Object obj29 = properties23.setProperty("", "hi!");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties30 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties30.setSerialJtaTransactions(false);
        boolean boolean33 = properties15.remove((java.lang.Object) properties23, (java.lang.Object) atomikosProperties30);
        java.util.Properties properties34 = new java.util.Properties(properties23);
        int int35 = properties34.size();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties37 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties37.setSerialJtaTransactions(false);
        boolean boolean40 = atomikosProperties37.isSerialJtaTransactions();
        java.lang.String str41 = atomikosProperties37.getService();
        boolean boolean42 = atomikosProperties37.isEnableLogging();
        java.lang.String str43 = atomikosProperties37.getTransactionManagerUniqueName();
        boolean boolean44 = properties34.remove((java.lang.Object) (byte) 1, (java.lang.Object) atomikosProperties37);
        atomikosProperties37.setMaxActives((int) (short) -1);
        boolean boolean47 = atomikosProperties37.isThreadedTwoPhaseCommit();
        long long48 = atomikosProperties37.getDefaultJtaTimeout();
        atomikosProperties37.setForceShutdownOnVmExit(true);
        atomikosProperties37.setSerialJtaTransactions(true);
        java.util.Properties properties53 = new java.util.Properties();
        java.lang.Object obj55 = properties53.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration56 = properties53.elements();
        int int57 = properties53.size();
        java.util.Properties properties58 = new java.util.Properties();
        java.lang.Object obj60 = properties58.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration61 = properties58.elements();
        boolean boolean62 = properties58.isEmpty();
        java.util.Set<java.lang.Object> objSet63 = properties58.keySet();
        boolean boolean64 = properties53.containsKey((java.lang.Object) objSet63);
        java.lang.Object obj65 = properties3.putIfAbsent((java.lang.Object) true, (java.lang.Object) boolean64);
        java.util.Enumeration<java.lang.Object> objEnumeration66 = properties3.keys();
        java.io.PrintWriter printWriter67 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties3.list(printWriter67);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(objCollection4);
        org.junit.Assert.assertNotNull(objEnumeration5);
        org.junit.Assert.assertNull(obj8);
        org.junit.Assert.assertNotNull(objEnumeration9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(objSet11);
        org.junit.Assert.assertNotNull(objEnumeration12);
        org.junit.Assert.assertNotNull(objEntrySet13);
        org.junit.Assert.assertNull(obj14);
        org.junit.Assert.assertNull(obj17);
        org.junit.Assert.assertNotNull(objEnumeration18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(objSet20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(objEntrySet22);
        org.junit.Assert.assertNull(obj25);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertNull(obj29);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 0 + "'", int35 == 0);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNull(str41);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertNull(str43);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertTrue("'" + long48 + "' != '" + 10000L + "'", long48 == 10000L);
        org.junit.Assert.assertNull(obj55);
        org.junit.Assert.assertNotNull(objEnumeration56);
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + 0 + "'", int57 == 0);
        org.junit.Assert.assertNull(obj60);
        org.junit.Assert.assertNotNull(objEnumeration61);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + true + "'", boolean62 == true);
        org.junit.Assert.assertNotNull(objSet63);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertNull(obj65);
        org.junit.Assert.assertNotNull(objEnumeration66);
    }

    @Test
    public void test5175() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test5175");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setSerialJtaTransactions(false);
        boolean boolean3 = atomikosProperties0.isSerialJtaTransactions();
        java.util.Properties properties4 = atomikosProperties0.asProperties();
        java.lang.Object obj7 = properties4.setProperty("hi!", "");
        java.util.Properties properties8 = new java.util.Properties(properties4);
        java.io.OutputStream outputStream9 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties4.store(outputStream9, "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=false, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.tm_unique_name=tmlog, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(properties4);
        org.junit.Assert.assertNull(obj7);
    }

    @Test
    public void test5176() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test5176");
        java.util.Properties properties0 = new java.util.Properties();
        java.util.Collection<java.lang.Object> objCollection1 = properties0.values();
        java.util.Collection<java.lang.Object> objCollection2 = properties0.values();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties3 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties3.setSerialJtaTransactions(false);
        boolean boolean6 = atomikosProperties3.isThreadedTwoPhaseCommit();
        atomikosProperties3.setThreadedTwoPhaseCommit(false);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties9 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties9.setSerialJtaTransactions(false);
        boolean boolean12 = atomikosProperties9.isSerialJtaTransactions();
        atomikosProperties9.setTransactionManagerUniqueName("hi!");
        java.lang.String str15 = atomikosProperties9.getLogBaseName();
        java.lang.String str16 = atomikosProperties9.getLogBaseName();
        boolean boolean17 = atomikosProperties9.isForceShutdownOnVmExit();
        long long18 = atomikosProperties9.getMaxTimeout();
        java.lang.String str19 = atomikosProperties9.getTransactionManagerUniqueName();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties20 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties20.setSerialJtaTransactions(false);
        atomikosProperties20.setThreadedTwoPhaseCommit(true);
        atomikosProperties20.setThreadedTwoPhaseCommit(true);
        boolean boolean27 = properties0.replace((java.lang.Object) atomikosProperties3, (java.lang.Object) str19, (java.lang.Object) true);
        java.util.Properties properties28 = atomikosProperties3.asProperties();
        java.lang.Object obj31 = properties28.setProperty("tmlog", "{{}={}}");
        java.util.Collection<java.lang.Object> objCollection32 = properties28.values();
        java.io.PrintWriter printWriter33 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties28.list(printWriter33);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(objCollection1);
        org.junit.Assert.assertNotNull(objCollection2);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "tmlog" + "'", str15, "tmlog");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "tmlog" + "'", str16, "tmlog");
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + long18 + "' != '" + 300000L + "'", long18 == 300000L);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "hi!" + "'", str19, "hi!");
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(properties28);
        org.junit.Assert.assertNull(obj31);
        org.junit.Assert.assertNotNull(objCollection32);
    }

    @Test
    public void test5177() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test5177");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration3 = properties0.elements();
        java.util.Properties properties5 = new java.util.Properties();
        java.lang.Object obj7 = properties5.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration8 = properties5.elements();
        boolean boolean9 = properties5.isEmpty();
        java.util.Set<java.lang.Object> objSet10 = properties5.keySet();
        boolean boolean11 = properties5.isEmpty();
        java.lang.Object obj12 = properties0.getOrDefault((java.lang.Object) true, (java.lang.Object) boolean11);
        java.util.Properties properties13 = new java.util.Properties();
        java.lang.Object obj15 = properties13.remove((java.lang.Object) 0.0d);
        boolean boolean16 = properties13.isEmpty();
        java.util.Enumeration<java.lang.Object> objEnumeration17 = properties13.keys();
        java.util.Properties properties18 = new java.util.Properties();
        java.lang.Object obj20 = properties18.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet21 = properties18.stringPropertyNames();
        java.util.Properties properties22 = new java.util.Properties();
        java.util.Properties properties23 = new java.util.Properties();
        java.lang.Object obj25 = properties23.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet26 = properties23.stringPropertyNames();
        boolean boolean27 = properties22.containsValue((java.lang.Object) properties23);
        java.util.Collection<java.lang.Object> objCollection28 = properties22.values();
        java.util.Enumeration<?> wildcardEnumeration29 = properties22.propertyNames();
        java.lang.Object obj31 = properties18.put((java.lang.Object) wildcardEnumeration29, (java.lang.Object) 10.0d);
        java.util.Properties properties32 = new java.util.Properties();
        java.util.Properties properties33 = new java.util.Properties();
        java.lang.Object obj35 = properties33.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet36 = properties33.stringPropertyNames();
        boolean boolean37 = properties32.containsValue((java.lang.Object) properties33);
        java.util.Collection<java.lang.Object> objCollection38 = properties32.values();
        java.lang.Object obj39 = properties32.clone();
        boolean boolean40 = properties0.replace((java.lang.Object) properties13, (java.lang.Object) 10.0d, obj39);
        java.util.Properties properties41 = new java.util.Properties(properties13);
        java.lang.String str44 = properties41.getProperty("{hi!=[]}", "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=false, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=true, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(objEnumeration3);
        org.junit.Assert.assertNull(obj7);
        org.junit.Assert.assertNotNull(objEnumeration8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertNotNull(objSet10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertEquals("'" + obj12 + "' != '" + true + "'", obj12, true);
        org.junit.Assert.assertNull(obj15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(objEnumeration17);
        org.junit.Assert.assertNull(obj20);
        org.junit.Assert.assertNotNull(strSet21);
        org.junit.Assert.assertNull(obj25);
        org.junit.Assert.assertNotNull(strSet26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(objCollection28);
        org.junit.Assert.assertNotNull(wildcardEnumeration29);
        org.junit.Assert.assertNull(obj31);
        org.junit.Assert.assertNull(obj35);
        org.junit.Assert.assertNotNull(strSet36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(objCollection38);
        org.junit.Assert.assertNotNull(obj39);
        org.junit.Assert.assertEquals(obj39.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj39), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj39), "{}");
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=false, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=true, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}" + "'", str44, "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=false, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=true, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
    }

    @Test
    public void test5178() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test5178");
        java.util.Properties properties0 = new java.util.Properties();
        java.util.Properties properties1 = new java.util.Properties();
        java.lang.Object obj3 = properties1.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet4 = properties1.stringPropertyNames();
        boolean boolean5 = properties0.containsValue((java.lang.Object) properties1);
        java.util.Collection<java.lang.Object> objCollection6 = properties0.values();
        java.util.Properties properties8 = new java.util.Properties();
        java.lang.Object obj10 = properties8.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration11 = properties8.elements();
        boolean boolean12 = properties8.isEmpty();
        java.util.Set<java.lang.Object> objSet13 = properties8.keySet();
        java.lang.Object obj14 = properties0.putIfAbsent((java.lang.Object) "hi!", (java.lang.Object) objSet13);
        java.util.Set<java.lang.Object> objSet15 = properties0.keySet();
        java.util.Set<java.lang.Object> objSet16 = properties0.keySet();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet17 = properties0.entrySet();
        java.util.Properties properties18 = new java.util.Properties();
        java.lang.Object obj20 = properties18.remove((java.lang.Object) 0.0d);
        boolean boolean21 = properties18.isEmpty();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties22 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties22.setSerialJtaTransactions(false);
        atomikosProperties22.setThreadedTwoPhaseCommit(true);
        atomikosProperties22.setThreadedTwoPhaseCommit(true);
        java.util.Properties properties29 = atomikosProperties22.asProperties();
        int int30 = atomikosProperties22.getMaxActives();
        atomikosProperties22.setService("hi!");
        java.lang.Object obj33 = properties18.get((java.lang.Object) atomikosProperties22);
        boolean boolean34 = properties0.containsValue((java.lang.Object) atomikosProperties22);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties35 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties35.setSerialJtaTransactions(false);
        boolean boolean38 = atomikosProperties35.isSerialJtaTransactions();
        java.lang.String str39 = atomikosProperties35.getService();
        boolean boolean40 = atomikosProperties35.isEnableLogging();
        java.util.Properties properties41 = atomikosProperties35.asProperties();
        java.util.Enumeration<?> wildcardEnumeration42 = properties41.propertyNames();
        java.lang.Object obj43 = properties0.remove((java.lang.Object) wildcardEnumeration42);
        java.util.Set<java.lang.Object> objSet44 = properties0.keySet();
        java.lang.String str45 = properties0.toString();
        java.io.Reader reader46 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties0.load(reader46);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(obj3);
        org.junit.Assert.assertNotNull(strSet4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(objCollection6);
        org.junit.Assert.assertNull(obj10);
        org.junit.Assert.assertNotNull(objEnumeration11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(objSet13);
        org.junit.Assert.assertNull(obj14);
        org.junit.Assert.assertNotNull(objSet15);
        org.junit.Assert.assertNotNull(objSet16);
        org.junit.Assert.assertNotNull(objEntrySet17);
        org.junit.Assert.assertNull(obj20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(properties29);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 50 + "'", int30 == 50);
        org.junit.Assert.assertNull(obj33);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNull(str39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNotNull(properties41);
        org.junit.Assert.assertNotNull(wildcardEnumeration42);
        org.junit.Assert.assertNull(obj43);
        org.junit.Assert.assertNotNull(objSet44);
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "{hi!=[]}" + "'", str45, "{hi!=[]}");
    }

    @Test
    public void test5179() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test5179");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration3 = properties0.elements();
        int int4 = properties0.size();
        java.util.Properties properties5 = new java.util.Properties();
        java.lang.Object obj7 = properties5.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration8 = properties5.elements();
        boolean boolean9 = properties5.isEmpty();
        java.util.Set<java.lang.Object> objSet10 = properties5.keySet();
        boolean boolean11 = properties0.containsKey((java.lang.Object) objSet10);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties12 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties12.setSerialJtaTransactions(false);
        atomikosProperties12.setThreadedTwoPhaseCommit(true);
        boolean boolean17 = atomikosProperties12.isForceShutdownOnVmExit();
        java.lang.String str18 = atomikosProperties12.getTransactionManagerUniqueName();
        atomikosProperties12.setCheckpointInterval(10000L);
        java.lang.String str21 = atomikosProperties12.getTransactionManagerUniqueName();
        boolean boolean22 = atomikosProperties12.isForceShutdownOnVmExit();
        java.lang.Object obj23 = null;
        java.lang.Object obj24 = properties0.getOrDefault((java.lang.Object) atomikosProperties12, obj23);
        atomikosProperties12.setService("{true=true}");
        atomikosProperties12.setLogBaseName("{{}=tmlog}");
        boolean boolean29 = atomikosProperties12.isThreadedTwoPhaseCommit();
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(objEnumeration3);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNull(obj7);
        org.junit.Assert.assertNotNull(objEnumeration8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertNotNull(objSet10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNull(str18);
        org.junit.Assert.assertNull(str21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNull(obj24);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
    }

    @Test
    public void test5180() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test5180");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration3 = properties0.elements();
        boolean boolean4 = properties0.isEmpty();
        java.util.Enumeration<java.lang.Object> objEnumeration5 = properties0.elements();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet6 = properties0.entrySet();
        java.util.Set<java.lang.String> strSet7 = properties0.stringPropertyNames();
        java.lang.Object obj10 = properties0.setProperty("{}", "tmlog");
        java.util.Properties properties11 = new java.util.Properties();
        java.lang.Object obj13 = properties11.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration14 = properties11.elements();
        int int15 = properties11.size();
        java.util.Properties properties16 = new java.util.Properties();
        java.lang.Object obj18 = properties16.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration19 = properties16.elements();
        java.util.Enumeration<java.lang.Object> objEnumeration20 = properties16.keys();
        java.lang.Object obj21 = properties0.getOrDefault((java.lang.Object) properties11, (java.lang.Object) objEnumeration20);
        java.util.Properties properties22 = new java.util.Properties(properties11);
        java.util.Properties properties23 = new java.util.Properties();
        java.lang.Object obj25 = properties23.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<?> wildcardEnumeration26 = properties23.propertyNames();
        java.lang.Object obj29 = properties23.setProperty("{}", "hi!");
        properties23.clear();
        boolean boolean31 = properties11.containsValue((java.lang.Object) properties23);
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet32 = properties23.entrySet();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties33 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties33.setSerialJtaTransactions(false);
        atomikosProperties33.setThreadedTwoPhaseCommit(true);
        atomikosProperties33.setMaxTimeout((long) '#');
        boolean boolean40 = atomikosProperties33.isEnableLogging();
        atomikosProperties33.setCheckpointInterval((long) (byte) -1);
        atomikosProperties33.setEnableLogging(true);
        atomikosProperties33.setLogBaseName("{}");
        long long47 = atomikosProperties33.getDefaultJtaTimeout();
        atomikosProperties33.setCheckpointInterval(0L);
        java.lang.Object obj50 = properties23.remove((java.lang.Object) 0L);
        java.util.Set<java.lang.Object> objSet51 = properties23.keySet();
        java.util.Enumeration<java.lang.Object> objEnumeration52 = properties23.keys();
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(objEnumeration3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(objEnumeration5);
        org.junit.Assert.assertNotNull(objEntrySet6);
        org.junit.Assert.assertNotNull(strSet7);
        org.junit.Assert.assertNull(obj10);
        org.junit.Assert.assertNull(obj13);
        org.junit.Assert.assertNotNull(objEnumeration14);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0);
        org.junit.Assert.assertNull(obj18);
        org.junit.Assert.assertNotNull(objEnumeration19);
        org.junit.Assert.assertNotNull(objEnumeration20);
        org.junit.Assert.assertNotNull(obj21);
        org.junit.Assert.assertNull(obj25);
        org.junit.Assert.assertNotNull(wildcardEnumeration26);
        org.junit.Assert.assertNull(obj29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(objEntrySet32);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertTrue("'" + long47 + "' != '" + 10000L + "'", long47 == 10000L);
        org.junit.Assert.assertNull(obj50);
        org.junit.Assert.assertNotNull(objSet51);
        org.junit.Assert.assertNotNull(objEnumeration52);
    }

    @Test
    public void test5181() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test5181");
        java.util.Properties properties0 = new java.util.Properties();
        java.util.Properties properties1 = new java.util.Properties();
        java.lang.Object obj3 = properties1.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet4 = properties1.stringPropertyNames();
        boolean boolean5 = properties0.containsValue((java.lang.Object) properties1);
        java.util.Collection<java.lang.Object> objCollection6 = properties0.values();
        java.util.Properties properties8 = new java.util.Properties();
        java.lang.Object obj10 = properties8.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration11 = properties8.elements();
        boolean boolean12 = properties8.isEmpty();
        java.util.Set<java.lang.Object> objSet13 = properties8.keySet();
        java.lang.Object obj14 = properties0.putIfAbsent((java.lang.Object) "hi!", (java.lang.Object) objSet13);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties15 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties15.setSerialJtaTransactions(false);
        boolean boolean18 = atomikosProperties15.isSerialJtaTransactions();
        java.util.Properties properties19 = atomikosProperties15.asProperties();
        java.lang.Object obj22 = properties19.setProperty("hi!", "");
        java.util.Properties properties23 = new java.util.Properties(properties19);
        java.util.Properties properties24 = new java.util.Properties();
        java.lang.Object obj26 = properties24.remove((java.lang.Object) 0.0d);
        java.util.Properties properties27 = new java.util.Properties();
        java.util.Collection<java.lang.Object> objCollection28 = properties27.values();
        java.util.Enumeration<java.lang.Object> objEnumeration29 = properties27.keys();
        java.util.Properties properties30 = new java.util.Properties();
        java.lang.Object obj32 = properties30.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration33 = properties30.elements();
        boolean boolean34 = properties30.isEmpty();
        java.util.Set<java.lang.Object> objSet35 = properties30.keySet();
        java.util.Enumeration<java.lang.Object> objEnumeration36 = properties30.keys();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet37 = properties30.entrySet();
        java.lang.Object obj38 = properties24.put((java.lang.Object) properties27, (java.lang.Object) properties30);
        java.lang.Object obj39 = properties0.putIfAbsent((java.lang.Object) properties23, (java.lang.Object) properties30);
        properties30.clear();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties41 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties41.setSerialJtaTransactions(false);
        atomikosProperties41.setThreadedTwoPhaseCommit(true);
        atomikosProperties41.setMaxTimeout((long) '#');
        boolean boolean48 = atomikosProperties41.isEnableLogging();
        atomikosProperties41.setCheckpointInterval((long) (byte) -1);
        atomikosProperties41.setEnableLogging(true);
        atomikosProperties41.setLogBaseDir("");
        java.util.Properties properties55 = new java.util.Properties();
        java.lang.Object obj57 = properties55.remove((java.lang.Object) 0.0d);
        boolean boolean58 = properties55.isEmpty();
        java.util.Enumeration<java.lang.Object> objEnumeration59 = properties55.elements();
        java.lang.Object obj62 = properties55.replace((java.lang.Object) 1, (java.lang.Object) 1);
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet63 = properties55.entrySet();
        java.lang.Object obj64 = properties30.getOrDefault((java.lang.Object) "", (java.lang.Object) properties55);
        java.lang.String str65 = properties30.toString();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet66 = properties30.entrySet();
        java.io.InputStream inputStream67 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties30.loadFromXML(inputStream67);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(obj3);
        org.junit.Assert.assertNotNull(strSet4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(objCollection6);
        org.junit.Assert.assertNull(obj10);
        org.junit.Assert.assertNotNull(objEnumeration11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(objSet13);
        org.junit.Assert.assertNull(obj14);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(properties19);
        org.junit.Assert.assertNull(obj22);
        org.junit.Assert.assertNull(obj26);
        org.junit.Assert.assertNotNull(objCollection28);
        org.junit.Assert.assertNotNull(objEnumeration29);
        org.junit.Assert.assertNull(obj32);
        org.junit.Assert.assertNotNull(objEnumeration33);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertNotNull(objSet35);
        org.junit.Assert.assertNotNull(objEnumeration36);
        org.junit.Assert.assertNotNull(objEntrySet37);
        org.junit.Assert.assertNull(obj38);
        org.junit.Assert.assertNull(obj39);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertNull(obj57);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertNotNull(objEnumeration59);
        org.junit.Assert.assertNull(obj62);
        org.junit.Assert.assertNotNull(objEntrySet63);
        org.junit.Assert.assertNotNull(obj64);
        org.junit.Assert.assertEquals(obj64.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj64), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj64), "{}");
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "{}" + "'", str65, "{}");
        org.junit.Assert.assertNotNull(objEntrySet66);
    }

    @Test
    public void test5182() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test5182");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        boolean boolean3 = properties0.isEmpty();
        java.util.Enumeration<java.lang.Object> objEnumeration4 = properties0.elements();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet5 = properties0.entrySet();
        java.util.Enumeration<java.lang.Object> objEnumeration6 = properties0.keys();
        java.lang.String str9 = properties0.getProperty("{}", "tmlog");
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(objEnumeration4);
        org.junit.Assert.assertNotNull(objEntrySet5);
        org.junit.Assert.assertNotNull(objEnumeration6);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "tmlog" + "'", str9, "tmlog");
    }

    @Test
    public void test5183() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test5183");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        boolean boolean3 = properties0.isEmpty();
        java.lang.Object obj6 = properties0.setProperty("", "hi!");
        java.util.Properties properties7 = new java.util.Properties();
        java.lang.Object obj9 = properties7.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration10 = properties7.elements();
        boolean boolean11 = properties7.isEmpty();
        java.util.Set<java.lang.Object> objSet12 = properties7.keySet();
        boolean boolean13 = properties7.isEmpty();
        java.util.Properties properties14 = new java.util.Properties();
        java.util.Collection<java.lang.Object> objCollection15 = properties14.values();
        java.util.Enumeration<java.lang.Object> objEnumeration16 = properties14.keys();
        java.lang.Object obj17 = properties7.remove((java.lang.Object) properties14);
        java.lang.Object obj18 = properties0.get((java.lang.Object) properties14);
        java.util.Properties properties19 = new java.util.Properties();
        java.lang.Object obj21 = properties19.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration22 = properties19.elements();
        boolean boolean23 = properties19.isEmpty();
        java.util.Set<java.lang.Object> objSet24 = properties19.keySet();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties25 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties25.setSerialJtaTransactions(false);
        atomikosProperties25.setThreadedTwoPhaseCommit(true);
        atomikosProperties25.setThreadedTwoPhaseCommit(true);
        java.util.Properties properties32 = atomikosProperties25.asProperties();
        int int33 = atomikosProperties25.getMaxActives();
        java.util.Properties properties34 = new java.util.Properties();
        java.lang.Object obj36 = properties34.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration37 = properties34.elements();
        boolean boolean38 = properties34.isEmpty();
        java.util.Set<java.lang.Object> objSet39 = properties34.keySet();
        boolean boolean41 = properties34.containsKey((java.lang.Object) (-1.0f));
        java.lang.Object obj42 = properties19.put((java.lang.Object) atomikosProperties25, (java.lang.Object) properties34);
        boolean boolean43 = properties14.containsKey((java.lang.Object) properties34);
        properties34.clear();
        java.lang.Object obj47 = properties34.setProperty("{-1=100}", "{{{}={}}={}}");
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNull(obj6);
        org.junit.Assert.assertNull(obj9);
        org.junit.Assert.assertNotNull(objEnumeration10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNotNull(objSet12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(objCollection15);
        org.junit.Assert.assertNotNull(objEnumeration16);
        org.junit.Assert.assertNull(obj17);
        org.junit.Assert.assertNull(obj18);
        org.junit.Assert.assertNull(obj21);
        org.junit.Assert.assertNotNull(objEnumeration22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNotNull(objSet24);
        org.junit.Assert.assertNotNull(properties32);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 50 + "'", int33 == 50);
        org.junit.Assert.assertNull(obj36);
        org.junit.Assert.assertNotNull(objEnumeration37);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertNotNull(objSet39);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNull(obj42);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNull(obj47);
    }

    @Test
    public void test5184() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test5184");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setSerialJtaTransactions(false);
        atomikosProperties0.setThreadedTwoPhaseCommit(true);
        atomikosProperties0.setMaxTimeout((long) '#');
        boolean boolean7 = atomikosProperties0.isEnableLogging();
        atomikosProperties0.setCheckpointInterval((long) (byte) -1);
        atomikosProperties0.setLogBaseName("{=hi!}");
        long long12 = atomikosProperties0.getMaxTimeout();
        atomikosProperties0.setEnableLogging(true);
        atomikosProperties0.setTransactionManagerUniqueName("{hi!=[], {}={}}");
        long long17 = atomikosProperties0.getCheckpointInterval();
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertTrue("'" + long12 + "' != '" + 35L + "'", long12 == 35L);
        org.junit.Assert.assertTrue("'" + long17 + "' != '" + (-1L) + "'", long17 == (-1L));
    }

    @Test
    public void test5185() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test5185");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet3 = properties0.stringPropertyNames();
        java.util.Properties properties4 = new java.util.Properties();
        java.util.Properties properties5 = new java.util.Properties();
        java.lang.Object obj7 = properties5.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet8 = properties5.stringPropertyNames();
        boolean boolean9 = properties4.containsValue((java.lang.Object) properties5);
        java.util.Collection<java.lang.Object> objCollection10 = properties4.values();
        java.util.Enumeration<?> wildcardEnumeration11 = properties4.propertyNames();
        java.lang.Object obj13 = properties0.put((java.lang.Object) wildcardEnumeration11, (java.lang.Object) 10.0d);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties14 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties14.setSerialJtaTransactions(false);
        atomikosProperties14.setThreadedTwoPhaseCommit(true);
        atomikosProperties14.setMaxTimeout((long) '#');
        boolean boolean21 = atomikosProperties14.isForceShutdownOnVmExit();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties22 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties22.setSerialJtaTransactions(false);
        atomikosProperties22.setThreadedTwoPhaseCommit(true);
        atomikosProperties22.setThreadedTwoPhaseCommit(true);
        java.lang.Object obj29 = properties0.getOrDefault((java.lang.Object) boolean21, (java.lang.Object) atomikosProperties22);
        java.util.Properties properties30 = new java.util.Properties();
        java.lang.Object obj32 = properties30.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration33 = properties30.elements();
        boolean boolean34 = properties30.isEmpty();
        java.util.Set<java.lang.Object> objSet35 = properties30.keySet();
        java.util.Enumeration<java.lang.Object> objEnumeration36 = properties30.keys();
        java.lang.String str38 = properties30.getProperty("hi!");
        java.lang.String str40 = properties30.getProperty("");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties41 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties41.setSerialJtaTransactions(false);
        atomikosProperties41.setThreadedTwoPhaseCommit(true);
        atomikosProperties41.setEnableLogging(false);
        boolean boolean48 = properties30.containsKey((java.lang.Object) atomikosProperties41);
        boolean boolean49 = properties0.containsValue((java.lang.Object) properties30);
        java.util.Enumeration<java.lang.Object> objEnumeration50 = properties0.elements();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties51 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties51.setSerialJtaTransactions(false);
        boolean boolean54 = atomikosProperties51.isSerialJtaTransactions();
        java.lang.String str55 = atomikosProperties51.getService();
        long long56 = atomikosProperties51.getMaxTimeout();
        atomikosProperties51.setCheckpointInterval((long) (short) 10);
        java.lang.String str59 = atomikosProperties51.getService();
        java.lang.Object obj60 = properties0.remove((java.lang.Object) atomikosProperties51);
        atomikosProperties51.setLogBaseName("{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=false, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.tm_unique_name=tmlog, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
        atomikosProperties51.setMaxTimeout(97L);
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(strSet3);
        org.junit.Assert.assertNull(obj7);
        org.junit.Assert.assertNotNull(strSet8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(objCollection10);
        org.junit.Assert.assertNotNull(wildcardEnumeration11);
        org.junit.Assert.assertNull(obj13);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(obj29);
        org.junit.Assert.assertNull(obj32);
        org.junit.Assert.assertNotNull(objEnumeration33);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertNotNull(objSet35);
        org.junit.Assert.assertNotNull(objEnumeration36);
        org.junit.Assert.assertNull(str38);
        org.junit.Assert.assertNull(str40);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNotNull(objEnumeration50);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertNull(str55);
        org.junit.Assert.assertTrue("'" + long56 + "' != '" + 300000L + "'", long56 == 300000L);
        org.junit.Assert.assertNull(str59);
        org.junit.Assert.assertNull(obj60);
    }

    @Test
    public void test5186() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test5186");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        boolean boolean3 = properties0.isEmpty();
        java.lang.Object obj6 = properties0.setProperty("", "hi!");
        java.util.Properties properties7 = new java.util.Properties();
        java.lang.Object obj9 = properties7.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration10 = properties7.elements();
        boolean boolean11 = properties7.isEmpty();
        java.util.Set<java.lang.Object> objSet12 = properties7.keySet();
        boolean boolean13 = properties7.isEmpty();
        java.util.Properties properties14 = new java.util.Properties();
        java.util.Collection<java.lang.Object> objCollection15 = properties14.values();
        java.util.Enumeration<java.lang.Object> objEnumeration16 = properties14.keys();
        java.lang.Object obj17 = properties7.remove((java.lang.Object) properties14);
        java.lang.Object obj18 = properties0.get((java.lang.Object) properties14);
        java.util.Properties properties19 = new java.util.Properties();
        java.lang.Object obj21 = properties19.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration22 = properties19.elements();
        boolean boolean23 = properties19.isEmpty();
        java.util.Set<java.lang.Object> objSet24 = properties19.keySet();
        boolean boolean25 = properties19.isEmpty();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet26 = properties19.entrySet();
        java.util.Properties properties27 = new java.util.Properties();
        java.lang.Object obj29 = properties27.remove((java.lang.Object) 0.0d);
        boolean boolean30 = properties27.isEmpty();
        java.lang.Object obj33 = properties27.setProperty("", "hi!");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties34 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties34.setSerialJtaTransactions(false);
        boolean boolean37 = properties19.remove((java.lang.Object) properties27, (java.lang.Object) atomikosProperties34);
        properties14.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties19);
        properties14.clear();
        java.util.Enumeration<java.lang.Object> objEnumeration40 = properties14.elements();
        boolean boolean41 = properties14.isEmpty();
        java.io.Writer writer42 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties14.store(writer42, "{{}={}}");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNull(obj6);
        org.junit.Assert.assertNull(obj9);
        org.junit.Assert.assertNotNull(objEnumeration10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNotNull(objSet12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(objCollection15);
        org.junit.Assert.assertNotNull(objEnumeration16);
        org.junit.Assert.assertNull(obj17);
        org.junit.Assert.assertNull(obj18);
        org.junit.Assert.assertNull(obj21);
        org.junit.Assert.assertNotNull(objEnumeration22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNotNull(objSet24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(objEntrySet26);
        org.junit.Assert.assertNull(obj29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNull(obj33);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(objEnumeration40);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
    }

    @Test
    public void test5187() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test5187");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setSerialJtaTransactions(false);
        atomikosProperties0.setThreadedTwoPhaseCommit(true);
        atomikosProperties0.setMaxTimeout((long) '#');
        boolean boolean7 = atomikosProperties0.isEnableLogging();
        atomikosProperties0.setCheckpointInterval((long) (byte) -1);
        atomikosProperties0.setMaxActives((int) (byte) 100);
        atomikosProperties0.setTransactionManagerUniqueName("{=hi!}");
        java.lang.String str14 = atomikosProperties0.getLogBaseDir();
        atomikosProperties0.setForceShutdownOnVmExit(false);
        long long17 = atomikosProperties0.getDefaultJtaTimeout();
        boolean boolean18 = atomikosProperties0.isForceShutdownOnVmExit();
        atomikosProperties0.setMaxActives(10);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertTrue("'" + long17 + "' != '" + 10000L + "'", long17 == 10000L);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
    }

    @Test
    public void test5188() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test5188");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration3 = properties0.elements();
        boolean boolean4 = properties0.isEmpty();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet5 = properties0.entrySet();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties7 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties7.setSerialJtaTransactions(false);
        atomikosProperties7.setThreadedTwoPhaseCommit(true);
        atomikosProperties7.setMaxTimeout((long) '#');
        boolean boolean14 = atomikosProperties7.isForceShutdownOnVmExit();
        java.lang.Object obj15 = properties0.put((java.lang.Object) (short) 1, (java.lang.Object) atomikosProperties7);
        atomikosProperties7.setForceShutdownOnVmExit(true);
        java.util.Properties properties18 = atomikosProperties7.asProperties();
        java.util.Properties properties19 = new java.util.Properties(properties18);
        boolean boolean21 = properties18.contains((java.lang.Object) 35);
        java.util.Enumeration<java.lang.Object> objEnumeration22 = properties18.elements();
        java.io.Writer writer23 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties18.store(writer23, "{-1=100}");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(objEnumeration3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(objEntrySet5);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNull(obj15);
        org.junit.Assert.assertNotNull(properties18);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(objEnumeration22);
    }

    @Test
    public void test5189() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test5189");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        java.lang.String str4 = properties0.getProperty("");
        java.util.Properties properties5 = new java.util.Properties();
        java.lang.Object obj7 = properties5.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration8 = properties5.elements();
        int int9 = properties5.size();
        java.util.Properties properties10 = new java.util.Properties(properties5);
        properties0.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties5);
        java.io.PrintWriter printWriter12 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties5.list(printWriter12);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertNull(obj7);
        org.junit.Assert.assertNotNull(objEnumeration8);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
    }

    @Test
    public void test5190() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test5190");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        boolean boolean3 = properties0.isEmpty();
        java.lang.Object obj6 = properties0.setProperty("", "hi!");
        java.util.Properties properties7 = new java.util.Properties();
        java.lang.Object obj9 = properties7.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration10 = properties7.elements();
        boolean boolean11 = properties7.isEmpty();
        java.util.Set<java.lang.Object> objSet12 = properties7.keySet();
        boolean boolean13 = properties7.isEmpty();
        java.util.Properties properties14 = new java.util.Properties();
        java.util.Collection<java.lang.Object> objCollection15 = properties14.values();
        java.util.Enumeration<java.lang.Object> objEnumeration16 = properties14.keys();
        java.lang.Object obj17 = properties7.remove((java.lang.Object) properties14);
        java.lang.Object obj18 = properties0.get((java.lang.Object) properties14);
        java.util.Enumeration<java.lang.Object> objEnumeration19 = properties14.keys();
        java.util.Collection<java.lang.Object> objCollection20 = properties14.values();
        java.lang.String str21 = properties14.toString();
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNull(obj6);
        org.junit.Assert.assertNull(obj9);
        org.junit.Assert.assertNotNull(objEnumeration10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNotNull(objSet12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(objCollection15);
        org.junit.Assert.assertNotNull(objEnumeration16);
        org.junit.Assert.assertNull(obj17);
        org.junit.Assert.assertNull(obj18);
        org.junit.Assert.assertNotNull(objEnumeration19);
        org.junit.Assert.assertNotNull(objCollection20);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "{}" + "'", str21, "{}");
    }

    @Test
    public void test5191() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test5191");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setSerialJtaTransactions(false);
        boolean boolean3 = atomikosProperties0.isSerialJtaTransactions();
        java.lang.String str4 = atomikosProperties0.getService();
        boolean boolean5 = atomikosProperties0.isEnableLogging();
        atomikosProperties0.setCheckpointInterval((long) (byte) 100);
        atomikosProperties0.setTransactionManagerUniqueName("{=hi!}");
        atomikosProperties0.setMaxTimeout(10000L);
        atomikosProperties0.setEnableLogging(false);
        long long14 = atomikosProperties0.getDefaultJtaTimeout();
        atomikosProperties0.setCheckpointInterval((long) 9);
        atomikosProperties0.setEnableLogging(true);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertTrue("'" + long14 + "' != '" + 10000L + "'", long14 == 10000L);
    }

    @Test
    public void test5192() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test5192");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet3 = properties0.stringPropertyNames();
        java.util.Properties properties4 = new java.util.Properties();
        java.util.Properties properties5 = new java.util.Properties();
        java.lang.Object obj7 = properties5.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet8 = properties5.stringPropertyNames();
        boolean boolean9 = properties4.containsValue((java.lang.Object) properties5);
        java.util.Collection<java.lang.Object> objCollection10 = properties4.values();
        java.util.Enumeration<?> wildcardEnumeration11 = properties4.propertyNames();
        java.lang.Object obj13 = properties0.put((java.lang.Object) wildcardEnumeration11, (java.lang.Object) 10.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration14 = properties0.elements();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties15 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties15.setSerialJtaTransactions(false);
        boolean boolean18 = atomikosProperties15.isSerialJtaTransactions();
        java.lang.String str19 = atomikosProperties15.getService();
        boolean boolean20 = atomikosProperties15.isEnableLogging();
        java.lang.String str21 = atomikosProperties15.getTransactionManagerUniqueName();
        java.util.Properties properties22 = new java.util.Properties();
        java.lang.Object obj24 = properties22.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration25 = properties22.elements();
        int int26 = properties22.size();
        java.util.Properties properties27 = new java.util.Properties();
        java.lang.Object obj29 = properties27.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration30 = properties27.elements();
        boolean boolean31 = properties27.isEmpty();
        java.util.Set<java.lang.Object> objSet32 = properties27.keySet();
        boolean boolean33 = properties22.containsKey((java.lang.Object) objSet32);
        java.util.Enumeration<java.lang.Object> objEnumeration34 = properties22.keys();
        java.util.Properties properties35 = new java.util.Properties();
        java.lang.Object obj37 = properties35.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration38 = properties35.elements();
        boolean boolean39 = properties35.isEmpty();
        java.util.Set<java.lang.Object> objSet40 = properties35.keySet();
        java.util.Enumeration<java.lang.Object> objEnumeration41 = properties35.keys();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet42 = properties35.entrySet();
        boolean boolean44 = properties22.remove((java.lang.Object) properties35, (java.lang.Object) 1.0f);
        boolean boolean45 = properties35.isEmpty();
        java.lang.Object obj46 = properties0.put((java.lang.Object) atomikosProperties15, (java.lang.Object) properties35);
        java.util.Properties properties47 = new java.util.Properties();
        java.lang.Object obj49 = properties47.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration50 = properties47.elements();
        boolean boolean51 = properties47.isEmpty();
        java.util.Set<java.lang.Object> objSet52 = properties47.keySet();
        boolean boolean53 = properties47.isEmpty();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet54 = properties47.entrySet();
        java.util.Properties properties55 = new java.util.Properties();
        java.lang.Object obj57 = properties55.remove((java.lang.Object) 0.0d);
        boolean boolean58 = properties55.isEmpty();
        java.lang.Object obj61 = properties55.setProperty("", "hi!");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties62 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties62.setSerialJtaTransactions(false);
        boolean boolean65 = properties47.remove((java.lang.Object) properties55, (java.lang.Object) atomikosProperties62);
        atomikosProperties62.setSerialJtaTransactions(false);
        boolean boolean68 = properties35.contains((java.lang.Object) atomikosProperties62);
        boolean boolean69 = atomikosProperties62.isForceShutdownOnVmExit();
        atomikosProperties62.setLogBaseName("hi!");
        long long72 = atomikosProperties62.getDefaultJtaTimeout();
        boolean boolean73 = atomikosProperties62.isThreadedTwoPhaseCommit();
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(strSet3);
        org.junit.Assert.assertNull(obj7);
        org.junit.Assert.assertNotNull(strSet8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(objCollection10);
        org.junit.Assert.assertNotNull(wildcardEnumeration11);
        org.junit.Assert.assertNull(obj13);
        org.junit.Assert.assertNotNull(objEnumeration14);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNull(str19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNull(str21);
        org.junit.Assert.assertNull(obj24);
        org.junit.Assert.assertNotNull(objEnumeration25);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 0 + "'", int26 == 0);
        org.junit.Assert.assertNull(obj29);
        org.junit.Assert.assertNotNull(objEnumeration30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNotNull(objSet32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(objEnumeration34);
        org.junit.Assert.assertNull(obj37);
        org.junit.Assert.assertNotNull(objEnumeration38);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNotNull(objSet40);
        org.junit.Assert.assertNotNull(objEnumeration41);
        org.junit.Assert.assertNotNull(objEntrySet42);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertNull(obj46);
        org.junit.Assert.assertNull(obj49);
        org.junit.Assert.assertNotNull(objEnumeration50);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertNotNull(objSet52);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertNotNull(objEntrySet54);
        org.junit.Assert.assertNull(obj57);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertNull(obj61);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertTrue("'" + long72 + "' != '" + 10000L + "'", long72 == 10000L);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
    }

    @Test
    public void test5193() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test5193");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration3 = properties0.elements();
        int int4 = properties0.size();
        java.util.Properties properties5 = new java.util.Properties(properties0);
        java.util.Set<java.lang.String> strSet6 = properties0.stringPropertyNames();
        java.util.Set<java.lang.String> strSet7 = properties0.stringPropertyNames();
        java.lang.Object obj8 = properties0.clone();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties9 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties9.setSerialJtaTransactions(false);
        boolean boolean12 = atomikosProperties9.isSerialJtaTransactions();
        java.lang.String str13 = atomikosProperties9.getService();
        boolean boolean14 = atomikosProperties9.isEnableLogging();
        java.util.Properties properties15 = atomikosProperties9.asProperties();
        atomikosProperties9.setForceShutdownOnVmExit(true);
        atomikosProperties9.setMaxActives((int) (short) -1);
        boolean boolean20 = properties0.containsKey((java.lang.Object) (short) -1);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties21 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties21.setSerialJtaTransactions(false);
        atomikosProperties21.setThreadedTwoPhaseCommit(true);
        atomikosProperties21.setEnableLogging(false);
        boolean boolean28 = atomikosProperties21.isSerialJtaTransactions();
        int int29 = atomikosProperties21.getMaxActives();
        atomikosProperties21.setMaxActives((int) (byte) 0);
        boolean boolean32 = properties0.contains((java.lang.Object) (byte) 0);
        java.lang.String str34 = properties0.getProperty("{[]=0.0}");
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(objEnumeration3);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNotNull(strSet6);
        org.junit.Assert.assertNotNull(strSet7);
        org.junit.Assert.assertNotNull(obj8);
        org.junit.Assert.assertEquals(obj8.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj8), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj8), "{}");
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(properties15);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 50 + "'", int29 == 50);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNull(str34);
    }

    @Test
    public void test5194() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test5194");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration3 = properties0.elements();
        boolean boolean4 = properties0.isEmpty();
        java.util.Set<java.lang.Object> objSet5 = properties0.keySet();
        java.util.Enumeration<java.lang.Object> objEnumeration6 = properties0.keys();
        java.lang.String str8 = properties0.getProperty("hi!");
        java.util.Properties properties10 = new java.util.Properties();
        java.lang.Object obj12 = properties10.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration13 = properties10.elements();
        int int14 = properties10.size();
        java.util.Properties properties15 = new java.util.Properties(properties10);
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet16 = properties10.entrySet();
        java.util.Properties properties17 = new java.util.Properties();
        java.util.Properties properties18 = new java.util.Properties();
        java.lang.Object obj20 = properties18.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet21 = properties18.stringPropertyNames();
        boolean boolean22 = properties17.containsValue((java.lang.Object) properties18);
        java.util.Collection<java.lang.Object> objCollection23 = properties17.values();
        java.util.Properties properties25 = new java.util.Properties();
        java.lang.Object obj27 = properties25.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration28 = properties25.elements();
        boolean boolean29 = properties25.isEmpty();
        java.util.Set<java.lang.Object> objSet30 = properties25.keySet();
        java.lang.Object obj31 = properties17.putIfAbsent((java.lang.Object) "hi!", (java.lang.Object) objSet30);
        boolean boolean32 = properties0.replace((java.lang.Object) "hi!", (java.lang.Object) properties10, (java.lang.Object) "hi!");
        java.util.Set<java.lang.String> strSet33 = properties10.stringPropertyNames();
        java.util.Properties properties34 = new java.util.Properties();
        java.lang.Object obj36 = properties34.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration37 = properties34.elements();
        int int38 = properties34.size();
        java.util.Properties properties39 = new java.util.Properties(properties34);
        java.util.Set<java.lang.String> strSet40 = properties34.stringPropertyNames();
        java.util.Set<java.lang.String> strSet41 = properties34.stringPropertyNames();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties42 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties42.setSerialJtaTransactions(false);
        atomikosProperties42.setThreadedTwoPhaseCommit(true);
        atomikosProperties42.setMaxTimeout((long) '#');
        boolean boolean49 = atomikosProperties42.isEnableLogging();
        atomikosProperties42.setCheckpointInterval((long) (byte) -1);
        atomikosProperties42.setEnableLogging(true);
        atomikosProperties42.setLogBaseName("{}");
        long long56 = atomikosProperties42.getDefaultJtaTimeout();
        java.lang.Object obj57 = properties10.putIfAbsent((java.lang.Object) properties34, (java.lang.Object) atomikosProperties42);
        java.util.Properties properties58 = new java.util.Properties(properties34);
        properties58.clear();
        java.util.Set<java.lang.Object> objSet60 = properties58.keySet();
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(objEnumeration3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(objSet5);
        org.junit.Assert.assertNotNull(objEnumeration6);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNull(obj12);
        org.junit.Assert.assertNotNull(objEnumeration13);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertNotNull(objEntrySet16);
        org.junit.Assert.assertNull(obj20);
        org.junit.Assert.assertNotNull(strSet21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(objCollection23);
        org.junit.Assert.assertNull(obj27);
        org.junit.Assert.assertNotNull(objEnumeration28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNotNull(objSet30);
        org.junit.Assert.assertNull(obj31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(strSet33);
        org.junit.Assert.assertNull(obj36);
        org.junit.Assert.assertNotNull(objEnumeration37);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 0 + "'", int38 == 0);
        org.junit.Assert.assertNotNull(strSet40);
        org.junit.Assert.assertNotNull(strSet41);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertTrue("'" + long56 + "' != '" + 10000L + "'", long56 == 10000L);
        org.junit.Assert.assertNull(obj57);
        org.junit.Assert.assertNotNull(objSet60);
    }

    @Test
    public void test5195() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test5195");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration3 = properties0.elements();
        boolean boolean4 = properties0.isEmpty();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet5 = properties0.entrySet();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties7 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties7.setSerialJtaTransactions(false);
        atomikosProperties7.setThreadedTwoPhaseCommit(true);
        atomikosProperties7.setMaxTimeout((long) '#');
        boolean boolean14 = atomikosProperties7.isForceShutdownOnVmExit();
        java.lang.Object obj15 = properties0.put((java.lang.Object) (short) 1, (java.lang.Object) atomikosProperties7);
        atomikosProperties7.setForceShutdownOnVmExit(false);
        long long18 = atomikosProperties7.getDefaultJtaTimeout();
        atomikosProperties7.setThreadedTwoPhaseCommit(true);
        java.util.Properties properties21 = atomikosProperties7.asProperties();
        java.util.Properties properties22 = new java.util.Properties(properties21);
        java.util.Properties properties23 = new java.util.Properties();
        java.lang.Object obj25 = properties23.remove((java.lang.Object) 0.0d);
        java.util.Properties properties26 = new java.util.Properties();
        java.util.Collection<java.lang.Object> objCollection27 = properties26.values();
        java.util.Enumeration<java.lang.Object> objEnumeration28 = properties26.keys();
        java.util.Properties properties29 = new java.util.Properties();
        java.lang.Object obj31 = properties29.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration32 = properties29.elements();
        boolean boolean33 = properties29.isEmpty();
        java.util.Set<java.lang.Object> objSet34 = properties29.keySet();
        java.util.Enumeration<java.lang.Object> objEnumeration35 = properties29.keys();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet36 = properties29.entrySet();
        java.lang.Object obj37 = properties23.put((java.lang.Object) properties26, (java.lang.Object) properties29);
        java.util.Enumeration<java.lang.Object> objEnumeration38 = properties23.keys();
        java.util.Set<java.lang.String> strSet39 = properties23.stringPropertyNames();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties40 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties40.setSerialJtaTransactions(false);
        atomikosProperties40.setThreadedTwoPhaseCommit(true);
        atomikosProperties40.setThreadedTwoPhaseCommit(true);
        java.util.Properties properties47 = atomikosProperties40.asProperties();
        int int48 = atomikosProperties40.getMaxActives();
        atomikosProperties40.setService("hi!");
        long long51 = atomikosProperties40.getMaxTimeout();
        atomikosProperties40.setLogBaseName("{}");
        java.lang.String str54 = atomikosProperties40.getLogBaseName();
        java.util.Properties properties55 = new java.util.Properties();
        java.lang.Object obj57 = properties55.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration58 = properties55.elements();
        boolean boolean59 = properties55.isEmpty();
        java.util.Set<java.lang.Object> objSet60 = properties55.keySet();
        boolean boolean61 = properties55.isEmpty();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet62 = properties55.entrySet();
        java.util.Properties properties63 = new java.util.Properties();
        java.lang.Object obj65 = properties63.remove((java.lang.Object) 0.0d);
        boolean boolean66 = properties63.isEmpty();
        java.lang.Object obj69 = properties63.setProperty("", "hi!");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties70 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties70.setSerialJtaTransactions(false);
        boolean boolean73 = properties55.remove((java.lang.Object) properties63, (java.lang.Object) atomikosProperties70);
        java.util.Properties properties74 = new java.util.Properties(properties63);
        int int75 = properties74.size();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties77 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties77.setSerialJtaTransactions(false);
        boolean boolean80 = atomikosProperties77.isSerialJtaTransactions();
        java.lang.String str81 = atomikosProperties77.getService();
        boolean boolean82 = atomikosProperties77.isEnableLogging();
        java.lang.String str83 = atomikosProperties77.getTransactionManagerUniqueName();
        boolean boolean84 = properties74.remove((java.lang.Object) (byte) 1, (java.lang.Object) atomikosProperties77);
        atomikosProperties77.setThreadedTwoPhaseCommit(true);
        boolean boolean87 = properties21.replace((java.lang.Object) properties23, (java.lang.Object) atomikosProperties40, (java.lang.Object) true);
        java.io.Reader reader88 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties23.load(reader88);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(objEnumeration3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(objEntrySet5);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNull(obj15);
        org.junit.Assert.assertTrue("'" + long18 + "' != '" + 10000L + "'", long18 == 10000L);
        org.junit.Assert.assertNotNull(properties21);
        org.junit.Assert.assertNull(obj25);
        org.junit.Assert.assertNotNull(objCollection27);
        org.junit.Assert.assertNotNull(objEnumeration28);
        org.junit.Assert.assertNull(obj31);
        org.junit.Assert.assertNotNull(objEnumeration32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNotNull(objSet34);
        org.junit.Assert.assertNotNull(objEnumeration35);
        org.junit.Assert.assertNotNull(objEntrySet36);
        org.junit.Assert.assertNull(obj37);
        org.junit.Assert.assertNotNull(objEnumeration38);
        org.junit.Assert.assertNotNull(strSet39);
        org.junit.Assert.assertNotNull(properties47);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 50 + "'", int48 == 50);
        org.junit.Assert.assertTrue("'" + long51 + "' != '" + 300000L + "'", long51 == 300000L);
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "{}" + "'", str54, "{}");
        org.junit.Assert.assertNull(obj57);
        org.junit.Assert.assertNotNull(objEnumeration58);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertNotNull(objSet60);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertNotNull(objEntrySet62);
        org.junit.Assert.assertNull(obj65);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66 == true);
        org.junit.Assert.assertNull(obj69);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertTrue("'" + int75 + "' != '" + 0 + "'", int75 == 0);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", boolean80 == false);
        org.junit.Assert.assertNull(str81);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + true + "'", boolean82 == true);
        org.junit.Assert.assertNull(str83);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + false + "'", boolean84 == false);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + false + "'", boolean87 == false);
    }

    @Test
    public void test5196() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test5196");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setSerialJtaTransactions(false);
        atomikosProperties0.setThreadedTwoPhaseCommit(true);
        atomikosProperties0.setMaxTimeout((long) '#');
        long long7 = atomikosProperties0.getCheckpointInterval();
        java.lang.String str8 = atomikosProperties0.getTransactionManagerUniqueName();
        atomikosProperties0.setDefaultJtaTimeout((long) 0);
        java.util.Properties properties11 = atomikosProperties0.asProperties();
        java.util.Set<java.lang.String> strSet12 = properties11.stringPropertyNames();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties13 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties13.setSerialJtaTransactions(false);
        atomikosProperties13.setThreadedTwoPhaseCommit(true);
        atomikosProperties13.setMaxTimeout((long) '#');
        boolean boolean20 = atomikosProperties13.isEnableLogging();
        atomikosProperties13.setCheckpointInterval((long) 100);
        java.lang.String str23 = atomikosProperties13.getTransactionManagerUniqueName();
        atomikosProperties13.setEnableLogging(false);
        atomikosProperties13.setForceShutdownOnVmExit(true);
        atomikosProperties13.setSerialJtaTransactions(true);
        atomikosProperties13.setMaxActives(1);
        java.lang.String str32 = atomikosProperties13.getLogBaseName();
        atomikosProperties13.setTransactionManagerUniqueName("{}");
        java.lang.Object obj35 = properties11.get((java.lang.Object) "{}");
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + 500L + "'", long7 == 500L);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNotNull(properties11);
        org.junit.Assert.assertNotNull(strSet12);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNull(str23);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "tmlog" + "'", str32, "tmlog");
        org.junit.Assert.assertNull(obj35);
    }

    @Test
    public void test5197() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test5197");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration3 = properties0.elements();
        int int4 = properties0.size();
        java.util.Properties properties5 = new java.util.Properties();
        java.lang.Object obj7 = properties5.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration8 = properties5.elements();
        boolean boolean9 = properties5.isEmpty();
        java.util.Set<java.lang.Object> objSet10 = properties5.keySet();
        boolean boolean11 = properties0.containsKey((java.lang.Object) objSet10);
        java.util.Properties properties12 = new java.util.Properties();
        java.lang.Object obj14 = properties12.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration15 = properties12.elements();
        boolean boolean16 = properties12.isEmpty();
        java.util.Set<java.lang.Object> objSet17 = properties12.keySet();
        boolean boolean18 = properties12.isEmpty();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet19 = properties12.entrySet();
        java.util.Properties properties20 = new java.util.Properties();
        java.lang.Object obj22 = properties20.remove((java.lang.Object) 0.0d);
        boolean boolean23 = properties20.isEmpty();
        java.lang.Object obj26 = properties20.setProperty("", "hi!");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties27 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties27.setSerialJtaTransactions(false);
        boolean boolean30 = properties12.remove((java.lang.Object) properties20, (java.lang.Object) atomikosProperties27);
        java.util.Properties properties31 = new java.util.Properties(properties20);
        int int32 = properties31.size();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties34 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties34.setSerialJtaTransactions(false);
        boolean boolean37 = atomikosProperties34.isSerialJtaTransactions();
        java.lang.String str38 = atomikosProperties34.getService();
        boolean boolean39 = atomikosProperties34.isEnableLogging();
        java.lang.String str40 = atomikosProperties34.getTransactionManagerUniqueName();
        boolean boolean41 = properties31.remove((java.lang.Object) (byte) 1, (java.lang.Object) atomikosProperties34);
        atomikosProperties34.setEnableLogging(false);
        boolean boolean44 = atomikosProperties34.isThreadedTwoPhaseCommit();
        java.lang.Object obj45 = properties0.get((java.lang.Object) atomikosProperties34);
        atomikosProperties34.setCheckpointInterval(97L);
        atomikosProperties34.setLogBaseDir("{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=false, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.tm_unique_name=tmlog, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
        atomikosProperties34.setEnableLogging(false);
        atomikosProperties34.setTransactionManagerUniqueName("");
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(objEnumeration3);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNull(obj7);
        org.junit.Assert.assertNotNull(objEnumeration8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertNotNull(objSet10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNull(obj14);
        org.junit.Assert.assertNotNull(objEnumeration15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(objSet17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(objEntrySet19);
        org.junit.Assert.assertNull(obj22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNull(obj26);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 0 + "'", int32 == 0);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNull(str38);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNull(str40);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNull(obj45);
    }

    @Test
    public void test5198() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test5198");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration3 = properties0.elements();
        boolean boolean4 = properties0.isEmpty();
        java.util.Set<java.lang.Object> objSet5 = properties0.keySet();
        java.util.Enumeration<java.lang.Object> objEnumeration6 = properties0.keys();
        boolean boolean8 = properties0.equals((java.lang.Object) "");
        java.lang.String str9 = properties0.toString();
        boolean boolean10 = properties0.isEmpty();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties11 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties11.setSerialJtaTransactions(false);
        boolean boolean14 = atomikosProperties11.isSerialJtaTransactions();
        boolean boolean15 = atomikosProperties11.isEnableLogging();
        long long16 = atomikosProperties11.getMaxTimeout();
        atomikosProperties11.setLogBaseName("{=hi!}");
        java.lang.Object obj19 = properties0.get((java.lang.Object) atomikosProperties11);
        java.lang.String str20 = properties0.toString();
        properties0.clear();
        java.lang.Object obj24 = properties0.setProperty("{true=true}", "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=false, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.tm_unique_name=tmlog, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(objEnumeration3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(objSet5);
        org.junit.Assert.assertNotNull(objEnumeration6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "{}" + "'", str9, "{}");
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertTrue("'" + long16 + "' != '" + 300000L + "'", long16 == 300000L);
        org.junit.Assert.assertNull(obj19);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "{}" + "'", str20, "{}");
        org.junit.Assert.assertNull(obj24);
    }

    @Test
    public void test5199() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test5199");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet3 = properties0.stringPropertyNames();
        java.util.Properties properties4 = new java.util.Properties();
        java.lang.Object obj6 = properties4.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration7 = properties4.elements();
        int int8 = properties4.size();
        java.util.Properties properties9 = new java.util.Properties(properties4);
        boolean boolean10 = properties9.isEmpty();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties11 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties11.setSerialJtaTransactions(false);
        atomikosProperties11.setThreadedTwoPhaseCommit(true);
        atomikosProperties11.setMaxTimeout((long) '#');
        boolean boolean18 = atomikosProperties11.isEnableLogging();
        atomikosProperties11.setCheckpointInterval((long) (byte) -1);
        atomikosProperties11.setMaxActives((int) (byte) 100);
        atomikosProperties11.setForceShutdownOnVmExit(false);
        boolean boolean25 = atomikosProperties11.isThreadedTwoPhaseCommit();
        boolean boolean26 = atomikosProperties11.isForceShutdownOnVmExit();
        java.lang.Object obj27 = properties9.remove((java.lang.Object) boolean26);
        boolean boolean28 = properties0.containsValue((java.lang.Object) properties9);
        java.util.Properties properties29 = new java.util.Properties();
        boolean boolean31 = properties29.contains((java.lang.Object) 100.0d);
        java.util.Properties properties32 = new java.util.Properties();
        java.lang.Object obj34 = properties32.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration35 = properties32.elements();
        boolean boolean36 = properties32.isEmpty();
        java.util.Set<java.lang.Object> objSet37 = properties32.keySet();
        boolean boolean38 = properties32.isEmpty();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet39 = properties32.entrySet();
        java.util.Properties properties40 = new java.util.Properties();
        java.lang.Object obj42 = properties40.remove((java.lang.Object) 0.0d);
        boolean boolean43 = properties40.isEmpty();
        java.lang.Object obj46 = properties40.setProperty("", "hi!");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties47 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties47.setSerialJtaTransactions(false);
        boolean boolean50 = properties32.remove((java.lang.Object) properties40, (java.lang.Object) atomikosProperties47);
        boolean boolean51 = properties29.equals((java.lang.Object) properties32);
        java.util.Enumeration<java.lang.Object> objEnumeration52 = properties29.elements();
        java.lang.String str54 = properties29.getProperty("{tmlog=}");
        boolean boolean55 = properties0.contains((java.lang.Object) properties29);
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet56 = properties0.entrySet();
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(strSet3);
        org.junit.Assert.assertNull(obj6);
        org.junit.Assert.assertNotNull(objEnumeration7);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNull(obj27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNull(obj34);
        org.junit.Assert.assertNotNull(objEnumeration35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNotNull(objSet37);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertNotNull(objEntrySet39);
        org.junit.Assert.assertNull(obj42);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNull(obj46);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertNotNull(objEnumeration52);
        org.junit.Assert.assertNull(str54);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertNotNull(objEntrySet56);
    }

    @Test
    public void test5200() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test5200");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration3 = properties0.elements();
        boolean boolean4 = properties0.isEmpty();
        java.util.Set<java.lang.Object> objSet5 = properties0.keySet();
        java.util.Enumeration<java.lang.Object> objEnumeration6 = properties0.keys();
        java.util.Enumeration<java.lang.Object> objEnumeration7 = properties0.elements();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties8 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties8.setSerialJtaTransactions(false);
        boolean boolean11 = atomikosProperties8.isThreadedTwoPhaseCommit();
        atomikosProperties8.setTransactionManagerUniqueName("hi!");
        java.util.Properties properties14 = new java.util.Properties();
        java.lang.Object obj16 = properties14.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet17 = properties14.stringPropertyNames();
        java.util.Properties properties18 = new java.util.Properties();
        java.util.Properties properties19 = new java.util.Properties();
        java.lang.Object obj21 = properties19.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet22 = properties19.stringPropertyNames();
        boolean boolean23 = properties18.containsValue((java.lang.Object) properties19);
        java.util.Collection<java.lang.Object> objCollection24 = properties18.values();
        java.util.Enumeration<?> wildcardEnumeration25 = properties18.propertyNames();
        java.lang.Object obj27 = properties14.put((java.lang.Object) wildcardEnumeration25, (java.lang.Object) 10.0d);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties28 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties28.setSerialJtaTransactions(false);
        atomikosProperties28.setThreadedTwoPhaseCommit(true);
        atomikosProperties28.setMaxTimeout((long) '#');
        boolean boolean35 = atomikosProperties28.isForceShutdownOnVmExit();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties36 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties36.setSerialJtaTransactions(false);
        atomikosProperties36.setThreadedTwoPhaseCommit(true);
        atomikosProperties36.setThreadedTwoPhaseCommit(true);
        java.lang.Object obj43 = properties14.getOrDefault((java.lang.Object) boolean35, (java.lang.Object) atomikosProperties36);
        boolean boolean44 = properties0.remove((java.lang.Object) atomikosProperties8, obj43);
        atomikosProperties8.setLogBaseName("{true=class org.springframework.boot.jta.atomikos.AtomikosProperties}");
        java.util.Properties properties47 = atomikosProperties8.asProperties();
        atomikosProperties8.setSerialJtaTransactions(true);
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(objEnumeration3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(objSet5);
        org.junit.Assert.assertNotNull(objEnumeration6);
        org.junit.Assert.assertNotNull(objEnumeration7);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNull(obj16);
        org.junit.Assert.assertNotNull(strSet17);
        org.junit.Assert.assertNull(obj21);
        org.junit.Assert.assertNotNull(strSet22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(objCollection24);
        org.junit.Assert.assertNotNull(wildcardEnumeration25);
        org.junit.Assert.assertNull(obj27);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(obj43);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(properties47);
    }

    @Test
    public void test5201() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test5201");
        java.util.Properties properties0 = new java.util.Properties();
        java.util.Properties properties1 = new java.util.Properties();
        java.lang.Object obj3 = properties1.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet4 = properties1.stringPropertyNames();
        boolean boolean5 = properties0.containsValue((java.lang.Object) properties1);
        java.util.Collection<java.lang.Object> objCollection6 = properties0.values();
        java.lang.Object obj7 = properties0.clone();
        java.util.Properties properties8 = new java.util.Properties();
        java.lang.Object obj10 = properties8.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration11 = properties8.elements();
        int int12 = properties8.size();
        java.util.Properties properties13 = new java.util.Properties();
        java.lang.Object obj15 = properties13.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration16 = properties13.elements();
        boolean boolean17 = properties13.isEmpty();
        java.util.Set<java.lang.Object> objSet18 = properties13.keySet();
        boolean boolean19 = properties8.containsKey((java.lang.Object) objSet18);
        java.util.Enumeration<java.lang.Object> objEnumeration20 = properties8.keys();
        java.util.Properties properties21 = new java.util.Properties();
        java.lang.Object obj23 = properties21.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration24 = properties21.elements();
        boolean boolean25 = properties21.isEmpty();
        java.util.Set<java.lang.Object> objSet26 = properties21.keySet();
        java.util.Enumeration<java.lang.Object> objEnumeration27 = properties21.keys();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet28 = properties21.entrySet();
        boolean boolean30 = properties8.remove((java.lang.Object) properties21, (java.lang.Object) 1.0f);
        java.lang.Object obj31 = properties21.clone();
        java.util.Properties properties32 = new java.util.Properties();
        java.lang.Object obj34 = properties32.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration35 = properties32.elements();
        boolean boolean36 = properties32.isEmpty();
        java.lang.Object obj39 = properties32.setProperty("tmlog", "");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties40 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties40.setSerialJtaTransactions(false);
        boolean boolean43 = atomikosProperties40.isSerialJtaTransactions();
        atomikosProperties40.setTransactionManagerUniqueName("hi!");
        atomikosProperties40.setForceShutdownOnVmExit(false);
        atomikosProperties40.setDefaultJtaTimeout((long) (byte) 10);
        java.lang.String str50 = atomikosProperties40.getTransactionManagerUniqueName();
        java.util.Properties properties51 = new java.util.Properties();
        java.util.Properties properties52 = new java.util.Properties();
        java.lang.Object obj54 = properties52.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet55 = properties52.stringPropertyNames();
        boolean boolean56 = properties51.containsValue((java.lang.Object) properties52);
        java.util.Collection<java.lang.Object> objCollection57 = properties51.values();
        java.util.Properties properties59 = new java.util.Properties();
        java.lang.Object obj61 = properties59.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration62 = properties59.elements();
        boolean boolean63 = properties59.isEmpty();
        java.util.Set<java.lang.Object> objSet64 = properties59.keySet();
        java.lang.Object obj65 = properties51.putIfAbsent((java.lang.Object) "hi!", (java.lang.Object) objSet64);
        java.util.Set<java.lang.Object> objSet66 = properties51.keySet();
        java.util.Set<java.lang.Object> objSet67 = properties51.keySet();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet68 = properties51.entrySet();
        java.util.Set<java.lang.Object> objSet69 = properties51.keySet();
        java.lang.Object obj70 = properties32.replace((java.lang.Object) atomikosProperties40, (java.lang.Object) properties51);
        boolean boolean71 = properties21.containsKey((java.lang.Object) properties51);
        int int72 = properties21.size();
        java.lang.Object obj73 = properties0.remove((java.lang.Object) int72);
        java.lang.Object obj76 = properties0.setProperty("{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=false, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=true, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}", "{{}={}}");
        java.util.Properties properties77 = new java.util.Properties(properties0);
        java.lang.String str78 = properties77.toString();
        org.junit.Assert.assertNull(obj3);
        org.junit.Assert.assertNotNull(strSet4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(objCollection6);
        org.junit.Assert.assertNotNull(obj7);
        org.junit.Assert.assertEquals(obj7.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj7), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj7), "{}");
        org.junit.Assert.assertNull(obj10);
        org.junit.Assert.assertNotNull(objEnumeration11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertNull(obj15);
        org.junit.Assert.assertNotNull(objEnumeration16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(objSet18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(objEnumeration20);
        org.junit.Assert.assertNull(obj23);
        org.junit.Assert.assertNotNull(objEnumeration24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(objSet26);
        org.junit.Assert.assertNotNull(objEnumeration27);
        org.junit.Assert.assertNotNull(objEntrySet28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(obj31);
        org.junit.Assert.assertEquals(obj31.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj31), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj31), "{}");
        org.junit.Assert.assertNull(obj34);
        org.junit.Assert.assertNotNull(objEnumeration35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNull(obj39);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "hi!" + "'", str50, "hi!");
        org.junit.Assert.assertNull(obj54);
        org.junit.Assert.assertNotNull(strSet55);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertNotNull(objCollection57);
        org.junit.Assert.assertNull(obj61);
        org.junit.Assert.assertNotNull(objEnumeration62);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertNotNull(objSet64);
        org.junit.Assert.assertNull(obj65);
        org.junit.Assert.assertNotNull(objSet66);
        org.junit.Assert.assertNotNull(objSet67);
        org.junit.Assert.assertNotNull(objEntrySet68);
        org.junit.Assert.assertNotNull(objSet69);
        org.junit.Assert.assertNull(obj70);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertTrue("'" + int72 + "' != '" + 0 + "'", int72 == 0);
        org.junit.Assert.assertNull(obj73);
        org.junit.Assert.assertNull(obj76);
        org.junit.Assert.assertEquals("'" + str78 + "' != '" + "{}" + "'", str78, "{}");
    }

    @Test
    public void test5202() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test5202");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setSerialJtaTransactions(false);
        boolean boolean3 = atomikosProperties0.isSerialJtaTransactions();
        atomikosProperties0.setTransactionManagerUniqueName("hi!");
        java.lang.String str6 = atomikosProperties0.getLogBaseName();
        java.lang.String str7 = atomikosProperties0.getLogBaseName();
        atomikosProperties0.setService("{{}={}}");
        java.util.Properties properties10 = atomikosProperties0.asProperties();
        long long11 = atomikosProperties0.getCheckpointInterval();
        atomikosProperties0.setThreadedTwoPhaseCommit(false);
        atomikosProperties0.setService("{true=class org.springframework.boot.jta.atomikos.AtomikosProperties}");
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "tmlog" + "'", str6, "tmlog");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "tmlog" + "'", str7, "tmlog");
        org.junit.Assert.assertNotNull(properties10);
        org.junit.Assert.assertTrue("'" + long11 + "' != '" + 500L + "'", long11 == 500L);
    }

    @Test
    public void test5203() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test5203");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        boolean boolean4 = properties0.containsValue((java.lang.Object) "hi!");
        java.lang.String str6 = properties0.getProperty("hi!");
        java.util.Enumeration<?> wildcardEnumeration7 = properties0.propertyNames();
        java.lang.String str9 = properties0.getProperty("{{}={}}");
        java.lang.String str10 = properties0.toString();
        java.util.Properties properties11 = new java.util.Properties();
        boolean boolean13 = properties11.contains((java.lang.Object) 100.0d);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties14 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties14.setSerialJtaTransactions(false);
        atomikosProperties14.setThreadedTwoPhaseCommit(true);
        atomikosProperties14.setSerialJtaTransactions(false);
        java.lang.String str21 = atomikosProperties14.getService();
        boolean boolean22 = properties11.containsKey((java.lang.Object) atomikosProperties14);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties23 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties23.setSerialJtaTransactions(false);
        atomikosProperties23.setThreadedTwoPhaseCommit(true);
        atomikosProperties23.setMaxTimeout((long) '#');
        boolean boolean30 = atomikosProperties23.isEnableLogging();
        atomikosProperties23.setCheckpointInterval((long) 100);
        atomikosProperties23.setForceShutdownOnVmExit(false);
        boolean boolean35 = properties11.containsValue((java.lang.Object) atomikosProperties23);
        atomikosProperties23.setService("{=hi!}");
        java.util.Properties properties38 = atomikosProperties23.asProperties();
        java.lang.Object obj39 = properties0.get((java.lang.Object) atomikosProperties23);
        java.util.Set<java.lang.Object> objSet40 = properties0.keySet();
        boolean boolean41 = properties0.isEmpty();
        java.io.OutputStream outputStream42 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties0.storeToXML(outputStream42, "{{{}={}}={}}");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertNotNull(wildcardEnumeration7);
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "{}" + "'", str10, "{}");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNull(str21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(properties38);
        org.junit.Assert.assertNull(obj39);
        org.junit.Assert.assertNotNull(objSet40);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
    }

    @Test
    public void test5204() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test5204");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration3 = properties0.elements();
        boolean boolean4 = properties0.isEmpty();
        java.util.Set<java.lang.Object> objSet5 = properties0.keySet();
        java.util.Enumeration<java.lang.Object> objEnumeration6 = properties0.keys();
        java.lang.String str8 = properties0.getProperty("hi!");
        java.lang.String str10 = properties0.getProperty("");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties11 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties11.setSerialJtaTransactions(false);
        atomikosProperties11.setThreadedTwoPhaseCommit(true);
        atomikosProperties11.setEnableLogging(false);
        boolean boolean18 = properties0.containsKey((java.lang.Object) atomikosProperties11);
        atomikosProperties11.setSerialJtaTransactions(true);
        java.lang.String str21 = atomikosProperties11.getTransactionManagerUniqueName();
        long long22 = atomikosProperties11.getCheckpointInterval();
        boolean boolean23 = atomikosProperties11.isForceShutdownOnVmExit();
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(objEnumeration3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(objSet5);
        org.junit.Assert.assertNotNull(objEnumeration6);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNull(str21);
        org.junit.Assert.assertTrue("'" + long22 + "' != '" + 500L + "'", long22 == 500L);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
    }

    @Test
    public void test5205() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test5205");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration3 = properties0.elements();
        boolean boolean4 = properties0.isEmpty();
        java.util.Set<java.lang.Object> objSet5 = properties0.keySet();
        java.util.Enumeration<java.lang.Object> objEnumeration6 = properties0.keys();
        java.lang.String str8 = properties0.getProperty("hi!");
        java.lang.String str10 = properties0.getProperty("");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties11 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties11.setSerialJtaTransactions(false);
        atomikosProperties11.setThreadedTwoPhaseCommit(true);
        atomikosProperties11.setEnableLogging(false);
        boolean boolean18 = properties0.containsKey((java.lang.Object) atomikosProperties11);
        int int19 = properties0.size();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties20 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties20.setSerialJtaTransactions(false);
        atomikosProperties20.setThreadedTwoPhaseCommit(true);
        atomikosProperties20.setMaxTimeout((long) '#');
        boolean boolean27 = atomikosProperties20.isForceShutdownOnVmExit();
        long long28 = atomikosProperties20.getDefaultJtaTimeout();
        boolean boolean29 = atomikosProperties20.isSerialJtaTransactions();
        java.lang.String str30 = atomikosProperties20.getService();
        java.lang.Object obj31 = properties0.get((java.lang.Object) atomikosProperties20);
        java.lang.String str32 = atomikosProperties20.getLogBaseName();
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(objEnumeration3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(objSet5);
        org.junit.Assert.assertNotNull(objEnumeration6);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 0 + "'", int19 == 0);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertTrue("'" + long28 + "' != '" + 10000L + "'", long28 == 10000L);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNull(str30);
        org.junit.Assert.assertNull(obj31);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "tmlog" + "'", str32, "tmlog");
    }

    @Test
    public void test5206() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test5206");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setSerialJtaTransactions(false);
        atomikosProperties0.setThreadedTwoPhaseCommit(true);
        atomikosProperties0.setThreadedTwoPhaseCommit(true);
        long long7 = atomikosProperties0.getMaxTimeout();
        atomikosProperties0.setEnableLogging(false);
        boolean boolean10 = atomikosProperties0.isForceShutdownOnVmExit();
        boolean boolean11 = atomikosProperties0.isSerialJtaTransactions();
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + 300000L + "'", long7 == 300000L);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
    }

    @Test
    public void test5207() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test5207");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        java.util.Properties properties3 = new java.util.Properties();
        java.util.Collection<java.lang.Object> objCollection4 = properties3.values();
        java.util.Enumeration<java.lang.Object> objEnumeration5 = properties3.keys();
        java.util.Properties properties6 = new java.util.Properties();
        java.lang.Object obj8 = properties6.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration9 = properties6.elements();
        boolean boolean10 = properties6.isEmpty();
        java.util.Set<java.lang.Object> objSet11 = properties6.keySet();
        java.util.Enumeration<java.lang.Object> objEnumeration12 = properties6.keys();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet13 = properties6.entrySet();
        java.lang.Object obj14 = properties0.put((java.lang.Object) properties3, (java.lang.Object) properties6);
        java.lang.String str16 = properties3.getProperty("{=hi!}");
        java.io.OutputStream outputStream17 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties3.storeToXML(outputStream17, "{}", "{tmlog=}");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(objCollection4);
        org.junit.Assert.assertNotNull(objEnumeration5);
        org.junit.Assert.assertNull(obj8);
        org.junit.Assert.assertNotNull(objEnumeration9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(objSet11);
        org.junit.Assert.assertNotNull(objEnumeration12);
        org.junit.Assert.assertNotNull(objEntrySet13);
        org.junit.Assert.assertNull(obj14);
        org.junit.Assert.assertNull(str16);
    }

    @Test
    public void test5208() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test5208");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration3 = properties0.elements();
        java.util.Properties properties5 = new java.util.Properties();
        java.lang.Object obj7 = properties5.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration8 = properties5.elements();
        boolean boolean9 = properties5.isEmpty();
        java.util.Set<java.lang.Object> objSet10 = properties5.keySet();
        boolean boolean11 = properties5.isEmpty();
        java.lang.Object obj12 = properties0.getOrDefault((java.lang.Object) true, (java.lang.Object) boolean11);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties13 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties13.setSerialJtaTransactions(false);
        atomikosProperties13.setThreadedTwoPhaseCommit(true);
        atomikosProperties13.setThreadedTwoPhaseCommit(true);
        java.util.Properties properties20 = atomikosProperties13.asProperties();
        int int21 = atomikosProperties13.getMaxActives();
        atomikosProperties13.setService("hi!");
        long long24 = atomikosProperties13.getMaxTimeout();
        atomikosProperties13.setTransactionManagerUniqueName("hi!");
        atomikosProperties13.setForceShutdownOnVmExit(false);
        java.lang.String str29 = atomikosProperties13.getService();
        int int30 = atomikosProperties13.getMaxActives();
        java.lang.String str31 = atomikosProperties13.getLogBaseDir();
        boolean boolean32 = properties0.equals((java.lang.Object) atomikosProperties13);
        java.util.Collection<java.lang.Object> objCollection33 = properties0.values();
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(objEnumeration3);
        org.junit.Assert.assertNull(obj7);
        org.junit.Assert.assertNotNull(objEnumeration8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertNotNull(objSet10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertEquals("'" + obj12 + "' != '" + true + "'", obj12, true);
        org.junit.Assert.assertNotNull(properties20);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 50 + "'", int21 == 50);
        org.junit.Assert.assertTrue("'" + long24 + "' != '" + 300000L + "'", long24 == 300000L);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "hi!" + "'", str29, "hi!");
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 50 + "'", int30 == 50);
        org.junit.Assert.assertNull(str31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(objCollection33);
    }

    @Test
    public void test5209() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test5209");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setSerialJtaTransactions(false);
        atomikosProperties0.setThreadedTwoPhaseCommit(true);
        atomikosProperties0.setMaxTimeout((long) '#');
        long long7 = atomikosProperties0.getCheckpointInterval();
        java.lang.String str8 = atomikosProperties0.getTransactionManagerUniqueName();
        atomikosProperties0.setTransactionManagerUniqueName("{=hi!}");
        atomikosProperties0.setCheckpointInterval((long) (-1));
        atomikosProperties0.setForceShutdownOnVmExit(false);
        java.util.Properties properties15 = atomikosProperties0.asProperties();
        atomikosProperties0.setMaxActives((int) (short) 1);
        atomikosProperties0.setForceShutdownOnVmExit(true);
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + 500L + "'", long7 == 500L);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNotNull(properties15);
    }

    @Test
    public void test5210() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test5210");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setSerialJtaTransactions(false);
        atomikosProperties0.setThreadedTwoPhaseCommit(true);
        atomikosProperties0.setMaxTimeout((long) '#');
        long long7 = atomikosProperties0.getCheckpointInterval();
        java.lang.String str8 = atomikosProperties0.getTransactionManagerUniqueName();
        atomikosProperties0.setDefaultJtaTimeout((long) 0);
        java.util.Properties properties11 = atomikosProperties0.asProperties();
        java.util.Properties properties12 = new java.util.Properties();
        java.lang.Object obj14 = properties12.remove((java.lang.Object) 0.0d);
        java.util.Properties properties15 = new java.util.Properties();
        java.util.Collection<java.lang.Object> objCollection16 = properties15.values();
        java.util.Enumeration<java.lang.Object> objEnumeration17 = properties15.keys();
        java.util.Properties properties18 = new java.util.Properties();
        java.lang.Object obj20 = properties18.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration21 = properties18.elements();
        boolean boolean22 = properties18.isEmpty();
        java.util.Set<java.lang.Object> objSet23 = properties18.keySet();
        java.util.Enumeration<java.lang.Object> objEnumeration24 = properties18.keys();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet25 = properties18.entrySet();
        java.lang.Object obj26 = properties12.put((java.lang.Object) properties15, (java.lang.Object) properties18);
        java.lang.Object obj27 = properties15.clone();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties28 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties28.setSerialJtaTransactions(false);
        atomikosProperties28.setThreadedTwoPhaseCommit(true);
        atomikosProperties28.setMaxTimeout((long) '#');
        boolean boolean35 = atomikosProperties28.isEnableLogging();
        atomikosProperties28.setCheckpointInterval((long) 100);
        atomikosProperties28.setSerialJtaTransactions(true);
        boolean boolean40 = properties15.equals((java.lang.Object) atomikosProperties28);
        java.util.Properties properties41 = new java.util.Properties();
        java.lang.Object obj43 = properties41.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration44 = properties41.elements();
        boolean boolean45 = properties41.isEmpty();
        java.util.Enumeration<java.lang.Object> objEnumeration46 = properties41.elements();
        boolean boolean47 = properties15.containsKey((java.lang.Object) properties41);
        java.util.Properties properties48 = new java.util.Properties();
        java.lang.Object obj50 = properties48.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration51 = properties48.elements();
        boolean boolean52 = properties48.isEmpty();
        java.util.Set<java.lang.Object> objSet53 = properties48.keySet();
        boolean boolean54 = properties48.isEmpty();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet55 = properties48.entrySet();
        java.util.Properties properties56 = new java.util.Properties();
        java.lang.Object obj58 = properties56.remove((java.lang.Object) 0.0d);
        boolean boolean59 = properties56.isEmpty();
        java.lang.Object obj62 = properties56.setProperty("", "hi!");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties63 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties63.setSerialJtaTransactions(false);
        boolean boolean66 = properties48.remove((java.lang.Object) properties56, (java.lang.Object) atomikosProperties63);
        java.util.Properties properties67 = new java.util.Properties(properties56);
        java.util.Enumeration<java.lang.Object> objEnumeration68 = properties67.elements();
        java.lang.Object obj69 = properties67.clone();
        java.lang.Object obj70 = properties11.getOrDefault((java.lang.Object) properties41, (java.lang.Object) properties67);
        java.util.Set<java.lang.String> strSet71 = properties41.stringPropertyNames();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties72 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties72.setSerialJtaTransactions(false);
        atomikosProperties72.setThreadedTwoPhaseCommit(true);
        atomikosProperties72.setThreadedTwoPhaseCommit(true);
        java.util.Properties properties79 = atomikosProperties72.asProperties();
        int int80 = atomikosProperties72.getMaxActives();
        atomikosProperties72.setService("hi!");
        long long83 = atomikosProperties72.getMaxTimeout();
        atomikosProperties72.setLogBaseName("{}");
        atomikosProperties72.setThreadedTwoPhaseCommit(false);
        java.lang.String str88 = atomikosProperties72.getService();
        java.lang.Class<?> wildcardClass89 = atomikosProperties72.getClass();
        boolean boolean90 = properties41.containsValue((java.lang.Object) wildcardClass89);
        java.io.InputStream inputStream91 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties41.load(inputStream91);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + 500L + "'", long7 == 500L);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNotNull(properties11);
        org.junit.Assert.assertNull(obj14);
        org.junit.Assert.assertNotNull(objCollection16);
        org.junit.Assert.assertNotNull(objEnumeration17);
        org.junit.Assert.assertNull(obj20);
        org.junit.Assert.assertNotNull(objEnumeration21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNotNull(objSet23);
        org.junit.Assert.assertNotNull(objEnumeration24);
        org.junit.Assert.assertNotNull(objEntrySet25);
        org.junit.Assert.assertNull(obj26);
        org.junit.Assert.assertNotNull(obj27);
        org.junit.Assert.assertEquals(obj27.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj27), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj27), "{}");
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNull(obj43);
        org.junit.Assert.assertNotNull(objEnumeration44);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertNotNull(objEnumeration46);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNull(obj50);
        org.junit.Assert.assertNotNull(objEnumeration51);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertNotNull(objSet53);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertNotNull(objEntrySet55);
        org.junit.Assert.assertNull(obj58);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertNull(obj62);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertNotNull(objEnumeration68);
        org.junit.Assert.assertNotNull(obj69);
        org.junit.Assert.assertEquals(obj69.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj69), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj69), "{}");
        org.junit.Assert.assertNotNull(obj70);
        org.junit.Assert.assertEquals(obj70.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj70), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj70), "{}");
        org.junit.Assert.assertNotNull(strSet71);
        org.junit.Assert.assertNotNull(properties79);
        org.junit.Assert.assertTrue("'" + int80 + "' != '" + 50 + "'", int80 == 50);
        org.junit.Assert.assertTrue("'" + long83 + "' != '" + 300000L + "'", long83 == 300000L);
        org.junit.Assert.assertEquals("'" + str88 + "' != '" + "hi!" + "'", str88, "hi!");
        org.junit.Assert.assertNotNull(wildcardClass89);
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + false + "'", boolean90 == false);
    }

    @Test
    public void test5211() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test5211");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setSerialJtaTransactions(false);
        boolean boolean3 = atomikosProperties0.isSerialJtaTransactions();
        java.lang.String str4 = atomikosProperties0.getService();
        boolean boolean5 = atomikosProperties0.isEnableLogging();
        atomikosProperties0.setCheckpointInterval((long) (byte) 100);
        java.lang.String str8 = atomikosProperties0.getLogBaseName();
        atomikosProperties0.setTransactionManagerUniqueName("tmlog");
        atomikosProperties0.setSerialJtaTransactions(false);
        boolean boolean13 = atomikosProperties0.isForceShutdownOnVmExit();
        java.util.Properties properties14 = atomikosProperties0.asProperties();
        atomikosProperties0.setLogBaseName("{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=false, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.service={{}={}}, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.tm_unique_name=hi!, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
        long long17 = atomikosProperties0.getCheckpointInterval();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "tmlog" + "'", str8, "tmlog");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(properties14);
        org.junit.Assert.assertTrue("'" + long17 + "' != '" + 100L + "'", long17 == 100L);
    }

    @Test
    public void test5212() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test5212");
        java.util.Properties properties0 = new java.util.Properties();
        java.util.Collection<java.lang.Object> objCollection1 = properties0.values();
        java.util.Properties properties2 = new java.util.Properties();
        java.lang.Object obj4 = properties2.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet5 = properties2.stringPropertyNames();
        java.util.Properties properties6 = new java.util.Properties();
        java.util.Properties properties7 = new java.util.Properties();
        java.lang.Object obj9 = properties7.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet10 = properties7.stringPropertyNames();
        boolean boolean11 = properties6.containsValue((java.lang.Object) properties7);
        java.util.Collection<java.lang.Object> objCollection12 = properties6.values();
        java.util.Enumeration<?> wildcardEnumeration13 = properties6.propertyNames();
        java.lang.Object obj15 = properties2.put((java.lang.Object) wildcardEnumeration13, (java.lang.Object) 10.0d);
        boolean boolean16 = properties0.equals((java.lang.Object) 10.0d);
        java.lang.String str18 = properties0.getProperty("{}");
        java.lang.Object obj21 = properties0.setProperty("{{}={}}", "hi!");
        java.util.Properties properties22 = new java.util.Properties();
        java.lang.Object obj24 = properties22.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration25 = properties22.elements();
        int int26 = properties22.size();
        java.util.Properties properties27 = new java.util.Properties(properties22);
        boolean boolean28 = properties27.isEmpty();
        java.util.Properties properties29 = new java.util.Properties();
        java.lang.Object obj31 = properties29.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration32 = properties29.elements();
        int int33 = properties29.size();
        java.util.Properties properties34 = new java.util.Properties();
        java.lang.Object obj36 = properties34.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration37 = properties34.elements();
        boolean boolean38 = properties34.isEmpty();
        java.util.Set<java.lang.Object> objSet39 = properties34.keySet();
        boolean boolean40 = properties29.containsKey((java.lang.Object) objSet39);
        java.util.Enumeration<java.lang.Object> objEnumeration41 = properties29.keys();
        java.util.Properties properties42 = new java.util.Properties();
        java.lang.Object obj44 = properties42.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration45 = properties42.elements();
        boolean boolean46 = properties42.isEmpty();
        java.util.Set<java.lang.Object> objSet47 = properties42.keySet();
        java.util.Enumeration<java.lang.Object> objEnumeration48 = properties42.keys();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet49 = properties42.entrySet();
        boolean boolean51 = properties29.remove((java.lang.Object) properties42, (java.lang.Object) 1.0f);
        boolean boolean52 = properties27.contains((java.lang.Object) properties42);
        java.util.Properties properties53 = new java.util.Properties(properties42);
        java.util.Properties properties54 = new java.util.Properties(properties53);
        boolean boolean55 = properties0.contains((java.lang.Object) properties54);
        java.util.Collection<java.lang.Object> objCollection56 = properties54.values();
        java.lang.Object obj59 = properties54.setProperty("{=hi!}", "hi!");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties60 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties60.setSerialJtaTransactions(false);
        atomikosProperties60.setThreadedTwoPhaseCommit(true);
        atomikosProperties60.setMaxTimeout((long) '#');
        java.lang.String str67 = atomikosProperties60.getService();
        atomikosProperties60.setDefaultJtaTimeout((long) '#');
        atomikosProperties60.setCheckpointInterval((long) (byte) -1);
        atomikosProperties60.setLogBaseName("tmlog");
        atomikosProperties60.setCheckpointInterval(100L);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties76 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties76.setSerialJtaTransactions(false);
        boolean boolean79 = atomikosProperties76.isThreadedTwoPhaseCommit();
        atomikosProperties76.setThreadedTwoPhaseCommit(false);
        java.lang.Object obj82 = properties54.put((java.lang.Object) atomikosProperties60, (java.lang.Object) false);
        long long83 = atomikosProperties60.getMaxTimeout();
        org.junit.Assert.assertNotNull(objCollection1);
        org.junit.Assert.assertNull(obj4);
        org.junit.Assert.assertNotNull(strSet5);
        org.junit.Assert.assertNull(obj9);
        org.junit.Assert.assertNotNull(strSet10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(objCollection12);
        org.junit.Assert.assertNotNull(wildcardEnumeration13);
        org.junit.Assert.assertNull(obj15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNull(str18);
        org.junit.Assert.assertNull(obj21);
        org.junit.Assert.assertNull(obj24);
        org.junit.Assert.assertNotNull(objEnumeration25);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 0 + "'", int26 == 0);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNull(obj31);
        org.junit.Assert.assertNotNull(objEnumeration32);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 0 + "'", int33 == 0);
        org.junit.Assert.assertNull(obj36);
        org.junit.Assert.assertNotNull(objEnumeration37);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertNotNull(objSet39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(objEnumeration41);
        org.junit.Assert.assertNull(obj44);
        org.junit.Assert.assertNotNull(objEnumeration45);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertNotNull(objSet47);
        org.junit.Assert.assertNotNull(objEnumeration48);
        org.junit.Assert.assertNotNull(objEntrySet49);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertNotNull(objCollection56);
        org.junit.Assert.assertNull(obj59);
        org.junit.Assert.assertNull(str67);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + false + "'", boolean79 == false);
        org.junit.Assert.assertNull(obj82);
        org.junit.Assert.assertTrue("'" + long83 + "' != '" + 35L + "'", long83 == 35L);
    }

    @Test
    public void test5213() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test5213");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration3 = properties0.elements();
        int int4 = properties0.size();
        java.util.Properties properties5 = new java.util.Properties();
        java.lang.Object obj7 = properties5.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration8 = properties5.elements();
        boolean boolean9 = properties5.isEmpty();
        java.util.Set<java.lang.Object> objSet10 = properties5.keySet();
        boolean boolean11 = properties0.containsKey((java.lang.Object) objSet10);
        java.util.Enumeration<java.lang.Object> objEnumeration12 = properties0.keys();
        java.util.Properties properties13 = new java.util.Properties();
        java.lang.Object obj15 = properties13.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration16 = properties13.elements();
        boolean boolean17 = properties13.isEmpty();
        java.util.Set<java.lang.Object> objSet18 = properties13.keySet();
        java.util.Enumeration<java.lang.Object> objEnumeration19 = properties13.keys();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet20 = properties13.entrySet();
        boolean boolean22 = properties0.remove((java.lang.Object) properties13, (java.lang.Object) 1.0f);
        java.lang.Object obj25 = properties13.setProperty("{true=class org.springframework.boot.jta.atomikos.AtomikosProperties}", "hi!");
        java.util.Properties properties26 = new java.util.Properties();
        java.lang.Object obj28 = properties26.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration29 = properties26.elements();
        boolean boolean30 = properties26.isEmpty();
        java.util.Set<java.lang.Object> objSet31 = properties26.keySet();
        boolean boolean32 = properties26.isEmpty();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet33 = properties26.entrySet();
        java.util.Properties properties34 = new java.util.Properties();
        java.lang.Object obj36 = properties34.remove((java.lang.Object) 0.0d);
        boolean boolean37 = properties34.isEmpty();
        java.lang.Object obj40 = properties34.setProperty("", "hi!");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties41 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties41.setSerialJtaTransactions(false);
        boolean boolean44 = properties26.remove((java.lang.Object) properties34, (java.lang.Object) atomikosProperties41);
        java.util.Properties properties45 = new java.util.Properties(properties34);
        int int46 = properties45.size();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties48 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties48.setSerialJtaTransactions(false);
        boolean boolean51 = atomikosProperties48.isSerialJtaTransactions();
        java.lang.String str52 = atomikosProperties48.getService();
        boolean boolean53 = atomikosProperties48.isEnableLogging();
        java.lang.String str54 = atomikosProperties48.getTransactionManagerUniqueName();
        boolean boolean55 = properties45.remove((java.lang.Object) (byte) 1, (java.lang.Object) atomikosProperties48);
        java.util.Properties properties56 = new java.util.Properties();
        java.lang.Object obj58 = properties56.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration59 = properties56.elements();
        boolean boolean60 = properties56.isEmpty();
        java.util.Enumeration<java.lang.Object> objEnumeration61 = properties56.elements();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet62 = properties56.entrySet();
        java.lang.Object obj63 = properties45.remove((java.lang.Object) objEntrySet62);
        boolean boolean64 = properties45.isEmpty();
        java.lang.String str65 = properties45.toString();
        boolean boolean66 = properties13.equals((java.lang.Object) properties45);
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(objEnumeration3);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNull(obj7);
        org.junit.Assert.assertNotNull(objEnumeration8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertNotNull(objSet10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(objEnumeration12);
        org.junit.Assert.assertNull(obj15);
        org.junit.Assert.assertNotNull(objEnumeration16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(objSet18);
        org.junit.Assert.assertNotNull(objEnumeration19);
        org.junit.Assert.assertNotNull(objEntrySet20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNull(obj25);
        org.junit.Assert.assertNull(obj28);
        org.junit.Assert.assertNotNull(objEnumeration29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNotNull(objSet31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertNotNull(objEntrySet33);
        org.junit.Assert.assertNull(obj36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertNull(obj40);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 0 + "'", int46 == 0);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertNull(str52);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertNull(str54);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertNull(obj58);
        org.junit.Assert.assertNotNull(objEnumeration59);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertNotNull(objEnumeration61);
        org.junit.Assert.assertNotNull(objEntrySet62);
        org.junit.Assert.assertNull(obj63);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64 == true);
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "{}" + "'", str65, "{}");
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
    }

    @Test
    public void test5214() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test5214");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration3 = properties0.elements();
        boolean boolean4 = properties0.isEmpty();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet5 = properties0.entrySet();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties7 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties7.setSerialJtaTransactions(false);
        atomikosProperties7.setThreadedTwoPhaseCommit(true);
        atomikosProperties7.setMaxTimeout((long) '#');
        boolean boolean14 = atomikosProperties7.isForceShutdownOnVmExit();
        java.lang.Object obj15 = properties0.put((java.lang.Object) (short) 1, (java.lang.Object) atomikosProperties7);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties16 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties16.setSerialJtaTransactions(false);
        boolean boolean19 = atomikosProperties16.isSerialJtaTransactions();
        atomikosProperties16.setTransactionManagerUniqueName("hi!");
        atomikosProperties16.setForceShutdownOnVmExit(false);
        atomikosProperties16.setDefaultJtaTimeout((long) (byte) 10);
        java.lang.String str26 = atomikosProperties16.getTransactionManagerUniqueName();
        boolean boolean27 = properties0.contains((java.lang.Object) str26);
        java.util.Properties properties28 = new java.util.Properties();
        boolean boolean30 = properties28.contains((java.lang.Object) 100.0d);
        int int31 = properties28.size();
        boolean boolean32 = properties0.equals((java.lang.Object) properties28);
        java.io.PrintWriter printWriter33 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties0.list(printWriter33);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(objEnumeration3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(objEntrySet5);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNull(obj15);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "hi!" + "'", str26, "hi!");
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 0 + "'", int31 == 0);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
    }

    @Test
    public void test5215() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test5215");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setSerialJtaTransactions(false);
        boolean boolean3 = atomikosProperties0.isSerialJtaTransactions();
        atomikosProperties0.setCheckpointInterval((long) 10);
        atomikosProperties0.setSerialJtaTransactions(true);
        boolean boolean8 = atomikosProperties0.isSerialJtaTransactions();
        java.util.Properties properties9 = atomikosProperties0.asProperties();
        atomikosProperties0.setLogBaseDir("tmlog");
        long long12 = atomikosProperties0.getDefaultJtaTimeout();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(properties9);
        org.junit.Assert.assertTrue("'" + long12 + "' != '" + 10000L + "'", long12 == 10000L);
    }

    @Test
    public void test5216() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test5216");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet3 = properties0.stringPropertyNames();
        java.util.Properties properties4 = new java.util.Properties();
        java.util.Properties properties5 = new java.util.Properties();
        java.lang.Object obj7 = properties5.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet8 = properties5.stringPropertyNames();
        boolean boolean9 = properties4.containsValue((java.lang.Object) properties5);
        java.util.Collection<java.lang.Object> objCollection10 = properties4.values();
        java.util.Enumeration<?> wildcardEnumeration11 = properties4.propertyNames();
        java.lang.Object obj13 = properties0.put((java.lang.Object) wildcardEnumeration11, (java.lang.Object) 10.0d);
        java.util.Set<java.lang.String> strSet14 = properties0.stringPropertyNames();
        java.lang.String str15 = properties0.toString();
        java.lang.Object obj17 = properties0.remove((java.lang.Object) (-1.0d));
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(strSet3);
        org.junit.Assert.assertNull(obj7);
        org.junit.Assert.assertNotNull(strSet8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(objCollection10);
        org.junit.Assert.assertNotNull(wildcardEnumeration11);
        org.junit.Assert.assertNull(obj13);
        org.junit.Assert.assertNotNull(strSet14);
        org.junit.Assert.assertNull(obj17);
    }

    @Test
    public void test5217() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test5217");
        java.util.Properties properties0 = new java.util.Properties();
        java.util.Properties properties1 = new java.util.Properties();
        java.lang.Object obj3 = properties1.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet4 = properties1.stringPropertyNames();
        boolean boolean5 = properties0.containsValue((java.lang.Object) properties1);
        java.util.Collection<java.lang.Object> objCollection6 = properties0.values();
        java.util.Properties properties8 = new java.util.Properties();
        java.lang.Object obj10 = properties8.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration11 = properties8.elements();
        boolean boolean12 = properties8.isEmpty();
        java.util.Set<java.lang.Object> objSet13 = properties8.keySet();
        java.lang.Object obj14 = properties0.putIfAbsent((java.lang.Object) "hi!", (java.lang.Object) objSet13);
        java.util.Set<java.lang.Object> objSet15 = properties0.keySet();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties16 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties16.setSerialJtaTransactions(false);
        atomikosProperties16.setThreadedTwoPhaseCommit(true);
        atomikosProperties16.setMaxTimeout((long) '#');
        boolean boolean23 = atomikosProperties16.isEnableLogging();
        atomikosProperties16.setCheckpointInterval((long) (byte) -1);
        atomikosProperties16.setEnableLogging(true);
        java.util.Properties properties28 = new java.util.Properties();
        java.lang.Object obj30 = properties28.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration31 = properties28.elements();
        boolean boolean32 = properties28.isEmpty();
        java.util.Enumeration<java.lang.Object> objEnumeration33 = properties28.elements();
        java.lang.Object obj34 = properties0.replace((java.lang.Object) true, (java.lang.Object) properties28);
        java.util.Properties properties35 = new java.util.Properties();
        java.lang.Object obj37 = properties35.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration38 = properties35.elements();
        int int39 = properties35.size();
        java.util.Properties properties40 = new java.util.Properties(properties35);
        java.util.Set<java.lang.String> strSet41 = properties35.stringPropertyNames();
        boolean boolean42 = properties0.contains((java.lang.Object) strSet41);
        java.util.Collection<java.lang.Object> objCollection43 = properties0.values();
        java.util.Properties properties44 = new java.util.Properties(properties0);
        java.lang.String str46 = properties0.getProperty("");
        java.util.Properties properties47 = new java.util.Properties();
        java.util.Properties properties48 = new java.util.Properties();
        java.lang.Object obj50 = properties48.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet51 = properties48.stringPropertyNames();
        boolean boolean52 = properties47.containsValue((java.lang.Object) properties48);
        java.util.Collection<java.lang.Object> objCollection53 = properties47.values();
        java.util.Enumeration<?> wildcardEnumeration54 = properties47.propertyNames();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet55 = properties47.entrySet();
        java.util.Properties properties56 = new java.util.Properties();
        java.lang.Object obj58 = properties56.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration59 = properties56.elements();
        boolean boolean60 = properties56.isEmpty();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet61 = properties56.entrySet();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties63 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties63.setSerialJtaTransactions(false);
        atomikosProperties63.setThreadedTwoPhaseCommit(true);
        atomikosProperties63.setMaxTimeout((long) '#');
        boolean boolean70 = atomikosProperties63.isForceShutdownOnVmExit();
        java.lang.Object obj71 = properties56.put((java.lang.Object) (short) 1, (java.lang.Object) atomikosProperties63);
        atomikosProperties63.setForceShutdownOnVmExit(true);
        java.util.Properties properties74 = atomikosProperties63.asProperties();
        boolean boolean75 = properties47.containsValue((java.lang.Object) atomikosProperties63);
        java.lang.String str76 = atomikosProperties63.getLogBaseName();
        atomikosProperties63.setMaxActives(50);
        atomikosProperties63.setTransactionManagerUniqueName("{tmlog=}");
        atomikosProperties63.setMaxTimeout((long) '#');
        boolean boolean83 = properties0.containsValue((java.lang.Object) '#');
        java.util.Enumeration<java.lang.Object> objEnumeration84 = properties0.elements();
        org.junit.Assert.assertNull(obj3);
        org.junit.Assert.assertNotNull(strSet4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(objCollection6);
        org.junit.Assert.assertNull(obj10);
        org.junit.Assert.assertNotNull(objEnumeration11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(objSet13);
        org.junit.Assert.assertNull(obj14);
        org.junit.Assert.assertNotNull(objSet15);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNull(obj30);
        org.junit.Assert.assertNotNull(objEnumeration31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertNotNull(objEnumeration33);
        org.junit.Assert.assertNull(obj34);
        org.junit.Assert.assertNull(obj37);
        org.junit.Assert.assertNotNull(objEnumeration38);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 0 + "'", int39 == 0);
        org.junit.Assert.assertNotNull(strSet41);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertNotNull(objCollection43);
        org.junit.Assert.assertNull(str46);
        org.junit.Assert.assertNull(obj50);
        org.junit.Assert.assertNotNull(strSet51);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNotNull(objCollection53);
        org.junit.Assert.assertNotNull(wildcardEnumeration54);
        org.junit.Assert.assertNotNull(objEntrySet55);
        org.junit.Assert.assertNull(obj58);
        org.junit.Assert.assertNotNull(objEnumeration59);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertNotNull(objEntrySet61);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertNull(obj71);
        org.junit.Assert.assertNotNull(properties74);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
        org.junit.Assert.assertEquals("'" + str76 + "' != '" + "tmlog" + "'", str76, "tmlog");
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + false + "'", boolean83 == false);
        org.junit.Assert.assertNotNull(objEnumeration84);
    }

    @Test
    public void test5218() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test5218");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setSerialJtaTransactions(false);
        boolean boolean3 = atomikosProperties0.isSerialJtaTransactions();
        java.lang.String str4 = atomikosProperties0.getService();
        long long5 = atomikosProperties0.getMaxTimeout();
        atomikosProperties0.setCheckpointInterval((long) (short) 10);
        java.lang.String str8 = atomikosProperties0.getService();
        java.lang.String str9 = atomikosProperties0.getService();
        atomikosProperties0.setCheckpointInterval(10L);
        atomikosProperties0.setService("");
        long long14 = atomikosProperties0.getDefaultJtaTimeout();
        atomikosProperties0.setLogBaseDir("{true=true}");
        java.lang.String str17 = atomikosProperties0.getTransactionManagerUniqueName();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertTrue("'" + long5 + "' != '" + 300000L + "'", long5 == 300000L);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertTrue("'" + long14 + "' != '" + 10000L + "'", long14 == 10000L);
        org.junit.Assert.assertNull(str17);
    }

    @Test
    public void test5219() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test5219");
        java.util.Properties properties0 = new java.util.Properties();
        java.util.Collection<java.lang.Object> objCollection1 = properties0.values();
        java.util.Enumeration<java.lang.Object> objEnumeration2 = properties0.keys();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties4 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties4.setSerialJtaTransactions(false);
        atomikosProperties4.setThreadedTwoPhaseCommit(true);
        atomikosProperties4.setMaxTimeout((long) '#');
        boolean boolean11 = atomikosProperties4.isEnableLogging();
        atomikosProperties4.setCheckpointInterval((long) (byte) -1);
        atomikosProperties4.setEnableLogging(true);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties16 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties16.setSerialJtaTransactions(false);
        atomikosProperties16.setThreadedTwoPhaseCommit(true);
        atomikosProperties16.setMaxTimeout((long) '#');
        boolean boolean23 = atomikosProperties16.isEnableLogging();
        atomikosProperties16.setCheckpointInterval((long) (byte) -1);
        atomikosProperties16.setEnableLogging(true);
        atomikosProperties16.setLogBaseDir("");
        boolean boolean30 = properties0.replace((java.lang.Object) 10000L, (java.lang.Object) atomikosProperties4, (java.lang.Object) "");
        int int31 = atomikosProperties4.getMaxActives();
        java.lang.String str32 = atomikosProperties4.getTransactionManagerUniqueName();
        int int33 = atomikosProperties4.getMaxActives();
        org.junit.Assert.assertNotNull(objCollection1);
        org.junit.Assert.assertNotNull(objEnumeration2);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 50 + "'", int31 == 50);
        org.junit.Assert.assertNull(str32);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 50 + "'", int33 == 50);
    }

    @Test
    public void test5220() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test5220");
        java.util.Properties properties0 = new java.util.Properties();
        boolean boolean2 = properties0.contains((java.lang.Object) 100.0d);
        java.util.Properties properties3 = new java.util.Properties();
        java.lang.Object obj5 = properties3.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration6 = properties3.elements();
        boolean boolean7 = properties3.isEmpty();
        java.util.Set<java.lang.Object> objSet8 = properties3.keySet();
        boolean boolean9 = properties3.isEmpty();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet10 = properties3.entrySet();
        java.util.Properties properties11 = new java.util.Properties();
        java.lang.Object obj13 = properties11.remove((java.lang.Object) 0.0d);
        boolean boolean14 = properties11.isEmpty();
        java.lang.Object obj17 = properties11.setProperty("", "hi!");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties18 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties18.setSerialJtaTransactions(false);
        boolean boolean21 = properties3.remove((java.lang.Object) properties11, (java.lang.Object) atomikosProperties18);
        boolean boolean22 = properties0.equals((java.lang.Object) properties3);
        java.util.Enumeration<java.lang.Object> objEnumeration23 = properties0.elements();
        java.util.Properties properties24 = new java.util.Properties();
        java.lang.Object obj26 = properties24.remove((java.lang.Object) 0.0d);
        boolean boolean28 = properties24.containsValue((java.lang.Object) "hi!");
        java.lang.Object obj31 = properties24.put((java.lang.Object) (byte) -1, (java.lang.Object) 100L);
        java.util.Collection<java.lang.Object> objCollection32 = properties24.values();
        java.util.Properties properties33 = new java.util.Properties();
        java.lang.Object obj35 = properties33.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration36 = properties33.elements();
        int int37 = properties33.size();
        java.util.Properties properties38 = new java.util.Properties(properties33);
        java.util.Set<java.lang.String> strSet39 = properties33.stringPropertyNames();
        java.util.Set<java.lang.String> strSet40 = properties33.stringPropertyNames();
        java.util.Properties properties41 = new java.util.Properties();
        java.lang.Object obj43 = properties41.remove((java.lang.Object) 0.0d);
        boolean boolean44 = properties41.isEmpty();
        java.util.Enumeration<java.lang.Object> objEnumeration45 = properties41.elements();
        java.util.Properties properties46 = new java.util.Properties();
        java.lang.Object obj48 = properties46.remove((java.lang.Object) 0.0d);
        boolean boolean49 = properties46.isEmpty();
        java.util.Enumeration<java.lang.Object> objEnumeration50 = properties46.elements();
        java.util.Enumeration<java.lang.Object> objEnumeration51 = properties46.elements();
        java.lang.Object obj52 = properties33.replace((java.lang.Object) objEnumeration45, (java.lang.Object) objEnumeration51);
        java.util.Enumeration<java.lang.Object> objEnumeration53 = properties33.keys();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties54 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties54.setSerialJtaTransactions(false);
        boolean boolean57 = atomikosProperties54.isSerialJtaTransactions();
        java.lang.String str58 = atomikosProperties54.getService();
        boolean boolean59 = atomikosProperties54.isEnableLogging();
        java.lang.String str60 = atomikosProperties54.getLogBaseName();
        boolean boolean61 = properties33.containsKey((java.lang.Object) atomikosProperties54);
        java.lang.Object obj62 = null;
        java.lang.Object obj63 = properties24.getOrDefault((java.lang.Object) atomikosProperties54, obj62);
        java.util.Properties properties64 = atomikosProperties54.asProperties();
        java.util.Enumeration<java.lang.Object> objEnumeration65 = properties64.elements();
        java.util.Properties properties66 = new java.util.Properties();
        java.util.Properties properties67 = new java.util.Properties();
        java.lang.Object obj69 = properties67.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet70 = properties67.stringPropertyNames();
        boolean boolean71 = properties66.containsValue((java.lang.Object) properties67);
        java.util.Enumeration<?> wildcardEnumeration72 = properties67.propertyNames();
        java.util.Properties properties73 = new java.util.Properties(properties67);
        java.util.Enumeration<java.lang.Object> objEnumeration74 = properties67.keys();
        java.lang.Object obj75 = properties0.put((java.lang.Object) objEnumeration65, (java.lang.Object) properties67);
        boolean boolean76 = properties0.isEmpty();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNull(obj5);
        org.junit.Assert.assertNotNull(objEnumeration6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(objSet8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertNotNull(objEntrySet10);
        org.junit.Assert.assertNull(obj13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNull(obj17);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNotNull(objEnumeration23);
        org.junit.Assert.assertNull(obj26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNull(obj31);
        org.junit.Assert.assertNotNull(objCollection32);
        org.junit.Assert.assertNull(obj35);
        org.junit.Assert.assertNotNull(objEnumeration36);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 0 + "'", int37 == 0);
        org.junit.Assert.assertNotNull(strSet39);
        org.junit.Assert.assertNotNull(strSet40);
        org.junit.Assert.assertNull(obj43);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertNotNull(objEnumeration45);
        org.junit.Assert.assertNull(obj48);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertNotNull(objEnumeration50);
        org.junit.Assert.assertNotNull(objEnumeration51);
        org.junit.Assert.assertNull(obj52);
        org.junit.Assert.assertNotNull(objEnumeration53);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertNull(str58);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "tmlog" + "'", str60, "tmlog");
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertNull(obj63);
        org.junit.Assert.assertNotNull(properties64);
        org.junit.Assert.assertNotNull(objEnumeration65);
        org.junit.Assert.assertNull(obj69);
        org.junit.Assert.assertNotNull(strSet70);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertNotNull(wildcardEnumeration72);
        org.junit.Assert.assertNotNull(objEnumeration74);
        org.junit.Assert.assertNull(obj75);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
    }

    @Test
    public void test5221() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test5221");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setSerialJtaTransactions(false);
        atomikosProperties0.setThreadedTwoPhaseCommit(true);
        atomikosProperties0.setMaxTimeout((long) '#');
        boolean boolean7 = atomikosProperties0.isEnableLogging();
        atomikosProperties0.setCheckpointInterval((long) (byte) -1);
        atomikosProperties0.setMaxActives((int) (byte) 100);
        atomikosProperties0.setForceShutdownOnVmExit(false);
        boolean boolean14 = atomikosProperties0.isThreadedTwoPhaseCommit();
        boolean boolean15 = atomikosProperties0.isForceShutdownOnVmExit();
        java.lang.String str16 = atomikosProperties0.getTransactionManagerUniqueName();
        atomikosProperties0.setTransactionManagerUniqueName("{[]=0.0}");
        atomikosProperties0.setLogBaseDir("{com.atomikos.icatch.enable_logging=false, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=false, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNull(str16);
    }

    @Test
    public void test5222() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test5222");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet3 = properties0.stringPropertyNames();
        java.util.Properties properties4 = new java.util.Properties();
        java.util.Properties properties5 = new java.util.Properties();
        java.lang.Object obj7 = properties5.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet8 = properties5.stringPropertyNames();
        boolean boolean9 = properties4.containsValue((java.lang.Object) properties5);
        java.util.Collection<java.lang.Object> objCollection10 = properties4.values();
        java.util.Enumeration<?> wildcardEnumeration11 = properties4.propertyNames();
        java.lang.Object obj13 = properties0.put((java.lang.Object) wildcardEnumeration11, (java.lang.Object) 10.0d);
        java.util.Properties properties14 = new java.util.Properties();
        java.lang.Object obj16 = properties14.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration17 = properties14.elements();
        boolean boolean18 = properties14.isEmpty();
        java.util.Set<java.lang.Object> objSet19 = properties14.keySet();
        boolean boolean20 = properties14.isEmpty();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet21 = properties14.entrySet();
        java.util.Properties properties22 = new java.util.Properties();
        java.lang.Object obj24 = properties22.remove((java.lang.Object) 0.0d);
        boolean boolean25 = properties22.isEmpty();
        java.lang.Object obj28 = properties22.setProperty("", "hi!");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties29 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties29.setSerialJtaTransactions(false);
        boolean boolean32 = properties14.remove((java.lang.Object) properties22, (java.lang.Object) atomikosProperties29);
        java.util.Properties properties33 = new java.util.Properties(properties22);
        int int34 = properties33.size();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties36 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties36.setSerialJtaTransactions(false);
        boolean boolean39 = atomikosProperties36.isSerialJtaTransactions();
        java.lang.String str40 = atomikosProperties36.getService();
        boolean boolean41 = atomikosProperties36.isEnableLogging();
        java.lang.String str42 = atomikosProperties36.getTransactionManagerUniqueName();
        boolean boolean43 = properties33.remove((java.lang.Object) (byte) 1, (java.lang.Object) atomikosProperties36);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties44 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties44.setSerialJtaTransactions(false);
        atomikosProperties44.setThreadedTwoPhaseCommit(true);
        atomikosProperties44.setEnableLogging(false);
        boolean boolean51 = atomikosProperties44.isSerialJtaTransactions();
        int int52 = atomikosProperties44.getMaxActives();
        boolean boolean53 = atomikosProperties44.isSerialJtaTransactions();
        boolean boolean54 = properties0.remove((java.lang.Object) properties33, (java.lang.Object) boolean53);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties55 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties55.setSerialJtaTransactions(false);
        atomikosProperties55.setThreadedTwoPhaseCommit(true);
        atomikosProperties55.setMaxTimeout((long) '#');
        boolean boolean62 = atomikosProperties55.isEnableLogging();
        atomikosProperties55.setCheckpointInterval((long) 100);
        java.lang.String str65 = atomikosProperties55.getTransactionManagerUniqueName();
        boolean boolean66 = properties33.contains((java.lang.Object) atomikosProperties55);
        java.util.Properties properties67 = atomikosProperties55.asProperties();
        atomikosProperties55.setTransactionManagerUniqueName("tmlog");
        atomikosProperties55.setMaxActives(0);
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(strSet3);
        org.junit.Assert.assertNull(obj7);
        org.junit.Assert.assertNotNull(strSet8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(objCollection10);
        org.junit.Assert.assertNotNull(wildcardEnumeration11);
        org.junit.Assert.assertNull(obj13);
        org.junit.Assert.assertNull(obj16);
        org.junit.Assert.assertNotNull(objEnumeration17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(objSet19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNotNull(objEntrySet21);
        org.junit.Assert.assertNull(obj24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNull(obj28);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 0 + "'", int34 == 0);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNull(str40);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertNull(str42);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + 50 + "'", int52 == 50);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + true + "'", boolean62 == true);
        org.junit.Assert.assertNull(str65);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertNotNull(properties67);
    }

    @Test
    public void test5223() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test5223");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setSerialJtaTransactions(false);
        boolean boolean3 = atomikosProperties0.isSerialJtaTransactions();
        atomikosProperties0.setTransactionManagerUniqueName("hi!");
        boolean boolean6 = atomikosProperties0.isEnableLogging();
        atomikosProperties0.setSerialJtaTransactions(true);
        int int9 = atomikosProperties0.getMaxActives();
        atomikosProperties0.setLogBaseDir("{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=false, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, hi!=, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 50 + "'", int9 == 50);
    }

    @Test
    public void test5224() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test5224");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration3 = properties0.elements();
        boolean boolean4 = properties0.isEmpty();
        java.util.Set<java.lang.Object> objSet5 = properties0.keySet();
        java.util.Enumeration<java.lang.Object> objEnumeration6 = properties0.keys();
        java.lang.String str8 = properties0.getProperty("hi!");
        java.lang.String str10 = properties0.getProperty("");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties11 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties11.setSerialJtaTransactions(false);
        atomikosProperties11.setThreadedTwoPhaseCommit(true);
        atomikosProperties11.setEnableLogging(false);
        boolean boolean18 = properties0.containsKey((java.lang.Object) atomikosProperties11);
        boolean boolean19 = atomikosProperties11.isSerialJtaTransactions();
        boolean boolean20 = atomikosProperties11.isForceShutdownOnVmExit();
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(objEnumeration3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(objSet5);
        org.junit.Assert.assertNotNull(objEnumeration6);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
    }

    @Test
    public void test5225() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test5225");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setSerialJtaTransactions(false);
        atomikosProperties0.setThreadedTwoPhaseCommit(true);
        atomikosProperties0.setThreadedTwoPhaseCommit(true);
        java.util.Properties properties7 = atomikosProperties0.asProperties();
        java.util.Set<java.lang.String> strSet8 = properties7.stringPropertyNames();
        java.util.Properties properties9 = new java.util.Properties();
        java.lang.Object obj11 = properties9.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration12 = properties9.elements();
        boolean boolean13 = properties9.isEmpty();
        java.util.Set<java.lang.Object> objSet14 = properties9.keySet();
        java.util.Enumeration<java.lang.Object> objEnumeration15 = properties9.keys();
        java.lang.String str17 = properties9.getProperty("hi!");
        java.util.Enumeration<?> wildcardEnumeration18 = properties9.propertyNames();
        java.util.Properties properties19 = new java.util.Properties();
        java.lang.Object obj21 = properties19.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration22 = properties19.elements();
        boolean boolean23 = properties19.isEmpty();
        java.util.Enumeration<java.lang.Object> objEnumeration24 = properties19.elements();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet25 = properties19.entrySet();
        java.util.Set<java.lang.String> strSet26 = properties19.stringPropertyNames();
        boolean boolean27 = properties19.isEmpty();
        properties9.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties19);
        boolean boolean29 = properties7.containsKey((java.lang.Object) properties9);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties30 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties30.setSerialJtaTransactions(false);
        boolean boolean33 = atomikosProperties30.isSerialJtaTransactions();
        java.util.Properties properties34 = atomikosProperties30.asProperties();
        int int35 = atomikosProperties30.getMaxActives();
        atomikosProperties30.setForceShutdownOnVmExit(false);
        java.lang.Object obj38 = properties9.remove((java.lang.Object) false);
        org.junit.Assert.assertNotNull(properties7);
        org.junit.Assert.assertNotNull(strSet8);
        org.junit.Assert.assertNull(obj11);
        org.junit.Assert.assertNotNull(objEnumeration12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(objSet14);
        org.junit.Assert.assertNotNull(objEnumeration15);
        org.junit.Assert.assertNull(str17);
        org.junit.Assert.assertNotNull(wildcardEnumeration18);
        org.junit.Assert.assertNull(obj21);
        org.junit.Assert.assertNotNull(objEnumeration22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNotNull(objEnumeration24);
        org.junit.Assert.assertNotNull(objEntrySet25);
        org.junit.Assert.assertNotNull(strSet26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(properties34);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 50 + "'", int35 == 50);
        org.junit.Assert.assertNull(obj38);
    }

    @Test
    public void test5226() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test5226");
        java.util.Properties properties0 = new java.util.Properties();
        java.util.Properties properties1 = new java.util.Properties();
        java.lang.Object obj3 = properties1.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet4 = properties1.stringPropertyNames();
        boolean boolean5 = properties0.containsValue((java.lang.Object) properties1);
        java.util.Collection<java.lang.Object> objCollection6 = properties0.values();
        java.util.Properties properties8 = new java.util.Properties();
        java.lang.Object obj10 = properties8.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration11 = properties8.elements();
        boolean boolean12 = properties8.isEmpty();
        java.util.Set<java.lang.Object> objSet13 = properties8.keySet();
        java.lang.Object obj14 = properties0.putIfAbsent((java.lang.Object) "hi!", (java.lang.Object) objSet13);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties15 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties15.setSerialJtaTransactions(false);
        boolean boolean18 = atomikosProperties15.isSerialJtaTransactions();
        java.util.Properties properties19 = atomikosProperties15.asProperties();
        java.lang.Object obj22 = properties19.setProperty("hi!", "");
        java.util.Properties properties23 = new java.util.Properties(properties19);
        java.util.Properties properties24 = new java.util.Properties();
        java.lang.Object obj26 = properties24.remove((java.lang.Object) 0.0d);
        java.util.Properties properties27 = new java.util.Properties();
        java.util.Collection<java.lang.Object> objCollection28 = properties27.values();
        java.util.Enumeration<java.lang.Object> objEnumeration29 = properties27.keys();
        java.util.Properties properties30 = new java.util.Properties();
        java.lang.Object obj32 = properties30.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration33 = properties30.elements();
        boolean boolean34 = properties30.isEmpty();
        java.util.Set<java.lang.Object> objSet35 = properties30.keySet();
        java.util.Enumeration<java.lang.Object> objEnumeration36 = properties30.keys();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet37 = properties30.entrySet();
        java.lang.Object obj38 = properties24.put((java.lang.Object) properties27, (java.lang.Object) properties30);
        java.lang.Object obj39 = properties0.putIfAbsent((java.lang.Object) properties23, (java.lang.Object) properties30);
        properties30.clear();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties41 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties41.setSerialJtaTransactions(false);
        atomikosProperties41.setThreadedTwoPhaseCommit(true);
        atomikosProperties41.setMaxTimeout((long) '#');
        boolean boolean48 = atomikosProperties41.isEnableLogging();
        atomikosProperties41.setCheckpointInterval((long) (byte) -1);
        atomikosProperties41.setEnableLogging(true);
        atomikosProperties41.setLogBaseDir("");
        java.util.Properties properties55 = new java.util.Properties();
        java.lang.Object obj57 = properties55.remove((java.lang.Object) 0.0d);
        boolean boolean58 = properties55.isEmpty();
        java.util.Enumeration<java.lang.Object> objEnumeration59 = properties55.elements();
        java.lang.Object obj62 = properties55.replace((java.lang.Object) 1, (java.lang.Object) 1);
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet63 = properties55.entrySet();
        java.lang.Object obj64 = properties30.getOrDefault((java.lang.Object) "", (java.lang.Object) properties55);
        java.util.Properties properties65 = new java.util.Properties();
        java.lang.Object obj67 = properties65.remove((java.lang.Object) 0.0d);
        boolean boolean68 = properties65.isEmpty();
        java.util.Enumeration<java.lang.Object> objEnumeration69 = properties65.keys();
        java.util.Properties properties70 = new java.util.Properties();
        java.lang.Object obj72 = properties70.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration73 = properties70.elements();
        int int74 = properties70.size();
        java.util.Properties properties75 = new java.util.Properties();
        java.lang.Object obj77 = properties75.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration78 = properties75.elements();
        boolean boolean79 = properties75.isEmpty();
        java.util.Set<java.lang.Object> objSet80 = properties75.keySet();
        boolean boolean81 = properties70.containsKey((java.lang.Object) objSet80);
        java.util.Enumeration<java.lang.Object> objEnumeration82 = properties70.keys();
        java.util.Properties properties83 = new java.util.Properties();
        java.lang.Object obj85 = properties83.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration86 = properties83.elements();
        boolean boolean87 = properties83.isEmpty();
        java.util.Set<java.lang.Object> objSet88 = properties83.keySet();
        java.util.Enumeration<java.lang.Object> objEnumeration89 = properties83.keys();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet90 = properties83.entrySet();
        boolean boolean92 = properties70.remove((java.lang.Object) properties83, (java.lang.Object) 1.0f);
        boolean boolean93 = properties83.isEmpty();
        boolean boolean95 = properties65.remove((java.lang.Object) properties83, (java.lang.Object) 100);
        boolean boolean96 = properties55.contains((java.lang.Object) 100);
        java.util.Collection<java.lang.Object> objCollection97 = properties55.values();
        java.util.Enumeration<java.lang.Object> objEnumeration98 = properties55.keys();
        java.util.Set<java.lang.String> strSet99 = properties55.stringPropertyNames();
        org.junit.Assert.assertNull(obj3);
        org.junit.Assert.assertNotNull(strSet4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(objCollection6);
        org.junit.Assert.assertNull(obj10);
        org.junit.Assert.assertNotNull(objEnumeration11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(objSet13);
        org.junit.Assert.assertNull(obj14);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(properties19);
        org.junit.Assert.assertNull(obj22);
        org.junit.Assert.assertNull(obj26);
        org.junit.Assert.assertNotNull(objCollection28);
        org.junit.Assert.assertNotNull(objEnumeration29);
        org.junit.Assert.assertNull(obj32);
        org.junit.Assert.assertNotNull(objEnumeration33);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertNotNull(objSet35);
        org.junit.Assert.assertNotNull(objEnumeration36);
        org.junit.Assert.assertNotNull(objEntrySet37);
        org.junit.Assert.assertNull(obj38);
        org.junit.Assert.assertNull(obj39);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertNull(obj57);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertNotNull(objEnumeration59);
        org.junit.Assert.assertNull(obj62);
        org.junit.Assert.assertNotNull(objEntrySet63);
        org.junit.Assert.assertNotNull(obj64);
        org.junit.Assert.assertEquals(obj64.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj64), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj64), "{}");
        org.junit.Assert.assertNull(obj67);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + true + "'", boolean68 == true);
        org.junit.Assert.assertNotNull(objEnumeration69);
        org.junit.Assert.assertNull(obj72);
        org.junit.Assert.assertNotNull(objEnumeration73);
        org.junit.Assert.assertTrue("'" + int74 + "' != '" + 0 + "'", int74 == 0);
        org.junit.Assert.assertNull(obj77);
        org.junit.Assert.assertNotNull(objEnumeration78);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + true + "'", boolean79 == true);
        org.junit.Assert.assertNotNull(objSet80);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + false + "'", boolean81 == false);
        org.junit.Assert.assertNotNull(objEnumeration82);
        org.junit.Assert.assertNull(obj85);
        org.junit.Assert.assertNotNull(objEnumeration86);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + true + "'", boolean87 == true);
        org.junit.Assert.assertNotNull(objSet88);
        org.junit.Assert.assertNotNull(objEnumeration89);
        org.junit.Assert.assertNotNull(objEntrySet90);
        org.junit.Assert.assertTrue("'" + boolean92 + "' != '" + false + "'", boolean92 == false);
        org.junit.Assert.assertTrue("'" + boolean93 + "' != '" + true + "'", boolean93 == true);
        org.junit.Assert.assertTrue("'" + boolean95 + "' != '" + false + "'", boolean95 == false);
        org.junit.Assert.assertTrue("'" + boolean96 + "' != '" + false + "'", boolean96 == false);
        org.junit.Assert.assertNotNull(objCollection97);
        org.junit.Assert.assertNotNull(objEnumeration98);
        org.junit.Assert.assertNotNull(strSet99);
    }

    @Test
    public void test5227() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test5227");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setSerialJtaTransactions(false);
        boolean boolean3 = atomikosProperties0.isSerialJtaTransactions();
        atomikosProperties0.setCheckpointInterval((long) 10);
        atomikosProperties0.setSerialJtaTransactions(true);
        boolean boolean8 = atomikosProperties0.isSerialJtaTransactions();
        java.util.Properties properties9 = atomikosProperties0.asProperties();
        boolean boolean10 = atomikosProperties0.isThreadedTwoPhaseCommit();
        atomikosProperties0.setThreadedTwoPhaseCommit(true);
        atomikosProperties0.setMaxActives((-1));
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(properties9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
    }

    @Test
    public void test5228() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test5228");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setSerialJtaTransactions(false);
        boolean boolean3 = atomikosProperties0.isSerialJtaTransactions();
        atomikosProperties0.setTransactionManagerUniqueName("hi!");
        java.lang.String str6 = atomikosProperties0.getLogBaseName();
        java.lang.String str7 = atomikosProperties0.getLogBaseName();
        boolean boolean8 = atomikosProperties0.isSerialJtaTransactions();
        long long9 = atomikosProperties0.getMaxTimeout();
        atomikosProperties0.setCheckpointInterval(0L);
        long long12 = atomikosProperties0.getDefaultJtaTimeout();
        java.util.Properties properties13 = atomikosProperties0.asProperties();
        java.util.Properties properties14 = new java.util.Properties();
        java.lang.Object obj16 = properties14.remove((java.lang.Object) 0.0d);
        java.util.Properties properties17 = new java.util.Properties();
        java.util.Collection<java.lang.Object> objCollection18 = properties17.values();
        java.util.Enumeration<java.lang.Object> objEnumeration19 = properties17.keys();
        java.util.Properties properties20 = new java.util.Properties();
        java.lang.Object obj22 = properties20.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration23 = properties20.elements();
        boolean boolean24 = properties20.isEmpty();
        java.util.Set<java.lang.Object> objSet25 = properties20.keySet();
        java.util.Enumeration<java.lang.Object> objEnumeration26 = properties20.keys();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet27 = properties20.entrySet();
        java.lang.Object obj28 = properties14.put((java.lang.Object) properties17, (java.lang.Object) properties20);
        java.util.Properties properties29 = new java.util.Properties();
        java.lang.Object obj31 = properties29.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration32 = properties29.elements();
        boolean boolean33 = properties29.isEmpty();
        java.util.Set<java.lang.Object> objSet34 = properties29.keySet();
        boolean boolean35 = properties29.isEmpty();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet36 = properties29.entrySet();
        java.util.Properties properties37 = new java.util.Properties();
        java.lang.Object obj39 = properties37.remove((java.lang.Object) 0.0d);
        boolean boolean40 = properties37.isEmpty();
        java.lang.Object obj43 = properties37.setProperty("", "hi!");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties44 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties44.setSerialJtaTransactions(false);
        boolean boolean47 = properties29.remove((java.lang.Object) properties37, (java.lang.Object) atomikosProperties44);
        java.util.Properties properties48 = new java.util.Properties();
        java.lang.Object obj50 = properties48.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration51 = properties48.elements();
        int int52 = properties48.size();
        java.util.Properties properties53 = new java.util.Properties(properties48);
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet54 = properties48.entrySet();
        java.lang.Object obj55 = properties14.put((java.lang.Object) atomikosProperties44, (java.lang.Object) properties48);
        java.lang.Object obj56 = properties48.clone();
        java.lang.Object obj57 = null;
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties58 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties58.setSerialJtaTransactions(false);
        atomikosProperties58.setThreadedTwoPhaseCommit(true);
        atomikosProperties58.setThreadedTwoPhaseCommit(true);
        java.util.Properties properties65 = atomikosProperties58.asProperties();
        int int66 = atomikosProperties58.getMaxActives();
        atomikosProperties58.setTransactionManagerUniqueName("hi!");
        atomikosProperties58.setMaxTimeout(500L);
        java.util.Properties properties71 = atomikosProperties58.asProperties();
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean72 = properties13.replace(obj56, obj57, (java.lang.Object) atomikosProperties58);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "tmlog" + "'", str6, "tmlog");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "tmlog" + "'", str7, "tmlog");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + long9 + "' != '" + 300000L + "'", long9 == 300000L);
        org.junit.Assert.assertTrue("'" + long12 + "' != '" + 10000L + "'", long12 == 10000L);
        org.junit.Assert.assertNotNull(properties13);
        org.junit.Assert.assertNull(obj16);
        org.junit.Assert.assertNotNull(objCollection18);
        org.junit.Assert.assertNotNull(objEnumeration19);
        org.junit.Assert.assertNull(obj22);
        org.junit.Assert.assertNotNull(objEnumeration23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNotNull(objSet25);
        org.junit.Assert.assertNotNull(objEnumeration26);
        org.junit.Assert.assertNotNull(objEntrySet27);
        org.junit.Assert.assertNull(obj28);
        org.junit.Assert.assertNull(obj31);
        org.junit.Assert.assertNotNull(objEnumeration32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNotNull(objSet34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertNotNull(objEntrySet36);
        org.junit.Assert.assertNull(obj39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNull(obj43);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNull(obj50);
        org.junit.Assert.assertNotNull(objEnumeration51);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + 0 + "'", int52 == 0);
        org.junit.Assert.assertNotNull(objEntrySet54);
        org.junit.Assert.assertNull(obj55);
        org.junit.Assert.assertNotNull(obj56);
        org.junit.Assert.assertEquals(obj56.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj56), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj56), "{}");
        org.junit.Assert.assertNotNull(properties65);
        org.junit.Assert.assertTrue("'" + int66 + "' != '" + 50 + "'", int66 == 50);
        org.junit.Assert.assertNotNull(properties71);
    }

    @Test
    public void test5229() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test5229");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        boolean boolean4 = properties0.containsValue((java.lang.Object) "hi!");
        java.lang.Object obj7 = properties0.put((java.lang.Object) (byte) -1, (java.lang.Object) 100L);
        java.util.Enumeration<java.lang.Object> objEnumeration8 = properties0.keys();
        java.util.Enumeration<java.lang.Object> objEnumeration9 = properties0.elements();
        java.lang.Object obj10 = properties0.clone();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties11 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties11.setSerialJtaTransactions(false);
        boolean boolean14 = atomikosProperties11.isSerialJtaTransactions();
        java.lang.String str15 = atomikosProperties11.getService();
        atomikosProperties11.setMaxActives((int) (byte) 100);
        boolean boolean18 = properties0.equals((java.lang.Object) (byte) 100);
        java.lang.String str21 = properties0.getProperty("", "{true=true}");
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNull(obj7);
        org.junit.Assert.assertNotNull(objEnumeration8);
        org.junit.Assert.assertNotNull(objEnumeration9);
        org.junit.Assert.assertNotNull(obj10);
        org.junit.Assert.assertEquals(obj10.toString(), "{-1=100}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj10), "{-1=100}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj10), "{-1=100}");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNull(str15);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "{true=true}" + "'", str21, "{true=true}");
    }

    @Test
    public void test5230() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test5230");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setSerialJtaTransactions(false);
        atomikosProperties0.setThreadedTwoPhaseCommit(true);
        atomikosProperties0.setMaxTimeout((long) '#');
        boolean boolean7 = atomikosProperties0.isEnableLogging();
        atomikosProperties0.setCheckpointInterval((long) (byte) -1);
        atomikosProperties0.setMaxActives((int) (byte) 100);
        atomikosProperties0.setForceShutdownOnVmExit(false);
        boolean boolean14 = atomikosProperties0.isThreadedTwoPhaseCommit();
        boolean boolean15 = atomikosProperties0.isForceShutdownOnVmExit();
        java.util.Properties properties16 = atomikosProperties0.asProperties();
        java.lang.String str17 = atomikosProperties0.getLogBaseName();
        java.lang.String str18 = atomikosProperties0.getLogBaseName();
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(properties16);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "tmlog" + "'", str17, "tmlog");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "tmlog" + "'", str18, "tmlog");
    }

    @Test
    public void test5231() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test5231");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setSerialJtaTransactions(false);
        atomikosProperties0.setThreadedTwoPhaseCommit(true);
        atomikosProperties0.setMaxTimeout((long) '#');
        boolean boolean7 = atomikosProperties0.isEnableLogging();
        boolean boolean8 = atomikosProperties0.isThreadedTwoPhaseCommit();
        atomikosProperties0.setService("");
        java.util.Properties properties11 = atomikosProperties0.asProperties();
        java.lang.String str12 = atomikosProperties0.getLogBaseDir();
        atomikosProperties0.setLogBaseDir("{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=false, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.tm_unique_name=tmlog, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(properties11);
        org.junit.Assert.assertNull(str12);
    }

    @Test
    public void test5232() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test5232");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration3 = properties0.elements();
        boolean boolean4 = properties0.isEmpty();
        java.util.Set<java.lang.Object> objSet5 = properties0.keySet();
        java.util.Enumeration<java.lang.Object> objEnumeration6 = properties0.keys();
        java.lang.String str8 = properties0.getProperty("hi!");
        java.lang.String str10 = properties0.getProperty("");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties11 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties11.setSerialJtaTransactions(false);
        atomikosProperties11.setThreadedTwoPhaseCommit(true);
        atomikosProperties11.setEnableLogging(false);
        boolean boolean18 = properties0.containsKey((java.lang.Object) atomikosProperties11);
        boolean boolean19 = atomikosProperties11.isSerialJtaTransactions();
        atomikosProperties11.setLogBaseDir("{=hi!}");
        atomikosProperties11.setLogBaseName("{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=false, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, hi!=, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
        atomikosProperties11.setLogBaseName("");
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(objEnumeration3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(objSet5);
        org.junit.Assert.assertNotNull(objEnumeration6);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
    }

    @Test
    public void test5233() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test5233");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        boolean boolean3 = properties0.isEmpty();
        java.util.Enumeration<java.lang.Object> objEnumeration4 = properties0.elements();
        java.util.Enumeration<java.lang.Object> objEnumeration5 = properties0.elements();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties6 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties6.setSerialJtaTransactions(false);
        atomikosProperties6.setThreadedTwoPhaseCommit(true);
        atomikosProperties6.setMaxTimeout((long) '#');
        boolean boolean13 = atomikosProperties6.isForceShutdownOnVmExit();
        int int14 = atomikosProperties6.getMaxActives();
        java.lang.Object obj15 = properties0.remove((java.lang.Object) int14);
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet16 = properties0.entrySet();
        java.util.Properties properties17 = new java.util.Properties(properties0);
        java.util.Set<java.lang.Object> objSet18 = properties0.keySet();
        java.util.Set<java.lang.Object> objSet19 = properties0.keySet();
        java.util.Enumeration<java.lang.Object> objEnumeration20 = properties0.keys();
        java.lang.Class<?> wildcardClass21 = properties0.getClass();
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(objEnumeration4);
        org.junit.Assert.assertNotNull(objEnumeration5);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 50 + "'", int14 == 50);
        org.junit.Assert.assertNull(obj15);
        org.junit.Assert.assertNotNull(objEntrySet16);
        org.junit.Assert.assertNotNull(objSet18);
        org.junit.Assert.assertNotNull(objSet19);
        org.junit.Assert.assertNotNull(objEnumeration20);
        org.junit.Assert.assertNotNull(wildcardClass21);
    }

    @Test
    public void test5234() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test5234");
        java.util.Properties properties0 = new java.util.Properties();
        boolean boolean2 = properties0.contains((java.lang.Object) 100.0d);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties3 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties3.setSerialJtaTransactions(false);
        atomikosProperties3.setThreadedTwoPhaseCommit(true);
        atomikosProperties3.setSerialJtaTransactions(false);
        java.lang.String str10 = atomikosProperties3.getService();
        boolean boolean11 = properties0.containsKey((java.lang.Object) atomikosProperties3);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties12 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties12.setSerialJtaTransactions(false);
        atomikosProperties12.setThreadedTwoPhaseCommit(true);
        atomikosProperties12.setMaxTimeout((long) '#');
        boolean boolean19 = atomikosProperties12.isEnableLogging();
        atomikosProperties12.setCheckpointInterval((long) 100);
        atomikosProperties12.setForceShutdownOnVmExit(false);
        boolean boolean24 = properties0.containsValue((java.lang.Object) atomikosProperties12);
        atomikosProperties12.setService("{=hi!}");
        java.util.Properties properties27 = atomikosProperties12.asProperties();
        java.util.Properties properties28 = new java.util.Properties();
        java.util.Properties properties29 = new java.util.Properties();
        java.lang.Object obj31 = properties29.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet32 = properties29.stringPropertyNames();
        boolean boolean33 = properties28.containsValue((java.lang.Object) properties29);
        java.util.Collection<java.lang.Object> objCollection34 = properties28.values();
        boolean boolean35 = properties28.isEmpty();
        boolean boolean36 = properties27.equals((java.lang.Object) properties28);
        java.io.OutputStream outputStream37 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties28.storeToXML(outputStream37, "{{{}={}}={}}", "{[]=0.0}");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(properties27);
        org.junit.Assert.assertNull(obj31);
        org.junit.Assert.assertNotNull(strSet32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(objCollection34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
    }

    @Test
    public void test5235() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test5235");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setSerialJtaTransactions(false);
        atomikosProperties0.setThreadedTwoPhaseCommit(true);
        atomikosProperties0.setEnableLogging(false);
        boolean boolean7 = atomikosProperties0.isSerialJtaTransactions();
        int int8 = atomikosProperties0.getMaxActives();
        boolean boolean9 = atomikosProperties0.isEnableLogging();
        java.lang.String str10 = atomikosProperties0.getLogBaseDir();
        atomikosProperties0.setService("{=hi!}");
        boolean boolean13 = atomikosProperties0.isEnableLogging();
        atomikosProperties0.setEnableLogging(true);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 50 + "'", int8 == 50);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
    }

    @Test
    public void test5236() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test5236");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration3 = properties0.elements();
        boolean boolean4 = properties0.isEmpty();
        java.util.Set<java.lang.Object> objSet5 = properties0.keySet();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties6 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties6.setSerialJtaTransactions(false);
        atomikosProperties6.setThreadedTwoPhaseCommit(true);
        atomikosProperties6.setThreadedTwoPhaseCommit(true);
        java.util.Properties properties13 = atomikosProperties6.asProperties();
        int int14 = atomikosProperties6.getMaxActives();
        java.util.Properties properties15 = new java.util.Properties();
        java.lang.Object obj17 = properties15.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration18 = properties15.elements();
        boolean boolean19 = properties15.isEmpty();
        java.util.Set<java.lang.Object> objSet20 = properties15.keySet();
        boolean boolean22 = properties15.containsKey((java.lang.Object) (-1.0f));
        java.lang.Object obj23 = properties0.put((java.lang.Object) atomikosProperties6, (java.lang.Object) properties15);
        java.lang.String str24 = properties0.toString();
        java.util.Properties properties25 = new java.util.Properties();
        java.lang.Object obj27 = properties25.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration28 = properties25.elements();
        boolean boolean29 = properties25.isEmpty();
        java.util.Set<java.lang.Object> objSet30 = properties25.keySet();
        java.util.Enumeration<java.lang.Object> objEnumeration31 = properties25.keys();
        java.util.Enumeration<java.lang.Object> objEnumeration32 = properties25.elements();
        java.util.Properties properties33 = new java.util.Properties();
        java.lang.Object obj35 = properties33.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration36 = properties33.elements();
        boolean boolean37 = properties33.isEmpty();
        java.util.Set<java.lang.Object> objSet38 = properties33.keySet();
        java.util.Enumeration<java.lang.Object> objEnumeration39 = properties33.keys();
        java.lang.String str41 = properties33.getProperty("hi!");
        java.lang.String str43 = properties33.getProperty("");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties44 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties44.setSerialJtaTransactions(false);
        atomikosProperties44.setThreadedTwoPhaseCommit(true);
        atomikosProperties44.setEnableLogging(false);
        boolean boolean51 = properties33.containsKey((java.lang.Object) atomikosProperties44);
        boolean boolean52 = properties25.containsKey((java.lang.Object) boolean51);
        java.util.Properties properties53 = new java.util.Properties();
        java.lang.Object obj55 = properties53.remove((java.lang.Object) 0.0d);
        boolean boolean56 = properties53.isEmpty();
        java.lang.Object obj59 = properties53.setProperty("", "hi!");
        int int60 = properties53.size();
        java.lang.Object obj61 = properties0.replace((java.lang.Object) properties25, (java.lang.Object) properties53);
        java.util.Collection<java.lang.Object> objCollection62 = properties25.values();
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(objEnumeration3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(objSet5);
        org.junit.Assert.assertNotNull(properties13);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 50 + "'", int14 == 50);
        org.junit.Assert.assertNull(obj17);
        org.junit.Assert.assertNotNull(objEnumeration18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(objSet20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNull(obj23);
        org.junit.Assert.assertNull(obj27);
        org.junit.Assert.assertNotNull(objEnumeration28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNotNull(objSet30);
        org.junit.Assert.assertNotNull(objEnumeration31);
        org.junit.Assert.assertNotNull(objEnumeration32);
        org.junit.Assert.assertNull(obj35);
        org.junit.Assert.assertNotNull(objEnumeration36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertNotNull(objSet38);
        org.junit.Assert.assertNotNull(objEnumeration39);
        org.junit.Assert.assertNull(str41);
        org.junit.Assert.assertNull(str43);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNull(obj55);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertNull(obj59);
        org.junit.Assert.assertTrue("'" + int60 + "' != '" + 1 + "'", int60 == 1);
        org.junit.Assert.assertNull(obj61);
        org.junit.Assert.assertNotNull(objCollection62);
    }

    @Test
    public void test5237() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test5237");
        java.util.Properties properties0 = new java.util.Properties();
        java.util.Properties properties1 = new java.util.Properties();
        java.lang.Object obj3 = properties1.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet4 = properties1.stringPropertyNames();
        boolean boolean5 = properties0.containsValue((java.lang.Object) properties1);
        java.util.Collection<java.lang.Object> objCollection6 = properties0.values();
        java.util.Properties properties8 = new java.util.Properties();
        java.lang.Object obj10 = properties8.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration11 = properties8.elements();
        boolean boolean12 = properties8.isEmpty();
        java.util.Set<java.lang.Object> objSet13 = properties8.keySet();
        java.lang.Object obj14 = properties0.putIfAbsent((java.lang.Object) "hi!", (java.lang.Object) objSet13);
        java.util.Set<java.lang.Object> objSet15 = properties0.keySet();
        java.util.Set<java.lang.Object> objSet16 = properties0.keySet();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet17 = properties0.entrySet();
        java.util.Properties properties18 = new java.util.Properties();
        java.lang.Object obj20 = properties18.remove((java.lang.Object) 0.0d);
        boolean boolean21 = properties18.isEmpty();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties22 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties22.setSerialJtaTransactions(false);
        atomikosProperties22.setThreadedTwoPhaseCommit(true);
        atomikosProperties22.setThreadedTwoPhaseCommit(true);
        java.util.Properties properties29 = atomikosProperties22.asProperties();
        int int30 = atomikosProperties22.getMaxActives();
        atomikosProperties22.setService("hi!");
        java.lang.Object obj33 = properties18.get((java.lang.Object) atomikosProperties22);
        boolean boolean34 = properties0.containsValue((java.lang.Object) atomikosProperties22);
        atomikosProperties22.setDefaultJtaTimeout((long) 3);
        org.junit.Assert.assertNull(obj3);
        org.junit.Assert.assertNotNull(strSet4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(objCollection6);
        org.junit.Assert.assertNull(obj10);
        org.junit.Assert.assertNotNull(objEnumeration11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(objSet13);
        org.junit.Assert.assertNull(obj14);
        org.junit.Assert.assertNotNull(objSet15);
        org.junit.Assert.assertNotNull(objSet16);
        org.junit.Assert.assertNotNull(objEntrySet17);
        org.junit.Assert.assertNull(obj20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(properties29);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 50 + "'", int30 == 50);
        org.junit.Assert.assertNull(obj33);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
    }

    @Test
    public void test5238() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test5238");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setSerialJtaTransactions(false);
        atomikosProperties0.setThreadedTwoPhaseCommit(true);
        atomikosProperties0.setEnableLogging(false);
        atomikosProperties0.setForceShutdownOnVmExit(true);
        boolean boolean9 = atomikosProperties0.isSerialJtaTransactions();
        java.util.Properties properties10 = atomikosProperties0.asProperties();
        java.util.Enumeration<java.lang.Object> objEnumeration11 = properties10.keys();
        boolean boolean12 = properties10.isEmpty();
        java.util.Set<java.lang.Object> objSet13 = properties10.keySet();
        int int14 = properties10.size();
        java.util.Set<java.lang.String> strSet15 = properties10.stringPropertyNames();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties16 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties16.setSerialJtaTransactions(false);
        boolean boolean19 = atomikosProperties16.isSerialJtaTransactions();
        boolean boolean20 = atomikosProperties16.isEnableLogging();
        atomikosProperties16.setService("");
        java.util.Properties properties23 = atomikosProperties16.asProperties();
        long long24 = atomikosProperties16.getCheckpointInterval();
        java.lang.String str25 = atomikosProperties16.getLogBaseDir();
        java.lang.String str26 = atomikosProperties16.getService();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties27 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties27.setSerialJtaTransactions(false);
        atomikosProperties27.setThreadedTwoPhaseCommit(true);
        boolean boolean32 = atomikosProperties27.isForceShutdownOnVmExit();
        java.lang.String str33 = atomikosProperties27.getTransactionManagerUniqueName();
        java.lang.String str34 = atomikosProperties27.getService();
        java.lang.Object obj35 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean36 = properties10.replace((java.lang.Object) atomikosProperties16, (java.lang.Object) atomikosProperties27, obj35);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(properties10);
        org.junit.Assert.assertNotNull(objEnumeration11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(objSet13);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 9 + "'", int14 == 9);
        org.junit.Assert.assertNotNull(strSet15);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNotNull(properties23);
        org.junit.Assert.assertTrue("'" + long24 + "' != '" + 500L + "'", long24 == 500L);
        org.junit.Assert.assertNull(str25);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "" + "'", str26, "");
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNull(str33);
        org.junit.Assert.assertNull(str34);
    }

    @Test
    public void test5239() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test5239");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration3 = properties0.elements();
        int int4 = properties0.size();
        java.util.Properties properties5 = new java.util.Properties();
        java.lang.Object obj7 = properties5.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration8 = properties5.elements();
        boolean boolean9 = properties5.isEmpty();
        java.util.Set<java.lang.Object> objSet10 = properties5.keySet();
        boolean boolean11 = properties0.containsKey((java.lang.Object) objSet10);
        java.util.Enumeration<java.lang.Object> objEnumeration12 = properties0.keys();
        java.util.Properties properties13 = new java.util.Properties();
        java.lang.Object obj15 = properties13.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration16 = properties13.elements();
        boolean boolean17 = properties13.isEmpty();
        java.util.Set<java.lang.Object> objSet18 = properties13.keySet();
        java.util.Enumeration<java.lang.Object> objEnumeration19 = properties13.keys();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet20 = properties13.entrySet();
        boolean boolean22 = properties0.remove((java.lang.Object) properties13, (java.lang.Object) 1.0f);
        java.lang.Object obj23 = properties13.clone();
        java.util.Properties properties24 = new java.util.Properties();
        java.lang.Object obj26 = properties24.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration27 = properties24.elements();
        boolean boolean28 = properties24.isEmpty();
        java.lang.Object obj31 = properties24.setProperty("tmlog", "");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties32 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties32.setSerialJtaTransactions(false);
        boolean boolean35 = atomikosProperties32.isSerialJtaTransactions();
        atomikosProperties32.setTransactionManagerUniqueName("hi!");
        atomikosProperties32.setForceShutdownOnVmExit(false);
        atomikosProperties32.setDefaultJtaTimeout((long) (byte) 10);
        java.lang.String str42 = atomikosProperties32.getTransactionManagerUniqueName();
        java.util.Properties properties43 = new java.util.Properties();
        java.util.Properties properties44 = new java.util.Properties();
        java.lang.Object obj46 = properties44.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet47 = properties44.stringPropertyNames();
        boolean boolean48 = properties43.containsValue((java.lang.Object) properties44);
        java.util.Collection<java.lang.Object> objCollection49 = properties43.values();
        java.util.Properties properties51 = new java.util.Properties();
        java.lang.Object obj53 = properties51.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration54 = properties51.elements();
        boolean boolean55 = properties51.isEmpty();
        java.util.Set<java.lang.Object> objSet56 = properties51.keySet();
        java.lang.Object obj57 = properties43.putIfAbsent((java.lang.Object) "hi!", (java.lang.Object) objSet56);
        java.util.Set<java.lang.Object> objSet58 = properties43.keySet();
        java.util.Set<java.lang.Object> objSet59 = properties43.keySet();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet60 = properties43.entrySet();
        java.util.Set<java.lang.Object> objSet61 = properties43.keySet();
        java.lang.Object obj62 = properties24.replace((java.lang.Object) atomikosProperties32, (java.lang.Object) properties43);
        boolean boolean63 = properties13.containsKey((java.lang.Object) properties43);
        java.util.Enumeration<?> wildcardEnumeration64 = properties43.propertyNames();
        java.util.Enumeration<java.lang.Object> objEnumeration65 = properties43.elements();
        java.io.OutputStream outputStream66 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties43.storeToXML(outputStream66, "{hi!=[], {=hi!}={com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=false, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.tm_unique_name=tmlog, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}}", "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=false, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=true, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(objEnumeration3);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNull(obj7);
        org.junit.Assert.assertNotNull(objEnumeration8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertNotNull(objSet10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(objEnumeration12);
        org.junit.Assert.assertNull(obj15);
        org.junit.Assert.assertNotNull(objEnumeration16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(objSet18);
        org.junit.Assert.assertNotNull(objEnumeration19);
        org.junit.Assert.assertNotNull(objEntrySet20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(obj23);
        org.junit.Assert.assertEquals(obj23.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj23), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj23), "{}");
        org.junit.Assert.assertNull(obj26);
        org.junit.Assert.assertNotNull(objEnumeration27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNull(obj31);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "hi!" + "'", str42, "hi!");
        org.junit.Assert.assertNull(obj46);
        org.junit.Assert.assertNotNull(strSet47);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNotNull(objCollection49);
        org.junit.Assert.assertNull(obj53);
        org.junit.Assert.assertNotNull(objEnumeration54);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertNotNull(objSet56);
        org.junit.Assert.assertNull(obj57);
        org.junit.Assert.assertNotNull(objSet58);
        org.junit.Assert.assertNotNull(objSet59);
        org.junit.Assert.assertNotNull(objEntrySet60);
        org.junit.Assert.assertNotNull(objSet61);
        org.junit.Assert.assertNull(obj62);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertNotNull(wildcardEnumeration64);
        org.junit.Assert.assertNotNull(objEnumeration65);
    }

    @Test
    public void test5240() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test5240");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setSerialJtaTransactions(false);
        boolean boolean3 = atomikosProperties0.isSerialJtaTransactions();
        java.lang.String str4 = atomikosProperties0.getService();
        java.util.Properties properties5 = atomikosProperties0.asProperties();
        atomikosProperties0.setMaxTimeout(0L);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertNotNull(properties5);
    }

    @Test
    public void test5241() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test5241");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        boolean boolean4 = properties0.containsValue((java.lang.Object) "hi!");
        java.lang.String str6 = properties0.getProperty("hi!");
        java.util.Enumeration<?> wildcardEnumeration7 = properties0.propertyNames();
        java.lang.String str9 = properties0.getProperty("{{}={}}");
        java.lang.String str10 = properties0.toString();
        java.util.Properties properties11 = new java.util.Properties();
        boolean boolean13 = properties11.contains((java.lang.Object) 100.0d);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties14 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties14.setSerialJtaTransactions(false);
        atomikosProperties14.setThreadedTwoPhaseCommit(true);
        atomikosProperties14.setSerialJtaTransactions(false);
        java.lang.String str21 = atomikosProperties14.getService();
        boolean boolean22 = properties11.containsKey((java.lang.Object) atomikosProperties14);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties23 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties23.setSerialJtaTransactions(false);
        atomikosProperties23.setThreadedTwoPhaseCommit(true);
        atomikosProperties23.setMaxTimeout((long) '#');
        boolean boolean30 = atomikosProperties23.isEnableLogging();
        atomikosProperties23.setCheckpointInterval((long) 100);
        atomikosProperties23.setForceShutdownOnVmExit(false);
        boolean boolean35 = properties11.containsValue((java.lang.Object) atomikosProperties23);
        atomikosProperties23.setService("{=hi!}");
        java.util.Properties properties38 = atomikosProperties23.asProperties();
        java.lang.Object obj39 = properties0.get((java.lang.Object) atomikosProperties23);
        int int40 = atomikosProperties23.getMaxActives();
        long long41 = atomikosProperties23.getDefaultJtaTimeout();
        atomikosProperties23.setLogBaseName("{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=false, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.max_actives=2, com.atomikos.icatch.log_base_name=tmlog}");
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertNotNull(wildcardEnumeration7);
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "{}" + "'", str10, "{}");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNull(str21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(properties38);
        org.junit.Assert.assertNull(obj39);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 50 + "'", int40 == 50);
        org.junit.Assert.assertTrue("'" + long41 + "' != '" + 10000L + "'", long41 == 10000L);
    }

    @Test
    public void test5242() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test5242");
        java.util.Properties properties0 = new java.util.Properties();
        java.util.Properties properties1 = new java.util.Properties();
        java.lang.Object obj3 = properties1.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet4 = properties1.stringPropertyNames();
        boolean boolean5 = properties0.containsValue((java.lang.Object) properties1);
        boolean boolean6 = properties1.isEmpty();
        java.util.Properties properties7 = new java.util.Properties(properties1);
        java.util.Properties properties8 = new java.util.Properties();
        java.lang.Object obj10 = properties8.remove((java.lang.Object) 0.0d);
        boolean boolean11 = properties8.isEmpty();
        java.util.Enumeration<java.lang.Object> objEnumeration12 = properties8.elements();
        java.util.Enumeration<java.lang.Object> objEnumeration13 = properties8.elements();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties14 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties14.setSerialJtaTransactions(false);
        atomikosProperties14.setThreadedTwoPhaseCommit(true);
        atomikosProperties14.setMaxTimeout((long) '#');
        boolean boolean21 = atomikosProperties14.isForceShutdownOnVmExit();
        int int22 = atomikosProperties14.getMaxActives();
        java.lang.Object obj23 = properties8.remove((java.lang.Object) int22);
        java.util.Collection<java.lang.Object> objCollection24 = properties8.values();
        java.util.Properties properties25 = new java.util.Properties();
        java.lang.Object obj27 = properties25.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration28 = properties25.elements();
        boolean boolean29 = properties25.isEmpty();
        java.util.Set<java.lang.Object> objSet30 = properties25.keySet();
        java.util.Enumeration<java.lang.Object> objEnumeration31 = properties25.keys();
        java.util.Enumeration<java.lang.Object> objEnumeration32 = properties25.elements();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties33 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties33.setSerialJtaTransactions(false);
        boolean boolean36 = atomikosProperties33.isSerialJtaTransactions();
        java.lang.String str37 = atomikosProperties33.getService();
        boolean boolean38 = atomikosProperties33.isEnableLogging();
        atomikosProperties33.setCheckpointInterval((long) (byte) 100);
        java.lang.String str41 = atomikosProperties33.getLogBaseName();
        boolean boolean42 = properties25.contains((java.lang.Object) atomikosProperties33);
        java.lang.Object obj43 = properties25.clone();
        properties25.clear();
        java.lang.Object obj47 = properties25.setProperty("{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=100, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=35, com.atomikos.icatch.threaded_2pc=true, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}", "{hi!=[], {}={}}");
        properties8.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties25);
        java.util.Properties properties49 = new java.util.Properties(properties25);
        java.util.Properties properties50 = new java.util.Properties();
        java.lang.Object obj52 = properties50.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration53 = properties50.elements();
        boolean boolean54 = properties50.isEmpty();
        java.util.Enumeration<java.lang.Object> objEnumeration55 = properties50.elements();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet56 = properties50.entrySet();
        java.util.Set<java.lang.String> strSet57 = properties50.stringPropertyNames();
        boolean boolean58 = properties50.isEmpty();
        java.util.Set<java.lang.Object> objSet59 = properties50.keySet();
        java.util.Enumeration<java.lang.Object> objEnumeration60 = properties50.keys();
        java.lang.Object obj61 = properties7.put((java.lang.Object) properties49, (java.lang.Object) properties50);
        java.lang.Class<?> wildcardClass62 = properties50.getClass();
        org.junit.Assert.assertNull(obj3);
        org.junit.Assert.assertNotNull(strSet4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNull(obj10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNotNull(objEnumeration12);
        org.junit.Assert.assertNotNull(objEnumeration13);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 50 + "'", int22 == 50);
        org.junit.Assert.assertNull(obj23);
        org.junit.Assert.assertNotNull(objCollection24);
        org.junit.Assert.assertNull(obj27);
        org.junit.Assert.assertNotNull(objEnumeration28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNotNull(objSet30);
        org.junit.Assert.assertNotNull(objEnumeration31);
        org.junit.Assert.assertNotNull(objEnumeration32);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNull(str37);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "tmlog" + "'", str41, "tmlog");
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(obj43);
        org.junit.Assert.assertEquals(obj43.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj43), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj43), "{}");
        org.junit.Assert.assertNull(obj47);
        org.junit.Assert.assertNull(obj52);
        org.junit.Assert.assertNotNull(objEnumeration53);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertNotNull(objEnumeration55);
        org.junit.Assert.assertNotNull(objEntrySet56);
        org.junit.Assert.assertNotNull(strSet57);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertNotNull(objSet59);
        org.junit.Assert.assertNotNull(objEnumeration60);
        org.junit.Assert.assertNull(obj61);
        org.junit.Assert.assertNotNull(wildcardClass62);
    }

    @Test
    public void test5243() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test5243");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration3 = properties0.elements();
        boolean boolean4 = properties0.isEmpty();
        java.util.Set<java.lang.Object> objSet5 = properties0.keySet();
        boolean boolean6 = properties0.isEmpty();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet7 = properties0.entrySet();
        java.util.Properties properties8 = new java.util.Properties();
        java.lang.Object obj10 = properties8.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration11 = properties8.elements();
        boolean boolean12 = properties8.isEmpty();
        java.util.Set<java.lang.Object> objSet13 = properties8.keySet();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties14 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties14.setSerialJtaTransactions(false);
        atomikosProperties14.setThreadedTwoPhaseCommit(true);
        atomikosProperties14.setThreadedTwoPhaseCommit(true);
        java.util.Properties properties21 = atomikosProperties14.asProperties();
        int int22 = atomikosProperties14.getMaxActives();
        java.util.Properties properties23 = new java.util.Properties();
        java.lang.Object obj25 = properties23.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration26 = properties23.elements();
        boolean boolean27 = properties23.isEmpty();
        java.util.Set<java.lang.Object> objSet28 = properties23.keySet();
        boolean boolean30 = properties23.containsKey((java.lang.Object) (-1.0f));
        java.lang.Object obj31 = properties8.put((java.lang.Object) atomikosProperties14, (java.lang.Object) properties23);
        java.lang.String str32 = properties8.toString();
        boolean boolean34 = properties0.remove((java.lang.Object) str32, (java.lang.Object) 1.0d);
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet35 = properties0.entrySet();
        java.lang.Class<?> wildcardClass36 = properties0.getClass();
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(objEnumeration3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(objSet5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(objEntrySet7);
        org.junit.Assert.assertNull(obj10);
        org.junit.Assert.assertNotNull(objEnumeration11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(objSet13);
        org.junit.Assert.assertNotNull(properties21);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 50 + "'", int22 == 50);
        org.junit.Assert.assertNull(obj25);
        org.junit.Assert.assertNotNull(objEnumeration26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNotNull(objSet28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNull(obj31);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(objEntrySet35);
        org.junit.Assert.assertNotNull(wildcardClass36);
    }

    @Test
    public void test5244() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test5244");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet3 = properties0.stringPropertyNames();
        java.util.Properties properties4 = new java.util.Properties();
        java.util.Properties properties5 = new java.util.Properties();
        java.lang.Object obj7 = properties5.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet8 = properties5.stringPropertyNames();
        boolean boolean9 = properties4.containsValue((java.lang.Object) properties5);
        java.util.Collection<java.lang.Object> objCollection10 = properties4.values();
        java.util.Enumeration<?> wildcardEnumeration11 = properties4.propertyNames();
        java.lang.Object obj13 = properties0.put((java.lang.Object) wildcardEnumeration11, (java.lang.Object) 10.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration14 = properties0.elements();
        java.util.Properties properties16 = new java.util.Properties();
        java.lang.Object obj18 = properties16.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration19 = properties16.elements();
        boolean boolean20 = properties16.isEmpty();
        java.util.Set<java.lang.Object> objSet21 = properties16.keySet();
        java.util.Enumeration<java.lang.Object> objEnumeration22 = properties16.keys();
        boolean boolean24 = properties16.equals((java.lang.Object) "");
        java.lang.String str25 = properties16.toString();
        java.lang.Object obj26 = properties0.put((java.lang.Object) 'a', (java.lang.Object) properties16);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties28 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties28.setSerialJtaTransactions(false);
        atomikosProperties28.setThreadedTwoPhaseCommit(true);
        atomikosProperties28.setMaxTimeout((long) '#');
        java.lang.String str35 = atomikosProperties28.getLogBaseDir();
        java.lang.Class<?> wildcardClass36 = atomikosProperties28.getClass();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties37 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties37.setSerialJtaTransactions(false);
        boolean boolean40 = atomikosProperties37.isSerialJtaTransactions();
        java.util.Properties properties41 = atomikosProperties37.asProperties();
        java.lang.Object obj44 = properties41.setProperty("hi!", "");
        java.util.Properties properties45 = new java.util.Properties(properties41);
        boolean boolean46 = properties0.replace((java.lang.Object) "{}", (java.lang.Object) atomikosProperties28, (java.lang.Object) properties41);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties47 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties47.setSerialJtaTransactions(false);
        boolean boolean50 = atomikosProperties47.isThreadedTwoPhaseCommit();
        boolean boolean51 = atomikosProperties47.isForceShutdownOnVmExit();
        boolean boolean52 = properties41.contains((java.lang.Object) atomikosProperties47);
        java.util.Set<java.lang.Object> objSet53 = properties41.keySet();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties54 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties54.setSerialJtaTransactions(false);
        atomikosProperties54.setThreadedTwoPhaseCommit(true);
        atomikosProperties54.setMaxTimeout((long) '#');
        boolean boolean61 = atomikosProperties54.isEnableLogging();
        atomikosProperties54.setCheckpointInterval((long) 100);
        java.lang.String str64 = atomikosProperties54.getTransactionManagerUniqueName();
        atomikosProperties54.setCheckpointInterval((long) (byte) 100);
        java.util.Properties properties67 = atomikosProperties54.asProperties();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties68 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties68.setSerialJtaTransactions(false);
        boolean boolean71 = atomikosProperties68.isSerialJtaTransactions();
        java.lang.String str72 = atomikosProperties68.getService();
        boolean boolean73 = atomikosProperties68.isEnableLogging();
        long long74 = atomikosProperties68.getMaxTimeout();
        java.util.Properties properties75 = atomikosProperties68.asProperties();
        boolean boolean76 = properties67.contains((java.lang.Object) properties75);
        properties75.clear();
        java.lang.Object obj78 = properties75.clone();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties79 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties79.setSerialJtaTransactions(false);
        atomikosProperties79.setThreadedTwoPhaseCommit(true);
        atomikosProperties79.setEnableLogging(false);
        boolean boolean86 = atomikosProperties79.isSerialJtaTransactions();
        int int87 = atomikosProperties79.getMaxActives();
        boolean boolean88 = atomikosProperties79.isEnableLogging();
        long long89 = atomikosProperties79.getCheckpointInterval();
        java.util.Properties properties90 = atomikosProperties79.asProperties();
        java.lang.Object obj91 = properties90.clone();
        java.lang.Object obj92 = properties41.put((java.lang.Object) properties75, (java.lang.Object) properties90);
        java.util.Properties properties93 = new java.util.Properties(properties75);
        java.io.OutputStream outputStream94 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties75.storeToXML(outputStream94, "{{}={}}", "");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(strSet3);
        org.junit.Assert.assertNull(obj7);
        org.junit.Assert.assertNotNull(strSet8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(objCollection10);
        org.junit.Assert.assertNotNull(wildcardEnumeration11);
        org.junit.Assert.assertNull(obj13);
        org.junit.Assert.assertNotNull(objEnumeration14);
        org.junit.Assert.assertNull(obj18);
        org.junit.Assert.assertNotNull(objEnumeration19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNotNull(objSet21);
        org.junit.Assert.assertNotNull(objEnumeration22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "{}" + "'", str25, "{}");
        org.junit.Assert.assertNull(obj26);
        org.junit.Assert.assertNull(str35);
        org.junit.Assert.assertNotNull(wildcardClass36);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(properties41);
        org.junit.Assert.assertNull(obj44);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNotNull(objSet53);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertNull(str64);
        org.junit.Assert.assertNotNull(properties67);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertNull(str72);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + true + "'", boolean73 == true);
        org.junit.Assert.assertTrue("'" + long74 + "' != '" + 300000L + "'", long74 == 300000L);
        org.junit.Assert.assertNotNull(properties75);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
        org.junit.Assert.assertNotNull(obj78);
        org.junit.Assert.assertEquals(obj78.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj78), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj78), "{}");
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + false + "'", boolean86 == false);
        org.junit.Assert.assertTrue("'" + int87 + "' != '" + 50 + "'", int87 == 50);
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + false + "'", boolean88 == false);
        org.junit.Assert.assertTrue("'" + long89 + "' != '" + 500L + "'", long89 == 500L);
        org.junit.Assert.assertNotNull(properties90);
        org.junit.Assert.assertNotNull(obj91);
// flaky:         org.junit.Assert.assertEquals(obj91.toString(), "{com.atomikos.icatch.enable_logging=false, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=false, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=true, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
// flaky:         org.junit.Assert.assertEquals(java.lang.String.valueOf(obj91), "{com.atomikos.icatch.enable_logging=false, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=false, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=true, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
// flaky:         org.junit.Assert.assertEquals(java.util.Objects.toString(obj91), "{com.atomikos.icatch.enable_logging=false, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=false, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=true, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
        org.junit.Assert.assertNull(obj92);
    }

    @Test
    public void test5245() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test5245");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        boolean boolean3 = properties0.isEmpty();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties4 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        boolean boolean5 = properties0.containsValue((java.lang.Object) atomikosProperties4);
        properties0.clear();
        java.util.Properties properties7 = new java.util.Properties();
        java.lang.Object obj9 = properties7.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration10 = properties7.elements();
        boolean boolean11 = properties7.isEmpty();
        java.util.Set<java.lang.Object> objSet12 = properties7.keySet();
        boolean boolean13 = properties7.isEmpty();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet14 = properties7.entrySet();
        java.util.Properties properties15 = new java.util.Properties();
        java.lang.Object obj17 = properties15.remove((java.lang.Object) 0.0d);
        boolean boolean18 = properties15.isEmpty();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties19 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        boolean boolean20 = properties15.containsValue((java.lang.Object) atomikosProperties19);
        java.util.Properties properties21 = new java.util.Properties();
        java.lang.Object obj23 = properties21.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration24 = properties21.elements();
        int int25 = properties21.size();
        java.util.Properties properties26 = new java.util.Properties(properties21);
        java.util.Set<java.lang.String> strSet27 = properties21.stringPropertyNames();
        java.util.Set<java.lang.String> strSet28 = properties21.stringPropertyNames();
        java.lang.Object obj29 = properties7.getOrDefault((java.lang.Object) properties15, (java.lang.Object) properties21);
        properties0.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties15);
        java.lang.Object obj33 = properties15.setProperty("{{}=tmlog}", "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=-1, com.atomikos.icatch.serial_jta_transactions=false, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=35, com.atomikos.icatch.threaded_2pc=true, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name={=hi!}}");
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNull(obj9);
        org.junit.Assert.assertNotNull(objEnumeration10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNotNull(objSet12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(objEntrySet14);
        org.junit.Assert.assertNull(obj17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNull(obj23);
        org.junit.Assert.assertNotNull(objEnumeration24);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 0 + "'", int25 == 0);
        org.junit.Assert.assertNotNull(strSet27);
        org.junit.Assert.assertNotNull(strSet28);
        org.junit.Assert.assertNotNull(obj29);
        org.junit.Assert.assertEquals(obj29.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj29), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj29), "{}");
        org.junit.Assert.assertNull(obj33);
    }

    @Test
    public void test5246() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test5246");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration3 = properties0.elements();
        boolean boolean4 = properties0.isEmpty();
        java.util.Set<java.lang.Object> objSet5 = properties0.keySet();
        boolean boolean6 = properties0.isEmpty();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet7 = properties0.entrySet();
        java.util.Properties properties8 = new java.util.Properties();
        java.lang.Object obj10 = properties8.remove((java.lang.Object) 0.0d);
        boolean boolean11 = properties8.isEmpty();
        java.lang.Object obj14 = properties8.setProperty("", "hi!");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties15 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties15.setSerialJtaTransactions(false);
        boolean boolean18 = properties0.remove((java.lang.Object) properties8, (java.lang.Object) atomikosProperties15);
        java.util.Properties properties19 = new java.util.Properties(properties8);
        int int20 = properties19.size();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties22 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties22.setSerialJtaTransactions(false);
        boolean boolean25 = atomikosProperties22.isSerialJtaTransactions();
        java.lang.String str26 = atomikosProperties22.getService();
        boolean boolean27 = atomikosProperties22.isEnableLogging();
        java.lang.String str28 = atomikosProperties22.getTransactionManagerUniqueName();
        boolean boolean29 = properties19.remove((java.lang.Object) (byte) 1, (java.lang.Object) atomikosProperties22);
        java.util.Properties properties30 = new java.util.Properties();
        java.lang.Object obj32 = properties30.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration33 = properties30.elements();
        boolean boolean34 = properties30.isEmpty();
        java.util.Enumeration<java.lang.Object> objEnumeration35 = properties30.elements();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet36 = properties30.entrySet();
        java.lang.Object obj37 = properties19.remove((java.lang.Object) objEntrySet36);
        java.lang.Object obj38 = properties19.clone();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties39 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties39.setSerialJtaTransactions(false);
        atomikosProperties39.setThreadedTwoPhaseCommit(true);
        atomikosProperties39.setMaxTimeout((long) '#');
        long long46 = atomikosProperties39.getCheckpointInterval();
        java.lang.String str47 = atomikosProperties39.getTransactionManagerUniqueName();
        atomikosProperties39.setDefaultJtaTimeout((long) 0);
        java.util.Properties properties50 = atomikosProperties39.asProperties();
        java.util.Properties properties51 = new java.util.Properties();
        java.util.Properties properties52 = new java.util.Properties();
        java.lang.Object obj54 = properties52.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet55 = properties52.stringPropertyNames();
        boolean boolean56 = properties51.containsValue((java.lang.Object) properties52);
        java.util.Collection<java.lang.Object> objCollection57 = properties51.values();
        java.util.Properties properties59 = new java.util.Properties();
        java.lang.Object obj61 = properties59.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration62 = properties59.elements();
        boolean boolean63 = properties59.isEmpty();
        java.util.Set<java.lang.Object> objSet64 = properties59.keySet();
        java.lang.Object obj65 = properties51.putIfAbsent((java.lang.Object) "hi!", (java.lang.Object) objSet64);
        java.util.Set<java.lang.Object> objSet66 = properties51.keySet();
        java.util.Set<java.lang.Object> objSet67 = properties51.keySet();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet68 = properties51.entrySet();
        java.util.Properties properties69 = new java.util.Properties();
        java.lang.Object obj71 = properties69.remove((java.lang.Object) 0.0d);
        boolean boolean72 = properties69.isEmpty();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties73 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        boolean boolean74 = properties69.containsValue((java.lang.Object) atomikosProperties73);
        java.lang.String str76 = properties69.getProperty("tmlog");
        properties51.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties69);
        boolean boolean78 = properties50.contains((java.lang.Object) properties51);
        properties19.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties50);
        java.util.Enumeration<java.lang.Object> objEnumeration80 = properties19.keys();
        java.lang.String str83 = properties19.getProperty("{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=-1, com.atomikos.icatch.serial_jta_transactions=false, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=35, com.atomikos.icatch.threaded_2pc=true, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name={=hi!}}", "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=100, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=35, com.atomikos.icatch.threaded_2pc=true, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(objEnumeration3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(objSet5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(objEntrySet7);
        org.junit.Assert.assertNull(obj10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNull(obj14);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 0 + "'", int20 == 0);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNull(str26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNull(str28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNull(obj32);
        org.junit.Assert.assertNotNull(objEnumeration33);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertNotNull(objEnumeration35);
        org.junit.Assert.assertNotNull(objEntrySet36);
        org.junit.Assert.assertNull(obj37);
        org.junit.Assert.assertNotNull(obj38);
        org.junit.Assert.assertEquals(obj38.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj38), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj38), "{}");
        org.junit.Assert.assertTrue("'" + long46 + "' != '" + 500L + "'", long46 == 500L);
        org.junit.Assert.assertNull(str47);
        org.junit.Assert.assertNotNull(properties50);
        org.junit.Assert.assertNull(obj54);
        org.junit.Assert.assertNotNull(strSet55);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertNotNull(objCollection57);
        org.junit.Assert.assertNull(obj61);
        org.junit.Assert.assertNotNull(objEnumeration62);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertNotNull(objSet64);
        org.junit.Assert.assertNull(obj65);
        org.junit.Assert.assertNotNull(objSet66);
        org.junit.Assert.assertNotNull(objSet67);
        org.junit.Assert.assertNotNull(objEntrySet68);
        org.junit.Assert.assertNull(obj71);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + true + "'", boolean72 == true);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
        org.junit.Assert.assertNull(str76);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + false + "'", boolean78 == false);
        org.junit.Assert.assertNotNull(objEnumeration80);
        org.junit.Assert.assertEquals("'" + str83 + "' != '" + "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=100, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=35, com.atomikos.icatch.threaded_2pc=true, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}" + "'", str83, "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=100, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=35, com.atomikos.icatch.threaded_2pc=true, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
    }

    @Test
    public void test5247() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test5247");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setSerialJtaTransactions(false);
        boolean boolean3 = atomikosProperties0.isSerialJtaTransactions();
        java.lang.String str4 = atomikosProperties0.getService();
        boolean boolean5 = atomikosProperties0.isEnableLogging();
        java.util.Properties properties6 = atomikosProperties0.asProperties();
        java.util.Set<java.lang.String> strSet7 = properties6.stringPropertyNames();
        boolean boolean8 = properties6.isEmpty();
        boolean boolean9 = properties6.isEmpty();
        java.util.Properties properties10 = new java.util.Properties();
        java.lang.Object obj12 = properties10.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<?> wildcardEnumeration13 = properties10.propertyNames();
        boolean boolean14 = properties6.containsValue((java.lang.Object) wildcardEnumeration13);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties15 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties15.setSerialJtaTransactions(false);
        boolean boolean18 = atomikosProperties15.isSerialJtaTransactions();
        java.lang.String str19 = atomikosProperties15.getService();
        boolean boolean20 = atomikosProperties15.isEnableLogging();
        java.util.Properties properties21 = atomikosProperties15.asProperties();
        atomikosProperties15.setForceShutdownOnVmExit(true);
        atomikosProperties15.setMaxActives((int) (short) -1);
        atomikosProperties15.setMaxTimeout((long) ' ');
        atomikosProperties15.setEnableLogging(false);
        atomikosProperties15.setService("{{}={}}");
        atomikosProperties15.setLogBaseName("{{}={}}");
        atomikosProperties15.setThreadedTwoPhaseCommit(true);
        long long36 = atomikosProperties15.getMaxTimeout();
        java.util.Properties properties37 = new java.util.Properties();
        java.lang.Object obj39 = properties37.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration40 = properties37.elements();
        boolean boolean41 = properties37.isEmpty();
        java.util.Set<java.lang.Object> objSet42 = properties37.keySet();
        java.util.Enumeration<java.lang.Object> objEnumeration43 = properties37.keys();
        java.lang.String str45 = properties37.getProperty("hi!");
        java.util.Set<java.lang.Object> objSet46 = properties37.keySet();
        java.lang.Object obj47 = properties6.replace((java.lang.Object) long36, (java.lang.Object) properties37);
        int int48 = properties6.size();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNotNull(properties6);
        org.junit.Assert.assertNotNull(strSet7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNull(obj12);
        org.junit.Assert.assertNotNull(wildcardEnumeration13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNull(str19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNotNull(properties21);
        org.junit.Assert.assertTrue("'" + long36 + "' != '" + 32L + "'", long36 == 32L);
        org.junit.Assert.assertNull(obj39);
        org.junit.Assert.assertNotNull(objEnumeration40);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertNotNull(objSet42);
        org.junit.Assert.assertNotNull(objEnumeration43);
        org.junit.Assert.assertNull(str45);
        org.junit.Assert.assertNotNull(objSet46);
        org.junit.Assert.assertNull(obj47);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 9 + "'", int48 == 9);
    }

    @Test
    public void test5248() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test5248");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration3 = properties0.elements();
        boolean boolean4 = properties0.isEmpty();
        java.util.Set<java.lang.Object> objSet5 = properties0.keySet();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties6 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties6.setSerialJtaTransactions(false);
        atomikosProperties6.setThreadedTwoPhaseCommit(true);
        atomikosProperties6.setThreadedTwoPhaseCommit(true);
        java.util.Properties properties13 = atomikosProperties6.asProperties();
        int int14 = atomikosProperties6.getMaxActives();
        java.util.Properties properties15 = new java.util.Properties();
        java.lang.Object obj17 = properties15.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration18 = properties15.elements();
        boolean boolean19 = properties15.isEmpty();
        java.util.Set<java.lang.Object> objSet20 = properties15.keySet();
        boolean boolean22 = properties15.containsKey((java.lang.Object) (-1.0f));
        java.lang.Object obj23 = properties0.put((java.lang.Object) atomikosProperties6, (java.lang.Object) properties15);
        java.lang.String str24 = atomikosProperties6.getLogBaseDir();
        java.lang.String str25 = atomikosProperties6.getTransactionManagerUniqueName();
        atomikosProperties6.setService("{}");
        boolean boolean28 = atomikosProperties6.isEnableLogging();
        long long29 = atomikosProperties6.getMaxTimeout();
        java.lang.String str30 = atomikosProperties6.getLogBaseName();
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(objEnumeration3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(objSet5);
        org.junit.Assert.assertNotNull(properties13);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 50 + "'", int14 == 50);
        org.junit.Assert.assertNull(obj17);
        org.junit.Assert.assertNotNull(objEnumeration18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(objSet20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNull(obj23);
        org.junit.Assert.assertNull(str24);
        org.junit.Assert.assertNull(str25);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertTrue("'" + long29 + "' != '" + 300000L + "'", long29 == 300000L);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "tmlog" + "'", str30, "tmlog");
    }

    @Test
    public void test5249() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test5249");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration3 = properties0.elements();
        boolean boolean4 = properties0.isEmpty();
        java.util.Set<java.lang.Object> objSet5 = properties0.keySet();
        java.util.Enumeration<java.lang.Object> objEnumeration6 = properties0.keys();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet7 = properties0.entrySet();
        java.util.Properties properties8 = new java.util.Properties(properties0);
        java.util.Set<java.lang.Object> objSet9 = properties0.keySet();
        java.io.PrintWriter printWriter10 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties0.list(printWriter10);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(objEnumeration3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(objSet5);
        org.junit.Assert.assertNotNull(objEnumeration6);
        org.junit.Assert.assertNotNull(objEntrySet7);
        org.junit.Assert.assertNotNull(objSet9);
    }

    @Test
    public void test5250() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test5250");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setSerialJtaTransactions(false);
        atomikosProperties0.setThreadedTwoPhaseCommit(true);
        atomikosProperties0.setThreadedTwoPhaseCommit(true);
        java.util.Properties properties7 = atomikosProperties0.asProperties();
        int int8 = atomikosProperties0.getMaxActives();
        atomikosProperties0.setService("hi!");
        long long11 = atomikosProperties0.getMaxTimeout();
        atomikosProperties0.setTransactionManagerUniqueName("hi!");
        atomikosProperties0.setEnableLogging(false);
        atomikosProperties0.setMaxActives((int) 'a');
        boolean boolean18 = atomikosProperties0.isEnableLogging();
        long long19 = atomikosProperties0.getMaxTimeout();
        boolean boolean20 = atomikosProperties0.isForceShutdownOnVmExit();
        java.lang.String str21 = atomikosProperties0.getLogBaseName();
        org.junit.Assert.assertNotNull(properties7);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 50 + "'", int8 == 50);
        org.junit.Assert.assertTrue("'" + long11 + "' != '" + 300000L + "'", long11 == 300000L);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + long19 + "' != '" + 300000L + "'", long19 == 300000L);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "tmlog" + "'", str21, "tmlog");
    }

    @Test
    public void test5251() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test5251");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration3 = properties0.elements();
        int int4 = properties0.size();
        java.util.Properties properties5 = new java.util.Properties(properties0);
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet6 = properties0.entrySet();
        java.lang.Object obj9 = properties0.setProperty("", "{}");
        java.util.Properties properties10 = new java.util.Properties();
        java.lang.Object obj12 = properties10.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration13 = properties10.elements();
        boolean boolean14 = properties10.isEmpty();
        java.util.Set<java.lang.Object> objSet15 = properties10.keySet();
        boolean boolean16 = properties10.isEmpty();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet17 = properties10.entrySet();
        java.util.Properties properties18 = new java.util.Properties();
        java.lang.Object obj20 = properties18.remove((java.lang.Object) 0.0d);
        boolean boolean21 = properties18.isEmpty();
        java.lang.Object obj24 = properties18.setProperty("", "hi!");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties25 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties25.setSerialJtaTransactions(false);
        boolean boolean28 = properties10.remove((java.lang.Object) properties18, (java.lang.Object) atomikosProperties25);
        java.util.Properties properties29 = new java.util.Properties(properties18);
        int int30 = properties29.size();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties32 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties32.setSerialJtaTransactions(false);
        boolean boolean35 = atomikosProperties32.isSerialJtaTransactions();
        java.lang.String str36 = atomikosProperties32.getService();
        boolean boolean37 = atomikosProperties32.isEnableLogging();
        java.lang.String str38 = atomikosProperties32.getTransactionManagerUniqueName();
        boolean boolean39 = properties29.remove((java.lang.Object) (byte) 1, (java.lang.Object) atomikosProperties32);
        java.util.Properties properties40 = new java.util.Properties();
        java.lang.Object obj42 = properties40.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration43 = properties40.elements();
        boolean boolean44 = properties40.isEmpty();
        java.util.Enumeration<java.lang.Object> objEnumeration45 = properties40.elements();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet46 = properties40.entrySet();
        java.lang.Object obj47 = properties29.remove((java.lang.Object) objEntrySet46);
        boolean boolean48 = properties29.isEmpty();
        java.util.Properties properties49 = new java.util.Properties();
        java.lang.Object obj51 = properties49.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration52 = properties49.elements();
        boolean boolean53 = properties49.isEmpty();
        java.util.Set<java.lang.Object> objSet54 = properties49.keySet();
        java.util.Enumeration<java.lang.Object> objEnumeration55 = properties49.keys();
        java.lang.String str57 = properties49.getProperty("hi!");
        java.lang.String str59 = properties49.getProperty("");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties60 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties60.setSerialJtaTransactions(false);
        atomikosProperties60.setThreadedTwoPhaseCommit(true);
        atomikosProperties60.setEnableLogging(false);
        boolean boolean67 = properties49.containsKey((java.lang.Object) atomikosProperties60);
        atomikosProperties60.setTransactionManagerUniqueName("tmlog");
        boolean boolean70 = atomikosProperties60.isForceShutdownOnVmExit();
        java.lang.Object obj71 = properties0.put((java.lang.Object) boolean48, (java.lang.Object) atomikosProperties60);
        java.lang.String str72 = atomikosProperties60.getService();
        atomikosProperties60.setEnableLogging(false);
        boolean boolean75 = atomikosProperties60.isForceShutdownOnVmExit();
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(objEnumeration3);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNotNull(objEntrySet6);
        org.junit.Assert.assertNull(obj9);
        org.junit.Assert.assertNull(obj12);
        org.junit.Assert.assertNotNull(objEnumeration13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(objSet15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(objEntrySet17);
        org.junit.Assert.assertNull(obj20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNull(obj24);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 0 + "'", int30 == 0);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNull(str36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertNull(str38);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNull(obj42);
        org.junit.Assert.assertNotNull(objEnumeration43);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertNotNull(objEnumeration45);
        org.junit.Assert.assertNotNull(objEntrySet46);
        org.junit.Assert.assertNull(obj47);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertNull(obj51);
        org.junit.Assert.assertNotNull(objEnumeration52);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertNotNull(objSet54);
        org.junit.Assert.assertNotNull(objEnumeration55);
        org.junit.Assert.assertNull(str57);
        org.junit.Assert.assertNull(str59);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertNull(obj71);
        org.junit.Assert.assertNull(str72);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
    }

    @Test
    public void test5252() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test5252");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setSerialJtaTransactions(false);
        atomikosProperties0.setThreadedTwoPhaseCommit(true);
        atomikosProperties0.setMaxTimeout((long) '#');
        long long7 = atomikosProperties0.getCheckpointInterval();
        java.lang.String str8 = atomikosProperties0.getTransactionManagerUniqueName();
        atomikosProperties0.setTransactionManagerUniqueName("{=hi!}");
        boolean boolean11 = atomikosProperties0.isEnableLogging();
        int int12 = atomikosProperties0.getMaxActives();
        atomikosProperties0.setCheckpointInterval((long) (short) 10);
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + 500L + "'", long7 == 500L);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 50 + "'", int12 == 50);
    }

    @Test
    public void test5253() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test5253");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setSerialJtaTransactions(false);
        atomikosProperties0.setThreadedTwoPhaseCommit(true);
        atomikosProperties0.setMaxTimeout((long) '#');
        boolean boolean7 = atomikosProperties0.isEnableLogging();
        long long8 = atomikosProperties0.getCheckpointInterval();
        boolean boolean9 = atomikosProperties0.isThreadedTwoPhaseCommit();
        int int10 = atomikosProperties0.getMaxActives();
        atomikosProperties0.setMaxActives(100);
        long long13 = atomikosProperties0.getDefaultJtaTimeout();
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertTrue("'" + long8 + "' != '" + 500L + "'", long8 == 500L);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 50 + "'", int10 == 50);
        org.junit.Assert.assertTrue("'" + long13 + "' != '" + 10000L + "'", long13 == 10000L);
    }

    @Test
    public void test5254() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test5254");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setSerialJtaTransactions(false);
        atomikosProperties0.setThreadedTwoPhaseCommit(true);
        atomikosProperties0.setEnableLogging(false);
        boolean boolean7 = atomikosProperties0.isSerialJtaTransactions();
        int int8 = atomikosProperties0.getMaxActives();
        boolean boolean9 = atomikosProperties0.isEnableLogging();
        atomikosProperties0.setDefaultJtaTimeout(10000L);
        java.util.Properties properties12 = atomikosProperties0.asProperties();
        java.util.Properties properties13 = atomikosProperties0.asProperties();
        boolean boolean14 = atomikosProperties0.isForceShutdownOnVmExit();
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 50 + "'", int8 == 50);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(properties12);
        org.junit.Assert.assertNotNull(properties13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
    }

    @Test
    public void test5255() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test5255");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet3 = properties0.stringPropertyNames();
        java.util.Properties properties4 = new java.util.Properties();
        java.util.Properties properties5 = new java.util.Properties();
        java.lang.Object obj7 = properties5.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet8 = properties5.stringPropertyNames();
        boolean boolean9 = properties4.containsValue((java.lang.Object) properties5);
        java.util.Collection<java.lang.Object> objCollection10 = properties4.values();
        java.util.Enumeration<?> wildcardEnumeration11 = properties4.propertyNames();
        java.lang.Object obj13 = properties0.put((java.lang.Object) wildcardEnumeration11, (java.lang.Object) 10.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration14 = properties0.elements();
        java.util.Enumeration<java.lang.Object> objEnumeration15 = properties0.elements();
        java.util.Properties properties16 = new java.util.Properties();
        java.util.Collection<java.lang.Object> objCollection17 = properties16.values();
        java.util.Enumeration<java.lang.Object> objEnumeration18 = properties16.keys();
        java.util.Properties properties19 = new java.util.Properties();
        java.lang.Object obj21 = properties19.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration22 = properties19.elements();
        boolean boolean23 = properties19.isEmpty();
        java.util.Set<java.lang.Object> objSet24 = properties19.keySet();
        boolean boolean26 = properties19.containsKey((java.lang.Object) (-1.0f));
        java.util.Collection<java.lang.Object> objCollection27 = properties19.values();
        java.lang.Object obj28 = properties19.clone();
        boolean boolean29 = properties16.equals((java.lang.Object) properties19);
        java.util.Properties properties30 = new java.util.Properties();
        java.util.Properties properties31 = new java.util.Properties();
        java.lang.Object obj33 = properties31.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet34 = properties31.stringPropertyNames();
        boolean boolean35 = properties30.containsValue((java.lang.Object) properties31);
        java.util.Collection<java.lang.Object> objCollection36 = properties30.values();
        java.util.Properties properties38 = new java.util.Properties();
        java.lang.Object obj40 = properties38.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration41 = properties38.elements();
        boolean boolean42 = properties38.isEmpty();
        java.util.Set<java.lang.Object> objSet43 = properties38.keySet();
        java.lang.Object obj44 = properties30.putIfAbsent((java.lang.Object) "hi!", (java.lang.Object) objSet43);
        java.util.Set<java.lang.Object> objSet45 = properties30.keySet();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties46 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties46.setSerialJtaTransactions(false);
        atomikosProperties46.setThreadedTwoPhaseCommit(true);
        atomikosProperties46.setMaxTimeout((long) '#');
        boolean boolean53 = atomikosProperties46.isEnableLogging();
        atomikosProperties46.setCheckpointInterval((long) (byte) -1);
        atomikosProperties46.setEnableLogging(true);
        java.util.Properties properties58 = new java.util.Properties();
        java.lang.Object obj60 = properties58.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration61 = properties58.elements();
        boolean boolean62 = properties58.isEmpty();
        java.util.Enumeration<java.lang.Object> objEnumeration63 = properties58.elements();
        java.lang.Object obj64 = properties30.replace((java.lang.Object) true, (java.lang.Object) properties58);
        java.util.Properties properties65 = new java.util.Properties();
        java.util.Properties properties66 = new java.util.Properties();
        java.lang.Object obj68 = properties66.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet69 = properties66.stringPropertyNames();
        boolean boolean70 = properties65.containsValue((java.lang.Object) properties66);
        java.util.Collection<java.lang.Object> objCollection71 = properties65.values();
        java.util.Properties properties73 = new java.util.Properties();
        java.lang.Object obj75 = properties73.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration76 = properties73.elements();
        boolean boolean77 = properties73.isEmpty();
        java.util.Set<java.lang.Object> objSet78 = properties73.keySet();
        java.lang.Object obj79 = properties65.putIfAbsent((java.lang.Object) "hi!", (java.lang.Object) objSet78);
        java.util.Set<java.lang.Object> objSet80 = properties65.keySet();
        java.lang.Object obj81 = properties16.putIfAbsent((java.lang.Object) properties30, (java.lang.Object) properties65);
        java.util.Set<java.lang.String> strSet82 = properties30.stringPropertyNames();
        java.lang.Object obj83 = properties0.remove((java.lang.Object) properties30);
        java.io.OutputStream outputStream84 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties30.save(outputStream84, "{com.atomikos.icatch.enable_logging=false, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=false, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(strSet3);
        org.junit.Assert.assertNull(obj7);
        org.junit.Assert.assertNotNull(strSet8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(objCollection10);
        org.junit.Assert.assertNotNull(wildcardEnumeration11);
        org.junit.Assert.assertNull(obj13);
        org.junit.Assert.assertNotNull(objEnumeration14);
        org.junit.Assert.assertNotNull(objEnumeration15);
        org.junit.Assert.assertNotNull(objCollection17);
        org.junit.Assert.assertNotNull(objEnumeration18);
        org.junit.Assert.assertNull(obj21);
        org.junit.Assert.assertNotNull(objEnumeration22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNotNull(objSet24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(objCollection27);
        org.junit.Assert.assertNotNull(obj28);
        org.junit.Assert.assertEquals(obj28.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj28), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj28), "{}");
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNull(obj33);
        org.junit.Assert.assertNotNull(strSet34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(objCollection36);
        org.junit.Assert.assertNull(obj40);
        org.junit.Assert.assertNotNull(objEnumeration41);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertNotNull(objSet43);
        org.junit.Assert.assertNull(obj44);
        org.junit.Assert.assertNotNull(objSet45);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertNull(obj60);
        org.junit.Assert.assertNotNull(objEnumeration61);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + true + "'", boolean62 == true);
        org.junit.Assert.assertNotNull(objEnumeration63);
        org.junit.Assert.assertNull(obj64);
        org.junit.Assert.assertNull(obj68);
        org.junit.Assert.assertNotNull(strSet69);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertNotNull(objCollection71);
        org.junit.Assert.assertNull(obj75);
        org.junit.Assert.assertNotNull(objEnumeration76);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + true + "'", boolean77 == true);
        org.junit.Assert.assertNotNull(objSet78);
        org.junit.Assert.assertNull(obj79);
        org.junit.Assert.assertNotNull(objSet80);
        org.junit.Assert.assertNull(obj81);
        org.junit.Assert.assertNotNull(strSet82);
        org.junit.Assert.assertNull(obj83);
    }

    @Test
    public void test5256() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test5256");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration3 = properties0.elements();
        boolean boolean4 = properties0.isEmpty();
        java.util.Set<java.lang.Object> objSet5 = properties0.keySet();
        boolean boolean6 = properties0.isEmpty();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet7 = properties0.entrySet();
        java.util.Properties properties8 = new java.util.Properties();
        java.lang.Object obj10 = properties8.remove((java.lang.Object) 0.0d);
        boolean boolean11 = properties8.isEmpty();
        java.lang.Object obj14 = properties8.setProperty("", "hi!");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties15 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties15.setSerialJtaTransactions(false);
        boolean boolean18 = properties0.remove((java.lang.Object) properties8, (java.lang.Object) atomikosProperties15);
        java.util.Properties properties19 = new java.util.Properties(properties8);
        int int20 = properties19.size();
        int int21 = properties19.size();
        java.lang.Object obj22 = properties19.clone();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties23 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties23.setSerialJtaTransactions(false);
        boolean boolean26 = atomikosProperties23.isSerialJtaTransactions();
        atomikosProperties23.setTransactionManagerUniqueName("hi!");
        atomikosProperties23.setForceShutdownOnVmExit(false);
        atomikosProperties23.setCheckpointInterval((long) 2);
        boolean boolean33 = properties19.containsKey((java.lang.Object) atomikosProperties23);
        java.io.PrintStream printStream34 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties19.list(printStream34);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(objEnumeration3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(objSet5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(objEntrySet7);
        org.junit.Assert.assertNull(obj10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNull(obj14);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 0 + "'", int20 == 0);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 0 + "'", int21 == 0);
        org.junit.Assert.assertNotNull(obj22);
        org.junit.Assert.assertEquals(obj22.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj22), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj22), "{}");
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
    }

    @Test
    public void test5257() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test5257");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setSerialJtaTransactions(false);
        atomikosProperties0.setThreadedTwoPhaseCommit(true);
        atomikosProperties0.setEnableLogging(false);
        atomikosProperties0.setForceShutdownOnVmExit(true);
        java.lang.String str9 = atomikosProperties0.getService();
        boolean boolean10 = atomikosProperties0.isEnableLogging();
        atomikosProperties0.setTransactionManagerUniqueName("{=hi!}");
        boolean boolean13 = atomikosProperties0.isEnableLogging();
        boolean boolean14 = atomikosProperties0.isEnableLogging();
        boolean boolean15 = atomikosProperties0.isForceShutdownOnVmExit();
        java.lang.String str16 = atomikosProperties0.getTransactionManagerUniqueName();
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "{=hi!}" + "'", str16, "{=hi!}");
    }

    @Test
    public void test5258() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test5258");
        java.util.Properties properties0 = new java.util.Properties();
        boolean boolean2 = properties0.contains((java.lang.Object) 100.0d);
        java.util.Properties properties3 = new java.util.Properties();
        java.lang.Object obj5 = properties3.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration6 = properties3.elements();
        boolean boolean7 = properties3.isEmpty();
        java.util.Set<java.lang.Object> objSet8 = properties3.keySet();
        boolean boolean9 = properties3.isEmpty();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet10 = properties3.entrySet();
        java.util.Properties properties11 = new java.util.Properties();
        java.lang.Object obj13 = properties11.remove((java.lang.Object) 0.0d);
        boolean boolean14 = properties11.isEmpty();
        java.lang.Object obj17 = properties11.setProperty("", "hi!");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties18 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties18.setSerialJtaTransactions(false);
        boolean boolean21 = properties3.remove((java.lang.Object) properties11, (java.lang.Object) atomikosProperties18);
        boolean boolean22 = properties0.equals((java.lang.Object) properties3);
        int int23 = properties0.size();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties24 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties24.setSerialJtaTransactions(false);
        atomikosProperties24.setThreadedTwoPhaseCommit(true);
        atomikosProperties24.setSerialJtaTransactions(false);
        java.lang.String str31 = atomikosProperties24.getService();
        java.lang.String str32 = atomikosProperties24.getLogBaseDir();
        atomikosProperties24.setService("{{}={}}");
        atomikosProperties24.setDefaultJtaTimeout((long) (short) 0);
        atomikosProperties24.setThreadedTwoPhaseCommit(true);
        boolean boolean39 = properties0.containsKey((java.lang.Object) atomikosProperties24);
        java.io.OutputStream outputStream40 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties0.storeToXML(outputStream40, "{true=true}", "{hi!=[], {}={}}");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNull(obj5);
        org.junit.Assert.assertNotNull(objEnumeration6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(objSet8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertNotNull(objEntrySet10);
        org.junit.Assert.assertNull(obj13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNull(obj17);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 0 + "'", int23 == 0);
        org.junit.Assert.assertNull(str31);
        org.junit.Assert.assertNull(str32);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
    }

    @Test
    public void test5259() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test5259");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setSerialJtaTransactions(false);
        atomikosProperties0.setThreadedTwoPhaseCommit(true);
        boolean boolean5 = atomikosProperties0.isForceShutdownOnVmExit();
        java.lang.String str6 = atomikosProperties0.getLogBaseDir();
        boolean boolean7 = atomikosProperties0.isThreadedTwoPhaseCommit();
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
    }

    @Test
    public void test5260() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test5260");
        java.util.Properties properties0 = new java.util.Properties();
        java.util.Properties properties1 = new java.util.Properties();
        java.lang.Object obj3 = properties1.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet4 = properties1.stringPropertyNames();
        boolean boolean5 = properties0.containsValue((java.lang.Object) properties1);
        java.util.Collection<java.lang.Object> objCollection6 = properties0.values();
        java.util.Properties properties8 = new java.util.Properties();
        java.lang.Object obj10 = properties8.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration11 = properties8.elements();
        boolean boolean12 = properties8.isEmpty();
        java.util.Set<java.lang.Object> objSet13 = properties8.keySet();
        java.lang.Object obj14 = properties0.putIfAbsent((java.lang.Object) "hi!", (java.lang.Object) objSet13);
        java.util.Set<java.lang.Object> objSet15 = properties0.keySet();
        java.util.Set<java.lang.Object> objSet16 = properties0.keySet();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet17 = properties0.entrySet();
        java.util.Set<java.lang.Object> objSet18 = properties0.keySet();
        java.lang.String str20 = properties0.getProperty("");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties21 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties21.setSerialJtaTransactions(false);
        atomikosProperties21.setThreadedTwoPhaseCommit(true);
        atomikosProperties21.setMaxTimeout((long) '#');
        boolean boolean28 = atomikosProperties21.isEnableLogging();
        atomikosProperties21.setMaxActives((int) '#');
        atomikosProperties21.setSerialJtaTransactions(true);
        boolean boolean33 = atomikosProperties21.isThreadedTwoPhaseCommit();
        atomikosProperties21.setCheckpointInterval(300000L);
        long long36 = atomikosProperties21.getCheckpointInterval();
        java.lang.Object obj37 = properties0.get((java.lang.Object) long36);
        boolean boolean38 = properties0.isEmpty();
        java.util.Enumeration<?> wildcardEnumeration39 = properties0.propertyNames();
        org.junit.Assert.assertNull(obj3);
        org.junit.Assert.assertNotNull(strSet4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(objCollection6);
        org.junit.Assert.assertNull(obj10);
        org.junit.Assert.assertNotNull(objEnumeration11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(objSet13);
        org.junit.Assert.assertNull(obj14);
        org.junit.Assert.assertNotNull(objSet15);
        org.junit.Assert.assertNotNull(objSet16);
        org.junit.Assert.assertNotNull(objEntrySet17);
        org.junit.Assert.assertNotNull(objSet18);
        org.junit.Assert.assertNull(str20);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertTrue("'" + long36 + "' != '" + 300000L + "'", long36 == 300000L);
        org.junit.Assert.assertNull(obj37);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(wildcardEnumeration39);
    }

    @Test
    public void test5261() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test5261");
        java.util.Properties properties0 = new java.util.Properties();
        java.util.Properties properties1 = new java.util.Properties();
        java.lang.Object obj3 = properties1.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet4 = properties1.stringPropertyNames();
        boolean boolean5 = properties0.containsValue((java.lang.Object) properties1);
        java.util.Collection<java.lang.Object> objCollection6 = properties0.values();
        java.util.Enumeration<?> wildcardEnumeration7 = properties0.propertyNames();
        java.lang.String str9 = properties0.getProperty("{=hi!}");
        java.util.Properties properties10 = new java.util.Properties(properties0);
        java.util.Properties properties11 = new java.util.Properties();
        java.lang.Object obj13 = properties11.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration14 = properties11.elements();
        boolean boolean15 = properties11.isEmpty();
        java.util.Set<java.lang.Object> objSet16 = properties11.keySet();
        boolean boolean17 = properties11.isEmpty();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet18 = properties11.entrySet();
        java.util.Properties properties19 = new java.util.Properties();
        java.lang.Object obj21 = properties19.remove((java.lang.Object) 0.0d);
        boolean boolean22 = properties19.isEmpty();
        java.lang.Object obj25 = properties19.setProperty("", "hi!");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties26 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties26.setSerialJtaTransactions(false);
        boolean boolean29 = properties11.remove((java.lang.Object) properties19, (java.lang.Object) atomikosProperties26);
        java.util.Properties properties30 = new java.util.Properties(properties19);
        int int31 = properties30.size();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties33 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties33.setSerialJtaTransactions(false);
        boolean boolean36 = atomikosProperties33.isSerialJtaTransactions();
        java.lang.String str37 = atomikosProperties33.getService();
        boolean boolean38 = atomikosProperties33.isEnableLogging();
        java.lang.String str39 = atomikosProperties33.getTransactionManagerUniqueName();
        boolean boolean40 = properties30.remove((java.lang.Object) (byte) 1, (java.lang.Object) atomikosProperties33);
        atomikosProperties33.setThreadedTwoPhaseCommit(true);
        boolean boolean43 = properties0.equals((java.lang.Object) atomikosProperties33);
        properties0.clear();
        java.lang.String str45 = properties0.toString();
        org.junit.Assert.assertNull(obj3);
        org.junit.Assert.assertNotNull(strSet4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(objCollection6);
        org.junit.Assert.assertNotNull(wildcardEnumeration7);
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertNull(obj13);
        org.junit.Assert.assertNotNull(objEnumeration14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(objSet16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(objEntrySet18);
        org.junit.Assert.assertNull(obj21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNull(obj25);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 0 + "'", int31 == 0);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNull(str37);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertNull(str39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "{}" + "'", str45, "{}");
    }

    @Test
    public void test5262() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test5262");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setSerialJtaTransactions(false);
        atomikosProperties0.setThreadedTwoPhaseCommit(true);
        atomikosProperties0.setThreadedTwoPhaseCommit(true);
        java.util.Properties properties7 = atomikosProperties0.asProperties();
        int int8 = atomikosProperties0.getMaxActives();
        atomikosProperties0.setService("hi!");
        long long11 = atomikosProperties0.getMaxTimeout();
        atomikosProperties0.setTransactionManagerUniqueName("hi!");
        atomikosProperties0.setMaxTimeout((long) (short) 10);
        atomikosProperties0.setCheckpointInterval((long) 2);
        long long18 = atomikosProperties0.getDefaultJtaTimeout();
        atomikosProperties0.setLogBaseDir("{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=false, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
        org.junit.Assert.assertNotNull(properties7);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 50 + "'", int8 == 50);
        org.junit.Assert.assertTrue("'" + long11 + "' != '" + 300000L + "'", long11 == 300000L);
        org.junit.Assert.assertTrue("'" + long18 + "' != '" + 10000L + "'", long18 == 10000L);
    }

    @Test
    public void test5263() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test5263");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setSerialJtaTransactions(false);
        boolean boolean3 = atomikosProperties0.isSerialJtaTransactions();
        java.lang.String str4 = atomikosProperties0.getService();
        java.util.Properties properties5 = atomikosProperties0.asProperties();
        boolean boolean6 = atomikosProperties0.isThreadedTwoPhaseCommit();
        atomikosProperties0.setSerialJtaTransactions(true);
        atomikosProperties0.setService("{{{}={}}={}}");
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertNotNull(properties5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
    }

    @Test
    public void test5264() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test5264");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setSerialJtaTransactions(false);
        boolean boolean3 = atomikosProperties0.isSerialJtaTransactions();
        boolean boolean4 = atomikosProperties0.isEnableLogging();
        long long5 = atomikosProperties0.getMaxTimeout();
        atomikosProperties0.setLogBaseName("{=hi!}");
        atomikosProperties0.setMaxTimeout((long) (byte) 0);
        java.util.Properties properties10 = atomikosProperties0.asProperties();
        long long11 = atomikosProperties0.getCheckpointInterval();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue("'" + long5 + "' != '" + 300000L + "'", long5 == 300000L);
        org.junit.Assert.assertNotNull(properties10);
        org.junit.Assert.assertTrue("'" + long11 + "' != '" + 500L + "'", long11 == 500L);
    }

    @Test
    public void test5265() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test5265");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        boolean boolean3 = properties0.isEmpty();
        java.lang.Object obj6 = properties0.setProperty("", "hi!");
        java.lang.String str7 = properties0.toString();
        properties0.clear();
        java.util.Properties properties9 = new java.util.Properties();
        java.lang.Object obj11 = properties9.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration12 = properties9.elements();
        int int13 = properties9.size();
        java.util.Properties properties14 = new java.util.Properties(properties9);
        boolean boolean15 = properties14.isEmpty();
        java.util.Properties properties16 = new java.util.Properties();
        java.lang.Object obj18 = properties16.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration19 = properties16.elements();
        int int20 = properties16.size();
        java.util.Properties properties21 = new java.util.Properties();
        java.lang.Object obj23 = properties21.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration24 = properties21.elements();
        boolean boolean25 = properties21.isEmpty();
        java.util.Set<java.lang.Object> objSet26 = properties21.keySet();
        boolean boolean27 = properties16.containsKey((java.lang.Object) objSet26);
        java.util.Enumeration<java.lang.Object> objEnumeration28 = properties16.keys();
        java.util.Properties properties29 = new java.util.Properties();
        java.lang.Object obj31 = properties29.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration32 = properties29.elements();
        boolean boolean33 = properties29.isEmpty();
        java.util.Set<java.lang.Object> objSet34 = properties29.keySet();
        java.util.Enumeration<java.lang.Object> objEnumeration35 = properties29.keys();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet36 = properties29.entrySet();
        boolean boolean38 = properties16.remove((java.lang.Object) properties29, (java.lang.Object) 1.0f);
        boolean boolean39 = properties14.contains((java.lang.Object) properties29);
        java.util.Properties properties40 = new java.util.Properties(properties29);
        java.util.Properties properties41 = new java.util.Properties(properties40);
        java.lang.Object obj42 = properties41.clone();
        java.util.Properties properties43 = new java.util.Properties(properties41);
        boolean boolean45 = properties41.equals((java.lang.Object) 50);
        java.util.Properties properties46 = new java.util.Properties();
        java.lang.Object obj48 = properties46.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet49 = properties46.stringPropertyNames();
        java.util.Properties properties50 = new java.util.Properties();
        java.util.Properties properties51 = new java.util.Properties();
        java.lang.Object obj53 = properties51.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet54 = properties51.stringPropertyNames();
        boolean boolean55 = properties50.containsValue((java.lang.Object) properties51);
        java.util.Collection<java.lang.Object> objCollection56 = properties50.values();
        java.util.Enumeration<?> wildcardEnumeration57 = properties50.propertyNames();
        java.lang.Object obj59 = properties46.put((java.lang.Object) wildcardEnumeration57, (java.lang.Object) 10.0d);
        java.lang.String str61 = properties46.getProperty("{=hi!}");
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet62 = properties46.entrySet();
        java.util.Enumeration<java.lang.Object> objEnumeration63 = properties46.elements();
        java.lang.Object obj64 = properties0.replace((java.lang.Object) 50, (java.lang.Object) objEnumeration63);
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNull(obj6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "{=hi!}" + "'", str7, "{=hi!}");
        org.junit.Assert.assertNull(obj11);
        org.junit.Assert.assertNotNull(objEnumeration12);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNull(obj18);
        org.junit.Assert.assertNotNull(objEnumeration19);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 0 + "'", int20 == 0);
        org.junit.Assert.assertNull(obj23);
        org.junit.Assert.assertNotNull(objEnumeration24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(objSet26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(objEnumeration28);
        org.junit.Assert.assertNull(obj31);
        org.junit.Assert.assertNotNull(objEnumeration32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNotNull(objSet34);
        org.junit.Assert.assertNotNull(objEnumeration35);
        org.junit.Assert.assertNotNull(objEntrySet36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(obj42);
        org.junit.Assert.assertEquals(obj42.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj42), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj42), "{}");
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNull(obj48);
        org.junit.Assert.assertNotNull(strSet49);
        org.junit.Assert.assertNull(obj53);
        org.junit.Assert.assertNotNull(strSet54);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertNotNull(objCollection56);
        org.junit.Assert.assertNotNull(wildcardEnumeration57);
        org.junit.Assert.assertNull(obj59);
        org.junit.Assert.assertNull(str61);
        org.junit.Assert.assertNotNull(objEntrySet62);
        org.junit.Assert.assertNotNull(objEnumeration63);
        org.junit.Assert.assertNull(obj64);
    }

    @Test
    public void test5266() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test5266");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setSerialJtaTransactions(false);
        atomikosProperties0.setThreadedTwoPhaseCommit(true);
        atomikosProperties0.setThreadedTwoPhaseCommit(true);
        java.util.Properties properties7 = atomikosProperties0.asProperties();
        int int8 = atomikosProperties0.getMaxActives();
        atomikosProperties0.setService("hi!");
        long long11 = atomikosProperties0.getMaxTimeout();
        atomikosProperties0.setTransactionManagerUniqueName("hi!");
        atomikosProperties0.setMaxTimeout((long) (short) 10);
        atomikosProperties0.setCheckpointInterval((long) 2);
        atomikosProperties0.setTransactionManagerUniqueName("{hi!=[]}");
        org.junit.Assert.assertNotNull(properties7);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 50 + "'", int8 == 50);
        org.junit.Assert.assertTrue("'" + long11 + "' != '" + 300000L + "'", long11 == 300000L);
    }

    @Test
    public void test5267() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test5267");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        boolean boolean3 = properties0.isEmpty();
        java.lang.Object obj6 = properties0.setProperty("", "hi!");
        java.lang.String str7 = properties0.toString();
        properties0.clear();
        java.io.InputStream inputStream9 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties0.load(inputStream9);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNull(obj6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "{=hi!}" + "'", str7, "{=hi!}");
    }

    @Test
    public void test5268() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test5268");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setSerialJtaTransactions(false);
        atomikosProperties0.setThreadedTwoPhaseCommit(true);
        atomikosProperties0.setThreadedTwoPhaseCommit(true);
        java.util.Properties properties7 = atomikosProperties0.asProperties();
        atomikosProperties0.setLogBaseName("hi!");
        long long10 = atomikosProperties0.getDefaultJtaTimeout();
        boolean boolean11 = atomikosProperties0.isSerialJtaTransactions();
        atomikosProperties0.setDefaultJtaTimeout((long) (byte) -1);
        org.junit.Assert.assertNotNull(properties7);
        org.junit.Assert.assertTrue("'" + long10 + "' != '" + 10000L + "'", long10 == 10000L);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
    }

    @Test
    public void test5269() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test5269");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setSerialJtaTransactions(false);
        atomikosProperties0.setThreadedTwoPhaseCommit(true);
        atomikosProperties0.setMaxTimeout((long) '#');
        boolean boolean7 = atomikosProperties0.isEnableLogging();
        int int8 = atomikosProperties0.getMaxActives();
        atomikosProperties0.setCheckpointInterval(10000L);
        atomikosProperties0.setMaxTimeout((long) 35);
        atomikosProperties0.setTransactionManagerUniqueName("hi!");
        atomikosProperties0.setSerialJtaTransactions(true);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 50 + "'", int8 == 50);
    }

    @Test
    public void test5270() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test5270");
        java.util.Properties properties0 = new java.util.Properties();
        boolean boolean2 = properties0.contains((java.lang.Object) 100.0d);
        java.util.Properties properties3 = new java.util.Properties();
        java.lang.Object obj5 = properties3.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration6 = properties3.elements();
        boolean boolean7 = properties3.isEmpty();
        java.util.Set<java.lang.Object> objSet8 = properties3.keySet();
        boolean boolean9 = properties3.isEmpty();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet10 = properties3.entrySet();
        java.util.Properties properties11 = new java.util.Properties();
        java.lang.Object obj13 = properties11.remove((java.lang.Object) 0.0d);
        boolean boolean14 = properties11.isEmpty();
        java.lang.Object obj17 = properties11.setProperty("", "hi!");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties18 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties18.setSerialJtaTransactions(false);
        boolean boolean21 = properties3.remove((java.lang.Object) properties11, (java.lang.Object) atomikosProperties18);
        boolean boolean22 = properties0.equals((java.lang.Object) properties3);
        int int23 = properties0.size();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet24 = properties0.entrySet();
        java.io.OutputStream outputStream25 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties0.save(outputStream25, "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=false, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.service={{}={}}, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.tm_unique_name=hi!, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNull(obj5);
        org.junit.Assert.assertNotNull(objEnumeration6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(objSet8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertNotNull(objEntrySet10);
        org.junit.Assert.assertNull(obj13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNull(obj17);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 0 + "'", int23 == 0);
        org.junit.Assert.assertNotNull(objEntrySet24);
    }

    @Test
    public void test5271() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test5271");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        boolean boolean4 = properties0.containsValue((java.lang.Object) "hi!");
        java.lang.Object obj7 = properties0.put((java.lang.Object) (byte) -1, (java.lang.Object) 100L);
        java.util.Enumeration<java.lang.Object> objEnumeration8 = properties0.keys();
        java.util.Properties properties9 = new java.util.Properties();
        java.lang.Object obj11 = properties9.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration12 = properties9.elements();
        boolean boolean13 = properties9.isEmpty();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet14 = properties9.entrySet();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties16 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties16.setSerialJtaTransactions(false);
        atomikosProperties16.setThreadedTwoPhaseCommit(true);
        atomikosProperties16.setMaxTimeout((long) '#');
        boolean boolean23 = atomikosProperties16.isForceShutdownOnVmExit();
        java.lang.Object obj24 = properties9.put((java.lang.Object) (short) 1, (java.lang.Object) atomikosProperties16);
        long long25 = atomikosProperties16.getDefaultJtaTimeout();
        java.lang.String str26 = atomikosProperties16.getLogBaseDir();
        java.util.Properties properties27 = new java.util.Properties();
        java.lang.Object obj29 = properties27.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration30 = properties27.elements();
        boolean boolean31 = properties27.isEmpty();
        java.lang.Object obj34 = properties27.setProperty("tmlog", "");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties35 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties35.setSerialJtaTransactions(false);
        boolean boolean38 = atomikosProperties35.isSerialJtaTransactions();
        atomikosProperties35.setTransactionManagerUniqueName("hi!");
        atomikosProperties35.setForceShutdownOnVmExit(false);
        atomikosProperties35.setDefaultJtaTimeout((long) (byte) 10);
        java.lang.String str45 = atomikosProperties35.getTransactionManagerUniqueName();
        java.util.Properties properties46 = new java.util.Properties();
        java.util.Properties properties47 = new java.util.Properties();
        java.lang.Object obj49 = properties47.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet50 = properties47.stringPropertyNames();
        boolean boolean51 = properties46.containsValue((java.lang.Object) properties47);
        java.util.Collection<java.lang.Object> objCollection52 = properties46.values();
        java.util.Properties properties54 = new java.util.Properties();
        java.lang.Object obj56 = properties54.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration57 = properties54.elements();
        boolean boolean58 = properties54.isEmpty();
        java.util.Set<java.lang.Object> objSet59 = properties54.keySet();
        java.lang.Object obj60 = properties46.putIfAbsent((java.lang.Object) "hi!", (java.lang.Object) objSet59);
        java.util.Set<java.lang.Object> objSet61 = properties46.keySet();
        java.util.Set<java.lang.Object> objSet62 = properties46.keySet();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet63 = properties46.entrySet();
        java.util.Set<java.lang.Object> objSet64 = properties46.keySet();
        java.lang.Object obj65 = properties27.replace((java.lang.Object) atomikosProperties35, (java.lang.Object) properties46);
        java.util.Properties properties66 = atomikosProperties35.asProperties();
        boolean boolean67 = atomikosProperties35.isSerialJtaTransactions();
        java.lang.Object obj68 = properties0.putIfAbsent((java.lang.Object) atomikosProperties16, (java.lang.Object) boolean67);
        int int69 = properties0.size();
        java.util.Enumeration<java.lang.Object> objEnumeration70 = properties0.keys();
        java.util.Collection<java.lang.Object> objCollection71 = properties0.values();
        java.io.OutputStream outputStream72 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties0.store(outputStream72, "hi!");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNull(obj7);
        org.junit.Assert.assertNotNull(objEnumeration8);
        org.junit.Assert.assertNull(obj11);
        org.junit.Assert.assertNotNull(objEnumeration12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(objEntrySet14);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNull(obj24);
        org.junit.Assert.assertTrue("'" + long25 + "' != '" + 10000L + "'", long25 == 10000L);
        org.junit.Assert.assertNull(str26);
        org.junit.Assert.assertNull(obj29);
        org.junit.Assert.assertNotNull(objEnumeration30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNull(obj34);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "hi!" + "'", str45, "hi!");
        org.junit.Assert.assertNull(obj49);
        org.junit.Assert.assertNotNull(strSet50);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertNotNull(objCollection52);
        org.junit.Assert.assertNull(obj56);
        org.junit.Assert.assertNotNull(objEnumeration57);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertNotNull(objSet59);
        org.junit.Assert.assertNull(obj60);
        org.junit.Assert.assertNotNull(objSet61);
        org.junit.Assert.assertNotNull(objSet62);
        org.junit.Assert.assertNotNull(objEntrySet63);
        org.junit.Assert.assertNotNull(objSet64);
        org.junit.Assert.assertNull(obj65);
        org.junit.Assert.assertNotNull(properties66);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertNull(obj68);
        org.junit.Assert.assertTrue("'" + int69 + "' != '" + 2 + "'", int69 == 2);
        org.junit.Assert.assertNotNull(objEnumeration70);
        org.junit.Assert.assertNotNull(objCollection71);
    }

    @Test
    public void test5272() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test5272");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet3 = properties0.stringPropertyNames();
        java.util.Collection<java.lang.Object> objCollection4 = properties0.values();
        java.io.Writer writer5 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties0.store(writer5, "{}");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(strSet3);
        org.junit.Assert.assertNotNull(objCollection4);
    }

    @Test
    public void test5273() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test5273");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        boolean boolean4 = properties0.containsValue((java.lang.Object) "hi!");
        java.lang.Object obj7 = properties0.put((java.lang.Object) (byte) -1, (java.lang.Object) 100L);
        java.util.Properties properties8 = new java.util.Properties();
        java.util.Properties properties9 = new java.util.Properties();
        java.lang.Object obj11 = properties9.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet12 = properties9.stringPropertyNames();
        boolean boolean13 = properties8.containsValue((java.lang.Object) properties9);
        java.util.Collection<java.lang.Object> objCollection14 = properties8.values();
        java.util.Properties properties16 = new java.util.Properties();
        java.lang.Object obj18 = properties16.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration19 = properties16.elements();
        boolean boolean20 = properties16.isEmpty();
        java.util.Set<java.lang.Object> objSet21 = properties16.keySet();
        java.lang.Object obj22 = properties8.putIfAbsent((java.lang.Object) "hi!", (java.lang.Object) objSet21);
        java.util.Set<java.lang.Object> objSet23 = properties8.keySet();
        boolean boolean24 = properties0.containsKey((java.lang.Object) properties8);
        java.util.Enumeration<java.lang.Object> objEnumeration25 = properties8.elements();
        java.util.Properties properties26 = new java.util.Properties();
        java.lang.Object obj28 = properties26.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration29 = properties26.elements();
        boolean boolean30 = properties26.isEmpty();
        java.util.Set<java.lang.Object> objSet31 = properties26.keySet();
        boolean boolean32 = properties26.isEmpty();
        boolean boolean33 = properties8.contains((java.lang.Object) boolean32);
        java.util.Properties properties34 = new java.util.Properties();
        java.lang.Object obj36 = properties34.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration37 = properties34.elements();
        boolean boolean38 = properties34.isEmpty();
        java.util.Set<java.lang.Object> objSet39 = properties34.keySet();
        java.lang.Object obj40 = properties34.clone();
        java.util.Properties properties41 = new java.util.Properties();
        java.lang.Object obj43 = properties41.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration44 = properties41.elements();
        boolean boolean45 = properties41.isEmpty();
        java.util.Set<java.lang.Object> objSet46 = properties41.keySet();
        java.util.Enumeration<java.lang.Object> objEnumeration47 = properties41.keys();
        java.util.Properties properties48 = new java.util.Properties();
        java.lang.Object obj50 = properties48.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration51 = properties48.elements();
        boolean boolean52 = properties48.isEmpty();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet53 = properties48.entrySet();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties55 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties55.setSerialJtaTransactions(false);
        atomikosProperties55.setThreadedTwoPhaseCommit(true);
        atomikosProperties55.setMaxTimeout((long) '#');
        boolean boolean62 = atomikosProperties55.isForceShutdownOnVmExit();
        java.lang.Object obj63 = properties48.put((java.lang.Object) (short) 1, (java.lang.Object) atomikosProperties55);
        atomikosProperties55.setForceShutdownOnVmExit(false);
        long long66 = atomikosProperties55.getDefaultJtaTimeout();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties68 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties68.setSerialJtaTransactions(false);
        boolean boolean71 = atomikosProperties68.isSerialJtaTransactions();
        java.lang.String str72 = atomikosProperties68.getService();
        boolean boolean73 = atomikosProperties68.isEnableLogging();
        java.util.Properties properties74 = atomikosProperties68.asProperties();
        atomikosProperties68.setForceShutdownOnVmExit(true);
        atomikosProperties68.setMaxActives((int) (short) -1);
        atomikosProperties68.setMaxTimeout((long) ' ');
        boolean boolean81 = properties41.replace((java.lang.Object) long66, (java.lang.Object) (-1.0d), (java.lang.Object) atomikosProperties68);
        boolean boolean82 = properties8.remove((java.lang.Object) properties34, (java.lang.Object) long66);
        java.lang.Object obj83 = properties8.clone();
        java.lang.Object obj86 = properties8.setProperty("", "{}");
        java.util.Collection<java.lang.Object> objCollection87 = properties8.values();
        java.util.Properties properties88 = new java.util.Properties(properties8);
        int int89 = properties8.size();
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNull(obj7);
        org.junit.Assert.assertNull(obj11);
        org.junit.Assert.assertNotNull(strSet12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(objCollection14);
        org.junit.Assert.assertNull(obj18);
        org.junit.Assert.assertNotNull(objEnumeration19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNotNull(objSet21);
        org.junit.Assert.assertNull(obj22);
        org.junit.Assert.assertNotNull(objSet23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(objEnumeration25);
        org.junit.Assert.assertNull(obj28);
        org.junit.Assert.assertNotNull(objEnumeration29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNotNull(objSet31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNull(obj36);
        org.junit.Assert.assertNotNull(objEnumeration37);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertNotNull(objSet39);
        org.junit.Assert.assertNotNull(obj40);
        org.junit.Assert.assertEquals(obj40.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj40), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj40), "{}");
        org.junit.Assert.assertNull(obj43);
        org.junit.Assert.assertNotNull(objEnumeration44);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertNotNull(objSet46);
        org.junit.Assert.assertNotNull(objEnumeration47);
        org.junit.Assert.assertNull(obj50);
        org.junit.Assert.assertNotNull(objEnumeration51);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertNotNull(objEntrySet53);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertNull(obj63);
        org.junit.Assert.assertTrue("'" + long66 + "' != '" + 10000L + "'", long66 == 10000L);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertNull(str72);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + true + "'", boolean73 == true);
        org.junit.Assert.assertNotNull(properties74);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + false + "'", boolean81 == false);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + false + "'", boolean82 == false);
        org.junit.Assert.assertNotNull(obj83);
        org.junit.Assert.assertEquals(obj83.toString(), "{hi!=[]}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj83), "{hi!=[]}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj83), "{hi!=[]}");
        org.junit.Assert.assertNull(obj86);
        org.junit.Assert.assertNotNull(objCollection87);
        org.junit.Assert.assertTrue("'" + int89 + "' != '" + 2 + "'", int89 == 2);
    }

    @Test
    public void test5274() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test5274");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setSerialJtaTransactions(false);
        atomikosProperties0.setThreadedTwoPhaseCommit(true);
        atomikosProperties0.setEnableLogging(false);
        boolean boolean7 = atomikosProperties0.isSerialJtaTransactions();
        int int8 = atomikosProperties0.getMaxActives();
        boolean boolean9 = atomikosProperties0.isEnableLogging();
        long long10 = atomikosProperties0.getCheckpointInterval();
        java.util.Properties properties11 = atomikosProperties0.asProperties();
        java.util.Enumeration<java.lang.Object> objEnumeration12 = properties11.elements();
        java.lang.String str15 = properties11.getProperty("{hi!=[], {}={}}", "{tmlog=}");
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 50 + "'", int8 == 50);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + long10 + "' != '" + 500L + "'", long10 == 500L);
        org.junit.Assert.assertNotNull(properties11);
        org.junit.Assert.assertNotNull(objEnumeration12);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "{tmlog=}" + "'", str15, "{tmlog=}");
    }

    @Test
    public void test5275() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test5275");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setSerialJtaTransactions(false);
        boolean boolean3 = atomikosProperties0.isSerialJtaTransactions();
        java.lang.String str4 = atomikosProperties0.getService();
        long long5 = atomikosProperties0.getMaxTimeout();
        atomikosProperties0.setCheckpointInterval((long) (short) 10);
        java.lang.String str8 = atomikosProperties0.getService();
        java.lang.String str9 = atomikosProperties0.getService();
        atomikosProperties0.setDefaultJtaTimeout(32L);
        boolean boolean12 = atomikosProperties0.isThreadedTwoPhaseCommit();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertTrue("'" + long5 + "' != '" + 300000L + "'", long5 == 300000L);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
    }

    @Test
    public void test5276() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test5276");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration3 = properties0.elements();
        boolean boolean4 = properties0.isEmpty();
        java.util.Enumeration<java.lang.Object> objEnumeration5 = properties0.elements();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet6 = properties0.entrySet();
        java.util.Set<java.lang.String> strSet7 = properties0.stringPropertyNames();
        java.lang.Object obj10 = properties0.setProperty("{}", "tmlog");
        java.util.Properties properties11 = new java.util.Properties();
        java.lang.Object obj13 = properties11.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration14 = properties11.elements();
        int int15 = properties11.size();
        java.util.Properties properties16 = new java.util.Properties();
        java.lang.Object obj18 = properties16.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration19 = properties16.elements();
        java.util.Enumeration<java.lang.Object> objEnumeration20 = properties16.keys();
        java.lang.Object obj21 = properties0.getOrDefault((java.lang.Object) properties11, (java.lang.Object) objEnumeration20);
        java.util.Properties properties22 = new java.util.Properties(properties11);
        java.util.Enumeration<java.lang.Object> objEnumeration23 = properties11.keys();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet24 = properties11.entrySet();
        java.util.Enumeration<java.lang.Object> objEnumeration25 = properties11.elements();
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(objEnumeration3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(objEnumeration5);
        org.junit.Assert.assertNotNull(objEntrySet6);
        org.junit.Assert.assertNotNull(strSet7);
        org.junit.Assert.assertNull(obj10);
        org.junit.Assert.assertNull(obj13);
        org.junit.Assert.assertNotNull(objEnumeration14);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0);
        org.junit.Assert.assertNull(obj18);
        org.junit.Assert.assertNotNull(objEnumeration19);
        org.junit.Assert.assertNotNull(objEnumeration20);
        org.junit.Assert.assertNotNull(obj21);
        org.junit.Assert.assertNotNull(objEnumeration23);
        org.junit.Assert.assertNotNull(objEntrySet24);
        org.junit.Assert.assertNotNull(objEnumeration25);
    }

    @Test
    public void test5277() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test5277");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setSerialJtaTransactions(false);
        atomikosProperties0.setThreadedTwoPhaseCommit(true);
        atomikosProperties0.setMaxTimeout((long) '#');
        java.lang.String str7 = atomikosProperties0.getLogBaseDir();
        atomikosProperties0.setMaxActives(1);
        atomikosProperties0.setService("hi!");
        atomikosProperties0.setTransactionManagerUniqueName("{tmlog=}");
        java.util.Properties properties14 = atomikosProperties0.asProperties();
        atomikosProperties0.setDefaultJtaTimeout(2L);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNotNull(properties14);
    }

    @Test
    public void test5278() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test5278");
        java.util.Properties properties0 = new java.util.Properties();
        java.util.Properties properties1 = new java.util.Properties();
        java.lang.Object obj3 = properties1.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet4 = properties1.stringPropertyNames();
        boolean boolean5 = properties0.containsValue((java.lang.Object) properties1);
        java.util.Collection<java.lang.Object> objCollection6 = properties0.values();
        java.util.Properties properties8 = new java.util.Properties();
        java.lang.Object obj10 = properties8.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration11 = properties8.elements();
        boolean boolean12 = properties8.isEmpty();
        java.util.Set<java.lang.Object> objSet13 = properties8.keySet();
        java.lang.Object obj14 = properties0.putIfAbsent((java.lang.Object) "hi!", (java.lang.Object) objSet13);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties15 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties15.setSerialJtaTransactions(false);
        boolean boolean18 = atomikosProperties15.isSerialJtaTransactions();
        java.util.Properties properties19 = atomikosProperties15.asProperties();
        java.lang.Object obj22 = properties19.setProperty("hi!", "");
        java.util.Properties properties23 = new java.util.Properties(properties19);
        java.util.Properties properties24 = new java.util.Properties();
        java.lang.Object obj26 = properties24.remove((java.lang.Object) 0.0d);
        java.util.Properties properties27 = new java.util.Properties();
        java.util.Collection<java.lang.Object> objCollection28 = properties27.values();
        java.util.Enumeration<java.lang.Object> objEnumeration29 = properties27.keys();
        java.util.Properties properties30 = new java.util.Properties();
        java.lang.Object obj32 = properties30.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration33 = properties30.elements();
        boolean boolean34 = properties30.isEmpty();
        java.util.Set<java.lang.Object> objSet35 = properties30.keySet();
        java.util.Enumeration<java.lang.Object> objEnumeration36 = properties30.keys();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet37 = properties30.entrySet();
        java.lang.Object obj38 = properties24.put((java.lang.Object) properties27, (java.lang.Object) properties30);
        java.lang.Object obj39 = properties0.putIfAbsent((java.lang.Object) properties23, (java.lang.Object) properties30);
        java.util.Properties properties40 = new java.util.Properties();
        java.lang.Object obj42 = properties40.remove((java.lang.Object) 0.0d);
        java.util.Properties properties43 = new java.util.Properties();
        java.util.Collection<java.lang.Object> objCollection44 = properties43.values();
        java.util.Enumeration<java.lang.Object> objEnumeration45 = properties43.keys();
        java.util.Properties properties46 = new java.util.Properties();
        java.lang.Object obj48 = properties46.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration49 = properties46.elements();
        boolean boolean50 = properties46.isEmpty();
        java.util.Set<java.lang.Object> objSet51 = properties46.keySet();
        java.util.Enumeration<java.lang.Object> objEnumeration52 = properties46.keys();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet53 = properties46.entrySet();
        java.lang.Object obj54 = properties40.put((java.lang.Object) properties43, (java.lang.Object) properties46);
        java.lang.String str56 = properties43.getProperty("{=hi!}");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties57 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties57.setSerialJtaTransactions(false);
        atomikosProperties57.setThreadedTwoPhaseCommit(true);
        atomikosProperties57.setThreadedTwoPhaseCommit(true);
        long long64 = atomikosProperties57.getMaxTimeout();
        boolean boolean65 = properties43.containsValue((java.lang.Object) atomikosProperties57);
        java.util.Enumeration<java.lang.Object> objEnumeration66 = properties43.elements();
        java.util.Set<java.lang.String> strSet67 = properties43.stringPropertyNames();
        java.util.Properties properties68 = new java.util.Properties();
        java.lang.Object obj70 = properties68.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration71 = properties68.elements();
        boolean boolean72 = properties68.isEmpty();
        java.util.Set<java.lang.Object> objSet73 = properties68.keySet();
        java.util.Enumeration<java.lang.Object> objEnumeration74 = properties68.keys();
        java.util.Enumeration<java.lang.Object> objEnumeration75 = properties68.elements();
        java.lang.Object obj76 = properties0.putIfAbsent((java.lang.Object) properties43, (java.lang.Object) objEnumeration75);
        java.util.Enumeration<java.lang.Object> objEnumeration77 = properties0.elements();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties78 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties78.setSerialJtaTransactions(false);
        atomikosProperties78.setThreadedTwoPhaseCommit(true);
        atomikosProperties78.setMaxTimeout((long) '#');
        boolean boolean85 = atomikosProperties78.isEnableLogging();
        atomikosProperties78.setCheckpointInterval((long) (byte) -1);
        atomikosProperties78.setEnableLogging(true);
        java.lang.String str90 = atomikosProperties78.getService();
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean91 = properties0.containsValue((java.lang.Object) str90);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(obj3);
        org.junit.Assert.assertNotNull(strSet4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(objCollection6);
        org.junit.Assert.assertNull(obj10);
        org.junit.Assert.assertNotNull(objEnumeration11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(objSet13);
        org.junit.Assert.assertNull(obj14);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(properties19);
        org.junit.Assert.assertNull(obj22);
        org.junit.Assert.assertNull(obj26);
        org.junit.Assert.assertNotNull(objCollection28);
        org.junit.Assert.assertNotNull(objEnumeration29);
        org.junit.Assert.assertNull(obj32);
        org.junit.Assert.assertNotNull(objEnumeration33);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertNotNull(objSet35);
        org.junit.Assert.assertNotNull(objEnumeration36);
        org.junit.Assert.assertNotNull(objEntrySet37);
        org.junit.Assert.assertNull(obj38);
        org.junit.Assert.assertNull(obj39);
        org.junit.Assert.assertNull(obj42);
        org.junit.Assert.assertNotNull(objCollection44);
        org.junit.Assert.assertNotNull(objEnumeration45);
        org.junit.Assert.assertNull(obj48);
        org.junit.Assert.assertNotNull(objEnumeration49);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertNotNull(objSet51);
        org.junit.Assert.assertNotNull(objEnumeration52);
        org.junit.Assert.assertNotNull(objEntrySet53);
        org.junit.Assert.assertNull(obj54);
        org.junit.Assert.assertNull(str56);
        org.junit.Assert.assertTrue("'" + long64 + "' != '" + 300000L + "'", long64 == 300000L);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertNotNull(objEnumeration66);
        org.junit.Assert.assertNotNull(strSet67);
        org.junit.Assert.assertNull(obj70);
        org.junit.Assert.assertNotNull(objEnumeration71);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + true + "'", boolean72 == true);
        org.junit.Assert.assertNotNull(objSet73);
        org.junit.Assert.assertNotNull(objEnumeration74);
        org.junit.Assert.assertNotNull(objEnumeration75);
        org.junit.Assert.assertNotNull(obj76);
        org.junit.Assert.assertEquals(obj76.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj76), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj76), "{}");
        org.junit.Assert.assertNotNull(objEnumeration77);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + true + "'", boolean85 == true);
        org.junit.Assert.assertNull(str90);
    }

    @Test
    public void test5279() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test5279");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet3 = properties0.stringPropertyNames();
        java.util.Properties properties4 = new java.util.Properties();
        java.util.Properties properties5 = new java.util.Properties();
        java.lang.Object obj7 = properties5.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet8 = properties5.stringPropertyNames();
        boolean boolean9 = properties4.containsValue((java.lang.Object) properties5);
        java.util.Collection<java.lang.Object> objCollection10 = properties4.values();
        java.util.Enumeration<?> wildcardEnumeration11 = properties4.propertyNames();
        java.lang.Object obj13 = properties0.put((java.lang.Object) wildcardEnumeration11, (java.lang.Object) 10.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration14 = properties0.elements();
        java.util.Properties properties16 = new java.util.Properties();
        java.lang.Object obj18 = properties16.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration19 = properties16.elements();
        boolean boolean20 = properties16.isEmpty();
        java.util.Set<java.lang.Object> objSet21 = properties16.keySet();
        java.util.Enumeration<java.lang.Object> objEnumeration22 = properties16.keys();
        boolean boolean24 = properties16.equals((java.lang.Object) "");
        java.lang.String str25 = properties16.toString();
        java.lang.Object obj26 = properties0.put((java.lang.Object) 'a', (java.lang.Object) properties16);
        java.lang.String str27 = properties0.toString();
        java.io.Writer writer28 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties0.store(writer28, "{true=class org.springframework.boot.jta.atomikos.AtomikosProperties}");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(strSet3);
        org.junit.Assert.assertNull(obj7);
        org.junit.Assert.assertNotNull(strSet8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(objCollection10);
        org.junit.Assert.assertNotNull(wildcardEnumeration11);
        org.junit.Assert.assertNull(obj13);
        org.junit.Assert.assertNotNull(objEnumeration14);
        org.junit.Assert.assertNull(obj18);
        org.junit.Assert.assertNotNull(objEnumeration19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNotNull(objSet21);
        org.junit.Assert.assertNotNull(objEnumeration22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "{}" + "'", str25, "{}");
        org.junit.Assert.assertNull(obj26);
    }

    @Test
    public void test5280() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test5280");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setSerialJtaTransactions(false);
        atomikosProperties0.setThreadedTwoPhaseCommit(true);
        atomikosProperties0.setMaxTimeout((long) '#');
        boolean boolean7 = atomikosProperties0.isEnableLogging();
        atomikosProperties0.setCheckpointInterval((long) (byte) -1);
        atomikosProperties0.setMaxActives((int) (byte) 100);
        atomikosProperties0.setForceShutdownOnVmExit(false);
        atomikosProperties0.setDefaultJtaTimeout((long) (byte) 0);
        atomikosProperties0.setLogBaseDir("{com.atomikos.icatch.enable_logging=false, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=false, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
    }

    @Test
    public void test5281() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test5281");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        java.util.Properties properties3 = new java.util.Properties();
        java.util.Collection<java.lang.Object> objCollection4 = properties3.values();
        java.util.Enumeration<java.lang.Object> objEnumeration5 = properties3.keys();
        java.util.Properties properties6 = new java.util.Properties();
        java.lang.Object obj8 = properties6.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration9 = properties6.elements();
        boolean boolean10 = properties6.isEmpty();
        java.util.Set<java.lang.Object> objSet11 = properties6.keySet();
        java.util.Enumeration<java.lang.Object> objEnumeration12 = properties6.keys();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet13 = properties6.entrySet();
        java.lang.Object obj14 = properties0.put((java.lang.Object) properties3, (java.lang.Object) properties6);
        java.util.Properties properties15 = new java.util.Properties();
        java.util.Properties properties16 = new java.util.Properties();
        java.lang.Object obj18 = properties16.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet19 = properties16.stringPropertyNames();
        boolean boolean20 = properties15.containsValue((java.lang.Object) properties16);
        java.util.Collection<java.lang.Object> objCollection21 = properties15.values();
        java.util.Properties properties23 = new java.util.Properties();
        java.lang.Object obj25 = properties23.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration26 = properties23.elements();
        boolean boolean27 = properties23.isEmpty();
        java.util.Set<java.lang.Object> objSet28 = properties23.keySet();
        java.lang.Object obj29 = properties15.putIfAbsent((java.lang.Object) "hi!", (java.lang.Object) objSet28);
        java.util.Set<java.lang.Object> objSet30 = properties15.keySet();
        java.util.Set<java.lang.Object> objSet31 = properties15.keySet();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet32 = properties15.entrySet();
        java.lang.Object obj33 = properties3.remove((java.lang.Object) objEntrySet32);
        java.lang.String str34 = properties3.toString();
        java.util.Properties properties35 = new java.util.Properties();
        java.lang.Object obj37 = properties35.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet38 = properties35.stringPropertyNames();
        java.lang.String str39 = properties35.toString();
        java.lang.String str40 = properties35.toString();
        java.util.Set<java.lang.Object> objSet41 = properties35.keySet();
        java.util.Properties properties42 = new java.util.Properties();
        java.lang.Object obj44 = properties42.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration45 = properties42.elements();
        boolean boolean46 = properties42.isEmpty();
        java.util.Set<java.lang.Object> objSet47 = properties42.keySet();
        boolean boolean48 = properties42.isEmpty();
        java.lang.Object obj49 = properties3.putIfAbsent((java.lang.Object) properties35, (java.lang.Object) boolean48);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties50 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties50.setSerialJtaTransactions(false);
        boolean boolean53 = atomikosProperties50.isSerialJtaTransactions();
        java.util.Properties properties54 = atomikosProperties50.asProperties();
        int int55 = atomikosProperties50.getMaxActives();
        boolean boolean57 = properties3.remove((java.lang.Object) int55, (java.lang.Object) 500L);
        java.util.Properties properties58 = new java.util.Properties();
        java.lang.Object obj60 = properties58.remove((java.lang.Object) 0.0d);
        boolean boolean61 = properties58.isEmpty();
        java.lang.Object obj64 = properties58.setProperty("", "hi!");
        java.util.Properties properties65 = new java.util.Properties();
        java.lang.Object obj67 = properties65.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration68 = properties65.elements();
        boolean boolean69 = properties65.isEmpty();
        java.util.Set<java.lang.Object> objSet70 = properties65.keySet();
        boolean boolean71 = properties65.isEmpty();
        java.util.Properties properties72 = new java.util.Properties();
        java.util.Collection<java.lang.Object> objCollection73 = properties72.values();
        java.util.Enumeration<java.lang.Object> objEnumeration74 = properties72.keys();
        java.lang.Object obj75 = properties65.remove((java.lang.Object) properties72);
        java.lang.Object obj76 = properties58.get((java.lang.Object) properties72);
        java.util.Enumeration<java.lang.Object> objEnumeration77 = properties72.keys();
        java.lang.Object obj79 = properties3.replace((java.lang.Object) properties72, (java.lang.Object) 1);
        java.io.InputStream inputStream80 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties72.loadFromXML(inputStream80);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(objCollection4);
        org.junit.Assert.assertNotNull(objEnumeration5);
        org.junit.Assert.assertNull(obj8);
        org.junit.Assert.assertNotNull(objEnumeration9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(objSet11);
        org.junit.Assert.assertNotNull(objEnumeration12);
        org.junit.Assert.assertNotNull(objEntrySet13);
        org.junit.Assert.assertNull(obj14);
        org.junit.Assert.assertNull(obj18);
        org.junit.Assert.assertNotNull(strSet19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(objCollection21);
        org.junit.Assert.assertNull(obj25);
        org.junit.Assert.assertNotNull(objEnumeration26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNotNull(objSet28);
        org.junit.Assert.assertNull(obj29);
        org.junit.Assert.assertNotNull(objSet30);
        org.junit.Assert.assertNotNull(objSet31);
        org.junit.Assert.assertNotNull(objEntrySet32);
        org.junit.Assert.assertNull(obj33);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "{}" + "'", str34, "{}");
        org.junit.Assert.assertNull(obj37);
        org.junit.Assert.assertNotNull(strSet38);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "{}" + "'", str39, "{}");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "{}" + "'", str40, "{}");
        org.junit.Assert.assertNotNull(objSet41);
        org.junit.Assert.assertNull(obj44);
        org.junit.Assert.assertNotNull(objEnumeration45);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertNotNull(objSet47);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertNull(obj49);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertNotNull(properties54);
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + 50 + "'", int55 == 50);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertNull(obj60);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertNull(obj64);
        org.junit.Assert.assertNull(obj67);
        org.junit.Assert.assertNotNull(objEnumeration68);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + true + "'", boolean69 == true);
        org.junit.Assert.assertNotNull(objSet70);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + true + "'", boolean71 == true);
        org.junit.Assert.assertNotNull(objCollection73);
        org.junit.Assert.assertNotNull(objEnumeration74);
        org.junit.Assert.assertNull(obj75);
        org.junit.Assert.assertNull(obj76);
        org.junit.Assert.assertNotNull(objEnumeration77);
        org.junit.Assert.assertEquals("'" + obj79 + "' != '" + true + "'", obj79, true);
    }

    @Test
    public void test5282() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test5282");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setSerialJtaTransactions(false);
        atomikosProperties0.setThreadedTwoPhaseCommit(true);
        atomikosProperties0.setMaxTimeout((long) '#');
        boolean boolean7 = atomikosProperties0.isEnableLogging();
        atomikosProperties0.setCheckpointInterval((long) (byte) -1);
        atomikosProperties0.setMaxActives((int) (byte) 100);
        atomikosProperties0.setTransactionManagerUniqueName("{=hi!}");
        java.lang.String str14 = atomikosProperties0.getLogBaseDir();
        atomikosProperties0.setForceShutdownOnVmExit(false);
        boolean boolean17 = atomikosProperties0.isForceShutdownOnVmExit();
        long long18 = atomikosProperties0.getMaxTimeout();
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + long18 + "' != '" + 35L + "'", long18 == 35L);
    }

    @Test
    public void test5283() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test5283");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration3 = properties0.elements();
        boolean boolean4 = properties0.isEmpty();
        java.util.Set<java.lang.Object> objSet5 = properties0.keySet();
        java.util.Enumeration<java.lang.Object> objEnumeration6 = properties0.keys();
        boolean boolean8 = properties0.equals((java.lang.Object) "");
        java.lang.String str9 = properties0.toString();
        java.util.Properties properties10 = new java.util.Properties();
        java.lang.Object obj12 = properties10.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration13 = properties10.elements();
        java.util.Properties properties15 = new java.util.Properties();
        java.lang.Object obj17 = properties15.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration18 = properties15.elements();
        boolean boolean19 = properties15.isEmpty();
        java.util.Set<java.lang.Object> objSet20 = properties15.keySet();
        boolean boolean21 = properties15.isEmpty();
        java.lang.Object obj22 = properties10.getOrDefault((java.lang.Object) true, (java.lang.Object) boolean21);
        java.lang.Object obj23 = properties0.get((java.lang.Object) boolean21);
        int int24 = properties0.size();
        java.io.Reader reader25 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties0.load(reader25);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(objEnumeration3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(objSet5);
        org.junit.Assert.assertNotNull(objEnumeration6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "{}" + "'", str9, "{}");
        org.junit.Assert.assertNull(obj12);
        org.junit.Assert.assertNotNull(objEnumeration13);
        org.junit.Assert.assertNull(obj17);
        org.junit.Assert.assertNotNull(objEnumeration18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(objSet20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertEquals("'" + obj22 + "' != '" + true + "'", obj22, true);
        org.junit.Assert.assertNull(obj23);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 0 + "'", int24 == 0);
    }

    @Test
    public void test5284() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test5284");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration3 = properties0.elements();
        boolean boolean4 = properties0.isEmpty();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet5 = properties0.entrySet();
        java.util.Enumeration<java.lang.Object> objEnumeration6 = properties0.keys();
        boolean boolean7 = properties0.isEmpty();
        java.util.Properties properties8 = new java.util.Properties();
        java.lang.Object obj10 = properties8.remove((java.lang.Object) 0.0d);
        boolean boolean11 = properties8.isEmpty();
        java.util.Properties properties12 = new java.util.Properties();
        java.lang.Object obj14 = properties12.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration15 = properties12.elements();
        boolean boolean16 = properties12.isEmpty();
        java.util.Set<java.lang.Object> objSet17 = properties12.keySet();
        java.util.Enumeration<java.lang.Object> objEnumeration18 = properties12.keys();
        java.lang.String str20 = properties12.getProperty("hi!");
        java.util.Enumeration<?> wildcardEnumeration21 = properties12.propertyNames();
        java.util.Properties properties22 = new java.util.Properties();
        java.lang.Object obj24 = properties22.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration25 = properties22.elements();
        boolean boolean26 = properties22.isEmpty();
        java.util.Enumeration<java.lang.Object> objEnumeration27 = properties22.elements();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet28 = properties22.entrySet();
        java.util.Set<java.lang.String> strSet29 = properties22.stringPropertyNames();
        boolean boolean30 = properties22.isEmpty();
        properties12.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties22);
        java.util.Properties properties32 = new java.util.Properties();
        java.util.Collection<java.lang.Object> objCollection33 = properties32.values();
        int int34 = properties32.size();
        java.util.Properties properties35 = new java.util.Properties(properties32);
        java.lang.Object obj36 = properties8.put((java.lang.Object) properties12, (java.lang.Object) properties35);
        java.lang.Object obj37 = properties35.clone();
        boolean boolean38 = properties0.contains(obj37);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties39 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties39.setSerialJtaTransactions(false);
        atomikosProperties39.setThreadedTwoPhaseCommit(true);
        java.lang.String str44 = atomikosProperties39.getLogBaseName();
        long long45 = atomikosProperties39.getMaxTimeout();
        java.util.Properties properties46 = new java.util.Properties();
        java.lang.Object obj48 = properties46.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration49 = properties46.elements();
        boolean boolean50 = properties46.isEmpty();
        java.util.Set<java.lang.Object> objSet51 = properties46.keySet();
        java.util.Enumeration<java.lang.Object> objEnumeration52 = properties46.keys();
        java.lang.String str54 = properties46.getProperty("hi!");
        java.lang.String str56 = properties46.getProperty("");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties57 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties57.setSerialJtaTransactions(false);
        atomikosProperties57.setThreadedTwoPhaseCommit(true);
        atomikosProperties57.setEnableLogging(false);
        boolean boolean64 = properties46.containsKey((java.lang.Object) atomikosProperties57);
        atomikosProperties57.setTransactionManagerUniqueName("tmlog");
        boolean boolean67 = atomikosProperties57.isForceShutdownOnVmExit();
        java.lang.Object obj68 = properties0.getOrDefault((java.lang.Object) atomikosProperties39, (java.lang.Object) boolean67);
        atomikosProperties39.setThreadedTwoPhaseCommit(true);
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(objEnumeration3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(objEntrySet5);
        org.junit.Assert.assertNotNull(objEnumeration6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNull(obj10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNull(obj14);
        org.junit.Assert.assertNotNull(objEnumeration15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(objSet17);
        org.junit.Assert.assertNotNull(objEnumeration18);
        org.junit.Assert.assertNull(str20);
        org.junit.Assert.assertNotNull(wildcardEnumeration21);
        org.junit.Assert.assertNull(obj24);
        org.junit.Assert.assertNotNull(objEnumeration25);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertNotNull(objEnumeration27);
        org.junit.Assert.assertNotNull(objEntrySet28);
        org.junit.Assert.assertNotNull(strSet29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNotNull(objCollection33);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 0 + "'", int34 == 0);
        org.junit.Assert.assertNull(obj36);
        org.junit.Assert.assertNotNull(obj37);
        org.junit.Assert.assertEquals(obj37.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj37), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj37), "{}");
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "tmlog" + "'", str44, "tmlog");
        org.junit.Assert.assertTrue("'" + long45 + "' != '" + 300000L + "'", long45 == 300000L);
        org.junit.Assert.assertNull(obj48);
        org.junit.Assert.assertNotNull(objEnumeration49);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertNotNull(objSet51);
        org.junit.Assert.assertNotNull(objEnumeration52);
        org.junit.Assert.assertNull(str54);
        org.junit.Assert.assertNull(str56);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertEquals("'" + obj68 + "' != '" + false + "'", obj68, false);
    }

    @Test
    public void test5285() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test5285");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setSerialJtaTransactions(false);
        boolean boolean3 = atomikosProperties0.isSerialJtaTransactions();
        java.lang.String str4 = atomikosProperties0.getService();
        boolean boolean5 = atomikosProperties0.isEnableLogging();
        atomikosProperties0.setCheckpointInterval((long) (byte) 100);
        atomikosProperties0.setTransactionManagerUniqueName("{=hi!}");
        atomikosProperties0.setMaxTimeout(10000L);
        atomikosProperties0.setEnableLogging(false);
        long long14 = atomikosProperties0.getDefaultJtaTimeout();
        atomikosProperties0.setMaxActives((int) (byte) 100);
        atomikosProperties0.setCheckpointInterval(300000L);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertTrue("'" + long14 + "' != '" + 10000L + "'", long14 == 10000L);
    }

    @Test
    public void test5286() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test5286");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setSerialJtaTransactions(false);
        boolean boolean3 = atomikosProperties0.isSerialJtaTransactions();
        java.lang.String str4 = atomikosProperties0.getService();
        atomikosProperties0.setEnableLogging(false);
        atomikosProperties0.setLogBaseDir("{}");
        atomikosProperties0.setLogBaseDir("{{}={}}");
        atomikosProperties0.setLogBaseName("hi!");
        atomikosProperties0.setDefaultJtaTimeout((long) (-1));
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNull(str4);
    }

    @Test
    public void test5287() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test5287");
        java.util.Properties properties0 = new java.util.Properties();
        java.util.Properties properties1 = new java.util.Properties();
        java.lang.Object obj3 = properties1.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet4 = properties1.stringPropertyNames();
        boolean boolean5 = properties0.containsValue((java.lang.Object) properties1);
        boolean boolean6 = properties1.isEmpty();
        java.util.Properties properties7 = new java.util.Properties(properties1);
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet8 = properties7.entrySet();
        java.util.Collection<java.lang.Object> objCollection9 = properties7.values();
        java.util.Properties properties10 = new java.util.Properties();
        java.lang.Object obj12 = properties10.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration13 = properties10.elements();
        boolean boolean14 = properties10.isEmpty();
        java.util.Set<java.lang.Object> objSet15 = properties10.keySet();
        boolean boolean16 = properties10.isEmpty();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet17 = properties10.entrySet();
        java.util.Properties properties18 = new java.util.Properties();
        java.lang.Object obj20 = properties18.remove((java.lang.Object) 0.0d);
        boolean boolean21 = properties18.isEmpty();
        java.lang.Object obj24 = properties18.setProperty("", "hi!");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties25 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties25.setSerialJtaTransactions(false);
        boolean boolean28 = properties10.remove((java.lang.Object) properties18, (java.lang.Object) atomikosProperties25);
        java.util.Properties properties29 = new java.util.Properties(properties18);
        java.util.Enumeration<java.lang.Object> objEnumeration30 = properties18.keys();
        java.util.Enumeration<?> wildcardEnumeration31 = properties18.propertyNames();
        java.util.Properties properties32 = new java.util.Properties();
        java.lang.Object obj34 = properties32.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration35 = properties32.elements();
        boolean boolean36 = properties32.isEmpty();
        java.util.Set<java.lang.Object> objSet37 = properties32.keySet();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties38 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties38.setSerialJtaTransactions(false);
        atomikosProperties38.setThreadedTwoPhaseCommit(true);
        atomikosProperties38.setThreadedTwoPhaseCommit(true);
        java.util.Properties properties45 = atomikosProperties38.asProperties();
        int int46 = atomikosProperties38.getMaxActives();
        java.util.Properties properties47 = new java.util.Properties();
        java.lang.Object obj49 = properties47.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration50 = properties47.elements();
        boolean boolean51 = properties47.isEmpty();
        java.util.Set<java.lang.Object> objSet52 = properties47.keySet();
        boolean boolean54 = properties47.containsKey((java.lang.Object) (-1.0f));
        java.lang.Object obj55 = properties32.put((java.lang.Object) atomikosProperties38, (java.lang.Object) properties47);
        java.util.Properties properties56 = new java.util.Properties();
        java.lang.Object obj58 = properties56.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet59 = properties56.stringPropertyNames();
        java.util.Properties properties60 = new java.util.Properties();
        java.lang.Object obj62 = properties60.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet63 = properties60.stringPropertyNames();
        java.lang.Object obj65 = properties56.put((java.lang.Object) strSet63, (java.lang.Object) 0.0d);
        java.util.Properties properties66 = new java.util.Properties();
        java.util.Properties properties67 = new java.util.Properties();
        java.lang.Object obj69 = properties67.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet70 = properties67.stringPropertyNames();
        boolean boolean71 = properties66.containsValue((java.lang.Object) properties67);
        java.util.Collection<java.lang.Object> objCollection72 = properties66.values();
        java.util.Properties properties74 = new java.util.Properties();
        java.lang.Object obj76 = properties74.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration77 = properties74.elements();
        boolean boolean78 = properties74.isEmpty();
        java.util.Set<java.lang.Object> objSet79 = properties74.keySet();
        java.lang.Object obj80 = properties66.putIfAbsent((java.lang.Object) "hi!", (java.lang.Object) objSet79);
        java.util.Set<java.lang.Object> objSet81 = properties66.keySet();
        java.lang.Object obj83 = properties56.putIfAbsent((java.lang.Object) properties66, (java.lang.Object) (short) 10);
        java.util.Enumeration<?> wildcardEnumeration84 = properties66.propertyNames();
        properties32.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties66);
        java.util.Collection<java.lang.Object> objCollection86 = properties32.values();
        java.util.Set<java.lang.Object> objSet87 = properties32.keySet();
        java.lang.Object obj88 = properties7.putIfAbsent((java.lang.Object) wildcardEnumeration31, (java.lang.Object) objSet87);
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet89 = properties7.entrySet();
        org.junit.Assert.assertNull(obj3);
        org.junit.Assert.assertNotNull(strSet4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(objEntrySet8);
        org.junit.Assert.assertNotNull(objCollection9);
        org.junit.Assert.assertNull(obj12);
        org.junit.Assert.assertNotNull(objEnumeration13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(objSet15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(objEntrySet17);
        org.junit.Assert.assertNull(obj20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNull(obj24);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(objEnumeration30);
        org.junit.Assert.assertNotNull(wildcardEnumeration31);
        org.junit.Assert.assertNull(obj34);
        org.junit.Assert.assertNotNull(objEnumeration35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNotNull(objSet37);
        org.junit.Assert.assertNotNull(properties45);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 50 + "'", int46 == 50);
        org.junit.Assert.assertNull(obj49);
        org.junit.Assert.assertNotNull(objEnumeration50);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertNotNull(objSet52);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertNull(obj55);
        org.junit.Assert.assertNull(obj58);
        org.junit.Assert.assertNotNull(strSet59);
        org.junit.Assert.assertNull(obj62);
        org.junit.Assert.assertNotNull(strSet63);
        org.junit.Assert.assertNull(obj65);
        org.junit.Assert.assertNull(obj69);
        org.junit.Assert.assertNotNull(strSet70);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertNotNull(objCollection72);
        org.junit.Assert.assertNull(obj76);
        org.junit.Assert.assertNotNull(objEnumeration77);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + true + "'", boolean78 == true);
        org.junit.Assert.assertNotNull(objSet79);
        org.junit.Assert.assertNull(obj80);
        org.junit.Assert.assertNotNull(objSet81);
        org.junit.Assert.assertNull(obj83);
        org.junit.Assert.assertNotNull(wildcardEnumeration84);
        org.junit.Assert.assertNotNull(objCollection86);
        org.junit.Assert.assertNotNull(objSet87);
        org.junit.Assert.assertNull(obj88);
        org.junit.Assert.assertNotNull(objEntrySet89);
    }

    @Test
    public void test5288() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test5288");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        boolean boolean3 = properties0.isEmpty();
        java.lang.Object obj6 = properties0.setProperty("", "hi!");
        java.util.Properties properties7 = new java.util.Properties();
        java.lang.Object obj9 = properties7.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration10 = properties7.elements();
        boolean boolean11 = properties7.isEmpty();
        java.util.Set<java.lang.Object> objSet12 = properties7.keySet();
        boolean boolean13 = properties7.isEmpty();
        java.util.Properties properties14 = new java.util.Properties();
        java.util.Collection<java.lang.Object> objCollection15 = properties14.values();
        java.util.Enumeration<java.lang.Object> objEnumeration16 = properties14.keys();
        java.lang.Object obj17 = properties7.remove((java.lang.Object) properties14);
        java.lang.Object obj18 = properties0.get((java.lang.Object) properties14);
        java.util.Enumeration<java.lang.Object> objEnumeration19 = properties14.keys();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties20 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties20.setSerialJtaTransactions(false);
        atomikosProperties20.setThreadedTwoPhaseCommit(true);
        atomikosProperties20.setMaxTimeout((long) '#');
        boolean boolean27 = atomikosProperties20.isForceShutdownOnVmExit();
        long long28 = atomikosProperties20.getCheckpointInterval();
        java.lang.Object obj29 = new java.lang.Object();
        boolean boolean31 = properties14.replace((java.lang.Object) long28, obj29, (java.lang.Object) "hi!");
        java.util.Set<java.lang.Object> objSet32 = properties14.keySet();
        java.util.Properties properties33 = new java.util.Properties();
        java.util.Properties properties34 = new java.util.Properties();
        java.lang.Object obj36 = properties34.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet37 = properties34.stringPropertyNames();
        boolean boolean38 = properties33.containsValue((java.lang.Object) properties34);
        java.util.Collection<java.lang.Object> objCollection39 = properties33.values();
        java.util.Enumeration<?> wildcardEnumeration40 = properties33.propertyNames();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet41 = properties33.entrySet();
        properties14.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties33);
        java.util.Properties properties43 = new java.util.Properties();
        java.lang.Object obj45 = properties43.remove((java.lang.Object) 0.0d);
        java.util.Properties properties46 = new java.util.Properties();
        java.util.Collection<java.lang.Object> objCollection47 = properties46.values();
        java.util.Enumeration<java.lang.Object> objEnumeration48 = properties46.keys();
        java.util.Properties properties49 = new java.util.Properties();
        java.lang.Object obj51 = properties49.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration52 = properties49.elements();
        boolean boolean53 = properties49.isEmpty();
        java.util.Set<java.lang.Object> objSet54 = properties49.keySet();
        java.util.Enumeration<java.lang.Object> objEnumeration55 = properties49.keys();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet56 = properties49.entrySet();
        java.lang.Object obj57 = properties43.put((java.lang.Object) properties46, (java.lang.Object) properties49);
        java.lang.Object obj58 = properties46.clone();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties59 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties59.setSerialJtaTransactions(false);
        atomikosProperties59.setThreadedTwoPhaseCommit(true);
        atomikosProperties59.setMaxTimeout((long) '#');
        boolean boolean66 = atomikosProperties59.isEnableLogging();
        atomikosProperties59.setCheckpointInterval((long) 100);
        atomikosProperties59.setSerialJtaTransactions(true);
        boolean boolean71 = properties46.equals((java.lang.Object) atomikosProperties59);
        java.util.Properties properties72 = new java.util.Properties();
        java.lang.Object obj74 = properties72.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration75 = properties72.elements();
        boolean boolean76 = properties72.isEmpty();
        java.util.Enumeration<java.lang.Object> objEnumeration77 = properties72.elements();
        boolean boolean78 = properties46.containsKey((java.lang.Object) properties72);
        java.util.Properties properties79 = new java.util.Properties();
        java.lang.Object obj81 = properties79.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration82 = properties79.elements();
        boolean boolean83 = properties79.isEmpty();
        java.util.Set<java.lang.Object> objSet84 = properties79.keySet();
        java.util.Enumeration<java.lang.Object> objEnumeration85 = properties79.keys();
        boolean boolean87 = properties79.equals((java.lang.Object) "");
        boolean boolean88 = properties46.containsValue((java.lang.Object) properties79);
        boolean boolean89 = properties14.containsValue((java.lang.Object) properties46);
        java.io.OutputStream outputStream90 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties46.storeToXML(outputStream90, "{{}=tmlog}", "tmlog");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNull(obj6);
        org.junit.Assert.assertNull(obj9);
        org.junit.Assert.assertNotNull(objEnumeration10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNotNull(objSet12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(objCollection15);
        org.junit.Assert.assertNotNull(objEnumeration16);
        org.junit.Assert.assertNull(obj17);
        org.junit.Assert.assertNull(obj18);
        org.junit.Assert.assertNotNull(objEnumeration19);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertTrue("'" + long28 + "' != '" + 500L + "'", long28 == 500L);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(objSet32);
        org.junit.Assert.assertNull(obj36);
        org.junit.Assert.assertNotNull(strSet37);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(objCollection39);
        org.junit.Assert.assertNotNull(wildcardEnumeration40);
        org.junit.Assert.assertNotNull(objEntrySet41);
        org.junit.Assert.assertNull(obj45);
        org.junit.Assert.assertNotNull(objCollection47);
        org.junit.Assert.assertNotNull(objEnumeration48);
        org.junit.Assert.assertNull(obj51);
        org.junit.Assert.assertNotNull(objEnumeration52);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertNotNull(objSet54);
        org.junit.Assert.assertNotNull(objEnumeration55);
        org.junit.Assert.assertNotNull(objEntrySet56);
        org.junit.Assert.assertNull(obj57);
        org.junit.Assert.assertNotNull(obj58);
        org.junit.Assert.assertEquals(obj58.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj58), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj58), "{}");
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66 == true);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertNull(obj74);
        org.junit.Assert.assertNotNull(objEnumeration75);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + true + "'", boolean76 == true);
        org.junit.Assert.assertNotNull(objEnumeration77);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + false + "'", boolean78 == false);
        org.junit.Assert.assertNull(obj81);
        org.junit.Assert.assertNotNull(objEnumeration82);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + true + "'", boolean83 == true);
        org.junit.Assert.assertNotNull(objSet84);
        org.junit.Assert.assertNotNull(objEnumeration85);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + false + "'", boolean87 == false);
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + false + "'", boolean88 == false);
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + false + "'", boolean89 == false);
    }

    @Test
    public void test5289() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test5289");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setSerialJtaTransactions(false);
        boolean boolean3 = atomikosProperties0.isSerialJtaTransactions();
        atomikosProperties0.setTransactionManagerUniqueName("hi!");
        java.lang.String str6 = atomikosProperties0.getTransactionManagerUniqueName();
        atomikosProperties0.setEnableLogging(true);
        java.lang.String str9 = atomikosProperties0.getLogBaseDir();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "hi!" + "'", str6, "hi!");
        org.junit.Assert.assertNull(str9);
    }

    @Test
    public void test5290() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test5290");
        java.util.Properties properties0 = new java.util.Properties();
        java.util.Collection<java.lang.Object> objCollection1 = properties0.values();
        java.util.Enumeration<java.lang.Object> objEnumeration2 = properties0.keys();
        java.lang.Object obj5 = properties0.setProperty("{}", "{}");
        java.util.Set<java.lang.String> strSet6 = properties0.stringPropertyNames();
        java.util.Properties properties7 = new java.util.Properties();
        boolean boolean9 = properties7.contains((java.lang.Object) 100.0d);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties10 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties10.setSerialJtaTransactions(false);
        atomikosProperties10.setThreadedTwoPhaseCommit(true);
        atomikosProperties10.setSerialJtaTransactions(false);
        java.lang.String str17 = atomikosProperties10.getService();
        boolean boolean18 = properties7.containsKey((java.lang.Object) atomikosProperties10);
        boolean boolean19 = properties0.containsKey((java.lang.Object) properties7);
        java.lang.String str21 = properties0.getProperty("");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties22 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties22.setSerialJtaTransactions(false);
        atomikosProperties22.setThreadedTwoPhaseCommit(true);
        atomikosProperties22.setMaxTimeout((long) '#');
        boolean boolean29 = atomikosProperties22.isEnableLogging();
        atomikosProperties22.setCheckpointInterval((long) (byte) -1);
        atomikosProperties22.setMaxActives((int) (byte) 100);
        atomikosProperties22.setForceShutdownOnVmExit(false);
        boolean boolean36 = properties0.contains((java.lang.Object) false);
        java.util.Properties properties37 = new java.util.Properties();
        java.lang.Object obj39 = properties37.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration40 = properties37.elements();
        boolean boolean41 = properties37.isEmpty();
        java.util.Set<java.lang.Object> objSet42 = properties37.keySet();
        java.util.Enumeration<java.lang.Object> objEnumeration43 = properties37.keys();
        boolean boolean45 = properties37.equals((java.lang.Object) "");
        java.lang.String str46 = properties37.toString();
        java.util.Properties properties47 = new java.util.Properties();
        java.lang.Object obj49 = properties47.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration50 = properties47.elements();
        java.util.Properties properties52 = new java.util.Properties();
        java.lang.Object obj54 = properties52.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration55 = properties52.elements();
        boolean boolean56 = properties52.isEmpty();
        java.util.Set<java.lang.Object> objSet57 = properties52.keySet();
        boolean boolean58 = properties52.isEmpty();
        java.lang.Object obj59 = properties47.getOrDefault((java.lang.Object) true, (java.lang.Object) boolean58);
        java.lang.Object obj60 = properties37.get((java.lang.Object) boolean58);
        int int61 = properties37.size();
        java.util.Collection<java.lang.Object> objCollection62 = properties37.values();
        boolean boolean63 = properties0.equals((java.lang.Object) properties37);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties64 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties64.setSerialJtaTransactions(false);
        atomikosProperties64.setThreadedTwoPhaseCommit(true);
        atomikosProperties64.setMaxTimeout((long) '#');
        boolean boolean71 = atomikosProperties64.isEnableLogging();
        atomikosProperties64.setMaxActives((int) '#');
        boolean boolean74 = atomikosProperties64.isForceShutdownOnVmExit();
        atomikosProperties64.setMaxActives((int) (short) 1);
        boolean boolean77 = properties37.contains((java.lang.Object) (short) 1);
        org.junit.Assert.assertNotNull(objCollection1);
        org.junit.Assert.assertNotNull(objEnumeration2);
        org.junit.Assert.assertNull(obj5);
        org.junit.Assert.assertNotNull(strSet6);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNull(str17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNull(str21);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNull(obj39);
        org.junit.Assert.assertNotNull(objEnumeration40);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertNotNull(objSet42);
        org.junit.Assert.assertNotNull(objEnumeration43);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "{}" + "'", str46, "{}");
        org.junit.Assert.assertNull(obj49);
        org.junit.Assert.assertNotNull(objEnumeration50);
        org.junit.Assert.assertNull(obj54);
        org.junit.Assert.assertNotNull(objEnumeration55);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertNotNull(objSet57);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertEquals("'" + obj59 + "' != '" + true + "'", obj59, true);
        org.junit.Assert.assertNull(obj60);
        org.junit.Assert.assertTrue("'" + int61 + "' != '" + 0 + "'", int61 == 0);
        org.junit.Assert.assertNotNull(objCollection62);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + true + "'", boolean71 == true);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + false + "'", boolean77 == false);
    }

    @Test
    public void test5291() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test5291");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration3 = properties0.elements();
        boolean boolean4 = properties0.isEmpty();
        java.util.Set<java.lang.Object> objSet5 = properties0.keySet();
        java.util.Enumeration<java.lang.Object> objEnumeration6 = properties0.keys();
        java.util.Enumeration<java.lang.Object> objEnumeration7 = properties0.elements();
        java.util.Properties properties8 = new java.util.Properties();
        java.util.Properties properties9 = new java.util.Properties();
        java.lang.Object obj11 = properties9.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet12 = properties9.stringPropertyNames();
        boolean boolean13 = properties8.containsValue((java.lang.Object) properties9);
        java.util.Collection<java.lang.Object> objCollection14 = properties8.values();
        java.util.Properties properties16 = new java.util.Properties();
        java.lang.Object obj18 = properties16.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration19 = properties16.elements();
        boolean boolean20 = properties16.isEmpty();
        java.util.Set<java.lang.Object> objSet21 = properties16.keySet();
        java.lang.Object obj22 = properties8.putIfAbsent((java.lang.Object) "hi!", (java.lang.Object) objSet21);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties23 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties23.setSerialJtaTransactions(false);
        boolean boolean26 = atomikosProperties23.isSerialJtaTransactions();
        java.util.Properties properties27 = atomikosProperties23.asProperties();
        java.lang.Object obj30 = properties27.setProperty("hi!", "");
        java.util.Properties properties31 = new java.util.Properties(properties27);
        java.util.Properties properties32 = new java.util.Properties();
        java.lang.Object obj34 = properties32.remove((java.lang.Object) 0.0d);
        java.util.Properties properties35 = new java.util.Properties();
        java.util.Collection<java.lang.Object> objCollection36 = properties35.values();
        java.util.Enumeration<java.lang.Object> objEnumeration37 = properties35.keys();
        java.util.Properties properties38 = new java.util.Properties();
        java.lang.Object obj40 = properties38.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration41 = properties38.elements();
        boolean boolean42 = properties38.isEmpty();
        java.util.Set<java.lang.Object> objSet43 = properties38.keySet();
        java.util.Enumeration<java.lang.Object> objEnumeration44 = properties38.keys();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet45 = properties38.entrySet();
        java.lang.Object obj46 = properties32.put((java.lang.Object) properties35, (java.lang.Object) properties38);
        java.lang.Object obj47 = properties8.putIfAbsent((java.lang.Object) properties31, (java.lang.Object) properties38);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties48 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties48.setSerialJtaTransactions(false);
        atomikosProperties48.setThreadedTwoPhaseCommit(true);
        atomikosProperties48.setSerialJtaTransactions(false);
        java.lang.String str55 = atomikosProperties48.getService();
        java.util.Properties properties56 = atomikosProperties48.asProperties();
        java.lang.Object obj57 = properties0.replace((java.lang.Object) properties8, (java.lang.Object) atomikosProperties48);
        boolean boolean58 = properties0.isEmpty();
        java.lang.Class<?> wildcardClass59 = properties0.getClass();
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(objEnumeration3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(objSet5);
        org.junit.Assert.assertNotNull(objEnumeration6);
        org.junit.Assert.assertNotNull(objEnumeration7);
        org.junit.Assert.assertNull(obj11);
        org.junit.Assert.assertNotNull(strSet12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(objCollection14);
        org.junit.Assert.assertNull(obj18);
        org.junit.Assert.assertNotNull(objEnumeration19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNotNull(objSet21);
        org.junit.Assert.assertNull(obj22);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(properties27);
        org.junit.Assert.assertNull(obj30);
        org.junit.Assert.assertNull(obj34);
        org.junit.Assert.assertNotNull(objCollection36);
        org.junit.Assert.assertNotNull(objEnumeration37);
        org.junit.Assert.assertNull(obj40);
        org.junit.Assert.assertNotNull(objEnumeration41);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertNotNull(objSet43);
        org.junit.Assert.assertNotNull(objEnumeration44);
        org.junit.Assert.assertNotNull(objEntrySet45);
        org.junit.Assert.assertNull(obj46);
        org.junit.Assert.assertNull(obj47);
        org.junit.Assert.assertNull(str55);
        org.junit.Assert.assertNotNull(properties56);
        org.junit.Assert.assertNull(obj57);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertNotNull(wildcardClass59);
    }

    @Test
    public void test5292() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test5292");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        boolean boolean4 = properties0.containsValue((java.lang.Object) "hi!");
        java.lang.Object obj7 = properties0.put((java.lang.Object) (byte) -1, (java.lang.Object) 100L);
        java.util.Properties properties8 = new java.util.Properties();
        java.util.Properties properties9 = new java.util.Properties();
        java.lang.Object obj11 = properties9.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet12 = properties9.stringPropertyNames();
        boolean boolean13 = properties8.containsValue((java.lang.Object) properties9);
        java.util.Collection<java.lang.Object> objCollection14 = properties8.values();
        java.util.Properties properties16 = new java.util.Properties();
        java.lang.Object obj18 = properties16.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration19 = properties16.elements();
        boolean boolean20 = properties16.isEmpty();
        java.util.Set<java.lang.Object> objSet21 = properties16.keySet();
        java.lang.Object obj22 = properties8.putIfAbsent((java.lang.Object) "hi!", (java.lang.Object) objSet21);
        java.util.Set<java.lang.Object> objSet23 = properties8.keySet();
        boolean boolean24 = properties0.containsKey((java.lang.Object) properties8);
        java.util.Collection<java.lang.Object> objCollection25 = properties8.values();
        java.util.Set<java.lang.Object> objSet26 = properties8.keySet();
        java.util.Properties properties27 = new java.util.Properties();
        java.lang.Object obj29 = properties27.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet30 = properties27.stringPropertyNames();
        java.util.Properties properties31 = new java.util.Properties();
        java.util.Properties properties32 = new java.util.Properties();
        java.lang.Object obj34 = properties32.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet35 = properties32.stringPropertyNames();
        boolean boolean36 = properties31.containsValue((java.lang.Object) properties32);
        java.util.Collection<java.lang.Object> objCollection37 = properties31.values();
        java.util.Enumeration<?> wildcardEnumeration38 = properties31.propertyNames();
        java.lang.Object obj40 = properties27.put((java.lang.Object) wildcardEnumeration38, (java.lang.Object) 10.0d);
        java.util.Set<java.lang.String> strSet41 = properties27.stringPropertyNames();
        java.util.Set<java.lang.String> strSet42 = properties27.stringPropertyNames();
        boolean boolean43 = properties27.isEmpty();
        boolean boolean44 = properties27.isEmpty();
        java.util.Properties properties45 = new java.util.Properties();
        java.lang.Object obj47 = properties45.remove((java.lang.Object) 0.0d);
        java.util.Properties properties48 = new java.util.Properties();
        java.util.Collection<java.lang.Object> objCollection49 = properties48.values();
        java.util.Enumeration<java.lang.Object> objEnumeration50 = properties48.keys();
        java.util.Properties properties51 = new java.util.Properties();
        java.lang.Object obj53 = properties51.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration54 = properties51.elements();
        boolean boolean55 = properties51.isEmpty();
        java.util.Set<java.lang.Object> objSet56 = properties51.keySet();
        java.util.Enumeration<java.lang.Object> objEnumeration57 = properties51.keys();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet58 = properties51.entrySet();
        java.lang.Object obj59 = properties45.put((java.lang.Object) properties48, (java.lang.Object) properties51);
        java.lang.Object obj60 = properties48.clone();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties61 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties61.setSerialJtaTransactions(false);
        atomikosProperties61.setThreadedTwoPhaseCommit(true);
        atomikosProperties61.setMaxTimeout((long) '#');
        boolean boolean68 = atomikosProperties61.isEnableLogging();
        atomikosProperties61.setCheckpointInterval((long) 100);
        atomikosProperties61.setSerialJtaTransactions(true);
        boolean boolean73 = properties48.equals((java.lang.Object) atomikosProperties61);
        java.util.Enumeration<?> wildcardEnumeration74 = properties48.propertyNames();
        java.lang.Object obj75 = properties48.clone();
        java.lang.Object obj76 = properties27.get((java.lang.Object) properties48);
        java.lang.Object obj77 = properties8.remove((java.lang.Object) properties27);
        java.lang.String str78 = properties8.toString();
        properties8.clear();
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNull(obj7);
        org.junit.Assert.assertNull(obj11);
        org.junit.Assert.assertNotNull(strSet12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(objCollection14);
        org.junit.Assert.assertNull(obj18);
        org.junit.Assert.assertNotNull(objEnumeration19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNotNull(objSet21);
        org.junit.Assert.assertNull(obj22);
        org.junit.Assert.assertNotNull(objSet23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(objCollection25);
        org.junit.Assert.assertNotNull(objSet26);
        org.junit.Assert.assertNull(obj29);
        org.junit.Assert.assertNotNull(strSet30);
        org.junit.Assert.assertNull(obj34);
        org.junit.Assert.assertNotNull(strSet35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(objCollection37);
        org.junit.Assert.assertNotNull(wildcardEnumeration38);
        org.junit.Assert.assertNull(obj40);
        org.junit.Assert.assertNotNull(strSet41);
        org.junit.Assert.assertNotNull(strSet42);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNull(obj47);
        org.junit.Assert.assertNotNull(objCollection49);
        org.junit.Assert.assertNotNull(objEnumeration50);
        org.junit.Assert.assertNull(obj53);
        org.junit.Assert.assertNotNull(objEnumeration54);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertNotNull(objSet56);
        org.junit.Assert.assertNotNull(objEnumeration57);
        org.junit.Assert.assertNotNull(objEntrySet58);
        org.junit.Assert.assertNull(obj59);
        org.junit.Assert.assertNotNull(obj60);
        org.junit.Assert.assertEquals(obj60.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj60), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj60), "{}");
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + true + "'", boolean68 == true);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertNotNull(wildcardEnumeration74);
        org.junit.Assert.assertNotNull(obj75);
        org.junit.Assert.assertEquals(obj75.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj75), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj75), "{}");
        org.junit.Assert.assertNull(obj76);
        org.junit.Assert.assertNull(obj77);
        org.junit.Assert.assertEquals("'" + str78 + "' != '" + "{hi!=[]}" + "'", str78, "{hi!=[]}");
    }

    @Test
    public void test5293() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test5293");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet3 = properties0.stringPropertyNames();
        java.lang.String str4 = properties0.toString();
        java.util.Properties properties5 = new java.util.Properties();
        java.lang.Object obj7 = properties5.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration8 = properties5.elements();
        boolean boolean9 = properties5.isEmpty();
        java.lang.Object obj12 = properties5.setProperty("tmlog", "");
        properties0.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties5);
        java.util.Set<java.lang.Object> objSet14 = properties0.keySet();
        java.io.OutputStream outputStream15 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties0.store(outputStream15, "");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(strSet3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "{}" + "'", str4, "{}");
        org.junit.Assert.assertNull(obj7);
        org.junit.Assert.assertNotNull(objEnumeration8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertNull(obj12);
        org.junit.Assert.assertNotNull(objSet14);
    }

    @Test
    public void test5294() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test5294");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        java.util.Properties properties3 = new java.util.Properties();
        java.util.Collection<java.lang.Object> objCollection4 = properties3.values();
        java.util.Enumeration<java.lang.Object> objEnumeration5 = properties3.keys();
        java.util.Properties properties6 = new java.util.Properties();
        java.lang.Object obj8 = properties6.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration9 = properties6.elements();
        boolean boolean10 = properties6.isEmpty();
        java.util.Set<java.lang.Object> objSet11 = properties6.keySet();
        java.util.Enumeration<java.lang.Object> objEnumeration12 = properties6.keys();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet13 = properties6.entrySet();
        java.lang.Object obj14 = properties0.put((java.lang.Object) properties3, (java.lang.Object) properties6);
        java.lang.Object obj15 = properties3.clone();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties16 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties16.setSerialJtaTransactions(false);
        atomikosProperties16.setThreadedTwoPhaseCommit(true);
        atomikosProperties16.setMaxTimeout((long) '#');
        boolean boolean23 = atomikosProperties16.isEnableLogging();
        atomikosProperties16.setCheckpointInterval((long) 100);
        atomikosProperties16.setSerialJtaTransactions(true);
        boolean boolean28 = properties3.equals((java.lang.Object) atomikosProperties16);
        int int29 = atomikosProperties16.getMaxActives();
        long long30 = atomikosProperties16.getCheckpointInterval();
        java.util.Properties properties31 = atomikosProperties16.asProperties();
        java.io.OutputStream outputStream32 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties31.storeToXML(outputStream32, "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=false, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}", "");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(objCollection4);
        org.junit.Assert.assertNotNull(objEnumeration5);
        org.junit.Assert.assertNull(obj8);
        org.junit.Assert.assertNotNull(objEnumeration9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(objSet11);
        org.junit.Assert.assertNotNull(objEnumeration12);
        org.junit.Assert.assertNotNull(objEntrySet13);
        org.junit.Assert.assertNull(obj14);
        org.junit.Assert.assertNotNull(obj15);
        org.junit.Assert.assertEquals(obj15.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj15), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj15), "{}");
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 50 + "'", int29 == 50);
        org.junit.Assert.assertTrue("'" + long30 + "' != '" + 100L + "'", long30 == 100L);
        org.junit.Assert.assertNotNull(properties31);
    }

    @Test
    public void test5295() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test5295");
        java.util.Properties properties0 = new java.util.Properties();
        java.util.Properties properties1 = new java.util.Properties();
        java.lang.Object obj3 = properties1.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet4 = properties1.stringPropertyNames();
        boolean boolean5 = properties0.containsValue((java.lang.Object) properties1);
        java.util.Collection<java.lang.Object> objCollection6 = properties0.values();
        java.util.Properties properties8 = new java.util.Properties();
        java.lang.Object obj10 = properties8.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration11 = properties8.elements();
        boolean boolean12 = properties8.isEmpty();
        java.util.Set<java.lang.Object> objSet13 = properties8.keySet();
        java.lang.Object obj14 = properties0.putIfAbsent((java.lang.Object) "hi!", (java.lang.Object) objSet13);
        java.util.Set<java.lang.Object> objSet15 = properties0.keySet();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties16 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties16.setSerialJtaTransactions(false);
        atomikosProperties16.setThreadedTwoPhaseCommit(true);
        atomikosProperties16.setMaxTimeout((long) '#');
        boolean boolean23 = atomikosProperties16.isEnableLogging();
        atomikosProperties16.setCheckpointInterval((long) (byte) -1);
        atomikosProperties16.setEnableLogging(true);
        java.util.Properties properties28 = new java.util.Properties();
        java.lang.Object obj30 = properties28.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration31 = properties28.elements();
        boolean boolean32 = properties28.isEmpty();
        java.util.Enumeration<java.lang.Object> objEnumeration33 = properties28.elements();
        java.lang.Object obj34 = properties0.replace((java.lang.Object) true, (java.lang.Object) properties28);
        java.util.Properties properties35 = new java.util.Properties();
        java.lang.Object obj37 = properties35.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration38 = properties35.elements();
        int int39 = properties35.size();
        java.util.Properties properties40 = new java.util.Properties(properties35);
        java.util.Set<java.lang.String> strSet41 = properties35.stringPropertyNames();
        boolean boolean42 = properties0.contains((java.lang.Object) strSet41);
        java.util.Collection<java.lang.Object> objCollection43 = properties0.values();
        java.util.Properties properties44 = new java.util.Properties(properties0);
        java.util.Properties properties45 = new java.util.Properties(properties44);
        java.util.Set<java.lang.Object> objSet46 = properties45.keySet();
        java.util.Collection<java.lang.Object> objCollection47 = properties45.values();
        org.junit.Assert.assertNull(obj3);
        org.junit.Assert.assertNotNull(strSet4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(objCollection6);
        org.junit.Assert.assertNull(obj10);
        org.junit.Assert.assertNotNull(objEnumeration11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(objSet13);
        org.junit.Assert.assertNull(obj14);
        org.junit.Assert.assertNotNull(objSet15);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNull(obj30);
        org.junit.Assert.assertNotNull(objEnumeration31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertNotNull(objEnumeration33);
        org.junit.Assert.assertNull(obj34);
        org.junit.Assert.assertNull(obj37);
        org.junit.Assert.assertNotNull(objEnumeration38);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 0 + "'", int39 == 0);
        org.junit.Assert.assertNotNull(strSet41);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertNotNull(objCollection43);
        org.junit.Assert.assertNotNull(objSet46);
        org.junit.Assert.assertNotNull(objCollection47);
    }

    @Test
    public void test5296() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test5296");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration3 = properties0.elements();
        boolean boolean4 = properties0.isEmpty();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet5 = properties0.entrySet();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties7 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties7.setSerialJtaTransactions(false);
        atomikosProperties7.setThreadedTwoPhaseCommit(true);
        atomikosProperties7.setMaxTimeout((long) '#');
        boolean boolean14 = atomikosProperties7.isForceShutdownOnVmExit();
        java.lang.Object obj15 = properties0.put((java.lang.Object) (short) 1, (java.lang.Object) atomikosProperties7);
        atomikosProperties7.setForceShutdownOnVmExit(false);
        boolean boolean18 = atomikosProperties7.isThreadedTwoPhaseCommit();
        long long19 = atomikosProperties7.getDefaultJtaTimeout();
        atomikosProperties7.setThreadedTwoPhaseCommit(false);
        boolean boolean22 = atomikosProperties7.isEnableLogging();
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(objEnumeration3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(objEntrySet5);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNull(obj15);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + long19 + "' != '" + 10000L + "'", long19 == 10000L);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
    }

    @Test
    public void test5297() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test5297");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        java.util.Properties properties3 = new java.util.Properties();
        java.util.Collection<java.lang.Object> objCollection4 = properties3.values();
        java.util.Enumeration<java.lang.Object> objEnumeration5 = properties3.keys();
        java.util.Properties properties6 = new java.util.Properties();
        java.lang.Object obj8 = properties6.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration9 = properties6.elements();
        boolean boolean10 = properties6.isEmpty();
        java.util.Set<java.lang.Object> objSet11 = properties6.keySet();
        java.util.Enumeration<java.lang.Object> objEnumeration12 = properties6.keys();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet13 = properties6.entrySet();
        java.lang.Object obj14 = properties0.put((java.lang.Object) properties3, (java.lang.Object) properties6);
        java.util.Properties properties15 = new java.util.Properties();
        java.util.Properties properties16 = new java.util.Properties();
        java.lang.Object obj18 = properties16.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet19 = properties16.stringPropertyNames();
        boolean boolean20 = properties15.containsValue((java.lang.Object) properties16);
        java.util.Collection<java.lang.Object> objCollection21 = properties15.values();
        java.util.Properties properties23 = new java.util.Properties();
        java.lang.Object obj25 = properties23.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration26 = properties23.elements();
        boolean boolean27 = properties23.isEmpty();
        java.util.Set<java.lang.Object> objSet28 = properties23.keySet();
        java.lang.Object obj29 = properties15.putIfAbsent((java.lang.Object) "hi!", (java.lang.Object) objSet28);
        java.util.Set<java.lang.Object> objSet30 = properties15.keySet();
        java.util.Set<java.lang.Object> objSet31 = properties15.keySet();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet32 = properties15.entrySet();
        java.lang.Object obj33 = properties3.remove((java.lang.Object) objEntrySet32);
        java.lang.String str34 = properties3.toString();
        java.util.Properties properties35 = new java.util.Properties();
        java.lang.Object obj37 = properties35.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet38 = properties35.stringPropertyNames();
        java.lang.String str39 = properties35.toString();
        java.lang.String str40 = properties35.toString();
        java.util.Set<java.lang.Object> objSet41 = properties35.keySet();
        java.util.Properties properties42 = new java.util.Properties();
        java.lang.Object obj44 = properties42.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration45 = properties42.elements();
        boolean boolean46 = properties42.isEmpty();
        java.util.Set<java.lang.Object> objSet47 = properties42.keySet();
        boolean boolean48 = properties42.isEmpty();
        java.lang.Object obj49 = properties3.putIfAbsent((java.lang.Object) properties35, (java.lang.Object) boolean48);
        java.util.Set<java.lang.String> strSet50 = properties35.stringPropertyNames();
        java.util.Properties properties51 = new java.util.Properties(properties35);
        java.util.Enumeration<java.lang.Object> objEnumeration52 = properties51.elements();
        java.lang.Object obj53 = null;
        java.util.Properties properties54 = new java.util.Properties();
        java.lang.Object obj56 = properties54.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration57 = properties54.elements();
        boolean boolean58 = properties54.isEmpty();
        java.util.Set<java.lang.Object> objSet59 = properties54.keySet();
        boolean boolean60 = properties54.isEmpty();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet61 = properties54.entrySet();
        java.util.Properties properties62 = new java.util.Properties();
        java.lang.Object obj64 = properties62.remove((java.lang.Object) 0.0d);
        boolean boolean65 = properties62.isEmpty();
        java.lang.Object obj68 = properties62.setProperty("", "hi!");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties69 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties69.setSerialJtaTransactions(false);
        boolean boolean72 = properties54.remove((java.lang.Object) properties62, (java.lang.Object) atomikosProperties69);
        java.lang.String str74 = properties54.getProperty("tmlog");
        java.util.Set<java.lang.Object> objSet75 = properties54.keySet();
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean76 = properties51.remove(obj53, (java.lang.Object) objSet75);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(objCollection4);
        org.junit.Assert.assertNotNull(objEnumeration5);
        org.junit.Assert.assertNull(obj8);
        org.junit.Assert.assertNotNull(objEnumeration9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(objSet11);
        org.junit.Assert.assertNotNull(objEnumeration12);
        org.junit.Assert.assertNotNull(objEntrySet13);
        org.junit.Assert.assertNull(obj14);
        org.junit.Assert.assertNull(obj18);
        org.junit.Assert.assertNotNull(strSet19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(objCollection21);
        org.junit.Assert.assertNull(obj25);
        org.junit.Assert.assertNotNull(objEnumeration26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNotNull(objSet28);
        org.junit.Assert.assertNull(obj29);
        org.junit.Assert.assertNotNull(objSet30);
        org.junit.Assert.assertNotNull(objSet31);
        org.junit.Assert.assertNotNull(objEntrySet32);
        org.junit.Assert.assertNull(obj33);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "{}" + "'", str34, "{}");
        org.junit.Assert.assertNull(obj37);
        org.junit.Assert.assertNotNull(strSet38);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "{}" + "'", str39, "{}");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "{}" + "'", str40, "{}");
        org.junit.Assert.assertNotNull(objSet41);
        org.junit.Assert.assertNull(obj44);
        org.junit.Assert.assertNotNull(objEnumeration45);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertNotNull(objSet47);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertNull(obj49);
        org.junit.Assert.assertNotNull(strSet50);
        org.junit.Assert.assertNotNull(objEnumeration52);
        org.junit.Assert.assertNull(obj56);
        org.junit.Assert.assertNotNull(objEnumeration57);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertNotNull(objSet59);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertNotNull(objEntrySet61);
        org.junit.Assert.assertNull(obj64);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65 == true);
        org.junit.Assert.assertNull(obj68);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertNull(str74);
        org.junit.Assert.assertNotNull(objSet75);
    }

    @Test
    public void test5298() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test5298");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setSerialJtaTransactions(false);
        atomikosProperties0.setThreadedTwoPhaseCommit(true);
        atomikosProperties0.setThreadedTwoPhaseCommit(true);
        java.util.Properties properties7 = atomikosProperties0.asProperties();
        int int8 = atomikosProperties0.getMaxActives();
        atomikosProperties0.setService("hi!");
        long long11 = atomikosProperties0.getMaxTimeout();
        atomikosProperties0.setTransactionManagerUniqueName("hi!");
        atomikosProperties0.setEnableLogging(false);
        atomikosProperties0.setMaxActives((int) 'a');
        atomikosProperties0.setSerialJtaTransactions(true);
        atomikosProperties0.setMaxTimeout((long) 2);
        boolean boolean22 = atomikosProperties0.isSerialJtaTransactions();
        java.lang.String str23 = atomikosProperties0.getService();
        org.junit.Assert.assertNotNull(properties7);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 50 + "'", int8 == 50);
        org.junit.Assert.assertTrue("'" + long11 + "' != '" + 300000L + "'", long11 == 300000L);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "hi!" + "'", str23, "hi!");
    }

    @Test
    public void test5299() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test5299");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setSerialJtaTransactions(false);
        atomikosProperties0.setThreadedTwoPhaseCommit(true);
        atomikosProperties0.setThreadedTwoPhaseCommit(true);
        java.util.Properties properties7 = atomikosProperties0.asProperties();
        int int8 = atomikosProperties0.getMaxActives();
        atomikosProperties0.setTransactionManagerUniqueName("hi!");
        boolean boolean11 = atomikosProperties0.isThreadedTwoPhaseCommit();
        atomikosProperties0.setLogBaseDir("{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=-1, com.atomikos.icatch.serial_jta_transactions=false, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=35, com.atomikos.icatch.threaded_2pc=true, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name={=hi!}}");
        org.junit.Assert.assertNotNull(properties7);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 50 + "'", int8 == 50);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
    }

    @Test
    public void test5300() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test5300");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setSerialJtaTransactions(false);
        boolean boolean3 = atomikosProperties0.isSerialJtaTransactions();
        java.lang.String str4 = atomikosProperties0.getService();
        boolean boolean5 = atomikosProperties0.isEnableLogging();
        java.util.Properties properties6 = atomikosProperties0.asProperties();
        java.util.Set<java.lang.String> strSet7 = properties6.stringPropertyNames();
        boolean boolean8 = properties6.isEmpty();
        boolean boolean9 = properties6.isEmpty();
        java.util.Enumeration<?> wildcardEnumeration10 = properties6.propertyNames();
        java.io.InputStream inputStream11 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties6.loadFromXML(inputStream11);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNotNull(properties6);
        org.junit.Assert.assertNotNull(strSet7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(wildcardEnumeration10);
    }

    @Test
    public void test5301() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test5301");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setSerialJtaTransactions(false);
        boolean boolean3 = atomikosProperties0.isThreadedTwoPhaseCommit();
        boolean boolean4 = atomikosProperties0.isForceShutdownOnVmExit();
        boolean boolean5 = atomikosProperties0.isEnableLogging();
        boolean boolean6 = atomikosProperties0.isThreadedTwoPhaseCommit();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
    }

    @Test
    public void test5302() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test5302");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration3 = properties0.elements();
        int int4 = properties0.size();
        java.util.Properties properties5 = new java.util.Properties();
        java.lang.Object obj7 = properties5.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration8 = properties5.elements();
        boolean boolean9 = properties5.isEmpty();
        java.util.Set<java.lang.Object> objSet10 = properties5.keySet();
        boolean boolean11 = properties0.containsKey((java.lang.Object) objSet10);
        java.util.Enumeration<java.lang.Object> objEnumeration12 = properties0.keys();
        java.util.Properties properties13 = new java.util.Properties();
        java.lang.Object obj15 = properties13.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration16 = properties13.elements();
        boolean boolean17 = properties13.isEmpty();
        java.util.Set<java.lang.Object> objSet18 = properties13.keySet();
        java.util.Enumeration<java.lang.Object> objEnumeration19 = properties13.keys();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet20 = properties13.entrySet();
        boolean boolean22 = properties0.remove((java.lang.Object) properties13, (java.lang.Object) 1.0f);
        boolean boolean23 = properties13.isEmpty();
        properties13.clear();
        java.util.Properties properties25 = new java.util.Properties();
        java.lang.Object obj27 = properties25.remove((java.lang.Object) 0.0d);
        boolean boolean28 = properties25.isEmpty();
        java.lang.Object obj31 = properties25.setProperty("", "hi!");
        java.util.Properties properties32 = new java.util.Properties();
        java.lang.Object obj34 = properties32.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration35 = properties32.elements();
        boolean boolean36 = properties32.isEmpty();
        java.util.Set<java.lang.Object> objSet37 = properties32.keySet();
        boolean boolean38 = properties32.isEmpty();
        java.util.Properties properties39 = new java.util.Properties();
        java.util.Collection<java.lang.Object> objCollection40 = properties39.values();
        java.util.Enumeration<java.lang.Object> objEnumeration41 = properties39.keys();
        java.lang.Object obj42 = properties32.remove((java.lang.Object) properties39);
        java.lang.Object obj43 = properties25.get((java.lang.Object) properties39);
        boolean boolean44 = properties25.isEmpty();
        java.util.Properties properties45 = new java.util.Properties();
        java.lang.Object obj47 = properties45.remove((java.lang.Object) 0.0d);
        boolean boolean48 = properties45.isEmpty();
        java.lang.Object obj51 = properties45.setProperty("", "hi!");
        java.util.Properties properties52 = new java.util.Properties();
        java.lang.Object obj54 = properties52.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration55 = properties52.elements();
        boolean boolean56 = properties52.isEmpty();
        java.util.Set<java.lang.Object> objSet57 = properties52.keySet();
        boolean boolean58 = properties52.isEmpty();
        java.util.Properties properties59 = new java.util.Properties();
        java.util.Collection<java.lang.Object> objCollection60 = properties59.values();
        java.util.Enumeration<java.lang.Object> objEnumeration61 = properties59.keys();
        java.lang.Object obj62 = properties52.remove((java.lang.Object) properties59);
        java.lang.Object obj63 = properties45.get((java.lang.Object) properties59);
        java.util.Enumeration<java.lang.Object> objEnumeration64 = properties59.keys();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties65 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties65.setSerialJtaTransactions(false);
        atomikosProperties65.setThreadedTwoPhaseCommit(true);
        atomikosProperties65.setMaxTimeout((long) '#');
        boolean boolean72 = atomikosProperties65.isForceShutdownOnVmExit();
        long long73 = atomikosProperties65.getCheckpointInterval();
        java.lang.Object obj74 = new java.lang.Object();
        boolean boolean76 = properties59.replace((java.lang.Object) long73, obj74, (java.lang.Object) "hi!");
        java.util.Set<java.lang.Object> objSet77 = properties59.keySet();
        java.util.Properties properties78 = new java.util.Properties();
        java.util.Properties properties79 = new java.util.Properties();
        java.lang.Object obj81 = properties79.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet82 = properties79.stringPropertyNames();
        boolean boolean83 = properties78.containsValue((java.lang.Object) properties79);
        java.util.Collection<java.lang.Object> objCollection84 = properties78.values();
        java.util.Enumeration<?> wildcardEnumeration85 = properties78.propertyNames();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet86 = properties78.entrySet();
        properties59.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties78);
        java.util.Enumeration<java.lang.Object> objEnumeration88 = properties59.elements();
        java.lang.Object obj89 = properties59.clone();
        java.util.Enumeration<?> wildcardEnumeration90 = properties59.propertyNames();
        boolean boolean91 = properties25.containsKey((java.lang.Object) wildcardEnumeration90);
        java.lang.Object obj92 = properties13.get((java.lang.Object) properties25);
        java.io.PrintWriter printWriter93 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties25.list(printWriter93);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(objEnumeration3);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNull(obj7);
        org.junit.Assert.assertNotNull(objEnumeration8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertNotNull(objSet10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(objEnumeration12);
        org.junit.Assert.assertNull(obj15);
        org.junit.Assert.assertNotNull(objEnumeration16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(objSet18);
        org.junit.Assert.assertNotNull(objEnumeration19);
        org.junit.Assert.assertNotNull(objEntrySet20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNull(obj27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNull(obj31);
        org.junit.Assert.assertNull(obj34);
        org.junit.Assert.assertNotNull(objEnumeration35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNotNull(objSet37);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertNotNull(objCollection40);
        org.junit.Assert.assertNotNull(objEnumeration41);
        org.junit.Assert.assertNull(obj42);
        org.junit.Assert.assertNull(obj43);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNull(obj47);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertNull(obj51);
        org.junit.Assert.assertNull(obj54);
        org.junit.Assert.assertNotNull(objEnumeration55);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertNotNull(objSet57);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertNotNull(objCollection60);
        org.junit.Assert.assertNotNull(objEnumeration61);
        org.junit.Assert.assertNull(obj62);
        org.junit.Assert.assertNull(obj63);
        org.junit.Assert.assertNotNull(objEnumeration64);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertTrue("'" + long73 + "' != '" + 500L + "'", long73 == 500L);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
        org.junit.Assert.assertNotNull(objSet77);
        org.junit.Assert.assertNull(obj81);
        org.junit.Assert.assertNotNull(strSet82);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + false + "'", boolean83 == false);
        org.junit.Assert.assertNotNull(objCollection84);
        org.junit.Assert.assertNotNull(wildcardEnumeration85);
        org.junit.Assert.assertNotNull(objEntrySet86);
        org.junit.Assert.assertNotNull(objEnumeration88);
        org.junit.Assert.assertNotNull(obj89);
        org.junit.Assert.assertEquals(obj89.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj89), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj89), "{}");
        org.junit.Assert.assertNotNull(wildcardEnumeration90);
        org.junit.Assert.assertTrue("'" + boolean91 + "' != '" + false + "'", boolean91 == false);
        org.junit.Assert.assertNull(obj92);
    }

    @Test
    public void test5303() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test5303");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setSerialJtaTransactions(false);
        atomikosProperties0.setThreadedTwoPhaseCommit(true);
        atomikosProperties0.setMaxTimeout((long) '#');
        boolean boolean7 = atomikosProperties0.isEnableLogging();
        int int8 = atomikosProperties0.getMaxActives();
        atomikosProperties0.setDefaultJtaTimeout((long) (short) 0);
        java.util.Properties properties11 = atomikosProperties0.asProperties();
        java.util.Properties properties12 = new java.util.Properties();
        java.lang.Object obj14 = properties12.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration15 = properties12.elements();
        boolean boolean16 = properties12.isEmpty();
        java.util.Set<java.lang.Object> objSet17 = properties12.keySet();
        java.util.Enumeration<java.lang.Object> objEnumeration18 = properties12.keys();
        java.lang.String str20 = properties12.getProperty("hi!");
        java.lang.String str22 = properties12.getProperty("");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties23 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties23.setSerialJtaTransactions(false);
        atomikosProperties23.setThreadedTwoPhaseCommit(true);
        atomikosProperties23.setEnableLogging(false);
        boolean boolean30 = properties12.containsKey((java.lang.Object) atomikosProperties23);
        java.lang.Object obj33 = properties12.setProperty("hi!", "");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties34 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties34.setSerialJtaTransactions(false);
        boolean boolean37 = atomikosProperties34.isThreadedTwoPhaseCommit();
        atomikosProperties34.setThreadedTwoPhaseCommit(false);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties40 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties40.setSerialJtaTransactions(false);
        atomikosProperties40.setThreadedTwoPhaseCommit(true);
        atomikosProperties40.setMaxTimeout((long) '#');
        boolean boolean47 = atomikosProperties40.isEnableLogging();
        java.lang.Object obj48 = properties12.put((java.lang.Object) false, (java.lang.Object) boolean47);
        java.lang.Object obj49 = properties12.clone();
        java.lang.Object obj50 = properties12.clone();
        properties11.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties12);
        boolean boolean52 = properties11.isEmpty();
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 50 + "'", int8 == 50);
        org.junit.Assert.assertNotNull(properties11);
        org.junit.Assert.assertNull(obj14);
        org.junit.Assert.assertNotNull(objEnumeration15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(objSet17);
        org.junit.Assert.assertNotNull(objEnumeration18);
        org.junit.Assert.assertNull(str20);
        org.junit.Assert.assertNull(str22);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNull(obj33);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertNull(obj48);
        org.junit.Assert.assertNotNull(obj49);
        org.junit.Assert.assertEquals(obj49.toString(), "{hi!=, false=true}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj49), "{hi!=, false=true}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj49), "{hi!=, false=true}");
        org.junit.Assert.assertNotNull(obj50);
        org.junit.Assert.assertEquals(obj50.toString(), "{hi!=, false=true}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj50), "{hi!=, false=true}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj50), "{hi!=, false=true}");
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
    }

    @Test
    public void test5304() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test5304");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration3 = properties0.elements();
        boolean boolean4 = properties0.isEmpty();
        java.util.Set<java.lang.Object> objSet5 = properties0.keySet();
        boolean boolean6 = properties0.isEmpty();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet7 = properties0.entrySet();
        java.util.Properties properties8 = new java.util.Properties();
        java.lang.Object obj10 = properties8.remove((java.lang.Object) 0.0d);
        boolean boolean11 = properties8.isEmpty();
        java.lang.Object obj14 = properties8.setProperty("", "hi!");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties15 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties15.setSerialJtaTransactions(false);
        boolean boolean18 = properties0.remove((java.lang.Object) properties8, (java.lang.Object) atomikosProperties15);
        java.util.Properties properties19 = new java.util.Properties();
        java.lang.Object obj21 = properties19.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration22 = properties19.elements();
        int int23 = properties19.size();
        java.util.Properties properties24 = new java.util.Properties(properties19);
        boolean boolean25 = properties24.isEmpty();
        java.util.Properties properties26 = new java.util.Properties();
        java.lang.Object obj28 = properties26.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration29 = properties26.elements();
        int int30 = properties26.size();
        java.util.Properties properties31 = new java.util.Properties();
        java.lang.Object obj33 = properties31.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration34 = properties31.elements();
        boolean boolean35 = properties31.isEmpty();
        java.util.Set<java.lang.Object> objSet36 = properties31.keySet();
        boolean boolean37 = properties26.containsKey((java.lang.Object) objSet36);
        java.util.Enumeration<java.lang.Object> objEnumeration38 = properties26.keys();
        java.util.Properties properties39 = new java.util.Properties();
        java.lang.Object obj41 = properties39.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration42 = properties39.elements();
        boolean boolean43 = properties39.isEmpty();
        java.util.Set<java.lang.Object> objSet44 = properties39.keySet();
        java.util.Enumeration<java.lang.Object> objEnumeration45 = properties39.keys();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet46 = properties39.entrySet();
        boolean boolean48 = properties26.remove((java.lang.Object) properties39, (java.lang.Object) 1.0f);
        boolean boolean49 = properties24.contains((java.lang.Object) properties39);
        properties0.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties39);
        java.util.Properties properties51 = new java.util.Properties();
        java.lang.Object obj53 = properties51.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration54 = properties51.elements();
        int int55 = properties51.size();
        java.util.Properties properties56 = new java.util.Properties(properties51);
        boolean boolean57 = properties56.isEmpty();
        java.util.Properties properties58 = new java.util.Properties();
        java.lang.Object obj60 = properties58.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration61 = properties58.elements();
        int int62 = properties58.size();
        java.util.Properties properties63 = new java.util.Properties();
        java.lang.Object obj65 = properties63.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration66 = properties63.elements();
        boolean boolean67 = properties63.isEmpty();
        java.util.Set<java.lang.Object> objSet68 = properties63.keySet();
        boolean boolean69 = properties58.containsKey((java.lang.Object) objSet68);
        java.util.Enumeration<java.lang.Object> objEnumeration70 = properties58.keys();
        java.util.Properties properties71 = new java.util.Properties();
        java.lang.Object obj73 = properties71.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration74 = properties71.elements();
        boolean boolean75 = properties71.isEmpty();
        java.util.Set<java.lang.Object> objSet76 = properties71.keySet();
        java.util.Enumeration<java.lang.Object> objEnumeration77 = properties71.keys();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet78 = properties71.entrySet();
        boolean boolean80 = properties58.remove((java.lang.Object) properties71, (java.lang.Object) 1.0f);
        boolean boolean81 = properties56.contains((java.lang.Object) properties71);
        java.util.Properties properties82 = new java.util.Properties(properties71);
        java.util.Properties properties83 = new java.util.Properties();
        java.lang.Object obj85 = properties83.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration86 = properties83.elements();
        boolean boolean87 = properties83.isEmpty();
        java.util.Set<java.lang.Object> objSet88 = properties83.keySet();
        java.util.Enumeration<java.lang.Object> objEnumeration89 = properties83.keys();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet90 = properties83.entrySet();
        java.util.Properties properties91 = new java.util.Properties(properties83);
        java.util.Set<java.lang.Object> objSet92 = properties83.keySet();
        java.lang.Object obj93 = properties0.putIfAbsent((java.lang.Object) properties71, (java.lang.Object) properties83);
        properties83.clear();
        java.io.InputStream inputStream95 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties83.load(inputStream95);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(objEnumeration3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(objSet5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(objEntrySet7);
        org.junit.Assert.assertNull(obj10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNull(obj14);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNull(obj21);
        org.junit.Assert.assertNotNull(objEnumeration22);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 0 + "'", int23 == 0);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNull(obj28);
        org.junit.Assert.assertNotNull(objEnumeration29);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 0 + "'", int30 == 0);
        org.junit.Assert.assertNull(obj33);
        org.junit.Assert.assertNotNull(objEnumeration34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertNotNull(objSet36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(objEnumeration38);
        org.junit.Assert.assertNull(obj41);
        org.junit.Assert.assertNotNull(objEnumeration42);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNotNull(objSet44);
        org.junit.Assert.assertNotNull(objEnumeration45);
        org.junit.Assert.assertNotNull(objEntrySet46);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNull(obj53);
        org.junit.Assert.assertNotNull(objEnumeration54);
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + 0 + "'", int55 == 0);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertNull(obj60);
        org.junit.Assert.assertNotNull(objEnumeration61);
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + 0 + "'", int62 == 0);
        org.junit.Assert.assertNull(obj65);
        org.junit.Assert.assertNotNull(objEnumeration66);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + true + "'", boolean67 == true);
        org.junit.Assert.assertNotNull(objSet68);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertNotNull(objEnumeration70);
        org.junit.Assert.assertNull(obj73);
        org.junit.Assert.assertNotNull(objEnumeration74);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + true + "'", boolean75 == true);
        org.junit.Assert.assertNotNull(objSet76);
        org.junit.Assert.assertNotNull(objEnumeration77);
        org.junit.Assert.assertNotNull(objEntrySet78);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", boolean80 == false);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + false + "'", boolean81 == false);
        org.junit.Assert.assertNull(obj85);
        org.junit.Assert.assertNotNull(objEnumeration86);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + true + "'", boolean87 == true);
        org.junit.Assert.assertNotNull(objSet88);
        org.junit.Assert.assertNotNull(objEnumeration89);
        org.junit.Assert.assertNotNull(objEntrySet90);
        org.junit.Assert.assertNotNull(objSet92);
        org.junit.Assert.assertNull(obj93);
    }

    @Test
    public void test5305() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test5305");
        java.util.Properties properties0 = new java.util.Properties();
        java.util.Properties properties1 = new java.util.Properties();
        java.lang.Object obj3 = properties1.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet4 = properties1.stringPropertyNames();
        boolean boolean5 = properties0.containsValue((java.lang.Object) properties1);
        java.util.Properties properties6 = new java.util.Properties();
        java.lang.Object obj8 = properties6.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration9 = properties6.elements();
        boolean boolean10 = properties6.isEmpty();
        java.util.Set<java.lang.Object> objSet11 = properties6.keySet();
        boolean boolean12 = properties6.isEmpty();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet13 = properties6.entrySet();
        java.util.Properties properties14 = new java.util.Properties();
        java.lang.Object obj16 = properties14.remove((java.lang.Object) 0.0d);
        boolean boolean17 = properties14.isEmpty();
        java.lang.Object obj20 = properties14.setProperty("", "hi!");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties21 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties21.setSerialJtaTransactions(false);
        boolean boolean24 = properties6.remove((java.lang.Object) properties14, (java.lang.Object) atomikosProperties21);
        boolean boolean25 = properties0.equals((java.lang.Object) atomikosProperties21);
        java.util.Properties properties26 = new java.util.Properties();
        java.lang.Object obj28 = properties26.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration29 = properties26.elements();
        boolean boolean30 = properties26.isEmpty();
        java.util.Set<java.lang.Object> objSet31 = properties26.keySet();
        boolean boolean32 = properties26.isEmpty();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet33 = properties26.entrySet();
        java.util.Properties properties34 = new java.util.Properties();
        java.lang.Object obj36 = properties34.remove((java.lang.Object) 0.0d);
        boolean boolean37 = properties34.isEmpty();
        java.lang.Object obj40 = properties34.setProperty("", "hi!");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties41 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties41.setSerialJtaTransactions(false);
        boolean boolean44 = properties26.remove((java.lang.Object) properties34, (java.lang.Object) atomikosProperties41);
        java.util.Properties properties45 = new java.util.Properties(properties34);
        java.lang.Object obj46 = properties34.clone();
        java.lang.Object obj47 = properties0.get(obj46);
        java.util.Set<java.lang.Object> objSet48 = properties0.keySet();
        java.lang.String str49 = properties0.toString();
        org.junit.Assert.assertNull(obj3);
        org.junit.Assert.assertNotNull(strSet4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNull(obj8);
        org.junit.Assert.assertNotNull(objEnumeration9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(objSet11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(objEntrySet13);
        org.junit.Assert.assertNull(obj16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNull(obj20);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNull(obj28);
        org.junit.Assert.assertNotNull(objEnumeration29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNotNull(objSet31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertNotNull(objEntrySet33);
        org.junit.Assert.assertNull(obj36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertNull(obj40);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(obj46);
        org.junit.Assert.assertEquals(obj46.toString(), "{=hi!}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj46), "{=hi!}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj46), "{=hi!}");
        org.junit.Assert.assertNull(obj47);
        org.junit.Assert.assertNotNull(objSet48);
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "{}" + "'", str49, "{}");
    }

    @Test
    public void test5306() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test5306");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        boolean boolean3 = properties0.isEmpty();
        java.lang.Object obj6 = properties0.setProperty("", "hi!");
        java.util.Set<java.lang.Object> objSet7 = properties0.keySet();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties8 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties8.setSerialJtaTransactions(false);
        atomikosProperties8.setThreadedTwoPhaseCommit(true);
        atomikosProperties8.setMaxTimeout((long) '#');
        java.lang.String str15 = atomikosProperties8.getLogBaseDir();
        atomikosProperties8.setForceShutdownOnVmExit(false);
        java.util.Properties properties18 = atomikosProperties8.asProperties();
        java.util.Enumeration<java.lang.Object> objEnumeration19 = properties18.elements();
        properties0.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties18);
        java.io.OutputStream outputStream21 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties18.store(outputStream21, "{{}={}}");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNull(obj6);
        org.junit.Assert.assertNotNull(objSet7);
        org.junit.Assert.assertNull(str15);
        org.junit.Assert.assertNotNull(properties18);
        org.junit.Assert.assertNotNull(objEnumeration19);
    }

    @Test
    public void test5307() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test5307");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setSerialJtaTransactions(false);
        boolean boolean3 = atomikosProperties0.isSerialJtaTransactions();
        java.lang.String str4 = atomikosProperties0.getService();
        atomikosProperties0.setEnableLogging(false);
        java.util.Properties properties7 = atomikosProperties0.asProperties();
        atomikosProperties0.setCheckpointInterval((long) 1);
        java.util.Properties properties10 = atomikosProperties0.asProperties();
        java.io.OutputStream outputStream11 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties10.store(outputStream11, "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=false, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=35, com.atomikos.icatch.threaded_2pc=true, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertNotNull(properties7);
        org.junit.Assert.assertNotNull(properties10);
    }

    @Test
    public void test5308() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test5308");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setSerialJtaTransactions(false);
        boolean boolean3 = atomikosProperties0.isSerialJtaTransactions();
        java.lang.String str4 = atomikosProperties0.getService();
        boolean boolean5 = atomikosProperties0.isEnableLogging();
        atomikosProperties0.setCheckpointInterval((long) (byte) 100);
        atomikosProperties0.setTransactionManagerUniqueName("{=hi!}");
        atomikosProperties0.setMaxTimeout(10000L);
        atomikosProperties0.setEnableLogging(false);
        long long14 = atomikosProperties0.getDefaultJtaTimeout();
        atomikosProperties0.setLogBaseName("hi!");
        atomikosProperties0.setTransactionManagerUniqueName("{hi!=[]}");
        atomikosProperties0.setLogBaseName("{true=class org.springframework.boot.jta.atomikos.AtomikosProperties}");
        atomikosProperties0.setLogBaseName("tmlog");
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertTrue("'" + long14 + "' != '" + 10000L + "'", long14 == 10000L);
    }

    @Test
    public void test5309() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test5309");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration3 = properties0.elements();
        int int4 = properties0.size();
        java.util.Properties properties5 = new java.util.Properties(properties0);
        java.util.Set<java.lang.String> strSet6 = properties0.stringPropertyNames();
        java.util.Set<java.lang.String> strSet7 = properties0.stringPropertyNames();
        java.lang.Object obj8 = properties0.clone();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties9 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties9.setSerialJtaTransactions(false);
        boolean boolean12 = atomikosProperties9.isSerialJtaTransactions();
        java.lang.String str13 = atomikosProperties9.getService();
        boolean boolean14 = atomikosProperties9.isEnableLogging();
        java.util.Properties properties15 = atomikosProperties9.asProperties();
        atomikosProperties9.setForceShutdownOnVmExit(true);
        atomikosProperties9.setMaxActives((int) (short) -1);
        boolean boolean20 = properties0.containsKey((java.lang.Object) (short) -1);
        java.util.Set<java.lang.Object> objSet21 = properties0.keySet();
        java.util.Set<java.lang.Object> objSet22 = properties0.keySet();
        java.util.Enumeration<?> wildcardEnumeration23 = properties0.propertyNames();
        java.lang.String str26 = properties0.getProperty("", "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=100, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=35, com.atomikos.icatch.threaded_2pc=true, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(objEnumeration3);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNotNull(strSet6);
        org.junit.Assert.assertNotNull(strSet7);
        org.junit.Assert.assertNotNull(obj8);
        org.junit.Assert.assertEquals(obj8.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj8), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj8), "{}");
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(properties15);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(objSet21);
        org.junit.Assert.assertNotNull(objSet22);
        org.junit.Assert.assertNotNull(wildcardEnumeration23);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=100, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=35, com.atomikos.icatch.threaded_2pc=true, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}" + "'", str26, "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=100, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=35, com.atomikos.icatch.threaded_2pc=true, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
    }

    @Test
    public void test5310() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test5310");
        java.util.Properties properties0 = new java.util.Properties();
        java.util.Properties properties1 = new java.util.Properties();
        java.lang.Object obj3 = properties1.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet4 = properties1.stringPropertyNames();
        boolean boolean5 = properties0.containsValue((java.lang.Object) properties1);
        java.util.Collection<java.lang.Object> objCollection6 = properties0.values();
        java.util.Properties properties8 = new java.util.Properties();
        java.lang.Object obj10 = properties8.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration11 = properties8.elements();
        boolean boolean12 = properties8.isEmpty();
        java.util.Set<java.lang.Object> objSet13 = properties8.keySet();
        java.lang.Object obj14 = properties0.putIfAbsent((java.lang.Object) "hi!", (java.lang.Object) objSet13);
        java.util.Set<java.lang.Object> objSet15 = properties0.keySet();
        java.util.Set<java.lang.Object> objSet16 = properties0.keySet();
        java.util.Set<java.lang.Object> objSet17 = properties0.keySet();
        java.util.Properties properties18 = new java.util.Properties();
        java.lang.Object obj20 = properties18.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration21 = properties18.elements();
        boolean boolean22 = properties18.isEmpty();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet23 = properties18.entrySet();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties25 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties25.setSerialJtaTransactions(false);
        atomikosProperties25.setThreadedTwoPhaseCommit(true);
        atomikosProperties25.setMaxTimeout((long) '#');
        boolean boolean32 = atomikosProperties25.isForceShutdownOnVmExit();
        java.lang.Object obj33 = properties18.put((java.lang.Object) (short) 1, (java.lang.Object) atomikosProperties25);
        long long34 = atomikosProperties25.getDefaultJtaTimeout();
        atomikosProperties25.setMaxActives((int) (short) 1);
        java.lang.Class<?> wildcardClass37 = atomikosProperties25.getClass();
        java.util.Properties properties38 = new java.util.Properties();
        java.lang.Object obj40 = properties38.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration41 = properties38.elements();
        boolean boolean42 = properties38.isEmpty();
        java.util.Set<java.lang.Object> objSet43 = properties38.keySet();
        boolean boolean44 = properties38.isEmpty();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet45 = properties38.entrySet();
        java.util.Properties properties46 = new java.util.Properties();
        java.lang.Object obj48 = properties46.remove((java.lang.Object) 0.0d);
        boolean boolean49 = properties46.isEmpty();
        java.lang.Object obj52 = properties46.setProperty("", "hi!");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties53 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties53.setSerialJtaTransactions(false);
        boolean boolean56 = properties38.remove((java.lang.Object) properties46, (java.lang.Object) atomikosProperties53);
        java.util.Properties properties57 = new java.util.Properties(properties46);
        int int58 = properties57.size();
        int int59 = properties57.size();
        java.util.Properties properties60 = new java.util.Properties();
        java.lang.Object obj61 = properties57.get((java.lang.Object) properties60);
        boolean boolean62 = properties0.remove((java.lang.Object) atomikosProperties25, (java.lang.Object) properties60);
        java.lang.Object obj65 = properties60.setProperty("{tmlog=}", "{}");
        java.util.Set<java.lang.Object> objSet66 = properties60.keySet();
        java.util.Properties properties67 = new java.util.Properties(properties60);
        java.io.OutputStream outputStream68 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties60.save(outputStream68, "{hi!=[]}");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(obj3);
        org.junit.Assert.assertNotNull(strSet4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(objCollection6);
        org.junit.Assert.assertNull(obj10);
        org.junit.Assert.assertNotNull(objEnumeration11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(objSet13);
        org.junit.Assert.assertNull(obj14);
        org.junit.Assert.assertNotNull(objSet15);
        org.junit.Assert.assertNotNull(objSet16);
        org.junit.Assert.assertNotNull(objSet17);
        org.junit.Assert.assertNull(obj20);
        org.junit.Assert.assertNotNull(objEnumeration21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNotNull(objEntrySet23);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNull(obj33);
        org.junit.Assert.assertTrue("'" + long34 + "' != '" + 10000L + "'", long34 == 10000L);
        org.junit.Assert.assertNotNull(wildcardClass37);
        org.junit.Assert.assertNull(obj40);
        org.junit.Assert.assertNotNull(objEnumeration41);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertNotNull(objSet43);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertNotNull(objEntrySet45);
        org.junit.Assert.assertNull(obj48);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertNull(obj52);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + 0 + "'", int58 == 0);
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + 0 + "'", int59 == 0);
        org.junit.Assert.assertNull(obj61);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertNull(obj65);
        org.junit.Assert.assertNotNull(objSet66);
    }

    @Test
    public void test5311() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test5311");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setSerialJtaTransactions(false);
        boolean boolean3 = atomikosProperties0.isSerialJtaTransactions();
        java.util.Properties properties4 = atomikosProperties0.asProperties();
        java.lang.Object obj7 = properties4.setProperty("hi!", "");
        java.util.Properties properties8 = new java.util.Properties(properties4);
        java.util.Properties properties9 = new java.util.Properties();
        java.lang.Object obj11 = properties9.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration12 = properties9.elements();
        boolean boolean13 = properties9.isEmpty();
        java.util.Set<java.lang.Object> objSet14 = properties9.keySet();
        java.util.Enumeration<java.lang.Object> objEnumeration15 = properties9.keys();
        java.lang.String str17 = properties9.getProperty("hi!");
        java.lang.String str19 = properties9.getProperty("");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties20 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties20.setSerialJtaTransactions(false);
        atomikosProperties20.setThreadedTwoPhaseCommit(true);
        atomikosProperties20.setEnableLogging(false);
        boolean boolean27 = properties9.containsKey((java.lang.Object) atomikosProperties20);
        atomikosProperties20.setTransactionManagerUniqueName("tmlog");
        java.util.Properties properties30 = new java.util.Properties();
        java.lang.Object obj32 = properties30.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration33 = properties30.elements();
        boolean boolean34 = properties30.isEmpty();
        java.util.Set<java.lang.Object> objSet35 = properties30.keySet();
        boolean boolean37 = properties30.containsKey((java.lang.Object) (-1.0f));
        java.util.Collection<java.lang.Object> objCollection38 = properties30.values();
        java.lang.Object obj39 = properties30.clone();
        java.util.Collection<java.lang.Object> objCollection40 = properties30.values();
        boolean boolean41 = properties4.remove((java.lang.Object) atomikosProperties20, (java.lang.Object) objCollection40);
        atomikosProperties20.setMaxActives(0);
        atomikosProperties20.setLogBaseName("hi!");
        boolean boolean46 = atomikosProperties20.isSerialJtaTransactions();
        int int47 = atomikosProperties20.getMaxActives();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(properties4);
        org.junit.Assert.assertNull(obj7);
        org.junit.Assert.assertNull(obj11);
        org.junit.Assert.assertNotNull(objEnumeration12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(objSet14);
        org.junit.Assert.assertNotNull(objEnumeration15);
        org.junit.Assert.assertNull(str17);
        org.junit.Assert.assertNull(str19);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNull(obj32);
        org.junit.Assert.assertNotNull(objEnumeration33);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertNotNull(objSet35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(objCollection38);
        org.junit.Assert.assertNotNull(obj39);
        org.junit.Assert.assertEquals(obj39.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj39), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj39), "{}");
        org.junit.Assert.assertNotNull(objCollection40);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 0 + "'", int47 == 0);
    }

    @Test
    public void test5312() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test5312");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setSerialJtaTransactions(false);
        atomikosProperties0.setThreadedTwoPhaseCommit(true);
        atomikosProperties0.setMaxTimeout((long) '#');
        boolean boolean7 = atomikosProperties0.isEnableLogging();
        atomikosProperties0.setTransactionManagerUniqueName("hi!");
        atomikosProperties0.setForceShutdownOnVmExit(false);
        java.util.Properties properties12 = atomikosProperties0.asProperties();
        atomikosProperties0.setEnableLogging(false);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(properties12);
    }

    @Test
    public void test5313() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test5313");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setSerialJtaTransactions(false);
        boolean boolean3 = atomikosProperties0.isSerialJtaTransactions();
        java.lang.String str4 = atomikosProperties0.getService();
        atomikosProperties0.setEnableLogging(false);
        java.util.Properties properties7 = atomikosProperties0.asProperties();
        java.lang.String str9 = properties7.getProperty("{com.atomikos.icatch.enable_logging=false, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=1, com.atomikos.icatch.serial_jta_transactions=false, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
        java.lang.String str11 = properties7.getProperty("");
        java.lang.Object obj13 = properties7.get((java.lang.Object) "{=hi!}");
        properties7.clear();
        java.io.OutputStream outputStream15 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties7.save(outputStream15, "{}");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertNotNull(properties7);
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertNull(obj13);
    }

    @Test
    public void test5314() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test5314");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setSerialJtaTransactions(false);
        atomikosProperties0.setThreadedTwoPhaseCommit(true);
        atomikosProperties0.setMaxTimeout((long) '#');
        boolean boolean7 = atomikosProperties0.isEnableLogging();
        atomikosProperties0.setCheckpointInterval((long) (byte) -1);
        atomikosProperties0.setEnableLogging(true);
        atomikosProperties0.setLogBaseDir("");
        long long14 = atomikosProperties0.getMaxTimeout();
        atomikosProperties0.setSerialJtaTransactions(true);
        long long17 = atomikosProperties0.getCheckpointInterval();
        long long18 = atomikosProperties0.getCheckpointInterval();
        boolean boolean19 = atomikosProperties0.isSerialJtaTransactions();
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertTrue("'" + long14 + "' != '" + 35L + "'", long14 == 35L);
        org.junit.Assert.assertTrue("'" + long17 + "' != '" + (-1L) + "'", long17 == (-1L));
        org.junit.Assert.assertTrue("'" + long18 + "' != '" + (-1L) + "'", long18 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
    }

    @Test
    public void test5315() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test5315");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration3 = properties0.elements();
        java.util.Properties properties5 = new java.util.Properties();
        java.lang.Object obj7 = properties5.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration8 = properties5.elements();
        boolean boolean9 = properties5.isEmpty();
        java.util.Set<java.lang.Object> objSet10 = properties5.keySet();
        boolean boolean11 = properties5.isEmpty();
        java.lang.Object obj12 = properties0.getOrDefault((java.lang.Object) true, (java.lang.Object) boolean11);
        java.util.Properties properties13 = new java.util.Properties();
        java.lang.Object obj15 = properties13.remove((java.lang.Object) 0.0d);
        boolean boolean16 = properties13.isEmpty();
        java.util.Enumeration<java.lang.Object> objEnumeration17 = properties13.keys();
        java.util.Properties properties18 = new java.util.Properties();
        java.lang.Object obj20 = properties18.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet21 = properties18.stringPropertyNames();
        java.util.Properties properties22 = new java.util.Properties();
        java.util.Properties properties23 = new java.util.Properties();
        java.lang.Object obj25 = properties23.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet26 = properties23.stringPropertyNames();
        boolean boolean27 = properties22.containsValue((java.lang.Object) properties23);
        java.util.Collection<java.lang.Object> objCollection28 = properties22.values();
        java.util.Enumeration<?> wildcardEnumeration29 = properties22.propertyNames();
        java.lang.Object obj31 = properties18.put((java.lang.Object) wildcardEnumeration29, (java.lang.Object) 10.0d);
        java.util.Properties properties32 = new java.util.Properties();
        java.util.Properties properties33 = new java.util.Properties();
        java.lang.Object obj35 = properties33.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet36 = properties33.stringPropertyNames();
        boolean boolean37 = properties32.containsValue((java.lang.Object) properties33);
        java.util.Collection<java.lang.Object> objCollection38 = properties32.values();
        java.lang.Object obj39 = properties32.clone();
        boolean boolean40 = properties0.replace((java.lang.Object) properties13, (java.lang.Object) 10.0d, obj39);
        java.lang.Object obj41 = properties13.clone();
        java.util.Set<java.lang.Object> objSet42 = properties13.keySet();
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(objEnumeration3);
        org.junit.Assert.assertNull(obj7);
        org.junit.Assert.assertNotNull(objEnumeration8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertNotNull(objSet10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertEquals("'" + obj12 + "' != '" + true + "'", obj12, true);
        org.junit.Assert.assertNull(obj15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(objEnumeration17);
        org.junit.Assert.assertNull(obj20);
        org.junit.Assert.assertNotNull(strSet21);
        org.junit.Assert.assertNull(obj25);
        org.junit.Assert.assertNotNull(strSet26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(objCollection28);
        org.junit.Assert.assertNotNull(wildcardEnumeration29);
        org.junit.Assert.assertNull(obj31);
        org.junit.Assert.assertNull(obj35);
        org.junit.Assert.assertNotNull(strSet36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(objCollection38);
        org.junit.Assert.assertNotNull(obj39);
        org.junit.Assert.assertEquals(obj39.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj39), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj39), "{}");
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(obj41);
        org.junit.Assert.assertEquals(obj41.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj41), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj41), "{}");
        org.junit.Assert.assertNotNull(objSet42);
    }

    @Test
    public void test5316() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test5316");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration3 = properties0.elements();
        boolean boolean4 = properties0.isEmpty();
        java.util.Set<java.lang.Object> objSet5 = properties0.keySet();
        boolean boolean6 = properties0.isEmpty();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet7 = properties0.entrySet();
        java.util.Properties properties8 = new java.util.Properties();
        java.lang.Object obj10 = properties8.remove((java.lang.Object) 0.0d);
        boolean boolean11 = properties8.isEmpty();
        java.lang.Object obj14 = properties8.setProperty("", "hi!");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties15 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties15.setSerialJtaTransactions(false);
        boolean boolean18 = properties0.remove((java.lang.Object) properties8, (java.lang.Object) atomikosProperties15);
        java.util.Properties properties19 = new java.util.Properties(properties8);
        int int20 = properties19.size();
        int int21 = properties19.size();
        java.util.Properties properties22 = new java.util.Properties();
        java.util.Properties properties23 = new java.util.Properties();
        java.lang.Object obj25 = properties23.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet26 = properties23.stringPropertyNames();
        boolean boolean27 = properties22.containsValue((java.lang.Object) properties23);
        java.util.Enumeration<?> wildcardEnumeration28 = properties23.propertyNames();
        java.util.Properties properties29 = new java.util.Properties();
        java.lang.Object obj31 = properties29.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration32 = properties29.elements();
        boolean boolean33 = properties29.isEmpty();
        java.util.Set<java.lang.Object> objSet34 = properties29.keySet();
        java.util.Enumeration<java.lang.Object> objEnumeration35 = properties29.keys();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet36 = properties29.entrySet();
        boolean boolean37 = properties23.containsValue((java.lang.Object) objEntrySet36);
        java.util.Properties properties38 = new java.util.Properties();
        java.util.Properties properties39 = new java.util.Properties();
        java.lang.Object obj41 = properties39.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet42 = properties39.stringPropertyNames();
        boolean boolean43 = properties38.containsValue((java.lang.Object) properties39);
        java.util.Collection<java.lang.Object> objCollection44 = properties38.values();
        java.util.Properties properties46 = new java.util.Properties();
        java.lang.Object obj48 = properties46.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration49 = properties46.elements();
        boolean boolean50 = properties46.isEmpty();
        java.util.Set<java.lang.Object> objSet51 = properties46.keySet();
        java.lang.Object obj52 = properties38.putIfAbsent((java.lang.Object) "hi!", (java.lang.Object) objSet51);
        java.util.Set<java.lang.Object> objSet53 = properties38.keySet();
        java.util.Set<java.lang.Object> objSet54 = properties38.keySet();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet55 = properties38.entrySet();
        java.util.Set<java.lang.Object> objSet56 = properties38.keySet();
        boolean boolean57 = properties23.equals((java.lang.Object) objSet56);
        boolean boolean58 = properties19.containsKey((java.lang.Object) objSet56);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties59 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties59.setSerialJtaTransactions(false);
        boolean boolean62 = atomikosProperties59.isSerialJtaTransactions();
        java.lang.String str63 = atomikosProperties59.getService();
        atomikosProperties59.setEnableLogging(false);
        java.util.Properties properties66 = atomikosProperties59.asProperties();
        atomikosProperties59.setCheckpointInterval((long) 1);
        java.util.Properties properties69 = atomikosProperties59.asProperties();
        java.util.Collection<java.lang.Object> objCollection70 = properties69.values();
        java.lang.Object obj71 = properties19.get((java.lang.Object) objCollection70);
        java.util.Properties properties72 = new java.util.Properties(properties19);
        java.util.Properties properties73 = new java.util.Properties(properties72);
        java.lang.String str74 = properties73.toString();
        java.lang.String str76 = properties73.getProperty("{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=false, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=true, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(objEnumeration3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(objSet5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(objEntrySet7);
        org.junit.Assert.assertNull(obj10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNull(obj14);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 0 + "'", int20 == 0);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 0 + "'", int21 == 0);
        org.junit.Assert.assertNull(obj25);
        org.junit.Assert.assertNotNull(strSet26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(wildcardEnumeration28);
        org.junit.Assert.assertNull(obj31);
        org.junit.Assert.assertNotNull(objEnumeration32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNotNull(objSet34);
        org.junit.Assert.assertNotNull(objEnumeration35);
        org.junit.Assert.assertNotNull(objEntrySet36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNull(obj41);
        org.junit.Assert.assertNotNull(strSet42);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(objCollection44);
        org.junit.Assert.assertNull(obj48);
        org.junit.Assert.assertNotNull(objEnumeration49);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertNotNull(objSet51);
        org.junit.Assert.assertNull(obj52);
        org.junit.Assert.assertNotNull(objSet53);
        org.junit.Assert.assertNotNull(objSet54);
        org.junit.Assert.assertNotNull(objEntrySet55);
        org.junit.Assert.assertNotNull(objSet56);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertNull(str63);
        org.junit.Assert.assertNotNull(properties66);
        org.junit.Assert.assertNotNull(properties69);
        org.junit.Assert.assertNotNull(objCollection70);
        org.junit.Assert.assertNull(obj71);
        org.junit.Assert.assertEquals("'" + str74 + "' != '" + "{}" + "'", str74, "{}");
        org.junit.Assert.assertNull(str76);
    }

    @Test
    public void test5317() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test5317");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet3 = properties0.stringPropertyNames();
        java.util.Properties properties4 = new java.util.Properties();
        java.lang.Object obj6 = properties4.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet7 = properties4.stringPropertyNames();
        java.lang.Object obj9 = properties0.put((java.lang.Object) strSet7, (java.lang.Object) 0.0d);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties10 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties10.setSerialJtaTransactions(false);
        atomikosProperties10.setThreadedTwoPhaseCommit(true);
        atomikosProperties10.setMaxTimeout((long) '#');
        boolean boolean17 = atomikosProperties10.isEnableLogging();
        atomikosProperties10.setCheckpointInterval((long) (byte) -1);
        atomikosProperties10.setEnableLogging(true);
        atomikosProperties10.setLogBaseName("{}");
        atomikosProperties10.setLogBaseName("tmlog");
        java.util.Properties properties26 = new java.util.Properties();
        java.lang.Object obj28 = properties26.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration29 = properties26.elements();
        boolean boolean30 = properties26.isEmpty();
        java.util.Set<java.lang.Object> objSet31 = properties26.keySet();
        java.util.Enumeration<java.lang.Object> objEnumeration32 = properties26.keys();
        java.lang.String str34 = properties26.getProperty("hi!");
        java.util.Properties properties36 = new java.util.Properties();
        java.lang.Object obj38 = properties36.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration39 = properties36.elements();
        int int40 = properties36.size();
        java.util.Properties properties41 = new java.util.Properties(properties36);
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet42 = properties36.entrySet();
        java.util.Properties properties43 = new java.util.Properties();
        java.util.Properties properties44 = new java.util.Properties();
        java.lang.Object obj46 = properties44.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet47 = properties44.stringPropertyNames();
        boolean boolean48 = properties43.containsValue((java.lang.Object) properties44);
        java.util.Collection<java.lang.Object> objCollection49 = properties43.values();
        java.util.Properties properties51 = new java.util.Properties();
        java.lang.Object obj53 = properties51.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration54 = properties51.elements();
        boolean boolean55 = properties51.isEmpty();
        java.util.Set<java.lang.Object> objSet56 = properties51.keySet();
        java.lang.Object obj57 = properties43.putIfAbsent((java.lang.Object) "hi!", (java.lang.Object) objSet56);
        boolean boolean58 = properties26.replace((java.lang.Object) "hi!", (java.lang.Object) properties36, (java.lang.Object) "hi!");
        java.util.Set<java.lang.String> strSet59 = properties36.stringPropertyNames();
        java.util.Properties properties60 = new java.util.Properties();
        java.lang.Object obj62 = properties60.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration63 = properties60.elements();
        int int64 = properties60.size();
        java.util.Properties properties65 = new java.util.Properties(properties60);
        java.util.Set<java.lang.String> strSet66 = properties60.stringPropertyNames();
        java.util.Set<java.lang.String> strSet67 = properties60.stringPropertyNames();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties68 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties68.setSerialJtaTransactions(false);
        atomikosProperties68.setThreadedTwoPhaseCommit(true);
        atomikosProperties68.setMaxTimeout((long) '#');
        boolean boolean75 = atomikosProperties68.isEnableLogging();
        atomikosProperties68.setCheckpointInterval((long) (byte) -1);
        atomikosProperties68.setEnableLogging(true);
        atomikosProperties68.setLogBaseName("{}");
        long long82 = atomikosProperties68.getDefaultJtaTimeout();
        java.lang.Object obj83 = properties36.putIfAbsent((java.lang.Object) properties60, (java.lang.Object) atomikosProperties68);
        java.lang.Object obj84 = properties0.getOrDefault((java.lang.Object) "tmlog", obj83);
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet85 = properties0.entrySet();
        java.util.Enumeration<java.lang.Object> objEnumeration86 = properties0.keys();
        java.lang.Object obj87 = properties0.clone();
        java.io.Writer writer88 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties0.store(writer88, "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=false, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=true, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(strSet3);
        org.junit.Assert.assertNull(obj6);
        org.junit.Assert.assertNotNull(strSet7);
        org.junit.Assert.assertNull(obj9);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNull(obj28);
        org.junit.Assert.assertNotNull(objEnumeration29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNotNull(objSet31);
        org.junit.Assert.assertNotNull(objEnumeration32);
        org.junit.Assert.assertNull(str34);
        org.junit.Assert.assertNull(obj38);
        org.junit.Assert.assertNotNull(objEnumeration39);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 0 + "'", int40 == 0);
        org.junit.Assert.assertNotNull(objEntrySet42);
        org.junit.Assert.assertNull(obj46);
        org.junit.Assert.assertNotNull(strSet47);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNotNull(objCollection49);
        org.junit.Assert.assertNull(obj53);
        org.junit.Assert.assertNotNull(objEnumeration54);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertNotNull(objSet56);
        org.junit.Assert.assertNull(obj57);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertNotNull(strSet59);
        org.junit.Assert.assertNull(obj62);
        org.junit.Assert.assertNotNull(objEnumeration63);
        org.junit.Assert.assertTrue("'" + int64 + "' != '" + 0 + "'", int64 == 0);
        org.junit.Assert.assertNotNull(strSet66);
        org.junit.Assert.assertNotNull(strSet67);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + true + "'", boolean75 == true);
        org.junit.Assert.assertTrue("'" + long82 + "' != '" + 10000L + "'", long82 == 10000L);
        org.junit.Assert.assertNull(obj83);
        org.junit.Assert.assertNull(obj84);
        org.junit.Assert.assertNotNull(objEntrySet85);
        org.junit.Assert.assertNotNull(objEnumeration86);
        org.junit.Assert.assertNotNull(obj87);
        org.junit.Assert.assertEquals(obj87.toString(), "{[]=0.0}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj87), "{[]=0.0}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj87), "{[]=0.0}");
    }

    @Test
    public void test5318() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test5318");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration3 = properties0.elements();
        boolean boolean4 = properties0.isEmpty();
        java.util.Set<java.lang.Object> objSet5 = properties0.keySet();
        java.util.Enumeration<java.lang.Object> objEnumeration6 = properties0.keys();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet7 = properties0.entrySet();
        java.util.Properties properties8 = new java.util.Properties();
        java.lang.Object obj10 = properties8.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration11 = properties8.elements();
        boolean boolean12 = properties8.isEmpty();
        java.util.Set<java.lang.Object> objSet13 = properties8.keySet();
        java.util.Enumeration<java.lang.Object> objEnumeration14 = properties8.keys();
        java.lang.String str16 = properties8.getProperty("hi!");
        java.lang.String str18 = properties8.getProperty("");
        java.lang.Object obj20 = properties0.putIfAbsent((java.lang.Object) "", (java.lang.Object) 100.0d);
        java.lang.Object obj21 = properties0.clone();
        java.util.Properties properties22 = new java.util.Properties();
        java.lang.Object obj24 = properties22.remove((java.lang.Object) 0.0d);
        boolean boolean25 = properties22.isEmpty();
        java.util.Set<java.lang.String> strSet26 = properties22.stringPropertyNames();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties27 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties27.setSerialJtaTransactions(false);
        boolean boolean30 = atomikosProperties27.isSerialJtaTransactions();
        java.lang.String str31 = atomikosProperties27.getService();
        atomikosProperties27.setEnableLogging(false);
        java.util.Properties properties34 = atomikosProperties27.asProperties();
        atomikosProperties27.setCheckpointInterval((long) 1);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties37 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties37.setSerialJtaTransactions(false);
        boolean boolean40 = atomikosProperties37.isSerialJtaTransactions();
        java.lang.String str41 = atomikosProperties37.getService();
        boolean boolean42 = atomikosProperties37.isEnableLogging();
        atomikosProperties37.setCheckpointInterval((long) (byte) 100);
        java.lang.Class<?> wildcardClass45 = atomikosProperties37.getClass();
        java.lang.Object obj46 = properties22.getOrDefault((java.lang.Object) atomikosProperties27, (java.lang.Object) wildcardClass45);
        java.lang.Object obj47 = properties0.remove((java.lang.Object) properties22);
        java.lang.String str49 = properties22.getProperty("hi!");
        java.io.InputStream inputStream50 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties22.load(inputStream50);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(objEnumeration3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(objSet5);
        org.junit.Assert.assertNotNull(objEnumeration6);
        org.junit.Assert.assertNotNull(objEntrySet7);
        org.junit.Assert.assertNull(obj10);
        org.junit.Assert.assertNotNull(objEnumeration11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(objSet13);
        org.junit.Assert.assertNotNull(objEnumeration14);
        org.junit.Assert.assertNull(str16);
        org.junit.Assert.assertNull(str18);
        org.junit.Assert.assertNull(obj20);
        org.junit.Assert.assertNotNull(obj21);
        org.junit.Assert.assertEquals(obj21.toString(), "{=100.0}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj21), "{=100.0}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj21), "{=100.0}");
        org.junit.Assert.assertNull(obj24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(strSet26);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNull(str31);
        org.junit.Assert.assertNotNull(properties34);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNull(str41);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertNotNull(wildcardClass45);
        org.junit.Assert.assertNotNull(obj46);
        org.junit.Assert.assertEquals(obj46.toString(), "class org.springframework.boot.jta.atomikos.AtomikosProperties");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj46), "class org.springframework.boot.jta.atomikos.AtomikosProperties");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj46), "class org.springframework.boot.jta.atomikos.AtomikosProperties");
        org.junit.Assert.assertNull(obj47);
        org.junit.Assert.assertNull(str49);
    }

    @Test
    public void test5319() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test5319");
        java.util.Properties properties0 = new java.util.Properties();
        java.util.Collection<java.lang.Object> objCollection1 = properties0.values();
        java.util.Properties properties2 = new java.util.Properties();
        java.lang.Object obj4 = properties2.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet5 = properties2.stringPropertyNames();
        java.util.Properties properties6 = new java.util.Properties();
        java.util.Properties properties7 = new java.util.Properties();
        java.lang.Object obj9 = properties7.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet10 = properties7.stringPropertyNames();
        boolean boolean11 = properties6.containsValue((java.lang.Object) properties7);
        java.util.Collection<java.lang.Object> objCollection12 = properties6.values();
        java.util.Enumeration<?> wildcardEnumeration13 = properties6.propertyNames();
        java.lang.Object obj15 = properties2.put((java.lang.Object) wildcardEnumeration13, (java.lang.Object) 10.0d);
        boolean boolean16 = properties0.equals((java.lang.Object) 10.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration17 = properties0.keys();
        java.util.Enumeration<?> wildcardEnumeration18 = properties0.propertyNames();
        java.util.Enumeration<java.lang.Object> objEnumeration19 = properties0.elements();
        java.util.Enumeration<java.lang.Object> objEnumeration20 = properties0.elements();
        java.io.PrintWriter printWriter21 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties0.list(printWriter21);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(objCollection1);
        org.junit.Assert.assertNull(obj4);
        org.junit.Assert.assertNotNull(strSet5);
        org.junit.Assert.assertNull(obj9);
        org.junit.Assert.assertNotNull(strSet10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(objCollection12);
        org.junit.Assert.assertNotNull(wildcardEnumeration13);
        org.junit.Assert.assertNull(obj15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(objEnumeration17);
        org.junit.Assert.assertNotNull(wildcardEnumeration18);
        org.junit.Assert.assertNotNull(objEnumeration19);
        org.junit.Assert.assertNotNull(objEnumeration20);
    }

    @Test
    public void test5320() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test5320");
        java.util.Properties properties0 = new java.util.Properties();
        java.util.Properties properties1 = new java.util.Properties();
        java.lang.Object obj3 = properties1.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet4 = properties1.stringPropertyNames();
        boolean boolean5 = properties0.containsValue((java.lang.Object) properties1);
        java.util.Collection<java.lang.Object> objCollection6 = properties0.values();
        java.util.Properties properties8 = new java.util.Properties();
        java.lang.Object obj10 = properties8.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration11 = properties8.elements();
        boolean boolean12 = properties8.isEmpty();
        java.util.Set<java.lang.Object> objSet13 = properties8.keySet();
        java.lang.Object obj14 = properties0.putIfAbsent((java.lang.Object) "hi!", (java.lang.Object) objSet13);
        java.util.Set<java.lang.Object> objSet15 = properties0.keySet();
        java.util.Set<java.lang.Object> objSet16 = properties0.keySet();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet17 = properties0.entrySet();
        java.lang.String str19 = properties0.getProperty("{hi!=[], {}={}}");
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet20 = properties0.entrySet();
        org.junit.Assert.assertNull(obj3);
        org.junit.Assert.assertNotNull(strSet4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(objCollection6);
        org.junit.Assert.assertNull(obj10);
        org.junit.Assert.assertNotNull(objEnumeration11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(objSet13);
        org.junit.Assert.assertNull(obj14);
        org.junit.Assert.assertNotNull(objSet15);
        org.junit.Assert.assertNotNull(objSet16);
        org.junit.Assert.assertNotNull(objEntrySet17);
        org.junit.Assert.assertNull(str19);
        org.junit.Assert.assertNotNull(objEntrySet20);
    }

    @Test
    public void test5321() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test5321");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setSerialJtaTransactions(false);
        boolean boolean3 = atomikosProperties0.isSerialJtaTransactions();
        atomikosProperties0.setTransactionManagerUniqueName("hi!");
        java.lang.String str6 = atomikosProperties0.getTransactionManagerUniqueName();
        boolean boolean7 = atomikosProperties0.isForceShutdownOnVmExit();
        java.util.Properties properties8 = atomikosProperties0.asProperties();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties9 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties9.setSerialJtaTransactions(false);
        atomikosProperties9.setThreadedTwoPhaseCommit(true);
        atomikosProperties9.setMaxTimeout((long) '#');
        boolean boolean16 = atomikosProperties9.isEnableLogging();
        atomikosProperties9.setMaxActives((int) '#');
        boolean boolean19 = atomikosProperties9.isForceShutdownOnVmExit();
        atomikosProperties9.setEnableLogging(true);
        atomikosProperties9.setCheckpointInterval((long) 'a');
        java.lang.String str24 = atomikosProperties9.getService();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties25 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties25.setSerialJtaTransactions(false);
        atomikosProperties25.setThreadedTwoPhaseCommit(true);
        boolean boolean30 = atomikosProperties25.isForceShutdownOnVmExit();
        java.lang.String str31 = atomikosProperties25.getLogBaseDir();
        atomikosProperties25.setTransactionManagerUniqueName("{=hi!}");
        java.lang.String str34 = atomikosProperties25.getLogBaseName();
        java.util.Properties properties35 = new java.util.Properties();
        java.lang.Object obj37 = properties35.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration38 = properties35.elements();
        boolean boolean39 = properties35.isEmpty();
        java.util.Set<java.lang.Object> objSet40 = properties35.keySet();
        java.util.Enumeration<java.lang.Object> objEnumeration41 = properties35.keys();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet42 = properties35.entrySet();
        java.util.Properties properties43 = new java.util.Properties(properties35);
        java.util.Set<java.lang.Object> objSet44 = properties35.keySet();
        java.util.Properties properties45 = new java.util.Properties();
        java.lang.Object obj47 = properties45.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet48 = properties45.stringPropertyNames();
        java.lang.String str49 = properties45.toString();
        properties35.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties45);
        java.lang.String str51 = properties45.toString();
        boolean boolean52 = properties8.replace((java.lang.Object) atomikosProperties9, (java.lang.Object) atomikosProperties25, (java.lang.Object) properties45);
        java.lang.String str54 = properties45.getProperty("{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=false, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.max_actives=2, com.atomikos.icatch.log_base_name=tmlog}");
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "hi!" + "'", str6, "hi!");
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(properties8);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNull(str24);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNull(str31);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "tmlog" + "'", str34, "tmlog");
        org.junit.Assert.assertNull(obj37);
        org.junit.Assert.assertNotNull(objEnumeration38);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNotNull(objSet40);
        org.junit.Assert.assertNotNull(objEnumeration41);
        org.junit.Assert.assertNotNull(objEntrySet42);
        org.junit.Assert.assertNotNull(objSet44);
        org.junit.Assert.assertNull(obj47);
        org.junit.Assert.assertNotNull(strSet48);
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "{}" + "'", str49, "{}");
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "{}" + "'", str51, "{}");
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNull(str54);
    }

    @Test
    public void test5322() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test5322");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        boolean boolean4 = properties0.containsValue((java.lang.Object) "hi!");
        java.lang.String str6 = properties0.getProperty("hi!");
        java.util.Enumeration<?> wildcardEnumeration7 = properties0.propertyNames();
        java.lang.String str9 = properties0.getProperty("{{}={}}");
        java.lang.String str10 = properties0.toString();
        java.util.Properties properties11 = new java.util.Properties();
        boolean boolean13 = properties11.contains((java.lang.Object) 100.0d);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties14 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties14.setSerialJtaTransactions(false);
        atomikosProperties14.setThreadedTwoPhaseCommit(true);
        atomikosProperties14.setSerialJtaTransactions(false);
        java.lang.String str21 = atomikosProperties14.getService();
        boolean boolean22 = properties11.containsKey((java.lang.Object) atomikosProperties14);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties23 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties23.setSerialJtaTransactions(false);
        atomikosProperties23.setThreadedTwoPhaseCommit(true);
        atomikosProperties23.setMaxTimeout((long) '#');
        boolean boolean30 = atomikosProperties23.isEnableLogging();
        atomikosProperties23.setCheckpointInterval((long) 100);
        atomikosProperties23.setForceShutdownOnVmExit(false);
        boolean boolean35 = properties11.containsValue((java.lang.Object) atomikosProperties23);
        atomikosProperties23.setService("{=hi!}");
        java.util.Properties properties38 = atomikosProperties23.asProperties();
        java.lang.Object obj39 = properties0.get((java.lang.Object) atomikosProperties23);
        int int40 = atomikosProperties23.getMaxActives();
        atomikosProperties23.setMaxActives((int) '4');
        atomikosProperties23.setForceShutdownOnVmExit(false);
        atomikosProperties23.setEnableLogging(true);
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertNotNull(wildcardEnumeration7);
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "{}" + "'", str10, "{}");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNull(str21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(properties38);
        org.junit.Assert.assertNull(obj39);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 50 + "'", int40 == 50);
    }

    @Test
    public void test5323() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test5323");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setSerialJtaTransactions(false);
        atomikosProperties0.setThreadedTwoPhaseCommit(true);
        boolean boolean5 = atomikosProperties0.isSerialJtaTransactions();
        boolean boolean6 = atomikosProperties0.isForceShutdownOnVmExit();
        java.lang.String str7 = atomikosProperties0.getService();
        boolean boolean8 = atomikosProperties0.isThreadedTwoPhaseCommit();
        boolean boolean9 = atomikosProperties0.isEnableLogging();
        java.lang.String str10 = atomikosProperties0.getLogBaseDir();
        atomikosProperties0.setForceShutdownOnVmExit(false);
        int int13 = atomikosProperties0.getMaxActives();
        java.lang.String str14 = atomikosProperties0.getLogBaseDir();
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 50 + "'", int13 == 50);
        org.junit.Assert.assertNull(str14);
    }

    @Test
    public void test5324() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test5324");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        boolean boolean3 = properties0.isEmpty();
        java.util.Enumeration<java.lang.Object> objEnumeration4 = properties0.elements();
        java.util.Enumeration<java.lang.Object> objEnumeration5 = properties0.elements();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties6 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties6.setSerialJtaTransactions(false);
        atomikosProperties6.setThreadedTwoPhaseCommit(true);
        atomikosProperties6.setMaxTimeout((long) '#');
        boolean boolean13 = atomikosProperties6.isForceShutdownOnVmExit();
        int int14 = atomikosProperties6.getMaxActives();
        java.lang.Object obj15 = properties0.remove((java.lang.Object) int14);
        java.util.Collection<java.lang.Object> objCollection16 = properties0.values();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet17 = properties0.entrySet();
        java.io.PrintStream printStream18 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties0.list(printStream18);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(objEnumeration4);
        org.junit.Assert.assertNotNull(objEnumeration5);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 50 + "'", int14 == 50);
        org.junit.Assert.assertNull(obj15);
        org.junit.Assert.assertNotNull(objCollection16);
        org.junit.Assert.assertNotNull(objEntrySet17);
    }

    @Test
    public void test5325() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test5325");
        java.util.Properties properties0 = new java.util.Properties();
        java.util.Properties properties1 = new java.util.Properties();
        java.lang.Object obj3 = properties1.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet4 = properties1.stringPropertyNames();
        boolean boolean5 = properties0.containsValue((java.lang.Object) properties1);
        java.util.Collection<java.lang.Object> objCollection6 = properties0.values();
        java.util.Properties properties8 = new java.util.Properties();
        java.lang.Object obj10 = properties8.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration11 = properties8.elements();
        boolean boolean12 = properties8.isEmpty();
        java.util.Set<java.lang.Object> objSet13 = properties8.keySet();
        java.lang.Object obj14 = properties0.putIfAbsent((java.lang.Object) "hi!", (java.lang.Object) objSet13);
        java.util.Enumeration<java.lang.Object> objEnumeration15 = properties0.keys();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties16 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties16.setSerialJtaTransactions(false);
        atomikosProperties16.setThreadedTwoPhaseCommit(true);
        atomikosProperties16.setEnableLogging(false);
        boolean boolean23 = atomikosProperties16.isSerialJtaTransactions();
        int int24 = atomikosProperties16.getMaxActives();
        boolean boolean25 = atomikosProperties16.isEnableLogging();
        long long26 = atomikosProperties16.getCheckpointInterval();
        java.util.Properties properties27 = atomikosProperties16.asProperties();
        atomikosProperties16.setLogBaseName("");
        int int30 = atomikosProperties16.getMaxActives();
        atomikosProperties16.setCheckpointInterval((long) (-1));
        java.lang.String str33 = atomikosProperties16.getLogBaseName();
        boolean boolean34 = properties0.containsKey((java.lang.Object) atomikosProperties16);
        java.util.Properties properties35 = new java.util.Properties();
        java.util.Properties properties36 = new java.util.Properties();
        java.lang.Object obj38 = properties36.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet39 = properties36.stringPropertyNames();
        boolean boolean40 = properties35.containsValue((java.lang.Object) properties36);
        java.util.Collection<java.lang.Object> objCollection41 = properties35.values();
        java.util.Properties properties43 = new java.util.Properties();
        java.lang.Object obj45 = properties43.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration46 = properties43.elements();
        boolean boolean47 = properties43.isEmpty();
        java.util.Set<java.lang.Object> objSet48 = properties43.keySet();
        java.lang.Object obj49 = properties35.putIfAbsent((java.lang.Object) "hi!", (java.lang.Object) objSet48);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties50 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties50.setSerialJtaTransactions(false);
        boolean boolean53 = atomikosProperties50.isSerialJtaTransactions();
        java.util.Properties properties54 = atomikosProperties50.asProperties();
        java.lang.Object obj57 = properties54.setProperty("hi!", "");
        java.util.Properties properties58 = new java.util.Properties(properties54);
        java.util.Properties properties59 = new java.util.Properties();
        java.lang.Object obj61 = properties59.remove((java.lang.Object) 0.0d);
        java.util.Properties properties62 = new java.util.Properties();
        java.util.Collection<java.lang.Object> objCollection63 = properties62.values();
        java.util.Enumeration<java.lang.Object> objEnumeration64 = properties62.keys();
        java.util.Properties properties65 = new java.util.Properties();
        java.lang.Object obj67 = properties65.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration68 = properties65.elements();
        boolean boolean69 = properties65.isEmpty();
        java.util.Set<java.lang.Object> objSet70 = properties65.keySet();
        java.util.Enumeration<java.lang.Object> objEnumeration71 = properties65.keys();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet72 = properties65.entrySet();
        java.lang.Object obj73 = properties59.put((java.lang.Object) properties62, (java.lang.Object) properties65);
        java.lang.Object obj74 = properties35.putIfAbsent((java.lang.Object) properties58, (java.lang.Object) properties65);
        java.util.Properties properties75 = new java.util.Properties(properties58);
        java.util.Set<java.lang.String> strSet76 = properties75.stringPropertyNames();
        boolean boolean77 = properties0.containsKey((java.lang.Object) properties75);
        java.util.Properties properties78 = new java.util.Properties();
        java.lang.Object obj80 = properties78.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet81 = properties78.stringPropertyNames();
        java.lang.String str82 = properties78.toString();
        java.lang.String str83 = properties78.toString();
        java.util.Set<java.lang.Object> objSet84 = properties78.keySet();
        boolean boolean85 = properties0.containsKey((java.lang.Object) properties78);
        boolean boolean86 = properties78.isEmpty();
        java.io.OutputStream outputStream87 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties78.storeToXML(outputStream87, "{{}=tmlog}", "");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(obj3);
        org.junit.Assert.assertNotNull(strSet4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(objCollection6);
        org.junit.Assert.assertNull(obj10);
        org.junit.Assert.assertNotNull(objEnumeration11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(objSet13);
        org.junit.Assert.assertNull(obj14);
        org.junit.Assert.assertNotNull(objEnumeration15);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 50 + "'", int24 == 50);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + long26 + "' != '" + 500L + "'", long26 == 500L);
        org.junit.Assert.assertNotNull(properties27);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 50 + "'", int30 == 50);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "" + "'", str33, "");
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNull(obj38);
        org.junit.Assert.assertNotNull(strSet39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(objCollection41);
        org.junit.Assert.assertNull(obj45);
        org.junit.Assert.assertNotNull(objEnumeration46);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertNotNull(objSet48);
        org.junit.Assert.assertNull(obj49);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertNotNull(properties54);
        org.junit.Assert.assertNull(obj57);
        org.junit.Assert.assertNull(obj61);
        org.junit.Assert.assertNotNull(objCollection63);
        org.junit.Assert.assertNotNull(objEnumeration64);
        org.junit.Assert.assertNull(obj67);
        org.junit.Assert.assertNotNull(objEnumeration68);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + true + "'", boolean69 == true);
        org.junit.Assert.assertNotNull(objSet70);
        org.junit.Assert.assertNotNull(objEnumeration71);
        org.junit.Assert.assertNotNull(objEntrySet72);
        org.junit.Assert.assertNull(obj73);
        org.junit.Assert.assertNull(obj74);
        org.junit.Assert.assertNotNull(strSet76);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + false + "'", boolean77 == false);
        org.junit.Assert.assertNull(obj80);
        org.junit.Assert.assertNotNull(strSet81);
        org.junit.Assert.assertEquals("'" + str82 + "' != '" + "{}" + "'", str82, "{}");
        org.junit.Assert.assertEquals("'" + str83 + "' != '" + "{}" + "'", str83, "{}");
        org.junit.Assert.assertNotNull(objSet84);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + false + "'", boolean85 == false);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + true + "'", boolean86 == true);
    }

    @Test
    public void test5326() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test5326");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet3 = properties0.stringPropertyNames();
        java.util.Properties properties4 = new java.util.Properties();
        java.util.Properties properties5 = new java.util.Properties();
        java.lang.Object obj7 = properties5.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet8 = properties5.stringPropertyNames();
        boolean boolean9 = properties4.containsValue((java.lang.Object) properties5);
        java.util.Collection<java.lang.Object> objCollection10 = properties4.values();
        java.util.Enumeration<?> wildcardEnumeration11 = properties4.propertyNames();
        java.lang.Object obj13 = properties0.put((java.lang.Object) wildcardEnumeration11, (java.lang.Object) 10.0d);
        java.util.Properties properties14 = new java.util.Properties();
        java.lang.Object obj16 = properties14.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration17 = properties14.elements();
        boolean boolean18 = properties14.isEmpty();
        java.util.Set<java.lang.Object> objSet19 = properties14.keySet();
        boolean boolean20 = properties14.isEmpty();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet21 = properties14.entrySet();
        java.util.Properties properties22 = new java.util.Properties();
        java.lang.Object obj24 = properties22.remove((java.lang.Object) 0.0d);
        boolean boolean25 = properties22.isEmpty();
        java.lang.Object obj28 = properties22.setProperty("", "hi!");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties29 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties29.setSerialJtaTransactions(false);
        boolean boolean32 = properties14.remove((java.lang.Object) properties22, (java.lang.Object) atomikosProperties29);
        java.util.Properties properties33 = new java.util.Properties(properties22);
        int int34 = properties33.size();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties36 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties36.setSerialJtaTransactions(false);
        boolean boolean39 = atomikosProperties36.isSerialJtaTransactions();
        java.lang.String str40 = atomikosProperties36.getService();
        boolean boolean41 = atomikosProperties36.isEnableLogging();
        java.lang.String str42 = atomikosProperties36.getTransactionManagerUniqueName();
        boolean boolean43 = properties33.remove((java.lang.Object) (byte) 1, (java.lang.Object) atomikosProperties36);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties44 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties44.setSerialJtaTransactions(false);
        atomikosProperties44.setThreadedTwoPhaseCommit(true);
        atomikosProperties44.setEnableLogging(false);
        boolean boolean51 = atomikosProperties44.isSerialJtaTransactions();
        int int52 = atomikosProperties44.getMaxActives();
        boolean boolean53 = atomikosProperties44.isSerialJtaTransactions();
        boolean boolean54 = properties0.remove((java.lang.Object) properties33, (java.lang.Object) boolean53);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties55 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties55.setSerialJtaTransactions(false);
        atomikosProperties55.setThreadedTwoPhaseCommit(true);
        atomikosProperties55.setMaxTimeout((long) '#');
        boolean boolean62 = atomikosProperties55.isEnableLogging();
        atomikosProperties55.setCheckpointInterval((long) 100);
        java.lang.String str65 = atomikosProperties55.getTransactionManagerUniqueName();
        boolean boolean66 = properties33.contains((java.lang.Object) atomikosProperties55);
        java.util.Set<java.lang.Object> objSet67 = properties33.keySet();
        java.io.OutputStream outputStream68 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties33.save(outputStream68, "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=false, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.max_actives=2, com.atomikos.icatch.log_base_name=tmlog}");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(strSet3);
        org.junit.Assert.assertNull(obj7);
        org.junit.Assert.assertNotNull(strSet8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(objCollection10);
        org.junit.Assert.assertNotNull(wildcardEnumeration11);
        org.junit.Assert.assertNull(obj13);
        org.junit.Assert.assertNull(obj16);
        org.junit.Assert.assertNotNull(objEnumeration17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(objSet19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNotNull(objEntrySet21);
        org.junit.Assert.assertNull(obj24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNull(obj28);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 0 + "'", int34 == 0);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNull(str40);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertNull(str42);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + 50 + "'", int52 == 50);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + true + "'", boolean62 == true);
        org.junit.Assert.assertNull(str65);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertNotNull(objSet67);
    }

    @Test
    public void test5327() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test5327");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        java.util.Collection<java.lang.Object> objCollection3 = properties0.values();
        java.util.Properties properties4 = new java.util.Properties(properties0);
        java.util.Properties properties5 = new java.util.Properties();
        java.util.Collection<java.lang.Object> objCollection6 = properties5.values();
        java.util.Enumeration<java.lang.Object> objEnumeration7 = properties5.keys();
        java.util.Properties properties8 = new java.util.Properties();
        java.lang.Object obj10 = properties8.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration11 = properties8.elements();
        boolean boolean12 = properties8.isEmpty();
        java.util.Set<java.lang.Object> objSet13 = properties8.keySet();
        boolean boolean15 = properties8.containsKey((java.lang.Object) (-1.0f));
        java.util.Collection<java.lang.Object> objCollection16 = properties8.values();
        java.lang.Object obj17 = properties8.clone();
        boolean boolean18 = properties5.equals((java.lang.Object) properties8);
        java.util.Properties properties19 = new java.util.Properties();
        java.util.Properties properties20 = new java.util.Properties();
        java.lang.Object obj22 = properties20.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet23 = properties20.stringPropertyNames();
        boolean boolean24 = properties19.containsValue((java.lang.Object) properties20);
        java.util.Collection<java.lang.Object> objCollection25 = properties19.values();
        java.util.Properties properties27 = new java.util.Properties();
        java.lang.Object obj29 = properties27.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration30 = properties27.elements();
        boolean boolean31 = properties27.isEmpty();
        java.util.Set<java.lang.Object> objSet32 = properties27.keySet();
        java.lang.Object obj33 = properties19.putIfAbsent((java.lang.Object) "hi!", (java.lang.Object) objSet32);
        java.util.Set<java.lang.Object> objSet34 = properties19.keySet();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties35 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties35.setSerialJtaTransactions(false);
        atomikosProperties35.setThreadedTwoPhaseCommit(true);
        atomikosProperties35.setMaxTimeout((long) '#');
        boolean boolean42 = atomikosProperties35.isEnableLogging();
        atomikosProperties35.setCheckpointInterval((long) (byte) -1);
        atomikosProperties35.setEnableLogging(true);
        java.util.Properties properties47 = new java.util.Properties();
        java.lang.Object obj49 = properties47.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration50 = properties47.elements();
        boolean boolean51 = properties47.isEmpty();
        java.util.Enumeration<java.lang.Object> objEnumeration52 = properties47.elements();
        java.lang.Object obj53 = properties19.replace((java.lang.Object) true, (java.lang.Object) properties47);
        java.util.Properties properties54 = new java.util.Properties();
        java.util.Properties properties55 = new java.util.Properties();
        java.lang.Object obj57 = properties55.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet58 = properties55.stringPropertyNames();
        boolean boolean59 = properties54.containsValue((java.lang.Object) properties55);
        java.util.Collection<java.lang.Object> objCollection60 = properties54.values();
        java.util.Properties properties62 = new java.util.Properties();
        java.lang.Object obj64 = properties62.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration65 = properties62.elements();
        boolean boolean66 = properties62.isEmpty();
        java.util.Set<java.lang.Object> objSet67 = properties62.keySet();
        java.lang.Object obj68 = properties54.putIfAbsent((java.lang.Object) "hi!", (java.lang.Object) objSet67);
        java.util.Set<java.lang.Object> objSet69 = properties54.keySet();
        java.lang.Object obj70 = properties5.putIfAbsent((java.lang.Object) properties19, (java.lang.Object) properties54);
        java.util.Enumeration<java.lang.Object> objEnumeration71 = properties19.elements();
        java.lang.Object obj74 = properties19.setProperty("{hi!=[]}", "");
        int int75 = properties19.size();
        boolean boolean76 = properties4.containsKey((java.lang.Object) int75);
        java.lang.String str78 = properties4.getProperty("{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=100, com.atomikos.icatch.serial_jta_transactions=false, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=35, com.atomikos.icatch.service={=hi!}, com.atomikos.icatch.threaded_2pc=true, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(objCollection3);
        org.junit.Assert.assertNotNull(objCollection6);
        org.junit.Assert.assertNotNull(objEnumeration7);
        org.junit.Assert.assertNull(obj10);
        org.junit.Assert.assertNotNull(objEnumeration11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(objSet13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(objCollection16);
        org.junit.Assert.assertNotNull(obj17);
        org.junit.Assert.assertEquals(obj17.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj17), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj17), "{}");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNull(obj22);
        org.junit.Assert.assertNotNull(strSet23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(objCollection25);
        org.junit.Assert.assertNull(obj29);
        org.junit.Assert.assertNotNull(objEnumeration30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNotNull(objSet32);
        org.junit.Assert.assertNull(obj33);
        org.junit.Assert.assertNotNull(objSet34);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertNull(obj49);
        org.junit.Assert.assertNotNull(objEnumeration50);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertNotNull(objEnumeration52);
        org.junit.Assert.assertNull(obj53);
        org.junit.Assert.assertNull(obj57);
        org.junit.Assert.assertNotNull(strSet58);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertNotNull(objCollection60);
        org.junit.Assert.assertNull(obj64);
        org.junit.Assert.assertNotNull(objEnumeration65);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66 == true);
        org.junit.Assert.assertNotNull(objSet67);
        org.junit.Assert.assertNull(obj68);
        org.junit.Assert.assertNotNull(objSet69);
        org.junit.Assert.assertNull(obj70);
        org.junit.Assert.assertNotNull(objEnumeration71);
        org.junit.Assert.assertNull(obj74);
        org.junit.Assert.assertTrue("'" + int75 + "' != '" + 2 + "'", int75 == 2);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
        org.junit.Assert.assertNull(str78);
    }

    @Test
    public void test5328() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test5328");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setSerialJtaTransactions(false);
        atomikosProperties0.setThreadedTwoPhaseCommit(true);
        atomikosProperties0.setMaxTimeout((long) '#');
        boolean boolean7 = atomikosProperties0.isEnableLogging();
        atomikosProperties0.setMaxActives((int) '#');
        boolean boolean10 = atomikosProperties0.isForceShutdownOnVmExit();
        atomikosProperties0.setEnableLogging(true);
        atomikosProperties0.setCheckpointInterval((long) 'a');
        atomikosProperties0.setTransactionManagerUniqueName("{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=false, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=true, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
        long long17 = atomikosProperties0.getMaxTimeout();
        boolean boolean18 = atomikosProperties0.isEnableLogging();
        java.lang.String str19 = atomikosProperties0.getLogBaseName();
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + long17 + "' != '" + 35L + "'", long17 == 35L);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "tmlog" + "'", str19, "tmlog");
    }

    @Test
    public void test5329() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test5329");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet3 = properties0.stringPropertyNames();
        java.util.Properties properties4 = new java.util.Properties();
        java.util.Properties properties5 = new java.util.Properties();
        java.lang.Object obj7 = properties5.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet8 = properties5.stringPropertyNames();
        boolean boolean9 = properties4.containsValue((java.lang.Object) properties5);
        java.util.Collection<java.lang.Object> objCollection10 = properties4.values();
        java.util.Enumeration<?> wildcardEnumeration11 = properties4.propertyNames();
        java.lang.Object obj13 = properties0.put((java.lang.Object) wildcardEnumeration11, (java.lang.Object) 10.0d);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties14 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties14.setSerialJtaTransactions(false);
        atomikosProperties14.setThreadedTwoPhaseCommit(true);
        atomikosProperties14.setMaxTimeout((long) '#');
        boolean boolean21 = atomikosProperties14.isForceShutdownOnVmExit();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties22 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties22.setSerialJtaTransactions(false);
        atomikosProperties22.setThreadedTwoPhaseCommit(true);
        atomikosProperties22.setThreadedTwoPhaseCommit(true);
        java.lang.Object obj29 = properties0.getOrDefault((java.lang.Object) boolean21, (java.lang.Object) atomikosProperties22);
        java.util.Properties properties30 = new java.util.Properties();
        java.lang.Object obj32 = properties30.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration33 = properties30.elements();
        boolean boolean34 = properties30.isEmpty();
        java.util.Set<java.lang.Object> objSet35 = properties30.keySet();
        java.util.Enumeration<java.lang.Object> objEnumeration36 = properties30.keys();
        java.lang.String str38 = properties30.getProperty("hi!");
        java.lang.String str40 = properties30.getProperty("");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties41 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties41.setSerialJtaTransactions(false);
        atomikosProperties41.setThreadedTwoPhaseCommit(true);
        atomikosProperties41.setEnableLogging(false);
        boolean boolean48 = properties30.containsKey((java.lang.Object) atomikosProperties41);
        boolean boolean49 = properties0.containsValue((java.lang.Object) properties30);
        java.util.Enumeration<java.lang.Object> objEnumeration50 = properties0.elements();
        properties0.clear();
        boolean boolean52 = properties0.isEmpty();
        boolean boolean54 = properties0.contains((java.lang.Object) "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=false, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.tm_unique_name=tmlog, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(strSet3);
        org.junit.Assert.assertNull(obj7);
        org.junit.Assert.assertNotNull(strSet8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(objCollection10);
        org.junit.Assert.assertNotNull(wildcardEnumeration11);
        org.junit.Assert.assertNull(obj13);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(obj29);
        org.junit.Assert.assertNull(obj32);
        org.junit.Assert.assertNotNull(objEnumeration33);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertNotNull(objSet35);
        org.junit.Assert.assertNotNull(objEnumeration36);
        org.junit.Assert.assertNull(str38);
        org.junit.Assert.assertNull(str40);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNotNull(objEnumeration50);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
    }

    @Test
    public void test5330() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test5330");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration3 = properties0.elements();
        boolean boolean4 = properties0.isEmpty();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet5 = properties0.entrySet();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties7 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties7.setSerialJtaTransactions(false);
        atomikosProperties7.setThreadedTwoPhaseCommit(true);
        atomikosProperties7.setMaxTimeout((long) '#');
        boolean boolean14 = atomikosProperties7.isForceShutdownOnVmExit();
        java.lang.Object obj15 = properties0.put((java.lang.Object) (short) 1, (java.lang.Object) atomikosProperties7);
        atomikosProperties7.setForceShutdownOnVmExit(true);
        java.util.Properties properties18 = atomikosProperties7.asProperties();
        java.util.Set<java.lang.Object> objSet19 = properties18.keySet();
        java.util.Set<java.lang.Object> objSet20 = properties18.keySet();
        java.lang.Object obj23 = properties18.setProperty("", "");
        java.util.Properties properties24 = new java.util.Properties(properties18);
        java.io.Writer writer25 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties24.store(writer25, "");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(objEnumeration3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(objEntrySet5);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNull(obj15);
        org.junit.Assert.assertNotNull(properties18);
        org.junit.Assert.assertNotNull(objSet19);
        org.junit.Assert.assertNotNull(objSet20);
        org.junit.Assert.assertNull(obj23);
    }

    @Test
    public void test5331() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test5331");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration3 = properties0.elements();
        boolean boolean4 = properties0.isEmpty();
        java.util.Set<java.lang.Object> objSet5 = properties0.keySet();
        boolean boolean6 = properties0.isEmpty();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet7 = properties0.entrySet();
        java.util.Set<java.lang.String> strSet8 = properties0.stringPropertyNames();
        int int9 = properties0.size();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties10 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties10.setSerialJtaTransactions(false);
        atomikosProperties10.setThreadedTwoPhaseCommit(true);
        java.lang.String str15 = atomikosProperties10.getLogBaseName();
        long long16 = atomikosProperties10.getMaxTimeout();
        atomikosProperties10.setMaxActives((int) (short) 100);
        java.util.Properties properties19 = new java.util.Properties();
        java.lang.Object obj21 = properties19.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration22 = properties19.elements();
        boolean boolean23 = properties19.isEmpty();
        java.util.Set<java.lang.Object> objSet24 = properties19.keySet();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties25 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties25.setSerialJtaTransactions(false);
        atomikosProperties25.setThreadedTwoPhaseCommit(true);
        atomikosProperties25.setThreadedTwoPhaseCommit(true);
        java.util.Properties properties32 = atomikosProperties25.asProperties();
        int int33 = atomikosProperties25.getMaxActives();
        java.util.Properties properties34 = new java.util.Properties();
        java.lang.Object obj36 = properties34.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration37 = properties34.elements();
        boolean boolean38 = properties34.isEmpty();
        java.util.Set<java.lang.Object> objSet39 = properties34.keySet();
        boolean boolean41 = properties34.containsKey((java.lang.Object) (-1.0f));
        java.lang.Object obj42 = properties19.put((java.lang.Object) atomikosProperties25, (java.lang.Object) properties34);
        java.util.Properties properties43 = new java.util.Properties();
        java.lang.Object obj45 = properties43.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet46 = properties43.stringPropertyNames();
        java.util.Properties properties47 = new java.util.Properties();
        java.lang.Object obj49 = properties47.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet50 = properties47.stringPropertyNames();
        java.lang.Object obj52 = properties43.put((java.lang.Object) strSet50, (java.lang.Object) 0.0d);
        java.util.Properties properties53 = new java.util.Properties();
        java.util.Properties properties54 = new java.util.Properties();
        java.lang.Object obj56 = properties54.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet57 = properties54.stringPropertyNames();
        boolean boolean58 = properties53.containsValue((java.lang.Object) properties54);
        java.util.Collection<java.lang.Object> objCollection59 = properties53.values();
        java.util.Properties properties61 = new java.util.Properties();
        java.lang.Object obj63 = properties61.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration64 = properties61.elements();
        boolean boolean65 = properties61.isEmpty();
        java.util.Set<java.lang.Object> objSet66 = properties61.keySet();
        java.lang.Object obj67 = properties53.putIfAbsent((java.lang.Object) "hi!", (java.lang.Object) objSet66);
        java.util.Set<java.lang.Object> objSet68 = properties53.keySet();
        java.lang.Object obj70 = properties43.putIfAbsent((java.lang.Object) properties53, (java.lang.Object) (short) 10);
        java.util.Enumeration<?> wildcardEnumeration71 = properties53.propertyNames();
        properties19.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties53);
        java.util.Collection<java.lang.Object> objCollection73 = properties19.values();
        boolean boolean74 = properties0.remove((java.lang.Object) atomikosProperties10, (java.lang.Object) objCollection73);
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(objEnumeration3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(objSet5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(objEntrySet7);
        org.junit.Assert.assertNotNull(strSet8);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "tmlog" + "'", str15, "tmlog");
        org.junit.Assert.assertTrue("'" + long16 + "' != '" + 300000L + "'", long16 == 300000L);
        org.junit.Assert.assertNull(obj21);
        org.junit.Assert.assertNotNull(objEnumeration22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNotNull(objSet24);
        org.junit.Assert.assertNotNull(properties32);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 50 + "'", int33 == 50);
        org.junit.Assert.assertNull(obj36);
        org.junit.Assert.assertNotNull(objEnumeration37);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertNotNull(objSet39);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNull(obj42);
        org.junit.Assert.assertNull(obj45);
        org.junit.Assert.assertNotNull(strSet46);
        org.junit.Assert.assertNull(obj49);
        org.junit.Assert.assertNotNull(strSet50);
        org.junit.Assert.assertNull(obj52);
        org.junit.Assert.assertNull(obj56);
        org.junit.Assert.assertNotNull(strSet57);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertNotNull(objCollection59);
        org.junit.Assert.assertNull(obj63);
        org.junit.Assert.assertNotNull(objEnumeration64);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65 == true);
        org.junit.Assert.assertNotNull(objSet66);
        org.junit.Assert.assertNull(obj67);
        org.junit.Assert.assertNotNull(objSet68);
        org.junit.Assert.assertNull(obj70);
        org.junit.Assert.assertNotNull(wildcardEnumeration71);
        org.junit.Assert.assertNotNull(objCollection73);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
    }

    @Test
    public void test5332() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test5332");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration3 = properties0.elements();
        boolean boolean4 = properties0.isEmpty();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet5 = properties0.entrySet();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties7 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties7.setSerialJtaTransactions(false);
        atomikosProperties7.setThreadedTwoPhaseCommit(true);
        atomikosProperties7.setMaxTimeout((long) '#');
        boolean boolean14 = atomikosProperties7.isForceShutdownOnVmExit();
        java.lang.Object obj15 = properties0.put((java.lang.Object) (short) 1, (java.lang.Object) atomikosProperties7);
        long long16 = atomikosProperties7.getDefaultJtaTimeout();
        atomikosProperties7.setThreadedTwoPhaseCommit(true);
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(objEnumeration3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(objEntrySet5);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNull(obj15);
        org.junit.Assert.assertTrue("'" + long16 + "' != '" + 10000L + "'", long16 == 10000L);
    }

    @Test
    public void test5333() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test5333");
        java.util.Properties properties0 = new java.util.Properties();
        java.util.Collection<java.lang.Object> objCollection1 = properties0.values();
        java.util.Enumeration<java.lang.Object> objEnumeration2 = properties0.keys();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties4 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties4.setSerialJtaTransactions(false);
        atomikosProperties4.setThreadedTwoPhaseCommit(true);
        atomikosProperties4.setMaxTimeout((long) '#');
        boolean boolean11 = atomikosProperties4.isEnableLogging();
        atomikosProperties4.setCheckpointInterval((long) (byte) -1);
        atomikosProperties4.setEnableLogging(true);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties16 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties16.setSerialJtaTransactions(false);
        atomikosProperties16.setThreadedTwoPhaseCommit(true);
        atomikosProperties16.setMaxTimeout((long) '#');
        boolean boolean23 = atomikosProperties16.isEnableLogging();
        atomikosProperties16.setCheckpointInterval((long) (byte) -1);
        atomikosProperties16.setEnableLogging(true);
        atomikosProperties16.setLogBaseDir("");
        boolean boolean30 = properties0.replace((java.lang.Object) 10000L, (java.lang.Object) atomikosProperties4, (java.lang.Object) "");
        java.lang.String str32 = properties0.getProperty("");
        java.util.Enumeration<java.lang.Object> objEnumeration33 = properties0.elements();
        org.junit.Assert.assertNotNull(objCollection1);
        org.junit.Assert.assertNotNull(objEnumeration2);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNull(str32);
        org.junit.Assert.assertNotNull(objEnumeration33);
    }

    @Test
    public void test5334() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test5334");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet3 = properties0.stringPropertyNames();
        java.util.Properties properties4 = new java.util.Properties();
        java.util.Properties properties5 = new java.util.Properties();
        java.lang.Object obj7 = properties5.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet8 = properties5.stringPropertyNames();
        boolean boolean9 = properties4.containsValue((java.lang.Object) properties5);
        java.util.Collection<java.lang.Object> objCollection10 = properties4.values();
        java.util.Enumeration<?> wildcardEnumeration11 = properties4.propertyNames();
        java.lang.Object obj13 = properties0.put((java.lang.Object) wildcardEnumeration11, (java.lang.Object) 10.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration14 = properties0.elements();
        java.util.Properties properties16 = new java.util.Properties();
        java.lang.Object obj18 = properties16.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration19 = properties16.elements();
        boolean boolean20 = properties16.isEmpty();
        java.util.Set<java.lang.Object> objSet21 = properties16.keySet();
        java.util.Enumeration<java.lang.Object> objEnumeration22 = properties16.keys();
        boolean boolean24 = properties16.equals((java.lang.Object) "");
        java.lang.String str25 = properties16.toString();
        java.lang.Object obj26 = properties0.put((java.lang.Object) 'a', (java.lang.Object) properties16);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties28 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties28.setSerialJtaTransactions(false);
        atomikosProperties28.setThreadedTwoPhaseCommit(true);
        atomikosProperties28.setMaxTimeout((long) '#');
        java.lang.String str35 = atomikosProperties28.getLogBaseDir();
        java.lang.Class<?> wildcardClass36 = atomikosProperties28.getClass();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties37 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties37.setSerialJtaTransactions(false);
        boolean boolean40 = atomikosProperties37.isSerialJtaTransactions();
        java.util.Properties properties41 = atomikosProperties37.asProperties();
        java.lang.Object obj44 = properties41.setProperty("hi!", "");
        java.util.Properties properties45 = new java.util.Properties(properties41);
        boolean boolean46 = properties0.replace((java.lang.Object) "{}", (java.lang.Object) atomikosProperties28, (java.lang.Object) properties41);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties47 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties47.setSerialJtaTransactions(false);
        boolean boolean50 = atomikosProperties47.isSerialJtaTransactions();
        java.lang.String str51 = atomikosProperties47.getLogBaseDir();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties52 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties52.setSerialJtaTransactions(false);
        boolean boolean55 = atomikosProperties52.isSerialJtaTransactions();
        atomikosProperties52.setTransactionManagerUniqueName("hi!");
        java.lang.String str58 = atomikosProperties52.getLogBaseName();
        java.lang.String str59 = atomikosProperties52.getLogBaseName();
        boolean boolean60 = atomikosProperties52.isForceShutdownOnVmExit();
        long long61 = atomikosProperties52.getMaxTimeout();
        atomikosProperties52.setSerialJtaTransactions(false);
        boolean boolean64 = atomikosProperties52.isThreadedTwoPhaseCommit();
        long long65 = atomikosProperties52.getDefaultJtaTimeout();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties66 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties66.setSerialJtaTransactions(false);
        atomikosProperties66.setThreadedTwoPhaseCommit(true);
        atomikosProperties66.setMaxTimeout((long) '#');
        boolean boolean73 = atomikosProperties66.isEnableLogging();
        atomikosProperties66.setTransactionManagerUniqueName("hi!");
        atomikosProperties66.setForceShutdownOnVmExit(false);
        atomikosProperties66.setSerialJtaTransactions(false);
        boolean boolean80 = atomikosProperties66.isSerialJtaTransactions();
        boolean boolean81 = properties0.replace((java.lang.Object) atomikosProperties47, (java.lang.Object) atomikosProperties52, (java.lang.Object) boolean80);
        java.lang.Object obj84 = properties0.setProperty("{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=false, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.service={{}={}}, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.tm_unique_name=hi!, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}", "{com.atomikos.icatch.enable_logging=false, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=1, com.atomikos.icatch.serial_jta_transactions=false, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(strSet3);
        org.junit.Assert.assertNull(obj7);
        org.junit.Assert.assertNotNull(strSet8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(objCollection10);
        org.junit.Assert.assertNotNull(wildcardEnumeration11);
        org.junit.Assert.assertNull(obj13);
        org.junit.Assert.assertNotNull(objEnumeration14);
        org.junit.Assert.assertNull(obj18);
        org.junit.Assert.assertNotNull(objEnumeration19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNotNull(objSet21);
        org.junit.Assert.assertNotNull(objEnumeration22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "{}" + "'", str25, "{}");
        org.junit.Assert.assertNull(obj26);
        org.junit.Assert.assertNull(str35);
        org.junit.Assert.assertNotNull(wildcardClass36);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(properties41);
        org.junit.Assert.assertNull(obj44);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertNull(str51);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "tmlog" + "'", str58, "tmlog");
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "tmlog" + "'", str59, "tmlog");
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertTrue("'" + long61 + "' != '" + 300000L + "'", long61 == 300000L);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertTrue("'" + long65 + "' != '" + 10000L + "'", long65 == 10000L);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + true + "'", boolean73 == true);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", boolean80 == false);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + false + "'", boolean81 == false);
        org.junit.Assert.assertNull(obj84);
    }

    @Test
    public void test5335() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test5335");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setSerialJtaTransactions(false);
        boolean boolean3 = atomikosProperties0.isSerialJtaTransactions();
        atomikosProperties0.setCheckpointInterval((long) 10);
        atomikosProperties0.setSerialJtaTransactions(true);
        boolean boolean8 = atomikosProperties0.isSerialJtaTransactions();
        java.util.Properties properties9 = atomikosProperties0.asProperties();
        atomikosProperties0.setLogBaseDir("tmlog");
        long long12 = atomikosProperties0.getCheckpointInterval();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(properties9);
        org.junit.Assert.assertTrue("'" + long12 + "' != '" + 10L + "'", long12 == 10L);
    }

    @Test
    public void test5336() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test5336");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setSerialJtaTransactions(false);
        atomikosProperties0.setThreadedTwoPhaseCommit(true);
        atomikosProperties0.setSerialJtaTransactions(false);
        java.lang.String str7 = atomikosProperties0.getService();
        java.lang.String str8 = atomikosProperties0.getLogBaseDir();
        atomikosProperties0.setService("{{}={}}");
        atomikosProperties0.setDefaultJtaTimeout((long) (byte) 0);
        atomikosProperties0.setSerialJtaTransactions(true);
        atomikosProperties0.setMaxActives((int) (byte) 100);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNull(str8);
    }

    @Test
    public void test5337() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test5337");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setSerialJtaTransactions(false);
        boolean boolean3 = atomikosProperties0.isSerialJtaTransactions();
        java.lang.String str4 = atomikosProperties0.getService();
        boolean boolean5 = atomikosProperties0.isEnableLogging();
        java.util.Properties properties6 = atomikosProperties0.asProperties();
        atomikosProperties0.setForceShutdownOnVmExit(true);
        atomikosProperties0.setMaxActives((int) (short) -1);
        atomikosProperties0.setMaxTimeout((long) ' ');
        atomikosProperties0.setEnableLogging(false);
        atomikosProperties0.setService("{{}={}}");
        atomikosProperties0.setLogBaseName("{{}={}}");
        atomikosProperties0.setLogBaseDir("{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=false, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=true, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
        long long21 = atomikosProperties0.getDefaultJtaTimeout();
        java.lang.String str22 = atomikosProperties0.getLogBaseName();
        java.lang.String str23 = atomikosProperties0.getService();
        boolean boolean24 = atomikosProperties0.isForceShutdownOnVmExit();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNotNull(properties6);
        org.junit.Assert.assertTrue("'" + long21 + "' != '" + 10000L + "'", long21 == 10000L);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "{{}={}}" + "'", str22, "{{}={}}");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "{{}={}}" + "'", str23, "{{}={}}");
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
    }

    @Test
    public void test5338() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test5338");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet3 = properties0.stringPropertyNames();
        java.util.Properties properties4 = new java.util.Properties();
        java.lang.Object obj6 = properties4.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet7 = properties4.stringPropertyNames();
        java.lang.Object obj9 = properties0.put((java.lang.Object) strSet7, (java.lang.Object) 0.0d);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties10 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties10.setSerialJtaTransactions(false);
        atomikosProperties10.setThreadedTwoPhaseCommit(true);
        atomikosProperties10.setMaxTimeout((long) '#');
        boolean boolean17 = atomikosProperties10.isEnableLogging();
        atomikosProperties10.setCheckpointInterval((long) (byte) -1);
        atomikosProperties10.setEnableLogging(true);
        atomikosProperties10.setLogBaseName("{}");
        long long24 = atomikosProperties10.getDefaultJtaTimeout();
        boolean boolean25 = properties0.containsKey((java.lang.Object) long24);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties26 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties26.setSerialJtaTransactions(false);
        boolean boolean29 = atomikosProperties26.isSerialJtaTransactions();
        java.lang.String str30 = atomikosProperties26.getService();
        boolean boolean31 = atomikosProperties26.isEnableLogging();
        java.util.Properties properties32 = atomikosProperties26.asProperties();
        atomikosProperties26.setForceShutdownOnVmExit(true);
        atomikosProperties26.setMaxActives((int) (short) -1);
        boolean boolean37 = properties0.containsValue((java.lang.Object) (short) -1);
        java.lang.Object obj38 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj39 = properties0.get(obj38);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(strSet3);
        org.junit.Assert.assertNull(obj6);
        org.junit.Assert.assertNotNull(strSet7);
        org.junit.Assert.assertNull(obj9);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue("'" + long24 + "' != '" + 10000L + "'", long24 == 10000L);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNull(str30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNotNull(properties32);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
    }

    @Test
    public void test5339() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test5339");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        boolean boolean3 = properties0.isEmpty();
        java.util.Enumeration<java.lang.Object> objEnumeration4 = properties0.elements();
        java.util.Enumeration<java.lang.Object> objEnumeration5 = properties0.elements();
        java.util.Properties properties6 = new java.util.Properties();
        java.lang.Object obj8 = properties6.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration9 = properties6.elements();
        boolean boolean10 = properties6.isEmpty();
        java.util.Set<java.lang.Object> objSet11 = properties6.keySet();
        java.util.Enumeration<java.lang.Object> objEnumeration12 = properties6.keys();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet13 = properties6.entrySet();
        java.util.Properties properties15 = new java.util.Properties();
        java.lang.Object obj17 = properties15.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration18 = properties15.elements();
        boolean boolean19 = properties15.isEmpty();
        java.util.Set<java.lang.Object> objSet20 = properties15.keySet();
        boolean boolean21 = properties15.isEmpty();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties22 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties22.setSerialJtaTransactions(false);
        atomikosProperties22.setThreadedTwoPhaseCommit(true);
        atomikosProperties22.setMaxTimeout((long) '#');
        boolean boolean29 = atomikosProperties22.isEnableLogging();
        atomikosProperties22.setCheckpointInterval((long) (byte) -1);
        java.util.Properties properties32 = new java.util.Properties();
        java.util.Properties properties33 = new java.util.Properties();
        java.lang.Object obj35 = properties33.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet36 = properties33.stringPropertyNames();
        boolean boolean37 = properties32.containsValue((java.lang.Object) properties33);
        java.util.Collection<java.lang.Object> objCollection38 = properties32.values();
        java.lang.Object obj39 = properties15.replace((java.lang.Object) atomikosProperties22, (java.lang.Object) objCollection38);
        boolean boolean41 = properties6.replace((java.lang.Object) 100.0d, (java.lang.Object) objCollection38, (java.lang.Object) 10.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration42 = properties6.keys();
        java.util.Properties properties43 = new java.util.Properties();
        java.util.Collection<java.lang.Object> objCollection44 = properties43.values();
        java.util.Properties properties45 = new java.util.Properties();
        java.lang.Object obj47 = properties45.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet48 = properties45.stringPropertyNames();
        java.util.Properties properties49 = new java.util.Properties();
        java.util.Properties properties50 = new java.util.Properties();
        java.lang.Object obj52 = properties50.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet53 = properties50.stringPropertyNames();
        boolean boolean54 = properties49.containsValue((java.lang.Object) properties50);
        java.util.Collection<java.lang.Object> objCollection55 = properties49.values();
        java.util.Enumeration<?> wildcardEnumeration56 = properties49.propertyNames();
        java.lang.Object obj58 = properties45.put((java.lang.Object) wildcardEnumeration56, (java.lang.Object) 10.0d);
        boolean boolean59 = properties43.equals((java.lang.Object) 10.0d);
        boolean boolean60 = properties6.containsKey((java.lang.Object) 10.0d);
        boolean boolean61 = properties0.containsValue((java.lang.Object) 10.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration62 = properties0.keys();
        java.lang.String str65 = properties0.getProperty("{com.atomikos.icatch.enable_logging=false, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=false, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}", "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=false, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.service={{}={}}, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.tm_unique_name=hi!, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(objEnumeration4);
        org.junit.Assert.assertNotNull(objEnumeration5);
        org.junit.Assert.assertNull(obj8);
        org.junit.Assert.assertNotNull(objEnumeration9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(objSet11);
        org.junit.Assert.assertNotNull(objEnumeration12);
        org.junit.Assert.assertNotNull(objEntrySet13);
        org.junit.Assert.assertNull(obj17);
        org.junit.Assert.assertNotNull(objEnumeration18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(objSet20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNull(obj35);
        org.junit.Assert.assertNotNull(strSet36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(objCollection38);
        org.junit.Assert.assertNull(obj39);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(objEnumeration42);
        org.junit.Assert.assertNotNull(objCollection44);
        org.junit.Assert.assertNull(obj47);
        org.junit.Assert.assertNotNull(strSet48);
        org.junit.Assert.assertNull(obj52);
        org.junit.Assert.assertNotNull(strSet53);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertNotNull(objCollection55);
        org.junit.Assert.assertNotNull(wildcardEnumeration56);
        org.junit.Assert.assertNull(obj58);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertNotNull(objEnumeration62);
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=false, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.service={{}={}}, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.tm_unique_name=hi!, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}" + "'", str65, "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=false, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.service={{}={}}, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.tm_unique_name=hi!, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
    }

    @Test
    public void test5340() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test5340");
        java.util.Properties properties0 = new java.util.Properties();
        java.util.Properties properties1 = new java.util.Properties();
        java.lang.Object obj3 = properties1.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet4 = properties1.stringPropertyNames();
        boolean boolean5 = properties0.containsValue((java.lang.Object) properties1);
        java.util.Collection<java.lang.Object> objCollection6 = properties0.values();
        java.util.Properties properties8 = new java.util.Properties();
        java.lang.Object obj10 = properties8.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration11 = properties8.elements();
        boolean boolean12 = properties8.isEmpty();
        java.util.Set<java.lang.Object> objSet13 = properties8.keySet();
        java.lang.Object obj14 = properties0.putIfAbsent((java.lang.Object) "hi!", (java.lang.Object) objSet13);
        java.util.Set<java.lang.Object> objSet15 = properties0.keySet();
        java.util.Set<java.lang.Object> objSet16 = properties0.keySet();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet17 = properties0.entrySet();
        java.util.Properties properties18 = new java.util.Properties();
        java.lang.Object obj20 = properties18.remove((java.lang.Object) 0.0d);
        boolean boolean21 = properties18.isEmpty();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties22 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties22.setSerialJtaTransactions(false);
        atomikosProperties22.setThreadedTwoPhaseCommit(true);
        atomikosProperties22.setThreadedTwoPhaseCommit(true);
        java.util.Properties properties29 = atomikosProperties22.asProperties();
        int int30 = atomikosProperties22.getMaxActives();
        atomikosProperties22.setService("hi!");
        java.lang.Object obj33 = properties18.get((java.lang.Object) atomikosProperties22);
        boolean boolean34 = properties0.containsValue((java.lang.Object) atomikosProperties22);
        java.util.Enumeration<java.lang.Object> objEnumeration35 = properties0.elements();
        java.io.OutputStream outputStream36 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties0.save(outputStream36, "{{}={}}");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(obj3);
        org.junit.Assert.assertNotNull(strSet4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(objCollection6);
        org.junit.Assert.assertNull(obj10);
        org.junit.Assert.assertNotNull(objEnumeration11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(objSet13);
        org.junit.Assert.assertNull(obj14);
        org.junit.Assert.assertNotNull(objSet15);
        org.junit.Assert.assertNotNull(objSet16);
        org.junit.Assert.assertNotNull(objEntrySet17);
        org.junit.Assert.assertNull(obj20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(properties29);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 50 + "'", int30 == 50);
        org.junit.Assert.assertNull(obj33);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(objEnumeration35);
    }

    @Test
    public void test5341() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test5341");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setSerialJtaTransactions(false);
        boolean boolean3 = atomikosProperties0.isSerialJtaTransactions();
        java.lang.String str4 = atomikosProperties0.getService();
        long long5 = atomikosProperties0.getMaxTimeout();
        atomikosProperties0.setCheckpointInterval((long) (short) 10);
        java.lang.String str8 = atomikosProperties0.getService();
        java.lang.String str9 = atomikosProperties0.getService();
        atomikosProperties0.setCheckpointInterval(10L);
        atomikosProperties0.setService("");
        long long14 = atomikosProperties0.getDefaultJtaTimeout();
        atomikosProperties0.setSerialJtaTransactions(false);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertTrue("'" + long5 + "' != '" + 300000L + "'", long5 == 300000L);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertTrue("'" + long14 + "' != '" + 10000L + "'", long14 == 10000L);
    }

    @Test
    public void test5342() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test5342");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet3 = properties0.stringPropertyNames();
        java.util.Properties properties4 = new java.util.Properties();
        java.util.Properties properties5 = new java.util.Properties();
        java.lang.Object obj7 = properties5.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet8 = properties5.stringPropertyNames();
        boolean boolean9 = properties4.containsValue((java.lang.Object) properties5);
        java.util.Collection<java.lang.Object> objCollection10 = properties4.values();
        java.util.Enumeration<?> wildcardEnumeration11 = properties4.propertyNames();
        java.lang.Object obj13 = properties0.put((java.lang.Object) wildcardEnumeration11, (java.lang.Object) 10.0d);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties14 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties14.setSerialJtaTransactions(false);
        atomikosProperties14.setThreadedTwoPhaseCommit(true);
        atomikosProperties14.setMaxTimeout((long) '#');
        boolean boolean21 = atomikosProperties14.isForceShutdownOnVmExit();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties22 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties22.setSerialJtaTransactions(false);
        atomikosProperties22.setThreadedTwoPhaseCommit(true);
        atomikosProperties22.setThreadedTwoPhaseCommit(true);
        java.lang.Object obj29 = properties0.getOrDefault((java.lang.Object) boolean21, (java.lang.Object) atomikosProperties22);
        java.util.Properties properties30 = new java.util.Properties();
        java.lang.Object obj32 = properties30.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration33 = properties30.elements();
        boolean boolean34 = properties30.isEmpty();
        java.util.Set<java.lang.Object> objSet35 = properties30.keySet();
        java.util.Enumeration<java.lang.Object> objEnumeration36 = properties30.keys();
        java.lang.String str38 = properties30.getProperty("hi!");
        java.lang.String str40 = properties30.getProperty("");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties41 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties41.setSerialJtaTransactions(false);
        atomikosProperties41.setThreadedTwoPhaseCommit(true);
        atomikosProperties41.setEnableLogging(false);
        boolean boolean48 = properties30.containsKey((java.lang.Object) atomikosProperties41);
        boolean boolean49 = properties0.containsValue((java.lang.Object) properties30);
        java.util.Enumeration<java.lang.Object> objEnumeration50 = properties0.elements();
        boolean boolean51 = properties0.isEmpty();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties52 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties52.setSerialJtaTransactions(false);
        atomikosProperties52.setThreadedTwoPhaseCommit(true);
        atomikosProperties52.setThreadedTwoPhaseCommit(true);
        java.util.Properties properties59 = atomikosProperties52.asProperties();
        int int60 = atomikosProperties52.getMaxActives();
        atomikosProperties52.setService("hi!");
        long long63 = atomikosProperties52.getMaxTimeout();
        atomikosProperties52.setTransactionManagerUniqueName("hi!");
        atomikosProperties52.setMaxActives((int) 'a');
        atomikosProperties52.setLogBaseDir("{}");
        boolean boolean70 = properties0.containsValue((java.lang.Object) atomikosProperties52);
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(strSet3);
        org.junit.Assert.assertNull(obj7);
        org.junit.Assert.assertNotNull(strSet8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(objCollection10);
        org.junit.Assert.assertNotNull(wildcardEnumeration11);
        org.junit.Assert.assertNull(obj13);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(obj29);
        org.junit.Assert.assertNull(obj32);
        org.junit.Assert.assertNotNull(objEnumeration33);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertNotNull(objSet35);
        org.junit.Assert.assertNotNull(objEnumeration36);
        org.junit.Assert.assertNull(str38);
        org.junit.Assert.assertNull(str40);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNotNull(objEnumeration50);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertNotNull(properties59);
        org.junit.Assert.assertTrue("'" + int60 + "' != '" + 50 + "'", int60 == 50);
        org.junit.Assert.assertTrue("'" + long63 + "' != '" + 300000L + "'", long63 == 300000L);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
    }

    @Test
    public void test5343() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test5343");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        java.util.Properties properties3 = new java.util.Properties();
        java.util.Collection<java.lang.Object> objCollection4 = properties3.values();
        java.util.Enumeration<java.lang.Object> objEnumeration5 = properties3.keys();
        java.util.Properties properties6 = new java.util.Properties();
        java.lang.Object obj8 = properties6.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration9 = properties6.elements();
        boolean boolean10 = properties6.isEmpty();
        java.util.Set<java.lang.Object> objSet11 = properties6.keySet();
        java.util.Enumeration<java.lang.Object> objEnumeration12 = properties6.keys();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet13 = properties6.entrySet();
        java.lang.Object obj14 = properties0.put((java.lang.Object) properties3, (java.lang.Object) properties6);
        java.util.Properties properties15 = new java.util.Properties();
        java.util.Properties properties16 = new java.util.Properties();
        java.lang.Object obj18 = properties16.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet19 = properties16.stringPropertyNames();
        boolean boolean20 = properties15.containsValue((java.lang.Object) properties16);
        java.util.Collection<java.lang.Object> objCollection21 = properties15.values();
        java.util.Properties properties23 = new java.util.Properties();
        java.lang.Object obj25 = properties23.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration26 = properties23.elements();
        boolean boolean27 = properties23.isEmpty();
        java.util.Set<java.lang.Object> objSet28 = properties23.keySet();
        java.lang.Object obj29 = properties15.putIfAbsent((java.lang.Object) "hi!", (java.lang.Object) objSet28);
        java.util.Set<java.lang.Object> objSet30 = properties15.keySet();
        java.util.Set<java.lang.Object> objSet31 = properties15.keySet();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet32 = properties15.entrySet();
        java.lang.Object obj33 = properties3.remove((java.lang.Object) objEntrySet32);
        java.lang.String str34 = properties3.toString();
        java.util.Properties properties35 = new java.util.Properties();
        java.lang.Object obj37 = properties35.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet38 = properties35.stringPropertyNames();
        java.lang.String str39 = properties35.toString();
        java.lang.String str40 = properties35.toString();
        java.util.Set<java.lang.Object> objSet41 = properties35.keySet();
        java.util.Properties properties42 = new java.util.Properties();
        java.lang.Object obj44 = properties42.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration45 = properties42.elements();
        boolean boolean46 = properties42.isEmpty();
        java.util.Set<java.lang.Object> objSet47 = properties42.keySet();
        boolean boolean48 = properties42.isEmpty();
        java.lang.Object obj49 = properties3.putIfAbsent((java.lang.Object) properties35, (java.lang.Object) boolean48);
        properties35.clear();
        java.util.Properties properties51 = new java.util.Properties();
        java.lang.Object obj53 = properties51.remove((java.lang.Object) 0.0d);
        boolean boolean54 = properties51.isEmpty();
        java.util.Set<java.lang.String> strSet55 = properties51.stringPropertyNames();
        java.lang.Object obj56 = properties35.get((java.lang.Object) properties51);
        java.lang.Object obj59 = properties35.setProperty("", "{=hi!}");
        java.io.OutputStream outputStream60 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties35.storeToXML(outputStream60, "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=false, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=35, com.atomikos.icatch.threaded_2pc=true, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}", "{{}={}}");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(objCollection4);
        org.junit.Assert.assertNotNull(objEnumeration5);
        org.junit.Assert.assertNull(obj8);
        org.junit.Assert.assertNotNull(objEnumeration9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(objSet11);
        org.junit.Assert.assertNotNull(objEnumeration12);
        org.junit.Assert.assertNotNull(objEntrySet13);
        org.junit.Assert.assertNull(obj14);
        org.junit.Assert.assertNull(obj18);
        org.junit.Assert.assertNotNull(strSet19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(objCollection21);
        org.junit.Assert.assertNull(obj25);
        org.junit.Assert.assertNotNull(objEnumeration26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNotNull(objSet28);
        org.junit.Assert.assertNull(obj29);
        org.junit.Assert.assertNotNull(objSet30);
        org.junit.Assert.assertNotNull(objSet31);
        org.junit.Assert.assertNotNull(objEntrySet32);
        org.junit.Assert.assertNull(obj33);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "{}" + "'", str34, "{}");
        org.junit.Assert.assertNull(obj37);
        org.junit.Assert.assertNotNull(strSet38);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "{}" + "'", str39, "{}");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "{}" + "'", str40, "{}");
        org.junit.Assert.assertNotNull(objSet41);
        org.junit.Assert.assertNull(obj44);
        org.junit.Assert.assertNotNull(objEnumeration45);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertNotNull(objSet47);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertNull(obj49);
        org.junit.Assert.assertNull(obj53);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertNotNull(strSet55);
        org.junit.Assert.assertNull(obj56);
        org.junit.Assert.assertNull(obj59);
    }

    @Test
    public void test5344() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test5344");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setSerialJtaTransactions(false);
        atomikosProperties0.setThreadedTwoPhaseCommit(true);
        atomikosProperties0.setMaxTimeout((long) '#');
        boolean boolean7 = atomikosProperties0.isEnableLogging();
        atomikosProperties0.setCheckpointInterval((long) (byte) -1);
        atomikosProperties0.setEnableLogging(true);
        atomikosProperties0.setLogBaseName("{}");
        atomikosProperties0.setLogBaseName("tmlog");
        atomikosProperties0.setSerialJtaTransactions(true);
        java.lang.String str18 = atomikosProperties0.getLogBaseName();
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "tmlog" + "'", str18, "tmlog");
    }

    @Test
    public void test5345() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test5345");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration3 = properties0.elements();
        boolean boolean4 = properties0.isEmpty();
        java.util.Set<java.lang.Object> objSet5 = properties0.keySet();
        boolean boolean6 = properties0.isEmpty();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet7 = properties0.entrySet();
        java.util.Properties properties8 = new java.util.Properties();
        java.lang.Object obj10 = properties8.remove((java.lang.Object) 0.0d);
        boolean boolean11 = properties8.isEmpty();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties12 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        boolean boolean13 = properties8.containsValue((java.lang.Object) atomikosProperties12);
        java.util.Properties properties14 = new java.util.Properties();
        java.lang.Object obj16 = properties14.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration17 = properties14.elements();
        int int18 = properties14.size();
        java.util.Properties properties19 = new java.util.Properties(properties14);
        java.util.Set<java.lang.String> strSet20 = properties14.stringPropertyNames();
        java.util.Set<java.lang.String> strSet21 = properties14.stringPropertyNames();
        java.lang.Object obj22 = properties0.getOrDefault((java.lang.Object) properties8, (java.lang.Object) properties14);
        java.util.Properties properties23 = new java.util.Properties();
        java.util.Collection<java.lang.Object> objCollection24 = properties23.values();
        java.util.Collection<java.lang.Object> objCollection25 = properties23.values();
        boolean boolean26 = properties23.isEmpty();
        properties0.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties23);
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet28 = properties0.entrySet();
        java.util.Enumeration<?> wildcardEnumeration29 = properties0.propertyNames();
        java.io.OutputStream outputStream30 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties0.store(outputStream30, "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=false, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.max_actives=2, com.atomikos.icatch.log_base_name=tmlog}");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(objEnumeration3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(objSet5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(objEntrySet7);
        org.junit.Assert.assertNull(obj10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNull(obj16);
        org.junit.Assert.assertNotNull(objEnumeration17);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 0 + "'", int18 == 0);
        org.junit.Assert.assertNotNull(strSet20);
        org.junit.Assert.assertNotNull(strSet21);
        org.junit.Assert.assertNotNull(obj22);
        org.junit.Assert.assertEquals(obj22.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj22), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj22), "{}");
        org.junit.Assert.assertNotNull(objCollection24);
        org.junit.Assert.assertNotNull(objCollection25);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertNotNull(objEntrySet28);
        org.junit.Assert.assertNotNull(wildcardEnumeration29);
    }

    @Test
    public void test5346() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test5346");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setSerialJtaTransactions(false);
        atomikosProperties0.setThreadedTwoPhaseCommit(true);
        atomikosProperties0.setMaxTimeout((long) '#');
        boolean boolean7 = atomikosProperties0.isEnableLogging();
        atomikosProperties0.setCheckpointInterval((long) (byte) -1);
        atomikosProperties0.setMaxActives((int) (byte) 100);
        atomikosProperties0.setForceShutdownOnVmExit(false);
        boolean boolean14 = atomikosProperties0.isThreadedTwoPhaseCommit();
        boolean boolean15 = atomikosProperties0.isForceShutdownOnVmExit();
        atomikosProperties0.setCheckpointInterval((long) (byte) 100);
        atomikosProperties0.setEnableLogging(true);
        atomikosProperties0.setSerialJtaTransactions(true);
        atomikosProperties0.setEnableLogging(false);
        atomikosProperties0.setLogBaseName("{hi!=[], {}={}}");
        boolean boolean26 = atomikosProperties0.isEnableLogging();
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
    }

    @Test
    public void test5347() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test5347");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setSerialJtaTransactions(false);
        boolean boolean3 = atomikosProperties0.isSerialJtaTransactions();
        java.lang.String str4 = atomikosProperties0.getService();
        atomikosProperties0.setEnableLogging(false);
        java.util.Properties properties7 = atomikosProperties0.asProperties();
        java.lang.String str9 = properties7.getProperty("{com.atomikos.icatch.enable_logging=false, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=1, com.atomikos.icatch.serial_jta_transactions=false, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
        java.lang.String str11 = properties7.getProperty("");
        java.lang.Object obj13 = properties7.get((java.lang.Object) "{=hi!}");
        properties7.clear();
        java.io.OutputStream outputStream15 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties7.store(outputStream15, "{[]=0.0}");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertNotNull(properties7);
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertNull(obj13);
    }

    @Test
    public void test5348() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test5348");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration3 = properties0.elements();
        boolean boolean4 = properties0.isEmpty();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet5 = properties0.entrySet();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties7 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties7.setSerialJtaTransactions(false);
        atomikosProperties7.setThreadedTwoPhaseCommit(true);
        atomikosProperties7.setMaxTimeout((long) '#');
        boolean boolean14 = atomikosProperties7.isForceShutdownOnVmExit();
        java.lang.Object obj15 = properties0.put((java.lang.Object) (short) 1, (java.lang.Object) atomikosProperties7);
        atomikosProperties7.setForceShutdownOnVmExit(true);
        java.util.Properties properties18 = atomikosProperties7.asProperties();
        java.util.Collection<java.lang.Object> objCollection19 = properties18.values();
        java.util.Collection<java.lang.Object> objCollection20 = properties18.values();
        java.util.Properties properties21 = new java.util.Properties();
        java.lang.Object obj23 = properties21.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration24 = properties21.elements();
        java.util.Enumeration<java.lang.Object> objEnumeration25 = properties21.elements();
        int int26 = properties21.size();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties27 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties27.setSerialJtaTransactions(false);
        atomikosProperties27.setThreadedTwoPhaseCommit(true);
        atomikosProperties27.setMaxTimeout((long) '#');
        boolean boolean34 = atomikosProperties27.isEnableLogging();
        atomikosProperties27.setForceShutdownOnVmExit(true);
        boolean boolean37 = atomikosProperties27.isThreadedTwoPhaseCommit();
        atomikosProperties27.setLogBaseName("{tmlog=}");
        boolean boolean40 = properties21.containsKey((java.lang.Object) "{tmlog=}");
        boolean boolean41 = properties21.isEmpty();
        boolean boolean42 = properties18.containsValue((java.lang.Object) properties21);
        boolean boolean44 = properties18.containsKey((java.lang.Object) "{tmlog=}");
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(objEnumeration3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(objEntrySet5);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNull(obj15);
        org.junit.Assert.assertNotNull(properties18);
        org.junit.Assert.assertNotNull(objCollection19);
        org.junit.Assert.assertNotNull(objCollection20);
        org.junit.Assert.assertNull(obj23);
        org.junit.Assert.assertNotNull(objEnumeration24);
        org.junit.Assert.assertNotNull(objEnumeration25);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 0 + "'", int26 == 0);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
    }

    @Test
    public void test5349() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test5349");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Properties properties2 = new java.util.Properties();
        java.lang.Object obj4 = properties2.remove((java.lang.Object) 0.0d);
        boolean boolean6 = properties2.containsValue((java.lang.Object) "hi!");
        java.lang.String str8 = properties2.getProperty("hi!");
        java.util.Enumeration<?> wildcardEnumeration9 = properties2.propertyNames();
        java.lang.String str11 = properties2.getProperty("{{}={}}");
        java.lang.String str12 = properties2.toString();
        java.util.Properties properties13 = new java.util.Properties();
        java.lang.Object obj15 = properties13.remove((java.lang.Object) 0.0d);
        boolean boolean16 = properties13.isEmpty();
        java.util.Enumeration<java.lang.Object> objEnumeration17 = properties13.elements();
        java.util.Enumeration<java.lang.Object> objEnumeration18 = properties13.elements();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties19 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties19.setSerialJtaTransactions(false);
        atomikosProperties19.setThreadedTwoPhaseCommit(true);
        atomikosProperties19.setMaxTimeout((long) '#');
        boolean boolean26 = atomikosProperties19.isForceShutdownOnVmExit();
        int int27 = atomikosProperties19.getMaxActives();
        java.lang.Object obj28 = properties13.remove((java.lang.Object) int27);
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet29 = properties13.entrySet();
        java.util.Properties properties30 = new java.util.Properties();
        java.lang.Object obj32 = properties30.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet33 = properties30.stringPropertyNames();
        java.util.Properties properties34 = new java.util.Properties();
        java.util.Properties properties35 = new java.util.Properties();
        java.lang.Object obj37 = properties35.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet38 = properties35.stringPropertyNames();
        boolean boolean39 = properties34.containsValue((java.lang.Object) properties35);
        java.util.Collection<java.lang.Object> objCollection40 = properties34.values();
        java.util.Enumeration<?> wildcardEnumeration41 = properties34.propertyNames();
        java.lang.Object obj43 = properties30.put((java.lang.Object) wildcardEnumeration41, (java.lang.Object) 10.0d);
        java.lang.Object obj44 = properties2.put((java.lang.Object) objEntrySet29, (java.lang.Object) properties30);
        java.util.Properties properties45 = new java.util.Properties();
        java.util.Collection<java.lang.Object> objCollection46 = properties45.values();
        java.util.Enumeration<java.lang.Object> objEnumeration47 = properties45.keys();
        properties45.clear();
        java.util.Enumeration<java.lang.Object> objEnumeration49 = properties45.keys();
        boolean boolean50 = properties30.containsValue((java.lang.Object) objEnumeration49);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties51 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties51.setSerialJtaTransactions(false);
        boolean boolean54 = atomikosProperties51.isSerialJtaTransactions();
        java.util.Properties properties55 = atomikosProperties51.asProperties();
        java.lang.Object obj58 = properties55.setProperty("hi!", "");
        java.util.Enumeration<java.lang.Object> objEnumeration59 = properties55.elements();
        java.util.Properties properties60 = new java.util.Properties();
        java.util.Properties properties61 = new java.util.Properties();
        java.lang.Object obj63 = properties61.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet64 = properties61.stringPropertyNames();
        boolean boolean65 = properties60.containsValue((java.lang.Object) properties61);
        java.util.Collection<java.lang.Object> objCollection66 = properties60.values();
        java.util.Properties properties68 = new java.util.Properties();
        java.lang.Object obj70 = properties68.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration71 = properties68.elements();
        boolean boolean72 = properties68.isEmpty();
        java.util.Set<java.lang.Object> objSet73 = properties68.keySet();
        java.lang.Object obj74 = properties60.putIfAbsent((java.lang.Object) "hi!", (java.lang.Object) objSet73);
        java.util.Set<java.lang.Object> objSet75 = properties60.keySet();
        java.util.Set<java.lang.Object> objSet76 = properties60.keySet();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties77 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties77.setSerialJtaTransactions(false);
        atomikosProperties77.setThreadedTwoPhaseCommit(true);
        java.lang.Object obj82 = properties55.putIfAbsent((java.lang.Object) objSet76, (java.lang.Object) atomikosProperties77);
        java.lang.Object obj83 = properties1.put((java.lang.Object) properties30, (java.lang.Object) objSet76);
        java.lang.String str84 = properties1.toString();
        org.junit.Assert.assertNull(obj4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNotNull(wildcardEnumeration9);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "{}" + "'", str12, "{}");
        org.junit.Assert.assertNull(obj15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(objEnumeration17);
        org.junit.Assert.assertNotNull(objEnumeration18);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 50 + "'", int27 == 50);
        org.junit.Assert.assertNull(obj28);
        org.junit.Assert.assertNotNull(objEntrySet29);
        org.junit.Assert.assertNull(obj32);
        org.junit.Assert.assertNotNull(strSet33);
        org.junit.Assert.assertNull(obj37);
        org.junit.Assert.assertNotNull(strSet38);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(objCollection40);
        org.junit.Assert.assertNotNull(wildcardEnumeration41);
        org.junit.Assert.assertNull(obj43);
        org.junit.Assert.assertNull(obj44);
        org.junit.Assert.assertNotNull(objCollection46);
        org.junit.Assert.assertNotNull(objEnumeration47);
        org.junit.Assert.assertNotNull(objEnumeration49);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertNotNull(properties55);
        org.junit.Assert.assertNull(obj58);
        org.junit.Assert.assertNotNull(objEnumeration59);
        org.junit.Assert.assertNull(obj63);
        org.junit.Assert.assertNotNull(strSet64);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertNotNull(objCollection66);
        org.junit.Assert.assertNull(obj70);
        org.junit.Assert.assertNotNull(objEnumeration71);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + true + "'", boolean72 == true);
        org.junit.Assert.assertNotNull(objSet73);
        org.junit.Assert.assertNull(obj74);
        org.junit.Assert.assertNotNull(objSet75);
        org.junit.Assert.assertNotNull(objSet76);
        org.junit.Assert.assertNull(obj82);
        org.junit.Assert.assertNull(obj83);
    }

    @Test
    public void test5350() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test5350");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setSerialJtaTransactions(false);
        atomikosProperties0.setThreadedTwoPhaseCommit(true);
        atomikosProperties0.setMaxTimeout((long) '#');
        boolean boolean7 = atomikosProperties0.isEnableLogging();
        atomikosProperties0.setCheckpointInterval((long) (byte) -1);
        atomikosProperties0.setEnableLogging(true);
        java.lang.String str12 = atomikosProperties0.getTransactionManagerUniqueName();
        atomikosProperties0.setCheckpointInterval((long) (byte) -1);
        java.lang.String str15 = atomikosProperties0.getService();
        java.lang.String str16 = atomikosProperties0.getLogBaseName();
        atomikosProperties0.setCheckpointInterval(0L);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNull(str15);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "tmlog" + "'", str16, "tmlog");
    }

    @Test
    public void test5351() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test5351");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration3 = properties0.elements();
        boolean boolean4 = properties0.isEmpty();
        java.util.Set<java.lang.Object> objSet5 = properties0.keySet();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties6 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties6.setSerialJtaTransactions(false);
        atomikosProperties6.setThreadedTwoPhaseCommit(true);
        atomikosProperties6.setThreadedTwoPhaseCommit(true);
        java.util.Properties properties13 = atomikosProperties6.asProperties();
        int int14 = atomikosProperties6.getMaxActives();
        java.util.Properties properties15 = new java.util.Properties();
        java.lang.Object obj17 = properties15.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration18 = properties15.elements();
        boolean boolean19 = properties15.isEmpty();
        java.util.Set<java.lang.Object> objSet20 = properties15.keySet();
        boolean boolean22 = properties15.containsKey((java.lang.Object) (-1.0f));
        java.lang.Object obj23 = properties0.put((java.lang.Object) atomikosProperties6, (java.lang.Object) properties15);
        long long24 = atomikosProperties6.getDefaultJtaTimeout();
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(objEnumeration3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(objSet5);
        org.junit.Assert.assertNotNull(properties13);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 50 + "'", int14 == 50);
        org.junit.Assert.assertNull(obj17);
        org.junit.Assert.assertNotNull(objEnumeration18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(objSet20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNull(obj23);
        org.junit.Assert.assertTrue("'" + long24 + "' != '" + 10000L + "'", long24 == 10000L);
    }

    @Test
    public void test5352() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test5352");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        boolean boolean4 = properties0.containsValue((java.lang.Object) "hi!");
        java.lang.String str6 = properties0.getProperty("hi!");
        java.util.Enumeration<?> wildcardEnumeration7 = properties0.propertyNames();
        java.lang.String str9 = properties0.getProperty("{{}={}}");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties10 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties10.setSerialJtaTransactions(false);
        boolean boolean13 = atomikosProperties10.isSerialJtaTransactions();
        java.lang.String str14 = atomikosProperties10.getService();
        boolean boolean15 = atomikosProperties10.isEnableLogging();
        java.util.Properties properties16 = atomikosProperties10.asProperties();
        atomikosProperties10.setForceShutdownOnVmExit(true);
        atomikosProperties10.setMaxActives((int) (short) -1);
        atomikosProperties10.setMaxTimeout((long) ' ');
        atomikosProperties10.setEnableLogging(false);
        atomikosProperties10.setService("{{}={}}");
        java.util.Properties properties27 = new java.util.Properties();
        java.lang.Object obj29 = properties27.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration30 = properties27.elements();
        boolean boolean31 = properties27.isEmpty();
        java.util.Set<java.lang.Object> objSet32 = properties27.keySet();
        boolean boolean33 = properties27.isEmpty();
        java.util.Properties properties34 = new java.util.Properties();
        java.util.Collection<java.lang.Object> objCollection35 = properties34.values();
        java.util.Enumeration<java.lang.Object> objEnumeration36 = properties34.keys();
        java.lang.Object obj37 = properties27.remove((java.lang.Object) properties34);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties38 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties38.setSerialJtaTransactions(false);
        boolean boolean41 = atomikosProperties38.isSerialJtaTransactions();
        atomikosProperties38.setTransactionManagerUniqueName("hi!");
        java.lang.String str44 = atomikosProperties38.getLogBaseName();
        java.lang.String str45 = atomikosProperties38.getLogBaseName();
        boolean boolean46 = atomikosProperties38.isForceShutdownOnVmExit();
        long long47 = atomikosProperties38.getMaxTimeout();
        java.lang.String str48 = atomikosProperties38.getTransactionManagerUniqueName();
        java.lang.String str49 = atomikosProperties38.getLogBaseName();
        boolean boolean50 = atomikosProperties38.isThreadedTwoPhaseCommit();
        atomikosProperties38.setThreadedTwoPhaseCommit(false);
        boolean boolean53 = properties0.replace((java.lang.Object) atomikosProperties10, (java.lang.Object) properties27, (java.lang.Object) atomikosProperties38);
        java.lang.Object obj54 = null;
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties55 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties55.setSerialJtaTransactions(false);
        atomikosProperties55.setThreadedTwoPhaseCommit(true);
        atomikosProperties55.setMaxTimeout((long) '#');
        boolean boolean62 = atomikosProperties55.isForceShutdownOnVmExit();
        atomikosProperties55.setCheckpointInterval((long) '4');
        atomikosProperties55.setMaxTimeout((long) (short) -1);
        atomikosProperties55.setMaxActives(35);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj69 = properties0.put(obj54, (java.lang.Object) 35);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertNotNull(wildcardEnumeration7);
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(properties16);
        org.junit.Assert.assertNull(obj29);
        org.junit.Assert.assertNotNull(objEnumeration30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNotNull(objSet32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNotNull(objCollection35);
        org.junit.Assert.assertNotNull(objEnumeration36);
        org.junit.Assert.assertNull(obj37);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "tmlog" + "'", str44, "tmlog");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "tmlog" + "'", str45, "tmlog");
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertTrue("'" + long47 + "' != '" + 300000L + "'", long47 == 300000L);
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "hi!" + "'", str48, "hi!");
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "tmlog" + "'", str49, "tmlog");
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
    }

    @Test
    public void test5353() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test5353");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet3 = properties0.stringPropertyNames();
        java.util.Properties properties4 = new java.util.Properties();
        java.util.Properties properties5 = new java.util.Properties();
        java.lang.Object obj7 = properties5.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet8 = properties5.stringPropertyNames();
        boolean boolean9 = properties4.containsValue((java.lang.Object) properties5);
        java.util.Collection<java.lang.Object> objCollection10 = properties4.values();
        java.util.Enumeration<?> wildcardEnumeration11 = properties4.propertyNames();
        java.lang.Object obj13 = properties0.put((java.lang.Object) wildcardEnumeration11, (java.lang.Object) 10.0d);
        java.util.Properties properties14 = new java.util.Properties();
        java.lang.Object obj16 = properties14.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration17 = properties14.elements();
        boolean boolean18 = properties14.isEmpty();
        java.util.Set<java.lang.Object> objSet19 = properties14.keySet();
        boolean boolean20 = properties14.isEmpty();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet21 = properties14.entrySet();
        java.util.Properties properties22 = new java.util.Properties();
        java.lang.Object obj24 = properties22.remove((java.lang.Object) 0.0d);
        boolean boolean25 = properties22.isEmpty();
        java.lang.Object obj28 = properties22.setProperty("", "hi!");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties29 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties29.setSerialJtaTransactions(false);
        boolean boolean32 = properties14.remove((java.lang.Object) properties22, (java.lang.Object) atomikosProperties29);
        java.util.Properties properties33 = new java.util.Properties(properties22);
        int int34 = properties33.size();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties36 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties36.setSerialJtaTransactions(false);
        boolean boolean39 = atomikosProperties36.isSerialJtaTransactions();
        java.lang.String str40 = atomikosProperties36.getService();
        boolean boolean41 = atomikosProperties36.isEnableLogging();
        java.lang.String str42 = atomikosProperties36.getTransactionManagerUniqueName();
        boolean boolean43 = properties33.remove((java.lang.Object) (byte) 1, (java.lang.Object) atomikosProperties36);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties44 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties44.setSerialJtaTransactions(false);
        atomikosProperties44.setThreadedTwoPhaseCommit(true);
        atomikosProperties44.setEnableLogging(false);
        boolean boolean51 = atomikosProperties44.isSerialJtaTransactions();
        int int52 = atomikosProperties44.getMaxActives();
        boolean boolean53 = atomikosProperties44.isSerialJtaTransactions();
        boolean boolean54 = properties0.remove((java.lang.Object) properties33, (java.lang.Object) boolean53);
        java.util.Properties properties55 = new java.util.Properties();
        java.lang.Object obj57 = properties55.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration58 = properties55.elements();
        boolean boolean59 = properties55.isEmpty();
        java.util.Set<java.lang.Object> objSet60 = properties55.keySet();
        boolean boolean61 = properties55.isEmpty();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet62 = properties55.entrySet();
        java.util.Properties properties63 = new java.util.Properties();
        java.lang.Object obj65 = properties63.remove((java.lang.Object) 0.0d);
        boolean boolean66 = properties63.isEmpty();
        java.lang.Object obj69 = properties63.setProperty("", "hi!");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties70 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties70.setSerialJtaTransactions(false);
        boolean boolean73 = properties55.remove((java.lang.Object) properties63, (java.lang.Object) atomikosProperties70);
        java.util.Properties properties74 = new java.util.Properties();
        java.lang.Object obj76 = properties74.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration77 = properties74.elements();
        int int78 = properties74.size();
        java.util.Properties properties79 = new java.util.Properties(properties74);
        java.util.Set<java.lang.String> strSet80 = properties74.stringPropertyNames();
        java.util.Set<java.lang.String> strSet81 = properties74.stringPropertyNames();
        java.lang.Object obj82 = properties0.put((java.lang.Object) properties63, (java.lang.Object) properties74);
        java.util.Properties properties83 = new java.util.Properties();
        java.lang.Object obj85 = properties83.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet86 = properties83.stringPropertyNames();
        java.lang.String str87 = properties83.toString();
        java.util.Properties properties88 = new java.util.Properties();
        java.lang.Object obj90 = properties88.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration91 = properties88.elements();
        boolean boolean92 = properties88.isEmpty();
        java.lang.Object obj95 = properties88.setProperty("tmlog", "");
        properties83.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties88);
        boolean boolean97 = properties63.contains((java.lang.Object) properties83);
        properties83.clear();
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(strSet3);
        org.junit.Assert.assertNull(obj7);
        org.junit.Assert.assertNotNull(strSet8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(objCollection10);
        org.junit.Assert.assertNotNull(wildcardEnumeration11);
        org.junit.Assert.assertNull(obj13);
        org.junit.Assert.assertNull(obj16);
        org.junit.Assert.assertNotNull(objEnumeration17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(objSet19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNotNull(objEntrySet21);
        org.junit.Assert.assertNull(obj24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNull(obj28);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 0 + "'", int34 == 0);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNull(str40);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertNull(str42);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + 50 + "'", int52 == 50);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertNull(obj57);
        org.junit.Assert.assertNotNull(objEnumeration58);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertNotNull(objSet60);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertNotNull(objEntrySet62);
        org.junit.Assert.assertNull(obj65);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66 == true);
        org.junit.Assert.assertNull(obj69);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertNull(obj76);
        org.junit.Assert.assertNotNull(objEnumeration77);
        org.junit.Assert.assertTrue("'" + int78 + "' != '" + 0 + "'", int78 == 0);
        org.junit.Assert.assertNotNull(strSet80);
        org.junit.Assert.assertNotNull(strSet81);
        org.junit.Assert.assertNull(obj82);
        org.junit.Assert.assertNull(obj85);
        org.junit.Assert.assertNotNull(strSet86);
        org.junit.Assert.assertEquals("'" + str87 + "' != '" + "{}" + "'", str87, "{}");
        org.junit.Assert.assertNull(obj90);
        org.junit.Assert.assertNotNull(objEnumeration91);
        org.junit.Assert.assertTrue("'" + boolean92 + "' != '" + true + "'", boolean92 == true);
        org.junit.Assert.assertNull(obj95);
        org.junit.Assert.assertTrue("'" + boolean97 + "' != '" + false + "'", boolean97 == false);
    }

    @Test
    public void test5354() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test5354");
        java.util.Properties properties0 = new java.util.Properties();
        java.util.Collection<java.lang.Object> objCollection1 = properties0.values();
        java.util.Enumeration<java.lang.Object> objEnumeration2 = properties0.keys();
        java.lang.Object obj5 = properties0.setProperty("{}", "{}");
        java.util.Set<java.lang.String> strSet6 = properties0.stringPropertyNames();
        java.util.Properties properties7 = new java.util.Properties();
        boolean boolean9 = properties7.contains((java.lang.Object) 100.0d);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties10 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties10.setSerialJtaTransactions(false);
        atomikosProperties10.setThreadedTwoPhaseCommit(true);
        atomikosProperties10.setSerialJtaTransactions(false);
        java.lang.String str17 = atomikosProperties10.getService();
        boolean boolean18 = properties7.containsKey((java.lang.Object) atomikosProperties10);
        boolean boolean19 = properties0.containsKey((java.lang.Object) properties7);
        java.lang.String str21 = properties0.getProperty("");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties22 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties22.setSerialJtaTransactions(false);
        atomikosProperties22.setThreadedTwoPhaseCommit(true);
        atomikosProperties22.setMaxTimeout((long) '#');
        boolean boolean29 = atomikosProperties22.isEnableLogging();
        atomikosProperties22.setCheckpointInterval((long) (byte) -1);
        atomikosProperties22.setMaxActives((int) (byte) 100);
        atomikosProperties22.setForceShutdownOnVmExit(false);
        boolean boolean36 = properties0.contains((java.lang.Object) false);
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet37 = properties0.entrySet();
        java.lang.Object obj40 = properties0.setProperty("hi!", "{hi!=[]}");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties41 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties41.setSerialJtaTransactions(false);
        boolean boolean44 = atomikosProperties41.isSerialJtaTransactions();
        atomikosProperties41.setTransactionManagerUniqueName("tmlog");
        java.util.Properties properties47 = atomikosProperties41.asProperties();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties48 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties48.setSerialJtaTransactions(false);
        boolean boolean51 = atomikosProperties48.isSerialJtaTransactions();
        atomikosProperties48.setTransactionManagerUniqueName("hi!");
        boolean boolean54 = atomikosProperties48.isEnableLogging();
        java.lang.String str55 = atomikosProperties48.getTransactionManagerUniqueName();
        atomikosProperties48.setCheckpointInterval(1L);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties58 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties58.setSerialJtaTransactions(false);
        atomikosProperties58.setThreadedTwoPhaseCommit(true);
        atomikosProperties58.setThreadedTwoPhaseCommit(true);
        java.util.Properties properties65 = atomikosProperties58.asProperties();
        int int66 = atomikosProperties58.getMaxActives();
        atomikosProperties58.setService("hi!");
        long long69 = atomikosProperties58.getMaxTimeout();
        atomikosProperties58.setTransactionManagerUniqueName("hi!");
        java.util.Properties properties72 = atomikosProperties58.asProperties();
        java.lang.Object obj73 = properties47.getOrDefault((java.lang.Object) atomikosProperties48, (java.lang.Object) properties72);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties74 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties74.setSerialJtaTransactions(false);
        atomikosProperties74.setThreadedTwoPhaseCommit(true);
        atomikosProperties74.setMaxTimeout((long) '#');
        java.lang.String str81 = atomikosProperties74.getLogBaseDir();
        atomikosProperties74.setForceShutdownOnVmExit(false);
        long long84 = atomikosProperties74.getMaxTimeout();
        atomikosProperties74.setLogBaseName("tmlog");
        atomikosProperties74.setService("{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=false, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=true, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
        boolean boolean89 = properties0.remove((java.lang.Object) atomikosProperties48, (java.lang.Object) atomikosProperties74);
        atomikosProperties48.setDefaultJtaTimeout(0L);
        boolean boolean92 = atomikosProperties48.isThreadedTwoPhaseCommit();
        long long93 = atomikosProperties48.getCheckpointInterval();
        org.junit.Assert.assertNotNull(objCollection1);
        org.junit.Assert.assertNotNull(objEnumeration2);
        org.junit.Assert.assertNull(obj5);
        org.junit.Assert.assertNotNull(strSet6);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNull(str17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNull(str21);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(objEntrySet37);
        org.junit.Assert.assertNull(obj40);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(properties47);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "hi!" + "'", str55, "hi!");
        org.junit.Assert.assertNotNull(properties65);
        org.junit.Assert.assertTrue("'" + int66 + "' != '" + 50 + "'", int66 == 50);
        org.junit.Assert.assertTrue("'" + long69 + "' != '" + 300000L + "'", long69 == 300000L);
        org.junit.Assert.assertNotNull(properties72);
        org.junit.Assert.assertNotNull(obj73);
// flaky:         org.junit.Assert.assertEquals(obj73.toString(), "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=false, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.service=hi!, com.atomikos.icatch.threaded_2pc=true, com.atomikos.icatch.tm_unique_name=hi!, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
// flaky:         org.junit.Assert.assertEquals(java.lang.String.valueOf(obj73), "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=false, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.service=hi!, com.atomikos.icatch.threaded_2pc=true, com.atomikos.icatch.tm_unique_name=hi!, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
// flaky:         org.junit.Assert.assertEquals(java.util.Objects.toString(obj73), "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=false, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.service=hi!, com.atomikos.icatch.threaded_2pc=true, com.atomikos.icatch.tm_unique_name=hi!, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
        org.junit.Assert.assertNull(str81);
        org.junit.Assert.assertTrue("'" + long84 + "' != '" + 35L + "'", long84 == 35L);
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + false + "'", boolean89 == false);
        org.junit.Assert.assertTrue("'" + boolean92 + "' != '" + false + "'", boolean92 == false);
        org.junit.Assert.assertTrue("'" + long93 + "' != '" + 1L + "'", long93 == 1L);
    }

    @Test
    public void test5355() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test5355");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration3 = properties0.elements();
        int int4 = properties0.size();
        java.util.Properties properties5 = new java.util.Properties(properties0);
        java.util.Set<java.lang.String> strSet6 = properties0.stringPropertyNames();
        java.util.Set<java.lang.String> strSet7 = properties0.stringPropertyNames();
        java.util.Properties properties8 = new java.util.Properties();
        java.lang.Object obj10 = properties8.remove((java.lang.Object) 0.0d);
        boolean boolean11 = properties8.isEmpty();
        java.util.Enumeration<java.lang.Object> objEnumeration12 = properties8.elements();
        java.util.Properties properties13 = new java.util.Properties();
        java.lang.Object obj15 = properties13.remove((java.lang.Object) 0.0d);
        boolean boolean16 = properties13.isEmpty();
        java.util.Enumeration<java.lang.Object> objEnumeration17 = properties13.elements();
        java.util.Enumeration<java.lang.Object> objEnumeration18 = properties13.elements();
        java.lang.Object obj19 = properties0.replace((java.lang.Object) objEnumeration12, (java.lang.Object) objEnumeration18);
        java.util.Enumeration<java.lang.Object> objEnumeration20 = properties0.keys();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties21 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties21.setSerialJtaTransactions(false);
        boolean boolean24 = atomikosProperties21.isSerialJtaTransactions();
        java.lang.String str25 = atomikosProperties21.getService();
        boolean boolean26 = atomikosProperties21.isEnableLogging();
        java.lang.String str27 = atomikosProperties21.getLogBaseName();
        boolean boolean28 = properties0.containsKey((java.lang.Object) atomikosProperties21);
        long long29 = atomikosProperties21.getDefaultJtaTimeout();
        java.util.Properties properties30 = atomikosProperties21.asProperties();
        atomikosProperties21.setCheckpointInterval((long) (byte) 10);
        java.lang.String str33 = atomikosProperties21.getLogBaseName();
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(objEnumeration3);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNotNull(strSet6);
        org.junit.Assert.assertNotNull(strSet7);
        org.junit.Assert.assertNull(obj10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNotNull(objEnumeration12);
        org.junit.Assert.assertNull(obj15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(objEnumeration17);
        org.junit.Assert.assertNotNull(objEnumeration18);
        org.junit.Assert.assertNull(obj19);
        org.junit.Assert.assertNotNull(objEnumeration20);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNull(str25);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "tmlog" + "'", str27, "tmlog");
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + long29 + "' != '" + 10000L + "'", long29 == 10000L);
        org.junit.Assert.assertNotNull(properties30);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "tmlog" + "'", str33, "tmlog");
    }

    @Test
    public void test5356() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test5356");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration3 = properties0.elements();
        boolean boolean4 = properties0.isEmpty();
        java.util.Set<java.lang.Object> objSet5 = properties0.keySet();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties6 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties6.setSerialJtaTransactions(false);
        atomikosProperties6.setThreadedTwoPhaseCommit(true);
        atomikosProperties6.setThreadedTwoPhaseCommit(true);
        java.util.Properties properties13 = atomikosProperties6.asProperties();
        int int14 = atomikosProperties6.getMaxActives();
        java.util.Properties properties15 = new java.util.Properties();
        java.lang.Object obj17 = properties15.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration18 = properties15.elements();
        boolean boolean19 = properties15.isEmpty();
        java.util.Set<java.lang.Object> objSet20 = properties15.keySet();
        boolean boolean22 = properties15.containsKey((java.lang.Object) (-1.0f));
        java.lang.Object obj23 = properties0.put((java.lang.Object) atomikosProperties6, (java.lang.Object) properties15);
        java.util.Properties properties24 = new java.util.Properties();
        java.lang.Object obj26 = properties24.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet27 = properties24.stringPropertyNames();
        java.util.Properties properties28 = new java.util.Properties();
        java.lang.Object obj30 = properties28.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet31 = properties28.stringPropertyNames();
        java.lang.Object obj33 = properties24.put((java.lang.Object) strSet31, (java.lang.Object) 0.0d);
        java.util.Properties properties34 = new java.util.Properties();
        java.util.Properties properties35 = new java.util.Properties();
        java.lang.Object obj37 = properties35.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet38 = properties35.stringPropertyNames();
        boolean boolean39 = properties34.containsValue((java.lang.Object) properties35);
        java.util.Collection<java.lang.Object> objCollection40 = properties34.values();
        java.util.Properties properties42 = new java.util.Properties();
        java.lang.Object obj44 = properties42.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration45 = properties42.elements();
        boolean boolean46 = properties42.isEmpty();
        java.util.Set<java.lang.Object> objSet47 = properties42.keySet();
        java.lang.Object obj48 = properties34.putIfAbsent((java.lang.Object) "hi!", (java.lang.Object) objSet47);
        java.util.Set<java.lang.Object> objSet49 = properties34.keySet();
        java.lang.Object obj51 = properties24.putIfAbsent((java.lang.Object) properties34, (java.lang.Object) (short) 10);
        java.util.Enumeration<?> wildcardEnumeration52 = properties34.propertyNames();
        properties0.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties34);
        java.util.Collection<java.lang.Object> objCollection54 = properties0.values();
        java.util.Properties properties55 = new java.util.Properties();
        java.lang.Object obj57 = properties55.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration58 = properties55.elements();
        boolean boolean59 = properties55.isEmpty();
        java.util.Set<java.lang.Object> objSet60 = properties55.keySet();
        java.util.Enumeration<java.lang.Object> objEnumeration61 = properties55.keys();
        java.lang.String str63 = properties55.getProperty("hi!");
        java.lang.String str65 = properties55.getProperty("");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties66 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties66.setSerialJtaTransactions(false);
        atomikosProperties66.setThreadedTwoPhaseCommit(true);
        atomikosProperties66.setEnableLogging(false);
        boolean boolean73 = properties55.containsKey((java.lang.Object) atomikosProperties66);
        java.lang.Object obj76 = properties55.setProperty("hi!", "");
        properties0.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties55);
        java.util.Enumeration<?> wildcardEnumeration78 = properties55.propertyNames();
        java.io.PrintWriter printWriter79 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties55.list(printWriter79);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(objEnumeration3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(objSet5);
        org.junit.Assert.assertNotNull(properties13);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 50 + "'", int14 == 50);
        org.junit.Assert.assertNull(obj17);
        org.junit.Assert.assertNotNull(objEnumeration18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(objSet20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNull(obj23);
        org.junit.Assert.assertNull(obj26);
        org.junit.Assert.assertNotNull(strSet27);
        org.junit.Assert.assertNull(obj30);
        org.junit.Assert.assertNotNull(strSet31);
        org.junit.Assert.assertNull(obj33);
        org.junit.Assert.assertNull(obj37);
        org.junit.Assert.assertNotNull(strSet38);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(objCollection40);
        org.junit.Assert.assertNull(obj44);
        org.junit.Assert.assertNotNull(objEnumeration45);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertNotNull(objSet47);
        org.junit.Assert.assertNull(obj48);
        org.junit.Assert.assertNotNull(objSet49);
        org.junit.Assert.assertNull(obj51);
        org.junit.Assert.assertNotNull(wildcardEnumeration52);
        org.junit.Assert.assertNotNull(objCollection54);
        org.junit.Assert.assertNull(obj57);
        org.junit.Assert.assertNotNull(objEnumeration58);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertNotNull(objSet60);
        org.junit.Assert.assertNotNull(objEnumeration61);
        org.junit.Assert.assertNull(str63);
        org.junit.Assert.assertNull(str65);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertNull(obj76);
        org.junit.Assert.assertNotNull(wildcardEnumeration78);
    }

    @Test
    public void test5357() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test5357");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration3 = properties0.elements();
        boolean boolean4 = properties0.isEmpty();
        java.util.Set<java.lang.Object> objSet5 = properties0.keySet();
        boolean boolean6 = properties0.isEmpty();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet7 = properties0.entrySet();
        java.util.Properties properties8 = new java.util.Properties();
        java.lang.Object obj10 = properties8.remove((java.lang.Object) 0.0d);
        boolean boolean11 = properties8.isEmpty();
        java.lang.Object obj14 = properties8.setProperty("", "hi!");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties15 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties15.setSerialJtaTransactions(false);
        boolean boolean18 = properties0.remove((java.lang.Object) properties8, (java.lang.Object) atomikosProperties15);
        java.util.Properties properties19 = new java.util.Properties(properties8);
        java.util.Enumeration<java.lang.Object> objEnumeration20 = properties19.elements();
        java.lang.Object obj21 = properties19.clone();
        java.io.OutputStream outputStream22 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties19.save(outputStream22, "{{{}={}}={}}");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(objEnumeration3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(objSet5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(objEntrySet7);
        org.junit.Assert.assertNull(obj10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNull(obj14);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(objEnumeration20);
        org.junit.Assert.assertNotNull(obj21);
        org.junit.Assert.assertEquals(obj21.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj21), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj21), "{}");
    }

    @Test
    public void test5358() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test5358");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet3 = properties0.stringPropertyNames();
        java.lang.String str4 = properties0.toString();
        java.util.Properties properties5 = new java.util.Properties();
        java.lang.Object obj7 = properties5.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration8 = properties5.elements();
        boolean boolean9 = properties5.isEmpty();
        java.lang.Object obj12 = properties5.setProperty("tmlog", "");
        properties0.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties5);
        java.lang.Object obj14 = properties5.clone();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties15 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties15.setSerialJtaTransactions(false);
        atomikosProperties15.setThreadedTwoPhaseCommit(true);
        atomikosProperties15.setMaxTimeout((long) '#');
        boolean boolean22 = atomikosProperties15.isForceShutdownOnVmExit();
        atomikosProperties15.setLogBaseDir("tmlog");
        boolean boolean25 = properties5.equals((java.lang.Object) atomikosProperties15);
        java.util.Properties properties26 = new java.util.Properties();
        java.lang.Object obj28 = properties26.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration29 = properties26.elements();
        boolean boolean30 = properties26.isEmpty();
        java.util.Set<java.lang.Object> objSet31 = properties26.keySet();
        java.util.Enumeration<java.lang.Object> objEnumeration32 = properties26.keys();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet33 = properties26.entrySet();
        java.util.Properties properties34 = new java.util.Properties();
        java.lang.Object obj36 = properties34.remove((java.lang.Object) 0.0d);
        java.util.Properties properties37 = new java.util.Properties();
        java.util.Collection<java.lang.Object> objCollection38 = properties37.values();
        java.util.Enumeration<java.lang.Object> objEnumeration39 = properties37.keys();
        java.util.Properties properties40 = new java.util.Properties();
        java.lang.Object obj42 = properties40.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration43 = properties40.elements();
        boolean boolean44 = properties40.isEmpty();
        java.util.Set<java.lang.Object> objSet45 = properties40.keySet();
        java.util.Enumeration<java.lang.Object> objEnumeration46 = properties40.keys();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet47 = properties40.entrySet();
        java.lang.Object obj48 = properties34.put((java.lang.Object) properties37, (java.lang.Object) properties40);
        java.lang.String str50 = properties37.getProperty("{=hi!}");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties51 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties51.setSerialJtaTransactions(false);
        atomikosProperties51.setThreadedTwoPhaseCommit(true);
        atomikosProperties51.setThreadedTwoPhaseCommit(true);
        long long58 = atomikosProperties51.getMaxTimeout();
        boolean boolean59 = properties37.containsValue((java.lang.Object) atomikosProperties51);
        java.util.Enumeration<java.lang.Object> objEnumeration60 = properties37.elements();
        boolean boolean61 = properties26.contains((java.lang.Object) objEnumeration60);
        java.util.Properties properties62 = new java.util.Properties(properties26);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties63 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties63.setSerialJtaTransactions(false);
        atomikosProperties63.setThreadedTwoPhaseCommit(true);
        atomikosProperties63.setMaxTimeout((long) '#');
        long long70 = atomikosProperties63.getCheckpointInterval();
        atomikosProperties63.setMaxTimeout((long) (byte) 100);
        atomikosProperties63.setThreadedTwoPhaseCommit(false);
        java.lang.String str75 = atomikosProperties63.getLogBaseDir();
        java.lang.String str76 = atomikosProperties63.getLogBaseName();
        java.lang.Object obj77 = properties26.remove((java.lang.Object) atomikosProperties63);
        java.util.Properties properties78 = atomikosProperties63.asProperties();
        boolean boolean79 = properties5.equals((java.lang.Object) properties78);
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(strSet3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "{}" + "'", str4, "{}");
        org.junit.Assert.assertNull(obj7);
        org.junit.Assert.assertNotNull(objEnumeration8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertNull(obj12);
        org.junit.Assert.assertNotNull(obj14);
        org.junit.Assert.assertEquals(obj14.toString(), "{tmlog=}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj14), "{tmlog=}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj14), "{tmlog=}");
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNull(obj28);
        org.junit.Assert.assertNotNull(objEnumeration29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNotNull(objSet31);
        org.junit.Assert.assertNotNull(objEnumeration32);
        org.junit.Assert.assertNotNull(objEntrySet33);
        org.junit.Assert.assertNull(obj36);
        org.junit.Assert.assertNotNull(objCollection38);
        org.junit.Assert.assertNotNull(objEnumeration39);
        org.junit.Assert.assertNull(obj42);
        org.junit.Assert.assertNotNull(objEnumeration43);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertNotNull(objSet45);
        org.junit.Assert.assertNotNull(objEnumeration46);
        org.junit.Assert.assertNotNull(objEntrySet47);
        org.junit.Assert.assertNull(obj48);
        org.junit.Assert.assertNull(str50);
        org.junit.Assert.assertTrue("'" + long58 + "' != '" + 300000L + "'", long58 == 300000L);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertNotNull(objEnumeration60);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertTrue("'" + long70 + "' != '" + 500L + "'", long70 == 500L);
        org.junit.Assert.assertNull(str75);
        org.junit.Assert.assertEquals("'" + str76 + "' != '" + "tmlog" + "'", str76, "tmlog");
        org.junit.Assert.assertNull(obj77);
        org.junit.Assert.assertNotNull(properties78);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + false + "'", boolean79 == false);
    }

    @Test
    public void test5359() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test5359");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setSerialJtaTransactions(false);
        boolean boolean3 = atomikosProperties0.isThreadedTwoPhaseCommit();
        atomikosProperties0.setTransactionManagerUniqueName("hi!");
        long long6 = atomikosProperties0.getCheckpointInterval();
        long long7 = atomikosProperties0.getCheckpointInterval();
        atomikosProperties0.setLogBaseDir("");
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + long6 + "' != '" + 500L + "'", long6 == 500L);
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + 500L + "'", long7 == 500L);
    }

    @Test
    public void test5360() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test5360");
        java.util.Properties properties0 = new java.util.Properties();
        boolean boolean2 = properties0.contains((java.lang.Object) 100.0d);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties3 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties3.setSerialJtaTransactions(false);
        atomikosProperties3.setThreadedTwoPhaseCommit(true);
        atomikosProperties3.setSerialJtaTransactions(false);
        java.lang.String str10 = atomikosProperties3.getService();
        boolean boolean11 = properties0.containsKey((java.lang.Object) atomikosProperties3);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties12 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties12.setSerialJtaTransactions(false);
        atomikosProperties12.setThreadedTwoPhaseCommit(true);
        atomikosProperties12.setMaxTimeout((long) '#');
        boolean boolean19 = atomikosProperties12.isEnableLogging();
        atomikosProperties12.setCheckpointInterval((long) 100);
        atomikosProperties12.setForceShutdownOnVmExit(false);
        boolean boolean24 = properties0.containsValue((java.lang.Object) atomikosProperties12);
        atomikosProperties12.setService("{=hi!}");
        java.util.Properties properties27 = atomikosProperties12.asProperties();
        atomikosProperties12.setSerialJtaTransactions(true);
        long long30 = atomikosProperties12.getMaxTimeout();
        java.lang.String str31 = atomikosProperties12.getService();
        atomikosProperties12.setCheckpointInterval((long) 50);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(properties27);
        org.junit.Assert.assertTrue("'" + long30 + "' != '" + 35L + "'", long30 == 35L);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "{=hi!}" + "'", str31, "{=hi!}");
    }

    @Test
    public void test5361() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test5361");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        boolean boolean3 = properties0.isEmpty();
        java.util.Enumeration<java.lang.Object> objEnumeration4 = properties0.elements();
        java.util.Properties properties5 = new java.util.Properties();
        java.lang.Object obj7 = properties5.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration8 = properties5.elements();
        boolean boolean9 = properties5.isEmpty();
        java.lang.Object obj12 = properties5.setProperty("tmlog", "");
        java.util.Properties properties13 = new java.util.Properties();
        java.lang.Object obj15 = properties13.remove((java.lang.Object) 0.0d);
        java.util.Properties properties16 = new java.util.Properties();
        java.util.Collection<java.lang.Object> objCollection17 = properties16.values();
        java.util.Enumeration<java.lang.Object> objEnumeration18 = properties16.keys();
        java.util.Properties properties19 = new java.util.Properties();
        java.lang.Object obj21 = properties19.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration22 = properties19.elements();
        boolean boolean23 = properties19.isEmpty();
        java.util.Set<java.lang.Object> objSet24 = properties19.keySet();
        java.util.Enumeration<java.lang.Object> objEnumeration25 = properties19.keys();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet26 = properties19.entrySet();
        java.lang.Object obj27 = properties13.put((java.lang.Object) properties16, (java.lang.Object) properties19);
        java.lang.String str29 = properties16.getProperty("{=hi!}");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties30 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties30.setSerialJtaTransactions(false);
        boolean boolean33 = atomikosProperties30.isSerialJtaTransactions();
        java.lang.Object obj34 = properties5.put((java.lang.Object) properties16, (java.lang.Object) boolean33);
        properties0.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties5);
        java.util.Set<java.lang.Object> objSet36 = properties5.keySet();
        java.util.Set<java.lang.Object> objSet37 = properties5.keySet();
        java.util.Properties properties38 = new java.util.Properties();
        java.lang.Object obj40 = properties38.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet41 = properties38.stringPropertyNames();
        java.util.Properties properties42 = new java.util.Properties();
        java.util.Properties properties43 = new java.util.Properties();
        java.lang.Object obj45 = properties43.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet46 = properties43.stringPropertyNames();
        boolean boolean47 = properties42.containsValue((java.lang.Object) properties43);
        java.util.Collection<java.lang.Object> objCollection48 = properties42.values();
        java.util.Enumeration<?> wildcardEnumeration49 = properties42.propertyNames();
        java.lang.Object obj51 = properties38.put((java.lang.Object) wildcardEnumeration49, (java.lang.Object) 10.0d);
        java.util.Set<java.lang.String> strSet52 = properties38.stringPropertyNames();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties53 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties53.setSerialJtaTransactions(false);
        atomikosProperties53.setThreadedTwoPhaseCommit(true);
        atomikosProperties53.setEnableLogging(false);
        boolean boolean60 = atomikosProperties53.isSerialJtaTransactions();
        int int61 = atomikosProperties53.getMaxActives();
        boolean boolean62 = atomikosProperties53.isEnableLogging();
        long long63 = atomikosProperties53.getCheckpointInterval();
        java.util.Properties properties64 = atomikosProperties53.asProperties();
        atomikosProperties53.setSerialJtaTransactions(false);
        atomikosProperties53.setThreadedTwoPhaseCommit(true);
        atomikosProperties53.setMaxActives(100);
        boolean boolean71 = atomikosProperties53.isForceShutdownOnVmExit();
        long long72 = atomikosProperties53.getCheckpointInterval();
        java.lang.Object obj73 = properties5.replace((java.lang.Object) strSet52, (java.lang.Object) atomikosProperties53);
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(objEnumeration4);
        org.junit.Assert.assertNull(obj7);
        org.junit.Assert.assertNotNull(objEnumeration8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertNull(obj12);
        org.junit.Assert.assertNull(obj15);
        org.junit.Assert.assertNotNull(objCollection17);
        org.junit.Assert.assertNotNull(objEnumeration18);
        org.junit.Assert.assertNull(obj21);
        org.junit.Assert.assertNotNull(objEnumeration22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNotNull(objSet24);
        org.junit.Assert.assertNotNull(objEnumeration25);
        org.junit.Assert.assertNotNull(objEntrySet26);
        org.junit.Assert.assertNull(obj27);
        org.junit.Assert.assertNull(str29);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNull(obj34);
        org.junit.Assert.assertNotNull(objSet36);
        org.junit.Assert.assertNotNull(objSet37);
        org.junit.Assert.assertNull(obj40);
        org.junit.Assert.assertNotNull(strSet41);
        org.junit.Assert.assertNull(obj45);
        org.junit.Assert.assertNotNull(strSet46);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNotNull(objCollection48);
        org.junit.Assert.assertNotNull(wildcardEnumeration49);
        org.junit.Assert.assertNull(obj51);
        org.junit.Assert.assertNotNull(strSet52);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertTrue("'" + int61 + "' != '" + 50 + "'", int61 == 50);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertTrue("'" + long63 + "' != '" + 500L + "'", long63 == 500L);
        org.junit.Assert.assertNotNull(properties64);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertTrue("'" + long72 + "' != '" + 500L + "'", long72 == 500L);
        org.junit.Assert.assertNull(obj73);
    }

    @Test
    public void test5362() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test5362");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setSerialJtaTransactions(false);
        atomikosProperties0.setThreadedTwoPhaseCommit(true);
        atomikosProperties0.setEnableLogging(false);
        boolean boolean7 = atomikosProperties0.isSerialJtaTransactions();
        int int8 = atomikosProperties0.getMaxActives();
        atomikosProperties0.setTransactionManagerUniqueName("tmlog");
        int int11 = atomikosProperties0.getMaxActives();
        int int12 = atomikosProperties0.getMaxActives();
        boolean boolean13 = atomikosProperties0.isForceShutdownOnVmExit();
        atomikosProperties0.setService("hi!");
        atomikosProperties0.setEnableLogging(false);
        java.lang.String str18 = atomikosProperties0.getService();
        atomikosProperties0.setEnableLogging(false);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 50 + "'", int8 == 50);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 50 + "'", int11 == 50);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 50 + "'", int12 == 50);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "hi!" + "'", str18, "hi!");
    }

    @Test
    public void test5363() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test5363");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setSerialJtaTransactions(false);
        atomikosProperties0.setThreadedTwoPhaseCommit(true);
        atomikosProperties0.setMaxTimeout((long) '#');
        boolean boolean7 = atomikosProperties0.isEnableLogging();
        atomikosProperties0.setCheckpointInterval((long) (byte) -1);
        atomikosProperties0.setEnableLogging(true);
        atomikosProperties0.setLogBaseName("{}");
        java.lang.String str14 = atomikosProperties0.getService();
        atomikosProperties0.setMaxActives((int) (byte) 100);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNull(str14);
    }

    @Test
    public void test5364() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test5364");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration3 = properties0.elements();
        boolean boolean4 = properties0.isEmpty();
        java.util.Set<java.lang.Object> objSet5 = properties0.keySet();
        java.util.Enumeration<java.lang.Object> objEnumeration6 = properties0.keys();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet7 = properties0.entrySet();
        java.util.Properties properties8 = new java.util.Properties();
        java.lang.Object obj10 = properties8.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration11 = properties8.elements();
        boolean boolean12 = properties8.isEmpty();
        java.util.Set<java.lang.Object> objSet13 = properties8.keySet();
        java.util.Enumeration<java.lang.Object> objEnumeration14 = properties8.keys();
        java.lang.String str16 = properties8.getProperty("hi!");
        java.lang.String str18 = properties8.getProperty("");
        java.lang.Object obj20 = properties0.putIfAbsent((java.lang.Object) "", (java.lang.Object) 100.0d);
        java.util.Properties properties21 = new java.util.Properties();
        java.lang.Object obj23 = properties21.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration24 = properties21.elements();
        int int25 = properties21.size();
        java.util.Properties properties26 = new java.util.Properties(properties21);
        java.util.Set<java.lang.String> strSet27 = properties21.stringPropertyNames();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties28 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties28.setSerialJtaTransactions(false);
        boolean boolean31 = atomikosProperties28.isSerialJtaTransactions();
        atomikosProperties28.setCheckpointInterval((long) 10);
        atomikosProperties28.setSerialJtaTransactions(true);
        java.util.Properties properties36 = new java.util.Properties();
        java.lang.Object obj38 = properties36.remove((java.lang.Object) 0.0d);
        boolean boolean39 = properties36.isEmpty();
        java.util.Enumeration<java.lang.Object> objEnumeration40 = properties36.elements();
        java.util.Enumeration<java.lang.Object> objEnumeration41 = properties36.elements();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties42 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties42.setSerialJtaTransactions(false);
        atomikosProperties42.setThreadedTwoPhaseCommit(true);
        atomikosProperties42.setMaxTimeout((long) '#');
        boolean boolean49 = atomikosProperties42.isForceShutdownOnVmExit();
        int int50 = atomikosProperties42.getMaxActives();
        java.lang.Object obj51 = properties36.remove((java.lang.Object) int50);
        boolean boolean52 = properties0.replace((java.lang.Object) strSet27, (java.lang.Object) true, (java.lang.Object) properties36);
        java.lang.String str53 = properties36.toString();
        java.util.Properties properties54 = new java.util.Properties();
        java.util.Collection<java.lang.Object> objCollection55 = properties54.values();
        int int56 = properties54.size();
        java.util.Properties properties57 = new java.util.Properties(properties54);
        java.util.Collection<java.lang.Object> objCollection58 = properties57.values();
        boolean boolean59 = properties57.isEmpty();
        java.util.Collection<java.lang.Object> objCollection60 = properties57.values();
        boolean boolean61 = properties36.containsValue((java.lang.Object) properties57);
        java.io.InputStream inputStream62 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties36.load(inputStream62);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(objEnumeration3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(objSet5);
        org.junit.Assert.assertNotNull(objEnumeration6);
        org.junit.Assert.assertNotNull(objEntrySet7);
        org.junit.Assert.assertNull(obj10);
        org.junit.Assert.assertNotNull(objEnumeration11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(objSet13);
        org.junit.Assert.assertNotNull(objEnumeration14);
        org.junit.Assert.assertNull(str16);
        org.junit.Assert.assertNull(str18);
        org.junit.Assert.assertNull(obj20);
        org.junit.Assert.assertNull(obj23);
        org.junit.Assert.assertNotNull(objEnumeration24);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 0 + "'", int25 == 0);
        org.junit.Assert.assertNotNull(strSet27);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNull(obj38);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNotNull(objEnumeration40);
        org.junit.Assert.assertNotNull(objEnumeration41);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + 50 + "'", int50 == 50);
        org.junit.Assert.assertNull(obj51);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "{}" + "'", str53, "{}");
        org.junit.Assert.assertNotNull(objCollection55);
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + 0 + "'", int56 == 0);
        org.junit.Assert.assertNotNull(objCollection58);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertNotNull(objCollection60);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
    }

    @Test
    public void test5365() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test5365");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setSerialJtaTransactions(false);
        atomikosProperties0.setThreadedTwoPhaseCommit(true);
        atomikosProperties0.setThreadedTwoPhaseCommit(true);
        java.util.Properties properties7 = atomikosProperties0.asProperties();
        boolean boolean8 = atomikosProperties0.isThreadedTwoPhaseCommit();
        atomikosProperties0.setMaxTimeout((long) 100);
        atomikosProperties0.setEnableLogging(true);
        java.util.Properties properties13 = atomikosProperties0.asProperties();
        atomikosProperties0.setLogBaseDir("{true=true}");
        java.lang.String str16 = atomikosProperties0.getLogBaseName();
        org.junit.Assert.assertNotNull(properties7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(properties13);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "tmlog" + "'", str16, "tmlog");
    }

    @Test
    public void test5366() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test5366");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setSerialJtaTransactions(false);
        atomikosProperties0.setThreadedTwoPhaseCommit(true);
        atomikosProperties0.setEnableLogging(false);
        atomikosProperties0.setSerialJtaTransactions(false);
        atomikosProperties0.setMaxTimeout(0L);
        atomikosProperties0.setTransactionManagerUniqueName("{tmlog=}");
    }

    @Test
    public void test5367() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test5367");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        java.lang.String str4 = properties0.getProperty("");
        java.util.Properties properties5 = new java.util.Properties();
        java.lang.Object obj7 = properties5.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration8 = properties5.elements();
        int int9 = properties5.size();
        java.util.Properties properties10 = new java.util.Properties(properties5);
        properties0.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties5);
        java.lang.Object obj14 = properties0.setProperty("", "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=100, com.atomikos.icatch.serial_jta_transactions=false, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=35, com.atomikos.icatch.service={=hi!}, com.atomikos.icatch.threaded_2pc=true, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
        java.util.Enumeration<?> wildcardEnumeration15 = properties0.propertyNames();
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertNull(obj7);
        org.junit.Assert.assertNotNull(objEnumeration8);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertNull(obj14);
        org.junit.Assert.assertNotNull(wildcardEnumeration15);
    }

    @Test
    public void test5368() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test5368");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        boolean boolean3 = properties0.isEmpty();
        java.util.Enumeration<java.lang.Object> objEnumeration4 = properties0.elements();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet5 = properties0.entrySet();
        java.util.Enumeration<java.lang.Object> objEnumeration6 = properties0.keys();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties7 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties7.setSerialJtaTransactions(false);
        atomikosProperties7.setThreadedTwoPhaseCommit(true);
        atomikosProperties7.setThreadedTwoPhaseCommit(true);
        java.util.Properties properties14 = atomikosProperties7.asProperties();
        java.util.Set<java.lang.String> strSet15 = properties14.stringPropertyNames();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties16 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties16.setSerialJtaTransactions(false);
        atomikosProperties16.setThreadedTwoPhaseCommit(true);
        atomikosProperties16.setMaxTimeout((long) '#');
        boolean boolean23 = atomikosProperties16.isEnableLogging();
        int int24 = atomikosProperties16.getMaxActives();
        java.util.Properties properties25 = new java.util.Properties();
        java.lang.Object obj27 = properties25.remove((java.lang.Object) 0.0d);
        boolean boolean28 = properties25.isEmpty();
        java.lang.Object obj31 = properties25.setProperty("", "hi!");
        java.util.Set<java.lang.String> strSet32 = properties25.stringPropertyNames();
        java.lang.Object obj33 = properties14.putIfAbsent((java.lang.Object) atomikosProperties16, (java.lang.Object) strSet32);
        java.lang.Object obj34 = properties0.get((java.lang.Object) properties14);
        java.io.OutputStream outputStream35 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties14.storeToXML(outputStream35, "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=false, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.max_actives=2, com.atomikos.icatch.log_base_name=tmlog}", "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=false, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=true, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(objEnumeration4);
        org.junit.Assert.assertNotNull(objEntrySet5);
        org.junit.Assert.assertNotNull(objEnumeration6);
        org.junit.Assert.assertNotNull(properties14);
        org.junit.Assert.assertNotNull(strSet15);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 50 + "'", int24 == 50);
        org.junit.Assert.assertNull(obj27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNull(obj31);
        org.junit.Assert.assertNotNull(strSet32);
        org.junit.Assert.assertNull(obj33);
        org.junit.Assert.assertNull(obj34);
    }

    @Test
    public void test5369() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test5369");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setSerialJtaTransactions(false);
        atomikosProperties0.setThreadedTwoPhaseCommit(true);
        atomikosProperties0.setEnableLogging(false);
        boolean boolean7 = atomikosProperties0.isSerialJtaTransactions();
        atomikosProperties0.setLogBaseName("{{}=tmlog}");
        java.lang.String str10 = atomikosProperties0.getLogBaseDir();
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNull(str10);
    }

    @Test
    public void test5370() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test5370");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration3 = properties0.elements();
        boolean boolean4 = properties0.isEmpty();
        java.util.Set<java.lang.Object> objSet5 = properties0.keySet();
        boolean boolean7 = properties0.containsKey((java.lang.Object) (-1.0f));
        java.util.Collection<java.lang.Object> objCollection8 = properties0.values();
        java.lang.Object obj9 = properties0.clone();
        java.util.Properties properties10 = new java.util.Properties();
        java.lang.Object obj12 = properties10.remove((java.lang.Object) 0.0d);
        boolean boolean13 = properties10.isEmpty();
        java.util.Enumeration<java.lang.Object> objEnumeration14 = properties10.elements();
        java.lang.Object obj17 = properties10.replace((java.lang.Object) 1, (java.lang.Object) 1);
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet18 = properties10.entrySet();
        boolean boolean19 = properties0.contains((java.lang.Object) properties10);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties20 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties20.setSerialJtaTransactions(false);
        atomikosProperties20.setThreadedTwoPhaseCommit(true);
        atomikosProperties20.setMaxTimeout((long) '#');
        boolean boolean27 = atomikosProperties20.isEnableLogging();
        atomikosProperties20.setMaxActives((int) '#');
        int int30 = atomikosProperties20.getMaxActives();
        atomikosProperties20.setLogBaseName("{true=class org.springframework.boot.jta.atomikos.AtomikosProperties}");
        atomikosProperties20.setLogBaseDir("{{{}={}}={}}");
        java.lang.Object obj35 = properties10.get((java.lang.Object) "{{{}={}}={}}");
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(objEnumeration3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(objSet5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(objCollection8);
        org.junit.Assert.assertNotNull(obj9);
        org.junit.Assert.assertEquals(obj9.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj9), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj9), "{}");
        org.junit.Assert.assertNull(obj12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(objEnumeration14);
        org.junit.Assert.assertNull(obj17);
        org.junit.Assert.assertNotNull(objEntrySet18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 35 + "'", int30 == 35);
        org.junit.Assert.assertNull(obj35);
    }

    @Test
    public void test5371() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test5371");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setSerialJtaTransactions(false);
        boolean boolean3 = atomikosProperties0.isSerialJtaTransactions();
        java.lang.String str4 = atomikosProperties0.getService();
        boolean boolean5 = atomikosProperties0.isEnableLogging();
        java.util.Properties properties6 = atomikosProperties0.asProperties();
        atomikosProperties0.setForceShutdownOnVmExit(true);
        atomikosProperties0.setMaxActives((int) (short) -1);
        atomikosProperties0.setMaxTimeout((long) ' ');
        atomikosProperties0.setEnableLogging(false);
        atomikosProperties0.setService("{{}={}}");
        java.lang.String str17 = atomikosProperties0.getTransactionManagerUniqueName();
        int int18 = atomikosProperties0.getMaxActives();
        atomikosProperties0.setForceShutdownOnVmExit(false);
        atomikosProperties0.setForceShutdownOnVmExit(true);
        atomikosProperties0.setLogBaseDir("");
        java.lang.String str25 = atomikosProperties0.getLogBaseName();
        atomikosProperties0.setCheckpointInterval((long) (-1));
        atomikosProperties0.setThreadedTwoPhaseCommit(false);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNotNull(properties6);
        org.junit.Assert.assertNull(str17);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + (-1) + "'", int18 == (-1));
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "tmlog" + "'", str25, "tmlog");
    }

    @Test
    public void test5372() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test5372");
        java.util.Properties properties0 = new java.util.Properties();
        java.util.Properties properties1 = new java.util.Properties();
        java.lang.Object obj3 = properties1.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet4 = properties1.stringPropertyNames();
        boolean boolean5 = properties0.containsValue((java.lang.Object) properties1);
        java.util.Collection<java.lang.Object> objCollection6 = properties0.values();
        java.util.Properties properties8 = new java.util.Properties();
        java.lang.Object obj10 = properties8.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration11 = properties8.elements();
        boolean boolean12 = properties8.isEmpty();
        java.util.Set<java.lang.Object> objSet13 = properties8.keySet();
        java.lang.Object obj14 = properties0.putIfAbsent((java.lang.Object) "hi!", (java.lang.Object) objSet13);
        java.util.Set<java.lang.Object> objSet15 = properties0.keySet();
        java.util.Set<java.lang.Object> objSet16 = properties0.keySet();
        java.util.Properties properties17 = new java.util.Properties();
        java.lang.Object obj19 = properties17.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration20 = properties17.elements();
        boolean boolean21 = properties17.isEmpty();
        java.util.Set<java.lang.Object> objSet22 = properties17.keySet();
        java.util.Enumeration<java.lang.Object> objEnumeration23 = properties17.keys();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet24 = properties17.entrySet();
        java.util.Properties properties25 = new java.util.Properties(properties17);
        java.util.Set<java.lang.String> strSet26 = properties17.stringPropertyNames();
        boolean boolean27 = properties0.contains((java.lang.Object) strSet26);
        org.junit.Assert.assertNull(obj3);
        org.junit.Assert.assertNotNull(strSet4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(objCollection6);
        org.junit.Assert.assertNull(obj10);
        org.junit.Assert.assertNotNull(objEnumeration11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(objSet13);
        org.junit.Assert.assertNull(obj14);
        org.junit.Assert.assertNotNull(objSet15);
        org.junit.Assert.assertNotNull(objSet16);
        org.junit.Assert.assertNull(obj19);
        org.junit.Assert.assertNotNull(objEnumeration20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(objSet22);
        org.junit.Assert.assertNotNull(objEnumeration23);
        org.junit.Assert.assertNotNull(objEntrySet24);
        org.junit.Assert.assertNotNull(strSet26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
    }

    @Test
    public void test5373() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test5373");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setSerialJtaTransactions(false);
        atomikosProperties0.setThreadedTwoPhaseCommit(true);
        atomikosProperties0.setThreadedTwoPhaseCommit(true);
        java.util.Properties properties7 = atomikosProperties0.asProperties();
        int int8 = atomikosProperties0.getMaxActives();
        atomikosProperties0.setService("hi!");
        long long11 = atomikosProperties0.getMaxTimeout();
        atomikosProperties0.setLogBaseDir("hi!");
        boolean boolean14 = atomikosProperties0.isForceShutdownOnVmExit();
        java.util.Properties properties15 = atomikosProperties0.asProperties();
        org.junit.Assert.assertNotNull(properties7);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 50 + "'", int8 == 50);
        org.junit.Assert.assertTrue("'" + long11 + "' != '" + 300000L + "'", long11 == 300000L);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(properties15);
    }

    @Test
    public void test5374() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test5374");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setSerialJtaTransactions(false);
        boolean boolean3 = atomikosProperties0.isSerialJtaTransactions();
        atomikosProperties0.setTransactionManagerUniqueName("hi!");
        boolean boolean6 = atomikosProperties0.isEnableLogging();
        java.lang.String str7 = atomikosProperties0.getTransactionManagerUniqueName();
        boolean boolean8 = atomikosProperties0.isEnableLogging();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "hi!" + "'", str7, "hi!");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
    }

    @Test
    public void test5375() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test5375");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setSerialJtaTransactions(false);
        atomikosProperties0.setThreadedTwoPhaseCommit(true);
        atomikosProperties0.setEnableLogging(false);
        atomikosProperties0.setSerialJtaTransactions(false);
        atomikosProperties0.setMaxTimeout(0L);
        long long11 = atomikosProperties0.getDefaultJtaTimeout();
        long long12 = atomikosProperties0.getDefaultJtaTimeout();
        java.util.Properties properties13 = atomikosProperties0.asProperties();
        java.lang.Object obj16 = properties13.setProperty("{[]=0.0}", "{hi!=[], {=hi!}={com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=false, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.tm_unique_name=tmlog, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}}");
        org.junit.Assert.assertTrue("'" + long11 + "' != '" + 10000L + "'", long11 == 10000L);
        org.junit.Assert.assertTrue("'" + long12 + "' != '" + 10000L + "'", long12 == 10000L);
        org.junit.Assert.assertNotNull(properties13);
        org.junit.Assert.assertNull(obj16);
    }

    @Test
    public void test5376() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test5376");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setSerialJtaTransactions(false);
        atomikosProperties0.setThreadedTwoPhaseCommit(true);
        atomikosProperties0.setEnableLogging(false);
        atomikosProperties0.setSerialJtaTransactions(false);
        atomikosProperties0.setMaxTimeout(0L);
        long long11 = atomikosProperties0.getDefaultJtaTimeout();
        long long12 = atomikosProperties0.getMaxTimeout();
        boolean boolean13 = atomikosProperties0.isEnableLogging();
        long long14 = atomikosProperties0.getMaxTimeout();
        org.junit.Assert.assertTrue("'" + long11 + "' != '" + 10000L + "'", long11 == 10000L);
        org.junit.Assert.assertTrue("'" + long12 + "' != '" + 0L + "'", long12 == 0L);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + long14 + "' != '" + 0L + "'", long14 == 0L);
    }

    @Test
    public void test5377() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test5377");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setSerialJtaTransactions(false);
        atomikosProperties0.setThreadedTwoPhaseCommit(true);
        atomikosProperties0.setThreadedTwoPhaseCommit(true);
        java.lang.String str7 = atomikosProperties0.getLogBaseDir();
        atomikosProperties0.setLogBaseDir("");
        java.lang.String str10 = atomikosProperties0.getTransactionManagerUniqueName();
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNull(str10);
    }

    @Test
    public void test5378() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test5378");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet3 = properties0.stringPropertyNames();
        java.util.Properties properties4 = new java.util.Properties();
        java.util.Properties properties5 = new java.util.Properties();
        java.lang.Object obj7 = properties5.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet8 = properties5.stringPropertyNames();
        boolean boolean9 = properties4.containsValue((java.lang.Object) properties5);
        java.util.Collection<java.lang.Object> objCollection10 = properties4.values();
        java.util.Enumeration<?> wildcardEnumeration11 = properties4.propertyNames();
        java.lang.Object obj13 = properties0.put((java.lang.Object) wildcardEnumeration11, (java.lang.Object) 10.0d);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties14 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties14.setSerialJtaTransactions(false);
        atomikosProperties14.setThreadedTwoPhaseCommit(true);
        atomikosProperties14.setMaxTimeout((long) '#');
        boolean boolean21 = atomikosProperties14.isForceShutdownOnVmExit();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties22 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties22.setSerialJtaTransactions(false);
        atomikosProperties22.setThreadedTwoPhaseCommit(true);
        atomikosProperties22.setThreadedTwoPhaseCommit(true);
        java.lang.Object obj29 = properties0.getOrDefault((java.lang.Object) boolean21, (java.lang.Object) atomikosProperties22);
        java.util.Properties properties30 = new java.util.Properties();
        java.lang.Object obj32 = properties30.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration33 = properties30.elements();
        boolean boolean34 = properties30.isEmpty();
        java.util.Set<java.lang.Object> objSet35 = properties30.keySet();
        java.util.Enumeration<java.lang.Object> objEnumeration36 = properties30.keys();
        java.lang.String str38 = properties30.getProperty("hi!");
        java.lang.String str40 = properties30.getProperty("");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties41 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties41.setSerialJtaTransactions(false);
        atomikosProperties41.setThreadedTwoPhaseCommit(true);
        atomikosProperties41.setEnableLogging(false);
        boolean boolean48 = properties30.containsKey((java.lang.Object) atomikosProperties41);
        int int49 = properties30.size();
        java.util.Properties properties50 = new java.util.Properties();
        java.lang.Object obj52 = properties50.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration53 = properties50.elements();
        boolean boolean54 = properties50.isEmpty();
        java.util.Enumeration<java.lang.Object> objEnumeration55 = properties50.elements();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet56 = properties50.entrySet();
        java.util.Properties properties57 = new java.util.Properties();
        java.lang.Object obj59 = properties57.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration60 = properties57.elements();
        boolean boolean61 = properties57.isEmpty();
        java.util.Set<java.lang.Object> objSet62 = properties57.keySet();
        boolean boolean63 = properties57.isEmpty();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties64 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties64.setSerialJtaTransactions(false);
        atomikosProperties64.setThreadedTwoPhaseCommit(true);
        atomikosProperties64.setMaxTimeout((long) '#');
        boolean boolean71 = atomikosProperties64.isEnableLogging();
        atomikosProperties64.setCheckpointInterval((long) (byte) -1);
        java.util.Properties properties74 = new java.util.Properties();
        java.util.Properties properties75 = new java.util.Properties();
        java.lang.Object obj77 = properties75.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet78 = properties75.stringPropertyNames();
        boolean boolean79 = properties74.containsValue((java.lang.Object) properties75);
        java.util.Collection<java.lang.Object> objCollection80 = properties74.values();
        java.lang.Object obj81 = properties57.replace((java.lang.Object) atomikosProperties64, (java.lang.Object) objCollection80);
        java.lang.Object obj82 = properties30.putIfAbsent((java.lang.Object) properties50, (java.lang.Object) objCollection80);
        java.util.Collection<java.lang.Object> objCollection83 = properties50.values();
        boolean boolean84 = properties0.containsKey((java.lang.Object) properties50);
        java.util.Properties properties85 = new java.util.Properties(properties50);
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(strSet3);
        org.junit.Assert.assertNull(obj7);
        org.junit.Assert.assertNotNull(strSet8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(objCollection10);
        org.junit.Assert.assertNotNull(wildcardEnumeration11);
        org.junit.Assert.assertNull(obj13);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(obj29);
        org.junit.Assert.assertNull(obj32);
        org.junit.Assert.assertNotNull(objEnumeration33);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertNotNull(objSet35);
        org.junit.Assert.assertNotNull(objEnumeration36);
        org.junit.Assert.assertNull(str38);
        org.junit.Assert.assertNull(str40);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 0 + "'", int49 == 0);
        org.junit.Assert.assertNull(obj52);
        org.junit.Assert.assertNotNull(objEnumeration53);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertNotNull(objEnumeration55);
        org.junit.Assert.assertNotNull(objEntrySet56);
        org.junit.Assert.assertNull(obj59);
        org.junit.Assert.assertNotNull(objEnumeration60);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertNotNull(objSet62);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + true + "'", boolean71 == true);
        org.junit.Assert.assertNull(obj77);
        org.junit.Assert.assertNotNull(strSet78);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + false + "'", boolean79 == false);
        org.junit.Assert.assertNotNull(objCollection80);
        org.junit.Assert.assertNull(obj81);
        org.junit.Assert.assertNull(obj82);
        org.junit.Assert.assertNotNull(objCollection83);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + false + "'", boolean84 == false);
    }

    @Test
    public void test5379() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test5379");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration3 = properties0.elements();
        boolean boolean4 = properties0.isEmpty();
        java.util.Set<java.lang.Object> objSet5 = properties0.keySet();
        boolean boolean6 = properties0.isEmpty();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet7 = properties0.entrySet();
        java.util.Set<java.lang.Object> objSet8 = properties0.keySet();
        boolean boolean9 = properties0.isEmpty();
        int int10 = properties0.size();
        java.util.Properties properties11 = new java.util.Properties();
        java.lang.Object obj13 = properties11.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration14 = properties11.elements();
        boolean boolean15 = properties11.isEmpty();
        java.util.Set<java.lang.Object> objSet16 = properties11.keySet();
        boolean boolean17 = properties11.isEmpty();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet18 = properties11.entrySet();
        java.util.Properties properties19 = new java.util.Properties();
        java.lang.Object obj21 = properties19.remove((java.lang.Object) 0.0d);
        boolean boolean22 = properties19.isEmpty();
        java.lang.Object obj25 = properties19.setProperty("", "hi!");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties26 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties26.setSerialJtaTransactions(false);
        boolean boolean29 = properties11.remove((java.lang.Object) properties19, (java.lang.Object) atomikosProperties26);
        java.util.Properties properties30 = new java.util.Properties(properties19);
        int int31 = properties30.size();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties33 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties33.setSerialJtaTransactions(false);
        boolean boolean36 = atomikosProperties33.isSerialJtaTransactions();
        java.lang.String str37 = atomikosProperties33.getService();
        boolean boolean38 = atomikosProperties33.isEnableLogging();
        java.lang.String str39 = atomikosProperties33.getTransactionManagerUniqueName();
        boolean boolean40 = properties30.remove((java.lang.Object) (byte) 1, (java.lang.Object) atomikosProperties33);
        atomikosProperties33.setMaxActives((int) (short) -1);
        boolean boolean43 = atomikosProperties33.isThreadedTwoPhaseCommit();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties44 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties44.setSerialJtaTransactions(false);
        boolean boolean47 = atomikosProperties44.isSerialJtaTransactions();
        java.lang.String str48 = atomikosProperties44.getService();
        boolean boolean49 = atomikosProperties44.isEnableLogging();
        atomikosProperties44.setCheckpointInterval((long) (byte) 100);
        atomikosProperties44.setLogBaseDir("tmlog");
        java.lang.Object obj54 = properties0.replace((java.lang.Object) atomikosProperties33, (java.lang.Object) "tmlog");
        java.util.Properties properties55 = atomikosProperties33.asProperties();
        java.util.Properties properties56 = new java.util.Properties();
        java.lang.Object obj58 = properties56.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet59 = properties56.stringPropertyNames();
        java.util.Collection<java.lang.Object> objCollection60 = properties56.values();
        java.util.Enumeration<java.lang.Object> objEnumeration61 = properties56.keys();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties62 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties62.setSerialJtaTransactions(false);
        boolean boolean65 = atomikosProperties62.isThreadedTwoPhaseCommit();
        atomikosProperties62.setLogBaseName("");
        java.util.Properties properties68 = new java.util.Properties();
        java.lang.Object obj70 = properties68.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration71 = properties68.elements();
        boolean boolean72 = properties68.isEmpty();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet73 = properties68.entrySet();
        java.lang.Class<?> wildcardClass74 = objEntrySet73.getClass();
        java.lang.Object obj75 = properties56.getOrDefault((java.lang.Object) "", (java.lang.Object) wildcardClass74);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties76 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties76.setSerialJtaTransactions(false);
        atomikosProperties76.setThreadedTwoPhaseCommit(true);
        atomikosProperties76.setThreadedTwoPhaseCommit(true);
        long long83 = atomikosProperties76.getMaxTimeout();
        java.lang.String str84 = atomikosProperties76.getLogBaseName();
        long long85 = atomikosProperties76.getMaxTimeout();
        boolean boolean86 = atomikosProperties76.isEnableLogging();
        boolean boolean87 = atomikosProperties76.isForceShutdownOnVmExit();
        java.lang.Object obj88 = properties55.getOrDefault((java.lang.Object) "", (java.lang.Object) boolean87);
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(objEnumeration3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(objSet5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(objEntrySet7);
        org.junit.Assert.assertNotNull(objSet8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertNull(obj13);
        org.junit.Assert.assertNotNull(objEnumeration14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(objSet16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(objEntrySet18);
        org.junit.Assert.assertNull(obj21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNull(obj25);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 0 + "'", int31 == 0);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNull(str37);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertNull(str39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNull(str48);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertNull(obj54);
        org.junit.Assert.assertNotNull(properties55);
        org.junit.Assert.assertNull(obj58);
        org.junit.Assert.assertNotNull(strSet59);
        org.junit.Assert.assertNotNull(objCollection60);
        org.junit.Assert.assertNotNull(objEnumeration61);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertNull(obj70);
        org.junit.Assert.assertNotNull(objEnumeration71);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + true + "'", boolean72 == true);
        org.junit.Assert.assertNotNull(objEntrySet73);
        org.junit.Assert.assertNotNull(wildcardClass74);
        org.junit.Assert.assertNotNull(obj75);
        org.junit.Assert.assertEquals(obj75.toString(), "class java.util.Collections$SynchronizedSet");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj75), "class java.util.Collections$SynchronizedSet");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj75), "class java.util.Collections$SynchronizedSet");
        org.junit.Assert.assertTrue("'" + long83 + "' != '" + 300000L + "'", long83 == 300000L);
        org.junit.Assert.assertEquals("'" + str84 + "' != '" + "tmlog" + "'", str84, "tmlog");
        org.junit.Assert.assertTrue("'" + long85 + "' != '" + 300000L + "'", long85 == 300000L);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + true + "'", boolean86 == true);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + false + "'", boolean87 == false);
        org.junit.Assert.assertEquals("'" + obj88 + "' != '" + false + "'", obj88, false);
    }

    @Test
    public void test5380() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test5380");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration3 = properties0.elements();
        boolean boolean4 = properties0.isEmpty();
        java.util.Set<java.lang.Object> objSet5 = properties0.keySet();
        boolean boolean6 = properties0.isEmpty();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet7 = properties0.entrySet();
        java.util.Properties properties8 = new java.util.Properties();
        java.lang.Object obj10 = properties8.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration11 = properties8.elements();
        boolean boolean12 = properties8.isEmpty();
        java.util.Set<java.lang.Object> objSet13 = properties8.keySet();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties14 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties14.setSerialJtaTransactions(false);
        atomikosProperties14.setThreadedTwoPhaseCommit(true);
        atomikosProperties14.setThreadedTwoPhaseCommit(true);
        java.util.Properties properties21 = atomikosProperties14.asProperties();
        int int22 = atomikosProperties14.getMaxActives();
        java.util.Properties properties23 = new java.util.Properties();
        java.lang.Object obj25 = properties23.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration26 = properties23.elements();
        boolean boolean27 = properties23.isEmpty();
        java.util.Set<java.lang.Object> objSet28 = properties23.keySet();
        boolean boolean30 = properties23.containsKey((java.lang.Object) (-1.0f));
        java.lang.Object obj31 = properties8.put((java.lang.Object) atomikosProperties14, (java.lang.Object) properties23);
        java.lang.String str32 = properties8.toString();
        boolean boolean34 = properties0.remove((java.lang.Object) str32, (java.lang.Object) 1.0d);
        java.util.Properties properties35 = new java.util.Properties(properties0);
        java.util.Set<java.lang.Object> objSet36 = properties0.keySet();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties37 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties37.setSerialJtaTransactions(false);
        atomikosProperties37.setThreadedTwoPhaseCommit(true);
        atomikosProperties37.setMaxTimeout((long) '#');
        boolean boolean44 = atomikosProperties37.isEnableLogging();
        atomikosProperties37.setCheckpointInterval((long) 100);
        java.lang.String str47 = atomikosProperties37.getTransactionManagerUniqueName();
        atomikosProperties37.setCheckpointInterval((long) (byte) 100);
        java.util.Properties properties50 = atomikosProperties37.asProperties();
        java.util.Properties properties51 = new java.util.Properties();
        java.lang.Object obj53 = properties51.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration54 = properties51.elements();
        boolean boolean55 = properties51.isEmpty();
        java.util.Set<java.lang.Object> objSet56 = properties51.keySet();
        java.util.Enumeration<java.lang.Object> objEnumeration57 = properties51.keys();
        java.lang.String str59 = properties51.getProperty("hi!");
        java.util.Enumeration<?> wildcardEnumeration60 = properties51.propertyNames();
        boolean boolean61 = properties0.remove((java.lang.Object) atomikosProperties37, (java.lang.Object) wildcardEnumeration60);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties62 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties62.setSerialJtaTransactions(false);
        boolean boolean65 = atomikosProperties62.isSerialJtaTransactions();
        atomikosProperties62.setTransactionManagerUniqueName("hi!");
        java.lang.String str68 = atomikosProperties62.getLogBaseName();
        java.lang.String str69 = atomikosProperties62.getLogBaseName();
        boolean boolean70 = atomikosProperties62.isSerialJtaTransactions();
        long long71 = atomikosProperties62.getMaxTimeout();
        java.lang.String str72 = atomikosProperties62.getLogBaseName();
        java.lang.String str73 = atomikosProperties62.getTransactionManagerUniqueName();
        java.lang.Object obj74 = properties0.get((java.lang.Object) str73);
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(objEnumeration3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(objSet5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(objEntrySet7);
        org.junit.Assert.assertNull(obj10);
        org.junit.Assert.assertNotNull(objEnumeration11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(objSet13);
        org.junit.Assert.assertNotNull(properties21);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 50 + "'", int22 == 50);
        org.junit.Assert.assertNull(obj25);
        org.junit.Assert.assertNotNull(objEnumeration26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNotNull(objSet28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNull(obj31);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(objSet36);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertNull(str47);
        org.junit.Assert.assertNotNull(properties50);
        org.junit.Assert.assertNull(obj53);
        org.junit.Assert.assertNotNull(objEnumeration54);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertNotNull(objSet56);
        org.junit.Assert.assertNotNull(objEnumeration57);
        org.junit.Assert.assertNull(str59);
        org.junit.Assert.assertNotNull(wildcardEnumeration60);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertEquals("'" + str68 + "' != '" + "tmlog" + "'", str68, "tmlog");
        org.junit.Assert.assertEquals("'" + str69 + "' != '" + "tmlog" + "'", str69, "tmlog");
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertTrue("'" + long71 + "' != '" + 300000L + "'", long71 == 300000L);
        org.junit.Assert.assertEquals("'" + str72 + "' != '" + "tmlog" + "'", str72, "tmlog");
        org.junit.Assert.assertEquals("'" + str73 + "' != '" + "hi!" + "'", str73, "hi!");
        org.junit.Assert.assertNull(obj74);
    }

    @Test
    public void test5381() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test5381");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration3 = properties0.elements();
        boolean boolean4 = properties0.isEmpty();
        java.util.Set<java.lang.Object> objSet5 = properties0.keySet();
        java.lang.Object obj6 = properties0.clone();
        java.util.Properties properties7 = new java.util.Properties();
        java.util.Properties properties8 = new java.util.Properties();
        java.lang.Object obj10 = properties8.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet11 = properties8.stringPropertyNames();
        boolean boolean12 = properties7.containsValue((java.lang.Object) properties8);
        java.util.Collection<java.lang.Object> objCollection13 = properties7.values();
        java.lang.Object obj14 = properties7.clone();
        java.util.Properties properties15 = new java.util.Properties();
        java.lang.Object obj17 = properties15.remove((java.lang.Object) 0.0d);
        boolean boolean19 = properties15.containsValue((java.lang.Object) "hi!");
        java.lang.Object obj22 = properties15.put((java.lang.Object) (byte) -1, (java.lang.Object) 100L);
        java.util.Properties properties23 = new java.util.Properties();
        java.util.Properties properties24 = new java.util.Properties();
        java.lang.Object obj26 = properties24.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet27 = properties24.stringPropertyNames();
        boolean boolean28 = properties23.containsValue((java.lang.Object) properties24);
        java.util.Collection<java.lang.Object> objCollection29 = properties23.values();
        java.util.Properties properties31 = new java.util.Properties();
        java.lang.Object obj33 = properties31.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration34 = properties31.elements();
        boolean boolean35 = properties31.isEmpty();
        java.util.Set<java.lang.Object> objSet36 = properties31.keySet();
        java.lang.Object obj37 = properties23.putIfAbsent((java.lang.Object) "hi!", (java.lang.Object) objSet36);
        java.util.Set<java.lang.Object> objSet38 = properties23.keySet();
        boolean boolean39 = properties15.containsKey((java.lang.Object) properties23);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties40 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties40.setSerialJtaTransactions(false);
        boolean boolean43 = atomikosProperties40.isSerialJtaTransactions();
        atomikosProperties40.setCheckpointInterval((long) 10);
        atomikosProperties40.setForceShutdownOnVmExit(true);
        boolean boolean48 = properties0.replace((java.lang.Object) properties7, (java.lang.Object) properties15, (java.lang.Object) true);
        java.lang.Object obj49 = properties15.clone();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties50 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties50.setSerialJtaTransactions(false);
        atomikosProperties50.setThreadedTwoPhaseCommit(true);
        atomikosProperties50.setEnableLogging(false);
        atomikosProperties50.setForceShutdownOnVmExit(true);
        long long59 = atomikosProperties50.getDefaultJtaTimeout();
        atomikosProperties50.setLogBaseName("tmlog");
        atomikosProperties50.setForceShutdownOnVmExit(true);
        java.lang.String str64 = atomikosProperties50.getService();
        atomikosProperties50.setEnableLogging(true);
        atomikosProperties50.setThreadedTwoPhaseCommit(true);
        boolean boolean69 = properties15.equals((java.lang.Object) true);
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(objEnumeration3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(objSet5);
        org.junit.Assert.assertNotNull(obj6);
        org.junit.Assert.assertEquals(obj6.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj6), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj6), "{}");
        org.junit.Assert.assertNull(obj10);
        org.junit.Assert.assertNotNull(strSet11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(objCollection13);
        org.junit.Assert.assertNotNull(obj14);
        org.junit.Assert.assertEquals(obj14.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj14), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj14), "{}");
        org.junit.Assert.assertNull(obj17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNull(obj22);
        org.junit.Assert.assertNull(obj26);
        org.junit.Assert.assertNotNull(strSet27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(objCollection29);
        org.junit.Assert.assertNull(obj33);
        org.junit.Assert.assertNotNull(objEnumeration34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertNotNull(objSet36);
        org.junit.Assert.assertNull(obj37);
        org.junit.Assert.assertNotNull(objSet38);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNotNull(obj49);
        org.junit.Assert.assertEquals(obj49.toString(), "{-1=100}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj49), "{-1=100}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj49), "{-1=100}");
        org.junit.Assert.assertTrue("'" + long59 + "' != '" + 10000L + "'", long59 == 10000L);
        org.junit.Assert.assertNull(str64);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
    }

    @Test
    public void test5382() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test5382");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setSerialJtaTransactions(false);
        boolean boolean3 = atomikosProperties0.isSerialJtaTransactions();
        atomikosProperties0.setTransactionManagerUniqueName("hi!");
        java.lang.String str6 = atomikosProperties0.getLogBaseName();
        java.lang.String str7 = atomikosProperties0.getLogBaseName();
        boolean boolean8 = atomikosProperties0.isSerialJtaTransactions();
        int int9 = atomikosProperties0.getMaxActives();
        atomikosProperties0.setEnableLogging(false);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "tmlog" + "'", str6, "tmlog");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "tmlog" + "'", str7, "tmlog");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 50 + "'", int9 == 50);
    }

    @Test
    public void test5383() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test5383");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setSerialJtaTransactions(false);
        atomikosProperties0.setThreadedTwoPhaseCommit(true);
        atomikosProperties0.setMaxTimeout((long) '#');
        boolean boolean7 = atomikosProperties0.isEnableLogging();
        atomikosProperties0.setCheckpointInterval((long) (byte) -1);
        atomikosProperties0.setEnableLogging(true);
        atomikosProperties0.setLogBaseName("{}");
        atomikosProperties0.setLogBaseName("tmlog");
        atomikosProperties0.setSerialJtaTransactions(true);
        atomikosProperties0.setForceShutdownOnVmExit(false);
        boolean boolean20 = atomikosProperties0.isEnableLogging();
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
    }

    @Test
    public void test5384() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test5384");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setSerialJtaTransactions(false);
        atomikosProperties0.setThreadedTwoPhaseCommit(true);
        atomikosProperties0.setEnableLogging(false);
        boolean boolean7 = atomikosProperties0.isSerialJtaTransactions();
        int int8 = atomikosProperties0.getMaxActives();
        atomikosProperties0.setMaxActives((int) (byte) 0);
        boolean boolean11 = atomikosProperties0.isEnableLogging();
        atomikosProperties0.setMaxTimeout((long) (-1));
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 50 + "'", int8 == 50);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
    }

    @Test
    public void test5385() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test5385");
        java.util.Properties properties0 = new java.util.Properties();
        boolean boolean2 = properties0.contains((java.lang.Object) 100.0d);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties3 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties3.setSerialJtaTransactions(false);
        atomikosProperties3.setThreadedTwoPhaseCommit(true);
        atomikosProperties3.setSerialJtaTransactions(false);
        java.lang.String str10 = atomikosProperties3.getService();
        boolean boolean11 = properties0.containsKey((java.lang.Object) atomikosProperties3);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties12 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties12.setSerialJtaTransactions(false);
        atomikosProperties12.setThreadedTwoPhaseCommit(true);
        atomikosProperties12.setMaxTimeout((long) '#');
        boolean boolean19 = atomikosProperties12.isEnableLogging();
        atomikosProperties12.setCheckpointInterval((long) 100);
        atomikosProperties12.setForceShutdownOnVmExit(false);
        boolean boolean24 = properties0.containsValue((java.lang.Object) atomikosProperties12);
        atomikosProperties12.setService("{=hi!}");
        atomikosProperties12.setDefaultJtaTimeout(0L);
        atomikosProperties12.setThreadedTwoPhaseCommit(true);
        boolean boolean31 = atomikosProperties12.isThreadedTwoPhaseCommit();
        java.util.Properties properties32 = atomikosProperties12.asProperties();
        java.util.Properties properties33 = new java.util.Properties();
        boolean boolean35 = properties33.contains((java.lang.Object) 100.0d);
        java.util.Properties properties36 = new java.util.Properties();
        java.lang.Object obj38 = properties36.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration39 = properties36.elements();
        boolean boolean40 = properties36.isEmpty();
        java.util.Set<java.lang.Object> objSet41 = properties36.keySet();
        boolean boolean42 = properties36.isEmpty();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet43 = properties36.entrySet();
        java.util.Properties properties44 = new java.util.Properties();
        java.lang.Object obj46 = properties44.remove((java.lang.Object) 0.0d);
        boolean boolean47 = properties44.isEmpty();
        java.lang.Object obj50 = properties44.setProperty("", "hi!");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties51 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties51.setSerialJtaTransactions(false);
        boolean boolean54 = properties36.remove((java.lang.Object) properties44, (java.lang.Object) atomikosProperties51);
        boolean boolean55 = properties33.equals((java.lang.Object) properties36);
        java.util.Enumeration<java.lang.Object> objEnumeration56 = properties33.elements();
        java.util.Collection<java.lang.Object> objCollection57 = properties33.values();
        java.util.Enumeration<?> wildcardEnumeration58 = properties33.propertyNames();
        java.util.Set<java.lang.Object> objSet59 = properties33.keySet();
        java.util.Set<java.lang.String> strSet60 = properties33.stringPropertyNames();
        java.util.Properties properties61 = new java.util.Properties();
        java.lang.Object obj63 = properties61.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration64 = properties61.elements();
        boolean boolean65 = properties61.isEmpty();
        java.util.Set<java.lang.Object> objSet66 = properties61.keySet();
        java.util.Enumeration<java.lang.Object> objEnumeration67 = properties61.keys();
        java.lang.String str69 = properties61.getProperty("hi!");
        java.lang.String str71 = properties61.getProperty("");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties72 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties72.setSerialJtaTransactions(false);
        atomikosProperties72.setThreadedTwoPhaseCommit(true);
        atomikosProperties72.setEnableLogging(false);
        boolean boolean79 = properties61.containsKey((java.lang.Object) atomikosProperties72);
        atomikosProperties72.setService("tmlog");
        atomikosProperties72.setSerialJtaTransactions(true);
        long long84 = atomikosProperties72.getDefaultJtaTimeout();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties85 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties85.setSerialJtaTransactions(false);
        boolean boolean88 = atomikosProperties85.isSerialJtaTransactions();
        java.lang.String str89 = atomikosProperties85.getService();
        long long90 = atomikosProperties85.getMaxTimeout();
        atomikosProperties85.setCheckpointInterval((long) (short) 10);
        atomikosProperties85.setMaxTimeout(300000L);
        boolean boolean95 = atomikosProperties85.isForceShutdownOnVmExit();
        boolean boolean96 = properties32.replace((java.lang.Object) strSet60, (java.lang.Object) atomikosProperties72, (java.lang.Object) boolean95);
        java.lang.String str97 = atomikosProperties72.getLogBaseDir();
        java.util.Properties properties98 = atomikosProperties72.asProperties();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNotNull(properties32);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNull(obj38);
        org.junit.Assert.assertNotNull(objEnumeration39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNotNull(objSet41);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertNotNull(objEntrySet43);
        org.junit.Assert.assertNull(obj46);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertNull(obj50);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertNotNull(objEnumeration56);
        org.junit.Assert.assertNotNull(objCollection57);
        org.junit.Assert.assertNotNull(wildcardEnumeration58);
        org.junit.Assert.assertNotNull(objSet59);
        org.junit.Assert.assertNotNull(strSet60);
        org.junit.Assert.assertNull(obj63);
        org.junit.Assert.assertNotNull(objEnumeration64);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65 == true);
        org.junit.Assert.assertNotNull(objSet66);
        org.junit.Assert.assertNotNull(objEnumeration67);
        org.junit.Assert.assertNull(str69);
        org.junit.Assert.assertNull(str71);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + false + "'", boolean79 == false);
        org.junit.Assert.assertTrue("'" + long84 + "' != '" + 10000L + "'", long84 == 10000L);
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + false + "'", boolean88 == false);
        org.junit.Assert.assertNull(str89);
        org.junit.Assert.assertTrue("'" + long90 + "' != '" + 300000L + "'", long90 == 300000L);
        org.junit.Assert.assertTrue("'" + boolean95 + "' != '" + false + "'", boolean95 == false);
        org.junit.Assert.assertTrue("'" + boolean96 + "' != '" + false + "'", boolean96 == false);
        org.junit.Assert.assertNull(str97);
        org.junit.Assert.assertNotNull(properties98);
    }

    @Test
    public void test5386() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test5386");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet3 = properties0.stringPropertyNames();
        java.util.Properties properties4 = new java.util.Properties();
        java.util.Properties properties5 = new java.util.Properties();
        java.lang.Object obj7 = properties5.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet8 = properties5.stringPropertyNames();
        boolean boolean9 = properties4.containsValue((java.lang.Object) properties5);
        java.util.Collection<java.lang.Object> objCollection10 = properties4.values();
        java.util.Enumeration<?> wildcardEnumeration11 = properties4.propertyNames();
        java.lang.Object obj13 = properties0.put((java.lang.Object) wildcardEnumeration11, (java.lang.Object) 10.0d);
        java.util.Properties properties14 = new java.util.Properties();
        java.lang.Object obj16 = properties14.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration17 = properties14.elements();
        boolean boolean18 = properties14.isEmpty();
        java.util.Set<java.lang.Object> objSet19 = properties14.keySet();
        boolean boolean20 = properties14.isEmpty();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet21 = properties14.entrySet();
        java.util.Properties properties22 = new java.util.Properties();
        java.lang.Object obj24 = properties22.remove((java.lang.Object) 0.0d);
        boolean boolean25 = properties22.isEmpty();
        java.lang.Object obj28 = properties22.setProperty("", "hi!");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties29 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties29.setSerialJtaTransactions(false);
        boolean boolean32 = properties14.remove((java.lang.Object) properties22, (java.lang.Object) atomikosProperties29);
        java.util.Properties properties33 = new java.util.Properties(properties22);
        int int34 = properties33.size();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties36 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties36.setSerialJtaTransactions(false);
        boolean boolean39 = atomikosProperties36.isSerialJtaTransactions();
        java.lang.String str40 = atomikosProperties36.getService();
        boolean boolean41 = atomikosProperties36.isEnableLogging();
        java.lang.String str42 = atomikosProperties36.getTransactionManagerUniqueName();
        boolean boolean43 = properties33.remove((java.lang.Object) (byte) 1, (java.lang.Object) atomikosProperties36);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties44 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties44.setSerialJtaTransactions(false);
        atomikosProperties44.setThreadedTwoPhaseCommit(true);
        atomikosProperties44.setEnableLogging(false);
        boolean boolean51 = atomikosProperties44.isSerialJtaTransactions();
        int int52 = atomikosProperties44.getMaxActives();
        boolean boolean53 = atomikosProperties44.isSerialJtaTransactions();
        boolean boolean54 = properties0.remove((java.lang.Object) properties33, (java.lang.Object) boolean53);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties55 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties55.setSerialJtaTransactions(false);
        atomikosProperties55.setThreadedTwoPhaseCommit(true);
        atomikosProperties55.setMaxTimeout((long) '#');
        boolean boolean62 = atomikosProperties55.isEnableLogging();
        atomikosProperties55.setCheckpointInterval((long) 100);
        java.lang.String str65 = atomikosProperties55.getTransactionManagerUniqueName();
        boolean boolean66 = properties33.contains((java.lang.Object) atomikosProperties55);
        java.util.Properties properties67 = new java.util.Properties();
        java.lang.Object obj69 = properties67.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration70 = properties67.elements();
        boolean boolean71 = properties67.isEmpty();
        java.util.Enumeration<java.lang.Object> objEnumeration72 = properties67.elements();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet73 = properties67.entrySet();
        java.util.Set<java.lang.String> strSet74 = properties67.stringPropertyNames();
        boolean boolean75 = properties67.isEmpty();
        boolean boolean76 = properties33.equals((java.lang.Object) boolean75);
        boolean boolean77 = properties33.isEmpty();
        java.util.Set<java.lang.String> strSet78 = properties33.stringPropertyNames();
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(strSet3);
        org.junit.Assert.assertNull(obj7);
        org.junit.Assert.assertNotNull(strSet8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(objCollection10);
        org.junit.Assert.assertNotNull(wildcardEnumeration11);
        org.junit.Assert.assertNull(obj13);
        org.junit.Assert.assertNull(obj16);
        org.junit.Assert.assertNotNull(objEnumeration17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(objSet19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNotNull(objEntrySet21);
        org.junit.Assert.assertNull(obj24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNull(obj28);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 0 + "'", int34 == 0);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNull(str40);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertNull(str42);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + 50 + "'", int52 == 50);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + true + "'", boolean62 == true);
        org.junit.Assert.assertNull(str65);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertNull(obj69);
        org.junit.Assert.assertNotNull(objEnumeration70);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + true + "'", boolean71 == true);
        org.junit.Assert.assertNotNull(objEnumeration72);
        org.junit.Assert.assertNotNull(objEntrySet73);
        org.junit.Assert.assertNotNull(strSet74);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + true + "'", boolean75 == true);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + true + "'", boolean77 == true);
        org.junit.Assert.assertNotNull(strSet78);
    }

    @Test
    public void test5387() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test5387");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration3 = properties0.elements();
        boolean boolean4 = properties0.isEmpty();
        java.lang.Object obj7 = properties0.setProperty("tmlog", "");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties8 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties8.setSerialJtaTransactions(false);
        boolean boolean11 = atomikosProperties8.isSerialJtaTransactions();
        atomikosProperties8.setTransactionManagerUniqueName("hi!");
        atomikosProperties8.setForceShutdownOnVmExit(false);
        atomikosProperties8.setDefaultJtaTimeout((long) (byte) 10);
        java.lang.String str18 = atomikosProperties8.getTransactionManagerUniqueName();
        java.util.Properties properties19 = new java.util.Properties();
        java.util.Properties properties20 = new java.util.Properties();
        java.lang.Object obj22 = properties20.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet23 = properties20.stringPropertyNames();
        boolean boolean24 = properties19.containsValue((java.lang.Object) properties20);
        java.util.Collection<java.lang.Object> objCollection25 = properties19.values();
        java.util.Properties properties27 = new java.util.Properties();
        java.lang.Object obj29 = properties27.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration30 = properties27.elements();
        boolean boolean31 = properties27.isEmpty();
        java.util.Set<java.lang.Object> objSet32 = properties27.keySet();
        java.lang.Object obj33 = properties19.putIfAbsent((java.lang.Object) "hi!", (java.lang.Object) objSet32);
        java.util.Set<java.lang.Object> objSet34 = properties19.keySet();
        java.util.Set<java.lang.Object> objSet35 = properties19.keySet();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet36 = properties19.entrySet();
        java.util.Set<java.lang.Object> objSet37 = properties19.keySet();
        java.lang.Object obj38 = properties0.replace((java.lang.Object) atomikosProperties8, (java.lang.Object) properties19);
        java.util.Properties properties39 = atomikosProperties8.asProperties();
        atomikosProperties8.setMaxTimeout(100L);
        atomikosProperties8.setSerialJtaTransactions(true);
        int int44 = atomikosProperties8.getMaxActives();
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(objEnumeration3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNull(obj7);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "hi!" + "'", str18, "hi!");
        org.junit.Assert.assertNull(obj22);
        org.junit.Assert.assertNotNull(strSet23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(objCollection25);
        org.junit.Assert.assertNull(obj29);
        org.junit.Assert.assertNotNull(objEnumeration30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNotNull(objSet32);
        org.junit.Assert.assertNull(obj33);
        org.junit.Assert.assertNotNull(objSet34);
        org.junit.Assert.assertNotNull(objSet35);
        org.junit.Assert.assertNotNull(objEntrySet36);
        org.junit.Assert.assertNotNull(objSet37);
        org.junit.Assert.assertNull(obj38);
        org.junit.Assert.assertNotNull(properties39);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 50 + "'", int44 == 50);
    }

    @Test
    public void test5388() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test5388");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setSerialJtaTransactions(false);
        boolean boolean3 = atomikosProperties0.isSerialJtaTransactions();
        java.util.Properties properties4 = atomikosProperties0.asProperties();
        java.lang.Object obj7 = properties4.setProperty("hi!", "");
        java.util.Properties properties8 = new java.util.Properties(properties4);
        java.util.Properties properties9 = new java.util.Properties();
        java.lang.Object obj11 = properties9.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration12 = properties9.elements();
        boolean boolean13 = properties9.isEmpty();
        java.util.Set<java.lang.Object> objSet14 = properties9.keySet();
        java.util.Enumeration<java.lang.Object> objEnumeration15 = properties9.keys();
        java.lang.String str17 = properties9.getProperty("hi!");
        java.lang.String str19 = properties9.getProperty("");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties20 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties20.setSerialJtaTransactions(false);
        atomikosProperties20.setThreadedTwoPhaseCommit(true);
        atomikosProperties20.setEnableLogging(false);
        boolean boolean27 = properties9.containsKey((java.lang.Object) atomikosProperties20);
        atomikosProperties20.setTransactionManagerUniqueName("tmlog");
        java.util.Properties properties30 = new java.util.Properties();
        java.lang.Object obj32 = properties30.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration33 = properties30.elements();
        boolean boolean34 = properties30.isEmpty();
        java.util.Set<java.lang.Object> objSet35 = properties30.keySet();
        boolean boolean37 = properties30.containsKey((java.lang.Object) (-1.0f));
        java.util.Collection<java.lang.Object> objCollection38 = properties30.values();
        java.lang.Object obj39 = properties30.clone();
        java.util.Collection<java.lang.Object> objCollection40 = properties30.values();
        boolean boolean41 = properties4.remove((java.lang.Object) atomikosProperties20, (java.lang.Object) objCollection40);
        atomikosProperties20.setMaxActives(0);
        atomikosProperties20.setMaxTimeout((long) 35);
        atomikosProperties20.setThreadedTwoPhaseCommit(false);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(properties4);
        org.junit.Assert.assertNull(obj7);
        org.junit.Assert.assertNull(obj11);
        org.junit.Assert.assertNotNull(objEnumeration12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(objSet14);
        org.junit.Assert.assertNotNull(objEnumeration15);
        org.junit.Assert.assertNull(str17);
        org.junit.Assert.assertNull(str19);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNull(obj32);
        org.junit.Assert.assertNotNull(objEnumeration33);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertNotNull(objSet35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(objCollection38);
        org.junit.Assert.assertNotNull(obj39);
        org.junit.Assert.assertEquals(obj39.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj39), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj39), "{}");
        org.junit.Assert.assertNotNull(objCollection40);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
    }

    @Test
    public void test5389() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test5389");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setSerialJtaTransactions(false);
        boolean boolean3 = atomikosProperties0.isSerialJtaTransactions();
        atomikosProperties0.setTransactionManagerUniqueName("hi!");
        java.lang.String str6 = atomikosProperties0.getLogBaseName();
        java.lang.String str7 = atomikosProperties0.getLogBaseName();
        java.lang.String str8 = atomikosProperties0.getService();
        atomikosProperties0.setTransactionManagerUniqueName("{hi!=[], {=hi!}={com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=false, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.tm_unique_name=tmlog, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}}");
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "tmlog" + "'", str6, "tmlog");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "tmlog" + "'", str7, "tmlog");
        org.junit.Assert.assertNull(str8);
    }

    @Test
    public void test5390() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test5390");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration3 = properties0.elements();
        boolean boolean4 = properties0.isEmpty();
        java.util.Set<java.lang.Object> objSet5 = properties0.keySet();
        boolean boolean6 = properties0.isEmpty();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet7 = properties0.entrySet();
        java.util.Properties properties8 = new java.util.Properties();
        java.lang.Object obj10 = properties8.remove((java.lang.Object) 0.0d);
        boolean boolean11 = properties8.isEmpty();
        java.lang.Object obj14 = properties8.setProperty("", "hi!");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties15 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties15.setSerialJtaTransactions(false);
        boolean boolean18 = properties0.remove((java.lang.Object) properties8, (java.lang.Object) atomikosProperties15);
        java.util.Properties properties19 = new java.util.Properties(properties8);
        int int20 = properties19.size();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties22 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties22.setSerialJtaTransactions(false);
        boolean boolean25 = atomikosProperties22.isSerialJtaTransactions();
        java.lang.String str26 = atomikosProperties22.getService();
        boolean boolean27 = atomikosProperties22.isEnableLogging();
        java.lang.String str28 = atomikosProperties22.getTransactionManagerUniqueName();
        boolean boolean29 = properties19.remove((java.lang.Object) (byte) 1, (java.lang.Object) atomikosProperties22);
        java.util.Properties properties30 = new java.util.Properties();
        java.lang.Object obj32 = properties30.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration33 = properties30.elements();
        boolean boolean34 = properties30.isEmpty();
        java.util.Enumeration<java.lang.Object> objEnumeration35 = properties30.elements();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet36 = properties30.entrySet();
        java.lang.Object obj37 = properties19.remove((java.lang.Object) objEntrySet36);
        java.lang.Object obj38 = properties19.clone();
        java.util.Enumeration<java.lang.Object> objEnumeration39 = properties19.keys();
        java.lang.String str41 = properties19.getProperty("{=hi!}");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties42 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties42.setSerialJtaTransactions(false);
        atomikosProperties42.setThreadedTwoPhaseCommit(true);
        atomikosProperties42.setThreadedTwoPhaseCommit(true);
        java.lang.Object obj49 = properties19.get((java.lang.Object) atomikosProperties42);
        atomikosProperties42.setLogBaseName("{{}={}}");
        java.util.Properties properties52 = atomikosProperties42.asProperties();
        atomikosProperties42.setEnableLogging(false);
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(objEnumeration3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(objSet5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(objEntrySet7);
        org.junit.Assert.assertNull(obj10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNull(obj14);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 0 + "'", int20 == 0);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNull(str26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNull(str28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNull(obj32);
        org.junit.Assert.assertNotNull(objEnumeration33);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertNotNull(objEnumeration35);
        org.junit.Assert.assertNotNull(objEntrySet36);
        org.junit.Assert.assertNull(obj37);
        org.junit.Assert.assertNotNull(obj38);
        org.junit.Assert.assertEquals(obj38.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj38), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj38), "{}");
        org.junit.Assert.assertNotNull(objEnumeration39);
        org.junit.Assert.assertNull(str41);
        org.junit.Assert.assertNull(obj49);
        org.junit.Assert.assertNotNull(properties52);
    }

    @Test
    public void test5391() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test5391");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setSerialJtaTransactions(false);
        atomikosProperties0.setThreadedTwoPhaseCommit(true);
        boolean boolean5 = atomikosProperties0.isForceShutdownOnVmExit();
        java.lang.String str6 = atomikosProperties0.getTransactionManagerUniqueName();
        java.lang.String str7 = atomikosProperties0.getService();
        atomikosProperties0.setEnableLogging(false);
        atomikosProperties0.setDefaultJtaTimeout((long) '#');
        java.util.Properties properties12 = atomikosProperties0.asProperties();
        java.io.Reader reader13 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties12.load(reader13);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNotNull(properties12);
    }

    @Test
    public void test5392() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test5392");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setSerialJtaTransactions(false);
        boolean boolean3 = atomikosProperties0.isSerialJtaTransactions();
        atomikosProperties0.setCheckpointInterval((long) 10);
        atomikosProperties0.setCheckpointInterval((long) ' ');
        atomikosProperties0.setLogBaseName("{[]=0.0}");
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
    }

    @Test
    public void test5393() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test5393");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setSerialJtaTransactions(false);
        atomikosProperties0.setThreadedTwoPhaseCommit(true);
        atomikosProperties0.setEnableLogging(false);
        atomikosProperties0.setForceShutdownOnVmExit(true);
        atomikosProperties0.setService("{{}={}}");
        atomikosProperties0.setLogBaseDir("");
        atomikosProperties0.setEnableLogging(false);
        java.util.Properties properties15 = atomikosProperties0.asProperties();
        long long16 = atomikosProperties0.getCheckpointInterval();
        org.junit.Assert.assertNotNull(properties15);
        org.junit.Assert.assertTrue("'" + long16 + "' != '" + 500L + "'", long16 == 500L);
    }

    @Test
    public void test5394() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test5394");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setSerialJtaTransactions(false);
        atomikosProperties0.setThreadedTwoPhaseCommit(true);
        atomikosProperties0.setMaxTimeout((long) '#');
        boolean boolean7 = atomikosProperties0.isEnableLogging();
        atomikosProperties0.setCheckpointInterval((long) (byte) -1);
        boolean boolean10 = atomikosProperties0.isSerialJtaTransactions();
        java.lang.String str11 = atomikosProperties0.getTransactionManagerUniqueName();
        atomikosProperties0.setService("tmlog");
        int int14 = atomikosProperties0.getMaxActives();
        java.lang.String str15 = atomikosProperties0.getService();
        atomikosProperties0.setCheckpointInterval(2L);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 50 + "'", int14 == 50);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "tmlog" + "'", str15, "tmlog");
    }

    @Test
    public void test5395() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test5395");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration3 = properties0.elements();
        boolean boolean4 = properties0.isEmpty();
        java.util.Set<java.lang.Object> objSet5 = properties0.keySet();
        java.util.Enumeration<java.lang.Object> objEnumeration6 = properties0.keys();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet7 = properties0.entrySet();
        java.util.Properties properties8 = new java.util.Properties();
        java.lang.Object obj10 = properties8.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration11 = properties8.elements();
        boolean boolean12 = properties8.isEmpty();
        java.util.Set<java.lang.Object> objSet13 = properties8.keySet();
        java.util.Enumeration<java.lang.Object> objEnumeration14 = properties8.keys();
        java.lang.String str16 = properties8.getProperty("hi!");
        java.lang.String str18 = properties8.getProperty("");
        java.lang.Object obj20 = properties0.putIfAbsent((java.lang.Object) "", (java.lang.Object) 100.0d);
        java.lang.Object obj23 = properties0.setProperty("tmlog", "{true=true}");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties24 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties24.setSerialJtaTransactions(false);
        atomikosProperties24.setThreadedTwoPhaseCommit(true);
        atomikosProperties24.setMaxTimeout((long) '#');
        boolean boolean31 = atomikosProperties24.isEnableLogging();
        atomikosProperties24.setCheckpointInterval((long) (byte) -1);
        boolean boolean34 = atomikosProperties24.isSerialJtaTransactions();
        java.util.Properties properties35 = new java.util.Properties();
        java.lang.Object obj37 = properties35.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration38 = properties35.elements();
        boolean boolean39 = properties35.isEmpty();
        java.util.Set<java.lang.Object> objSet40 = properties35.keySet();
        java.util.Enumeration<java.lang.Object> objEnumeration41 = properties35.keys();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet42 = properties35.entrySet();
        java.util.Properties properties43 = new java.util.Properties();
        java.lang.Object obj45 = properties43.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration46 = properties43.elements();
        boolean boolean47 = properties43.isEmpty();
        java.util.Set<java.lang.Object> objSet48 = properties43.keySet();
        java.util.Enumeration<java.lang.Object> objEnumeration49 = properties43.keys();
        java.lang.String str51 = properties43.getProperty("hi!");
        java.lang.String str53 = properties43.getProperty("");
        java.lang.Object obj55 = properties35.putIfAbsent((java.lang.Object) "", (java.lang.Object) 100.0d);
        java.lang.Object obj56 = properties35.clone();
        boolean boolean57 = properties0.remove((java.lang.Object) atomikosProperties24, (java.lang.Object) properties35);
        atomikosProperties24.setTransactionManagerUniqueName("{hi!=[], {}={}}");
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(objEnumeration3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(objSet5);
        org.junit.Assert.assertNotNull(objEnumeration6);
        org.junit.Assert.assertNotNull(objEntrySet7);
        org.junit.Assert.assertNull(obj10);
        org.junit.Assert.assertNotNull(objEnumeration11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(objSet13);
        org.junit.Assert.assertNotNull(objEnumeration14);
        org.junit.Assert.assertNull(str16);
        org.junit.Assert.assertNull(str18);
        org.junit.Assert.assertNull(obj20);
        org.junit.Assert.assertNull(obj23);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNull(obj37);
        org.junit.Assert.assertNotNull(objEnumeration38);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNotNull(objSet40);
        org.junit.Assert.assertNotNull(objEnumeration41);
        org.junit.Assert.assertNotNull(objEntrySet42);
        org.junit.Assert.assertNull(obj45);
        org.junit.Assert.assertNotNull(objEnumeration46);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertNotNull(objSet48);
        org.junit.Assert.assertNotNull(objEnumeration49);
        org.junit.Assert.assertNull(str51);
        org.junit.Assert.assertNull(str53);
        org.junit.Assert.assertNull(obj55);
        org.junit.Assert.assertNotNull(obj56);
        org.junit.Assert.assertEquals(obj56.toString(), "{=100.0}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj56), "{=100.0}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj56), "{=100.0}");
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
    }

    @Test
    public void test5396() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test5396");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        boolean boolean3 = properties0.isEmpty();
        java.lang.Object obj6 = properties0.setProperty("", "hi!");
        java.util.Properties properties7 = new java.util.Properties();
        java.lang.Object obj9 = properties7.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration10 = properties7.elements();
        boolean boolean11 = properties7.isEmpty();
        java.util.Set<java.lang.Object> objSet12 = properties7.keySet();
        boolean boolean13 = properties7.isEmpty();
        java.util.Properties properties14 = new java.util.Properties();
        java.util.Collection<java.lang.Object> objCollection15 = properties14.values();
        java.util.Enumeration<java.lang.Object> objEnumeration16 = properties14.keys();
        java.lang.Object obj17 = properties7.remove((java.lang.Object) properties14);
        java.lang.Object obj18 = properties0.get((java.lang.Object) properties14);
        java.util.Enumeration<java.lang.Object> objEnumeration19 = properties14.keys();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties20 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties20.setSerialJtaTransactions(false);
        atomikosProperties20.setThreadedTwoPhaseCommit(true);
        atomikosProperties20.setMaxTimeout((long) '#');
        boolean boolean27 = atomikosProperties20.isForceShutdownOnVmExit();
        long long28 = atomikosProperties20.getCheckpointInterval();
        java.lang.Object obj29 = new java.lang.Object();
        boolean boolean31 = properties14.replace((java.lang.Object) long28, obj29, (java.lang.Object) "hi!");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties32 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties32.setSerialJtaTransactions(false);
        boolean boolean35 = atomikosProperties32.isSerialJtaTransactions();
        atomikosProperties32.setTransactionManagerUniqueName("hi!");
        java.lang.String str38 = atomikosProperties32.getLogBaseName();
        java.lang.String str39 = atomikosProperties32.getLogBaseName();
        boolean boolean40 = atomikosProperties32.isSerialJtaTransactions();
        java.util.Properties properties41 = new java.util.Properties();
        java.util.Properties properties42 = new java.util.Properties();
        java.lang.Object obj44 = properties42.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet45 = properties42.stringPropertyNames();
        boolean boolean46 = properties41.containsValue((java.lang.Object) properties42);
        java.util.Properties properties47 = new java.util.Properties();
        java.lang.Object obj49 = properties47.remove((java.lang.Object) 0.0d);
        boolean boolean51 = properties47.containsValue((java.lang.Object) "hi!");
        boolean boolean52 = properties42.contains((java.lang.Object) "hi!");
        boolean boolean53 = properties14.remove((java.lang.Object) atomikosProperties32, (java.lang.Object) boolean52);
        long long54 = atomikosProperties32.getDefaultJtaTimeout();
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNull(obj6);
        org.junit.Assert.assertNull(obj9);
        org.junit.Assert.assertNotNull(objEnumeration10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNotNull(objSet12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(objCollection15);
        org.junit.Assert.assertNotNull(objEnumeration16);
        org.junit.Assert.assertNull(obj17);
        org.junit.Assert.assertNull(obj18);
        org.junit.Assert.assertNotNull(objEnumeration19);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertTrue("'" + long28 + "' != '" + 500L + "'", long28 == 500L);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "tmlog" + "'", str38, "tmlog");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "tmlog" + "'", str39, "tmlog");
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNull(obj44);
        org.junit.Assert.assertNotNull(strSet45);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNull(obj49);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertTrue("'" + long54 + "' != '" + 10000L + "'", long54 == 10000L);
    }

    @Test
    public void test5397() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test5397");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        java.util.Properties properties3 = new java.util.Properties();
        java.util.Collection<java.lang.Object> objCollection4 = properties3.values();
        java.util.Enumeration<java.lang.Object> objEnumeration5 = properties3.keys();
        java.util.Properties properties6 = new java.util.Properties();
        java.lang.Object obj8 = properties6.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration9 = properties6.elements();
        boolean boolean10 = properties6.isEmpty();
        java.util.Set<java.lang.Object> objSet11 = properties6.keySet();
        java.util.Enumeration<java.lang.Object> objEnumeration12 = properties6.keys();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet13 = properties6.entrySet();
        java.lang.Object obj14 = properties0.put((java.lang.Object) properties3, (java.lang.Object) properties6);
        java.lang.Object obj15 = properties3.clone();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties16 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties16.setSerialJtaTransactions(false);
        atomikosProperties16.setThreadedTwoPhaseCommit(true);
        atomikosProperties16.setMaxTimeout((long) '#');
        boolean boolean23 = atomikosProperties16.isEnableLogging();
        atomikosProperties16.setCheckpointInterval((long) 100);
        atomikosProperties16.setSerialJtaTransactions(true);
        boolean boolean28 = properties3.equals((java.lang.Object) atomikosProperties16);
        java.util.Properties properties29 = new java.util.Properties();
        java.lang.Object obj31 = properties29.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration32 = properties29.elements();
        boolean boolean33 = properties29.isEmpty();
        java.util.Enumeration<java.lang.Object> objEnumeration34 = properties29.elements();
        boolean boolean35 = properties3.containsKey((java.lang.Object) properties29);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties36 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties36.setSerialJtaTransactions(false);
        boolean boolean39 = atomikosProperties36.isSerialJtaTransactions();
        atomikosProperties36.setTransactionManagerUniqueName("hi!");
        atomikosProperties36.setForceShutdownOnVmExit(false);
        boolean boolean44 = atomikosProperties36.isThreadedTwoPhaseCommit();
        atomikosProperties36.setMaxTimeout((-1L));
        boolean boolean47 = atomikosProperties36.isEnableLogging();
        java.util.Properties properties48 = new java.util.Properties();
        java.lang.Object obj50 = properties48.remove((java.lang.Object) 0.0d);
        boolean boolean52 = properties48.containsValue((java.lang.Object) "hi!");
        java.lang.Object obj55 = properties48.put((java.lang.Object) (byte) -1, (java.lang.Object) 100L);
        java.util.Properties properties56 = new java.util.Properties();
        java.util.Properties properties57 = new java.util.Properties();
        java.lang.Object obj59 = properties57.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet60 = properties57.stringPropertyNames();
        boolean boolean61 = properties56.containsValue((java.lang.Object) properties57);
        java.util.Collection<java.lang.Object> objCollection62 = properties56.values();
        java.util.Properties properties64 = new java.util.Properties();
        java.lang.Object obj66 = properties64.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration67 = properties64.elements();
        boolean boolean68 = properties64.isEmpty();
        java.util.Set<java.lang.Object> objSet69 = properties64.keySet();
        java.lang.Object obj70 = properties56.putIfAbsent((java.lang.Object) "hi!", (java.lang.Object) objSet69);
        java.util.Set<java.lang.Object> objSet71 = properties56.keySet();
        boolean boolean72 = properties48.containsKey((java.lang.Object) properties56);
        java.util.Enumeration<java.lang.Object> objEnumeration73 = properties56.elements();
        int int74 = properties56.size();
        java.util.Enumeration<java.lang.Object> objEnumeration75 = properties56.elements();
        java.lang.Object obj76 = properties3.putIfAbsent((java.lang.Object) atomikosProperties36, (java.lang.Object) properties56);
        int int77 = properties3.size();
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(objCollection4);
        org.junit.Assert.assertNotNull(objEnumeration5);
        org.junit.Assert.assertNull(obj8);
        org.junit.Assert.assertNotNull(objEnumeration9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(objSet11);
        org.junit.Assert.assertNotNull(objEnumeration12);
        org.junit.Assert.assertNotNull(objEntrySet13);
        org.junit.Assert.assertNull(obj14);
        org.junit.Assert.assertNotNull(obj15);
        org.junit.Assert.assertEquals(obj15.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj15), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj15), "{}");
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNull(obj31);
        org.junit.Assert.assertNotNull(objEnumeration32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNotNull(objEnumeration34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertNull(obj50);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNull(obj55);
        org.junit.Assert.assertNull(obj59);
        org.junit.Assert.assertNotNull(strSet60);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertNotNull(objCollection62);
        org.junit.Assert.assertNull(obj66);
        org.junit.Assert.assertNotNull(objEnumeration67);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + true + "'", boolean68 == true);
        org.junit.Assert.assertNotNull(objSet69);
        org.junit.Assert.assertNull(obj70);
        org.junit.Assert.assertNotNull(objSet71);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertNotNull(objEnumeration73);
        org.junit.Assert.assertTrue("'" + int74 + "' != '" + 1 + "'", int74 == 1);
        org.junit.Assert.assertNotNull(objEnumeration75);
        org.junit.Assert.assertNull(obj76);
        org.junit.Assert.assertTrue("'" + int77 + "' != '" + 1 + "'", int77 == 1);
    }

    @Test
    public void test5398() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test5398");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setSerialJtaTransactions(false);
        boolean boolean3 = atomikosProperties0.isSerialJtaTransactions();
        java.lang.String str4 = atomikosProperties0.getService();
        boolean boolean5 = atomikosProperties0.isEnableLogging();
        long long6 = atomikosProperties0.getMaxTimeout();
        java.util.Properties properties7 = atomikosProperties0.asProperties();
        atomikosProperties0.setSerialJtaTransactions(false);
        long long10 = atomikosProperties0.getCheckpointInterval();
        atomikosProperties0.setEnableLogging(true);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertTrue("'" + long6 + "' != '" + 300000L + "'", long6 == 300000L);
        org.junit.Assert.assertNotNull(properties7);
        org.junit.Assert.assertTrue("'" + long10 + "' != '" + 500L + "'", long10 == 500L);
    }

    @Test
    public void test5399() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test5399");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration3 = properties0.elements();
        int int4 = properties0.size();
        java.util.Properties properties5 = new java.util.Properties();
        java.lang.Object obj7 = properties5.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration8 = properties5.elements();
        boolean boolean9 = properties5.isEmpty();
        java.util.Set<java.lang.Object> objSet10 = properties5.keySet();
        boolean boolean11 = properties0.containsKey((java.lang.Object) objSet10);
        java.util.Enumeration<java.lang.Object> objEnumeration12 = properties0.keys();
        java.util.Properties properties13 = new java.util.Properties();
        java.lang.Object obj15 = properties13.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration16 = properties13.elements();
        boolean boolean17 = properties13.isEmpty();
        java.util.Set<java.lang.Object> objSet18 = properties13.keySet();
        java.util.Enumeration<java.lang.Object> objEnumeration19 = properties13.keys();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet20 = properties13.entrySet();
        boolean boolean22 = properties0.remove((java.lang.Object) properties13, (java.lang.Object) 1.0f);
        java.lang.Object obj25 = properties13.setProperty("{true=class org.springframework.boot.jta.atomikos.AtomikosProperties}", "hi!");
        java.util.Properties properties26 = new java.util.Properties();
        java.lang.Object obj28 = properties26.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration29 = properties26.elements();
        boolean boolean30 = properties26.isEmpty();
        java.util.Set<java.lang.Object> objSet31 = properties26.keySet();
        boolean boolean32 = properties26.isEmpty();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet33 = properties26.entrySet();
        java.util.Properties properties34 = new java.util.Properties();
        java.lang.Object obj36 = properties34.remove((java.lang.Object) 0.0d);
        boolean boolean37 = properties34.isEmpty();
        java.lang.Object obj40 = properties34.setProperty("", "hi!");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties41 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties41.setSerialJtaTransactions(false);
        boolean boolean44 = properties26.remove((java.lang.Object) properties34, (java.lang.Object) atomikosProperties41);
        java.util.Properties properties45 = new java.util.Properties(properties34);
        java.util.Enumeration<java.lang.Object> objEnumeration46 = properties45.elements();
        java.lang.Object obj47 = properties13.remove((java.lang.Object) properties45);
        java.util.Properties properties48 = new java.util.Properties();
        java.lang.Object obj50 = properties48.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration51 = properties48.elements();
        boolean boolean52 = properties48.isEmpty();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet53 = properties48.entrySet();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties55 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties55.setSerialJtaTransactions(false);
        atomikosProperties55.setThreadedTwoPhaseCommit(true);
        atomikosProperties55.setMaxTimeout((long) '#');
        boolean boolean62 = atomikosProperties55.isForceShutdownOnVmExit();
        java.lang.Object obj63 = properties48.put((java.lang.Object) (short) 1, (java.lang.Object) atomikosProperties55);
        atomikosProperties55.setForceShutdownOnVmExit(true);
        java.util.Properties properties66 = atomikosProperties55.asProperties();
        java.lang.String str67 = atomikosProperties55.getTransactionManagerUniqueName();
        atomikosProperties55.setMaxTimeout((long) (short) 0);
        atomikosProperties55.setService("tmlog");
        boolean boolean72 = properties13.equals((java.lang.Object) atomikosProperties55);
        java.lang.String str73 = atomikosProperties55.getLogBaseName();
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(objEnumeration3);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNull(obj7);
        org.junit.Assert.assertNotNull(objEnumeration8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertNotNull(objSet10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(objEnumeration12);
        org.junit.Assert.assertNull(obj15);
        org.junit.Assert.assertNotNull(objEnumeration16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(objSet18);
        org.junit.Assert.assertNotNull(objEnumeration19);
        org.junit.Assert.assertNotNull(objEntrySet20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNull(obj25);
        org.junit.Assert.assertNull(obj28);
        org.junit.Assert.assertNotNull(objEnumeration29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNotNull(objSet31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertNotNull(objEntrySet33);
        org.junit.Assert.assertNull(obj36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertNull(obj40);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(objEnumeration46);
        org.junit.Assert.assertNull(obj47);
        org.junit.Assert.assertNull(obj50);
        org.junit.Assert.assertNotNull(objEnumeration51);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertNotNull(objEntrySet53);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertNull(obj63);
        org.junit.Assert.assertNotNull(properties66);
        org.junit.Assert.assertNull(str67);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertEquals("'" + str73 + "' != '" + "tmlog" + "'", str73, "tmlog");
    }

    @Test
    public void test5400() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test5400");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration3 = properties0.elements();
        boolean boolean4 = properties0.isEmpty();
        java.util.Enumeration<java.lang.Object> objEnumeration5 = properties0.elements();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet6 = properties0.entrySet();
        java.util.Set<java.lang.String> strSet7 = properties0.stringPropertyNames();
        boolean boolean8 = properties0.isEmpty();
        java.util.Properties properties9 = new java.util.Properties();
        java.util.Collection<java.lang.Object> objCollection10 = properties9.values();
        java.util.Enumeration<java.lang.Object> objEnumeration11 = properties9.keys();
        java.lang.Object obj14 = properties9.setProperty("{}", "{}");
        java.util.Set<java.lang.String> strSet15 = properties9.stringPropertyNames();
        java.util.Properties properties16 = new java.util.Properties();
        boolean boolean18 = properties16.contains((java.lang.Object) 100.0d);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties19 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties19.setSerialJtaTransactions(false);
        atomikosProperties19.setThreadedTwoPhaseCommit(true);
        atomikosProperties19.setSerialJtaTransactions(false);
        java.lang.String str26 = atomikosProperties19.getService();
        boolean boolean27 = properties16.containsKey((java.lang.Object) atomikosProperties19);
        boolean boolean28 = properties9.containsKey((java.lang.Object) properties16);
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet29 = properties9.entrySet();
        java.util.Properties properties30 = new java.util.Properties();
        java.lang.Object obj32 = properties30.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration33 = properties30.elements();
        boolean boolean34 = properties30.isEmpty();
        java.util.Set<java.lang.Object> objSet35 = properties30.keySet();
        java.util.Enumeration<java.lang.Object> objEnumeration36 = properties30.keys();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet37 = properties30.entrySet();
        java.util.Properties properties38 = new java.util.Properties(properties30);
        java.util.Set<java.lang.Object> objSet39 = properties30.keySet();
        java.lang.Object obj40 = properties0.put((java.lang.Object) properties9, (java.lang.Object) objSet39);
        java.io.Reader reader41 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties0.load(reader41);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(objEnumeration3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(objEnumeration5);
        org.junit.Assert.assertNotNull(objEntrySet6);
        org.junit.Assert.assertNotNull(strSet7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(objCollection10);
        org.junit.Assert.assertNotNull(objEnumeration11);
        org.junit.Assert.assertNull(obj14);
        org.junit.Assert.assertNotNull(strSet15);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNull(str26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(objEntrySet29);
        org.junit.Assert.assertNull(obj32);
        org.junit.Assert.assertNotNull(objEnumeration33);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertNotNull(objSet35);
        org.junit.Assert.assertNotNull(objEnumeration36);
        org.junit.Assert.assertNotNull(objEntrySet37);
        org.junit.Assert.assertNotNull(objSet39);
        org.junit.Assert.assertNull(obj40);
    }

    @Test
    public void test5401() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test5401");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet3 = properties0.stringPropertyNames();
        java.util.Properties properties4 = new java.util.Properties();
        java.util.Properties properties5 = new java.util.Properties();
        java.lang.Object obj7 = properties5.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet8 = properties5.stringPropertyNames();
        boolean boolean9 = properties4.containsValue((java.lang.Object) properties5);
        java.util.Collection<java.lang.Object> objCollection10 = properties4.values();
        java.util.Enumeration<?> wildcardEnumeration11 = properties4.propertyNames();
        java.lang.Object obj13 = properties0.put((java.lang.Object) wildcardEnumeration11, (java.lang.Object) 10.0d);
        java.util.Properties properties14 = new java.util.Properties();
        java.lang.Object obj16 = properties14.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration17 = properties14.elements();
        boolean boolean18 = properties14.isEmpty();
        java.util.Set<java.lang.Object> objSet19 = properties14.keySet();
        boolean boolean20 = properties14.isEmpty();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet21 = properties14.entrySet();
        java.util.Properties properties22 = new java.util.Properties();
        java.lang.Object obj24 = properties22.remove((java.lang.Object) 0.0d);
        boolean boolean25 = properties22.isEmpty();
        java.lang.Object obj28 = properties22.setProperty("", "hi!");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties29 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties29.setSerialJtaTransactions(false);
        boolean boolean32 = properties14.remove((java.lang.Object) properties22, (java.lang.Object) atomikosProperties29);
        java.util.Properties properties33 = new java.util.Properties(properties22);
        int int34 = properties33.size();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties36 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties36.setSerialJtaTransactions(false);
        boolean boolean39 = atomikosProperties36.isSerialJtaTransactions();
        java.lang.String str40 = atomikosProperties36.getService();
        boolean boolean41 = atomikosProperties36.isEnableLogging();
        java.lang.String str42 = atomikosProperties36.getTransactionManagerUniqueName();
        boolean boolean43 = properties33.remove((java.lang.Object) (byte) 1, (java.lang.Object) atomikosProperties36);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties44 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties44.setSerialJtaTransactions(false);
        atomikosProperties44.setThreadedTwoPhaseCommit(true);
        atomikosProperties44.setEnableLogging(false);
        boolean boolean51 = atomikosProperties44.isSerialJtaTransactions();
        int int52 = atomikosProperties44.getMaxActives();
        boolean boolean53 = atomikosProperties44.isSerialJtaTransactions();
        boolean boolean54 = properties0.remove((java.lang.Object) properties33, (java.lang.Object) boolean53);
        java.util.Set<java.lang.String> strSet55 = properties33.stringPropertyNames();
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(strSet3);
        org.junit.Assert.assertNull(obj7);
        org.junit.Assert.assertNotNull(strSet8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(objCollection10);
        org.junit.Assert.assertNotNull(wildcardEnumeration11);
        org.junit.Assert.assertNull(obj13);
        org.junit.Assert.assertNull(obj16);
        org.junit.Assert.assertNotNull(objEnumeration17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(objSet19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNotNull(objEntrySet21);
        org.junit.Assert.assertNull(obj24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNull(obj28);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 0 + "'", int34 == 0);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNull(str40);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertNull(str42);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + 50 + "'", int52 == 50);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertNotNull(strSet55);
    }

    @Test
    public void test5402() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test5402");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        boolean boolean3 = properties0.isEmpty();
        java.util.Enumeration<java.lang.Object> objEnumeration4 = properties0.elements();
        java.lang.Object obj7 = properties0.replace((java.lang.Object) 1, (java.lang.Object) 1);
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet8 = properties0.entrySet();
        java.util.Enumeration<?> wildcardEnumeration9 = properties0.propertyNames();
        java.lang.Object obj10 = new java.lang.Object();
        java.lang.Class<?> wildcardClass11 = obj10.getClass();
        java.util.Properties properties12 = new java.util.Properties();
        java.util.Collection<java.lang.Object> objCollection13 = properties12.values();
        java.util.Enumeration<java.lang.Object> objEnumeration14 = properties12.keys();
        java.lang.Object obj17 = properties12.setProperty("{}", "{}");
        java.util.Set<java.lang.String> strSet18 = properties12.stringPropertyNames();
        java.util.Properties properties19 = new java.util.Properties();
        boolean boolean21 = properties19.contains((java.lang.Object) 100.0d);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties22 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties22.setSerialJtaTransactions(false);
        atomikosProperties22.setThreadedTwoPhaseCommit(true);
        atomikosProperties22.setSerialJtaTransactions(false);
        java.lang.String str29 = atomikosProperties22.getService();
        boolean boolean30 = properties19.containsKey((java.lang.Object) atomikosProperties22);
        boolean boolean31 = properties12.containsKey((java.lang.Object) properties19);
        java.lang.String str33 = properties12.getProperty("");
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet34 = properties12.entrySet();
        java.lang.Object obj35 = properties0.putIfAbsent(obj10, (java.lang.Object) objEntrySet34);
        java.lang.String str37 = properties0.getProperty("{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=false, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(objEnumeration4);
        org.junit.Assert.assertNull(obj7);
        org.junit.Assert.assertNotNull(objEntrySet8);
        org.junit.Assert.assertNotNull(wildcardEnumeration9);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertNotNull(objCollection13);
        org.junit.Assert.assertNotNull(objEnumeration14);
        org.junit.Assert.assertNull(obj17);
        org.junit.Assert.assertNotNull(strSet18);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNull(str29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNull(str33);
        org.junit.Assert.assertNotNull(objEntrySet34);
        org.junit.Assert.assertNull(obj35);
        org.junit.Assert.assertNull(str37);
    }

    @Test
    public void test5403() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test5403");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration3 = properties0.elements();
        boolean boolean4 = properties0.isEmpty();
        java.util.Set<java.lang.Object> objSet5 = properties0.keySet();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties6 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties6.setSerialJtaTransactions(false);
        atomikosProperties6.setThreadedTwoPhaseCommit(true);
        atomikosProperties6.setThreadedTwoPhaseCommit(true);
        java.util.Properties properties13 = atomikosProperties6.asProperties();
        int int14 = atomikosProperties6.getMaxActives();
        java.util.Properties properties15 = new java.util.Properties();
        java.lang.Object obj17 = properties15.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration18 = properties15.elements();
        boolean boolean19 = properties15.isEmpty();
        java.util.Set<java.lang.Object> objSet20 = properties15.keySet();
        boolean boolean22 = properties15.containsKey((java.lang.Object) (-1.0f));
        java.lang.Object obj23 = properties0.put((java.lang.Object) atomikosProperties6, (java.lang.Object) properties15);
        java.lang.String str24 = properties0.toString();
        java.util.Enumeration<java.lang.Object> objEnumeration25 = properties0.keys();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties26 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties26.setSerialJtaTransactions(false);
        atomikosProperties26.setThreadedTwoPhaseCommit(true);
        atomikosProperties26.setSerialJtaTransactions(false);
        java.lang.String str33 = atomikosProperties26.getService();
        atomikosProperties26.setMaxTimeout(1L);
        java.lang.String str36 = atomikosProperties26.getTransactionManagerUniqueName();
        atomikosProperties26.setTransactionManagerUniqueName("{=hi!}");
        java.util.Properties properties39 = new java.util.Properties();
        java.util.Properties properties40 = new java.util.Properties();
        java.lang.Object obj42 = properties40.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet43 = properties40.stringPropertyNames();
        boolean boolean44 = properties39.containsValue((java.lang.Object) properties40);
        java.util.Collection<java.lang.Object> objCollection45 = properties39.values();
        java.util.Enumeration<?> wildcardEnumeration46 = properties39.propertyNames();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet47 = properties39.entrySet();
        java.lang.Object obj48 = properties0.getOrDefault((java.lang.Object) atomikosProperties26, (java.lang.Object) objEntrySet47);
        atomikosProperties26.setForceShutdownOnVmExit(false);
        atomikosProperties26.setLogBaseName("{hi!=[], {}={}}");
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(objEnumeration3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(objSet5);
        org.junit.Assert.assertNotNull(properties13);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 50 + "'", int14 == 50);
        org.junit.Assert.assertNull(obj17);
        org.junit.Assert.assertNotNull(objEnumeration18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(objSet20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNull(obj23);
        org.junit.Assert.assertNotNull(objEnumeration25);
        org.junit.Assert.assertNull(str33);
        org.junit.Assert.assertNull(str36);
        org.junit.Assert.assertNull(obj42);
        org.junit.Assert.assertNotNull(strSet43);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(objCollection45);
        org.junit.Assert.assertNotNull(wildcardEnumeration46);
        org.junit.Assert.assertNotNull(objEntrySet47);
        org.junit.Assert.assertNotNull(obj48);
// flaky:         org.junit.Assert.assertEquals(obj48.toString(), "[]");
// flaky:         org.junit.Assert.assertEquals(java.lang.String.valueOf(obj48), "[]");
// flaky:         org.junit.Assert.assertEquals(java.util.Objects.toString(obj48), "[]");
    }

    @Test
    public void test5404() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test5404");
        java.util.Properties properties0 = new java.util.Properties();
        java.util.Properties properties1 = new java.util.Properties();
        java.lang.Object obj3 = properties1.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet4 = properties1.stringPropertyNames();
        boolean boolean5 = properties0.containsValue((java.lang.Object) properties1);
        java.util.Properties properties6 = new java.util.Properties();
        java.lang.Object obj8 = properties6.remove((java.lang.Object) 0.0d);
        boolean boolean10 = properties6.containsValue((java.lang.Object) "hi!");
        boolean boolean11 = properties1.contains((java.lang.Object) "hi!");
        java.lang.Object obj12 = properties1.clone();
        java.util.Set<java.lang.Object> objSet13 = properties1.keySet();
        org.junit.Assert.assertNull(obj3);
        org.junit.Assert.assertNotNull(strSet4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNull(obj8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(obj12);
        org.junit.Assert.assertEquals(obj12.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj12), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj12), "{}");
        org.junit.Assert.assertNotNull(objSet13);
    }

    @Test
    public void test5405() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test5405");
        java.util.Properties properties0 = new java.util.Properties();
        java.util.Properties properties1 = new java.util.Properties();
        java.lang.Object obj3 = properties1.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet4 = properties1.stringPropertyNames();
        boolean boolean5 = properties0.containsValue((java.lang.Object) properties1);
        java.util.Properties properties6 = new java.util.Properties();
        java.lang.Object obj8 = properties6.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet9 = properties6.stringPropertyNames();
        java.util.Properties properties10 = new java.util.Properties();
        java.util.Properties properties11 = new java.util.Properties();
        java.lang.Object obj13 = properties11.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet14 = properties11.stringPropertyNames();
        boolean boolean15 = properties10.containsValue((java.lang.Object) properties11);
        java.util.Collection<java.lang.Object> objCollection16 = properties10.values();
        java.util.Enumeration<?> wildcardEnumeration17 = properties10.propertyNames();
        java.lang.Object obj19 = properties6.put((java.lang.Object) wildcardEnumeration17, (java.lang.Object) 10.0d);
        java.util.Properties properties20 = new java.util.Properties();
        java.lang.Object obj22 = properties20.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration23 = properties20.elements();
        boolean boolean24 = properties20.isEmpty();
        java.util.Set<java.lang.Object> objSet25 = properties20.keySet();
        boolean boolean26 = properties20.isEmpty();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet27 = properties20.entrySet();
        java.util.Properties properties28 = new java.util.Properties();
        java.lang.Object obj30 = properties28.remove((java.lang.Object) 0.0d);
        boolean boolean31 = properties28.isEmpty();
        java.lang.Object obj34 = properties28.setProperty("", "hi!");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties35 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties35.setSerialJtaTransactions(false);
        boolean boolean38 = properties20.remove((java.lang.Object) properties28, (java.lang.Object) atomikosProperties35);
        java.util.Properties properties39 = new java.util.Properties(properties28);
        int int40 = properties39.size();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties42 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties42.setSerialJtaTransactions(false);
        boolean boolean45 = atomikosProperties42.isSerialJtaTransactions();
        java.lang.String str46 = atomikosProperties42.getService();
        boolean boolean47 = atomikosProperties42.isEnableLogging();
        java.lang.String str48 = atomikosProperties42.getTransactionManagerUniqueName();
        boolean boolean49 = properties39.remove((java.lang.Object) (byte) 1, (java.lang.Object) atomikosProperties42);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties50 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties50.setSerialJtaTransactions(false);
        atomikosProperties50.setThreadedTwoPhaseCommit(true);
        atomikosProperties50.setEnableLogging(false);
        boolean boolean57 = atomikosProperties50.isSerialJtaTransactions();
        int int58 = atomikosProperties50.getMaxActives();
        boolean boolean59 = atomikosProperties50.isSerialJtaTransactions();
        boolean boolean60 = properties6.remove((java.lang.Object) properties39, (java.lang.Object) boolean59);
        java.util.Properties properties61 = new java.util.Properties();
        java.lang.Object obj63 = properties61.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration64 = properties61.elements();
        boolean boolean65 = properties61.isEmpty();
        java.util.Enumeration<java.lang.Object> objEnumeration66 = properties61.elements();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet67 = properties61.entrySet();
        java.util.Set<java.lang.String> strSet68 = properties61.stringPropertyNames();
        java.util.Properties properties69 = new java.util.Properties();
        java.lang.Object obj71 = properties69.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration72 = properties69.elements();
        boolean boolean73 = properties69.isEmpty();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet74 = properties69.entrySet();
        boolean boolean75 = properties61.contains((java.lang.Object) properties69);
        java.util.Properties properties76 = new java.util.Properties();
        java.lang.Object obj78 = properties76.remove((java.lang.Object) 0.0d);
        java.util.Properties properties79 = new java.util.Properties();
        java.util.Collection<java.lang.Object> objCollection80 = properties79.values();
        java.util.Enumeration<java.lang.Object> objEnumeration81 = properties79.keys();
        java.util.Properties properties82 = new java.util.Properties();
        java.lang.Object obj84 = properties82.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration85 = properties82.elements();
        boolean boolean86 = properties82.isEmpty();
        java.util.Set<java.lang.Object> objSet87 = properties82.keySet();
        java.util.Enumeration<java.lang.Object> objEnumeration88 = properties82.keys();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet89 = properties82.entrySet();
        java.lang.Object obj90 = properties76.put((java.lang.Object) properties79, (java.lang.Object) properties82);
        java.lang.Object obj91 = properties79.clone();
        boolean boolean92 = properties61.containsKey((java.lang.Object) properties79);
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet93 = properties79.entrySet();
        java.util.Enumeration<java.lang.Object> objEnumeration94 = properties79.elements();
        java.lang.Object obj95 = properties1.putIfAbsent((java.lang.Object) properties6, (java.lang.Object) properties79);
        int int96 = properties1.size();
        org.junit.Assert.assertNull(obj3);
        org.junit.Assert.assertNotNull(strSet4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNull(obj8);
        org.junit.Assert.assertNotNull(strSet9);
        org.junit.Assert.assertNull(obj13);
        org.junit.Assert.assertNotNull(strSet14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(objCollection16);
        org.junit.Assert.assertNotNull(wildcardEnumeration17);
        org.junit.Assert.assertNull(obj19);
        org.junit.Assert.assertNull(obj22);
        org.junit.Assert.assertNotNull(objEnumeration23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNotNull(objSet25);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertNotNull(objEntrySet27);
        org.junit.Assert.assertNull(obj30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNull(obj34);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 0 + "'", int40 == 0);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNull(str46);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertNull(str48);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + 50 + "'", int58 == 50);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertNull(obj63);
        org.junit.Assert.assertNotNull(objEnumeration64);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65 == true);
        org.junit.Assert.assertNotNull(objEnumeration66);
        org.junit.Assert.assertNotNull(objEntrySet67);
        org.junit.Assert.assertNotNull(strSet68);
        org.junit.Assert.assertNull(obj71);
        org.junit.Assert.assertNotNull(objEnumeration72);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + true + "'", boolean73 == true);
        org.junit.Assert.assertNotNull(objEntrySet74);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
        org.junit.Assert.assertNull(obj78);
        org.junit.Assert.assertNotNull(objCollection80);
        org.junit.Assert.assertNotNull(objEnumeration81);
        org.junit.Assert.assertNull(obj84);
        org.junit.Assert.assertNotNull(objEnumeration85);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + true + "'", boolean86 == true);
        org.junit.Assert.assertNotNull(objSet87);
        org.junit.Assert.assertNotNull(objEnumeration88);
        org.junit.Assert.assertNotNull(objEntrySet89);
        org.junit.Assert.assertNull(obj90);
        org.junit.Assert.assertNotNull(obj91);
        org.junit.Assert.assertEquals(obj91.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj91), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj91), "{}");
        org.junit.Assert.assertTrue("'" + boolean92 + "' != '" + false + "'", boolean92 == false);
        org.junit.Assert.assertNotNull(objEntrySet93);
        org.junit.Assert.assertNotNull(objEnumeration94);
        org.junit.Assert.assertNull(obj95);
        org.junit.Assert.assertTrue("'" + int96 + "' != '" + 1 + "'", int96 == 1);
    }

    @Test
    public void test5406() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test5406");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration3 = properties0.elements();
        boolean boolean4 = properties0.isEmpty();
        java.util.Enumeration<java.lang.Object> objEnumeration5 = properties0.elements();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet6 = properties0.entrySet();
        java.util.Set<java.lang.String> strSet7 = properties0.stringPropertyNames();
        java.util.Properties properties8 = new java.util.Properties();
        java.lang.Object obj10 = properties8.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration11 = properties8.elements();
        boolean boolean12 = properties8.isEmpty();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet13 = properties8.entrySet();
        boolean boolean14 = properties0.contains((java.lang.Object) properties8);
        java.util.Properties properties15 = new java.util.Properties();
        java.lang.Object obj17 = properties15.remove((java.lang.Object) 0.0d);
        java.util.Properties properties18 = new java.util.Properties();
        java.util.Collection<java.lang.Object> objCollection19 = properties18.values();
        java.util.Enumeration<java.lang.Object> objEnumeration20 = properties18.keys();
        java.util.Properties properties21 = new java.util.Properties();
        java.lang.Object obj23 = properties21.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration24 = properties21.elements();
        boolean boolean25 = properties21.isEmpty();
        java.util.Set<java.lang.Object> objSet26 = properties21.keySet();
        java.util.Enumeration<java.lang.Object> objEnumeration27 = properties21.keys();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet28 = properties21.entrySet();
        java.lang.Object obj29 = properties15.put((java.lang.Object) properties18, (java.lang.Object) properties21);
        java.lang.Object obj30 = properties18.clone();
        boolean boolean31 = properties0.containsKey((java.lang.Object) properties18);
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet32 = properties18.entrySet();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties33 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties33.setSerialJtaTransactions(false);
        atomikosProperties33.setThreadedTwoPhaseCommit(true);
        atomikosProperties33.setThreadedTwoPhaseCommit(true);
        atomikosProperties33.setLogBaseName("{{}=tmlog}");
        boolean boolean42 = properties18.contains((java.lang.Object) atomikosProperties33);
        java.util.Set<java.lang.String> strSet43 = properties18.stringPropertyNames();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties44 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties44.setSerialJtaTransactions(false);
        boolean boolean47 = atomikosProperties44.isThreadedTwoPhaseCommit();
        atomikosProperties44.setTransactionManagerUniqueName("hi!");
        java.lang.String str50 = atomikosProperties44.getLogBaseName();
        java.util.Properties properties51 = new java.util.Properties();
        java.lang.Object obj53 = properties51.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration54 = properties51.elements();
        boolean boolean55 = properties51.isEmpty();
        java.util.Set<java.lang.Object> objSet56 = properties51.keySet();
        boolean boolean57 = properties51.isEmpty();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet58 = properties51.entrySet();
        java.util.Properties properties59 = new java.util.Properties();
        java.lang.Object obj61 = properties59.remove((java.lang.Object) 0.0d);
        boolean boolean62 = properties59.isEmpty();
        java.lang.Object obj65 = properties59.setProperty("", "hi!");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties66 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties66.setSerialJtaTransactions(false);
        boolean boolean69 = properties51.remove((java.lang.Object) properties59, (java.lang.Object) atomikosProperties66);
        java.lang.String str70 = atomikosProperties66.getTransactionManagerUniqueName();
        atomikosProperties66.setMaxActives(50);
        atomikosProperties66.setLogBaseName("{{{}={}}={}}");
        java.lang.String str75 = atomikosProperties66.getTransactionManagerUniqueName();
        boolean boolean76 = properties18.remove((java.lang.Object) atomikosProperties44, (java.lang.Object) atomikosProperties66);
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(objEnumeration3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(objEnumeration5);
        org.junit.Assert.assertNotNull(objEntrySet6);
        org.junit.Assert.assertNotNull(strSet7);
        org.junit.Assert.assertNull(obj10);
        org.junit.Assert.assertNotNull(objEnumeration11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(objEntrySet13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNull(obj17);
        org.junit.Assert.assertNotNull(objCollection19);
        org.junit.Assert.assertNotNull(objEnumeration20);
        org.junit.Assert.assertNull(obj23);
        org.junit.Assert.assertNotNull(objEnumeration24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(objSet26);
        org.junit.Assert.assertNotNull(objEnumeration27);
        org.junit.Assert.assertNotNull(objEntrySet28);
        org.junit.Assert.assertNull(obj29);
        org.junit.Assert.assertNotNull(obj30);
        org.junit.Assert.assertEquals(obj30.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj30), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj30), "{}");
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(objEntrySet32);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(strSet43);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "tmlog" + "'", str50, "tmlog");
        org.junit.Assert.assertNull(obj53);
        org.junit.Assert.assertNotNull(objEnumeration54);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertNotNull(objSet56);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertNotNull(objEntrySet58);
        org.junit.Assert.assertNull(obj61);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + true + "'", boolean62 == true);
        org.junit.Assert.assertNull(obj65);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertNull(str70);
        org.junit.Assert.assertNull(str75);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
    }

    @Test
    public void test5407() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test5407");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        boolean boolean3 = properties0.isEmpty();
        java.lang.Object obj6 = properties0.setProperty("", "hi!");
        java.util.Properties properties7 = new java.util.Properties();
        java.lang.Object obj9 = properties7.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration10 = properties7.elements();
        boolean boolean11 = properties7.isEmpty();
        java.util.Set<java.lang.Object> objSet12 = properties7.keySet();
        boolean boolean13 = properties7.isEmpty();
        java.util.Properties properties14 = new java.util.Properties();
        java.util.Collection<java.lang.Object> objCollection15 = properties14.values();
        java.util.Enumeration<java.lang.Object> objEnumeration16 = properties14.keys();
        java.lang.Object obj17 = properties7.remove((java.lang.Object) properties14);
        java.lang.Object obj18 = properties0.get((java.lang.Object) properties14);
        java.util.Enumeration<java.lang.Object> objEnumeration19 = properties14.keys();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties20 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties20.setSerialJtaTransactions(false);
        atomikosProperties20.setThreadedTwoPhaseCommit(true);
        atomikosProperties20.setMaxTimeout((long) '#');
        boolean boolean27 = atomikosProperties20.isForceShutdownOnVmExit();
        long long28 = atomikosProperties20.getCheckpointInterval();
        java.lang.Object obj29 = new java.lang.Object();
        boolean boolean31 = properties14.replace((java.lang.Object) long28, obj29, (java.lang.Object) "hi!");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties32 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties32.setSerialJtaTransactions(false);
        boolean boolean35 = atomikosProperties32.isSerialJtaTransactions();
        atomikosProperties32.setTransactionManagerUniqueName("hi!");
        java.lang.String str38 = atomikosProperties32.getLogBaseName();
        java.lang.String str39 = atomikosProperties32.getLogBaseName();
        boolean boolean40 = atomikosProperties32.isSerialJtaTransactions();
        java.util.Properties properties41 = new java.util.Properties();
        java.util.Properties properties42 = new java.util.Properties();
        java.lang.Object obj44 = properties42.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet45 = properties42.stringPropertyNames();
        boolean boolean46 = properties41.containsValue((java.lang.Object) properties42);
        java.util.Properties properties47 = new java.util.Properties();
        java.lang.Object obj49 = properties47.remove((java.lang.Object) 0.0d);
        boolean boolean51 = properties47.containsValue((java.lang.Object) "hi!");
        boolean boolean52 = properties42.contains((java.lang.Object) "hi!");
        boolean boolean53 = properties14.remove((java.lang.Object) atomikosProperties32, (java.lang.Object) boolean52);
        java.util.Collection<java.lang.Object> objCollection54 = properties14.values();
        properties14.clear();
        java.util.Properties properties56 = new java.util.Properties();
        java.lang.Object obj58 = properties56.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration59 = properties56.elements();
        boolean boolean60 = properties56.isEmpty();
        java.lang.Object obj63 = properties56.setProperty("tmlog", "");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties64 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties64.setSerialJtaTransactions(false);
        boolean boolean67 = atomikosProperties64.isSerialJtaTransactions();
        atomikosProperties64.setTransactionManagerUniqueName("hi!");
        atomikosProperties64.setForceShutdownOnVmExit(false);
        atomikosProperties64.setDefaultJtaTimeout((long) (byte) 10);
        java.lang.String str74 = atomikosProperties64.getTransactionManagerUniqueName();
        java.util.Properties properties75 = new java.util.Properties();
        java.util.Properties properties76 = new java.util.Properties();
        java.lang.Object obj78 = properties76.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet79 = properties76.stringPropertyNames();
        boolean boolean80 = properties75.containsValue((java.lang.Object) properties76);
        java.util.Collection<java.lang.Object> objCollection81 = properties75.values();
        java.util.Properties properties83 = new java.util.Properties();
        java.lang.Object obj85 = properties83.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration86 = properties83.elements();
        boolean boolean87 = properties83.isEmpty();
        java.util.Set<java.lang.Object> objSet88 = properties83.keySet();
        java.lang.Object obj89 = properties75.putIfAbsent((java.lang.Object) "hi!", (java.lang.Object) objSet88);
        java.util.Set<java.lang.Object> objSet90 = properties75.keySet();
        java.util.Set<java.lang.Object> objSet91 = properties75.keySet();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet92 = properties75.entrySet();
        java.util.Set<java.lang.Object> objSet93 = properties75.keySet();
        java.lang.Object obj94 = properties56.replace((java.lang.Object) atomikosProperties64, (java.lang.Object) properties75);
        boolean boolean95 = properties14.containsKey((java.lang.Object) properties75);
        java.util.Collection<java.lang.Object> objCollection96 = properties14.values();
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNull(obj6);
        org.junit.Assert.assertNull(obj9);
        org.junit.Assert.assertNotNull(objEnumeration10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNotNull(objSet12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(objCollection15);
        org.junit.Assert.assertNotNull(objEnumeration16);
        org.junit.Assert.assertNull(obj17);
        org.junit.Assert.assertNull(obj18);
        org.junit.Assert.assertNotNull(objEnumeration19);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertTrue("'" + long28 + "' != '" + 500L + "'", long28 == 500L);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "tmlog" + "'", str38, "tmlog");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "tmlog" + "'", str39, "tmlog");
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNull(obj44);
        org.junit.Assert.assertNotNull(strSet45);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNull(obj49);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertNotNull(objCollection54);
        org.junit.Assert.assertNull(obj58);
        org.junit.Assert.assertNotNull(objEnumeration59);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertNull(obj63);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertEquals("'" + str74 + "' != '" + "hi!" + "'", str74, "hi!");
        org.junit.Assert.assertNull(obj78);
        org.junit.Assert.assertNotNull(strSet79);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", boolean80 == false);
        org.junit.Assert.assertNotNull(objCollection81);
        org.junit.Assert.assertNull(obj85);
        org.junit.Assert.assertNotNull(objEnumeration86);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + true + "'", boolean87 == true);
        org.junit.Assert.assertNotNull(objSet88);
        org.junit.Assert.assertNull(obj89);
        org.junit.Assert.assertNotNull(objSet90);
        org.junit.Assert.assertNotNull(objSet91);
        org.junit.Assert.assertNotNull(objEntrySet92);
        org.junit.Assert.assertNotNull(objSet93);
        org.junit.Assert.assertNull(obj94);
        org.junit.Assert.assertTrue("'" + boolean95 + "' != '" + false + "'", boolean95 == false);
        org.junit.Assert.assertNotNull(objCollection96);
    }

    @Test
    public void test5408() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test5408");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setSerialJtaTransactions(false);
        atomikosProperties0.setThreadedTwoPhaseCommit(true);
        atomikosProperties0.setEnableLogging(false);
        boolean boolean7 = atomikosProperties0.isSerialJtaTransactions();
        int int8 = atomikosProperties0.getMaxActives();
        atomikosProperties0.setDefaultJtaTimeout((long) '#');
        java.lang.String str11 = atomikosProperties0.getService();
        boolean boolean12 = atomikosProperties0.isSerialJtaTransactions();
        atomikosProperties0.setEnableLogging(false);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 50 + "'", int8 == 50);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
    }

    @Test
    public void test5409() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test5409");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration3 = properties0.elements();
        boolean boolean4 = properties0.isEmpty();
        java.lang.Object obj7 = properties0.setProperty("tmlog", "");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties8 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties8.setSerialJtaTransactions(false);
        boolean boolean11 = atomikosProperties8.isSerialJtaTransactions();
        atomikosProperties8.setTransactionManagerUniqueName("hi!");
        atomikosProperties8.setForceShutdownOnVmExit(false);
        atomikosProperties8.setDefaultJtaTimeout((long) (byte) 10);
        java.lang.String str18 = atomikosProperties8.getTransactionManagerUniqueName();
        java.util.Properties properties19 = new java.util.Properties();
        java.util.Properties properties20 = new java.util.Properties();
        java.lang.Object obj22 = properties20.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet23 = properties20.stringPropertyNames();
        boolean boolean24 = properties19.containsValue((java.lang.Object) properties20);
        java.util.Collection<java.lang.Object> objCollection25 = properties19.values();
        java.util.Properties properties27 = new java.util.Properties();
        java.lang.Object obj29 = properties27.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration30 = properties27.elements();
        boolean boolean31 = properties27.isEmpty();
        java.util.Set<java.lang.Object> objSet32 = properties27.keySet();
        java.lang.Object obj33 = properties19.putIfAbsent((java.lang.Object) "hi!", (java.lang.Object) objSet32);
        java.util.Set<java.lang.Object> objSet34 = properties19.keySet();
        java.util.Set<java.lang.Object> objSet35 = properties19.keySet();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet36 = properties19.entrySet();
        java.util.Set<java.lang.Object> objSet37 = properties19.keySet();
        java.lang.Object obj38 = properties0.replace((java.lang.Object) atomikosProperties8, (java.lang.Object) properties19);
        java.util.Enumeration<java.lang.Object> objEnumeration39 = properties0.keys();
        java.util.Properties properties40 = new java.util.Properties();
        java.lang.Object obj42 = properties40.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet43 = properties40.stringPropertyNames();
        java.util.Properties properties44 = new java.util.Properties();
        java.lang.Object obj46 = properties44.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet47 = properties44.stringPropertyNames();
        java.lang.Object obj49 = properties40.put((java.lang.Object) strSet47, (java.lang.Object) 0.0d);
        boolean boolean50 = properties0.equals((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration51 = properties0.keys();
        properties0.clear();
        properties0.clear();
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(objEnumeration3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNull(obj7);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "hi!" + "'", str18, "hi!");
        org.junit.Assert.assertNull(obj22);
        org.junit.Assert.assertNotNull(strSet23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(objCollection25);
        org.junit.Assert.assertNull(obj29);
        org.junit.Assert.assertNotNull(objEnumeration30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNotNull(objSet32);
        org.junit.Assert.assertNull(obj33);
        org.junit.Assert.assertNotNull(objSet34);
        org.junit.Assert.assertNotNull(objSet35);
        org.junit.Assert.assertNotNull(objEntrySet36);
        org.junit.Assert.assertNotNull(objSet37);
        org.junit.Assert.assertNull(obj38);
        org.junit.Assert.assertNotNull(objEnumeration39);
        org.junit.Assert.assertNull(obj42);
        org.junit.Assert.assertNotNull(strSet43);
        org.junit.Assert.assertNull(obj46);
        org.junit.Assert.assertNotNull(strSet47);
        org.junit.Assert.assertNull(obj49);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertNotNull(objEnumeration51);
    }

    @Test
    public void test5410() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test5410");
        java.util.Properties properties0 = new java.util.Properties();
        java.util.Properties properties1 = new java.util.Properties();
        java.lang.Object obj3 = properties1.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet4 = properties1.stringPropertyNames();
        boolean boolean5 = properties0.containsValue((java.lang.Object) properties1);
        java.util.Properties properties6 = new java.util.Properties();
        java.lang.Object obj8 = properties6.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration9 = properties6.elements();
        boolean boolean10 = properties6.isEmpty();
        java.util.Set<java.lang.Object> objSet11 = properties6.keySet();
        boolean boolean12 = properties6.isEmpty();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet13 = properties6.entrySet();
        java.util.Properties properties14 = new java.util.Properties();
        java.lang.Object obj16 = properties14.remove((java.lang.Object) 0.0d);
        boolean boolean17 = properties14.isEmpty();
        java.lang.Object obj20 = properties14.setProperty("", "hi!");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties21 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties21.setSerialJtaTransactions(false);
        boolean boolean24 = properties6.remove((java.lang.Object) properties14, (java.lang.Object) atomikosProperties21);
        boolean boolean25 = properties0.equals((java.lang.Object) atomikosProperties21);
        java.util.Properties properties26 = new java.util.Properties();
        java.lang.Object obj28 = properties26.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration29 = properties26.elements();
        boolean boolean30 = properties26.isEmpty();
        java.util.Set<java.lang.Object> objSet31 = properties26.keySet();
        boolean boolean32 = properties26.isEmpty();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet33 = properties26.entrySet();
        java.util.Properties properties34 = new java.util.Properties();
        java.lang.Object obj36 = properties34.remove((java.lang.Object) 0.0d);
        boolean boolean37 = properties34.isEmpty();
        java.lang.Object obj40 = properties34.setProperty("", "hi!");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties41 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties41.setSerialJtaTransactions(false);
        boolean boolean44 = properties26.remove((java.lang.Object) properties34, (java.lang.Object) atomikosProperties41);
        java.util.Properties properties45 = new java.util.Properties(properties34);
        java.lang.Object obj46 = properties34.clone();
        java.lang.Object obj47 = properties0.get(obj46);
        java.util.Enumeration<java.lang.Object> objEnumeration48 = properties0.keys();
        boolean boolean49 = properties0.isEmpty();
        java.lang.Object obj52 = properties0.setProperty("{hi!=[], {}={}}", "{}");
        org.junit.Assert.assertNull(obj3);
        org.junit.Assert.assertNotNull(strSet4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNull(obj8);
        org.junit.Assert.assertNotNull(objEnumeration9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(objSet11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(objEntrySet13);
        org.junit.Assert.assertNull(obj16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNull(obj20);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNull(obj28);
        org.junit.Assert.assertNotNull(objEnumeration29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNotNull(objSet31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertNotNull(objEntrySet33);
        org.junit.Assert.assertNull(obj36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertNull(obj40);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(obj46);
        org.junit.Assert.assertEquals(obj46.toString(), "{=hi!}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj46), "{=hi!}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj46), "{=hi!}");
        org.junit.Assert.assertNull(obj47);
        org.junit.Assert.assertNotNull(objEnumeration48);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertNull(obj52);
    }

    @Test
    public void test5411() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test5411");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setSerialJtaTransactions(false);
        atomikosProperties0.setThreadedTwoPhaseCommit(true);
        atomikosProperties0.setMaxTimeout((long) '#');
        long long7 = atomikosProperties0.getCheckpointInterval();
        java.lang.String str8 = atomikosProperties0.getTransactionManagerUniqueName();
        atomikosProperties0.setTransactionManagerUniqueName("{=hi!}");
        atomikosProperties0.setCheckpointInterval((long) (-1));
        atomikosProperties0.setForceShutdownOnVmExit(false);
        atomikosProperties0.setForceShutdownOnVmExit(false);
        atomikosProperties0.setLogBaseName("{tmlog=}");
        long long19 = atomikosProperties0.getCheckpointInterval();
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + 500L + "'", long7 == 500L);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertTrue("'" + long19 + "' != '" + (-1L) + "'", long19 == (-1L));
    }

    @Test
    public void test5412() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test5412");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setSerialJtaTransactions(false);
        atomikosProperties0.setThreadedTwoPhaseCommit(true);
        atomikosProperties0.setMaxTimeout((long) '#');
        boolean boolean7 = atomikosProperties0.isEnableLogging();
        atomikosProperties0.setCheckpointInterval((long) (byte) -1);
        atomikosProperties0.setMaxActives((int) (byte) 100);
        atomikosProperties0.setTransactionManagerUniqueName("{=hi!}");
        atomikosProperties0.setDefaultJtaTimeout((long) 'a');
        boolean boolean16 = atomikosProperties0.isForceShutdownOnVmExit();
        java.util.Properties properties17 = atomikosProperties0.asProperties();
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(properties17);
    }

    @Test
    public void test5413() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test5413");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration3 = properties0.elements();
        boolean boolean4 = properties0.isEmpty();
        java.util.Set<java.lang.Object> objSet5 = properties0.keySet();
        java.lang.Object obj6 = properties0.clone();
        java.util.Properties properties7 = new java.util.Properties();
        java.util.Properties properties8 = new java.util.Properties();
        java.lang.Object obj10 = properties8.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet11 = properties8.stringPropertyNames();
        boolean boolean12 = properties7.containsValue((java.lang.Object) properties8);
        java.util.Collection<java.lang.Object> objCollection13 = properties7.values();
        java.lang.Object obj14 = properties7.clone();
        java.util.Properties properties15 = new java.util.Properties();
        java.lang.Object obj17 = properties15.remove((java.lang.Object) 0.0d);
        boolean boolean19 = properties15.containsValue((java.lang.Object) "hi!");
        java.lang.Object obj22 = properties15.put((java.lang.Object) (byte) -1, (java.lang.Object) 100L);
        java.util.Properties properties23 = new java.util.Properties();
        java.util.Properties properties24 = new java.util.Properties();
        java.lang.Object obj26 = properties24.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet27 = properties24.stringPropertyNames();
        boolean boolean28 = properties23.containsValue((java.lang.Object) properties24);
        java.util.Collection<java.lang.Object> objCollection29 = properties23.values();
        java.util.Properties properties31 = new java.util.Properties();
        java.lang.Object obj33 = properties31.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration34 = properties31.elements();
        boolean boolean35 = properties31.isEmpty();
        java.util.Set<java.lang.Object> objSet36 = properties31.keySet();
        java.lang.Object obj37 = properties23.putIfAbsent((java.lang.Object) "hi!", (java.lang.Object) objSet36);
        java.util.Set<java.lang.Object> objSet38 = properties23.keySet();
        boolean boolean39 = properties15.containsKey((java.lang.Object) properties23);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties40 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties40.setSerialJtaTransactions(false);
        boolean boolean43 = atomikosProperties40.isSerialJtaTransactions();
        atomikosProperties40.setCheckpointInterval((long) 10);
        atomikosProperties40.setForceShutdownOnVmExit(true);
        boolean boolean48 = properties0.replace((java.lang.Object) properties7, (java.lang.Object) properties15, (java.lang.Object) true);
        java.util.Enumeration<java.lang.Object> objEnumeration49 = properties15.elements();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties50 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties50.setSerialJtaTransactions(false);
        atomikosProperties50.setThreadedTwoPhaseCommit(true);
        atomikosProperties50.setMaxTimeout((long) '#');
        boolean boolean57 = atomikosProperties50.isEnableLogging();
        atomikosProperties50.setForceShutdownOnVmExit(true);
        atomikosProperties50.setForceShutdownOnVmExit(true);
        atomikosProperties50.setLogBaseDir("{=hi!}");
        java.util.Properties properties64 = atomikosProperties50.asProperties();
        atomikosProperties50.setLogBaseDir("{true=class org.springframework.boot.jta.atomikos.AtomikosProperties}");
        java.lang.Object obj67 = properties15.get((java.lang.Object) "{true=class org.springframework.boot.jta.atomikos.AtomikosProperties}");
        java.io.OutputStream outputStream68 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties15.store(outputStream68, "{com.atomikos.icatch.enable_logging=false, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=false, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(objEnumeration3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(objSet5);
        org.junit.Assert.assertNotNull(obj6);
        org.junit.Assert.assertEquals(obj6.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj6), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj6), "{}");
        org.junit.Assert.assertNull(obj10);
        org.junit.Assert.assertNotNull(strSet11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(objCollection13);
        org.junit.Assert.assertNotNull(obj14);
        org.junit.Assert.assertEquals(obj14.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj14), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj14), "{}");
        org.junit.Assert.assertNull(obj17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNull(obj22);
        org.junit.Assert.assertNull(obj26);
        org.junit.Assert.assertNotNull(strSet27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(objCollection29);
        org.junit.Assert.assertNull(obj33);
        org.junit.Assert.assertNotNull(objEnumeration34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertNotNull(objSet36);
        org.junit.Assert.assertNull(obj37);
        org.junit.Assert.assertNotNull(objSet38);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNotNull(objEnumeration49);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertNotNull(properties64);
        org.junit.Assert.assertNull(obj67);
    }

    @Test
    public void test5414() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test5414");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration3 = properties0.elements();
        boolean boolean4 = properties0.isEmpty();
        java.util.Set<java.lang.Object> objSet5 = properties0.keySet();
        boolean boolean7 = properties0.containsKey((java.lang.Object) (-1.0f));
        java.util.Collection<java.lang.Object> objCollection8 = properties0.values();
        java.lang.Object obj9 = properties0.clone();
        java.util.Properties properties10 = new java.util.Properties();
        java.lang.Object obj12 = properties10.remove((java.lang.Object) 0.0d);
        boolean boolean13 = properties10.isEmpty();
        java.util.Enumeration<java.lang.Object> objEnumeration14 = properties10.elements();
        java.lang.Object obj17 = properties10.replace((java.lang.Object) 1, (java.lang.Object) 1);
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet18 = properties10.entrySet();
        boolean boolean19 = properties0.contains((java.lang.Object) properties10);
        java.util.Properties properties20 = new java.util.Properties();
        java.util.Properties properties21 = new java.util.Properties();
        java.lang.Object obj23 = properties21.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet24 = properties21.stringPropertyNames();
        boolean boolean25 = properties20.containsValue((java.lang.Object) properties21);
        java.util.Collection<java.lang.Object> objCollection26 = properties20.values();
        java.util.Properties properties28 = new java.util.Properties();
        java.lang.Object obj30 = properties28.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration31 = properties28.elements();
        boolean boolean32 = properties28.isEmpty();
        java.util.Set<java.lang.Object> objSet33 = properties28.keySet();
        java.lang.Object obj34 = properties20.putIfAbsent((java.lang.Object) "hi!", (java.lang.Object) objSet33);
        java.util.Set<java.lang.Object> objSet35 = properties20.keySet();
        java.util.Set<java.lang.Object> objSet36 = properties20.keySet();
        java.util.Set<java.lang.Object> objSet37 = properties20.keySet();
        java.util.Properties properties38 = new java.util.Properties();
        java.lang.Object obj40 = properties38.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration41 = properties38.elements();
        boolean boolean42 = properties38.isEmpty();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet43 = properties38.entrySet();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties45 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties45.setSerialJtaTransactions(false);
        atomikosProperties45.setThreadedTwoPhaseCommit(true);
        atomikosProperties45.setMaxTimeout((long) '#');
        boolean boolean52 = atomikosProperties45.isForceShutdownOnVmExit();
        java.lang.Object obj53 = properties38.put((java.lang.Object) (short) 1, (java.lang.Object) atomikosProperties45);
        long long54 = atomikosProperties45.getDefaultJtaTimeout();
        atomikosProperties45.setMaxActives((int) (short) 1);
        java.lang.Class<?> wildcardClass57 = atomikosProperties45.getClass();
        java.util.Properties properties58 = new java.util.Properties();
        java.lang.Object obj60 = properties58.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration61 = properties58.elements();
        boolean boolean62 = properties58.isEmpty();
        java.util.Set<java.lang.Object> objSet63 = properties58.keySet();
        boolean boolean64 = properties58.isEmpty();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet65 = properties58.entrySet();
        java.util.Properties properties66 = new java.util.Properties();
        java.lang.Object obj68 = properties66.remove((java.lang.Object) 0.0d);
        boolean boolean69 = properties66.isEmpty();
        java.lang.Object obj72 = properties66.setProperty("", "hi!");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties73 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties73.setSerialJtaTransactions(false);
        boolean boolean76 = properties58.remove((java.lang.Object) properties66, (java.lang.Object) atomikosProperties73);
        java.util.Properties properties77 = new java.util.Properties(properties66);
        int int78 = properties77.size();
        int int79 = properties77.size();
        java.util.Properties properties80 = new java.util.Properties();
        java.lang.Object obj81 = properties77.get((java.lang.Object) properties80);
        boolean boolean82 = properties20.remove((java.lang.Object) atomikosProperties45, (java.lang.Object) properties80);
        boolean boolean83 = properties20.isEmpty();
        java.lang.String str85 = properties20.getProperty("{{}={}}");
        java.lang.Object obj86 = properties10.remove((java.lang.Object) "{{}={}}");
        java.lang.String str87 = properties10.toString();
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(objEnumeration3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(objSet5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(objCollection8);
        org.junit.Assert.assertNotNull(obj9);
        org.junit.Assert.assertEquals(obj9.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj9), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj9), "{}");
        org.junit.Assert.assertNull(obj12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(objEnumeration14);
        org.junit.Assert.assertNull(obj17);
        org.junit.Assert.assertNotNull(objEntrySet18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNull(obj23);
        org.junit.Assert.assertNotNull(strSet24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(objCollection26);
        org.junit.Assert.assertNull(obj30);
        org.junit.Assert.assertNotNull(objEnumeration31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertNotNull(objSet33);
        org.junit.Assert.assertNull(obj34);
        org.junit.Assert.assertNotNull(objSet35);
        org.junit.Assert.assertNotNull(objSet36);
        org.junit.Assert.assertNotNull(objSet37);
        org.junit.Assert.assertNull(obj40);
        org.junit.Assert.assertNotNull(objEnumeration41);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertNotNull(objEntrySet43);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNull(obj53);
        org.junit.Assert.assertTrue("'" + long54 + "' != '" + 10000L + "'", long54 == 10000L);
        org.junit.Assert.assertNotNull(wildcardClass57);
        org.junit.Assert.assertNull(obj60);
        org.junit.Assert.assertNotNull(objEnumeration61);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + true + "'", boolean62 == true);
        org.junit.Assert.assertNotNull(objSet63);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64 == true);
        org.junit.Assert.assertNotNull(objEntrySet65);
        org.junit.Assert.assertNull(obj68);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + true + "'", boolean69 == true);
        org.junit.Assert.assertNull(obj72);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
        org.junit.Assert.assertTrue("'" + int78 + "' != '" + 0 + "'", int78 == 0);
        org.junit.Assert.assertTrue("'" + int79 + "' != '" + 0 + "'", int79 == 0);
        org.junit.Assert.assertNull(obj81);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + false + "'", boolean82 == false);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + false + "'", boolean83 == false);
        org.junit.Assert.assertNull(str85);
        org.junit.Assert.assertNull(obj86);
        org.junit.Assert.assertEquals("'" + str87 + "' != '" + "{}" + "'", str87, "{}");
    }

    @Test
    public void test5415() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test5415");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setSerialJtaTransactions(false);
        atomikosProperties0.setThreadedTwoPhaseCommit(true);
        atomikosProperties0.setMaxTimeout((long) '#');
        boolean boolean7 = atomikosProperties0.isEnableLogging();
        atomikosProperties0.setCheckpointInterval((long) (byte) -1);
        atomikosProperties0.setCheckpointInterval(0L);
        java.lang.String str12 = atomikosProperties0.getService();
        atomikosProperties0.setForceShutdownOnVmExit(false);
        java.lang.String str15 = atomikosProperties0.getLogBaseDir();
        java.lang.String str16 = atomikosProperties0.getTransactionManagerUniqueName();
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNull(str15);
        org.junit.Assert.assertNull(str16);
    }

    @Test
    public void test5416() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test5416");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration3 = properties0.elements();
        int int4 = properties0.size();
        java.util.Properties properties5 = new java.util.Properties();
        java.lang.Object obj7 = properties5.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration8 = properties5.elements();
        boolean boolean9 = properties5.isEmpty();
        java.util.Set<java.lang.Object> objSet10 = properties5.keySet();
        boolean boolean11 = properties0.containsKey((java.lang.Object) objSet10);
        java.util.Enumeration<java.lang.Object> objEnumeration12 = properties0.keys();
        java.util.Properties properties13 = new java.util.Properties();
        java.lang.Object obj15 = properties13.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration16 = properties13.elements();
        boolean boolean17 = properties13.isEmpty();
        java.util.Set<java.lang.Object> objSet18 = properties13.keySet();
        java.util.Enumeration<java.lang.Object> objEnumeration19 = properties13.keys();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet20 = properties13.entrySet();
        boolean boolean22 = properties0.remove((java.lang.Object) properties13, (java.lang.Object) 1.0f);
        java.util.Collection<java.lang.Object> objCollection23 = properties0.values();
        java.io.OutputStream outputStream24 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties0.storeToXML(outputStream24, "{{}=tmlog}");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(objEnumeration3);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNull(obj7);
        org.junit.Assert.assertNotNull(objEnumeration8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertNotNull(objSet10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(objEnumeration12);
        org.junit.Assert.assertNull(obj15);
        org.junit.Assert.assertNotNull(objEnumeration16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(objSet18);
        org.junit.Assert.assertNotNull(objEnumeration19);
        org.junit.Assert.assertNotNull(objEntrySet20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(objCollection23);
    }

    @Test
    public void test5417() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test5417");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        boolean boolean3 = properties0.isEmpty();
        java.lang.Object obj6 = properties0.setProperty("", "hi!");
        java.util.Properties properties7 = new java.util.Properties();
        java.lang.Object obj9 = properties7.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration10 = properties7.elements();
        boolean boolean11 = properties7.isEmpty();
        java.util.Set<java.lang.Object> objSet12 = properties7.keySet();
        boolean boolean13 = properties7.isEmpty();
        java.util.Properties properties14 = new java.util.Properties();
        java.util.Collection<java.lang.Object> objCollection15 = properties14.values();
        java.util.Enumeration<java.lang.Object> objEnumeration16 = properties14.keys();
        java.lang.Object obj17 = properties7.remove((java.lang.Object) properties14);
        java.lang.Object obj18 = properties0.get((java.lang.Object) properties14);
        java.util.Enumeration<java.lang.Object> objEnumeration19 = properties14.keys();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties20 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties20.setSerialJtaTransactions(false);
        atomikosProperties20.setThreadedTwoPhaseCommit(true);
        atomikosProperties20.setMaxTimeout((long) '#');
        boolean boolean27 = atomikosProperties20.isForceShutdownOnVmExit();
        long long28 = atomikosProperties20.getCheckpointInterval();
        java.lang.Object obj29 = new java.lang.Object();
        boolean boolean31 = properties14.replace((java.lang.Object) long28, obj29, (java.lang.Object) "hi!");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties32 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties32.setSerialJtaTransactions(false);
        boolean boolean35 = atomikosProperties32.isSerialJtaTransactions();
        atomikosProperties32.setTransactionManagerUniqueName("hi!");
        java.lang.String str38 = atomikosProperties32.getLogBaseName();
        java.lang.String str39 = atomikosProperties32.getLogBaseName();
        boolean boolean40 = atomikosProperties32.isSerialJtaTransactions();
        java.util.Properties properties41 = new java.util.Properties();
        java.util.Properties properties42 = new java.util.Properties();
        java.lang.Object obj44 = properties42.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet45 = properties42.stringPropertyNames();
        boolean boolean46 = properties41.containsValue((java.lang.Object) properties42);
        java.util.Properties properties47 = new java.util.Properties();
        java.lang.Object obj49 = properties47.remove((java.lang.Object) 0.0d);
        boolean boolean51 = properties47.containsValue((java.lang.Object) "hi!");
        boolean boolean52 = properties42.contains((java.lang.Object) "hi!");
        boolean boolean53 = properties14.remove((java.lang.Object) atomikosProperties32, (java.lang.Object) boolean52);
        atomikosProperties32.setTransactionManagerUniqueName("{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=false, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=35, com.atomikos.icatch.threaded_2pc=true, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
        atomikosProperties32.setCheckpointInterval((long) 0);
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNull(obj6);
        org.junit.Assert.assertNull(obj9);
        org.junit.Assert.assertNotNull(objEnumeration10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNotNull(objSet12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(objCollection15);
        org.junit.Assert.assertNotNull(objEnumeration16);
        org.junit.Assert.assertNull(obj17);
        org.junit.Assert.assertNull(obj18);
        org.junit.Assert.assertNotNull(objEnumeration19);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertTrue("'" + long28 + "' != '" + 500L + "'", long28 == 500L);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "tmlog" + "'", str38, "tmlog");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "tmlog" + "'", str39, "tmlog");
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNull(obj44);
        org.junit.Assert.assertNotNull(strSet45);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNull(obj49);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
    }

    @Test
    public void test5418() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test5418");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration3 = properties0.elements();
        boolean boolean4 = properties0.isEmpty();
        java.util.Set<java.lang.Object> objSet5 = properties0.keySet();
        java.util.Enumeration<java.lang.Object> objEnumeration6 = properties0.keys();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet7 = properties0.entrySet();
        java.util.Properties properties9 = new java.util.Properties();
        java.lang.Object obj11 = properties9.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration12 = properties9.elements();
        boolean boolean13 = properties9.isEmpty();
        java.util.Set<java.lang.Object> objSet14 = properties9.keySet();
        boolean boolean15 = properties9.isEmpty();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties16 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties16.setSerialJtaTransactions(false);
        atomikosProperties16.setThreadedTwoPhaseCommit(true);
        atomikosProperties16.setMaxTimeout((long) '#');
        boolean boolean23 = atomikosProperties16.isEnableLogging();
        atomikosProperties16.setCheckpointInterval((long) (byte) -1);
        java.util.Properties properties26 = new java.util.Properties();
        java.util.Properties properties27 = new java.util.Properties();
        java.lang.Object obj29 = properties27.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet30 = properties27.stringPropertyNames();
        boolean boolean31 = properties26.containsValue((java.lang.Object) properties27);
        java.util.Collection<java.lang.Object> objCollection32 = properties26.values();
        java.lang.Object obj33 = properties9.replace((java.lang.Object) atomikosProperties16, (java.lang.Object) objCollection32);
        boolean boolean35 = properties0.replace((java.lang.Object) 100.0d, (java.lang.Object) objCollection32, (java.lang.Object) 10.0d);
        java.util.Properties properties36 = new java.util.Properties();
        java.lang.Object obj38 = properties36.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration39 = properties36.elements();
        int int40 = properties36.size();
        java.util.Properties properties41 = new java.util.Properties(properties36);
        java.util.Set<java.lang.String> strSet42 = properties36.stringPropertyNames();
        java.util.Properties properties43 = new java.util.Properties();
        java.lang.Object obj45 = properties43.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration46 = properties43.elements();
        boolean boolean47 = properties43.isEmpty();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet48 = properties43.entrySet();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties50 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties50.setSerialJtaTransactions(false);
        atomikosProperties50.setThreadedTwoPhaseCommit(true);
        atomikosProperties50.setMaxTimeout((long) '#');
        boolean boolean57 = atomikosProperties50.isForceShutdownOnVmExit();
        java.lang.Object obj58 = properties43.put((java.lang.Object) (short) 1, (java.lang.Object) atomikosProperties50);
        boolean boolean59 = atomikosProperties50.isSerialJtaTransactions();
        java.lang.Object obj60 = properties0.replace((java.lang.Object) properties36, (java.lang.Object) boolean59);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties61 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties61.setSerialJtaTransactions(false);
        atomikosProperties61.setThreadedTwoPhaseCommit(true);
        atomikosProperties61.setSerialJtaTransactions(false);
        java.lang.String str68 = atomikosProperties61.getService();
        boolean boolean69 = properties36.contains((java.lang.Object) atomikosProperties61);
        java.util.Enumeration<java.lang.Object> objEnumeration70 = properties36.keys();
        java.util.Enumeration<java.lang.Object> objEnumeration71 = properties36.keys();
        java.lang.String str73 = properties36.getProperty("{[]=0.0}");
        java.io.PrintWriter printWriter74 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties36.list(printWriter74);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(objEnumeration3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(objSet5);
        org.junit.Assert.assertNotNull(objEnumeration6);
        org.junit.Assert.assertNotNull(objEntrySet7);
        org.junit.Assert.assertNull(obj11);
        org.junit.Assert.assertNotNull(objEnumeration12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(objSet14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNull(obj29);
        org.junit.Assert.assertNotNull(strSet30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(objCollection32);
        org.junit.Assert.assertNull(obj33);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNull(obj38);
        org.junit.Assert.assertNotNull(objEnumeration39);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 0 + "'", int40 == 0);
        org.junit.Assert.assertNotNull(strSet42);
        org.junit.Assert.assertNull(obj45);
        org.junit.Assert.assertNotNull(objEnumeration46);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertNotNull(objEntrySet48);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertNull(obj58);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertNull(obj60);
        org.junit.Assert.assertNull(str68);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertNotNull(objEnumeration70);
        org.junit.Assert.assertNotNull(objEnumeration71);
        org.junit.Assert.assertNull(str73);
    }

    @Test
    public void test5419() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test5419");
        java.util.Properties properties0 = new java.util.Properties();
        java.util.Collection<java.lang.Object> objCollection1 = properties0.values();
        java.util.Properties properties2 = new java.util.Properties();
        java.lang.Object obj4 = properties2.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet5 = properties2.stringPropertyNames();
        java.util.Properties properties6 = new java.util.Properties();
        java.util.Properties properties7 = new java.util.Properties();
        java.lang.Object obj9 = properties7.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet10 = properties7.stringPropertyNames();
        boolean boolean11 = properties6.containsValue((java.lang.Object) properties7);
        java.util.Collection<java.lang.Object> objCollection12 = properties6.values();
        java.util.Enumeration<?> wildcardEnumeration13 = properties6.propertyNames();
        java.lang.Object obj15 = properties2.put((java.lang.Object) wildcardEnumeration13, (java.lang.Object) 10.0d);
        boolean boolean16 = properties0.equals((java.lang.Object) 10.0d);
        boolean boolean18 = properties0.containsKey((java.lang.Object) 35);
        java.lang.Object obj21 = properties0.setProperty("{true=true}", "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=false, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.service={{}={}}, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.tm_unique_name=hi!, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
        org.junit.Assert.assertNotNull(objCollection1);
        org.junit.Assert.assertNull(obj4);
        org.junit.Assert.assertNotNull(strSet5);
        org.junit.Assert.assertNull(obj9);
        org.junit.Assert.assertNotNull(strSet10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(objCollection12);
        org.junit.Assert.assertNotNull(wildcardEnumeration13);
        org.junit.Assert.assertNull(obj15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNull(obj21);
    }

    @Test
    public void test5420() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test5420");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration3 = properties0.elements();
        boolean boolean4 = properties0.isEmpty();
        java.util.Set<java.lang.Object> objSet5 = properties0.keySet();
        boolean boolean7 = properties0.containsKey((java.lang.Object) (-1.0f));
        java.util.Collection<java.lang.Object> objCollection8 = properties0.values();
        java.lang.Object obj9 = properties0.clone();
        java.util.Properties properties10 = new java.util.Properties();
        java.lang.Object obj12 = properties10.remove((java.lang.Object) 0.0d);
        boolean boolean13 = properties10.isEmpty();
        java.util.Enumeration<java.lang.Object> objEnumeration14 = properties10.elements();
        java.lang.Object obj17 = properties10.replace((java.lang.Object) 1, (java.lang.Object) 1);
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet18 = properties10.entrySet();
        boolean boolean19 = properties0.contains((java.lang.Object) properties10);
        java.util.Properties properties20 = new java.util.Properties();
        java.util.Properties properties21 = new java.util.Properties();
        java.lang.Object obj23 = properties21.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet24 = properties21.stringPropertyNames();
        boolean boolean25 = properties20.containsValue((java.lang.Object) properties21);
        java.util.Collection<java.lang.Object> objCollection26 = properties20.values();
        java.util.Properties properties28 = new java.util.Properties();
        java.lang.Object obj30 = properties28.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration31 = properties28.elements();
        boolean boolean32 = properties28.isEmpty();
        java.util.Set<java.lang.Object> objSet33 = properties28.keySet();
        java.lang.Object obj34 = properties20.putIfAbsent((java.lang.Object) "hi!", (java.lang.Object) objSet33);
        java.util.Set<java.lang.Object> objSet35 = properties20.keySet();
        java.util.Set<java.lang.Object> objSet36 = properties20.keySet();
        java.util.Set<java.lang.Object> objSet37 = properties20.keySet();
        java.util.Properties properties38 = new java.util.Properties();
        java.lang.Object obj40 = properties38.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration41 = properties38.elements();
        boolean boolean42 = properties38.isEmpty();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet43 = properties38.entrySet();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties45 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties45.setSerialJtaTransactions(false);
        atomikosProperties45.setThreadedTwoPhaseCommit(true);
        atomikosProperties45.setMaxTimeout((long) '#');
        boolean boolean52 = atomikosProperties45.isForceShutdownOnVmExit();
        java.lang.Object obj53 = properties38.put((java.lang.Object) (short) 1, (java.lang.Object) atomikosProperties45);
        long long54 = atomikosProperties45.getDefaultJtaTimeout();
        atomikosProperties45.setMaxActives((int) (short) 1);
        java.lang.Class<?> wildcardClass57 = atomikosProperties45.getClass();
        java.util.Properties properties58 = new java.util.Properties();
        java.lang.Object obj60 = properties58.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration61 = properties58.elements();
        boolean boolean62 = properties58.isEmpty();
        java.util.Set<java.lang.Object> objSet63 = properties58.keySet();
        boolean boolean64 = properties58.isEmpty();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet65 = properties58.entrySet();
        java.util.Properties properties66 = new java.util.Properties();
        java.lang.Object obj68 = properties66.remove((java.lang.Object) 0.0d);
        boolean boolean69 = properties66.isEmpty();
        java.lang.Object obj72 = properties66.setProperty("", "hi!");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties73 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties73.setSerialJtaTransactions(false);
        boolean boolean76 = properties58.remove((java.lang.Object) properties66, (java.lang.Object) atomikosProperties73);
        java.util.Properties properties77 = new java.util.Properties(properties66);
        int int78 = properties77.size();
        int int79 = properties77.size();
        java.util.Properties properties80 = new java.util.Properties();
        java.lang.Object obj81 = properties77.get((java.lang.Object) properties80);
        boolean boolean82 = properties20.remove((java.lang.Object) atomikosProperties45, (java.lang.Object) properties80);
        boolean boolean83 = properties20.isEmpty();
        java.lang.String str85 = properties20.getProperty("{{}={}}");
        java.lang.Object obj86 = properties10.remove((java.lang.Object) "{{}={}}");
        java.io.OutputStream outputStream87 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties10.store(outputStream87, "{true=true}");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(objEnumeration3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(objSet5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(objCollection8);
        org.junit.Assert.assertNotNull(obj9);
        org.junit.Assert.assertEquals(obj9.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj9), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj9), "{}");
        org.junit.Assert.assertNull(obj12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(objEnumeration14);
        org.junit.Assert.assertNull(obj17);
        org.junit.Assert.assertNotNull(objEntrySet18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNull(obj23);
        org.junit.Assert.assertNotNull(strSet24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(objCollection26);
        org.junit.Assert.assertNull(obj30);
        org.junit.Assert.assertNotNull(objEnumeration31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertNotNull(objSet33);
        org.junit.Assert.assertNull(obj34);
        org.junit.Assert.assertNotNull(objSet35);
        org.junit.Assert.assertNotNull(objSet36);
        org.junit.Assert.assertNotNull(objSet37);
        org.junit.Assert.assertNull(obj40);
        org.junit.Assert.assertNotNull(objEnumeration41);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertNotNull(objEntrySet43);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNull(obj53);
        org.junit.Assert.assertTrue("'" + long54 + "' != '" + 10000L + "'", long54 == 10000L);
        org.junit.Assert.assertNotNull(wildcardClass57);
        org.junit.Assert.assertNull(obj60);
        org.junit.Assert.assertNotNull(objEnumeration61);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + true + "'", boolean62 == true);
        org.junit.Assert.assertNotNull(objSet63);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64 == true);
        org.junit.Assert.assertNotNull(objEntrySet65);
        org.junit.Assert.assertNull(obj68);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + true + "'", boolean69 == true);
        org.junit.Assert.assertNull(obj72);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
        org.junit.Assert.assertTrue("'" + int78 + "' != '" + 0 + "'", int78 == 0);
        org.junit.Assert.assertTrue("'" + int79 + "' != '" + 0 + "'", int79 == 0);
        org.junit.Assert.assertNull(obj81);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + false + "'", boolean82 == false);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + false + "'", boolean83 == false);
        org.junit.Assert.assertNull(str85);
        org.junit.Assert.assertNull(obj86);
    }

    @Test
    public void test5421() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test5421");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setSerialJtaTransactions(false);
        atomikosProperties0.setThreadedTwoPhaseCommit(true);
        atomikosProperties0.setEnableLogging(false);
        boolean boolean7 = atomikosProperties0.isSerialJtaTransactions();
        int int8 = atomikosProperties0.getMaxActives();
        boolean boolean9 = atomikosProperties0.isEnableLogging();
        atomikosProperties0.setForceShutdownOnVmExit(true);
        java.lang.String str12 = atomikosProperties0.getTransactionManagerUniqueName();
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 50 + "'", int8 == 50);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNull(str12);
    }

    @Test
    public void test5422() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test5422");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setSerialJtaTransactions(false);
        atomikosProperties0.setThreadedTwoPhaseCommit(true);
        atomikosProperties0.setMaxTimeout((long) '#');
        boolean boolean7 = atomikosProperties0.isEnableLogging();
        atomikosProperties0.setCheckpointInterval((long) (byte) -1);
        atomikosProperties0.setEnableLogging(true);
        atomikosProperties0.setLogBaseDir("");
        long long14 = atomikosProperties0.getMaxTimeout();
        atomikosProperties0.setService("{hi!=[]}");
        boolean boolean17 = atomikosProperties0.isSerialJtaTransactions();
        java.util.Properties properties18 = atomikosProperties0.asProperties();
        java.util.Enumeration<java.lang.Object> objEnumeration19 = properties18.keys();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties20 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties20.setSerialJtaTransactions(false);
        atomikosProperties20.setThreadedTwoPhaseCommit(true);
        atomikosProperties20.setMaxTimeout((long) '#');
        boolean boolean27 = atomikosProperties20.isEnableLogging();
        atomikosProperties20.setCheckpointInterval((long) (byte) -1);
        atomikosProperties20.setEnableLogging(true);
        java.lang.String str32 = atomikosProperties20.getTransactionManagerUniqueName();
        atomikosProperties20.setCheckpointInterval((long) (byte) -1);
        java.lang.String str35 = atomikosProperties20.getService();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj36 = properties18.get((java.lang.Object) str35);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertTrue("'" + long14 + "' != '" + 35L + "'", long14 == 35L);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(properties18);
        org.junit.Assert.assertNotNull(objEnumeration19);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNull(str32);
        org.junit.Assert.assertNull(str35);
    }

    @Test
    public void test5423() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test5423");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet3 = properties0.stringPropertyNames();
        java.util.Properties properties4 = new java.util.Properties();
        java.util.Properties properties5 = new java.util.Properties();
        java.lang.Object obj7 = properties5.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet8 = properties5.stringPropertyNames();
        boolean boolean9 = properties4.containsValue((java.lang.Object) properties5);
        java.util.Collection<java.lang.Object> objCollection10 = properties4.values();
        java.util.Enumeration<?> wildcardEnumeration11 = properties4.propertyNames();
        java.lang.Object obj13 = properties0.put((java.lang.Object) wildcardEnumeration11, (java.lang.Object) 10.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration14 = properties0.elements();
        java.util.Properties properties15 = new java.util.Properties();
        java.lang.Object obj17 = properties15.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration18 = properties15.elements();
        boolean boolean19 = properties15.isEmpty();
        java.util.Set<java.lang.Object> objSet20 = properties15.keySet();
        boolean boolean21 = properties15.isEmpty();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties22 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties22.setSerialJtaTransactions(false);
        atomikosProperties22.setThreadedTwoPhaseCommit(true);
        atomikosProperties22.setMaxTimeout((long) '#');
        boolean boolean29 = atomikosProperties22.isEnableLogging();
        atomikosProperties22.setCheckpointInterval((long) (byte) -1);
        java.util.Properties properties32 = new java.util.Properties();
        java.util.Properties properties33 = new java.util.Properties();
        java.lang.Object obj35 = properties33.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet36 = properties33.stringPropertyNames();
        boolean boolean37 = properties32.containsValue((java.lang.Object) properties33);
        java.util.Collection<java.lang.Object> objCollection38 = properties32.values();
        java.lang.Object obj39 = properties15.replace((java.lang.Object) atomikosProperties22, (java.lang.Object) objCollection38);
        java.lang.Object obj40 = properties0.get((java.lang.Object) properties15);
        java.io.InputStream inputStream41 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties15.loadFromXML(inputStream41);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(strSet3);
        org.junit.Assert.assertNull(obj7);
        org.junit.Assert.assertNotNull(strSet8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(objCollection10);
        org.junit.Assert.assertNotNull(wildcardEnumeration11);
        org.junit.Assert.assertNull(obj13);
        org.junit.Assert.assertNotNull(objEnumeration14);
        org.junit.Assert.assertNull(obj17);
        org.junit.Assert.assertNotNull(objEnumeration18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(objSet20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNull(obj35);
        org.junit.Assert.assertNotNull(strSet36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(objCollection38);
        org.junit.Assert.assertNull(obj39);
        org.junit.Assert.assertNull(obj40);
    }

    @Test
    public void test5424() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test5424");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet3 = properties0.stringPropertyNames();
        java.util.Properties properties4 = new java.util.Properties();
        java.util.Properties properties5 = new java.util.Properties();
        java.lang.Object obj7 = properties5.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet8 = properties5.stringPropertyNames();
        boolean boolean9 = properties4.containsValue((java.lang.Object) properties5);
        java.util.Collection<java.lang.Object> objCollection10 = properties4.values();
        java.util.Enumeration<?> wildcardEnumeration11 = properties4.propertyNames();
        java.lang.Object obj13 = properties0.put((java.lang.Object) wildcardEnumeration11, (java.lang.Object) 10.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration14 = properties0.elements();
        java.util.Enumeration<java.lang.Object> objEnumeration15 = properties0.elements();
        java.util.Properties properties16 = new java.util.Properties();
        java.lang.Object obj18 = properties16.remove((java.lang.Object) 0.0d);
        boolean boolean19 = properties16.isEmpty();
        java.lang.Object obj22 = properties16.setProperty("", "hi!");
        java.util.Properties properties23 = new java.util.Properties();
        java.lang.Object obj25 = properties23.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration26 = properties23.elements();
        boolean boolean27 = properties23.isEmpty();
        java.util.Set<java.lang.Object> objSet28 = properties23.keySet();
        boolean boolean29 = properties23.isEmpty();
        java.util.Properties properties30 = new java.util.Properties();
        java.util.Collection<java.lang.Object> objCollection31 = properties30.values();
        java.util.Enumeration<java.lang.Object> objEnumeration32 = properties30.keys();
        java.lang.Object obj33 = properties23.remove((java.lang.Object) properties30);
        java.lang.Object obj34 = properties16.get((java.lang.Object) properties30);
        java.util.Enumeration<java.lang.Object> objEnumeration35 = properties30.keys();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties36 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties36.setSerialJtaTransactions(false);
        atomikosProperties36.setThreadedTwoPhaseCommit(true);
        atomikosProperties36.setMaxTimeout((long) '#');
        boolean boolean43 = atomikosProperties36.isForceShutdownOnVmExit();
        long long44 = atomikosProperties36.getCheckpointInterval();
        java.lang.Object obj45 = new java.lang.Object();
        boolean boolean47 = properties30.replace((java.lang.Object) long44, obj45, (java.lang.Object) "hi!");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties48 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties48.setSerialJtaTransactions(false);
        boolean boolean51 = atomikosProperties48.isSerialJtaTransactions();
        atomikosProperties48.setTransactionManagerUniqueName("hi!");
        java.lang.String str54 = atomikosProperties48.getLogBaseName();
        java.lang.String str55 = atomikosProperties48.getLogBaseName();
        boolean boolean56 = atomikosProperties48.isSerialJtaTransactions();
        java.util.Properties properties57 = new java.util.Properties();
        java.util.Properties properties58 = new java.util.Properties();
        java.lang.Object obj60 = properties58.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet61 = properties58.stringPropertyNames();
        boolean boolean62 = properties57.containsValue((java.lang.Object) properties58);
        java.util.Properties properties63 = new java.util.Properties();
        java.lang.Object obj65 = properties63.remove((java.lang.Object) 0.0d);
        boolean boolean67 = properties63.containsValue((java.lang.Object) "hi!");
        boolean boolean68 = properties58.contains((java.lang.Object) "hi!");
        boolean boolean69 = properties30.remove((java.lang.Object) atomikosProperties48, (java.lang.Object) boolean68);
        java.util.Properties properties70 = new java.util.Properties(properties30);
        properties0.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties30);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties72 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties72.setSerialJtaTransactions(false);
        atomikosProperties72.setThreadedTwoPhaseCommit(true);
        boolean boolean77 = atomikosProperties72.isForceShutdownOnVmExit();
        java.lang.String str78 = atomikosProperties72.getTransactionManagerUniqueName();
        java.lang.String str79 = atomikosProperties72.getService();
        atomikosProperties72.setEnableLogging(false);
        atomikosProperties72.setDefaultJtaTimeout((long) '#');
        atomikosProperties72.setTransactionManagerUniqueName("{true=true}");
        atomikosProperties72.setThreadedTwoPhaseCommit(true);
        java.lang.Object obj88 = properties30.remove((java.lang.Object) atomikosProperties72);
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(strSet3);
        org.junit.Assert.assertNull(obj7);
        org.junit.Assert.assertNotNull(strSet8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(objCollection10);
        org.junit.Assert.assertNotNull(wildcardEnumeration11);
        org.junit.Assert.assertNull(obj13);
        org.junit.Assert.assertNotNull(objEnumeration14);
        org.junit.Assert.assertNotNull(objEnumeration15);
        org.junit.Assert.assertNull(obj18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNull(obj22);
        org.junit.Assert.assertNull(obj25);
        org.junit.Assert.assertNotNull(objEnumeration26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNotNull(objSet28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNotNull(objCollection31);
        org.junit.Assert.assertNotNull(objEnumeration32);
        org.junit.Assert.assertNull(obj33);
        org.junit.Assert.assertNull(obj34);
        org.junit.Assert.assertNotNull(objEnumeration35);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertTrue("'" + long44 + "' != '" + 500L + "'", long44 == 500L);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "tmlog" + "'", str54, "tmlog");
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "tmlog" + "'", str55, "tmlog");
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertNull(obj60);
        org.junit.Assert.assertNotNull(strSet61);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertNull(obj65);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + false + "'", boolean77 == false);
        org.junit.Assert.assertNull(str78);
        org.junit.Assert.assertNull(str79);
        org.junit.Assert.assertNull(obj88);
    }

    @Test
    public void test5425() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test5425");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setSerialJtaTransactions(false);
        atomikosProperties0.setThreadedTwoPhaseCommit(true);
        atomikosProperties0.setThreadedTwoPhaseCommit(true);
        java.util.Properties properties7 = atomikosProperties0.asProperties();
        int int8 = atomikosProperties0.getMaxActives();
        atomikosProperties0.setTransactionManagerUniqueName("hi!");
        long long11 = atomikosProperties0.getDefaultJtaTimeout();
        long long12 = atomikosProperties0.getDefaultJtaTimeout();
        long long13 = atomikosProperties0.getCheckpointInterval();
        boolean boolean14 = atomikosProperties0.isSerialJtaTransactions();
        org.junit.Assert.assertNotNull(properties7);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 50 + "'", int8 == 50);
        org.junit.Assert.assertTrue("'" + long11 + "' != '" + 10000L + "'", long11 == 10000L);
        org.junit.Assert.assertTrue("'" + long12 + "' != '" + 10000L + "'", long12 == 10000L);
        org.junit.Assert.assertTrue("'" + long13 + "' != '" + 500L + "'", long13 == 500L);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
    }

    @Test
    public void test5426() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test5426");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setSerialJtaTransactions(false);
        atomikosProperties0.setThreadedTwoPhaseCommit(true);
        atomikosProperties0.setMaxTimeout((long) '#');
        boolean boolean7 = atomikosProperties0.isEnableLogging();
        atomikosProperties0.setCheckpointInterval((long) (byte) -1);
        atomikosProperties0.setMaxActives((int) (byte) 100);
        atomikosProperties0.setTransactionManagerUniqueName("{=hi!}");
        java.lang.String str14 = atomikosProperties0.getLogBaseDir();
        atomikosProperties0.setForceShutdownOnVmExit(false);
        atomikosProperties0.setMaxTimeout(100L);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNull(str14);
    }

    @Test
    public void test5427() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test5427");
        java.util.Properties properties0 = new java.util.Properties();
        java.util.Collection<java.lang.Object> objCollection1 = properties0.values();
        java.util.Collection<java.lang.Object> objCollection2 = properties0.values();
        java.util.Properties properties3 = new java.util.Properties(properties0);
        properties3.clear();
        java.util.Properties properties5 = new java.util.Properties();
        java.lang.Object obj7 = properties5.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration8 = properties5.elements();
        int int9 = properties5.size();
        java.util.Properties properties10 = new java.util.Properties(properties5);
        java.util.Set<java.lang.String> strSet11 = properties5.stringPropertyNames();
        java.util.Set<java.lang.String> strSet12 = properties5.stringPropertyNames();
        java.util.Properties properties13 = new java.util.Properties();
        java.lang.Object obj15 = properties13.remove((java.lang.Object) 0.0d);
        boolean boolean16 = properties13.isEmpty();
        java.util.Enumeration<java.lang.Object> objEnumeration17 = properties13.elements();
        java.util.Properties properties18 = new java.util.Properties();
        java.lang.Object obj20 = properties18.remove((java.lang.Object) 0.0d);
        boolean boolean21 = properties18.isEmpty();
        java.util.Enumeration<java.lang.Object> objEnumeration22 = properties18.elements();
        java.util.Enumeration<java.lang.Object> objEnumeration23 = properties18.elements();
        java.lang.Object obj24 = properties5.replace((java.lang.Object) objEnumeration17, (java.lang.Object) objEnumeration23);
        properties3.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties5);
        java.lang.String str27 = properties5.getProperty("{hi!=[], {=hi!}={com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=false, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.tm_unique_name=tmlog, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}}");
        java.lang.String str30 = properties5.getProperty("{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=false, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=true, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}", "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=false, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=true, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
        org.junit.Assert.assertNotNull(objCollection1);
        org.junit.Assert.assertNotNull(objCollection2);
        org.junit.Assert.assertNull(obj7);
        org.junit.Assert.assertNotNull(objEnumeration8);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertNotNull(strSet11);
        org.junit.Assert.assertNotNull(strSet12);
        org.junit.Assert.assertNull(obj15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(objEnumeration17);
        org.junit.Assert.assertNull(obj20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(objEnumeration22);
        org.junit.Assert.assertNotNull(objEnumeration23);
        org.junit.Assert.assertNull(obj24);
        org.junit.Assert.assertNull(str27);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=false, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=true, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}" + "'", str30, "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=false, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=true, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
    }

    @Test
    public void test5428() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test5428");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet3 = properties0.stringPropertyNames();
        java.util.Properties properties4 = new java.util.Properties();
        java.util.Properties properties5 = new java.util.Properties();
        java.lang.Object obj7 = properties5.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet8 = properties5.stringPropertyNames();
        boolean boolean9 = properties4.containsValue((java.lang.Object) properties5);
        java.util.Collection<java.lang.Object> objCollection10 = properties4.values();
        java.util.Enumeration<?> wildcardEnumeration11 = properties4.propertyNames();
        java.lang.Object obj13 = properties0.put((java.lang.Object) wildcardEnumeration11, (java.lang.Object) 10.0d);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties14 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties14.setSerialJtaTransactions(false);
        atomikosProperties14.setThreadedTwoPhaseCommit(true);
        atomikosProperties14.setMaxTimeout((long) '#');
        boolean boolean21 = atomikosProperties14.isForceShutdownOnVmExit();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties22 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties22.setSerialJtaTransactions(false);
        atomikosProperties22.setThreadedTwoPhaseCommit(true);
        atomikosProperties22.setThreadedTwoPhaseCommit(true);
        java.lang.Object obj29 = properties0.getOrDefault((java.lang.Object) boolean21, (java.lang.Object) atomikosProperties22);
        java.util.Properties properties30 = new java.util.Properties();
        java.lang.Object obj32 = properties30.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration33 = properties30.elements();
        boolean boolean34 = properties30.isEmpty();
        java.util.Set<java.lang.Object> objSet35 = properties30.keySet();
        java.util.Enumeration<java.lang.Object> objEnumeration36 = properties30.keys();
        java.lang.String str38 = properties30.getProperty("hi!");
        java.lang.String str40 = properties30.getProperty("");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties41 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties41.setSerialJtaTransactions(false);
        atomikosProperties41.setThreadedTwoPhaseCommit(true);
        atomikosProperties41.setEnableLogging(false);
        boolean boolean48 = properties30.containsKey((java.lang.Object) atomikosProperties41);
        boolean boolean49 = properties0.containsValue((java.lang.Object) properties30);
        java.lang.Object obj50 = properties30.clone();
        java.util.Set<java.lang.Object> objSet51 = properties30.keySet();
        java.util.Set<java.lang.String> strSet52 = properties30.stringPropertyNames();
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(strSet3);
        org.junit.Assert.assertNull(obj7);
        org.junit.Assert.assertNotNull(strSet8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(objCollection10);
        org.junit.Assert.assertNotNull(wildcardEnumeration11);
        org.junit.Assert.assertNull(obj13);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(obj29);
        org.junit.Assert.assertNull(obj32);
        org.junit.Assert.assertNotNull(objEnumeration33);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertNotNull(objSet35);
        org.junit.Assert.assertNotNull(objEnumeration36);
        org.junit.Assert.assertNull(str38);
        org.junit.Assert.assertNull(str40);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNotNull(obj50);
        org.junit.Assert.assertEquals(obj50.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj50), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj50), "{}");
        org.junit.Assert.assertNotNull(objSet51);
        org.junit.Assert.assertNotNull(strSet52);
    }

    @Test
    public void test5429() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test5429");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setSerialJtaTransactions(false);
        atomikosProperties0.setThreadedTwoPhaseCommit(true);
        atomikosProperties0.setEnableLogging(false);
        atomikosProperties0.setForceShutdownOnVmExit(true);
        boolean boolean9 = atomikosProperties0.isSerialJtaTransactions();
        java.util.Properties properties10 = atomikosProperties0.asProperties();
        java.util.Enumeration<java.lang.Object> objEnumeration11 = properties10.keys();
        boolean boolean12 = properties10.isEmpty();
        java.util.Set<java.lang.Object> objSet13 = properties10.keySet();
        int int14 = properties10.size();
        java.util.Set<java.lang.String> strSet15 = properties10.stringPropertyNames();
        java.io.InputStream inputStream16 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties10.load(inputStream16);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(properties10);
        org.junit.Assert.assertNotNull(objEnumeration11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(objSet13);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 9 + "'", int14 == 9);
        org.junit.Assert.assertNotNull(strSet15);
    }

    @Test
    public void test5430() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test5430");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<?> wildcardEnumeration3 = properties0.propertyNames();
        java.util.Properties properties4 = new java.util.Properties();
        java.lang.Object obj6 = properties4.remove((java.lang.Object) 0.0d);
        boolean boolean7 = properties4.isEmpty();
        java.util.Enumeration<java.lang.Object> objEnumeration8 = properties4.elements();
        java.util.Enumeration<java.lang.Object> objEnumeration9 = properties4.elements();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties10 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties10.setSerialJtaTransactions(false);
        atomikosProperties10.setThreadedTwoPhaseCommit(true);
        atomikosProperties10.setMaxTimeout((long) '#');
        boolean boolean17 = atomikosProperties10.isForceShutdownOnVmExit();
        int int18 = atomikosProperties10.getMaxActives();
        java.lang.Object obj19 = properties4.remove((java.lang.Object) int18);
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet20 = properties4.entrySet();
        java.util.Properties properties21 = new java.util.Properties();
        java.lang.Object obj23 = properties21.remove((java.lang.Object) 0.0d);
        java.lang.String str25 = properties21.getProperty("");
        java.lang.Object obj26 = properties0.getOrDefault((java.lang.Object) properties4, (java.lang.Object) str25);
        java.util.Enumeration<java.lang.Object> objEnumeration27 = properties0.keys();
        properties0.clear();
        java.lang.String str30 = properties0.getProperty("{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=false, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=true, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
        java.util.Properties properties31 = new java.util.Properties();
        java.util.Properties properties32 = new java.util.Properties();
        java.lang.Object obj34 = properties32.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet35 = properties32.stringPropertyNames();
        boolean boolean36 = properties31.containsValue((java.lang.Object) properties32);
        java.util.Collection<java.lang.Object> objCollection37 = properties31.values();
        java.util.Properties properties39 = new java.util.Properties();
        java.lang.Object obj41 = properties39.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration42 = properties39.elements();
        boolean boolean43 = properties39.isEmpty();
        java.util.Set<java.lang.Object> objSet44 = properties39.keySet();
        java.lang.Object obj45 = properties31.putIfAbsent((java.lang.Object) "hi!", (java.lang.Object) objSet44);
        java.util.Set<java.lang.Object> objSet46 = properties31.keySet();
        java.util.Set<java.lang.Object> objSet47 = properties31.keySet();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet48 = properties31.entrySet();
        java.util.Set<java.lang.Object> objSet49 = properties31.keySet();
        java.lang.String str51 = properties31.getProperty("");
        java.lang.Object obj54 = properties31.setProperty("", "{=hi!}");
        properties0.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties31);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties56 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties56.setSerialJtaTransactions(false);
        boolean boolean59 = atomikosProperties56.isSerialJtaTransactions();
        atomikosProperties56.setTransactionManagerUniqueName("hi!");
        java.lang.String str62 = atomikosProperties56.getLogBaseName();
        java.lang.String str63 = atomikosProperties56.getLogBaseName();
        long long64 = atomikosProperties56.getDefaultJtaTimeout();
        long long65 = atomikosProperties56.getMaxTimeout();
        java.lang.String str66 = atomikosProperties56.getService();
        atomikosProperties56.setSerialJtaTransactions(false);
        atomikosProperties56.setLogBaseName("{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=false, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=true, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
        java.lang.Object obj71 = properties0.remove((java.lang.Object) atomikosProperties56);
        atomikosProperties56.setLogBaseDir("tmlog");
        atomikosProperties56.setEnableLogging(true);
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(wildcardEnumeration3);
        org.junit.Assert.assertNull(obj6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(objEnumeration8);
        org.junit.Assert.assertNotNull(objEnumeration9);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 50 + "'", int18 == 50);
        org.junit.Assert.assertNull(obj19);
        org.junit.Assert.assertNotNull(objEntrySet20);
        org.junit.Assert.assertNull(obj23);
        org.junit.Assert.assertNull(str25);
        org.junit.Assert.assertNull(obj26);
        org.junit.Assert.assertNotNull(objEnumeration27);
        org.junit.Assert.assertNull(str30);
        org.junit.Assert.assertNull(obj34);
        org.junit.Assert.assertNotNull(strSet35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(objCollection37);
        org.junit.Assert.assertNull(obj41);
        org.junit.Assert.assertNotNull(objEnumeration42);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNotNull(objSet44);
        org.junit.Assert.assertNull(obj45);
        org.junit.Assert.assertNotNull(objSet46);
        org.junit.Assert.assertNotNull(objSet47);
        org.junit.Assert.assertNotNull(objEntrySet48);
        org.junit.Assert.assertNotNull(objSet49);
        org.junit.Assert.assertNull(str51);
        org.junit.Assert.assertNull(obj54);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "tmlog" + "'", str62, "tmlog");
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "tmlog" + "'", str63, "tmlog");
        org.junit.Assert.assertTrue("'" + long64 + "' != '" + 10000L + "'", long64 == 10000L);
        org.junit.Assert.assertTrue("'" + long65 + "' != '" + 300000L + "'", long65 == 300000L);
        org.junit.Assert.assertNull(str66);
        org.junit.Assert.assertNull(obj71);
    }

    @Test
    public void test5431() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test5431");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setSerialJtaTransactions(false);
        boolean boolean3 = atomikosProperties0.isSerialJtaTransactions();
        int int4 = atomikosProperties0.getMaxActives();
        atomikosProperties0.setSerialJtaTransactions(true);
        boolean boolean7 = atomikosProperties0.isSerialJtaTransactions();
        atomikosProperties0.setCheckpointInterval((long) (short) 100);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 50 + "'", int4 == 50);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
    }

    @Test
    public void test5432() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test5432");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setSerialJtaTransactions(false);
        boolean boolean3 = atomikosProperties0.isSerialJtaTransactions();
        atomikosProperties0.setCheckpointInterval((long) 10);
        boolean boolean6 = atomikosProperties0.isSerialJtaTransactions();
        atomikosProperties0.setTransactionManagerUniqueName("{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=false, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=true, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
    }

    @Test
    public void test5433() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test5433");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration3 = properties0.elements();
        boolean boolean4 = properties0.isEmpty();
        java.util.Set<java.lang.Object> objSet5 = properties0.keySet();
        boolean boolean6 = properties0.isEmpty();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet7 = properties0.entrySet();
        java.util.Properties properties8 = new java.util.Properties();
        java.lang.Object obj10 = properties8.remove((java.lang.Object) 0.0d);
        boolean boolean11 = properties8.isEmpty();
        java.lang.Object obj14 = properties8.setProperty("", "hi!");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties15 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties15.setSerialJtaTransactions(false);
        boolean boolean18 = properties0.remove((java.lang.Object) properties8, (java.lang.Object) atomikosProperties15);
        java.util.Properties properties19 = new java.util.Properties(properties8);
        int int20 = properties19.size();
        java.util.Properties properties21 = new java.util.Properties();
        java.lang.Object obj23 = properties21.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration24 = properties21.elements();
        boolean boolean25 = properties21.isEmpty();
        java.util.Set<java.lang.Object> objSet26 = properties21.keySet();
        boolean boolean27 = properties21.isEmpty();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet28 = properties21.entrySet();
        java.util.Properties properties29 = new java.util.Properties();
        java.lang.Object obj31 = properties29.remove((java.lang.Object) 0.0d);
        boolean boolean32 = properties29.isEmpty();
        java.lang.Object obj35 = properties29.setProperty("", "hi!");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties36 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties36.setSerialJtaTransactions(false);
        boolean boolean39 = properties21.remove((java.lang.Object) properties29, (java.lang.Object) atomikosProperties36);
        java.util.Properties properties40 = new java.util.Properties(properties29);
        int int41 = properties40.size();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties43 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties43.setSerialJtaTransactions(false);
        boolean boolean46 = atomikosProperties43.isSerialJtaTransactions();
        java.lang.String str47 = atomikosProperties43.getService();
        boolean boolean48 = atomikosProperties43.isEnableLogging();
        java.lang.String str49 = atomikosProperties43.getTransactionManagerUniqueName();
        boolean boolean50 = properties40.remove((java.lang.Object) (byte) 1, (java.lang.Object) atomikosProperties43);
        java.util.Properties properties51 = new java.util.Properties();
        java.lang.Object obj53 = properties51.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration54 = properties51.elements();
        boolean boolean55 = properties51.isEmpty();
        java.util.Enumeration<java.lang.Object> objEnumeration56 = properties51.elements();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet57 = properties51.entrySet();
        java.lang.Object obj58 = properties40.remove((java.lang.Object) objEntrySet57);
        java.lang.Object obj59 = properties40.clone();
        java.util.Enumeration<java.lang.Object> objEnumeration60 = properties40.keys();
        java.lang.String str62 = properties40.getProperty("{=hi!}");
        java.util.Properties properties63 = new java.util.Properties();
        java.lang.Object obj65 = properties63.remove((java.lang.Object) 0.0d);
        boolean boolean67 = properties63.containsValue((java.lang.Object) "hi!");
        java.lang.Object obj70 = properties63.put((java.lang.Object) (byte) -1, (java.lang.Object) 100L);
        java.util.Enumeration<java.lang.Object> objEnumeration71 = properties63.keys();
        java.util.Enumeration<java.lang.Object> objEnumeration72 = properties63.elements();
        java.lang.Object obj73 = properties63.clone();
        boolean boolean74 = properties19.remove((java.lang.Object) "{=hi!}", (java.lang.Object) properties63);
        java.util.Properties properties75 = new java.util.Properties(properties63);
        java.util.Enumeration<java.lang.Object> objEnumeration76 = properties63.elements();
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(objEnumeration3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(objSet5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(objEntrySet7);
        org.junit.Assert.assertNull(obj10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNull(obj14);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 0 + "'", int20 == 0);
        org.junit.Assert.assertNull(obj23);
        org.junit.Assert.assertNotNull(objEnumeration24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(objSet26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNotNull(objEntrySet28);
        org.junit.Assert.assertNull(obj31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertNull(obj35);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 0 + "'", int41 == 0);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNull(str47);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertNull(str49);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertNull(obj53);
        org.junit.Assert.assertNotNull(objEnumeration54);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertNotNull(objEnumeration56);
        org.junit.Assert.assertNotNull(objEntrySet57);
        org.junit.Assert.assertNull(obj58);
        org.junit.Assert.assertNotNull(obj59);
        org.junit.Assert.assertEquals(obj59.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj59), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj59), "{}");
        org.junit.Assert.assertNotNull(objEnumeration60);
        org.junit.Assert.assertNull(str62);
        org.junit.Assert.assertNull(obj65);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertNull(obj70);
        org.junit.Assert.assertNotNull(objEnumeration71);
        org.junit.Assert.assertNotNull(objEnumeration72);
        org.junit.Assert.assertNotNull(obj73);
        org.junit.Assert.assertEquals(obj73.toString(), "{-1=100}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj73), "{-1=100}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj73), "{-1=100}");
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
        org.junit.Assert.assertNotNull(objEnumeration76);
    }

    @Test
    public void test5434() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test5434");
        java.util.Properties properties0 = new java.util.Properties();
        java.util.Properties properties1 = new java.util.Properties();
        java.lang.Object obj3 = properties1.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet4 = properties1.stringPropertyNames();
        boolean boolean5 = properties0.containsValue((java.lang.Object) properties1);
        java.util.Enumeration<?> wildcardEnumeration6 = properties1.propertyNames();
        java.util.Properties properties7 = new java.util.Properties(properties1);
        java.util.Set<java.lang.String> strSet8 = properties7.stringPropertyNames();
        java.io.InputStream inputStream9 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties7.load(inputStream9);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(obj3);
        org.junit.Assert.assertNotNull(strSet4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(wildcardEnumeration6);
        org.junit.Assert.assertNotNull(strSet8);
    }

    @Test
    public void test5435() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test5435");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setSerialJtaTransactions(false);
        atomikosProperties0.setThreadedTwoPhaseCommit(true);
        atomikosProperties0.setEnableLogging(false);
        boolean boolean7 = atomikosProperties0.isSerialJtaTransactions();
        int int8 = atomikosProperties0.getMaxActives();
        boolean boolean9 = atomikosProperties0.isEnableLogging();
        long long10 = atomikosProperties0.getCheckpointInterval();
        java.util.Properties properties11 = atomikosProperties0.asProperties();
        java.util.Enumeration<java.lang.Object> objEnumeration12 = properties11.elements();
        java.lang.String str14 = properties11.getProperty("{tmlog=}");
        java.lang.String str16 = properties11.getProperty("{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=false, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=true, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
        java.lang.Object obj19 = properties11.setProperty("{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=false, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.tm_unique_name=tmlog, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}", "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=false, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.tm_unique_name=tmlog, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
        boolean boolean20 = properties11.isEmpty();
        java.lang.Object obj23 = properties11.setProperty("{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=false, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}", "{{}=tmlog}");
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 50 + "'", int8 == 50);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + long10 + "' != '" + 500L + "'", long10 == 500L);
        org.junit.Assert.assertNotNull(properties11);
        org.junit.Assert.assertNotNull(objEnumeration12);
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertNull(str16);
        org.junit.Assert.assertNull(obj19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNull(obj23);
    }

    @Test
    public void test5436() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test5436");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setSerialJtaTransactions(false);
        atomikosProperties0.setThreadedTwoPhaseCommit(true);
        atomikosProperties0.setMaxTimeout((long) '#');
        boolean boolean7 = atomikosProperties0.isEnableLogging();
        atomikosProperties0.setCheckpointInterval((long) (byte) -1);
        atomikosProperties0.setLogBaseName("{=hi!}");
        long long12 = atomikosProperties0.getMaxTimeout();
        atomikosProperties0.setDefaultJtaTimeout((long) (short) 10);
        atomikosProperties0.setMaxActives(10);
        atomikosProperties0.setService("{com.atomikos.icatch.enable_logging=false, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=1, com.atomikos.icatch.serial_jta_transactions=false, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
        boolean boolean19 = atomikosProperties0.isSerialJtaTransactions();
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertTrue("'" + long12 + "' != '" + 35L + "'", long12 == 35L);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
    }

    @Test
    public void test5437() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test5437");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet3 = properties0.stringPropertyNames();
        java.util.Properties properties4 = new java.util.Properties();
        java.util.Properties properties5 = new java.util.Properties();
        java.lang.Object obj7 = properties5.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet8 = properties5.stringPropertyNames();
        boolean boolean9 = properties4.containsValue((java.lang.Object) properties5);
        java.util.Collection<java.lang.Object> objCollection10 = properties4.values();
        java.util.Enumeration<?> wildcardEnumeration11 = properties4.propertyNames();
        java.lang.Object obj13 = properties0.put((java.lang.Object) wildcardEnumeration11, (java.lang.Object) 10.0d);
        java.util.Set<java.lang.String> strSet14 = properties0.stringPropertyNames();
        java.util.Set<java.lang.String> strSet15 = properties0.stringPropertyNames();
        boolean boolean16 = properties0.isEmpty();
        java.lang.String str18 = properties0.getProperty("tmlog");
        java.util.Properties properties19 = new java.util.Properties();
        java.lang.Object obj21 = properties19.remove((java.lang.Object) 0.0d);
        boolean boolean22 = properties19.isEmpty();
        java.util.Enumeration<java.lang.Object> objEnumeration23 = properties19.elements();
        java.util.Enumeration<java.lang.Object> objEnumeration24 = properties19.elements();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties25 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties25.setSerialJtaTransactions(false);
        atomikosProperties25.setThreadedTwoPhaseCommit(true);
        atomikosProperties25.setMaxTimeout((long) '#');
        boolean boolean32 = atomikosProperties25.isForceShutdownOnVmExit();
        int int33 = atomikosProperties25.getMaxActives();
        java.lang.Object obj34 = properties19.remove((java.lang.Object) int33);
        java.util.Properties properties35 = new java.util.Properties();
        java.lang.Object obj37 = properties35.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration38 = properties35.elements();
        boolean boolean39 = properties35.isEmpty();
        java.util.Set<java.lang.Object> objSet40 = properties35.keySet();
        boolean boolean41 = properties35.isEmpty();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet42 = properties35.entrySet();
        java.util.Properties properties43 = new java.util.Properties();
        java.lang.Object obj45 = properties43.remove((java.lang.Object) 0.0d);
        boolean boolean46 = properties43.isEmpty();
        java.lang.Object obj49 = properties43.setProperty("", "hi!");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties50 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties50.setSerialJtaTransactions(false);
        boolean boolean53 = properties35.remove((java.lang.Object) properties43, (java.lang.Object) atomikosProperties50);
        java.util.Properties properties54 = new java.util.Properties(properties43);
        int int55 = properties54.size();
        int int56 = properties54.size();
        java.util.Properties properties57 = new java.util.Properties();
        java.lang.Object obj58 = properties54.get((java.lang.Object) properties57);
        boolean boolean59 = properties19.containsValue((java.lang.Object) properties57);
        java.util.Set<java.lang.Object> objSet60 = properties19.keySet();
        java.util.Properties properties61 = new java.util.Properties();
        java.lang.Object obj63 = properties61.remove((java.lang.Object) 0.0d);
        boolean boolean65 = properties61.containsValue((java.lang.Object) "hi!");
        java.lang.Object obj68 = properties61.put((java.lang.Object) (byte) -1, (java.lang.Object) 100L);
        java.util.Properties properties69 = new java.util.Properties();
        java.util.Properties properties70 = new java.util.Properties();
        java.lang.Object obj72 = properties70.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet73 = properties70.stringPropertyNames();
        boolean boolean74 = properties69.containsValue((java.lang.Object) properties70);
        java.util.Collection<java.lang.Object> objCollection75 = properties69.values();
        java.util.Properties properties77 = new java.util.Properties();
        java.lang.Object obj79 = properties77.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration80 = properties77.elements();
        boolean boolean81 = properties77.isEmpty();
        java.util.Set<java.lang.Object> objSet82 = properties77.keySet();
        java.lang.Object obj83 = properties69.putIfAbsent((java.lang.Object) "hi!", (java.lang.Object) objSet82);
        java.util.Set<java.lang.Object> objSet84 = properties69.keySet();
        boolean boolean85 = properties61.containsKey((java.lang.Object) properties69);
        java.util.Enumeration<?> wildcardEnumeration86 = properties69.propertyNames();
        java.lang.Object obj87 = properties0.replace((java.lang.Object) objSet60, (java.lang.Object) properties69);
        java.lang.String str90 = properties69.getProperty("{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=false, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.service={{}={}}, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.tm_unique_name=hi!, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}", "{{{}={}}={}}");
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(strSet3);
        org.junit.Assert.assertNull(obj7);
        org.junit.Assert.assertNotNull(strSet8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(objCollection10);
        org.junit.Assert.assertNotNull(wildcardEnumeration11);
        org.junit.Assert.assertNull(obj13);
        org.junit.Assert.assertNotNull(strSet14);
        org.junit.Assert.assertNotNull(strSet15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNull(str18);
        org.junit.Assert.assertNull(obj21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNotNull(objEnumeration23);
        org.junit.Assert.assertNotNull(objEnumeration24);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 50 + "'", int33 == 50);
        org.junit.Assert.assertNull(obj34);
        org.junit.Assert.assertNull(obj37);
        org.junit.Assert.assertNotNull(objEnumeration38);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNotNull(objSet40);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertNotNull(objEntrySet42);
        org.junit.Assert.assertNull(obj45);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertNull(obj49);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + 0 + "'", int55 == 0);
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + 0 + "'", int56 == 0);
        org.junit.Assert.assertNull(obj58);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertNotNull(objSet60);
        org.junit.Assert.assertNull(obj63);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertNull(obj68);
        org.junit.Assert.assertNull(obj72);
        org.junit.Assert.assertNotNull(strSet73);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
        org.junit.Assert.assertNotNull(objCollection75);
        org.junit.Assert.assertNull(obj79);
        org.junit.Assert.assertNotNull(objEnumeration80);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + true + "'", boolean81 == true);
        org.junit.Assert.assertNotNull(objSet82);
        org.junit.Assert.assertNull(obj83);
        org.junit.Assert.assertNotNull(objSet84);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + false + "'", boolean85 == false);
        org.junit.Assert.assertNotNull(wildcardEnumeration86);
        org.junit.Assert.assertNull(obj87);
        org.junit.Assert.assertEquals("'" + str90 + "' != '" + "{{{}={}}={}}" + "'", str90, "{{{}={}}={}}");
    }

    @Test
    public void test5438() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test5438");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setSerialJtaTransactions(false);
        atomikosProperties0.setDefaultJtaTimeout((long) (short) -1);
        long long5 = atomikosProperties0.getDefaultJtaTimeout();
        org.junit.Assert.assertTrue("'" + long5 + "' != '" + (-1L) + "'", long5 == (-1L));
    }

    @Test
    public void test5439() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test5439");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet3 = properties0.stringPropertyNames();
        java.util.Properties properties4 = new java.util.Properties();
        java.util.Properties properties5 = new java.util.Properties();
        java.lang.Object obj7 = properties5.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet8 = properties5.stringPropertyNames();
        boolean boolean9 = properties4.containsValue((java.lang.Object) properties5);
        java.util.Collection<java.lang.Object> objCollection10 = properties4.values();
        java.util.Enumeration<?> wildcardEnumeration11 = properties4.propertyNames();
        java.lang.Object obj13 = properties0.put((java.lang.Object) wildcardEnumeration11, (java.lang.Object) 10.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration14 = properties0.elements();
        java.util.Properties properties16 = new java.util.Properties();
        java.lang.Object obj18 = properties16.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration19 = properties16.elements();
        boolean boolean20 = properties16.isEmpty();
        java.util.Set<java.lang.Object> objSet21 = properties16.keySet();
        java.util.Enumeration<java.lang.Object> objEnumeration22 = properties16.keys();
        boolean boolean24 = properties16.equals((java.lang.Object) "");
        java.lang.String str25 = properties16.toString();
        java.lang.Object obj26 = properties0.put((java.lang.Object) 'a', (java.lang.Object) properties16);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties28 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties28.setSerialJtaTransactions(false);
        atomikosProperties28.setThreadedTwoPhaseCommit(true);
        atomikosProperties28.setMaxTimeout((long) '#');
        java.lang.String str35 = atomikosProperties28.getLogBaseDir();
        java.lang.Class<?> wildcardClass36 = atomikosProperties28.getClass();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties37 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties37.setSerialJtaTransactions(false);
        boolean boolean40 = atomikosProperties37.isSerialJtaTransactions();
        java.util.Properties properties41 = atomikosProperties37.asProperties();
        java.lang.Object obj44 = properties41.setProperty("hi!", "");
        java.util.Properties properties45 = new java.util.Properties(properties41);
        boolean boolean46 = properties0.replace((java.lang.Object) "{}", (java.lang.Object) atomikosProperties28, (java.lang.Object) properties41);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties47 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties47.setSerialJtaTransactions(false);
        boolean boolean50 = atomikosProperties47.isSerialJtaTransactions();
        java.lang.String str51 = atomikosProperties47.getLogBaseDir();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties52 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties52.setSerialJtaTransactions(false);
        boolean boolean55 = atomikosProperties52.isSerialJtaTransactions();
        atomikosProperties52.setTransactionManagerUniqueName("hi!");
        java.lang.String str58 = atomikosProperties52.getLogBaseName();
        java.lang.String str59 = atomikosProperties52.getLogBaseName();
        boolean boolean60 = atomikosProperties52.isForceShutdownOnVmExit();
        long long61 = atomikosProperties52.getMaxTimeout();
        atomikosProperties52.setSerialJtaTransactions(false);
        boolean boolean64 = atomikosProperties52.isThreadedTwoPhaseCommit();
        long long65 = atomikosProperties52.getDefaultJtaTimeout();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties66 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties66.setSerialJtaTransactions(false);
        atomikosProperties66.setThreadedTwoPhaseCommit(true);
        atomikosProperties66.setMaxTimeout((long) '#');
        boolean boolean73 = atomikosProperties66.isEnableLogging();
        atomikosProperties66.setTransactionManagerUniqueName("hi!");
        atomikosProperties66.setForceShutdownOnVmExit(false);
        atomikosProperties66.setSerialJtaTransactions(false);
        boolean boolean80 = atomikosProperties66.isSerialJtaTransactions();
        boolean boolean81 = properties0.replace((java.lang.Object) atomikosProperties47, (java.lang.Object) atomikosProperties52, (java.lang.Object) boolean80);
        boolean boolean82 = atomikosProperties47.isThreadedTwoPhaseCommit();
        java.lang.String str83 = atomikosProperties47.getTransactionManagerUniqueName();
        atomikosProperties47.setMaxActives((int) 'a');
        atomikosProperties47.setLogBaseDir("{{}=tmlog}");
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(strSet3);
        org.junit.Assert.assertNull(obj7);
        org.junit.Assert.assertNotNull(strSet8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(objCollection10);
        org.junit.Assert.assertNotNull(wildcardEnumeration11);
        org.junit.Assert.assertNull(obj13);
        org.junit.Assert.assertNotNull(objEnumeration14);
        org.junit.Assert.assertNull(obj18);
        org.junit.Assert.assertNotNull(objEnumeration19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNotNull(objSet21);
        org.junit.Assert.assertNotNull(objEnumeration22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "{}" + "'", str25, "{}");
        org.junit.Assert.assertNull(obj26);
        org.junit.Assert.assertNull(str35);
        org.junit.Assert.assertNotNull(wildcardClass36);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(properties41);
        org.junit.Assert.assertNull(obj44);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertNull(str51);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "tmlog" + "'", str58, "tmlog");
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "tmlog" + "'", str59, "tmlog");
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertTrue("'" + long61 + "' != '" + 300000L + "'", long61 == 300000L);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertTrue("'" + long65 + "' != '" + 10000L + "'", long65 == 10000L);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + true + "'", boolean73 == true);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", boolean80 == false);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + false + "'", boolean81 == false);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + false + "'", boolean82 == false);
        org.junit.Assert.assertNull(str83);
    }

    @Test
    public void test5440() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test5440");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setSerialJtaTransactions(false);
        atomikosProperties0.setThreadedTwoPhaseCommit(true);
        atomikosProperties0.setMaxTimeout((long) '#');
        boolean boolean7 = atomikosProperties0.isEnableLogging();
        atomikosProperties0.setForceShutdownOnVmExit(true);
        atomikosProperties0.setForceShutdownOnVmExit(true);
        atomikosProperties0.setLogBaseDir("{=hi!}");
        java.util.Properties properties14 = atomikosProperties0.asProperties();
        java.util.Set<java.lang.String> strSet15 = properties14.stringPropertyNames();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties16 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties16.setSerialJtaTransactions(false);
        boolean boolean19 = atomikosProperties16.isSerialJtaTransactions();
        boolean boolean20 = atomikosProperties16.isEnableLogging();
        long long21 = atomikosProperties16.getMaxTimeout();
        atomikosProperties16.setMaxTimeout((long) 1);
        long long24 = atomikosProperties16.getCheckpointInterval();
        atomikosProperties16.setService("{tmlog=}");
        boolean boolean27 = atomikosProperties16.isThreadedTwoPhaseCommit();
        int int28 = atomikosProperties16.getMaxActives();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties29 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties29.setSerialJtaTransactions(false);
        boolean boolean32 = atomikosProperties29.isSerialJtaTransactions();
        atomikosProperties29.setCheckpointInterval((long) 10);
        atomikosProperties29.setCheckpointInterval((long) ' ');
        atomikosProperties29.setThreadedTwoPhaseCommit(true);
        long long39 = atomikosProperties29.getMaxTimeout();
        java.lang.String str40 = atomikosProperties29.getLogBaseName();
        boolean boolean41 = atomikosProperties29.isEnableLogging();
        java.util.Properties properties42 = new java.util.Properties();
        java.util.Collection<java.lang.Object> objCollection43 = properties42.values();
        java.util.Enumeration<java.lang.Object> objEnumeration44 = properties42.keys();
        java.lang.Object obj47 = properties42.setProperty("{}", "{}");
        java.util.Set<java.lang.String> strSet48 = properties42.stringPropertyNames();
        java.util.Properties properties49 = new java.util.Properties();
        boolean boolean51 = properties49.contains((java.lang.Object) 100.0d);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties52 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties52.setSerialJtaTransactions(false);
        atomikosProperties52.setThreadedTwoPhaseCommit(true);
        atomikosProperties52.setSerialJtaTransactions(false);
        java.lang.String str59 = atomikosProperties52.getService();
        boolean boolean60 = properties49.containsKey((java.lang.Object) atomikosProperties52);
        boolean boolean61 = properties42.containsKey((java.lang.Object) properties49);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties62 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties62.setSerialJtaTransactions(false);
        boolean boolean65 = atomikosProperties62.isSerialJtaTransactions();
        atomikosProperties62.setTransactionManagerUniqueName("hi!");
        java.lang.String str68 = atomikosProperties62.getLogBaseName();
        java.lang.String str69 = atomikosProperties62.getLogBaseName();
        long long70 = atomikosProperties62.getDefaultJtaTimeout();
        java.util.Properties properties71 = new java.util.Properties();
        java.lang.Object obj73 = properties71.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration74 = properties71.elements();
        boolean boolean75 = properties71.isEmpty();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet76 = properties71.entrySet();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties78 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties78.setSerialJtaTransactions(false);
        atomikosProperties78.setThreadedTwoPhaseCommit(true);
        atomikosProperties78.setMaxTimeout((long) '#');
        boolean boolean85 = atomikosProperties78.isForceShutdownOnVmExit();
        java.lang.Object obj86 = properties71.put((java.lang.Object) (short) 1, (java.lang.Object) atomikosProperties78);
        atomikosProperties78.setForceShutdownOnVmExit(true);
        java.util.Properties properties89 = atomikosProperties78.asProperties();
        java.lang.Object obj90 = properties42.getOrDefault((java.lang.Object) atomikosProperties62, (java.lang.Object) properties89);
        java.util.Set<java.lang.String> strSet91 = properties42.stringPropertyNames();
        boolean boolean92 = properties14.replace((java.lang.Object) atomikosProperties16, (java.lang.Object) atomikosProperties29, (java.lang.Object) strSet91);
        java.lang.Class<?> wildcardClass93 = strSet91.getClass();
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(properties14);
        org.junit.Assert.assertNotNull(strSet15);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertTrue("'" + long21 + "' != '" + 300000L + "'", long21 == 300000L);
        org.junit.Assert.assertTrue("'" + long24 + "' != '" + 500L + "'", long24 == 500L);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 50 + "'", int28 == 50);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue("'" + long39 + "' != '" + 300000L + "'", long39 == 300000L);
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "tmlog" + "'", str40, "tmlog");
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertNotNull(objCollection43);
        org.junit.Assert.assertNotNull(objEnumeration44);
        org.junit.Assert.assertNull(obj47);
        org.junit.Assert.assertNotNull(strSet48);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertNull(str59);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertEquals("'" + str68 + "' != '" + "tmlog" + "'", str68, "tmlog");
        org.junit.Assert.assertEquals("'" + str69 + "' != '" + "tmlog" + "'", str69, "tmlog");
        org.junit.Assert.assertTrue("'" + long70 + "' != '" + 10000L + "'", long70 == 10000L);
        org.junit.Assert.assertNull(obj73);
        org.junit.Assert.assertNotNull(objEnumeration74);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + true + "'", boolean75 == true);
        org.junit.Assert.assertNotNull(objEntrySet76);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + false + "'", boolean85 == false);
        org.junit.Assert.assertNull(obj86);
        org.junit.Assert.assertNotNull(properties89);
        org.junit.Assert.assertNotNull(obj90);
// flaky:         org.junit.Assert.assertEquals(obj90.toString(), "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=true, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=false, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=35, com.atomikos.icatch.threaded_2pc=true, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
// flaky:         org.junit.Assert.assertEquals(java.lang.String.valueOf(obj90), "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=true, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=false, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=35, com.atomikos.icatch.threaded_2pc=true, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
// flaky:         org.junit.Assert.assertEquals(java.util.Objects.toString(obj90), "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=true, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=false, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=35, com.atomikos.icatch.threaded_2pc=true, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
        org.junit.Assert.assertNotNull(strSet91);
        org.junit.Assert.assertTrue("'" + boolean92 + "' != '" + false + "'", boolean92 == false);
        org.junit.Assert.assertNotNull(wildcardClass93);
    }

    @Test
    public void test5441() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test5441");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        java.util.Properties properties3 = new java.util.Properties();
        java.util.Collection<java.lang.Object> objCollection4 = properties3.values();
        java.util.Enumeration<java.lang.Object> objEnumeration5 = properties3.keys();
        java.util.Properties properties6 = new java.util.Properties();
        java.lang.Object obj8 = properties6.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration9 = properties6.elements();
        boolean boolean10 = properties6.isEmpty();
        java.util.Set<java.lang.Object> objSet11 = properties6.keySet();
        java.util.Enumeration<java.lang.Object> objEnumeration12 = properties6.keys();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet13 = properties6.entrySet();
        java.lang.Object obj14 = properties0.put((java.lang.Object) properties3, (java.lang.Object) properties6);
        java.util.Properties properties15 = new java.util.Properties();
        java.util.Properties properties16 = new java.util.Properties();
        java.lang.Object obj18 = properties16.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet19 = properties16.stringPropertyNames();
        boolean boolean20 = properties15.containsValue((java.lang.Object) properties16);
        java.util.Collection<java.lang.Object> objCollection21 = properties15.values();
        java.util.Properties properties23 = new java.util.Properties();
        java.lang.Object obj25 = properties23.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration26 = properties23.elements();
        boolean boolean27 = properties23.isEmpty();
        java.util.Set<java.lang.Object> objSet28 = properties23.keySet();
        java.lang.Object obj29 = properties15.putIfAbsent((java.lang.Object) "hi!", (java.lang.Object) objSet28);
        java.util.Set<java.lang.Object> objSet30 = properties15.keySet();
        java.util.Set<java.lang.Object> objSet31 = properties15.keySet();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet32 = properties15.entrySet();
        java.lang.Object obj33 = properties3.remove((java.lang.Object) objEntrySet32);
        java.lang.String str34 = properties3.toString();
        java.util.Properties properties35 = new java.util.Properties();
        java.lang.Object obj37 = properties35.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet38 = properties35.stringPropertyNames();
        java.lang.String str39 = properties35.toString();
        java.lang.String str40 = properties35.toString();
        java.util.Set<java.lang.Object> objSet41 = properties35.keySet();
        java.util.Properties properties42 = new java.util.Properties();
        java.lang.Object obj44 = properties42.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration45 = properties42.elements();
        boolean boolean46 = properties42.isEmpty();
        java.util.Set<java.lang.Object> objSet47 = properties42.keySet();
        boolean boolean48 = properties42.isEmpty();
        java.lang.Object obj49 = properties3.putIfAbsent((java.lang.Object) properties35, (java.lang.Object) boolean48);
        java.util.Set<java.lang.String> strSet50 = properties35.stringPropertyNames();
        java.util.Properties properties51 = new java.util.Properties(properties35);
        java.io.OutputStream outputStream52 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties51.storeToXML(outputStream52, "{hi!=[], {}={}}", "");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(objCollection4);
        org.junit.Assert.assertNotNull(objEnumeration5);
        org.junit.Assert.assertNull(obj8);
        org.junit.Assert.assertNotNull(objEnumeration9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(objSet11);
        org.junit.Assert.assertNotNull(objEnumeration12);
        org.junit.Assert.assertNotNull(objEntrySet13);
        org.junit.Assert.assertNull(obj14);
        org.junit.Assert.assertNull(obj18);
        org.junit.Assert.assertNotNull(strSet19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(objCollection21);
        org.junit.Assert.assertNull(obj25);
        org.junit.Assert.assertNotNull(objEnumeration26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNotNull(objSet28);
        org.junit.Assert.assertNull(obj29);
        org.junit.Assert.assertNotNull(objSet30);
        org.junit.Assert.assertNotNull(objSet31);
        org.junit.Assert.assertNotNull(objEntrySet32);
        org.junit.Assert.assertNull(obj33);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "{}" + "'", str34, "{}");
        org.junit.Assert.assertNull(obj37);
        org.junit.Assert.assertNotNull(strSet38);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "{}" + "'", str39, "{}");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "{}" + "'", str40, "{}");
        org.junit.Assert.assertNotNull(objSet41);
        org.junit.Assert.assertNull(obj44);
        org.junit.Assert.assertNotNull(objEnumeration45);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertNotNull(objSet47);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertNull(obj49);
        org.junit.Assert.assertNotNull(strSet50);
    }

    @Test
    public void test5442() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test5442");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration3 = properties0.elements();
        boolean boolean4 = properties0.isEmpty();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet5 = properties0.entrySet();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties7 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties7.setSerialJtaTransactions(false);
        atomikosProperties7.setThreadedTwoPhaseCommit(true);
        atomikosProperties7.setMaxTimeout((long) '#');
        boolean boolean14 = atomikosProperties7.isForceShutdownOnVmExit();
        java.lang.Object obj15 = properties0.put((java.lang.Object) (short) 1, (java.lang.Object) atomikosProperties7);
        atomikosProperties7.setForceShutdownOnVmExit(true);
        java.util.Properties properties18 = atomikosProperties7.asProperties();
        java.util.Set<java.lang.Object> objSet19 = properties18.keySet();
        java.util.Collection<java.lang.Object> objCollection20 = properties18.values();
        java.lang.Object obj21 = properties18.clone();
        java.io.OutputStream outputStream22 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties18.save(outputStream22, "hi!");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(objEnumeration3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(objEntrySet5);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNull(obj15);
        org.junit.Assert.assertNotNull(properties18);
        org.junit.Assert.assertNotNull(objSet19);
        org.junit.Assert.assertNotNull(objCollection20);
        org.junit.Assert.assertNotNull(obj21);
// flaky:         org.junit.Assert.assertEquals(obj21.toString(), "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=true, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=false, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=35, com.atomikos.icatch.threaded_2pc=true, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
// flaky:         org.junit.Assert.assertEquals(java.lang.String.valueOf(obj21), "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=true, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=false, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=35, com.atomikos.icatch.threaded_2pc=true, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
// flaky:         org.junit.Assert.assertEquals(java.util.Objects.toString(obj21), "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=true, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=false, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=35, com.atomikos.icatch.threaded_2pc=true, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
    }

    @Test
    public void test5443() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test5443");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setSerialJtaTransactions(false);
        boolean boolean3 = atomikosProperties0.isSerialJtaTransactions();
        atomikosProperties0.setTransactionManagerUniqueName("hi!");
        java.lang.String str6 = atomikosProperties0.getLogBaseName();
        java.lang.String str7 = atomikosProperties0.getLogBaseName();
        boolean boolean8 = atomikosProperties0.isForceShutdownOnVmExit();
        long long9 = atomikosProperties0.getMaxTimeout();
        java.lang.String str10 = atomikosProperties0.getTransactionManagerUniqueName();
        atomikosProperties0.setTransactionManagerUniqueName("hi!");
        atomikosProperties0.setService("tmlog");
        atomikosProperties0.setThreadedTwoPhaseCommit(false);
        java.util.Properties properties17 = atomikosProperties0.asProperties();
        atomikosProperties0.setSerialJtaTransactions(true);
        int int20 = atomikosProperties0.getMaxActives();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "tmlog" + "'", str6, "tmlog");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "tmlog" + "'", str7, "tmlog");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + long9 + "' != '" + 300000L + "'", long9 == 300000L);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "hi!" + "'", str10, "hi!");
        org.junit.Assert.assertNotNull(properties17);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 50 + "'", int20 == 50);
    }

    @Test
    public void test5444() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test5444");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        java.lang.String str3 = properties0.toString();
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "{}" + "'", str3, "{}");
    }

    @Test
    public void test5445() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test5445");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration3 = properties0.elements();
        boolean boolean4 = properties0.isEmpty();
        java.util.Set<java.lang.Object> objSet5 = properties0.keySet();
        java.util.Enumeration<java.lang.Object> objEnumeration6 = properties0.keys();
        boolean boolean8 = properties0.equals((java.lang.Object) "");
        java.lang.String str9 = properties0.toString();
        boolean boolean10 = properties0.isEmpty();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties11 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties11.setSerialJtaTransactions(false);
        boolean boolean14 = atomikosProperties11.isSerialJtaTransactions();
        boolean boolean15 = atomikosProperties11.isEnableLogging();
        long long16 = atomikosProperties11.getMaxTimeout();
        atomikosProperties11.setLogBaseName("{=hi!}");
        java.lang.Object obj19 = properties0.get((java.lang.Object) atomikosProperties11);
        java.util.Properties properties20 = new java.util.Properties();
        java.lang.Object obj22 = properties20.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet23 = properties20.stringPropertyNames();
        java.util.Properties properties24 = new java.util.Properties();
        java.util.Properties properties25 = new java.util.Properties();
        java.lang.Object obj27 = properties25.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet28 = properties25.stringPropertyNames();
        boolean boolean29 = properties24.containsValue((java.lang.Object) properties25);
        java.util.Collection<java.lang.Object> objCollection30 = properties24.values();
        java.util.Enumeration<?> wildcardEnumeration31 = properties24.propertyNames();
        java.lang.Object obj33 = properties20.put((java.lang.Object) wildcardEnumeration31, (java.lang.Object) 10.0d);
        java.util.Properties properties34 = new java.util.Properties();
        java.lang.Object obj36 = properties34.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration37 = properties34.elements();
        boolean boolean38 = properties34.isEmpty();
        java.util.Set<java.lang.Object> objSet39 = properties34.keySet();
        boolean boolean40 = properties34.isEmpty();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet41 = properties34.entrySet();
        java.util.Properties properties42 = new java.util.Properties();
        java.lang.Object obj44 = properties42.remove((java.lang.Object) 0.0d);
        boolean boolean45 = properties42.isEmpty();
        java.lang.Object obj48 = properties42.setProperty("", "hi!");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties49 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties49.setSerialJtaTransactions(false);
        boolean boolean52 = properties34.remove((java.lang.Object) properties42, (java.lang.Object) atomikosProperties49);
        java.util.Properties properties53 = new java.util.Properties(properties42);
        int int54 = properties53.size();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties56 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties56.setSerialJtaTransactions(false);
        boolean boolean59 = atomikosProperties56.isSerialJtaTransactions();
        java.lang.String str60 = atomikosProperties56.getService();
        boolean boolean61 = atomikosProperties56.isEnableLogging();
        java.lang.String str62 = atomikosProperties56.getTransactionManagerUniqueName();
        boolean boolean63 = properties53.remove((java.lang.Object) (byte) 1, (java.lang.Object) atomikosProperties56);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties64 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties64.setSerialJtaTransactions(false);
        atomikosProperties64.setThreadedTwoPhaseCommit(true);
        atomikosProperties64.setEnableLogging(false);
        boolean boolean71 = atomikosProperties64.isSerialJtaTransactions();
        int int72 = atomikosProperties64.getMaxActives();
        boolean boolean73 = atomikosProperties64.isSerialJtaTransactions();
        boolean boolean74 = properties20.remove((java.lang.Object) properties53, (java.lang.Object) boolean73);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties75 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties75.setSerialJtaTransactions(false);
        atomikosProperties75.setThreadedTwoPhaseCommit(true);
        atomikosProperties75.setMaxTimeout((long) '#');
        boolean boolean82 = atomikosProperties75.isEnableLogging();
        atomikosProperties75.setCheckpointInterval((long) 100);
        java.lang.String str85 = atomikosProperties75.getTransactionManagerUniqueName();
        boolean boolean86 = properties53.contains((java.lang.Object) atomikosProperties75);
        java.util.Properties properties87 = atomikosProperties75.asProperties();
        java.util.Enumeration<java.lang.Object> objEnumeration88 = properties87.keys();
        java.util.Collection<java.lang.Object> objCollection89 = properties87.values();
        boolean boolean90 = properties0.containsKey((java.lang.Object) objCollection89);
        java.util.Collection<java.lang.Object> objCollection91 = properties0.values();
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(objEnumeration3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(objSet5);
        org.junit.Assert.assertNotNull(objEnumeration6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "{}" + "'", str9, "{}");
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertTrue("'" + long16 + "' != '" + 300000L + "'", long16 == 300000L);
        org.junit.Assert.assertNull(obj19);
        org.junit.Assert.assertNull(obj22);
        org.junit.Assert.assertNotNull(strSet23);
        org.junit.Assert.assertNull(obj27);
        org.junit.Assert.assertNotNull(strSet28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(objCollection30);
        org.junit.Assert.assertNotNull(wildcardEnumeration31);
        org.junit.Assert.assertNull(obj33);
        org.junit.Assert.assertNull(obj36);
        org.junit.Assert.assertNotNull(objEnumeration37);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertNotNull(objSet39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNotNull(objEntrySet41);
        org.junit.Assert.assertNull(obj44);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertNull(obj48);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + 0 + "'", int54 == 0);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertNull(str60);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertNull(str62);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertTrue("'" + int72 + "' != '" + 50 + "'", int72 == 50);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + true + "'", boolean82 == true);
        org.junit.Assert.assertNull(str85);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + false + "'", boolean86 == false);
        org.junit.Assert.assertNotNull(properties87);
        org.junit.Assert.assertNotNull(objEnumeration88);
        org.junit.Assert.assertNotNull(objCollection89);
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + false + "'", boolean90 == false);
        org.junit.Assert.assertNotNull(objCollection91);
    }

    @Test
    public void test5446() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test5446");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setSerialJtaTransactions(false);
        atomikosProperties0.setThreadedTwoPhaseCommit(true);
        atomikosProperties0.setMaxTimeout((long) '#');
        boolean boolean7 = atomikosProperties0.isEnableLogging();
        java.util.Properties properties8 = atomikosProperties0.asProperties();
        java.lang.String str9 = atomikosProperties0.getService();
        boolean boolean10 = atomikosProperties0.isSerialJtaTransactions();
        atomikosProperties0.setForceShutdownOnVmExit(true);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(properties8);
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
    }

    @Test
    public void test5447() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test5447");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet3 = properties0.stringPropertyNames();
        java.util.Properties properties4 = new java.util.Properties();
        java.util.Properties properties5 = new java.util.Properties();
        java.lang.Object obj7 = properties5.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet8 = properties5.stringPropertyNames();
        boolean boolean9 = properties4.containsValue((java.lang.Object) properties5);
        java.util.Collection<java.lang.Object> objCollection10 = properties4.values();
        java.util.Enumeration<?> wildcardEnumeration11 = properties4.propertyNames();
        java.lang.Object obj13 = properties0.put((java.lang.Object) wildcardEnumeration11, (java.lang.Object) 10.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration14 = properties0.elements();
        java.util.Properties properties15 = new java.util.Properties();
        java.lang.Object obj17 = properties15.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration18 = properties15.elements();
        boolean boolean19 = properties15.isEmpty();
        java.util.Set<java.lang.Object> objSet20 = properties15.keySet();
        boolean boolean21 = properties15.isEmpty();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties22 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties22.setSerialJtaTransactions(false);
        atomikosProperties22.setThreadedTwoPhaseCommit(true);
        atomikosProperties22.setMaxTimeout((long) '#');
        boolean boolean29 = atomikosProperties22.isEnableLogging();
        atomikosProperties22.setCheckpointInterval((long) (byte) -1);
        java.util.Properties properties32 = new java.util.Properties();
        java.util.Properties properties33 = new java.util.Properties();
        java.lang.Object obj35 = properties33.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet36 = properties33.stringPropertyNames();
        boolean boolean37 = properties32.containsValue((java.lang.Object) properties33);
        java.util.Collection<java.lang.Object> objCollection38 = properties32.values();
        java.lang.Object obj39 = properties15.replace((java.lang.Object) atomikosProperties22, (java.lang.Object) objCollection38);
        java.lang.Object obj40 = properties0.get((java.lang.Object) properties15);
        java.util.Properties properties41 = new java.util.Properties();
        java.lang.Object obj43 = properties41.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration44 = properties41.elements();
        boolean boolean45 = properties41.isEmpty();
        java.util.Set<java.lang.Object> objSet46 = properties41.keySet();
        boolean boolean47 = properties41.isEmpty();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet48 = properties41.entrySet();
        java.util.Properties properties49 = new java.util.Properties();
        java.lang.Object obj51 = properties49.remove((java.lang.Object) 0.0d);
        boolean boolean52 = properties49.isEmpty();
        java.lang.Object obj55 = properties49.setProperty("", "hi!");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties56 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties56.setSerialJtaTransactions(false);
        boolean boolean59 = properties41.remove((java.lang.Object) properties49, (java.lang.Object) atomikosProperties56);
        java.util.Properties properties60 = new java.util.Properties(properties49);
        int int61 = properties60.size();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties63 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties63.setSerialJtaTransactions(false);
        boolean boolean66 = atomikosProperties63.isSerialJtaTransactions();
        java.lang.String str67 = atomikosProperties63.getService();
        boolean boolean68 = atomikosProperties63.isEnableLogging();
        java.lang.String str69 = atomikosProperties63.getTransactionManagerUniqueName();
        boolean boolean70 = properties60.remove((java.lang.Object) (byte) 1, (java.lang.Object) atomikosProperties63);
        atomikosProperties63.setMaxActives((int) (short) -1);
        boolean boolean73 = atomikosProperties63.isThreadedTwoPhaseCommit();
        long long74 = atomikosProperties63.getDefaultJtaTimeout();
        int int75 = atomikosProperties63.getMaxActives();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties76 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties76.setSerialJtaTransactions(false);
        atomikosProperties76.setThreadedTwoPhaseCommit(true);
        atomikosProperties76.setMaxTimeout((long) '#');
        long long83 = atomikosProperties76.getCheckpointInterval();
        java.lang.String str84 = atomikosProperties76.getTransactionManagerUniqueName();
        atomikosProperties76.setTransactionManagerUniqueName("{=hi!}");
        atomikosProperties76.setSerialJtaTransactions(false);
        java.lang.String str89 = atomikosProperties76.getService();
        java.lang.Object obj90 = properties15.getOrDefault((java.lang.Object) atomikosProperties63, (java.lang.Object) atomikosProperties76);
        atomikosProperties63.setEnableLogging(true);
        atomikosProperties63.setThreadedTwoPhaseCommit(true);
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(strSet3);
        org.junit.Assert.assertNull(obj7);
        org.junit.Assert.assertNotNull(strSet8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(objCollection10);
        org.junit.Assert.assertNotNull(wildcardEnumeration11);
        org.junit.Assert.assertNull(obj13);
        org.junit.Assert.assertNotNull(objEnumeration14);
        org.junit.Assert.assertNull(obj17);
        org.junit.Assert.assertNotNull(objEnumeration18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(objSet20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNull(obj35);
        org.junit.Assert.assertNotNull(strSet36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(objCollection38);
        org.junit.Assert.assertNull(obj39);
        org.junit.Assert.assertNull(obj40);
        org.junit.Assert.assertNull(obj43);
        org.junit.Assert.assertNotNull(objEnumeration44);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertNotNull(objSet46);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertNotNull(objEntrySet48);
        org.junit.Assert.assertNull(obj51);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertNull(obj55);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertTrue("'" + int61 + "' != '" + 0 + "'", int61 == 0);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertNull(str67);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + true + "'", boolean68 == true);
        org.junit.Assert.assertNull(str69);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertTrue("'" + long74 + "' != '" + 10000L + "'", long74 == 10000L);
        org.junit.Assert.assertTrue("'" + int75 + "' != '" + (-1) + "'", int75 == (-1));
        org.junit.Assert.assertTrue("'" + long83 + "' != '" + 500L + "'", long83 == 500L);
        org.junit.Assert.assertNull(str84);
        org.junit.Assert.assertNull(str89);
        org.junit.Assert.assertNotNull(obj90);
    }

    @Test
    public void test5448() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test5448");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setSerialJtaTransactions(false);
        atomikosProperties0.setThreadedTwoPhaseCommit(true);
        boolean boolean5 = atomikosProperties0.isForceShutdownOnVmExit();
        java.lang.String str6 = atomikosProperties0.getTransactionManagerUniqueName();
        java.lang.String str7 = atomikosProperties0.getService();
        atomikosProperties0.setEnableLogging(false);
        atomikosProperties0.setDefaultJtaTimeout((long) '#');
        atomikosProperties0.setTransactionManagerUniqueName("tmlog");
        atomikosProperties0.setTransactionManagerUniqueName("{}");
        boolean boolean16 = atomikosProperties0.isSerialJtaTransactions();
        atomikosProperties0.setTransactionManagerUniqueName("hi!");
        atomikosProperties0.setSerialJtaTransactions(true);
        java.lang.String str21 = atomikosProperties0.getTransactionManagerUniqueName();
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "hi!" + "'", str21, "hi!");
    }

    @Test
    public void test5449() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test5449");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration3 = properties0.elements();
        int int4 = properties0.size();
        java.util.Properties properties5 = new java.util.Properties(properties0);
        java.util.Set<java.lang.String> strSet6 = properties0.stringPropertyNames();
        java.util.Set<java.lang.String> strSet7 = properties0.stringPropertyNames();
        java.util.Properties properties8 = new java.util.Properties();
        java.lang.Object obj10 = properties8.remove((java.lang.Object) 0.0d);
        boolean boolean11 = properties8.isEmpty();
        java.util.Enumeration<java.lang.Object> objEnumeration12 = properties8.elements();
        java.util.Properties properties13 = new java.util.Properties();
        java.lang.Object obj15 = properties13.remove((java.lang.Object) 0.0d);
        boolean boolean16 = properties13.isEmpty();
        java.util.Enumeration<java.lang.Object> objEnumeration17 = properties13.elements();
        java.util.Enumeration<java.lang.Object> objEnumeration18 = properties13.elements();
        java.lang.Object obj19 = properties0.replace((java.lang.Object) objEnumeration12, (java.lang.Object) objEnumeration18);
        java.lang.Object obj20 = properties0.clone();
        java.util.Properties properties21 = new java.util.Properties();
        java.lang.Object obj23 = properties21.remove((java.lang.Object) 0.0d);
        java.util.Properties properties24 = new java.util.Properties();
        java.lang.Object obj26 = properties24.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration27 = properties24.elements();
        boolean boolean28 = properties24.isEmpty();
        java.util.Set<java.lang.Object> objSet29 = properties24.keySet();
        java.util.Enumeration<java.lang.Object> objEnumeration30 = properties24.keys();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet31 = properties24.entrySet();
        java.util.Properties properties33 = new java.util.Properties();
        java.lang.Object obj35 = properties33.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration36 = properties33.elements();
        boolean boolean37 = properties33.isEmpty();
        java.util.Set<java.lang.Object> objSet38 = properties33.keySet();
        boolean boolean39 = properties33.isEmpty();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties40 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties40.setSerialJtaTransactions(false);
        atomikosProperties40.setThreadedTwoPhaseCommit(true);
        atomikosProperties40.setMaxTimeout((long) '#');
        boolean boolean47 = atomikosProperties40.isEnableLogging();
        atomikosProperties40.setCheckpointInterval((long) (byte) -1);
        java.util.Properties properties50 = new java.util.Properties();
        java.util.Properties properties51 = new java.util.Properties();
        java.lang.Object obj53 = properties51.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet54 = properties51.stringPropertyNames();
        boolean boolean55 = properties50.containsValue((java.lang.Object) properties51);
        java.util.Collection<java.lang.Object> objCollection56 = properties50.values();
        java.lang.Object obj57 = properties33.replace((java.lang.Object) atomikosProperties40, (java.lang.Object) objCollection56);
        boolean boolean59 = properties24.replace((java.lang.Object) 100.0d, (java.lang.Object) objCollection56, (java.lang.Object) 10.0d);
        java.util.Properties properties60 = new java.util.Properties();
        java.lang.Object obj62 = properties60.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration63 = properties60.elements();
        int int64 = properties60.size();
        java.util.Properties properties65 = new java.util.Properties(properties60);
        java.util.Set<java.lang.String> strSet66 = properties60.stringPropertyNames();
        java.util.Properties properties67 = new java.util.Properties();
        java.lang.Object obj69 = properties67.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration70 = properties67.elements();
        boolean boolean71 = properties67.isEmpty();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet72 = properties67.entrySet();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties74 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties74.setSerialJtaTransactions(false);
        atomikosProperties74.setThreadedTwoPhaseCommit(true);
        atomikosProperties74.setMaxTimeout((long) '#');
        boolean boolean81 = atomikosProperties74.isForceShutdownOnVmExit();
        java.lang.Object obj82 = properties67.put((java.lang.Object) (short) 1, (java.lang.Object) atomikosProperties74);
        boolean boolean83 = atomikosProperties74.isSerialJtaTransactions();
        java.lang.Object obj84 = properties24.replace((java.lang.Object) properties60, (java.lang.Object) boolean83);
        java.lang.Object obj85 = properties21.remove((java.lang.Object) properties60);
        java.util.Set<java.lang.String> strSet86 = properties60.stringPropertyNames();
        boolean boolean87 = properties0.contains((java.lang.Object) properties60);
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(objEnumeration3);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNotNull(strSet6);
        org.junit.Assert.assertNotNull(strSet7);
        org.junit.Assert.assertNull(obj10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNotNull(objEnumeration12);
        org.junit.Assert.assertNull(obj15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(objEnumeration17);
        org.junit.Assert.assertNotNull(objEnumeration18);
        org.junit.Assert.assertNull(obj19);
        org.junit.Assert.assertNotNull(obj20);
        org.junit.Assert.assertEquals(obj20.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj20), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj20), "{}");
        org.junit.Assert.assertNull(obj23);
        org.junit.Assert.assertNull(obj26);
        org.junit.Assert.assertNotNull(objEnumeration27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNotNull(objSet29);
        org.junit.Assert.assertNotNull(objEnumeration30);
        org.junit.Assert.assertNotNull(objEntrySet31);
        org.junit.Assert.assertNull(obj35);
        org.junit.Assert.assertNotNull(objEnumeration36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertNotNull(objSet38);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertNull(obj53);
        org.junit.Assert.assertNotNull(strSet54);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertNotNull(objCollection56);
        org.junit.Assert.assertNull(obj57);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertNull(obj62);
        org.junit.Assert.assertNotNull(objEnumeration63);
        org.junit.Assert.assertTrue("'" + int64 + "' != '" + 0 + "'", int64 == 0);
        org.junit.Assert.assertNotNull(strSet66);
        org.junit.Assert.assertNull(obj69);
        org.junit.Assert.assertNotNull(objEnumeration70);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + true + "'", boolean71 == true);
        org.junit.Assert.assertNotNull(objEntrySet72);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + false + "'", boolean81 == false);
        org.junit.Assert.assertNull(obj82);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + false + "'", boolean83 == false);
        org.junit.Assert.assertNull(obj84);
        org.junit.Assert.assertNull(obj85);
        org.junit.Assert.assertNotNull(strSet86);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + false + "'", boolean87 == false);
    }

    @Test
    public void test5450() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test5450");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet3 = properties0.stringPropertyNames();
        java.util.Properties properties4 = new java.util.Properties();
        java.util.Properties properties5 = new java.util.Properties();
        java.lang.Object obj7 = properties5.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet8 = properties5.stringPropertyNames();
        boolean boolean9 = properties4.containsValue((java.lang.Object) properties5);
        java.util.Collection<java.lang.Object> objCollection10 = properties4.values();
        java.util.Enumeration<?> wildcardEnumeration11 = properties4.propertyNames();
        java.lang.Object obj13 = properties0.put((java.lang.Object) wildcardEnumeration11, (java.lang.Object) 10.0d);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties14 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties14.setSerialJtaTransactions(false);
        atomikosProperties14.setThreadedTwoPhaseCommit(true);
        atomikosProperties14.setMaxTimeout((long) '#');
        boolean boolean21 = atomikosProperties14.isForceShutdownOnVmExit();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties22 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties22.setSerialJtaTransactions(false);
        atomikosProperties22.setThreadedTwoPhaseCommit(true);
        atomikosProperties22.setThreadedTwoPhaseCommit(true);
        java.lang.Object obj29 = properties0.getOrDefault((java.lang.Object) boolean21, (java.lang.Object) atomikosProperties22);
        java.util.Set<java.lang.String> strSet30 = properties0.stringPropertyNames();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties31 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties31.setSerialJtaTransactions(false);
        atomikosProperties31.setThreadedTwoPhaseCommit(true);
        atomikosProperties31.setThreadedTwoPhaseCommit(true);
        long long38 = atomikosProperties31.getMaxTimeout();
        java.lang.String str39 = atomikosProperties31.getLogBaseName();
        boolean boolean40 = atomikosProperties31.isSerialJtaTransactions();
        java.util.Properties properties41 = new java.util.Properties();
        java.lang.Object obj43 = properties41.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet44 = properties41.stringPropertyNames();
        java.util.Properties properties45 = new java.util.Properties();
        java.util.Properties properties46 = new java.util.Properties();
        java.lang.Object obj48 = properties46.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet49 = properties46.stringPropertyNames();
        boolean boolean50 = properties45.containsValue((java.lang.Object) properties46);
        java.util.Collection<java.lang.Object> objCollection51 = properties45.values();
        java.util.Enumeration<?> wildcardEnumeration52 = properties45.propertyNames();
        java.lang.Object obj54 = properties41.put((java.lang.Object) wildcardEnumeration52, (java.lang.Object) 10.0d);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties55 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties55.setSerialJtaTransactions(false);
        atomikosProperties55.setThreadedTwoPhaseCommit(true);
        atomikosProperties55.setMaxTimeout((long) '#');
        boolean boolean62 = atomikosProperties55.isForceShutdownOnVmExit();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties63 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties63.setSerialJtaTransactions(false);
        atomikosProperties63.setThreadedTwoPhaseCommit(true);
        atomikosProperties63.setThreadedTwoPhaseCommit(true);
        java.lang.Object obj70 = properties41.getOrDefault((java.lang.Object) boolean62, (java.lang.Object) atomikosProperties63);
        long long71 = atomikosProperties63.getMaxTimeout();
        java.lang.String str72 = atomikosProperties63.getTransactionManagerUniqueName();
        java.lang.Object obj73 = properties0.getOrDefault((java.lang.Object) atomikosProperties31, (java.lang.Object) str72);
        properties0.clear();
        java.util.Enumeration<?> wildcardEnumeration75 = properties0.propertyNames();
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(strSet3);
        org.junit.Assert.assertNull(obj7);
        org.junit.Assert.assertNotNull(strSet8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(objCollection10);
        org.junit.Assert.assertNotNull(wildcardEnumeration11);
        org.junit.Assert.assertNull(obj13);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(obj29);
        org.junit.Assert.assertNotNull(strSet30);
        org.junit.Assert.assertTrue("'" + long38 + "' != '" + 300000L + "'", long38 == 300000L);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "tmlog" + "'", str39, "tmlog");
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNull(obj43);
        org.junit.Assert.assertNotNull(strSet44);
        org.junit.Assert.assertNull(obj48);
        org.junit.Assert.assertNotNull(strSet49);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertNotNull(objCollection51);
        org.junit.Assert.assertNotNull(wildcardEnumeration52);
        org.junit.Assert.assertNull(obj54);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertNotNull(obj70);
        org.junit.Assert.assertTrue("'" + long71 + "' != '" + 300000L + "'", long71 == 300000L);
        org.junit.Assert.assertNull(str72);
        org.junit.Assert.assertNull(obj73);
        org.junit.Assert.assertNotNull(wildcardEnumeration75);
    }

    @Test
    public void test5451() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test5451");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration3 = properties0.elements();
        boolean boolean4 = properties0.isEmpty();
        java.util.Set<java.lang.Object> objSet5 = properties0.keySet();
        java.util.Enumeration<java.lang.Object> objEnumeration6 = properties0.keys();
        java.lang.String str8 = properties0.getProperty("hi!");
        java.lang.String str10 = properties0.getProperty("");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties11 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties11.setSerialJtaTransactions(false);
        atomikosProperties11.setThreadedTwoPhaseCommit(true);
        atomikosProperties11.setEnableLogging(false);
        boolean boolean18 = properties0.containsKey((java.lang.Object) atomikosProperties11);
        java.util.Properties properties19 = new java.util.Properties();
        java.lang.Object obj21 = properties19.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<?> wildcardEnumeration22 = properties19.propertyNames();
        java.util.Set<java.lang.String> strSet23 = properties19.stringPropertyNames();
        boolean boolean24 = properties0.equals((java.lang.Object) properties19);
        java.lang.Object obj25 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean26 = properties19.containsKey(obj25);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(objEnumeration3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(objSet5);
        org.junit.Assert.assertNotNull(objEnumeration6);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNull(obj21);
        org.junit.Assert.assertNotNull(wildcardEnumeration22);
        org.junit.Assert.assertNotNull(strSet23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
    }

    @Test
    public void test5452() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test5452");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setSerialJtaTransactions(false);
        atomikosProperties0.setThreadedTwoPhaseCommit(true);
        boolean boolean5 = atomikosProperties0.isForceShutdownOnVmExit();
        java.lang.String str6 = atomikosProperties0.getLogBaseDir();
        atomikosProperties0.setTransactionManagerUniqueName("{=hi!}");
        java.lang.String str9 = atomikosProperties0.getLogBaseName();
        long long10 = atomikosProperties0.getCheckpointInterval();
        atomikosProperties0.setDefaultJtaTimeout((long) (byte) 10);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "tmlog" + "'", str9, "tmlog");
        org.junit.Assert.assertTrue("'" + long10 + "' != '" + 500L + "'", long10 == 500L);
    }

    @Test
    public void test5453() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test5453");
        java.util.Properties properties0 = new java.util.Properties();
        java.util.Properties properties1 = new java.util.Properties();
        java.lang.Object obj3 = properties1.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet4 = properties1.stringPropertyNames();
        boolean boolean5 = properties0.containsValue((java.lang.Object) properties1);
        java.util.Collection<java.lang.Object> objCollection6 = properties0.values();
        java.util.Properties properties8 = new java.util.Properties();
        java.lang.Object obj10 = properties8.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration11 = properties8.elements();
        boolean boolean12 = properties8.isEmpty();
        java.util.Set<java.lang.Object> objSet13 = properties8.keySet();
        java.lang.Object obj14 = properties0.putIfAbsent((java.lang.Object) "hi!", (java.lang.Object) objSet13);
        java.util.Set<java.lang.Object> objSet15 = properties0.keySet();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties16 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties16.setSerialJtaTransactions(false);
        atomikosProperties16.setThreadedTwoPhaseCommit(true);
        atomikosProperties16.setMaxTimeout((long) '#');
        boolean boolean23 = atomikosProperties16.isEnableLogging();
        atomikosProperties16.setCheckpointInterval((long) (byte) -1);
        atomikosProperties16.setEnableLogging(true);
        java.util.Properties properties28 = new java.util.Properties();
        java.lang.Object obj30 = properties28.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration31 = properties28.elements();
        boolean boolean32 = properties28.isEmpty();
        java.util.Enumeration<java.lang.Object> objEnumeration33 = properties28.elements();
        java.lang.Object obj34 = properties0.replace((java.lang.Object) true, (java.lang.Object) properties28);
        java.util.Properties properties35 = new java.util.Properties();
        java.lang.Object obj37 = properties35.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration38 = properties35.elements();
        int int39 = properties35.size();
        java.util.Properties properties40 = new java.util.Properties(properties35);
        java.util.Set<java.lang.String> strSet41 = properties35.stringPropertyNames();
        boolean boolean42 = properties0.contains((java.lang.Object) strSet41);
        java.util.Collection<java.lang.Object> objCollection43 = properties0.values();
        java.util.Properties properties44 = new java.util.Properties(properties0);
        java.lang.Object obj45 = properties0.clone();
        java.util.Properties properties46 = new java.util.Properties(properties0);
        java.util.Properties properties47 = new java.util.Properties();
        java.lang.Object obj49 = properties47.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration50 = properties47.elements();
        boolean boolean51 = properties47.isEmpty();
        java.util.Set<java.lang.Object> objSet52 = properties47.keySet();
        java.util.Enumeration<java.lang.Object> objEnumeration53 = properties47.keys();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet54 = properties47.entrySet();
        java.util.Properties properties55 = new java.util.Properties(properties47);
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet56 = properties55.entrySet();
        java.util.Properties properties57 = new java.util.Properties();
        java.lang.Object obj59 = properties57.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration60 = properties57.elements();
        int int61 = properties57.size();
        java.util.Properties properties62 = new java.util.Properties(properties57);
        java.util.Set<java.lang.String> strSet63 = properties57.stringPropertyNames();
        java.util.Set<java.lang.String> strSet64 = properties57.stringPropertyNames();
        java.util.Properties properties65 = new java.util.Properties();
        java.lang.Object obj67 = properties65.remove((java.lang.Object) 0.0d);
        boolean boolean68 = properties65.isEmpty();
        java.util.Enumeration<java.lang.Object> objEnumeration69 = properties65.elements();
        java.util.Properties properties70 = new java.util.Properties();
        java.lang.Object obj72 = properties70.remove((java.lang.Object) 0.0d);
        boolean boolean73 = properties70.isEmpty();
        java.util.Enumeration<java.lang.Object> objEnumeration74 = properties70.elements();
        java.util.Enumeration<java.lang.Object> objEnumeration75 = properties70.elements();
        java.lang.Object obj76 = properties57.replace((java.lang.Object) objEnumeration69, (java.lang.Object) objEnumeration75);
        java.util.Enumeration<java.lang.Object> objEnumeration77 = properties57.keys();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties78 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties78.setSerialJtaTransactions(false);
        boolean boolean81 = atomikosProperties78.isSerialJtaTransactions();
        java.lang.String str82 = atomikosProperties78.getService();
        boolean boolean83 = atomikosProperties78.isEnableLogging();
        java.lang.String str84 = atomikosProperties78.getLogBaseName();
        boolean boolean85 = properties57.containsKey((java.lang.Object) atomikosProperties78);
        java.util.Enumeration<java.lang.Object> objEnumeration86 = properties57.elements();
        int int87 = properties57.size();
        java.lang.Object obj88 = properties46.put((java.lang.Object) properties55, (java.lang.Object) int87);
        java.util.Enumeration<java.lang.Object> objEnumeration89 = properties55.keys();
        org.junit.Assert.assertNull(obj3);
        org.junit.Assert.assertNotNull(strSet4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(objCollection6);
        org.junit.Assert.assertNull(obj10);
        org.junit.Assert.assertNotNull(objEnumeration11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(objSet13);
        org.junit.Assert.assertNull(obj14);
        org.junit.Assert.assertNotNull(objSet15);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNull(obj30);
        org.junit.Assert.assertNotNull(objEnumeration31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertNotNull(objEnumeration33);
        org.junit.Assert.assertNull(obj34);
        org.junit.Assert.assertNull(obj37);
        org.junit.Assert.assertNotNull(objEnumeration38);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 0 + "'", int39 == 0);
        org.junit.Assert.assertNotNull(strSet41);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertNotNull(objCollection43);
        org.junit.Assert.assertNotNull(obj45);
        org.junit.Assert.assertEquals(obj45.toString(), "{hi!=[]}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj45), "{hi!=[]}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj45), "{hi!=[]}");
        org.junit.Assert.assertNull(obj49);
        org.junit.Assert.assertNotNull(objEnumeration50);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertNotNull(objSet52);
        org.junit.Assert.assertNotNull(objEnumeration53);
        org.junit.Assert.assertNotNull(objEntrySet54);
        org.junit.Assert.assertNotNull(objEntrySet56);
        org.junit.Assert.assertNull(obj59);
        org.junit.Assert.assertNotNull(objEnumeration60);
        org.junit.Assert.assertTrue("'" + int61 + "' != '" + 0 + "'", int61 == 0);
        org.junit.Assert.assertNotNull(strSet63);
        org.junit.Assert.assertNotNull(strSet64);
        org.junit.Assert.assertNull(obj67);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + true + "'", boolean68 == true);
        org.junit.Assert.assertNotNull(objEnumeration69);
        org.junit.Assert.assertNull(obj72);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + true + "'", boolean73 == true);
        org.junit.Assert.assertNotNull(objEnumeration74);
        org.junit.Assert.assertNotNull(objEnumeration75);
        org.junit.Assert.assertNull(obj76);
        org.junit.Assert.assertNotNull(objEnumeration77);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + false + "'", boolean81 == false);
        org.junit.Assert.assertNull(str82);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + true + "'", boolean83 == true);
        org.junit.Assert.assertEquals("'" + str84 + "' != '" + "tmlog" + "'", str84, "tmlog");
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + false + "'", boolean85 == false);
        org.junit.Assert.assertNotNull(objEnumeration86);
        org.junit.Assert.assertTrue("'" + int87 + "' != '" + 0 + "'", int87 == 0);
        org.junit.Assert.assertNull(obj88);
        org.junit.Assert.assertNotNull(objEnumeration89);
    }

    @Test
    public void test5454() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test5454");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration3 = properties0.elements();
        boolean boolean4 = properties0.isEmpty();
        java.util.Set<java.lang.Object> objSet5 = properties0.keySet();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties6 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties6.setSerialJtaTransactions(false);
        atomikosProperties6.setThreadedTwoPhaseCommit(true);
        atomikosProperties6.setThreadedTwoPhaseCommit(true);
        java.util.Properties properties13 = atomikosProperties6.asProperties();
        int int14 = atomikosProperties6.getMaxActives();
        java.util.Properties properties15 = new java.util.Properties();
        java.lang.Object obj17 = properties15.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration18 = properties15.elements();
        boolean boolean19 = properties15.isEmpty();
        java.util.Set<java.lang.Object> objSet20 = properties15.keySet();
        boolean boolean22 = properties15.containsKey((java.lang.Object) (-1.0f));
        java.lang.Object obj23 = properties0.put((java.lang.Object) atomikosProperties6, (java.lang.Object) properties15);
        java.util.Properties properties24 = new java.util.Properties();
        java.lang.Object obj26 = properties24.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet27 = properties24.stringPropertyNames();
        java.util.Properties properties28 = new java.util.Properties();
        java.lang.Object obj30 = properties28.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet31 = properties28.stringPropertyNames();
        java.lang.Object obj33 = properties24.put((java.lang.Object) strSet31, (java.lang.Object) 0.0d);
        java.util.Properties properties34 = new java.util.Properties();
        java.util.Properties properties35 = new java.util.Properties();
        java.lang.Object obj37 = properties35.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet38 = properties35.stringPropertyNames();
        boolean boolean39 = properties34.containsValue((java.lang.Object) properties35);
        java.util.Collection<java.lang.Object> objCollection40 = properties34.values();
        java.util.Properties properties42 = new java.util.Properties();
        java.lang.Object obj44 = properties42.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration45 = properties42.elements();
        boolean boolean46 = properties42.isEmpty();
        java.util.Set<java.lang.Object> objSet47 = properties42.keySet();
        java.lang.Object obj48 = properties34.putIfAbsent((java.lang.Object) "hi!", (java.lang.Object) objSet47);
        java.util.Set<java.lang.Object> objSet49 = properties34.keySet();
        java.lang.Object obj51 = properties24.putIfAbsent((java.lang.Object) properties34, (java.lang.Object) (short) 10);
        java.util.Enumeration<?> wildcardEnumeration52 = properties34.propertyNames();
        properties0.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties34);
        java.util.Collection<java.lang.Object> objCollection54 = properties0.values();
        java.util.Enumeration<java.lang.Object> objEnumeration55 = properties0.keys();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties56 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties56.setSerialJtaTransactions(false);
        atomikosProperties56.setThreadedTwoPhaseCommit(true);
        atomikosProperties56.setEnableLogging(false);
        boolean boolean63 = atomikosProperties56.isSerialJtaTransactions();
        int int64 = atomikosProperties56.getMaxActives();
        boolean boolean65 = atomikosProperties56.isEnableLogging();
        long long66 = atomikosProperties56.getCheckpointInterval();
        long long67 = atomikosProperties56.getDefaultJtaTimeout();
        atomikosProperties56.setMaxActives((-1));
        atomikosProperties56.setLogBaseName("{}");
        java.lang.Object obj72 = properties0.remove((java.lang.Object) "{}");
        java.io.Writer writer73 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties0.store(writer73, "{[]=0.0}");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(objEnumeration3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(objSet5);
        org.junit.Assert.assertNotNull(properties13);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 50 + "'", int14 == 50);
        org.junit.Assert.assertNull(obj17);
        org.junit.Assert.assertNotNull(objEnumeration18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(objSet20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNull(obj23);
        org.junit.Assert.assertNull(obj26);
        org.junit.Assert.assertNotNull(strSet27);
        org.junit.Assert.assertNull(obj30);
        org.junit.Assert.assertNotNull(strSet31);
        org.junit.Assert.assertNull(obj33);
        org.junit.Assert.assertNull(obj37);
        org.junit.Assert.assertNotNull(strSet38);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(objCollection40);
        org.junit.Assert.assertNull(obj44);
        org.junit.Assert.assertNotNull(objEnumeration45);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertNotNull(objSet47);
        org.junit.Assert.assertNull(obj48);
        org.junit.Assert.assertNotNull(objSet49);
        org.junit.Assert.assertNull(obj51);
        org.junit.Assert.assertNotNull(wildcardEnumeration52);
        org.junit.Assert.assertNotNull(objCollection54);
        org.junit.Assert.assertNotNull(objEnumeration55);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertTrue("'" + int64 + "' != '" + 50 + "'", int64 == 50);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertTrue("'" + long66 + "' != '" + 500L + "'", long66 == 500L);
        org.junit.Assert.assertTrue("'" + long67 + "' != '" + 10000L + "'", long67 == 10000L);
        org.junit.Assert.assertNull(obj72);
    }

    @Test
    public void test5455() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test5455");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setSerialJtaTransactions(false);
        boolean boolean3 = atomikosProperties0.isThreadedTwoPhaseCommit();
        atomikosProperties0.setTransactionManagerUniqueName("hi!");
        long long6 = atomikosProperties0.getCheckpointInterval();
        long long7 = atomikosProperties0.getCheckpointInterval();
        boolean boolean8 = atomikosProperties0.isThreadedTwoPhaseCommit();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + long6 + "' != '" + 500L + "'", long6 == 500L);
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + 500L + "'", long7 == 500L);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
    }

    @Test
    public void test5456() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test5456");
        java.util.Properties properties0 = new java.util.Properties();
        java.util.Properties properties1 = new java.util.Properties();
        java.lang.Object obj3 = properties1.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet4 = properties1.stringPropertyNames();
        boolean boolean5 = properties0.containsValue((java.lang.Object) properties1);
        java.util.Collection<java.lang.Object> objCollection6 = properties0.values();
        java.util.Properties properties8 = new java.util.Properties();
        java.lang.Object obj10 = properties8.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration11 = properties8.elements();
        boolean boolean12 = properties8.isEmpty();
        java.util.Set<java.lang.Object> objSet13 = properties8.keySet();
        java.lang.Object obj14 = properties0.putIfAbsent((java.lang.Object) "hi!", (java.lang.Object) objSet13);
        java.util.Enumeration<java.lang.Object> objEnumeration15 = properties0.keys();
        java.util.Set<java.lang.String> strSet16 = properties0.stringPropertyNames();
        java.util.Set<java.lang.Object> objSet17 = properties0.keySet();
        java.io.OutputStream outputStream18 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties0.save(outputStream18, "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=100, com.atomikos.icatch.serial_jta_transactions=false, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=35, com.atomikos.icatch.service={=hi!}, com.atomikos.icatch.threaded_2pc=true, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(obj3);
        org.junit.Assert.assertNotNull(strSet4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(objCollection6);
        org.junit.Assert.assertNull(obj10);
        org.junit.Assert.assertNotNull(objEnumeration11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(objSet13);
        org.junit.Assert.assertNull(obj14);
        org.junit.Assert.assertNotNull(objEnumeration15);
        org.junit.Assert.assertNotNull(strSet16);
        org.junit.Assert.assertNotNull(objSet17);
    }

    @Test
    public void test5457() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test5457");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration3 = properties0.elements();
        boolean boolean4 = properties0.isEmpty();
        java.util.Set<java.lang.Object> objSet5 = properties0.keySet();
        boolean boolean7 = properties0.containsKey((java.lang.Object) (-1.0f));
        java.util.Collection<java.lang.Object> objCollection8 = properties0.values();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet9 = properties0.entrySet();
        int int10 = properties0.size();
        java.util.Set<java.lang.String> strSet11 = properties0.stringPropertyNames();
        java.util.Enumeration<?> wildcardEnumeration12 = properties0.propertyNames();
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(objEnumeration3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(objSet5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(objCollection8);
        org.junit.Assert.assertNotNull(objEntrySet9);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertNotNull(strSet11);
        org.junit.Assert.assertNotNull(wildcardEnumeration12);
    }

    @Test
    public void test5458() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test5458");
        java.util.Properties properties0 = new java.util.Properties();
        boolean boolean2 = properties0.contains((java.lang.Object) 100.0d);
        java.util.Properties properties3 = new java.util.Properties();
        java.lang.Object obj5 = properties3.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration6 = properties3.elements();
        boolean boolean7 = properties3.isEmpty();
        java.util.Set<java.lang.Object> objSet8 = properties3.keySet();
        boolean boolean9 = properties3.isEmpty();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet10 = properties3.entrySet();
        java.util.Properties properties11 = new java.util.Properties();
        java.lang.Object obj13 = properties11.remove((java.lang.Object) 0.0d);
        boolean boolean14 = properties11.isEmpty();
        java.lang.Object obj17 = properties11.setProperty("", "hi!");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties18 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties18.setSerialJtaTransactions(false);
        boolean boolean21 = properties3.remove((java.lang.Object) properties11, (java.lang.Object) atomikosProperties18);
        boolean boolean22 = properties0.equals((java.lang.Object) properties3);
        boolean boolean23 = properties3.isEmpty();
        java.util.Enumeration<java.lang.Object> objEnumeration24 = properties3.elements();
        java.util.Properties properties25 = new java.util.Properties();
        java.lang.Object obj27 = properties25.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration28 = properties25.elements();
        boolean boolean29 = properties25.isEmpty();
        java.util.Set<java.lang.Object> objSet30 = properties25.keySet();
        boolean boolean31 = properties25.isEmpty();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet32 = properties25.entrySet();
        java.util.Properties properties33 = new java.util.Properties();
        java.lang.Object obj35 = properties33.remove((java.lang.Object) 0.0d);
        boolean boolean36 = properties33.isEmpty();
        java.lang.Object obj39 = properties33.setProperty("", "hi!");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties40 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties40.setSerialJtaTransactions(false);
        boolean boolean43 = properties25.remove((java.lang.Object) properties33, (java.lang.Object) atomikosProperties40);
        java.util.Properties properties44 = new java.util.Properties(properties33);
        int int45 = properties44.size();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties47 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties47.setSerialJtaTransactions(false);
        boolean boolean50 = atomikosProperties47.isSerialJtaTransactions();
        java.lang.String str51 = atomikosProperties47.getService();
        boolean boolean52 = atomikosProperties47.isEnableLogging();
        java.lang.String str53 = atomikosProperties47.getTransactionManagerUniqueName();
        boolean boolean54 = properties44.remove((java.lang.Object) (byte) 1, (java.lang.Object) atomikosProperties47);
        atomikosProperties47.setMaxActives((int) (short) -1);
        java.util.Properties properties57 = atomikosProperties47.asProperties();
        properties3.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties57);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNull(obj5);
        org.junit.Assert.assertNotNull(objEnumeration6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(objSet8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertNotNull(objEntrySet10);
        org.junit.Assert.assertNull(obj13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNull(obj17);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNotNull(objEnumeration24);
        org.junit.Assert.assertNull(obj27);
        org.junit.Assert.assertNotNull(objEnumeration28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNotNull(objSet30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNotNull(objEntrySet32);
        org.junit.Assert.assertNull(obj35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNull(obj39);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 0 + "'", int45 == 0);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertNull(str51);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertNull(str53);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertNotNull(properties57);
    }

    @Test
    public void test5459() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test5459");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration3 = properties0.elements();
        boolean boolean4 = properties0.isEmpty();
        java.lang.Object obj7 = properties0.setProperty("tmlog", "");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties8 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties8.setSerialJtaTransactions(false);
        boolean boolean11 = atomikosProperties8.isSerialJtaTransactions();
        atomikosProperties8.setTransactionManagerUniqueName("hi!");
        atomikosProperties8.setForceShutdownOnVmExit(false);
        atomikosProperties8.setDefaultJtaTimeout((long) (byte) 10);
        java.lang.String str18 = atomikosProperties8.getTransactionManagerUniqueName();
        java.util.Properties properties19 = new java.util.Properties();
        java.util.Properties properties20 = new java.util.Properties();
        java.lang.Object obj22 = properties20.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet23 = properties20.stringPropertyNames();
        boolean boolean24 = properties19.containsValue((java.lang.Object) properties20);
        java.util.Collection<java.lang.Object> objCollection25 = properties19.values();
        java.util.Properties properties27 = new java.util.Properties();
        java.lang.Object obj29 = properties27.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration30 = properties27.elements();
        boolean boolean31 = properties27.isEmpty();
        java.util.Set<java.lang.Object> objSet32 = properties27.keySet();
        java.lang.Object obj33 = properties19.putIfAbsent((java.lang.Object) "hi!", (java.lang.Object) objSet32);
        java.util.Set<java.lang.Object> objSet34 = properties19.keySet();
        java.util.Set<java.lang.Object> objSet35 = properties19.keySet();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet36 = properties19.entrySet();
        java.util.Set<java.lang.Object> objSet37 = properties19.keySet();
        java.lang.Object obj38 = properties0.replace((java.lang.Object) atomikosProperties8, (java.lang.Object) properties19);
        java.util.Properties properties39 = atomikosProperties8.asProperties();
        java.lang.Object obj42 = properties39.setProperty("{hi!=[], {}={}}", "");
        java.util.Collection<java.lang.Object> objCollection43 = properties39.values();
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(objEnumeration3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNull(obj7);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "hi!" + "'", str18, "hi!");
        org.junit.Assert.assertNull(obj22);
        org.junit.Assert.assertNotNull(strSet23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(objCollection25);
        org.junit.Assert.assertNull(obj29);
        org.junit.Assert.assertNotNull(objEnumeration30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNotNull(objSet32);
        org.junit.Assert.assertNull(obj33);
        org.junit.Assert.assertNotNull(objSet34);
        org.junit.Assert.assertNotNull(objSet35);
        org.junit.Assert.assertNotNull(objEntrySet36);
        org.junit.Assert.assertNotNull(objSet37);
        org.junit.Assert.assertNull(obj38);
        org.junit.Assert.assertNotNull(properties39);
        org.junit.Assert.assertNull(obj42);
        org.junit.Assert.assertNotNull(objCollection43);
    }

    @Test
    public void test5460() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test5460");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties2 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties2.setSerialJtaTransactions(false);
        atomikosProperties2.setThreadedTwoPhaseCommit(true);
        atomikosProperties2.setEnableLogging(false);
        boolean boolean9 = atomikosProperties2.isSerialJtaTransactions();
        int int10 = atomikosProperties2.getMaxActives();
        boolean boolean11 = atomikosProperties2.isEnableLogging();
        long long12 = atomikosProperties2.getCheckpointInterval();
        long long13 = atomikosProperties2.getDefaultJtaTimeout();
        atomikosProperties2.setMaxActives((-1));
        boolean boolean16 = properties1.equals((java.lang.Object) (-1));
        java.util.Collection<java.lang.Object> objCollection17 = properties1.values();
        java.io.InputStream inputStream18 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties1.load(inputStream18);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 50 + "'", int10 == 50);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + long12 + "' != '" + 500L + "'", long12 == 500L);
        org.junit.Assert.assertTrue("'" + long13 + "' != '" + 10000L + "'", long13 == 10000L);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(objCollection17);
    }

    @Test
    public void test5461() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test5461");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setSerialJtaTransactions(false);
        atomikosProperties0.setThreadedTwoPhaseCommit(true);
        atomikosProperties0.setMaxTimeout((long) '#');
        long long7 = atomikosProperties0.getCheckpointInterval();
        java.lang.String str8 = atomikosProperties0.getLogBaseDir();
        java.lang.String str9 = atomikosProperties0.getTransactionManagerUniqueName();
        atomikosProperties0.setSerialJtaTransactions(false);
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + 500L + "'", long7 == 500L);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNull(str9);
    }

    @Test
    public void test5462() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test5462");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration3 = properties0.elements();
        boolean boolean4 = properties0.isEmpty();
        java.util.Set<java.lang.Object> objSet5 = properties0.keySet();
        java.util.Enumeration<java.lang.Object> objEnumeration6 = properties0.keys();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet7 = properties0.entrySet();
        java.util.Properties properties9 = new java.util.Properties();
        java.lang.Object obj11 = properties9.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration12 = properties9.elements();
        boolean boolean13 = properties9.isEmpty();
        java.util.Set<java.lang.Object> objSet14 = properties9.keySet();
        boolean boolean15 = properties9.isEmpty();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties16 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties16.setSerialJtaTransactions(false);
        atomikosProperties16.setThreadedTwoPhaseCommit(true);
        atomikosProperties16.setMaxTimeout((long) '#');
        boolean boolean23 = atomikosProperties16.isEnableLogging();
        atomikosProperties16.setCheckpointInterval((long) (byte) -1);
        java.util.Properties properties26 = new java.util.Properties();
        java.util.Properties properties27 = new java.util.Properties();
        java.lang.Object obj29 = properties27.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet30 = properties27.stringPropertyNames();
        boolean boolean31 = properties26.containsValue((java.lang.Object) properties27);
        java.util.Collection<java.lang.Object> objCollection32 = properties26.values();
        java.lang.Object obj33 = properties9.replace((java.lang.Object) atomikosProperties16, (java.lang.Object) objCollection32);
        boolean boolean35 = properties0.replace((java.lang.Object) 100.0d, (java.lang.Object) objCollection32, (java.lang.Object) 10.0d);
        java.util.Properties properties36 = new java.util.Properties();
        java.lang.Object obj38 = properties36.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration39 = properties36.elements();
        int int40 = properties36.size();
        java.util.Properties properties41 = new java.util.Properties(properties36);
        java.util.Set<java.lang.String> strSet42 = properties36.stringPropertyNames();
        java.util.Properties properties43 = new java.util.Properties();
        java.lang.Object obj45 = properties43.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration46 = properties43.elements();
        boolean boolean47 = properties43.isEmpty();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet48 = properties43.entrySet();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties50 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties50.setSerialJtaTransactions(false);
        atomikosProperties50.setThreadedTwoPhaseCommit(true);
        atomikosProperties50.setMaxTimeout((long) '#');
        boolean boolean57 = atomikosProperties50.isForceShutdownOnVmExit();
        java.lang.Object obj58 = properties43.put((java.lang.Object) (short) 1, (java.lang.Object) atomikosProperties50);
        boolean boolean59 = atomikosProperties50.isSerialJtaTransactions();
        java.lang.Object obj60 = properties0.replace((java.lang.Object) properties36, (java.lang.Object) boolean59);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties61 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties61.setSerialJtaTransactions(false);
        atomikosProperties61.setThreadedTwoPhaseCommit(true);
        atomikosProperties61.setSerialJtaTransactions(false);
        java.lang.String str68 = atomikosProperties61.getService();
        boolean boolean69 = properties36.contains((java.lang.Object) atomikosProperties61);
        java.lang.String str70 = atomikosProperties61.getService();
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(objEnumeration3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(objSet5);
        org.junit.Assert.assertNotNull(objEnumeration6);
        org.junit.Assert.assertNotNull(objEntrySet7);
        org.junit.Assert.assertNull(obj11);
        org.junit.Assert.assertNotNull(objEnumeration12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(objSet14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNull(obj29);
        org.junit.Assert.assertNotNull(strSet30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(objCollection32);
        org.junit.Assert.assertNull(obj33);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNull(obj38);
        org.junit.Assert.assertNotNull(objEnumeration39);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 0 + "'", int40 == 0);
        org.junit.Assert.assertNotNull(strSet42);
        org.junit.Assert.assertNull(obj45);
        org.junit.Assert.assertNotNull(objEnumeration46);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertNotNull(objEntrySet48);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertNull(obj58);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertNull(obj60);
        org.junit.Assert.assertNull(str68);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertNull(str70);
    }

    @Test
    public void test5463() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test5463");
        java.util.Properties properties0 = new java.util.Properties();
        boolean boolean2 = properties0.contains((java.lang.Object) 100.0d);
        java.util.Properties properties3 = new java.util.Properties();
        java.lang.Object obj5 = properties3.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration6 = properties3.elements();
        boolean boolean7 = properties3.isEmpty();
        java.util.Set<java.lang.Object> objSet8 = properties3.keySet();
        boolean boolean9 = properties3.isEmpty();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet10 = properties3.entrySet();
        java.util.Properties properties11 = new java.util.Properties();
        java.lang.Object obj13 = properties11.remove((java.lang.Object) 0.0d);
        boolean boolean14 = properties11.isEmpty();
        java.lang.Object obj17 = properties11.setProperty("", "hi!");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties18 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties18.setSerialJtaTransactions(false);
        boolean boolean21 = properties3.remove((java.lang.Object) properties11, (java.lang.Object) atomikosProperties18);
        boolean boolean22 = properties0.equals((java.lang.Object) properties3);
        java.util.Enumeration<java.lang.Object> objEnumeration23 = properties0.elements();
        java.util.Collection<java.lang.Object> objCollection24 = properties0.values();
        java.util.Enumeration<?> wildcardEnumeration25 = properties0.propertyNames();
        java.util.Set<java.lang.Object> objSet26 = properties0.keySet();
        java.util.Enumeration<java.lang.Object> objEnumeration27 = properties0.elements();
        java.util.Set<java.lang.String> strSet28 = properties0.stringPropertyNames();
        java.util.Properties properties29 = new java.util.Properties();
        java.lang.Object obj31 = properties29.remove((java.lang.Object) 0.0d);
        java.lang.String str33 = properties29.getProperty("");
        java.util.Properties properties34 = new java.util.Properties();
        java.lang.Object obj36 = properties34.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration37 = properties34.elements();
        int int38 = properties34.size();
        java.util.Properties properties39 = new java.util.Properties(properties34);
        properties29.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties34);
        boolean boolean41 = properties0.containsValue((java.lang.Object) properties29);
        java.lang.String str43 = properties29.getProperty("{hi!=[], {}={}}");
        java.lang.Object obj44 = null;
        boolean boolean45 = properties29.equals(obj44);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNull(obj5);
        org.junit.Assert.assertNotNull(objEnumeration6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(objSet8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertNotNull(objEntrySet10);
        org.junit.Assert.assertNull(obj13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNull(obj17);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNotNull(objEnumeration23);
        org.junit.Assert.assertNotNull(objCollection24);
        org.junit.Assert.assertNotNull(wildcardEnumeration25);
        org.junit.Assert.assertNotNull(objSet26);
        org.junit.Assert.assertNotNull(objEnumeration27);
        org.junit.Assert.assertNotNull(strSet28);
        org.junit.Assert.assertNull(obj31);
        org.junit.Assert.assertNull(str33);
        org.junit.Assert.assertNull(obj36);
        org.junit.Assert.assertNotNull(objEnumeration37);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 0 + "'", int38 == 0);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNull(str43);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
    }

    @Test
    public void test5464() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test5464");
        java.util.Properties properties0 = new java.util.Properties();
        java.util.Properties properties1 = new java.util.Properties();
        java.lang.Object obj3 = properties1.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet4 = properties1.stringPropertyNames();
        boolean boolean5 = properties0.containsValue((java.lang.Object) properties1);
        java.util.Collection<java.lang.Object> objCollection6 = properties0.values();
        java.util.Properties properties8 = new java.util.Properties();
        java.lang.Object obj10 = properties8.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration11 = properties8.elements();
        boolean boolean12 = properties8.isEmpty();
        java.util.Set<java.lang.Object> objSet13 = properties8.keySet();
        java.lang.Object obj14 = properties0.putIfAbsent((java.lang.Object) "hi!", (java.lang.Object) objSet13);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties15 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties15.setSerialJtaTransactions(false);
        boolean boolean18 = atomikosProperties15.isSerialJtaTransactions();
        java.util.Properties properties19 = atomikosProperties15.asProperties();
        java.lang.Object obj22 = properties19.setProperty("hi!", "");
        java.util.Properties properties23 = new java.util.Properties(properties19);
        java.util.Properties properties24 = new java.util.Properties();
        java.lang.Object obj26 = properties24.remove((java.lang.Object) 0.0d);
        java.util.Properties properties27 = new java.util.Properties();
        java.util.Collection<java.lang.Object> objCollection28 = properties27.values();
        java.util.Enumeration<java.lang.Object> objEnumeration29 = properties27.keys();
        java.util.Properties properties30 = new java.util.Properties();
        java.lang.Object obj32 = properties30.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration33 = properties30.elements();
        boolean boolean34 = properties30.isEmpty();
        java.util.Set<java.lang.Object> objSet35 = properties30.keySet();
        java.util.Enumeration<java.lang.Object> objEnumeration36 = properties30.keys();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet37 = properties30.entrySet();
        java.lang.Object obj38 = properties24.put((java.lang.Object) properties27, (java.lang.Object) properties30);
        java.lang.Object obj39 = properties0.putIfAbsent((java.lang.Object) properties23, (java.lang.Object) properties30);
        java.util.Properties properties40 = new java.util.Properties(properties23);
        java.util.Set<java.lang.String> strSet41 = properties40.stringPropertyNames();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties42 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties42.setSerialJtaTransactions(false);
        boolean boolean45 = atomikosProperties42.isSerialJtaTransactions();
        atomikosProperties42.setTransactionManagerUniqueName("hi!");
        atomikosProperties42.setForceShutdownOnVmExit(false);
        atomikosProperties42.setDefaultJtaTimeout((long) (byte) 10);
        java.lang.String str52 = atomikosProperties42.getTransactionManagerUniqueName();
        atomikosProperties42.setForceShutdownOnVmExit(false);
        boolean boolean55 = properties40.containsKey((java.lang.Object) false);
        java.util.Collection<java.lang.Object> objCollection56 = properties40.values();
        boolean boolean57 = properties40.isEmpty();
        org.junit.Assert.assertNull(obj3);
        org.junit.Assert.assertNotNull(strSet4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(objCollection6);
        org.junit.Assert.assertNull(obj10);
        org.junit.Assert.assertNotNull(objEnumeration11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(objSet13);
        org.junit.Assert.assertNull(obj14);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(properties19);
        org.junit.Assert.assertNull(obj22);
        org.junit.Assert.assertNull(obj26);
        org.junit.Assert.assertNotNull(objCollection28);
        org.junit.Assert.assertNotNull(objEnumeration29);
        org.junit.Assert.assertNull(obj32);
        org.junit.Assert.assertNotNull(objEnumeration33);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertNotNull(objSet35);
        org.junit.Assert.assertNotNull(objEnumeration36);
        org.junit.Assert.assertNotNull(objEntrySet37);
        org.junit.Assert.assertNull(obj38);
        org.junit.Assert.assertNull(obj39);
        org.junit.Assert.assertNotNull(strSet41);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "hi!" + "'", str52, "hi!");
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertNotNull(objCollection56);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
    }

    @Test
    public void test5465() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test5465");
        java.util.Properties properties0 = new java.util.Properties();
        java.util.Properties properties1 = new java.util.Properties();
        java.lang.Object obj3 = properties1.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet4 = properties1.stringPropertyNames();
        boolean boolean5 = properties0.containsValue((java.lang.Object) properties1);
        java.util.Collection<java.lang.Object> objCollection6 = properties0.values();
        java.util.Properties properties8 = new java.util.Properties();
        java.lang.Object obj10 = properties8.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration11 = properties8.elements();
        boolean boolean12 = properties8.isEmpty();
        java.util.Set<java.lang.Object> objSet13 = properties8.keySet();
        java.lang.Object obj14 = properties0.putIfAbsent((java.lang.Object) "hi!", (java.lang.Object) objSet13);
        java.util.Set<java.lang.Object> objSet15 = properties0.keySet();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties16 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties16.setSerialJtaTransactions(false);
        atomikosProperties16.setThreadedTwoPhaseCommit(true);
        atomikosProperties16.setMaxTimeout((long) '#');
        boolean boolean23 = atomikosProperties16.isEnableLogging();
        atomikosProperties16.setCheckpointInterval((long) (byte) -1);
        atomikosProperties16.setEnableLogging(true);
        java.util.Properties properties28 = new java.util.Properties();
        java.lang.Object obj30 = properties28.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration31 = properties28.elements();
        boolean boolean32 = properties28.isEmpty();
        java.util.Enumeration<java.lang.Object> objEnumeration33 = properties28.elements();
        java.lang.Object obj34 = properties0.replace((java.lang.Object) true, (java.lang.Object) properties28);
        java.util.Properties properties35 = new java.util.Properties();
        java.lang.Object obj37 = properties35.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration38 = properties35.elements();
        int int39 = properties35.size();
        java.util.Properties properties40 = new java.util.Properties(properties35);
        java.util.Set<java.lang.String> strSet41 = properties35.stringPropertyNames();
        boolean boolean42 = properties0.contains((java.lang.Object) strSet41);
        java.util.Collection<java.lang.Object> objCollection43 = properties0.values();
        properties0.clear();
        java.util.Properties properties45 = new java.util.Properties();
        java.util.Properties properties46 = new java.util.Properties();
        java.lang.Object obj48 = properties46.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet49 = properties46.stringPropertyNames();
        boolean boolean50 = properties45.containsValue((java.lang.Object) properties46);
        java.util.Collection<java.lang.Object> objCollection51 = properties45.values();
        java.util.Properties properties53 = new java.util.Properties();
        java.lang.Object obj55 = properties53.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration56 = properties53.elements();
        boolean boolean57 = properties53.isEmpty();
        java.util.Set<java.lang.Object> objSet58 = properties53.keySet();
        java.lang.Object obj59 = properties45.putIfAbsent((java.lang.Object) "hi!", (java.lang.Object) objSet58);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties60 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties60.setSerialJtaTransactions(false);
        boolean boolean63 = atomikosProperties60.isSerialJtaTransactions();
        java.util.Properties properties64 = atomikosProperties60.asProperties();
        java.lang.Object obj67 = properties64.setProperty("hi!", "");
        java.util.Properties properties68 = new java.util.Properties(properties64);
        java.util.Properties properties69 = new java.util.Properties();
        java.lang.Object obj71 = properties69.remove((java.lang.Object) 0.0d);
        java.util.Properties properties72 = new java.util.Properties();
        java.util.Collection<java.lang.Object> objCollection73 = properties72.values();
        java.util.Enumeration<java.lang.Object> objEnumeration74 = properties72.keys();
        java.util.Properties properties75 = new java.util.Properties();
        java.lang.Object obj77 = properties75.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration78 = properties75.elements();
        boolean boolean79 = properties75.isEmpty();
        java.util.Set<java.lang.Object> objSet80 = properties75.keySet();
        java.util.Enumeration<java.lang.Object> objEnumeration81 = properties75.keys();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet82 = properties75.entrySet();
        java.lang.Object obj83 = properties69.put((java.lang.Object) properties72, (java.lang.Object) properties75);
        java.lang.Object obj84 = properties45.putIfAbsent((java.lang.Object) properties68, (java.lang.Object) properties75);
        properties0.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties45);
        properties45.clear();
        org.junit.Assert.assertNull(obj3);
        org.junit.Assert.assertNotNull(strSet4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(objCollection6);
        org.junit.Assert.assertNull(obj10);
        org.junit.Assert.assertNotNull(objEnumeration11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(objSet13);
        org.junit.Assert.assertNull(obj14);
        org.junit.Assert.assertNotNull(objSet15);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNull(obj30);
        org.junit.Assert.assertNotNull(objEnumeration31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertNotNull(objEnumeration33);
        org.junit.Assert.assertNull(obj34);
        org.junit.Assert.assertNull(obj37);
        org.junit.Assert.assertNotNull(objEnumeration38);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 0 + "'", int39 == 0);
        org.junit.Assert.assertNotNull(strSet41);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertNotNull(objCollection43);
        org.junit.Assert.assertNull(obj48);
        org.junit.Assert.assertNotNull(strSet49);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertNotNull(objCollection51);
        org.junit.Assert.assertNull(obj55);
        org.junit.Assert.assertNotNull(objEnumeration56);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertNotNull(objSet58);
        org.junit.Assert.assertNull(obj59);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertNotNull(properties64);
        org.junit.Assert.assertNull(obj67);
        org.junit.Assert.assertNull(obj71);
        org.junit.Assert.assertNotNull(objCollection73);
        org.junit.Assert.assertNotNull(objEnumeration74);
        org.junit.Assert.assertNull(obj77);
        org.junit.Assert.assertNotNull(objEnumeration78);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + true + "'", boolean79 == true);
        org.junit.Assert.assertNotNull(objSet80);
        org.junit.Assert.assertNotNull(objEnumeration81);
        org.junit.Assert.assertNotNull(objEntrySet82);
        org.junit.Assert.assertNull(obj83);
        org.junit.Assert.assertNull(obj84);
    }

    @Test
    public void test5466() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test5466");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration3 = properties0.elements();
        boolean boolean4 = properties0.isEmpty();
        java.util.Set<java.lang.Object> objSet5 = properties0.keySet();
        boolean boolean6 = properties0.isEmpty();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet7 = properties0.entrySet();
        java.util.Properties properties8 = new java.util.Properties();
        java.lang.Object obj10 = properties8.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration11 = properties8.elements();
        boolean boolean12 = properties8.isEmpty();
        java.util.Set<java.lang.Object> objSet13 = properties8.keySet();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties14 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties14.setSerialJtaTransactions(false);
        atomikosProperties14.setThreadedTwoPhaseCommit(true);
        atomikosProperties14.setThreadedTwoPhaseCommit(true);
        java.util.Properties properties21 = atomikosProperties14.asProperties();
        int int22 = atomikosProperties14.getMaxActives();
        java.util.Properties properties23 = new java.util.Properties();
        java.lang.Object obj25 = properties23.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration26 = properties23.elements();
        boolean boolean27 = properties23.isEmpty();
        java.util.Set<java.lang.Object> objSet28 = properties23.keySet();
        boolean boolean30 = properties23.containsKey((java.lang.Object) (-1.0f));
        java.lang.Object obj31 = properties8.put((java.lang.Object) atomikosProperties14, (java.lang.Object) properties23);
        java.lang.String str32 = properties8.toString();
        boolean boolean34 = properties0.remove((java.lang.Object) str32, (java.lang.Object) 1.0d);
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet35 = properties0.entrySet();
        java.util.Properties properties36 = new java.util.Properties();
        java.lang.Object obj38 = properties36.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration39 = properties36.elements();
        java.util.Enumeration<java.lang.Object> objEnumeration40 = properties36.keys();
        properties0.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties36);
        java.io.Writer writer42 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties36.store(writer42, "");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(objEnumeration3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(objSet5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(objEntrySet7);
        org.junit.Assert.assertNull(obj10);
        org.junit.Assert.assertNotNull(objEnumeration11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(objSet13);
        org.junit.Assert.assertNotNull(properties21);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 50 + "'", int22 == 50);
        org.junit.Assert.assertNull(obj25);
        org.junit.Assert.assertNotNull(objEnumeration26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNotNull(objSet28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNull(obj31);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(objEntrySet35);
        org.junit.Assert.assertNull(obj38);
        org.junit.Assert.assertNotNull(objEnumeration39);
        org.junit.Assert.assertNotNull(objEnumeration40);
    }

    @Test
    public void test5467() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test5467");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setSerialJtaTransactions(false);
        boolean boolean3 = atomikosProperties0.isThreadedTwoPhaseCommit();
        boolean boolean4 = atomikosProperties0.isSerialJtaTransactions();
        atomikosProperties0.setLogBaseDir("");
        atomikosProperties0.setDefaultJtaTimeout((long) 100);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
    }

    @Test
    public void test5468() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test5468");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setSerialJtaTransactions(false);
        atomikosProperties0.setThreadedTwoPhaseCommit(true);
        atomikosProperties0.setThreadedTwoPhaseCommit(true);
        java.util.Properties properties7 = atomikosProperties0.asProperties();
        java.util.Enumeration<java.lang.Object> objEnumeration8 = properties7.elements();
        org.junit.Assert.assertNotNull(properties7);
        org.junit.Assert.assertNotNull(objEnumeration8);
    }

    @Test
    public void test5469() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test5469");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration3 = properties0.elements();
        boolean boolean4 = properties0.isEmpty();
        java.util.Set<java.lang.Object> objSet5 = properties0.keySet();
        boolean boolean6 = properties0.isEmpty();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet7 = properties0.entrySet();
        java.util.Properties properties8 = new java.util.Properties();
        java.lang.Object obj10 = properties8.remove((java.lang.Object) 0.0d);
        boolean boolean11 = properties8.isEmpty();
        java.lang.Object obj14 = properties8.setProperty("", "hi!");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties15 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties15.setSerialJtaTransactions(false);
        boolean boolean18 = properties0.remove((java.lang.Object) properties8, (java.lang.Object) atomikosProperties15);
        java.util.Properties properties19 = new java.util.Properties(properties8);
        int int20 = properties19.size();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties22 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties22.setSerialJtaTransactions(false);
        boolean boolean25 = atomikosProperties22.isSerialJtaTransactions();
        java.lang.String str26 = atomikosProperties22.getService();
        boolean boolean27 = atomikosProperties22.isEnableLogging();
        java.lang.String str28 = atomikosProperties22.getTransactionManagerUniqueName();
        boolean boolean29 = properties19.remove((java.lang.Object) (byte) 1, (java.lang.Object) atomikosProperties22);
        java.util.Properties properties30 = new java.util.Properties();
        java.lang.Object obj32 = properties30.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration33 = properties30.elements();
        boolean boolean34 = properties30.isEmpty();
        java.util.Enumeration<java.lang.Object> objEnumeration35 = properties30.elements();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet36 = properties30.entrySet();
        java.lang.Object obj37 = properties19.remove((java.lang.Object) objEntrySet36);
        java.lang.Object obj38 = properties19.clone();
        java.util.Properties properties39 = new java.util.Properties(properties19);
        java.util.Properties properties40 = new java.util.Properties();
        java.lang.Object obj42 = properties40.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration43 = properties40.elements();
        boolean boolean44 = properties40.isEmpty();
        java.util.Set<java.lang.Object> objSet45 = properties40.keySet();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties46 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties46.setSerialJtaTransactions(false);
        atomikosProperties46.setThreadedTwoPhaseCommit(true);
        atomikosProperties46.setThreadedTwoPhaseCommit(true);
        java.util.Properties properties53 = atomikosProperties46.asProperties();
        int int54 = atomikosProperties46.getMaxActives();
        java.util.Properties properties55 = new java.util.Properties();
        java.lang.Object obj57 = properties55.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration58 = properties55.elements();
        boolean boolean59 = properties55.isEmpty();
        java.util.Set<java.lang.Object> objSet60 = properties55.keySet();
        boolean boolean62 = properties55.containsKey((java.lang.Object) (-1.0f));
        java.lang.Object obj63 = properties40.put((java.lang.Object) atomikosProperties46, (java.lang.Object) properties55);
        int int64 = atomikosProperties46.getMaxActives();
        long long65 = atomikosProperties46.getCheckpointInterval();
        atomikosProperties46.setMaxActives((int) (short) 1);
        long long68 = atomikosProperties46.getDefaultJtaTimeout();
        java.util.Properties properties69 = new java.util.Properties();
        boolean boolean71 = properties69.contains((java.lang.Object) 100.0d);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties72 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties72.setSerialJtaTransactions(false);
        atomikosProperties72.setThreadedTwoPhaseCommit(true);
        atomikosProperties72.setSerialJtaTransactions(false);
        java.lang.String str79 = atomikosProperties72.getService();
        boolean boolean80 = properties69.containsKey((java.lang.Object) atomikosProperties72);
        java.util.Enumeration<?> wildcardEnumeration81 = properties69.propertyNames();
        java.util.Set<java.lang.Object> objSet82 = properties69.keySet();
        java.lang.Object obj83 = properties19.getOrDefault((java.lang.Object) long68, (java.lang.Object) properties69);
        java.lang.String str86 = properties69.getProperty("{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=false, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.tm_unique_name=tmlog, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}", "{true=class org.springframework.boot.jta.atomikos.AtomikosProperties}");
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(objEnumeration3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(objSet5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(objEntrySet7);
        org.junit.Assert.assertNull(obj10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNull(obj14);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 0 + "'", int20 == 0);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNull(str26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNull(str28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNull(obj32);
        org.junit.Assert.assertNotNull(objEnumeration33);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertNotNull(objEnumeration35);
        org.junit.Assert.assertNotNull(objEntrySet36);
        org.junit.Assert.assertNull(obj37);
        org.junit.Assert.assertNotNull(obj38);
        org.junit.Assert.assertEquals(obj38.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj38), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj38), "{}");
        org.junit.Assert.assertNull(obj42);
        org.junit.Assert.assertNotNull(objEnumeration43);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertNotNull(objSet45);
        org.junit.Assert.assertNotNull(properties53);
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + 50 + "'", int54 == 50);
        org.junit.Assert.assertNull(obj57);
        org.junit.Assert.assertNotNull(objEnumeration58);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertNotNull(objSet60);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertNull(obj63);
        org.junit.Assert.assertTrue("'" + int64 + "' != '" + 50 + "'", int64 == 50);
        org.junit.Assert.assertTrue("'" + long65 + "' != '" + 500L + "'", long65 == 500L);
        org.junit.Assert.assertTrue("'" + long68 + "' != '" + 10000L + "'", long68 == 10000L);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertNull(str79);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", boolean80 == false);
        org.junit.Assert.assertNotNull(wildcardEnumeration81);
        org.junit.Assert.assertNotNull(objSet82);
        org.junit.Assert.assertNotNull(obj83);
        org.junit.Assert.assertEquals(obj83.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj83), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj83), "{}");
        org.junit.Assert.assertEquals("'" + str86 + "' != '" + "{true=class org.springframework.boot.jta.atomikos.AtomikosProperties}" + "'", str86, "{true=class org.springframework.boot.jta.atomikos.AtomikosProperties}");
    }

    @Test
    public void test5470() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test5470");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setSerialJtaTransactions(false);
        atomikosProperties0.setThreadedTwoPhaseCommit(true);
        atomikosProperties0.setEnableLogging(false);
        atomikosProperties0.setForceShutdownOnVmExit(true);
        boolean boolean9 = atomikosProperties0.isSerialJtaTransactions();
        java.util.Properties properties10 = atomikosProperties0.asProperties();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet11 = properties10.entrySet();
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(properties10);
        org.junit.Assert.assertNotNull(objEntrySet11);
    }

    @Test
    public void test5471() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test5471");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<?> wildcardEnumeration3 = properties0.propertyNames();
        java.util.Properties properties4 = new java.util.Properties();
        java.lang.Object obj6 = properties4.remove((java.lang.Object) 0.0d);
        boolean boolean7 = properties4.isEmpty();
        java.util.Enumeration<java.lang.Object> objEnumeration8 = properties4.elements();
        java.util.Enumeration<java.lang.Object> objEnumeration9 = properties4.elements();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties10 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties10.setSerialJtaTransactions(false);
        atomikosProperties10.setThreadedTwoPhaseCommit(true);
        atomikosProperties10.setMaxTimeout((long) '#');
        boolean boolean17 = atomikosProperties10.isForceShutdownOnVmExit();
        int int18 = atomikosProperties10.getMaxActives();
        java.lang.Object obj19 = properties4.remove((java.lang.Object) int18);
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet20 = properties4.entrySet();
        java.util.Properties properties21 = new java.util.Properties();
        java.lang.Object obj23 = properties21.remove((java.lang.Object) 0.0d);
        java.lang.String str25 = properties21.getProperty("");
        java.lang.Object obj26 = properties0.getOrDefault((java.lang.Object) properties4, (java.lang.Object) str25);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties27 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties27.setSerialJtaTransactions(false);
        atomikosProperties27.setThreadedTwoPhaseCommit(true);
        atomikosProperties27.setMaxTimeout((long) '#');
        boolean boolean34 = atomikosProperties27.isEnableLogging();
        int int35 = atomikosProperties27.getMaxActives();
        java.lang.Object obj36 = properties0.get((java.lang.Object) int35);
        java.io.OutputStream outputStream37 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties0.storeToXML(outputStream37, "{[]=0.0}", "{}");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(wildcardEnumeration3);
        org.junit.Assert.assertNull(obj6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(objEnumeration8);
        org.junit.Assert.assertNotNull(objEnumeration9);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 50 + "'", int18 == 50);
        org.junit.Assert.assertNull(obj19);
        org.junit.Assert.assertNotNull(objEntrySet20);
        org.junit.Assert.assertNull(obj23);
        org.junit.Assert.assertNull(str25);
        org.junit.Assert.assertNull(obj26);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 50 + "'", int35 == 50);
        org.junit.Assert.assertNull(obj36);
    }

    @Test
    public void test5472() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test5472");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration3 = properties0.elements();
        boolean boolean4 = properties0.isEmpty();
        java.util.Set<java.lang.Object> objSet5 = properties0.keySet();
        boolean boolean6 = properties0.isEmpty();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet7 = properties0.entrySet();
        java.util.Properties properties8 = new java.util.Properties();
        java.lang.Object obj10 = properties8.remove((java.lang.Object) 0.0d);
        boolean boolean11 = properties8.isEmpty();
        java.lang.Object obj14 = properties8.setProperty("", "hi!");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties15 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties15.setSerialJtaTransactions(false);
        boolean boolean18 = properties0.remove((java.lang.Object) properties8, (java.lang.Object) atomikosProperties15);
        java.util.Properties properties19 = new java.util.Properties();
        java.lang.Object obj21 = properties19.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration22 = properties19.elements();
        int int23 = properties19.size();
        java.util.Properties properties24 = new java.util.Properties(properties19);
        boolean boolean25 = properties24.isEmpty();
        java.util.Properties properties26 = new java.util.Properties();
        java.lang.Object obj28 = properties26.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration29 = properties26.elements();
        int int30 = properties26.size();
        java.util.Properties properties31 = new java.util.Properties();
        java.lang.Object obj33 = properties31.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration34 = properties31.elements();
        boolean boolean35 = properties31.isEmpty();
        java.util.Set<java.lang.Object> objSet36 = properties31.keySet();
        boolean boolean37 = properties26.containsKey((java.lang.Object) objSet36);
        java.util.Enumeration<java.lang.Object> objEnumeration38 = properties26.keys();
        java.util.Properties properties39 = new java.util.Properties();
        java.lang.Object obj41 = properties39.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration42 = properties39.elements();
        boolean boolean43 = properties39.isEmpty();
        java.util.Set<java.lang.Object> objSet44 = properties39.keySet();
        java.util.Enumeration<java.lang.Object> objEnumeration45 = properties39.keys();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet46 = properties39.entrySet();
        boolean boolean48 = properties26.remove((java.lang.Object) properties39, (java.lang.Object) 1.0f);
        boolean boolean49 = properties24.contains((java.lang.Object) properties39);
        properties0.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties39);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties51 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties51.setSerialJtaTransactions(false);
        atomikosProperties51.setThreadedTwoPhaseCommit(true);
        atomikosProperties51.setSerialJtaTransactions(false);
        atomikosProperties51.setService("{=hi!}");
        atomikosProperties51.setLogBaseDir("");
        atomikosProperties51.setEnableLogging(true);
        boolean boolean64 = properties0.containsValue((java.lang.Object) true);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties65 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties65.setSerialJtaTransactions(false);
        atomikosProperties65.setThreadedTwoPhaseCommit(true);
        atomikosProperties65.setMaxTimeout((long) '#');
        long long72 = atomikosProperties65.getCheckpointInterval();
        java.lang.String str73 = atomikosProperties65.getTransactionManagerUniqueName();
        atomikosProperties65.setTransactionManagerUniqueName("{=hi!}");
        atomikosProperties65.setLogBaseName("hi!");
        java.lang.String str78 = atomikosProperties65.getLogBaseName();
        boolean boolean79 = atomikosProperties65.isThreadedTwoPhaseCommit();
        atomikosProperties65.setSerialJtaTransactions(false);
        atomikosProperties65.setSerialJtaTransactions(true);
        java.util.Properties properties84 = atomikosProperties65.asProperties();
        java.util.Properties properties85 = new java.util.Properties(properties84);
        boolean boolean86 = properties0.containsKey((java.lang.Object) properties85);
        java.io.InputStream inputStream87 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties85.loadFromXML(inputStream87);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(objEnumeration3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(objSet5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(objEntrySet7);
        org.junit.Assert.assertNull(obj10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNull(obj14);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNull(obj21);
        org.junit.Assert.assertNotNull(objEnumeration22);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 0 + "'", int23 == 0);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNull(obj28);
        org.junit.Assert.assertNotNull(objEnumeration29);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 0 + "'", int30 == 0);
        org.junit.Assert.assertNull(obj33);
        org.junit.Assert.assertNotNull(objEnumeration34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertNotNull(objSet36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(objEnumeration38);
        org.junit.Assert.assertNull(obj41);
        org.junit.Assert.assertNotNull(objEnumeration42);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNotNull(objSet44);
        org.junit.Assert.assertNotNull(objEnumeration45);
        org.junit.Assert.assertNotNull(objEntrySet46);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertTrue("'" + long72 + "' != '" + 500L + "'", long72 == 500L);
        org.junit.Assert.assertNull(str73);
        org.junit.Assert.assertEquals("'" + str78 + "' != '" + "hi!" + "'", str78, "hi!");
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + true + "'", boolean79 == true);
        org.junit.Assert.assertNotNull(properties84);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + false + "'", boolean86 == false);
    }

    @Test
    public void test5473() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test5473");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setSerialJtaTransactions(false);
        boolean boolean3 = atomikosProperties0.isSerialJtaTransactions();
        atomikosProperties0.setTransactionManagerUniqueName("tmlog");
        long long6 = atomikosProperties0.getMaxTimeout();
        atomikosProperties0.setMaxActives((int) (byte) 10);
        java.lang.String str9 = atomikosProperties0.getLogBaseName();
        long long10 = atomikosProperties0.getDefaultJtaTimeout();
        atomikosProperties0.setThreadedTwoPhaseCommit(false);
        long long13 = atomikosProperties0.getMaxTimeout();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + long6 + "' != '" + 300000L + "'", long6 == 300000L);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "tmlog" + "'", str9, "tmlog");
        org.junit.Assert.assertTrue("'" + long10 + "' != '" + 10000L + "'", long10 == 10000L);
        org.junit.Assert.assertTrue("'" + long13 + "' != '" + 300000L + "'", long13 == 300000L);
    }

    @Test
    public void test5474() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test5474");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setSerialJtaTransactions(false);
        boolean boolean3 = atomikosProperties0.isSerialJtaTransactions();
        java.lang.String str4 = atomikosProperties0.getService();
        boolean boolean5 = atomikosProperties0.isEnableLogging();
        java.util.Properties properties6 = atomikosProperties0.asProperties();
        atomikosProperties0.setForceShutdownOnVmExit(true);
        atomikosProperties0.setMaxActives((int) (short) -1);
        atomikosProperties0.setLogBaseDir("hi!");
        java.lang.String str13 = atomikosProperties0.getLogBaseName();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNotNull(properties6);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "tmlog" + "'", str13, "tmlog");
    }

    @Test
    public void test5475() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test5475");
        java.util.Properties properties0 = new java.util.Properties();
        java.util.Properties properties1 = new java.util.Properties();
        java.lang.Object obj3 = properties1.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet4 = properties1.stringPropertyNames();
        boolean boolean5 = properties0.containsValue((java.lang.Object) properties1);
        java.util.Collection<java.lang.Object> objCollection6 = properties0.values();
        java.util.Properties properties8 = new java.util.Properties();
        java.lang.Object obj10 = properties8.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration11 = properties8.elements();
        boolean boolean12 = properties8.isEmpty();
        java.util.Set<java.lang.Object> objSet13 = properties8.keySet();
        java.lang.Object obj14 = properties0.putIfAbsent((java.lang.Object) "hi!", (java.lang.Object) objSet13);
        java.util.Set<java.lang.Object> objSet15 = properties0.keySet();
        java.util.Set<java.lang.Object> objSet16 = properties0.keySet();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet17 = properties0.entrySet();
        java.util.Set<java.lang.Object> objSet18 = properties0.keySet();
        java.util.Properties properties19 = new java.util.Properties();
        java.lang.Object obj21 = properties19.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration22 = properties19.elements();
        boolean boolean23 = properties19.isEmpty();
        java.util.Set<java.lang.Object> objSet24 = properties19.keySet();
        boolean boolean25 = properties19.isEmpty();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet26 = properties19.entrySet();
        java.util.Properties properties27 = new java.util.Properties();
        java.lang.Object obj29 = properties27.remove((java.lang.Object) 0.0d);
        boolean boolean30 = properties27.isEmpty();
        java.lang.Object obj33 = properties27.setProperty("", "hi!");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties34 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties34.setSerialJtaTransactions(false);
        boolean boolean37 = properties19.remove((java.lang.Object) properties27, (java.lang.Object) atomikosProperties34);
        java.util.Properties properties38 = new java.util.Properties();
        java.lang.Object obj40 = properties38.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration41 = properties38.elements();
        int int42 = properties38.size();
        java.util.Properties properties43 = new java.util.Properties(properties38);
        boolean boolean44 = properties43.isEmpty();
        java.util.Properties properties45 = new java.util.Properties();
        java.lang.Object obj47 = properties45.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration48 = properties45.elements();
        int int49 = properties45.size();
        java.util.Properties properties50 = new java.util.Properties();
        java.lang.Object obj52 = properties50.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration53 = properties50.elements();
        boolean boolean54 = properties50.isEmpty();
        java.util.Set<java.lang.Object> objSet55 = properties50.keySet();
        boolean boolean56 = properties45.containsKey((java.lang.Object) objSet55);
        java.util.Enumeration<java.lang.Object> objEnumeration57 = properties45.keys();
        java.util.Properties properties58 = new java.util.Properties();
        java.lang.Object obj60 = properties58.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration61 = properties58.elements();
        boolean boolean62 = properties58.isEmpty();
        java.util.Set<java.lang.Object> objSet63 = properties58.keySet();
        java.util.Enumeration<java.lang.Object> objEnumeration64 = properties58.keys();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet65 = properties58.entrySet();
        boolean boolean67 = properties45.remove((java.lang.Object) properties58, (java.lang.Object) 1.0f);
        boolean boolean68 = properties43.contains((java.lang.Object) properties58);
        properties19.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties58);
        boolean boolean70 = properties0.contains((java.lang.Object) properties58);
        java.util.Enumeration<?> wildcardEnumeration71 = properties0.propertyNames();
        org.junit.Assert.assertNull(obj3);
        org.junit.Assert.assertNotNull(strSet4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(objCollection6);
        org.junit.Assert.assertNull(obj10);
        org.junit.Assert.assertNotNull(objEnumeration11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(objSet13);
        org.junit.Assert.assertNull(obj14);
        org.junit.Assert.assertNotNull(objSet15);
        org.junit.Assert.assertNotNull(objSet16);
        org.junit.Assert.assertNotNull(objEntrySet17);
        org.junit.Assert.assertNotNull(objSet18);
        org.junit.Assert.assertNull(obj21);
        org.junit.Assert.assertNotNull(objEnumeration22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNotNull(objSet24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(objEntrySet26);
        org.junit.Assert.assertNull(obj29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNull(obj33);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNull(obj40);
        org.junit.Assert.assertNotNull(objEnumeration41);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 0 + "'", int42 == 0);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertNull(obj47);
        org.junit.Assert.assertNotNull(objEnumeration48);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 0 + "'", int49 == 0);
        org.junit.Assert.assertNull(obj52);
        org.junit.Assert.assertNotNull(objEnumeration53);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertNotNull(objSet55);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertNotNull(objEnumeration57);
        org.junit.Assert.assertNull(obj60);
        org.junit.Assert.assertNotNull(objEnumeration61);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + true + "'", boolean62 == true);
        org.junit.Assert.assertNotNull(objSet63);
        org.junit.Assert.assertNotNull(objEnumeration64);
        org.junit.Assert.assertNotNull(objEntrySet65);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertNotNull(wildcardEnumeration71);
    }

    @Test
    public void test5476() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test5476");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setSerialJtaTransactions(false);
        boolean boolean3 = atomikosProperties0.isSerialJtaTransactions();
        atomikosProperties0.setTransactionManagerUniqueName("hi!");
        java.lang.String str6 = atomikosProperties0.getLogBaseName();
        java.lang.String str7 = atomikosProperties0.getLogBaseName();
        boolean boolean8 = atomikosProperties0.isSerialJtaTransactions();
        long long9 = atomikosProperties0.getDefaultJtaTimeout();
        java.util.Properties properties10 = atomikosProperties0.asProperties();
        java.util.Properties properties11 = new java.util.Properties();
        java.lang.Object obj13 = properties11.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration14 = properties11.elements();
        boolean boolean15 = properties11.isEmpty();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet16 = properties11.entrySet();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties18 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties18.setSerialJtaTransactions(false);
        atomikosProperties18.setThreadedTwoPhaseCommit(true);
        atomikosProperties18.setMaxTimeout((long) '#');
        boolean boolean25 = atomikosProperties18.isForceShutdownOnVmExit();
        java.lang.Object obj26 = properties11.put((java.lang.Object) (short) 1, (java.lang.Object) atomikosProperties18);
        long long27 = atomikosProperties18.getDefaultJtaTimeout();
        java.lang.String str28 = atomikosProperties18.getLogBaseDir();
        boolean boolean29 = atomikosProperties18.isThreadedTwoPhaseCommit();
        atomikosProperties18.setEnableLogging(false);
        atomikosProperties18.setCheckpointInterval((long) 35);
        boolean boolean34 = properties10.containsKey((java.lang.Object) 35);
        java.io.InputStream inputStream35 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties10.load(inputStream35);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "tmlog" + "'", str6, "tmlog");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "tmlog" + "'", str7, "tmlog");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + long9 + "' != '" + 10000L + "'", long9 == 10000L);
        org.junit.Assert.assertNotNull(properties10);
        org.junit.Assert.assertNull(obj13);
        org.junit.Assert.assertNotNull(objEnumeration14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(objEntrySet16);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNull(obj26);
        org.junit.Assert.assertTrue("'" + long27 + "' != '" + 10000L + "'", long27 == 10000L);
        org.junit.Assert.assertNull(str28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
    }

    @Test
    public void test5477() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test5477");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration3 = properties0.elements();
        boolean boolean4 = properties0.isEmpty();
        java.util.Set<java.lang.Object> objSet5 = properties0.keySet();
        boolean boolean6 = properties0.isEmpty();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet7 = properties0.entrySet();
        java.util.Set<java.lang.Object> objSet8 = properties0.keySet();
        boolean boolean9 = properties0.isEmpty();
        int int10 = properties0.size();
        java.util.Properties properties11 = new java.util.Properties();
        java.lang.Object obj13 = properties11.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration14 = properties11.elements();
        boolean boolean15 = properties11.isEmpty();
        java.util.Set<java.lang.Object> objSet16 = properties11.keySet();
        boolean boolean17 = properties11.isEmpty();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet18 = properties11.entrySet();
        java.util.Properties properties19 = new java.util.Properties();
        java.lang.Object obj21 = properties19.remove((java.lang.Object) 0.0d);
        boolean boolean22 = properties19.isEmpty();
        java.lang.Object obj25 = properties19.setProperty("", "hi!");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties26 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties26.setSerialJtaTransactions(false);
        boolean boolean29 = properties11.remove((java.lang.Object) properties19, (java.lang.Object) atomikosProperties26);
        java.util.Properties properties30 = new java.util.Properties(properties19);
        int int31 = properties30.size();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties33 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties33.setSerialJtaTransactions(false);
        boolean boolean36 = atomikosProperties33.isSerialJtaTransactions();
        java.lang.String str37 = atomikosProperties33.getService();
        boolean boolean38 = atomikosProperties33.isEnableLogging();
        java.lang.String str39 = atomikosProperties33.getTransactionManagerUniqueName();
        boolean boolean40 = properties30.remove((java.lang.Object) (byte) 1, (java.lang.Object) atomikosProperties33);
        atomikosProperties33.setMaxActives((int) (short) -1);
        boolean boolean43 = atomikosProperties33.isThreadedTwoPhaseCommit();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties44 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties44.setSerialJtaTransactions(false);
        boolean boolean47 = atomikosProperties44.isSerialJtaTransactions();
        java.lang.String str48 = atomikosProperties44.getService();
        boolean boolean49 = atomikosProperties44.isEnableLogging();
        atomikosProperties44.setCheckpointInterval((long) (byte) 100);
        atomikosProperties44.setLogBaseDir("tmlog");
        java.lang.Object obj54 = properties0.replace((java.lang.Object) atomikosProperties33, (java.lang.Object) "tmlog");
        java.util.Properties properties55 = new java.util.Properties(properties0);
        java.util.Enumeration<?> wildcardEnumeration56 = properties0.propertyNames();
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(objEnumeration3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(objSet5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(objEntrySet7);
        org.junit.Assert.assertNotNull(objSet8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertNull(obj13);
        org.junit.Assert.assertNotNull(objEnumeration14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(objSet16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(objEntrySet18);
        org.junit.Assert.assertNull(obj21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNull(obj25);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 0 + "'", int31 == 0);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNull(str37);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertNull(str39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNull(str48);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertNull(obj54);
        org.junit.Assert.assertNotNull(wildcardEnumeration56);
    }

    @Test
    public void test5478() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test5478");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet3 = properties0.stringPropertyNames();
        java.util.Properties properties4 = new java.util.Properties();
        java.util.Properties properties5 = new java.util.Properties();
        java.lang.Object obj7 = properties5.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet8 = properties5.stringPropertyNames();
        boolean boolean9 = properties4.containsValue((java.lang.Object) properties5);
        java.util.Collection<java.lang.Object> objCollection10 = properties4.values();
        java.util.Enumeration<?> wildcardEnumeration11 = properties4.propertyNames();
        java.lang.Object obj13 = properties0.put((java.lang.Object) wildcardEnumeration11, (java.lang.Object) 10.0d);
        java.util.Properties properties14 = new java.util.Properties();
        java.lang.Object obj16 = properties14.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration17 = properties14.elements();
        boolean boolean18 = properties14.isEmpty();
        java.util.Set<java.lang.Object> objSet19 = properties14.keySet();
        boolean boolean20 = properties14.isEmpty();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet21 = properties14.entrySet();
        java.util.Properties properties22 = new java.util.Properties();
        java.lang.Object obj24 = properties22.remove((java.lang.Object) 0.0d);
        boolean boolean25 = properties22.isEmpty();
        java.lang.Object obj28 = properties22.setProperty("", "hi!");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties29 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties29.setSerialJtaTransactions(false);
        boolean boolean32 = properties14.remove((java.lang.Object) properties22, (java.lang.Object) atomikosProperties29);
        java.util.Properties properties33 = new java.util.Properties(properties22);
        int int34 = properties33.size();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties36 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties36.setSerialJtaTransactions(false);
        boolean boolean39 = atomikosProperties36.isSerialJtaTransactions();
        java.lang.String str40 = atomikosProperties36.getService();
        boolean boolean41 = atomikosProperties36.isEnableLogging();
        java.lang.String str42 = atomikosProperties36.getTransactionManagerUniqueName();
        boolean boolean43 = properties33.remove((java.lang.Object) (byte) 1, (java.lang.Object) atomikosProperties36);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties44 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties44.setSerialJtaTransactions(false);
        atomikosProperties44.setThreadedTwoPhaseCommit(true);
        atomikosProperties44.setEnableLogging(false);
        boolean boolean51 = atomikosProperties44.isSerialJtaTransactions();
        int int52 = atomikosProperties44.getMaxActives();
        boolean boolean53 = atomikosProperties44.isSerialJtaTransactions();
        boolean boolean54 = properties0.remove((java.lang.Object) properties33, (java.lang.Object) boolean53);
        java.lang.String str55 = properties33.toString();
        boolean boolean56 = properties33.isEmpty();
        java.lang.String str59 = properties33.getProperty("", "");
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(strSet3);
        org.junit.Assert.assertNull(obj7);
        org.junit.Assert.assertNotNull(strSet8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(objCollection10);
        org.junit.Assert.assertNotNull(wildcardEnumeration11);
        org.junit.Assert.assertNull(obj13);
        org.junit.Assert.assertNull(obj16);
        org.junit.Assert.assertNotNull(objEnumeration17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(objSet19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNotNull(objEntrySet21);
        org.junit.Assert.assertNull(obj24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNull(obj28);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 0 + "'", int34 == 0);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNull(str40);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertNull(str42);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + 50 + "'", int52 == 50);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "{}" + "'", str55, "{}");
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "hi!" + "'", str59, "hi!");
    }

    @Test
    public void test5479() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test5479");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setSerialJtaTransactions(false);
        atomikosProperties0.setThreadedTwoPhaseCommit(true);
        atomikosProperties0.setMaxTimeout((long) '#');
        long long7 = atomikosProperties0.getCheckpointInterval();
        java.lang.String str8 = atomikosProperties0.getTransactionManagerUniqueName();
        atomikosProperties0.setTransactionManagerUniqueName("{=hi!}");
        atomikosProperties0.setLogBaseName("hi!");
        atomikosProperties0.setEnableLogging(false);
        boolean boolean15 = atomikosProperties0.isForceShutdownOnVmExit();
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + 500L + "'", long7 == 500L);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
    }

    @Test
    public void test5480() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test5480");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration3 = properties0.elements();
        boolean boolean4 = properties0.isEmpty();
        java.util.Set<java.lang.Object> objSet5 = properties0.keySet();
        boolean boolean7 = properties0.containsKey((java.lang.Object) (-1.0f));
        java.util.Collection<java.lang.Object> objCollection8 = properties0.values();
        java.lang.Object obj9 = properties0.clone();
        java.util.Properties properties10 = new java.util.Properties();
        java.lang.Object obj12 = properties10.remove((java.lang.Object) 0.0d);
        boolean boolean13 = properties10.isEmpty();
        java.util.Enumeration<java.lang.Object> objEnumeration14 = properties10.elements();
        java.lang.Object obj17 = properties10.replace((java.lang.Object) 1, (java.lang.Object) 1);
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet18 = properties10.entrySet();
        boolean boolean19 = properties0.contains((java.lang.Object) properties10);
        java.lang.Object obj20 = properties10.clone();
        java.util.Properties properties21 = new java.util.Properties();
        java.lang.Object obj23 = properties21.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration24 = properties21.elements();
        boolean boolean25 = properties21.isEmpty();
        java.util.Set<java.lang.Object> objSet26 = properties21.keySet();
        boolean boolean27 = properties21.isEmpty();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet28 = properties21.entrySet();
        java.util.Properties properties29 = new java.util.Properties();
        java.lang.Object obj31 = properties29.remove((java.lang.Object) 0.0d);
        boolean boolean32 = properties29.isEmpty();
        java.lang.Object obj35 = properties29.setProperty("", "hi!");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties36 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties36.setSerialJtaTransactions(false);
        boolean boolean39 = properties21.remove((java.lang.Object) properties29, (java.lang.Object) atomikosProperties36);
        java.util.Properties properties40 = new java.util.Properties();
        java.lang.Object obj42 = properties40.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration43 = properties40.elements();
        boolean boolean44 = properties40.isEmpty();
        java.util.Set<java.lang.Object> objSet45 = properties40.keySet();
        boolean boolean47 = properties40.containsKey((java.lang.Object) (-1.0f));
        java.util.Collection<java.lang.Object> objCollection48 = properties40.values();
        java.lang.Object obj49 = properties10.replace((java.lang.Object) boolean39, (java.lang.Object) objCollection48);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties50 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties50.setSerialJtaTransactions(false);
        boolean boolean53 = atomikosProperties50.isSerialJtaTransactions();
        boolean boolean54 = atomikosProperties50.isEnableLogging();
        atomikosProperties50.setService("");
        java.util.Properties properties57 = atomikosProperties50.asProperties();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties58 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties58.setSerialJtaTransactions(false);
        java.lang.Object obj61 = properties57.remove((java.lang.Object) atomikosProperties58);
        boolean boolean62 = atomikosProperties58.isSerialJtaTransactions();
        atomikosProperties58.setService("{{}={}}");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties65 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties65.setSerialJtaTransactions(false);
        atomikosProperties65.setThreadedTwoPhaseCommit(true);
        atomikosProperties65.setSerialJtaTransactions(false);
        boolean boolean72 = atomikosProperties65.isSerialJtaTransactions();
        java.lang.Object obj73 = properties10.getOrDefault((java.lang.Object) "{{}={}}", (java.lang.Object) boolean72);
        java.io.Reader reader74 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties10.load(reader74);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(objEnumeration3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(objSet5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(objCollection8);
        org.junit.Assert.assertNotNull(obj9);
        org.junit.Assert.assertEquals(obj9.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj9), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj9), "{}");
        org.junit.Assert.assertNull(obj12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(objEnumeration14);
        org.junit.Assert.assertNull(obj17);
        org.junit.Assert.assertNotNull(objEntrySet18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(obj20);
        org.junit.Assert.assertEquals(obj20.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj20), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj20), "{}");
        org.junit.Assert.assertNull(obj23);
        org.junit.Assert.assertNotNull(objEnumeration24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(objSet26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNotNull(objEntrySet28);
        org.junit.Assert.assertNull(obj31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertNull(obj35);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNull(obj42);
        org.junit.Assert.assertNotNull(objEnumeration43);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertNotNull(objSet45);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNotNull(objCollection48);
        org.junit.Assert.assertNull(obj49);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertNotNull(properties57);
        org.junit.Assert.assertNull(obj61);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertEquals("'" + obj73 + "' != '" + false + "'", obj73, false);
    }

    @Test
    public void test5481() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test5481");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setSerialJtaTransactions(false);
        atomikosProperties0.setThreadedTwoPhaseCommit(true);
        atomikosProperties0.setEnableLogging(false);
        boolean boolean7 = atomikosProperties0.isSerialJtaTransactions();
        int int8 = atomikosProperties0.getMaxActives();
        boolean boolean9 = atomikosProperties0.isSerialJtaTransactions();
        long long10 = atomikosProperties0.getMaxTimeout();
        java.util.Properties properties11 = atomikosProperties0.asProperties();
        java.util.Enumeration<java.lang.Object> objEnumeration12 = properties11.elements();
        java.io.PrintWriter printWriter13 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties11.list(printWriter13);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 50 + "'", int8 == 50);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + long10 + "' != '" + 300000L + "'", long10 == 300000L);
        org.junit.Assert.assertNotNull(properties11);
        org.junit.Assert.assertNotNull(objEnumeration12);
    }

    @Test
    public void test5482() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test5482");
        java.util.Properties properties0 = new java.util.Properties();
        java.util.Collection<java.lang.Object> objCollection1 = properties0.values();
        java.util.Enumeration<java.lang.Object> objEnumeration2 = properties0.keys();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties4 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties4.setSerialJtaTransactions(false);
        atomikosProperties4.setThreadedTwoPhaseCommit(true);
        atomikosProperties4.setMaxTimeout((long) '#');
        boolean boolean11 = atomikosProperties4.isEnableLogging();
        atomikosProperties4.setCheckpointInterval((long) (byte) -1);
        atomikosProperties4.setEnableLogging(true);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties16 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties16.setSerialJtaTransactions(false);
        atomikosProperties16.setThreadedTwoPhaseCommit(true);
        atomikosProperties16.setMaxTimeout((long) '#');
        boolean boolean23 = atomikosProperties16.isEnableLogging();
        atomikosProperties16.setCheckpointInterval((long) (byte) -1);
        atomikosProperties16.setEnableLogging(true);
        atomikosProperties16.setLogBaseDir("");
        boolean boolean30 = properties0.replace((java.lang.Object) 10000L, (java.lang.Object) atomikosProperties4, (java.lang.Object) "");
        properties0.clear();
        java.util.Enumeration<?> wildcardEnumeration32 = properties0.propertyNames();
        java.lang.String str35 = properties0.getProperty("{}", "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=100, com.atomikos.icatch.serial_jta_transactions=false, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=35, com.atomikos.icatch.service={=hi!}, com.atomikos.icatch.threaded_2pc=true, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
        org.junit.Assert.assertNotNull(objCollection1);
        org.junit.Assert.assertNotNull(objEnumeration2);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(wildcardEnumeration32);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=100, com.atomikos.icatch.serial_jta_transactions=false, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=35, com.atomikos.icatch.service={=hi!}, com.atomikos.icatch.threaded_2pc=true, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}" + "'", str35, "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=100, com.atomikos.icatch.serial_jta_transactions=false, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=35, com.atomikos.icatch.service={=hi!}, com.atomikos.icatch.threaded_2pc=true, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
    }

    @Test
    public void test5483() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test5483");
        java.util.Properties properties0 = new java.util.Properties();
        java.util.Collection<java.lang.Object> objCollection1 = properties0.values();
        int int2 = properties0.size();
        java.util.Properties properties3 = new java.util.Properties();
        java.lang.Object obj5 = properties3.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration6 = properties3.elements();
        boolean boolean7 = properties3.isEmpty();
        java.util.Set<java.lang.Object> objSet8 = properties3.keySet();
        java.util.Enumeration<java.lang.Object> objEnumeration9 = properties3.keys();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet10 = properties3.entrySet();
        java.util.Properties properties12 = new java.util.Properties();
        java.lang.Object obj14 = properties12.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration15 = properties12.elements();
        boolean boolean16 = properties12.isEmpty();
        java.util.Set<java.lang.Object> objSet17 = properties12.keySet();
        boolean boolean18 = properties12.isEmpty();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties19 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties19.setSerialJtaTransactions(false);
        atomikosProperties19.setThreadedTwoPhaseCommit(true);
        atomikosProperties19.setMaxTimeout((long) '#');
        boolean boolean26 = atomikosProperties19.isEnableLogging();
        atomikosProperties19.setCheckpointInterval((long) (byte) -1);
        java.util.Properties properties29 = new java.util.Properties();
        java.util.Properties properties30 = new java.util.Properties();
        java.lang.Object obj32 = properties30.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet33 = properties30.stringPropertyNames();
        boolean boolean34 = properties29.containsValue((java.lang.Object) properties30);
        java.util.Collection<java.lang.Object> objCollection35 = properties29.values();
        java.lang.Object obj36 = properties12.replace((java.lang.Object) atomikosProperties19, (java.lang.Object) objCollection35);
        boolean boolean38 = properties3.replace((java.lang.Object) 100.0d, (java.lang.Object) objCollection35, (java.lang.Object) 10.0d);
        boolean boolean39 = properties0.equals((java.lang.Object) properties3);
        java.util.Properties properties40 = new java.util.Properties();
        java.lang.Object obj42 = properties40.remove((java.lang.Object) 0.0d);
        boolean boolean43 = properties40.isEmpty();
        java.util.Enumeration<java.lang.Object> objEnumeration44 = properties40.elements();
        java.util.Enumeration<java.lang.Object> objEnumeration45 = properties40.elements();
        java.lang.Object obj46 = properties0.remove((java.lang.Object) properties40);
        java.util.Enumeration<java.lang.Object> objEnumeration47 = properties0.keys();
        java.util.Set<java.lang.Object> objSet48 = properties0.keySet();
        java.lang.Object obj49 = properties0.clone();
        org.junit.Assert.assertNotNull(objCollection1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertNull(obj5);
        org.junit.Assert.assertNotNull(objEnumeration6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(objSet8);
        org.junit.Assert.assertNotNull(objEnumeration9);
        org.junit.Assert.assertNotNull(objEntrySet10);
        org.junit.Assert.assertNull(obj14);
        org.junit.Assert.assertNotNull(objEnumeration15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(objSet17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertNull(obj32);
        org.junit.Assert.assertNotNull(strSet33);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(objCollection35);
        org.junit.Assert.assertNull(obj36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNull(obj42);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNotNull(objEnumeration44);
        org.junit.Assert.assertNotNull(objEnumeration45);
        org.junit.Assert.assertNull(obj46);
        org.junit.Assert.assertNotNull(objEnumeration47);
        org.junit.Assert.assertNotNull(objSet48);
        org.junit.Assert.assertNotNull(obj49);
        org.junit.Assert.assertEquals(obj49.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj49), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj49), "{}");
    }

    @Test
    public void test5484() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test5484");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setSerialJtaTransactions(false);
        boolean boolean3 = atomikosProperties0.isSerialJtaTransactions();
        java.lang.String str4 = atomikosProperties0.getService();
        atomikosProperties0.setMaxActives((int) (byte) 100);
        java.lang.String str7 = atomikosProperties0.getService();
        atomikosProperties0.setMaxTimeout((long) (short) 10);
        atomikosProperties0.setMaxTimeout(10000L);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertNull(str7);
    }

    @Test
    public void test5485() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test5485");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setSerialJtaTransactions(false);
        atomikosProperties0.setThreadedTwoPhaseCommit(true);
        atomikosProperties0.setMaxTimeout((long) '#');
        boolean boolean7 = atomikosProperties0.isEnableLogging();
        atomikosProperties0.setCheckpointInterval((long) (byte) -1);
        atomikosProperties0.setMaxActives((int) (byte) 100);
        atomikosProperties0.setTransactionManagerUniqueName("{=hi!}");
        atomikosProperties0.setMaxTimeout((long) '#');
        atomikosProperties0.setService("{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=-1, com.atomikos.icatch.serial_jta_transactions=false, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=35, com.atomikos.icatch.threaded_2pc=true, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name={=hi!}}");
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
    }

    @Test
    public void test5486() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test5486");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration3 = properties0.elements();
        boolean boolean4 = properties0.isEmpty();
        java.util.Set<java.lang.Object> objSet5 = properties0.keySet();
        java.util.Enumeration<java.lang.Object> objEnumeration6 = properties0.keys();
        boolean boolean8 = properties0.equals((java.lang.Object) "");
        java.lang.String str9 = properties0.toString();
        java.util.Properties properties10 = new java.util.Properties();
        java.lang.Object obj12 = properties10.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration13 = properties10.elements();
        java.util.Properties properties15 = new java.util.Properties();
        java.lang.Object obj17 = properties15.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration18 = properties15.elements();
        boolean boolean19 = properties15.isEmpty();
        java.util.Set<java.lang.Object> objSet20 = properties15.keySet();
        boolean boolean21 = properties15.isEmpty();
        java.lang.Object obj22 = properties10.getOrDefault((java.lang.Object) true, (java.lang.Object) boolean21);
        java.lang.Object obj23 = properties0.get((java.lang.Object) boolean21);
        int int24 = properties0.size();
        java.lang.Object obj27 = properties0.setProperty("{hi!=[]}", "tmlog");
        java.lang.Object obj30 = properties0.setProperty("{}", "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=false, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=true, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
        java.io.Reader reader31 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties0.load(reader31);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(objEnumeration3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(objSet5);
        org.junit.Assert.assertNotNull(objEnumeration6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "{}" + "'", str9, "{}");
        org.junit.Assert.assertNull(obj12);
        org.junit.Assert.assertNotNull(objEnumeration13);
        org.junit.Assert.assertNull(obj17);
        org.junit.Assert.assertNotNull(objEnumeration18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(objSet20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertEquals("'" + obj22 + "' != '" + true + "'", obj22, true);
        org.junit.Assert.assertNull(obj23);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 0 + "'", int24 == 0);
        org.junit.Assert.assertNull(obj27);
        org.junit.Assert.assertNull(obj30);
    }

    @Test
    public void test5487() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test5487");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet3 = properties0.stringPropertyNames();
        java.util.Properties properties4 = new java.util.Properties();
        java.util.Properties properties5 = new java.util.Properties();
        java.lang.Object obj7 = properties5.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet8 = properties5.stringPropertyNames();
        boolean boolean9 = properties4.containsValue((java.lang.Object) properties5);
        java.util.Collection<java.lang.Object> objCollection10 = properties4.values();
        java.util.Enumeration<?> wildcardEnumeration11 = properties4.propertyNames();
        java.lang.Object obj13 = properties0.put((java.lang.Object) wildcardEnumeration11, (java.lang.Object) 10.0d);
        java.lang.String str15 = properties0.getProperty("{=hi!}");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties16 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties16.setSerialJtaTransactions(false);
        boolean boolean19 = atomikosProperties16.isSerialJtaTransactions();
        java.lang.String str20 = atomikosProperties16.getService();
        boolean boolean21 = atomikosProperties16.isEnableLogging();
        java.util.Properties properties22 = atomikosProperties16.asProperties();
        atomikosProperties16.setForceShutdownOnVmExit(true);
        atomikosProperties16.setMaxActives((int) (short) -1);
        atomikosProperties16.setMaxTimeout((long) ' ');
        atomikosProperties16.setEnableLogging(false);
        atomikosProperties16.setService("{{}={}}");
        atomikosProperties16.setLogBaseName("{{}={}}");
        boolean boolean35 = properties0.equals((java.lang.Object) atomikosProperties16);
        java.util.Collection<java.lang.Object> objCollection36 = properties0.values();
        java.lang.String str39 = properties0.getProperty("{{{}={}}={}}", "{{{}={}}={}}");
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(strSet3);
        org.junit.Assert.assertNull(obj7);
        org.junit.Assert.assertNotNull(strSet8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(objCollection10);
        org.junit.Assert.assertNotNull(wildcardEnumeration11);
        org.junit.Assert.assertNull(obj13);
        org.junit.Assert.assertNull(str15);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNull(str20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(properties22);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(objCollection36);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "{{{}={}}={}}" + "'", str39, "{{{}={}}={}}");
    }

    @Test
    public void test5488() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test5488");
        java.util.Properties properties0 = new java.util.Properties();
        java.util.Collection<java.lang.Object> objCollection1 = properties0.values();
        int int2 = properties0.size();
        java.util.Properties properties3 = new java.util.Properties();
        java.lang.Object obj5 = properties3.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet6 = properties3.stringPropertyNames();
        java.util.Properties properties7 = new java.util.Properties();
        java.util.Properties properties8 = new java.util.Properties();
        java.lang.Object obj10 = properties8.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet11 = properties8.stringPropertyNames();
        boolean boolean12 = properties7.containsValue((java.lang.Object) properties8);
        java.util.Collection<java.lang.Object> objCollection13 = properties7.values();
        java.util.Enumeration<?> wildcardEnumeration14 = properties7.propertyNames();
        java.lang.Object obj16 = properties3.put((java.lang.Object) wildcardEnumeration14, (java.lang.Object) 10.0d);
        java.util.Properties properties17 = new java.util.Properties();
        java.lang.Object obj19 = properties17.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration20 = properties17.elements();
        boolean boolean21 = properties17.isEmpty();
        java.util.Set<java.lang.Object> objSet22 = properties17.keySet();
        boolean boolean23 = properties17.isEmpty();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet24 = properties17.entrySet();
        java.util.Properties properties25 = new java.util.Properties();
        java.lang.Object obj27 = properties25.remove((java.lang.Object) 0.0d);
        boolean boolean28 = properties25.isEmpty();
        java.lang.Object obj31 = properties25.setProperty("", "hi!");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties32 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties32.setSerialJtaTransactions(false);
        boolean boolean35 = properties17.remove((java.lang.Object) properties25, (java.lang.Object) atomikosProperties32);
        java.util.Properties properties36 = new java.util.Properties(properties25);
        int int37 = properties36.size();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties39 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties39.setSerialJtaTransactions(false);
        boolean boolean42 = atomikosProperties39.isSerialJtaTransactions();
        java.lang.String str43 = atomikosProperties39.getService();
        boolean boolean44 = atomikosProperties39.isEnableLogging();
        java.lang.String str45 = atomikosProperties39.getTransactionManagerUniqueName();
        boolean boolean46 = properties36.remove((java.lang.Object) (byte) 1, (java.lang.Object) atomikosProperties39);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties47 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties47.setSerialJtaTransactions(false);
        atomikosProperties47.setThreadedTwoPhaseCommit(true);
        atomikosProperties47.setEnableLogging(false);
        boolean boolean54 = atomikosProperties47.isSerialJtaTransactions();
        int int55 = atomikosProperties47.getMaxActives();
        boolean boolean56 = atomikosProperties47.isSerialJtaTransactions();
        boolean boolean57 = properties3.remove((java.lang.Object) properties36, (java.lang.Object) boolean56);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties58 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties58.setSerialJtaTransactions(false);
        atomikosProperties58.setThreadedTwoPhaseCommit(true);
        atomikosProperties58.setMaxTimeout((long) '#');
        boolean boolean65 = atomikosProperties58.isEnableLogging();
        atomikosProperties58.setCheckpointInterval((long) 100);
        java.lang.String str68 = atomikosProperties58.getTransactionManagerUniqueName();
        boolean boolean69 = properties36.contains((java.lang.Object) atomikosProperties58);
        boolean boolean70 = properties0.equals((java.lang.Object) boolean69);
        java.lang.Object obj71 = properties0.clone();
        java.lang.String str72 = properties0.toString();
        org.junit.Assert.assertNotNull(objCollection1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertNull(obj5);
        org.junit.Assert.assertNotNull(strSet6);
        org.junit.Assert.assertNull(obj10);
        org.junit.Assert.assertNotNull(strSet11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(objCollection13);
        org.junit.Assert.assertNotNull(wildcardEnumeration14);
        org.junit.Assert.assertNull(obj16);
        org.junit.Assert.assertNull(obj19);
        org.junit.Assert.assertNotNull(objEnumeration20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(objSet22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNotNull(objEntrySet24);
        org.junit.Assert.assertNull(obj27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNull(obj31);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 0 + "'", int37 == 0);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNull(str43);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertNull(str45);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + 50 + "'", int55 == 50);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65 == true);
        org.junit.Assert.assertNull(str68);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertNotNull(obj71);
        org.junit.Assert.assertEquals(obj71.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj71), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj71), "{}");
        org.junit.Assert.assertEquals("'" + str72 + "' != '" + "{}" + "'", str72, "{}");
    }

    @Test
    public void test5489() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test5489");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        boolean boolean3 = properties0.isEmpty();
        java.util.Enumeration<java.lang.Object> objEnumeration4 = properties0.elements();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet5 = properties0.entrySet();
        java.util.Enumeration<java.lang.Object> objEnumeration6 = properties0.keys();
        java.util.Properties properties7 = new java.util.Properties();
        java.util.Collection<java.lang.Object> objCollection8 = properties7.values();
        java.util.Enumeration<java.lang.Object> objEnumeration9 = properties7.keys();
        properties7.clear();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties11 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties11.setSerialJtaTransactions(false);
        boolean boolean14 = atomikosProperties11.isSerialJtaTransactions();
        atomikosProperties11.setTransactionManagerUniqueName("hi!");
        java.lang.String str17 = atomikosProperties11.getLogBaseName();
        java.lang.String str18 = atomikosProperties11.getLogBaseName();
        java.lang.Object obj19 = properties7.get((java.lang.Object) str18);
        boolean boolean20 = properties0.contains((java.lang.Object) properties7);
        java.util.Enumeration<java.lang.Object> objEnumeration21 = properties0.keys();
        java.util.Enumeration<java.lang.Object> objEnumeration22 = properties0.keys();
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(objEnumeration4);
        org.junit.Assert.assertNotNull(objEntrySet5);
        org.junit.Assert.assertNotNull(objEnumeration6);
        org.junit.Assert.assertNotNull(objCollection8);
        org.junit.Assert.assertNotNull(objEnumeration9);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "tmlog" + "'", str17, "tmlog");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "tmlog" + "'", str18, "tmlog");
        org.junit.Assert.assertNull(obj19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(objEnumeration21);
        org.junit.Assert.assertNotNull(objEnumeration22);
    }

    @Test
    public void test5490() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test5490");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setSerialJtaTransactions(false);
        boolean boolean3 = atomikosProperties0.isSerialJtaTransactions();
        java.lang.String str4 = atomikosProperties0.getService();
        atomikosProperties0.setEnableLogging(false);
        java.util.Properties properties7 = atomikosProperties0.asProperties();
        int int8 = atomikosProperties0.getMaxActives();
        boolean boolean9 = atomikosProperties0.isForceShutdownOnVmExit();
        atomikosProperties0.setCheckpointInterval((long) (short) 100);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertNotNull(properties7);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 50 + "'", int8 == 50);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
    }

    @Test
    public void test5491() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test5491");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration3 = properties0.elements();
        boolean boolean4 = properties0.isEmpty();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet5 = properties0.entrySet();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties7 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties7.setSerialJtaTransactions(false);
        atomikosProperties7.setThreadedTwoPhaseCommit(true);
        atomikosProperties7.setMaxTimeout((long) '#');
        boolean boolean14 = atomikosProperties7.isForceShutdownOnVmExit();
        java.lang.Object obj15 = properties0.put((java.lang.Object) (short) 1, (java.lang.Object) atomikosProperties7);
        atomikosProperties7.setForceShutdownOnVmExit(true);
        java.util.Properties properties18 = atomikosProperties7.asProperties();
        java.lang.String str19 = atomikosProperties7.getService();
        boolean boolean20 = atomikosProperties7.isForceShutdownOnVmExit();
        atomikosProperties7.setThreadedTwoPhaseCommit(true);
        atomikosProperties7.setLogBaseName("{=hi!}");
        atomikosProperties7.setCheckpointInterval(1L);
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(objEnumeration3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(objEntrySet5);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNull(obj15);
        org.junit.Assert.assertNotNull(properties18);
        org.junit.Assert.assertNull(str19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
    }

    @Test
    public void test5492() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test5492");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setSerialJtaTransactions(false);
        atomikosProperties0.setThreadedTwoPhaseCommit(true);
        atomikosProperties0.setEnableLogging(false);
        boolean boolean7 = atomikosProperties0.isSerialJtaTransactions();
        int int8 = atomikosProperties0.getMaxActives();
        boolean boolean9 = atomikosProperties0.isEnableLogging();
        long long10 = atomikosProperties0.getCheckpointInterval();
        java.util.Properties properties11 = atomikosProperties0.asProperties();
        java.util.Enumeration<java.lang.Object> objEnumeration12 = properties11.elements();
        java.lang.Object obj15 = properties11.setProperty("{com.atomikos.icatch.enable_logging=false, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=1, com.atomikos.icatch.serial_jta_transactions=false, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}", "{hi!=[]}");
        java.util.Properties properties16 = new java.util.Properties();
        java.util.Collection<java.lang.Object> objCollection17 = properties16.values();
        java.util.Collection<java.lang.Object> objCollection18 = properties16.values();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties19 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties19.setSerialJtaTransactions(false);
        boolean boolean22 = atomikosProperties19.isThreadedTwoPhaseCommit();
        atomikosProperties19.setThreadedTwoPhaseCommit(false);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties25 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties25.setSerialJtaTransactions(false);
        boolean boolean28 = atomikosProperties25.isSerialJtaTransactions();
        atomikosProperties25.setTransactionManagerUniqueName("hi!");
        java.lang.String str31 = atomikosProperties25.getLogBaseName();
        java.lang.String str32 = atomikosProperties25.getLogBaseName();
        boolean boolean33 = atomikosProperties25.isForceShutdownOnVmExit();
        long long34 = atomikosProperties25.getMaxTimeout();
        java.lang.String str35 = atomikosProperties25.getTransactionManagerUniqueName();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties36 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties36.setSerialJtaTransactions(false);
        atomikosProperties36.setThreadedTwoPhaseCommit(true);
        atomikosProperties36.setThreadedTwoPhaseCommit(true);
        boolean boolean43 = properties16.replace((java.lang.Object) atomikosProperties19, (java.lang.Object) str35, (java.lang.Object) true);
        java.util.Properties properties44 = atomikosProperties19.asProperties();
        java.lang.Object obj47 = properties44.setProperty("tmlog", "{{}={}}");
        java.util.Collection<java.lang.Object> objCollection48 = properties44.values();
        java.util.Properties properties49 = new java.util.Properties();
        java.lang.Object obj51 = properties49.remove((java.lang.Object) 0.0d);
        boolean boolean52 = properties49.isEmpty();
        java.util.Enumeration<java.lang.Object> objEnumeration53 = properties49.elements();
        java.util.Enumeration<java.lang.Object> objEnumeration54 = properties49.elements();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties55 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties55.setSerialJtaTransactions(false);
        atomikosProperties55.setThreadedTwoPhaseCommit(true);
        atomikosProperties55.setMaxTimeout((long) '#');
        boolean boolean62 = atomikosProperties55.isForceShutdownOnVmExit();
        int int63 = atomikosProperties55.getMaxActives();
        java.lang.Object obj64 = properties49.remove((java.lang.Object) int63);
        java.util.Properties properties65 = new java.util.Properties();
        java.lang.Object obj67 = properties65.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration68 = properties65.elements();
        boolean boolean69 = properties65.isEmpty();
        java.util.Set<java.lang.Object> objSet70 = properties65.keySet();
        boolean boolean71 = properties65.isEmpty();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet72 = properties65.entrySet();
        java.util.Properties properties73 = new java.util.Properties();
        java.lang.Object obj75 = properties73.remove((java.lang.Object) 0.0d);
        boolean boolean76 = properties73.isEmpty();
        java.lang.Object obj79 = properties73.setProperty("", "hi!");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties80 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties80.setSerialJtaTransactions(false);
        boolean boolean83 = properties65.remove((java.lang.Object) properties73, (java.lang.Object) atomikosProperties80);
        java.util.Properties properties84 = new java.util.Properties(properties73);
        int int85 = properties84.size();
        int int86 = properties84.size();
        java.util.Properties properties87 = new java.util.Properties();
        java.lang.Object obj88 = properties84.get((java.lang.Object) properties87);
        boolean boolean89 = properties49.containsValue((java.lang.Object) properties87);
        java.util.Set<java.lang.Object> objSet90 = properties49.keySet();
        java.lang.Object obj91 = properties49.clone();
        java.lang.Object obj92 = properties11.getOrDefault((java.lang.Object) properties44, (java.lang.Object) properties49);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 50 + "'", int8 == 50);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + long10 + "' != '" + 500L + "'", long10 == 500L);
        org.junit.Assert.assertNotNull(properties11);
        org.junit.Assert.assertNotNull(objEnumeration12);
        org.junit.Assert.assertNull(obj15);
        org.junit.Assert.assertNotNull(objCollection17);
        org.junit.Assert.assertNotNull(objCollection18);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "tmlog" + "'", str31, "tmlog");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "tmlog" + "'", str32, "tmlog");
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertTrue("'" + long34 + "' != '" + 300000L + "'", long34 == 300000L);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "hi!" + "'", str35, "hi!");
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(properties44);
        org.junit.Assert.assertNull(obj47);
        org.junit.Assert.assertNotNull(objCollection48);
        org.junit.Assert.assertNull(obj51);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertNotNull(objEnumeration53);
        org.junit.Assert.assertNotNull(objEnumeration54);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertTrue("'" + int63 + "' != '" + 50 + "'", int63 == 50);
        org.junit.Assert.assertNull(obj64);
        org.junit.Assert.assertNull(obj67);
        org.junit.Assert.assertNotNull(objEnumeration68);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + true + "'", boolean69 == true);
        org.junit.Assert.assertNotNull(objSet70);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + true + "'", boolean71 == true);
        org.junit.Assert.assertNotNull(objEntrySet72);
        org.junit.Assert.assertNull(obj75);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + true + "'", boolean76 == true);
        org.junit.Assert.assertNull(obj79);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + false + "'", boolean83 == false);
        org.junit.Assert.assertTrue("'" + int85 + "' != '" + 0 + "'", int85 == 0);
        org.junit.Assert.assertTrue("'" + int86 + "' != '" + 0 + "'", int86 == 0);
        org.junit.Assert.assertNull(obj88);
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + false + "'", boolean89 == false);
        org.junit.Assert.assertNotNull(objSet90);
        org.junit.Assert.assertNotNull(obj91);
        org.junit.Assert.assertEquals(obj91.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj91), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj91), "{}");
        org.junit.Assert.assertNotNull(obj92);
        org.junit.Assert.assertEquals(obj92.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj92), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj92), "{}");
    }

    @Test
    public void test5493() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test5493");
        java.util.Properties properties0 = new java.util.Properties();
        java.util.Properties properties1 = new java.util.Properties();
        java.lang.Object obj3 = properties1.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet4 = properties1.stringPropertyNames();
        boolean boolean5 = properties0.containsValue((java.lang.Object) properties1);
        java.util.Collection<java.lang.Object> objCollection6 = properties0.values();
        java.util.Properties properties8 = new java.util.Properties();
        java.lang.Object obj10 = properties8.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration11 = properties8.elements();
        boolean boolean12 = properties8.isEmpty();
        java.util.Set<java.lang.Object> objSet13 = properties8.keySet();
        java.lang.Object obj14 = properties0.putIfAbsent((java.lang.Object) "hi!", (java.lang.Object) objSet13);
        java.util.Set<java.lang.Object> objSet15 = properties0.keySet();
        java.util.Set<java.lang.Object> objSet16 = properties0.keySet();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet17 = properties0.entrySet();
        java.util.Set<java.lang.Object> objSet18 = properties0.keySet();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties19 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties19.setSerialJtaTransactions(false);
        boolean boolean22 = atomikosProperties19.isSerialJtaTransactions();
        java.lang.String str23 = atomikosProperties19.getService();
        boolean boolean24 = atomikosProperties19.isEnableLogging();
        java.lang.Object obj26 = properties0.put((java.lang.Object) atomikosProperties19, (java.lang.Object) 35);
        java.util.Collection<java.lang.Object> objCollection27 = properties0.values();
        java.util.Properties properties28 = new java.util.Properties();
        java.lang.Object obj30 = properties28.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration31 = properties28.elements();
        boolean boolean32 = properties28.isEmpty();
        java.util.Set<java.lang.Object> objSet33 = properties28.keySet();
        boolean boolean34 = properties28.isEmpty();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet35 = properties28.entrySet();
        java.util.Properties properties36 = new java.util.Properties();
        java.lang.Object obj38 = properties36.remove((java.lang.Object) 0.0d);
        boolean boolean39 = properties36.isEmpty();
        java.lang.Object obj42 = properties36.setProperty("", "hi!");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties43 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties43.setSerialJtaTransactions(false);
        boolean boolean46 = properties28.remove((java.lang.Object) properties36, (java.lang.Object) atomikosProperties43);
        java.util.Properties properties47 = new java.util.Properties(properties36);
        int int48 = properties47.size();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties50 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties50.setSerialJtaTransactions(false);
        boolean boolean53 = atomikosProperties50.isSerialJtaTransactions();
        java.lang.String str54 = atomikosProperties50.getService();
        boolean boolean55 = atomikosProperties50.isEnableLogging();
        java.lang.String str56 = atomikosProperties50.getTransactionManagerUniqueName();
        boolean boolean57 = properties47.remove((java.lang.Object) (byte) 1, (java.lang.Object) atomikosProperties50);
        atomikosProperties50.setMaxActives((int) (short) -1);
        boolean boolean60 = atomikosProperties50.isThreadedTwoPhaseCommit();
        atomikosProperties50.setMaxTimeout(500L);
        int int63 = atomikosProperties50.getMaxActives();
        java.util.Properties properties64 = new java.util.Properties();
        java.lang.Object obj66 = properties64.remove((java.lang.Object) 0.0d);
        boolean boolean68 = properties64.containsValue((java.lang.Object) "hi!");
        java.lang.String str70 = properties64.getProperty("hi!");
        java.util.Enumeration<?> wildcardEnumeration71 = properties64.propertyNames();
        java.lang.String str73 = properties64.getProperty("{{}={}}");
        java.lang.String str74 = properties64.toString();
        java.util.Properties properties75 = new java.util.Properties();
        java.util.Collection<java.lang.Object> objCollection76 = properties75.values();
        java.util.Enumeration<java.lang.Object> objEnumeration77 = properties75.keys();
        java.lang.Object obj80 = properties75.setProperty("{}", "{}");
        java.util.Set<java.lang.String> strSet81 = properties75.stringPropertyNames();
        java.util.Properties properties82 = new java.util.Properties();
        boolean boolean84 = properties82.contains((java.lang.Object) 100.0d);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties85 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties85.setSerialJtaTransactions(false);
        atomikosProperties85.setThreadedTwoPhaseCommit(true);
        atomikosProperties85.setSerialJtaTransactions(false);
        java.lang.String str92 = atomikosProperties85.getService();
        boolean boolean93 = properties82.containsKey((java.lang.Object) atomikosProperties85);
        boolean boolean94 = properties75.containsKey((java.lang.Object) properties82);
        java.lang.String str96 = properties75.getProperty("");
        java.util.Enumeration<java.lang.Object> objEnumeration97 = properties75.elements();
        boolean boolean98 = properties64.equals((java.lang.Object) objEnumeration97);
        java.lang.Object obj99 = properties0.putIfAbsent((java.lang.Object) int63, (java.lang.Object) properties64);
        org.junit.Assert.assertNull(obj3);
        org.junit.Assert.assertNotNull(strSet4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(objCollection6);
        org.junit.Assert.assertNull(obj10);
        org.junit.Assert.assertNotNull(objEnumeration11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(objSet13);
        org.junit.Assert.assertNull(obj14);
        org.junit.Assert.assertNotNull(objSet15);
        org.junit.Assert.assertNotNull(objSet16);
        org.junit.Assert.assertNotNull(objEntrySet17);
        org.junit.Assert.assertNotNull(objSet18);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNull(str23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNull(obj26);
        org.junit.Assert.assertNotNull(objCollection27);
        org.junit.Assert.assertNull(obj30);
        org.junit.Assert.assertNotNull(objEnumeration31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertNotNull(objSet33);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertNotNull(objEntrySet35);
        org.junit.Assert.assertNull(obj38);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNull(obj42);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 0 + "'", int48 == 0);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertNull(str54);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertNull(str56);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertTrue("'" + int63 + "' != '" + (-1) + "'", int63 == (-1));
        org.junit.Assert.assertNull(obj66);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertNull(str70);
        org.junit.Assert.assertNotNull(wildcardEnumeration71);
        org.junit.Assert.assertNull(str73);
        org.junit.Assert.assertEquals("'" + str74 + "' != '" + "{}" + "'", str74, "{}");
        org.junit.Assert.assertNotNull(objCollection76);
        org.junit.Assert.assertNotNull(objEnumeration77);
        org.junit.Assert.assertNull(obj80);
        org.junit.Assert.assertNotNull(strSet81);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + false + "'", boolean84 == false);
        org.junit.Assert.assertNull(str92);
        org.junit.Assert.assertTrue("'" + boolean93 + "' != '" + false + "'", boolean93 == false);
        org.junit.Assert.assertTrue("'" + boolean94 + "' != '" + false + "'", boolean94 == false);
        org.junit.Assert.assertNull(str96);
        org.junit.Assert.assertNotNull(objEnumeration97);
        org.junit.Assert.assertTrue("'" + boolean98 + "' != '" + false + "'", boolean98 == false);
        org.junit.Assert.assertNull(obj99);
    }

    @Test
    public void test5494() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test5494");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setSerialJtaTransactions(false);
        atomikosProperties0.setThreadedTwoPhaseCommit(true);
        atomikosProperties0.setMaxTimeout((long) '#');
        boolean boolean7 = atomikosProperties0.isEnableLogging();
        atomikosProperties0.setMaxActives((int) '#');
        boolean boolean10 = atomikosProperties0.isForceShutdownOnVmExit();
        atomikosProperties0.setForceShutdownOnVmExit(true);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
    }

    @Test
    public void test5495() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test5495");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration3 = properties0.elements();
        boolean boolean4 = properties0.isEmpty();
        java.util.Enumeration<java.lang.Object> objEnumeration5 = properties0.elements();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet6 = properties0.entrySet();
        java.util.Set<java.lang.String> strSet7 = properties0.stringPropertyNames();
        boolean boolean8 = properties0.isEmpty();
        java.util.Set<java.lang.Object> objSet9 = properties0.keySet();
        properties0.clear();
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(objEnumeration3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(objEnumeration5);
        org.junit.Assert.assertNotNull(objEntrySet6);
        org.junit.Assert.assertNotNull(strSet7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(objSet9);
    }

    @Test
    public void test5496() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test5496");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setSerialJtaTransactions(false);
        boolean boolean3 = atomikosProperties0.isSerialJtaTransactions();
        java.lang.String str4 = atomikosProperties0.getService();
        boolean boolean5 = atomikosProperties0.isEnableLogging();
        java.util.Properties properties6 = atomikosProperties0.asProperties();
        atomikosProperties0.setForceShutdownOnVmExit(true);
        atomikosProperties0.setMaxActives((int) (short) -1);
        atomikosProperties0.setMaxTimeout((long) ' ');
        atomikosProperties0.setEnableLogging(false);
        atomikosProperties0.setService("{{}={}}");
        boolean boolean17 = atomikosProperties0.isForceShutdownOnVmExit();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNotNull(properties6);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
    }

    @Test
    public void test5497() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test5497");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setSerialJtaTransactions(false);
        atomikosProperties0.setThreadedTwoPhaseCommit(true);
        atomikosProperties0.setMaxTimeout((long) '#');
        boolean boolean7 = atomikosProperties0.isEnableLogging();
        atomikosProperties0.setCheckpointInterval((long) (byte) -1);
        atomikosProperties0.setEnableLogging(true);
        java.lang.String str12 = atomikosProperties0.getTransactionManagerUniqueName();
        atomikosProperties0.setTransactionManagerUniqueName("{=hi!}");
        boolean boolean15 = atomikosProperties0.isEnableLogging();
        atomikosProperties0.setThreadedTwoPhaseCommit(false);
        atomikosProperties0.setLogBaseDir("{=hi!}");
        java.lang.String str20 = atomikosProperties0.getLogBaseName();
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "tmlog" + "'", str20, "tmlog");
    }

    @Test
    public void test5498() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test5498");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration3 = properties0.elements();
        boolean boolean4 = properties0.isEmpty();
        java.util.Set<java.lang.Object> objSet5 = properties0.keySet();
        boolean boolean6 = properties0.isEmpty();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet7 = properties0.entrySet();
        java.util.Set<java.lang.Object> objSet8 = properties0.keySet();
        java.util.Properties properties9 = new java.util.Properties();
        java.lang.Object obj11 = properties9.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration12 = properties9.elements();
        boolean boolean13 = properties9.isEmpty();
        java.util.Set<java.lang.Object> objSet14 = properties9.keySet();
        boolean boolean16 = properties9.containsKey((java.lang.Object) (-1.0f));
        java.util.Collection<java.lang.Object> objCollection17 = properties9.values();
        java.lang.Object obj18 = properties9.clone();
        java.util.Collection<java.lang.Object> objCollection19 = properties9.values();
        java.util.Properties properties20 = new java.util.Properties();
        java.lang.Object obj22 = properties20.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet23 = properties20.stringPropertyNames();
        java.util.Collection<java.lang.Object> objCollection24 = properties20.values();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties25 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties25.setSerialJtaTransactions(false);
        boolean boolean28 = atomikosProperties25.isSerialJtaTransactions();
        atomikosProperties25.setTransactionManagerUniqueName("hi!");
        boolean boolean31 = atomikosProperties25.isEnableLogging();
        atomikosProperties25.setSerialJtaTransactions(true);
        boolean boolean34 = properties9.remove((java.lang.Object) objCollection24, (java.lang.Object) atomikosProperties25);
        java.lang.String str35 = atomikosProperties25.getLogBaseDir();
        java.util.Properties properties36 = new java.util.Properties();
        java.lang.Object obj38 = properties36.remove((java.lang.Object) 0.0d);
        boolean boolean39 = properties36.isEmpty();
        java.util.Properties properties40 = new java.util.Properties();
        java.lang.Object obj42 = properties40.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration43 = properties40.elements();
        boolean boolean44 = properties40.isEmpty();
        java.util.Set<java.lang.Object> objSet45 = properties40.keySet();
        java.util.Enumeration<java.lang.Object> objEnumeration46 = properties40.keys();
        java.lang.String str48 = properties40.getProperty("hi!");
        java.util.Enumeration<?> wildcardEnumeration49 = properties40.propertyNames();
        java.util.Properties properties50 = new java.util.Properties();
        java.lang.Object obj52 = properties50.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration53 = properties50.elements();
        boolean boolean54 = properties50.isEmpty();
        java.util.Enumeration<java.lang.Object> objEnumeration55 = properties50.elements();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet56 = properties50.entrySet();
        java.util.Set<java.lang.String> strSet57 = properties50.stringPropertyNames();
        boolean boolean58 = properties50.isEmpty();
        properties40.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties50);
        java.util.Properties properties60 = new java.util.Properties();
        java.util.Collection<java.lang.Object> objCollection61 = properties60.values();
        int int62 = properties60.size();
        java.util.Properties properties63 = new java.util.Properties(properties60);
        java.lang.Object obj64 = properties36.put((java.lang.Object) properties40, (java.lang.Object) properties63);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties65 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties65.setSerialJtaTransactions(false);
        atomikosProperties65.setThreadedTwoPhaseCommit(true);
        atomikosProperties65.setMaxTimeout((long) '#');
        boolean boolean72 = atomikosProperties65.isForceShutdownOnVmExit();
        long long73 = atomikosProperties65.getDefaultJtaTimeout();
        boolean boolean74 = atomikosProperties65.isSerialJtaTransactions();
        atomikosProperties65.setMaxTimeout((long) (byte) -1);
        atomikosProperties65.setDefaultJtaTimeout(0L);
        long long79 = atomikosProperties65.getDefaultJtaTimeout();
        boolean boolean80 = properties0.replace((java.lang.Object) atomikosProperties25, (java.lang.Object) properties63, (java.lang.Object) long79);
        boolean boolean81 = atomikosProperties25.isSerialJtaTransactions();
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(objEnumeration3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(objSet5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(objEntrySet7);
        org.junit.Assert.assertNotNull(objSet8);
        org.junit.Assert.assertNull(obj11);
        org.junit.Assert.assertNotNull(objEnumeration12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(objSet14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(objCollection17);
        org.junit.Assert.assertNotNull(obj18);
        org.junit.Assert.assertEquals(obj18.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj18), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj18), "{}");
        org.junit.Assert.assertNotNull(objCollection19);
        org.junit.Assert.assertNull(obj22);
        org.junit.Assert.assertNotNull(strSet23);
        org.junit.Assert.assertNotNull(objCollection24);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNull(str35);
        org.junit.Assert.assertNull(obj38);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNull(obj42);
        org.junit.Assert.assertNotNull(objEnumeration43);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertNotNull(objSet45);
        org.junit.Assert.assertNotNull(objEnumeration46);
        org.junit.Assert.assertNull(str48);
        org.junit.Assert.assertNotNull(wildcardEnumeration49);
        org.junit.Assert.assertNull(obj52);
        org.junit.Assert.assertNotNull(objEnumeration53);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertNotNull(objEnumeration55);
        org.junit.Assert.assertNotNull(objEntrySet56);
        org.junit.Assert.assertNotNull(strSet57);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertNotNull(objCollection61);
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + 0 + "'", int62 == 0);
        org.junit.Assert.assertNull(obj64);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertTrue("'" + long73 + "' != '" + 10000L + "'", long73 == 10000L);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
        org.junit.Assert.assertTrue("'" + long79 + "' != '" + 0L + "'", long79 == 0L);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", boolean80 == false);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + true + "'", boolean81 == true);
    }

    @Test
    public void test5499() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test5499");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setSerialJtaTransactions(false);
        atomikosProperties0.setThreadedTwoPhaseCommit(true);
        java.lang.String str5 = atomikosProperties0.getLogBaseName();
        long long6 = atomikosProperties0.getCheckpointInterval();
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "tmlog" + "'", str5, "tmlog");
        org.junit.Assert.assertTrue("'" + long6 + "' != '" + 500L + "'", long6 == 500L);
    }

    @Test
    public void test5500() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test5500");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setSerialJtaTransactions(false);
        boolean boolean3 = atomikosProperties0.isSerialJtaTransactions();
        java.lang.String str4 = atomikosProperties0.getService();
        boolean boolean5 = atomikosProperties0.isEnableLogging();
        java.util.Properties properties6 = atomikosProperties0.asProperties();
        java.util.Set<java.lang.String> strSet7 = properties6.stringPropertyNames();
        boolean boolean8 = properties6.isEmpty();
        boolean boolean9 = properties6.isEmpty();
        java.util.Properties properties10 = new java.util.Properties();
        java.lang.Object obj12 = properties10.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<?> wildcardEnumeration13 = properties10.propertyNames();
        boolean boolean14 = properties6.containsValue((java.lang.Object) wildcardEnumeration13);
        java.lang.Object obj17 = properties6.setProperty("{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=false, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=35, com.atomikos.icatch.threaded_2pc=true, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}", "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=100, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=35, com.atomikos.icatch.threaded_2pc=true, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNotNull(properties6);
        org.junit.Assert.assertNotNull(strSet7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNull(obj12);
        org.junit.Assert.assertNotNull(wildcardEnumeration13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNull(obj17);
    }
}
