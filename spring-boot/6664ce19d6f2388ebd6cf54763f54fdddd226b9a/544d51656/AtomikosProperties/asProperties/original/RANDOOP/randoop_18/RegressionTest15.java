import org.junit.FixMethodOrder;
import org.junit.Test;
import org.junit.runners.MethodSorters;

@FixMethodOrder(MethodSorters.NAME_ASCENDING)
public class RegressionTest15 {

    public static boolean debug = false;

    @Test
    public void test7501() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7501");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet3 = properties0.stringPropertyNames();
        java.util.Properties properties4 = new java.util.Properties();
        java.lang.Object obj6 = properties4.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet7 = properties4.stringPropertyNames();
        java.lang.Object obj9 = properties0.put((java.lang.Object) strSet7, (java.lang.Object) 0.0d);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties10 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties10.setSerialJtaTransactions(false);
        atomikosProperties10.setThreadedTwoPhaseCommit(true);
        atomikosProperties10.setMaxTimeout((long) '#');
        boolean boolean17 = atomikosProperties10.isEnableLogging();
        atomikosProperties10.setCheckpointInterval((long) (byte) -1);
        atomikosProperties10.setEnableLogging(true);
        atomikosProperties10.setLogBaseName("{}");
        long long24 = atomikosProperties10.getDefaultJtaTimeout();
        boolean boolean25 = properties0.containsKey((java.lang.Object) long24);
        java.util.Properties properties26 = new java.util.Properties();
        java.lang.Object obj28 = properties26.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration29 = properties26.elements();
        boolean boolean30 = properties26.isEmpty();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet31 = properties26.entrySet();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties33 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties33.setSerialJtaTransactions(false);
        atomikosProperties33.setThreadedTwoPhaseCommit(true);
        atomikosProperties33.setMaxTimeout((long) '#');
        boolean boolean40 = atomikosProperties33.isForceShutdownOnVmExit();
        java.lang.Object obj41 = properties26.put((java.lang.Object) (short) 1, (java.lang.Object) atomikosProperties33);
        boolean boolean42 = atomikosProperties33.isSerialJtaTransactions();
        java.lang.Object obj43 = properties0.get((java.lang.Object) boolean42);
        java.util.Properties properties44 = new java.util.Properties(properties0);
        java.util.Collection<java.lang.Object> objCollection45 = properties0.values();
        java.io.PrintWriter printWriter46 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties0.list(printWriter46);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(strSet3);
        org.junit.Assert.assertNull(obj6);
        org.junit.Assert.assertNotNull(strSet7);
        org.junit.Assert.assertNull(obj9);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue("'" + long24 + "' != '" + 10000L + "'", long24 == 10000L);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNull(obj28);
        org.junit.Assert.assertNotNull(objEnumeration29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNotNull(objEntrySet31);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNull(obj41);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNull(obj43);
        org.junit.Assert.assertNotNull(objCollection45);
    }

    @Test
    public void test7502() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7502");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration3 = properties0.elements();
        boolean boolean4 = properties0.isEmpty();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet5 = properties0.entrySet();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties7 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties7.setSerialJtaTransactions(false);
        atomikosProperties7.setThreadedTwoPhaseCommit(true);
        atomikosProperties7.setMaxTimeout((long) '#');
        boolean boolean14 = atomikosProperties7.isForceShutdownOnVmExit();
        java.lang.Object obj15 = properties0.put((java.lang.Object) (short) 1, (java.lang.Object) atomikosProperties7);
        long long16 = atomikosProperties7.getDefaultJtaTimeout();
        atomikosProperties7.setLogBaseDir("{}");
        boolean boolean19 = atomikosProperties7.isForceShutdownOnVmExit();
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(objEnumeration3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(objEntrySet5);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNull(obj15);
        org.junit.Assert.assertTrue("'" + long16 + "' != '" + 10000L + "'", long16 == 10000L);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
    }

    @Test
    public void test7503() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7503");
        java.util.Properties properties0 = new java.util.Properties();
        boolean boolean2 = properties0.contains((java.lang.Object) 100.0d);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties3 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties3.setSerialJtaTransactions(false);
        atomikosProperties3.setThreadedTwoPhaseCommit(true);
        atomikosProperties3.setSerialJtaTransactions(false);
        java.lang.String str10 = atomikosProperties3.getService();
        boolean boolean11 = properties0.containsKey((java.lang.Object) atomikosProperties3);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties12 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties12.setSerialJtaTransactions(false);
        atomikosProperties12.setThreadedTwoPhaseCommit(true);
        atomikosProperties12.setMaxTimeout((long) '#');
        boolean boolean19 = atomikosProperties12.isEnableLogging();
        atomikosProperties12.setCheckpointInterval((long) 100);
        atomikosProperties12.setForceShutdownOnVmExit(false);
        boolean boolean24 = properties0.containsValue((java.lang.Object) atomikosProperties12);
        atomikosProperties12.setService("{=hi!}");
        atomikosProperties12.setDefaultJtaTimeout(0L);
        atomikosProperties12.setThreadedTwoPhaseCommit(true);
        boolean boolean31 = atomikosProperties12.isThreadedTwoPhaseCommit();
        java.lang.String str32 = atomikosProperties12.getTransactionManagerUniqueName();
        java.lang.String str33 = atomikosProperties12.getTransactionManagerUniqueName();
        atomikosProperties12.setService("{true={com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=100, com.atomikos.icatch.serial_jta_transactions=false, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=35, com.atomikos.icatch.threaded_2pc=true, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}}");
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNull(str32);
        org.junit.Assert.assertNull(str33);
    }

    @Test
    public void test7504() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7504");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setSerialJtaTransactions(false);
        boolean boolean3 = atomikosProperties0.isThreadedTwoPhaseCommit();
        atomikosProperties0.setThreadedTwoPhaseCommit(false);
        atomikosProperties0.setForceShutdownOnVmExit(false);
        int int8 = atomikosProperties0.getMaxActives();
        atomikosProperties0.setDefaultJtaTimeout((long) (byte) 10);
        atomikosProperties0.setTransactionManagerUniqueName("hi!");
        boolean boolean13 = atomikosProperties0.isForceShutdownOnVmExit();
        boolean boolean14 = atomikosProperties0.isForceShutdownOnVmExit();
        atomikosProperties0.setCheckpointInterval((long) (short) 100);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 50 + "'", int8 == 50);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
    }

    @Test
    public void test7505() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7505");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setSerialJtaTransactions(false);
        boolean boolean3 = atomikosProperties0.isSerialJtaTransactions();
        java.util.Properties properties4 = atomikosProperties0.asProperties();
        java.lang.Object obj7 = properties4.setProperty("hi!", "");
        java.util.Properties properties8 = new java.util.Properties(properties4);
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet9 = properties4.entrySet();
        java.lang.Object obj10 = properties4.clone();
        java.util.Enumeration<java.lang.Object> objEnumeration11 = properties4.keys();
        java.util.Properties properties12 = new java.util.Properties();
        java.lang.Object obj14 = properties12.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration15 = properties12.elements();
        boolean boolean16 = properties12.isEmpty();
        java.lang.Object obj19 = properties12.setProperty("tmlog", "");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties20 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties20.setSerialJtaTransactions(false);
        boolean boolean23 = atomikosProperties20.isSerialJtaTransactions();
        atomikosProperties20.setTransactionManagerUniqueName("hi!");
        atomikosProperties20.setForceShutdownOnVmExit(false);
        atomikosProperties20.setDefaultJtaTimeout((long) (byte) 10);
        java.lang.String str30 = atomikosProperties20.getTransactionManagerUniqueName();
        java.util.Properties properties31 = new java.util.Properties();
        java.util.Properties properties32 = new java.util.Properties();
        java.lang.Object obj34 = properties32.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet35 = properties32.stringPropertyNames();
        boolean boolean36 = properties31.containsValue((java.lang.Object) properties32);
        java.util.Collection<java.lang.Object> objCollection37 = properties31.values();
        java.util.Properties properties39 = new java.util.Properties();
        java.lang.Object obj41 = properties39.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration42 = properties39.elements();
        boolean boolean43 = properties39.isEmpty();
        java.util.Set<java.lang.Object> objSet44 = properties39.keySet();
        java.lang.Object obj45 = properties31.putIfAbsent((java.lang.Object) "hi!", (java.lang.Object) objSet44);
        java.util.Set<java.lang.Object> objSet46 = properties31.keySet();
        java.util.Set<java.lang.Object> objSet47 = properties31.keySet();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet48 = properties31.entrySet();
        java.util.Set<java.lang.Object> objSet49 = properties31.keySet();
        java.lang.Object obj50 = properties12.replace((java.lang.Object) atomikosProperties20, (java.lang.Object) properties31);
        java.lang.String str52 = properties31.getProperty("{{}={}}");
        properties4.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties31);
        java.io.Reader reader54 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties31.load(reader54);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(properties4);
        org.junit.Assert.assertNull(obj7);
        org.junit.Assert.assertNotNull(objEntrySet9);
        org.junit.Assert.assertNotNull(obj10);
// flaky:         org.junit.Assert.assertEquals(obj10.toString(), "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=false, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, hi!=, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
// flaky:         org.junit.Assert.assertEquals(java.lang.String.valueOf(obj10), "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=false, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, hi!=, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
// flaky:         org.junit.Assert.assertEquals(java.util.Objects.toString(obj10), "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=false, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, hi!=, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
        org.junit.Assert.assertNotNull(objEnumeration11);
        org.junit.Assert.assertNull(obj14);
        org.junit.Assert.assertNotNull(objEnumeration15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNull(obj19);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "hi!" + "'", str30, "hi!");
        org.junit.Assert.assertNull(obj34);
        org.junit.Assert.assertNotNull(strSet35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(objCollection37);
        org.junit.Assert.assertNull(obj41);
        org.junit.Assert.assertNotNull(objEnumeration42);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNotNull(objSet44);
        org.junit.Assert.assertNull(obj45);
        org.junit.Assert.assertNotNull(objSet46);
        org.junit.Assert.assertNotNull(objSet47);
        org.junit.Assert.assertNotNull(objEntrySet48);
        org.junit.Assert.assertNotNull(objSet49);
        org.junit.Assert.assertNull(obj50);
        org.junit.Assert.assertNull(str52);
    }

    @Test
    public void test7506() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7506");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration3 = properties0.elements();
        java.util.Enumeration<java.lang.Object> objEnumeration4 = properties0.elements();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties5 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties5.setSerialJtaTransactions(false);
        atomikosProperties5.setThreadedTwoPhaseCommit(true);
        atomikosProperties5.setMaxTimeout((long) '#');
        boolean boolean12 = atomikosProperties5.isEnableLogging();
        atomikosProperties5.setCheckpointInterval((long) (byte) -1);
        atomikosProperties5.setLogBaseName("{=hi!}");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties17 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties17.setSerialJtaTransactions(false);
        atomikosProperties17.setThreadedTwoPhaseCommit(true);
        atomikosProperties17.setThreadedTwoPhaseCommit(true);
        java.util.Properties properties24 = atomikosProperties17.asProperties();
        int int25 = atomikosProperties17.getMaxActives();
        atomikosProperties17.setService("hi!");
        long long28 = atomikosProperties17.getMaxTimeout();
        boolean boolean29 = properties0.remove((java.lang.Object) atomikosProperties5, (java.lang.Object) long28);
        java.util.Set<java.lang.Object> objSet30 = properties0.keySet();
        java.util.Enumeration<?> wildcardEnumeration31 = properties0.propertyNames();
        java.util.Properties properties32 = new java.util.Properties();
        java.lang.Object obj34 = properties32.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration35 = properties32.elements();
        boolean boolean36 = properties32.isEmpty();
        java.util.Set<java.lang.Object> objSet37 = properties32.keySet();
        java.util.Enumeration<java.lang.Object> objEnumeration38 = properties32.keys();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet39 = properties32.entrySet();
        java.util.Properties properties40 = new java.util.Properties(properties32);
        java.util.Enumeration<java.lang.Object> objEnumeration41 = properties40.keys();
        java.util.Properties properties42 = new java.util.Properties(properties40);
        java.lang.Object obj43 = properties42.clone();
        java.lang.Object obj44 = properties0.get(obj43);
        properties0.clear();
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(objEnumeration3);
        org.junit.Assert.assertNotNull(objEnumeration4);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(properties24);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 50 + "'", int25 == 50);
        org.junit.Assert.assertTrue("'" + long28 + "' != '" + 300000L + "'", long28 == 300000L);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(objSet30);
        org.junit.Assert.assertNotNull(wildcardEnumeration31);
        org.junit.Assert.assertNull(obj34);
        org.junit.Assert.assertNotNull(objEnumeration35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNotNull(objSet37);
        org.junit.Assert.assertNotNull(objEnumeration38);
        org.junit.Assert.assertNotNull(objEntrySet39);
        org.junit.Assert.assertNotNull(objEnumeration41);
        org.junit.Assert.assertNotNull(obj43);
        org.junit.Assert.assertEquals(obj43.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj43), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj43), "{}");
        org.junit.Assert.assertNull(obj44);
    }

    @Test
    public void test7507() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7507");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setSerialJtaTransactions(false);
        atomikosProperties0.setThreadedTwoPhaseCommit(true);
        atomikosProperties0.setEnableLogging(false);
        atomikosProperties0.setForceShutdownOnVmExit(true);
        long long9 = atomikosProperties0.getDefaultJtaTimeout();
        atomikosProperties0.setLogBaseName("{com.atomikos.icatch.enable_logging=false, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=1, com.atomikos.icatch.serial_jta_transactions=false, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
        long long12 = atomikosProperties0.getCheckpointInterval();
        org.junit.Assert.assertTrue("'" + long9 + "' != '" + 10000L + "'", long9 == 10000L);
        org.junit.Assert.assertTrue("'" + long12 + "' != '" + 500L + "'", long12 == 500L);
    }

    @Test
    public void test7508() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7508");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setSerialJtaTransactions(false);
        atomikosProperties0.setThreadedTwoPhaseCommit(true);
        atomikosProperties0.setMaxTimeout((long) '#');
        java.lang.String str7 = atomikosProperties0.getLogBaseDir();
        boolean boolean8 = atomikosProperties0.isThreadedTwoPhaseCommit();
        atomikosProperties0.setLogBaseDir("tmlog");
        atomikosProperties0.setForceShutdownOnVmExit(false);
        long long13 = atomikosProperties0.getCheckpointInterval();
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + long13 + "' != '" + 500L + "'", long13 == 500L);
    }

    @Test
    public void test7509() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7509");
        java.util.Properties properties0 = new java.util.Properties();
        boolean boolean2 = properties0.contains((java.lang.Object) 100.0d);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties3 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties3.setSerialJtaTransactions(false);
        atomikosProperties3.setThreadedTwoPhaseCommit(true);
        atomikosProperties3.setSerialJtaTransactions(false);
        java.lang.String str10 = atomikosProperties3.getService();
        boolean boolean11 = properties0.containsKey((java.lang.Object) atomikosProperties3);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties12 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties12.setSerialJtaTransactions(false);
        atomikosProperties12.setThreadedTwoPhaseCommit(true);
        atomikosProperties12.setMaxTimeout((long) '#');
        boolean boolean19 = atomikosProperties12.isEnableLogging();
        atomikosProperties12.setCheckpointInterval((long) 100);
        atomikosProperties12.setForceShutdownOnVmExit(false);
        boolean boolean24 = properties0.containsValue((java.lang.Object) atomikosProperties12);
        atomikosProperties12.setService("{=hi!}");
        java.util.Properties properties27 = atomikosProperties12.asProperties();
        java.util.Properties properties28 = new java.util.Properties();
        java.util.Properties properties29 = new java.util.Properties();
        java.lang.Object obj31 = properties29.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet32 = properties29.stringPropertyNames();
        boolean boolean33 = properties28.containsValue((java.lang.Object) properties29);
        java.util.Collection<java.lang.Object> objCollection34 = properties28.values();
        boolean boolean35 = properties28.isEmpty();
        boolean boolean36 = properties27.equals((java.lang.Object) properties28);
        java.util.Properties properties37 = new java.util.Properties();
        java.lang.Object obj39 = properties37.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration40 = properties37.elements();
        int int41 = properties37.size();
        java.util.Properties properties42 = new java.util.Properties();
        java.lang.Object obj44 = properties42.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration45 = properties42.elements();
        boolean boolean46 = properties42.isEmpty();
        java.util.Set<java.lang.Object> objSet47 = properties42.keySet();
        boolean boolean48 = properties37.containsKey((java.lang.Object) objSet47);
        java.util.Enumeration<java.lang.Object> objEnumeration49 = properties37.keys();
        java.util.Properties properties50 = new java.util.Properties();
        java.lang.Object obj52 = properties50.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration53 = properties50.elements();
        boolean boolean54 = properties50.isEmpty();
        java.util.Set<java.lang.Object> objSet55 = properties50.keySet();
        java.util.Enumeration<java.lang.Object> objEnumeration56 = properties50.keys();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet57 = properties50.entrySet();
        boolean boolean59 = properties37.remove((java.lang.Object) properties50, (java.lang.Object) 1.0f);
        java.lang.Object obj60 = properties50.clone();
        java.util.Collection<java.lang.Object> objCollection61 = properties50.values();
        java.util.Properties properties62 = new java.util.Properties(properties50);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties63 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties63.setSerialJtaTransactions(false);
        boolean boolean66 = atomikosProperties63.isSerialJtaTransactions();
        atomikosProperties63.setTransactionManagerUniqueName("hi!");
        atomikosProperties63.setForceShutdownOnVmExit(false);
        atomikosProperties63.setDefaultJtaTimeout((long) (byte) 10);
        java.lang.String str73 = atomikosProperties63.getTransactionManagerUniqueName();
        atomikosProperties63.setForceShutdownOnVmExit(true);
        boolean boolean76 = properties62.contains((java.lang.Object) atomikosProperties63);
        java.lang.Object obj77 = properties62.clone();
        java.lang.Object obj78 = properties27.get((java.lang.Object) properties62);
        java.util.Set<java.lang.String> strSet79 = properties27.stringPropertyNames();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(properties27);
        org.junit.Assert.assertNull(obj31);
        org.junit.Assert.assertNotNull(strSet32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(objCollection34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNull(obj39);
        org.junit.Assert.assertNotNull(objEnumeration40);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 0 + "'", int41 == 0);
        org.junit.Assert.assertNull(obj44);
        org.junit.Assert.assertNotNull(objEnumeration45);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertNotNull(objSet47);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNotNull(objEnumeration49);
        org.junit.Assert.assertNull(obj52);
        org.junit.Assert.assertNotNull(objEnumeration53);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertNotNull(objSet55);
        org.junit.Assert.assertNotNull(objEnumeration56);
        org.junit.Assert.assertNotNull(objEntrySet57);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertNotNull(obj60);
        org.junit.Assert.assertEquals(obj60.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj60), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj60), "{}");
        org.junit.Assert.assertNotNull(objCollection61);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertEquals("'" + str73 + "' != '" + "hi!" + "'", str73, "hi!");
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
        org.junit.Assert.assertNotNull(obj77);
        org.junit.Assert.assertEquals(obj77.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj77), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj77), "{}");
        org.junit.Assert.assertNull(obj78);
        org.junit.Assert.assertNotNull(strSet79);
    }

    @Test
    public void test7510() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7510");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setSerialJtaTransactions(false);
        boolean boolean3 = atomikosProperties0.isSerialJtaTransactions();
        boolean boolean4 = atomikosProperties0.isEnableLogging();
        atomikosProperties0.setService("");
        java.util.Properties properties7 = atomikosProperties0.asProperties();
        long long8 = atomikosProperties0.getCheckpointInterval();
        java.lang.String str9 = atomikosProperties0.getLogBaseDir();
        java.lang.String str10 = atomikosProperties0.getService();
        atomikosProperties0.setMaxActives(2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(properties7);
        org.junit.Assert.assertTrue("'" + long8 + "' != '" + 500L + "'", long8 == 500L);
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
    }

    @Test
    public void test7511() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7511");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet3 = properties0.stringPropertyNames();
        java.util.Properties properties4 = new java.util.Properties();
        java.util.Properties properties5 = new java.util.Properties();
        java.lang.Object obj7 = properties5.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet8 = properties5.stringPropertyNames();
        boolean boolean9 = properties4.containsValue((java.lang.Object) properties5);
        java.util.Collection<java.lang.Object> objCollection10 = properties4.values();
        java.util.Enumeration<?> wildcardEnumeration11 = properties4.propertyNames();
        java.lang.Object obj13 = properties0.put((java.lang.Object) wildcardEnumeration11, (java.lang.Object) 10.0d);
        java.lang.String str15 = properties0.getProperty("");
        java.io.InputStream inputStream16 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties0.loadFromXML(inputStream16);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(strSet3);
        org.junit.Assert.assertNull(obj7);
        org.junit.Assert.assertNotNull(strSet8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(objCollection10);
        org.junit.Assert.assertNotNull(wildcardEnumeration11);
        org.junit.Assert.assertNull(obj13);
        org.junit.Assert.assertNull(str15);
    }

    @Test
    public void test7512() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7512");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration3 = properties0.elements();
        boolean boolean4 = properties0.isEmpty();
        java.lang.Object obj7 = properties0.setProperty("tmlog", "");
        java.util.Properties properties8 = new java.util.Properties();
        java.lang.Object obj10 = properties8.remove((java.lang.Object) 0.0d);
        java.util.Properties properties11 = new java.util.Properties();
        java.util.Collection<java.lang.Object> objCollection12 = properties11.values();
        java.util.Enumeration<java.lang.Object> objEnumeration13 = properties11.keys();
        java.util.Properties properties14 = new java.util.Properties();
        java.lang.Object obj16 = properties14.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration17 = properties14.elements();
        boolean boolean18 = properties14.isEmpty();
        java.util.Set<java.lang.Object> objSet19 = properties14.keySet();
        java.util.Enumeration<java.lang.Object> objEnumeration20 = properties14.keys();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet21 = properties14.entrySet();
        java.lang.Object obj22 = properties8.put((java.lang.Object) properties11, (java.lang.Object) properties14);
        java.lang.String str24 = properties11.getProperty("{=hi!}");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties25 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties25.setSerialJtaTransactions(false);
        boolean boolean28 = atomikosProperties25.isSerialJtaTransactions();
        java.lang.Object obj29 = properties0.put((java.lang.Object) properties11, (java.lang.Object) boolean28);
        properties11.clear();
        java.util.Set<java.lang.Object> objSet31 = properties11.keySet();
        boolean boolean32 = properties11.isEmpty();
        java.io.PrintWriter printWriter33 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties11.list(printWriter33);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(objEnumeration3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNull(obj7);
        org.junit.Assert.assertNull(obj10);
        org.junit.Assert.assertNotNull(objCollection12);
        org.junit.Assert.assertNotNull(objEnumeration13);
        org.junit.Assert.assertNull(obj16);
        org.junit.Assert.assertNotNull(objEnumeration17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(objSet19);
        org.junit.Assert.assertNotNull(objEnumeration20);
        org.junit.Assert.assertNotNull(objEntrySet21);
        org.junit.Assert.assertNull(obj22);
        org.junit.Assert.assertNull(str24);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNull(obj29);
        org.junit.Assert.assertNotNull(objSet31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
    }

    @Test
    public void test7513() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7513");
        java.util.Properties properties0 = new java.util.Properties();
        java.util.Collection<java.lang.Object> objCollection1 = properties0.values();
        java.util.Enumeration<java.lang.Object> objEnumeration2 = properties0.keys();
        java.lang.Object obj5 = properties0.setProperty("{}", "{}");
        java.util.Set<java.lang.String> strSet6 = properties0.stringPropertyNames();
        java.util.Properties properties7 = new java.util.Properties();
        boolean boolean9 = properties7.contains((java.lang.Object) 100.0d);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties10 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties10.setSerialJtaTransactions(false);
        atomikosProperties10.setThreadedTwoPhaseCommit(true);
        atomikosProperties10.setSerialJtaTransactions(false);
        java.lang.String str17 = atomikosProperties10.getService();
        boolean boolean18 = properties7.containsKey((java.lang.Object) atomikosProperties10);
        boolean boolean19 = properties0.containsKey((java.lang.Object) properties7);
        java.io.OutputStream outputStream20 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties7.storeToXML(outputStream20, "{{{}={}}={}}");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(objCollection1);
        org.junit.Assert.assertNotNull(objEnumeration2);
        org.junit.Assert.assertNull(obj5);
        org.junit.Assert.assertNotNull(strSet6);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNull(str17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
    }

    @Test
    public void test7514() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7514");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setSerialJtaTransactions(false);
        atomikosProperties0.setThreadedTwoPhaseCommit(true);
        atomikosProperties0.setThreadedTwoPhaseCommit(true);
        java.util.Properties properties7 = atomikosProperties0.asProperties();
        int int8 = atomikosProperties0.getMaxActives();
        atomikosProperties0.setTransactionManagerUniqueName("hi!");
        atomikosProperties0.setMaxTimeout(500L);
        java.util.Properties properties13 = atomikosProperties0.asProperties();
        atomikosProperties0.setService("{true={com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=100, com.atomikos.icatch.serial_jta_transactions=false, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=35, com.atomikos.icatch.threaded_2pc=true, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}}");
        org.junit.Assert.assertNotNull(properties7);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 50 + "'", int8 == 50);
        org.junit.Assert.assertNotNull(properties13);
    }

    @Test
    public void test7515() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7515");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration3 = properties0.elements();
        boolean boolean4 = properties0.isEmpty();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet5 = properties0.entrySet();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties7 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties7.setSerialJtaTransactions(false);
        atomikosProperties7.setThreadedTwoPhaseCommit(true);
        atomikosProperties7.setMaxTimeout((long) '#');
        boolean boolean14 = atomikosProperties7.isForceShutdownOnVmExit();
        java.lang.Object obj15 = properties0.put((java.lang.Object) (short) 1, (java.lang.Object) atomikosProperties7);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties16 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties16.setSerialJtaTransactions(false);
        boolean boolean19 = atomikosProperties16.isSerialJtaTransactions();
        atomikosProperties16.setTransactionManagerUniqueName("hi!");
        atomikosProperties16.setForceShutdownOnVmExit(false);
        atomikosProperties16.setDefaultJtaTimeout((long) (byte) 10);
        java.lang.String str26 = atomikosProperties16.getTransactionManagerUniqueName();
        boolean boolean27 = properties0.contains((java.lang.Object) str26);
        java.util.Properties properties28 = new java.util.Properties();
        boolean boolean30 = properties28.contains((java.lang.Object) 100.0d);
        int int31 = properties28.size();
        boolean boolean32 = properties0.equals((java.lang.Object) properties28);
        java.io.InputStream inputStream33 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties0.loadFromXML(inputStream33);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(objEnumeration3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(objEntrySet5);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNull(obj15);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "hi!" + "'", str26, "hi!");
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 0 + "'", int31 == 0);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
    }

    @Test
    public void test7516() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7516");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setSerialJtaTransactions(false);
        atomikosProperties0.setThreadedTwoPhaseCommit(true);
        atomikosProperties0.setEnableLogging(false);
        boolean boolean7 = atomikosProperties0.isSerialJtaTransactions();
        int int8 = atomikosProperties0.getMaxActives();
        boolean boolean9 = atomikosProperties0.isEnableLogging();
        long long10 = atomikosProperties0.getCheckpointInterval();
        java.util.Properties properties11 = atomikosProperties0.asProperties();
        java.util.Properties properties12 = atomikosProperties0.asProperties();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties13 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties13.setSerialJtaTransactions(false);
        boolean boolean16 = atomikosProperties13.isSerialJtaTransactions();
        java.lang.String str17 = atomikosProperties13.getService();
        boolean boolean18 = atomikosProperties13.isEnableLogging();
        boolean boolean19 = atomikosProperties13.isSerialJtaTransactions();
        java.lang.String str20 = atomikosProperties13.getLogBaseName();
        atomikosProperties13.setService("hi!");
        boolean boolean23 = properties12.equals((java.lang.Object) "hi!");
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 50 + "'", int8 == 50);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + long10 + "' != '" + 500L + "'", long10 == 500L);
        org.junit.Assert.assertNotNull(properties11);
        org.junit.Assert.assertNotNull(properties12);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNull(str17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "tmlog" + "'", str20, "tmlog");
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
    }

    @Test
    public void test7517() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7517");
        java.util.Properties properties0 = new java.util.Properties();
        boolean boolean2 = properties0.contains((java.lang.Object) 100.0d);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties3 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties3.setSerialJtaTransactions(false);
        atomikosProperties3.setThreadedTwoPhaseCommit(true);
        atomikosProperties3.setSerialJtaTransactions(false);
        java.lang.String str10 = atomikosProperties3.getService();
        boolean boolean11 = properties0.containsKey((java.lang.Object) atomikosProperties3);
        java.lang.String str12 = atomikosProperties3.getService();
        long long13 = atomikosProperties3.getCheckpointInterval();
        atomikosProperties3.setEnableLogging(true);
        java.lang.String str16 = atomikosProperties3.getLogBaseDir();
        java.lang.String str17 = atomikosProperties3.getLogBaseDir();
        atomikosProperties3.setCheckpointInterval((long) (short) 0);
        boolean boolean20 = atomikosProperties3.isThreadedTwoPhaseCommit();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertTrue("'" + long13 + "' != '" + 500L + "'", long13 == 500L);
        org.junit.Assert.assertNull(str16);
        org.junit.Assert.assertNull(str17);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
    }

    @Test
    public void test7518() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7518");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet3 = properties0.stringPropertyNames();
        java.util.Properties properties4 = new java.util.Properties();
        java.util.Properties properties5 = new java.util.Properties();
        java.lang.Object obj7 = properties5.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet8 = properties5.stringPropertyNames();
        boolean boolean9 = properties4.containsValue((java.lang.Object) properties5);
        java.util.Collection<java.lang.Object> objCollection10 = properties4.values();
        java.util.Enumeration<?> wildcardEnumeration11 = properties4.propertyNames();
        java.lang.Object obj13 = properties0.put((java.lang.Object) wildcardEnumeration11, (java.lang.Object) 10.0d);
        java.lang.String str15 = properties0.getProperty("");
        int int16 = properties0.size();
        boolean boolean17 = properties0.isEmpty();
        java.io.OutputStream outputStream18 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties0.store(outputStream18, "{true=true}");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(strSet3);
        org.junit.Assert.assertNull(obj7);
        org.junit.Assert.assertNotNull(strSet8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(objCollection10);
        org.junit.Assert.assertNotNull(wildcardEnumeration11);
        org.junit.Assert.assertNull(obj13);
        org.junit.Assert.assertNull(str15);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 1 + "'", int16 == 1);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
    }

    @Test
    public void test7519() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7519");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<?> wildcardEnumeration3 = properties0.propertyNames();
        java.lang.Object obj6 = properties0.setProperty("{}", "hi!");
        properties0.clear();
        java.util.Set<java.lang.String> strSet8 = properties0.stringPropertyNames();
        java.util.Collection<java.lang.Object> objCollection9 = properties0.values();
        properties0.clear();
        java.io.OutputStream outputStream11 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties0.store(outputStream11, "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=false, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(wildcardEnumeration3);
        org.junit.Assert.assertNull(obj6);
        org.junit.Assert.assertNotNull(strSet8);
        org.junit.Assert.assertNotNull(objCollection9);
    }

    @Test
    public void test7520() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7520");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        java.util.Properties properties3 = new java.util.Properties();
        java.util.Collection<java.lang.Object> objCollection4 = properties3.values();
        java.util.Enumeration<java.lang.Object> objEnumeration5 = properties3.keys();
        java.util.Properties properties6 = new java.util.Properties();
        java.lang.Object obj8 = properties6.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration9 = properties6.elements();
        boolean boolean10 = properties6.isEmpty();
        java.util.Set<java.lang.Object> objSet11 = properties6.keySet();
        java.util.Enumeration<java.lang.Object> objEnumeration12 = properties6.keys();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet13 = properties6.entrySet();
        java.lang.Object obj14 = properties0.put((java.lang.Object) properties3, (java.lang.Object) properties6);
        java.util.Properties properties15 = new java.util.Properties();
        java.util.Properties properties16 = new java.util.Properties();
        java.lang.Object obj18 = properties16.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet19 = properties16.stringPropertyNames();
        boolean boolean20 = properties15.containsValue((java.lang.Object) properties16);
        java.util.Collection<java.lang.Object> objCollection21 = properties15.values();
        java.util.Properties properties23 = new java.util.Properties();
        java.lang.Object obj25 = properties23.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration26 = properties23.elements();
        boolean boolean27 = properties23.isEmpty();
        java.util.Set<java.lang.Object> objSet28 = properties23.keySet();
        java.lang.Object obj29 = properties15.putIfAbsent((java.lang.Object) "hi!", (java.lang.Object) objSet28);
        java.util.Set<java.lang.Object> objSet30 = properties15.keySet();
        java.util.Set<java.lang.Object> objSet31 = properties15.keySet();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet32 = properties15.entrySet();
        java.lang.Object obj33 = properties3.remove((java.lang.Object) objEntrySet32);
        java.lang.String str34 = properties3.toString();
        java.util.Properties properties35 = new java.util.Properties();
        java.lang.Object obj37 = properties35.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet38 = properties35.stringPropertyNames();
        java.lang.String str39 = properties35.toString();
        java.lang.String str40 = properties35.toString();
        java.util.Set<java.lang.Object> objSet41 = properties35.keySet();
        java.util.Properties properties42 = new java.util.Properties();
        java.lang.Object obj44 = properties42.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration45 = properties42.elements();
        boolean boolean46 = properties42.isEmpty();
        java.util.Set<java.lang.Object> objSet47 = properties42.keySet();
        boolean boolean48 = properties42.isEmpty();
        java.lang.Object obj49 = properties3.putIfAbsent((java.lang.Object) properties35, (java.lang.Object) boolean48);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties50 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties50.setSerialJtaTransactions(false);
        boolean boolean53 = atomikosProperties50.isSerialJtaTransactions();
        java.util.Properties properties54 = atomikosProperties50.asProperties();
        int int55 = atomikosProperties50.getMaxActives();
        boolean boolean57 = properties3.remove((java.lang.Object) int55, (java.lang.Object) 500L);
        java.util.Properties properties58 = new java.util.Properties();
        java.lang.Object obj60 = properties58.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration61 = properties58.elements();
        int int62 = properties58.size();
        java.util.Properties properties63 = new java.util.Properties();
        java.lang.Object obj65 = properties63.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration66 = properties63.elements();
        boolean boolean67 = properties63.isEmpty();
        java.util.Set<java.lang.Object> objSet68 = properties63.keySet();
        boolean boolean69 = properties58.containsKey((java.lang.Object) objSet68);
        java.util.Enumeration<java.lang.Object> objEnumeration70 = properties58.keys();
        java.util.Properties properties71 = new java.util.Properties();
        java.lang.Object obj73 = properties71.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration74 = properties71.elements();
        boolean boolean75 = properties71.isEmpty();
        java.util.Set<java.lang.Object> objSet76 = properties71.keySet();
        java.util.Enumeration<java.lang.Object> objEnumeration77 = properties71.keys();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet78 = properties71.entrySet();
        boolean boolean80 = properties58.remove((java.lang.Object) properties71, (java.lang.Object) 1.0f);
        java.lang.Object obj81 = properties71.clone();
        java.util.Collection<java.lang.Object> objCollection82 = properties71.values();
        java.lang.Object obj83 = properties3.remove((java.lang.Object) properties71);
        java.util.Enumeration<?> wildcardEnumeration84 = properties71.propertyNames();
        java.lang.String str85 = properties71.toString();
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(objCollection4);
        org.junit.Assert.assertNotNull(objEnumeration5);
        org.junit.Assert.assertNull(obj8);
        org.junit.Assert.assertNotNull(objEnumeration9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(objSet11);
        org.junit.Assert.assertNotNull(objEnumeration12);
        org.junit.Assert.assertNotNull(objEntrySet13);
        org.junit.Assert.assertNull(obj14);
        org.junit.Assert.assertNull(obj18);
        org.junit.Assert.assertNotNull(strSet19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(objCollection21);
        org.junit.Assert.assertNull(obj25);
        org.junit.Assert.assertNotNull(objEnumeration26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNotNull(objSet28);
        org.junit.Assert.assertNull(obj29);
        org.junit.Assert.assertNotNull(objSet30);
        org.junit.Assert.assertNotNull(objSet31);
        org.junit.Assert.assertNotNull(objEntrySet32);
        org.junit.Assert.assertNull(obj33);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "{}" + "'", str34, "{}");
        org.junit.Assert.assertNull(obj37);
        org.junit.Assert.assertNotNull(strSet38);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "{}" + "'", str39, "{}");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "{}" + "'", str40, "{}");
        org.junit.Assert.assertNotNull(objSet41);
        org.junit.Assert.assertNull(obj44);
        org.junit.Assert.assertNotNull(objEnumeration45);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertNotNull(objSet47);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertNull(obj49);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertNotNull(properties54);
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + 50 + "'", int55 == 50);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertNull(obj60);
        org.junit.Assert.assertNotNull(objEnumeration61);
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + 0 + "'", int62 == 0);
        org.junit.Assert.assertNull(obj65);
        org.junit.Assert.assertNotNull(objEnumeration66);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + true + "'", boolean67 == true);
        org.junit.Assert.assertNotNull(objSet68);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertNotNull(objEnumeration70);
        org.junit.Assert.assertNull(obj73);
        org.junit.Assert.assertNotNull(objEnumeration74);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + true + "'", boolean75 == true);
        org.junit.Assert.assertNotNull(objSet76);
        org.junit.Assert.assertNotNull(objEnumeration77);
        org.junit.Assert.assertNotNull(objEntrySet78);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", boolean80 == false);
        org.junit.Assert.assertNotNull(obj81);
        org.junit.Assert.assertEquals(obj81.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj81), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj81), "{}");
        org.junit.Assert.assertNotNull(objCollection82);
        org.junit.Assert.assertEquals("'" + obj83 + "' != '" + true + "'", obj83, true);
        org.junit.Assert.assertNotNull(wildcardEnumeration84);
        org.junit.Assert.assertEquals("'" + str85 + "' != '" + "{}" + "'", str85, "{}");
    }

    @Test
    public void test7521() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7521");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setSerialJtaTransactions(false);
        boolean boolean3 = atomikosProperties0.isSerialJtaTransactions();
        java.lang.String str4 = atomikosProperties0.getService();
        boolean boolean5 = atomikosProperties0.isEnableLogging();
        atomikosProperties0.setMaxActives(2);
        java.util.Properties properties8 = atomikosProperties0.asProperties();
        java.lang.Object obj11 = properties8.setProperty("{true=true}", "{true=true}");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties12 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties12.setSerialJtaTransactions(false);
        atomikosProperties12.setThreadedTwoPhaseCommit(true);
        atomikosProperties12.setThreadedTwoPhaseCommit(true);
        boolean boolean19 = atomikosProperties12.isSerialJtaTransactions();
        atomikosProperties12.setMaxActives((int) (byte) 0);
        java.lang.Object obj22 = properties8.remove((java.lang.Object) atomikosProperties12);
        atomikosProperties12.setTransactionManagerUniqueName("{hi!=[], {hi!=[]}=}");
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNotNull(properties8);
        org.junit.Assert.assertNull(obj11);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNull(obj22);
    }

    @Test
    public void test7522() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7522");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration3 = properties0.elements();
        int int4 = properties0.size();
        java.util.Properties properties5 = new java.util.Properties(properties0);
        java.util.Set<java.lang.String> strSet6 = properties0.stringPropertyNames();
        java.util.Set<java.lang.String> strSet7 = properties0.stringPropertyNames();
        java.util.Properties properties8 = new java.util.Properties();
        java.lang.Object obj10 = properties8.remove((java.lang.Object) 0.0d);
        boolean boolean11 = properties8.isEmpty();
        java.util.Enumeration<java.lang.Object> objEnumeration12 = properties8.elements();
        java.util.Properties properties13 = new java.util.Properties();
        java.lang.Object obj15 = properties13.remove((java.lang.Object) 0.0d);
        boolean boolean16 = properties13.isEmpty();
        java.util.Enumeration<java.lang.Object> objEnumeration17 = properties13.elements();
        java.util.Enumeration<java.lang.Object> objEnumeration18 = properties13.elements();
        java.lang.Object obj19 = properties0.replace((java.lang.Object) objEnumeration12, (java.lang.Object) objEnumeration18);
        java.util.Enumeration<java.lang.Object> objEnumeration20 = properties0.keys();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties21 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties21.setSerialJtaTransactions(false);
        boolean boolean24 = atomikosProperties21.isSerialJtaTransactions();
        java.lang.String str25 = atomikosProperties21.getService();
        boolean boolean26 = atomikosProperties21.isEnableLogging();
        java.lang.String str27 = atomikosProperties21.getLogBaseName();
        boolean boolean28 = properties0.containsKey((java.lang.Object) atomikosProperties21);
        boolean boolean29 = atomikosProperties21.isSerialJtaTransactions();
        long long30 = atomikosProperties21.getDefaultJtaTimeout();
        java.lang.String str31 = atomikosProperties21.getLogBaseDir();
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(objEnumeration3);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNotNull(strSet6);
        org.junit.Assert.assertNotNull(strSet7);
        org.junit.Assert.assertNull(obj10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNotNull(objEnumeration12);
        org.junit.Assert.assertNull(obj15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(objEnumeration17);
        org.junit.Assert.assertNotNull(objEnumeration18);
        org.junit.Assert.assertNull(obj19);
        org.junit.Assert.assertNotNull(objEnumeration20);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNull(str25);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "tmlog" + "'", str27, "tmlog");
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + long30 + "' != '" + 10000L + "'", long30 == 10000L);
        org.junit.Assert.assertNull(str31);
    }

    @Test
    public void test7523() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7523");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setSerialJtaTransactions(false);
        atomikosProperties0.setThreadedTwoPhaseCommit(true);
        atomikosProperties0.setMaxTimeout((long) '#');
        long long7 = atomikosProperties0.getCheckpointInterval();
        java.lang.String str8 = atomikosProperties0.getTransactionManagerUniqueName();
        atomikosProperties0.setTransactionManagerUniqueName("{=hi!}");
        atomikosProperties0.setCheckpointInterval((long) (-1));
        atomikosProperties0.setForceShutdownOnVmExit(false);
        java.util.Properties properties15 = atomikosProperties0.asProperties();
        properties15.clear();
        java.util.Collection<java.lang.Object> objCollection17 = properties15.values();
        int int18 = properties15.size();
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + 500L + "'", long7 == 500L);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNotNull(properties15);
        org.junit.Assert.assertNotNull(objCollection17);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 0 + "'", int18 == 0);
    }

    @Test
    public void test7524() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7524");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration3 = properties0.elements();
        boolean boolean4 = properties0.isEmpty();
        java.util.Set<java.lang.Object> objSet5 = properties0.keySet();
        java.util.Enumeration<java.lang.Object> objEnumeration6 = properties0.keys();
        java.lang.String str8 = properties0.getProperty("hi!");
        java.lang.String str10 = properties0.getProperty("");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties11 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties11.setSerialJtaTransactions(false);
        atomikosProperties11.setThreadedTwoPhaseCommit(true);
        atomikosProperties11.setEnableLogging(false);
        boolean boolean18 = properties0.containsKey((java.lang.Object) atomikosProperties11);
        java.lang.Object obj21 = properties0.setProperty("hi!", "");
        int int22 = properties0.size();
        java.util.Properties properties23 = new java.util.Properties();
        java.lang.Object obj25 = properties23.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration26 = properties23.elements();
        boolean boolean27 = properties23.isEmpty();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet28 = properties23.entrySet();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties30 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties30.setSerialJtaTransactions(false);
        atomikosProperties30.setThreadedTwoPhaseCommit(true);
        atomikosProperties30.setMaxTimeout((long) '#');
        boolean boolean37 = atomikosProperties30.isForceShutdownOnVmExit();
        java.lang.Object obj38 = properties23.put((java.lang.Object) (short) 1, (java.lang.Object) atomikosProperties30);
        boolean boolean39 = atomikosProperties30.isSerialJtaTransactions();
        boolean boolean40 = properties0.containsValue((java.lang.Object) boolean39);
        java.util.Set<java.lang.Object> objSet41 = properties0.keySet();
        boolean boolean42 = properties0.isEmpty();
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(objEnumeration3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(objSet5);
        org.junit.Assert.assertNotNull(objEnumeration6);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNull(obj21);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 1 + "'", int22 == 1);
        org.junit.Assert.assertNull(obj25);
        org.junit.Assert.assertNotNull(objEnumeration26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNotNull(objEntrySet28);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNull(obj38);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(objSet41);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
    }

    @Test
    public void test7525() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7525");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setSerialJtaTransactions(false);
        atomikosProperties0.setThreadedTwoPhaseCommit(true);
        atomikosProperties0.setMaxTimeout((long) '#');
        boolean boolean7 = atomikosProperties0.isEnableLogging();
        atomikosProperties0.setCheckpointInterval((long) (byte) -1);
        atomikosProperties0.setEnableLogging(true);
        atomikosProperties0.setLogBaseDir("");
        long long14 = atomikosProperties0.getMaxTimeout();
        atomikosProperties0.setSerialJtaTransactions(true);
        java.lang.String str17 = atomikosProperties0.getLogBaseDir();
        atomikosProperties0.setThreadedTwoPhaseCommit(false);
        atomikosProperties0.setCheckpointInterval((long) 32);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertTrue("'" + long14 + "' != '" + 35L + "'", long14 == 35L);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "" + "'", str17, "");
    }

    @Test
    public void test7526() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7526");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration3 = properties0.elements();
        int int4 = properties0.size();
        java.util.Properties properties5 = new java.util.Properties(properties0);
        java.util.Enumeration<java.lang.Object> objEnumeration6 = properties0.keys();
        java.util.Properties properties7 = new java.util.Properties();
        java.lang.Object obj9 = properties7.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet10 = properties7.stringPropertyNames();
        java.util.Properties properties11 = new java.util.Properties();
        java.util.Properties properties12 = new java.util.Properties();
        java.lang.Object obj14 = properties12.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet15 = properties12.stringPropertyNames();
        boolean boolean16 = properties11.containsValue((java.lang.Object) properties12);
        java.util.Collection<java.lang.Object> objCollection17 = properties11.values();
        java.util.Enumeration<?> wildcardEnumeration18 = properties11.propertyNames();
        java.lang.Object obj20 = properties7.put((java.lang.Object) wildcardEnumeration18, (java.lang.Object) 10.0d);
        java.util.Set<java.lang.String> strSet21 = properties7.stringPropertyNames();
        java.util.Set<java.lang.String> strSet22 = properties7.stringPropertyNames();
        boolean boolean23 = properties7.isEmpty();
        boolean boolean24 = properties7.isEmpty();
        boolean boolean25 = properties0.containsKey((java.lang.Object) properties7);
        java.util.Properties properties26 = new java.util.Properties(properties0);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties27 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties27.setSerialJtaTransactions(false);
        boolean boolean30 = atomikosProperties27.isSerialJtaTransactions();
        java.lang.String str31 = atomikosProperties27.getService();
        boolean boolean32 = atomikosProperties27.isEnableLogging();
        java.util.Properties properties33 = atomikosProperties27.asProperties();
        long long34 = atomikosProperties27.getDefaultJtaTimeout();
        atomikosProperties27.setSerialJtaTransactions(false);
        boolean boolean37 = properties26.containsKey((java.lang.Object) atomikosProperties27);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties38 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties38.setSerialJtaTransactions(false);
        atomikosProperties38.setThreadedTwoPhaseCommit(true);
        atomikosProperties38.setSerialJtaTransactions(false);
        java.lang.String str45 = atomikosProperties38.getService();
        java.util.Properties properties46 = atomikosProperties38.asProperties();
        java.util.Properties properties47 = atomikosProperties38.asProperties();
        java.util.Properties properties48 = new java.util.Properties(properties47);
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet49 = properties48.entrySet();
        boolean boolean50 = properties48.isEmpty();
        properties48.clear();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties52 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties52.setSerialJtaTransactions(false);
        atomikosProperties52.setThreadedTwoPhaseCommit(true);
        atomikosProperties52.setMaxTimeout((long) '#');
        boolean boolean59 = atomikosProperties52.isEnableLogging();
        atomikosProperties52.setForceShutdownOnVmExit(true);
        java.lang.String str62 = atomikosProperties52.getService();
        atomikosProperties52.setForceShutdownOnVmExit(true);
        boolean boolean65 = properties26.remove((java.lang.Object) properties48, (java.lang.Object) atomikosProperties52);
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(objEnumeration3);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNotNull(objEnumeration6);
        org.junit.Assert.assertNull(obj9);
        org.junit.Assert.assertNotNull(strSet10);
        org.junit.Assert.assertNull(obj14);
        org.junit.Assert.assertNotNull(strSet15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(objCollection17);
        org.junit.Assert.assertNotNull(wildcardEnumeration18);
        org.junit.Assert.assertNull(obj20);
        org.junit.Assert.assertNotNull(strSet21);
        org.junit.Assert.assertNotNull(strSet22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNull(str31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertNotNull(properties33);
        org.junit.Assert.assertTrue("'" + long34 + "' != '" + 10000L + "'", long34 == 10000L);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNull(str45);
        org.junit.Assert.assertNotNull(properties46);
        org.junit.Assert.assertNotNull(properties47);
        org.junit.Assert.assertNotNull(objEntrySet49);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertNull(str62);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
    }

    @Test
    public void test7527() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7527");
        java.util.Properties properties0 = new java.util.Properties();
        boolean boolean2 = properties0.contains((java.lang.Object) 100.0d);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties3 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties3.setSerialJtaTransactions(false);
        atomikosProperties3.setThreadedTwoPhaseCommit(true);
        atomikosProperties3.setSerialJtaTransactions(false);
        java.lang.String str10 = atomikosProperties3.getService();
        boolean boolean11 = properties0.containsKey((java.lang.Object) atomikosProperties3);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties12 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties12.setSerialJtaTransactions(false);
        atomikosProperties12.setThreadedTwoPhaseCommit(true);
        atomikosProperties12.setMaxTimeout((long) '#');
        boolean boolean19 = atomikosProperties12.isEnableLogging();
        atomikosProperties12.setCheckpointInterval((long) 100);
        atomikosProperties12.setForceShutdownOnVmExit(false);
        boolean boolean24 = properties0.containsValue((java.lang.Object) atomikosProperties12);
        atomikosProperties12.setService("{=hi!}");
        atomikosProperties12.setDefaultJtaTimeout(0L);
        atomikosProperties12.setLogBaseName("{true=class org.springframework.boot.jta.atomikos.AtomikosProperties}");
        atomikosProperties12.setTransactionManagerUniqueName("{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=false, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.service={{}={}}, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.tm_unique_name=hi!, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
    }

    @Test
    public void test7528() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7528");
        java.util.Properties properties0 = new java.util.Properties();
        java.util.Properties properties1 = new java.util.Properties();
        java.lang.Object obj3 = properties1.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet4 = properties1.stringPropertyNames();
        boolean boolean5 = properties0.containsValue((java.lang.Object) properties1);
        java.util.Collection<java.lang.Object> objCollection6 = properties0.values();
        java.util.Enumeration<?> wildcardEnumeration7 = properties0.propertyNames();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet8 = properties0.entrySet();
        java.util.Properties properties9 = new java.util.Properties();
        java.lang.Object obj11 = properties9.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration12 = properties9.elements();
        boolean boolean13 = properties9.isEmpty();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet14 = properties9.entrySet();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties16 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties16.setSerialJtaTransactions(false);
        atomikosProperties16.setThreadedTwoPhaseCommit(true);
        atomikosProperties16.setMaxTimeout((long) '#');
        boolean boolean23 = atomikosProperties16.isForceShutdownOnVmExit();
        java.lang.Object obj24 = properties9.put((java.lang.Object) (short) 1, (java.lang.Object) atomikosProperties16);
        atomikosProperties16.setForceShutdownOnVmExit(true);
        java.util.Properties properties27 = atomikosProperties16.asProperties();
        boolean boolean28 = properties0.containsValue((java.lang.Object) atomikosProperties16);
        java.lang.String str29 = atomikosProperties16.getLogBaseName();
        atomikosProperties16.setMaxActives(50);
        atomikosProperties16.setTransactionManagerUniqueName("{tmlog=}");
        atomikosProperties16.setThreadedTwoPhaseCommit(false);
        atomikosProperties16.setCheckpointInterval((long) (short) 0);
        org.junit.Assert.assertNull(obj3);
        org.junit.Assert.assertNotNull(strSet4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(objCollection6);
        org.junit.Assert.assertNotNull(wildcardEnumeration7);
        org.junit.Assert.assertNotNull(objEntrySet8);
        org.junit.Assert.assertNull(obj11);
        org.junit.Assert.assertNotNull(objEnumeration12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(objEntrySet14);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNull(obj24);
        org.junit.Assert.assertNotNull(properties27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "tmlog" + "'", str29, "tmlog");
    }

    @Test
    public void test7529() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7529");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setSerialJtaTransactions(false);
        boolean boolean3 = atomikosProperties0.isSerialJtaTransactions();
        java.lang.String str4 = atomikosProperties0.getService();
        long long5 = atomikosProperties0.getMaxTimeout();
        atomikosProperties0.setCheckpointInterval((long) (short) 10);
        java.lang.String str8 = atomikosProperties0.getService();
        java.lang.String str9 = atomikosProperties0.getService();
        atomikosProperties0.setCheckpointInterval(10L);
        atomikosProperties0.setForceShutdownOnVmExit(false);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertTrue("'" + long5 + "' != '" + 300000L + "'", long5 == 300000L);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNull(str9);
    }

    @Test
    public void test7530() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7530");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration3 = properties0.elements();
        boolean boolean4 = properties0.isEmpty();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet5 = properties0.entrySet();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties7 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties7.setSerialJtaTransactions(false);
        atomikosProperties7.setThreadedTwoPhaseCommit(true);
        atomikosProperties7.setMaxTimeout((long) '#');
        boolean boolean14 = atomikosProperties7.isForceShutdownOnVmExit();
        java.lang.Object obj15 = properties0.put((java.lang.Object) (short) 1, (java.lang.Object) atomikosProperties7);
        long long16 = atomikosProperties7.getDefaultJtaTimeout();
        atomikosProperties7.setMaxActives((int) (short) 1);
        java.lang.String str19 = atomikosProperties7.getService();
        boolean boolean20 = atomikosProperties7.isThreadedTwoPhaseCommit();
        atomikosProperties7.setSerialJtaTransactions(false);
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(objEnumeration3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(objEntrySet5);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNull(obj15);
        org.junit.Assert.assertTrue("'" + long16 + "' != '" + 10000L + "'", long16 == 10000L);
        org.junit.Assert.assertNull(str19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
    }

    @Test
    public void test7531() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7531");
        java.util.Properties properties0 = new java.util.Properties();
        java.util.Properties properties1 = new java.util.Properties();
        java.lang.Object obj3 = properties1.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet4 = properties1.stringPropertyNames();
        boolean boolean5 = properties0.containsValue((java.lang.Object) properties1);
        java.util.Properties properties6 = new java.util.Properties();
        java.lang.Object obj8 = properties6.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration9 = properties6.elements();
        boolean boolean10 = properties6.isEmpty();
        java.util.Set<java.lang.Object> objSet11 = properties6.keySet();
        boolean boolean12 = properties6.isEmpty();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet13 = properties6.entrySet();
        java.util.Properties properties14 = new java.util.Properties();
        java.lang.Object obj16 = properties14.remove((java.lang.Object) 0.0d);
        boolean boolean17 = properties14.isEmpty();
        java.lang.Object obj20 = properties14.setProperty("", "hi!");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties21 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties21.setSerialJtaTransactions(false);
        boolean boolean24 = properties6.remove((java.lang.Object) properties14, (java.lang.Object) atomikosProperties21);
        boolean boolean25 = properties0.equals((java.lang.Object) atomikosProperties21);
        java.util.Properties properties26 = new java.util.Properties();
        java.lang.Object obj28 = properties26.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration29 = properties26.elements();
        boolean boolean30 = properties26.isEmpty();
        java.util.Set<java.lang.Object> objSet31 = properties26.keySet();
        boolean boolean32 = properties26.isEmpty();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet33 = properties26.entrySet();
        java.util.Properties properties34 = new java.util.Properties();
        java.lang.Object obj36 = properties34.remove((java.lang.Object) 0.0d);
        boolean boolean37 = properties34.isEmpty();
        java.lang.Object obj40 = properties34.setProperty("", "hi!");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties41 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties41.setSerialJtaTransactions(false);
        boolean boolean44 = properties26.remove((java.lang.Object) properties34, (java.lang.Object) atomikosProperties41);
        java.util.Properties properties45 = new java.util.Properties(properties34);
        java.lang.Object obj46 = properties34.clone();
        java.lang.Object obj47 = properties0.get(obj46);
        java.util.Enumeration<java.lang.Object> objEnumeration48 = properties0.keys();
        boolean boolean49 = properties0.isEmpty();
        java.util.Set<java.lang.Object> objSet50 = properties0.keySet();
        boolean boolean51 = properties0.isEmpty();
        org.junit.Assert.assertNull(obj3);
        org.junit.Assert.assertNotNull(strSet4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNull(obj8);
        org.junit.Assert.assertNotNull(objEnumeration9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(objSet11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(objEntrySet13);
        org.junit.Assert.assertNull(obj16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNull(obj20);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNull(obj28);
        org.junit.Assert.assertNotNull(objEnumeration29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNotNull(objSet31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertNotNull(objEntrySet33);
        org.junit.Assert.assertNull(obj36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertNull(obj40);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(obj46);
        org.junit.Assert.assertEquals(obj46.toString(), "{=hi!}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj46), "{=hi!}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj46), "{=hi!}");
        org.junit.Assert.assertNull(obj47);
        org.junit.Assert.assertNotNull(objEnumeration48);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertNotNull(objSet50);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
    }

    @Test
    public void test7532() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7532");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setSerialJtaTransactions(false);
        atomikosProperties0.setThreadedTwoPhaseCommit(true);
        atomikosProperties0.setMaxTimeout((long) '#');
        boolean boolean7 = atomikosProperties0.isEnableLogging();
        atomikosProperties0.setForceShutdownOnVmExit(true);
        atomikosProperties0.setForceShutdownOnVmExit(true);
        atomikosProperties0.setLogBaseDir("{=hi!}");
        java.util.Properties properties14 = atomikosProperties0.asProperties();
        java.util.Set<java.lang.String> strSet15 = properties14.stringPropertyNames();
        properties14.clear();
        java.util.Set<java.lang.Object> objSet17 = properties14.keySet();
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(properties14);
        org.junit.Assert.assertNotNull(strSet15);
        org.junit.Assert.assertNotNull(objSet17);
    }

    @Test
    public void test7533() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7533");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration3 = properties0.elements();
        int int4 = properties0.size();
        java.util.Properties properties5 = new java.util.Properties();
        java.lang.Object obj7 = properties5.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration8 = properties5.elements();
        boolean boolean9 = properties5.isEmpty();
        java.util.Set<java.lang.Object> objSet10 = properties5.keySet();
        boolean boolean11 = properties0.containsKey((java.lang.Object) objSet10);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties12 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties12.setSerialJtaTransactions(false);
        atomikosProperties12.setThreadedTwoPhaseCommit(true);
        atomikosProperties12.setEnableLogging(false);
        boolean boolean19 = atomikosProperties12.isSerialJtaTransactions();
        int int20 = atomikosProperties12.getMaxActives();
        java.util.Properties properties21 = new java.util.Properties();
        java.lang.Object obj23 = properties21.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet24 = properties21.stringPropertyNames();
        java.util.Properties properties25 = new java.util.Properties();
        java.util.Properties properties26 = new java.util.Properties();
        java.lang.Object obj28 = properties26.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet29 = properties26.stringPropertyNames();
        boolean boolean30 = properties25.containsValue((java.lang.Object) properties26);
        java.util.Collection<java.lang.Object> objCollection31 = properties25.values();
        java.util.Enumeration<?> wildcardEnumeration32 = properties25.propertyNames();
        java.lang.Object obj34 = properties21.put((java.lang.Object) wildcardEnumeration32, (java.lang.Object) 10.0d);
        java.lang.String str36 = properties21.getProperty("{=hi!}");
        java.lang.Object obj37 = properties0.put((java.lang.Object) atomikosProperties12, (java.lang.Object) "{=hi!}");
        boolean boolean38 = atomikosProperties12.isThreadedTwoPhaseCommit();
        boolean boolean39 = atomikosProperties12.isSerialJtaTransactions();
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(objEnumeration3);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNull(obj7);
        org.junit.Assert.assertNotNull(objEnumeration8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertNotNull(objSet10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 50 + "'", int20 == 50);
        org.junit.Assert.assertNull(obj23);
        org.junit.Assert.assertNotNull(strSet24);
        org.junit.Assert.assertNull(obj28);
        org.junit.Assert.assertNotNull(strSet29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(objCollection31);
        org.junit.Assert.assertNotNull(wildcardEnumeration32);
        org.junit.Assert.assertNull(obj34);
        org.junit.Assert.assertNull(str36);
        org.junit.Assert.assertNull(obj37);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
    }

    @Test
    public void test7534() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7534");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration3 = properties0.elements();
        boolean boolean4 = properties0.isEmpty();
        java.lang.Object obj7 = properties0.setProperty("tmlog", "");
        java.io.Writer writer8 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties0.store(writer8, "{}");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(objEnumeration3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNull(obj7);
    }

    @Test
    public void test7535() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7535");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        java.util.Properties properties3 = new java.util.Properties();
        java.util.Collection<java.lang.Object> objCollection4 = properties3.values();
        java.util.Enumeration<java.lang.Object> objEnumeration5 = properties3.keys();
        java.util.Properties properties6 = new java.util.Properties();
        java.lang.Object obj8 = properties6.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration9 = properties6.elements();
        boolean boolean10 = properties6.isEmpty();
        java.util.Set<java.lang.Object> objSet11 = properties6.keySet();
        java.util.Enumeration<java.lang.Object> objEnumeration12 = properties6.keys();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet13 = properties6.entrySet();
        java.lang.Object obj14 = properties0.put((java.lang.Object) properties3, (java.lang.Object) properties6);
        java.lang.String str16 = properties3.getProperty("{=hi!}");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties17 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties17.setSerialJtaTransactions(false);
        atomikosProperties17.setThreadedTwoPhaseCommit(true);
        atomikosProperties17.setThreadedTwoPhaseCommit(true);
        long long24 = atomikosProperties17.getMaxTimeout();
        boolean boolean25 = properties3.containsValue((java.lang.Object) atomikosProperties17);
        java.util.Enumeration<java.lang.Object> objEnumeration26 = properties3.elements();
        java.util.Properties properties27 = new java.util.Properties();
        java.lang.Object obj29 = properties27.remove((java.lang.Object) 0.0d);
        java.util.Properties properties30 = new java.util.Properties();
        java.util.Collection<java.lang.Object> objCollection31 = properties30.values();
        java.util.Enumeration<java.lang.Object> objEnumeration32 = properties30.keys();
        java.util.Properties properties33 = new java.util.Properties();
        java.lang.Object obj35 = properties33.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration36 = properties33.elements();
        boolean boolean37 = properties33.isEmpty();
        java.util.Set<java.lang.Object> objSet38 = properties33.keySet();
        java.util.Enumeration<java.lang.Object> objEnumeration39 = properties33.keys();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet40 = properties33.entrySet();
        java.lang.Object obj41 = properties27.put((java.lang.Object) properties30, (java.lang.Object) properties33);
        java.lang.Object obj42 = properties30.clone();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties43 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties43.setSerialJtaTransactions(false);
        atomikosProperties43.setThreadedTwoPhaseCommit(true);
        atomikosProperties43.setMaxTimeout((long) '#');
        boolean boolean50 = atomikosProperties43.isEnableLogging();
        atomikosProperties43.setCheckpointInterval((long) 100);
        atomikosProperties43.setSerialJtaTransactions(true);
        boolean boolean55 = properties30.equals((java.lang.Object) atomikosProperties43);
        java.util.Properties properties56 = atomikosProperties43.asProperties();
        properties3.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties56);
        java.util.Collection<java.lang.Object> objCollection58 = properties56.values();
        int int59 = properties56.size();
        properties56.clear();
        java.util.Properties properties61 = new java.util.Properties(properties56);
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(objCollection4);
        org.junit.Assert.assertNotNull(objEnumeration5);
        org.junit.Assert.assertNull(obj8);
        org.junit.Assert.assertNotNull(objEnumeration9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(objSet11);
        org.junit.Assert.assertNotNull(objEnumeration12);
        org.junit.Assert.assertNotNull(objEntrySet13);
        org.junit.Assert.assertNull(obj14);
        org.junit.Assert.assertNull(str16);
        org.junit.Assert.assertTrue("'" + long24 + "' != '" + 300000L + "'", long24 == 300000L);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(objEnumeration26);
        org.junit.Assert.assertNull(obj29);
        org.junit.Assert.assertNotNull(objCollection31);
        org.junit.Assert.assertNotNull(objEnumeration32);
        org.junit.Assert.assertNull(obj35);
        org.junit.Assert.assertNotNull(objEnumeration36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertNotNull(objSet38);
        org.junit.Assert.assertNotNull(objEnumeration39);
        org.junit.Assert.assertNotNull(objEntrySet40);
        org.junit.Assert.assertNull(obj41);
        org.junit.Assert.assertNotNull(obj42);
        org.junit.Assert.assertEquals(obj42.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj42), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj42), "{}");
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertNotNull(properties56);
        org.junit.Assert.assertNotNull(objCollection58);
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + 9 + "'", int59 == 9);
    }

    @Test
    public void test7536() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7536");
        java.util.Properties properties0 = new java.util.Properties();
        boolean boolean2 = properties0.contains((java.lang.Object) 100.0d);
        java.lang.Object obj3 = null;
        boolean boolean4 = properties0.equals(obj3);
        int int5 = properties0.size();
        properties0.clear();
        java.util.Properties properties7 = new java.util.Properties();
        java.lang.Object obj9 = properties7.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration10 = properties7.elements();
        boolean boolean11 = properties7.isEmpty();
        java.util.Set<java.lang.Object> objSet12 = properties7.keySet();
        boolean boolean13 = properties7.isEmpty();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet14 = properties7.entrySet();
        java.util.Properties properties15 = new java.util.Properties();
        java.lang.Object obj17 = properties15.remove((java.lang.Object) 0.0d);
        boolean boolean18 = properties15.isEmpty();
        java.lang.Object obj21 = properties15.setProperty("", "hi!");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties22 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties22.setSerialJtaTransactions(false);
        boolean boolean25 = properties7.remove((java.lang.Object) properties15, (java.lang.Object) atomikosProperties22);
        java.util.Properties properties26 = new java.util.Properties(properties15);
        int int27 = properties26.size();
        java.util.Enumeration<java.lang.Object> objEnumeration28 = properties26.elements();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties29 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties29.setSerialJtaTransactions(false);
        boolean boolean32 = atomikosProperties29.isSerialJtaTransactions();
        java.lang.String str33 = atomikosProperties29.getService();
        atomikosProperties29.setEnableLogging(false);
        java.util.Properties properties36 = atomikosProperties29.asProperties();
        atomikosProperties29.setCheckpointInterval((long) 1);
        boolean boolean39 = properties26.containsValue((java.lang.Object) atomikosProperties29);
        java.lang.Object obj40 = properties26.clone();
        properties0.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties26);
        java.util.Enumeration<java.lang.Object> objEnumeration42 = properties26.keys();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertNull(obj9);
        org.junit.Assert.assertNotNull(objEnumeration10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNotNull(objSet12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(objEntrySet14);
        org.junit.Assert.assertNull(obj17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNull(obj21);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 0 + "'", int27 == 0);
        org.junit.Assert.assertNotNull(objEnumeration28);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNull(str33);
        org.junit.Assert.assertNotNull(properties36);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(obj40);
        org.junit.Assert.assertEquals(obj40.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj40), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj40), "{}");
        org.junit.Assert.assertNotNull(objEnumeration42);
    }

    @Test
    public void test7537() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7537");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        java.util.Collection<java.lang.Object> objCollection3 = properties0.values();
        java.util.Set<java.lang.Object> objSet4 = properties0.keySet();
        java.io.OutputStream outputStream5 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties0.save(outputStream5, "{true={com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=100, com.atomikos.icatch.serial_jta_transactions=false, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=35, com.atomikos.icatch.threaded_2pc=true, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}}");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(objCollection3);
        org.junit.Assert.assertNotNull(objSet4);
    }

    @Test
    public void test7538() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7538");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setSerialJtaTransactions(false);
        boolean boolean3 = atomikosProperties0.isSerialJtaTransactions();
        atomikosProperties0.setTransactionManagerUniqueName("hi!");
        atomikosProperties0.setForceShutdownOnVmExit(false);
        boolean boolean8 = atomikosProperties0.isThreadedTwoPhaseCommit();
        atomikosProperties0.setMaxTimeout((-1L));
        boolean boolean11 = atomikosProperties0.isEnableLogging();
        atomikosProperties0.setTransactionManagerUniqueName("");
        boolean boolean14 = atomikosProperties0.isEnableLogging();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
    }

    @Test
    public void test7539() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7539");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration3 = properties0.elements();
        int int4 = properties0.size();
        java.util.Properties properties5 = new java.util.Properties();
        java.lang.Object obj7 = properties5.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration8 = properties5.elements();
        boolean boolean9 = properties5.isEmpty();
        java.util.Set<java.lang.Object> objSet10 = properties5.keySet();
        boolean boolean11 = properties0.containsKey((java.lang.Object) objSet10);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties12 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties12.setSerialJtaTransactions(false);
        atomikosProperties12.setThreadedTwoPhaseCommit(true);
        atomikosProperties12.setEnableLogging(false);
        boolean boolean19 = atomikosProperties12.isSerialJtaTransactions();
        int int20 = atomikosProperties12.getMaxActives();
        java.util.Properties properties21 = new java.util.Properties();
        java.lang.Object obj23 = properties21.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet24 = properties21.stringPropertyNames();
        java.util.Properties properties25 = new java.util.Properties();
        java.util.Properties properties26 = new java.util.Properties();
        java.lang.Object obj28 = properties26.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet29 = properties26.stringPropertyNames();
        boolean boolean30 = properties25.containsValue((java.lang.Object) properties26);
        java.util.Collection<java.lang.Object> objCollection31 = properties25.values();
        java.util.Enumeration<?> wildcardEnumeration32 = properties25.propertyNames();
        java.lang.Object obj34 = properties21.put((java.lang.Object) wildcardEnumeration32, (java.lang.Object) 10.0d);
        java.lang.String str36 = properties21.getProperty("{=hi!}");
        java.lang.Object obj37 = properties0.put((java.lang.Object) atomikosProperties12, (java.lang.Object) "{=hi!}");
        atomikosProperties12.setForceShutdownOnVmExit(false);
        atomikosProperties12.setService("{{}={}}");
        atomikosProperties12.setEnableLogging(true);
        java.lang.String str44 = atomikosProperties12.getLogBaseDir();
        boolean boolean45 = atomikosProperties12.isForceShutdownOnVmExit();
        atomikosProperties12.setTransactionManagerUniqueName("{[com.atomikos.icatch.enable_logging, com.atomikos.icatch.force_shutdown_on_vm_exit, com.atomikos.icatch.checkpoint_interval, com.atomikos.icatch.serial_jta_transactions, com.atomikos.icatch.default_jta_timeout, com.atomikos.icatch.max_timeout, com.atomikos.icatch.threaded_2pc, com.atomikos.icatch.max_actives, com.atomikos.icatch.log_base_name]=false}");
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(objEnumeration3);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNull(obj7);
        org.junit.Assert.assertNotNull(objEnumeration8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertNotNull(objSet10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 50 + "'", int20 == 50);
        org.junit.Assert.assertNull(obj23);
        org.junit.Assert.assertNotNull(strSet24);
        org.junit.Assert.assertNull(obj28);
        org.junit.Assert.assertNotNull(strSet29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(objCollection31);
        org.junit.Assert.assertNotNull(wildcardEnumeration32);
        org.junit.Assert.assertNull(obj34);
        org.junit.Assert.assertNull(str36);
        org.junit.Assert.assertNull(obj37);
        org.junit.Assert.assertNull(str44);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
    }

    @Test
    public void test7540() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7540");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setSerialJtaTransactions(false);
        boolean boolean3 = atomikosProperties0.isSerialJtaTransactions();
        atomikosProperties0.setTransactionManagerUniqueName("tmlog");
        java.util.Properties properties6 = atomikosProperties0.asProperties();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties7 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties7.setSerialJtaTransactions(false);
        boolean boolean10 = atomikosProperties7.isSerialJtaTransactions();
        atomikosProperties7.setTransactionManagerUniqueName("hi!");
        boolean boolean13 = atomikosProperties7.isEnableLogging();
        java.lang.String str14 = atomikosProperties7.getTransactionManagerUniqueName();
        atomikosProperties7.setCheckpointInterval(1L);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties17 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties17.setSerialJtaTransactions(false);
        atomikosProperties17.setThreadedTwoPhaseCommit(true);
        atomikosProperties17.setThreadedTwoPhaseCommit(true);
        java.util.Properties properties24 = atomikosProperties17.asProperties();
        int int25 = atomikosProperties17.getMaxActives();
        atomikosProperties17.setService("hi!");
        long long28 = atomikosProperties17.getMaxTimeout();
        atomikosProperties17.setTransactionManagerUniqueName("hi!");
        java.util.Properties properties31 = atomikosProperties17.asProperties();
        java.lang.Object obj32 = properties6.getOrDefault((java.lang.Object) atomikosProperties7, (java.lang.Object) properties31);
        boolean boolean33 = atomikosProperties7.isEnableLogging();
        atomikosProperties7.setMaxActives((int) 'a');
        atomikosProperties7.setService("{true=true}");
        java.util.Properties properties38 = atomikosProperties7.asProperties();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(properties6);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "hi!" + "'", str14, "hi!");
        org.junit.Assert.assertNotNull(properties24);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 50 + "'", int25 == 50);
        org.junit.Assert.assertTrue("'" + long28 + "' != '" + 300000L + "'", long28 == 300000L);
        org.junit.Assert.assertNotNull(properties31);
        org.junit.Assert.assertNotNull(obj32);
// flaky:         org.junit.Assert.assertEquals(obj32.toString(), "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=false, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.service=hi!, com.atomikos.icatch.threaded_2pc=true, com.atomikos.icatch.tm_unique_name=hi!, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
// flaky:         org.junit.Assert.assertEquals(java.lang.String.valueOf(obj32), "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=false, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.service=hi!, com.atomikos.icatch.threaded_2pc=true, com.atomikos.icatch.tm_unique_name=hi!, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
// flaky:         org.junit.Assert.assertEquals(java.util.Objects.toString(obj32), "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=false, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.service=hi!, com.atomikos.icatch.threaded_2pc=true, com.atomikos.icatch.tm_unique_name=hi!, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNotNull(properties38);
    }

    @Test
    public void test7541() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7541");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setSerialJtaTransactions(false);
        boolean boolean3 = atomikosProperties0.isSerialJtaTransactions();
        atomikosProperties0.setTransactionManagerUniqueName("hi!");
        java.lang.String str6 = atomikosProperties0.getLogBaseName();
        java.lang.String str7 = atomikosProperties0.getLogBaseName();
        boolean boolean8 = atomikosProperties0.isForceShutdownOnVmExit();
        long long9 = atomikosProperties0.getMaxTimeout();
        java.lang.String str10 = atomikosProperties0.getTransactionManagerUniqueName();
        atomikosProperties0.setTransactionManagerUniqueName("hi!");
        atomikosProperties0.setService("tmlog");
        atomikosProperties0.setThreadedTwoPhaseCommit(false);
        java.util.Properties properties17 = atomikosProperties0.asProperties();
        atomikosProperties0.setLogBaseName("{}");
        long long20 = atomikosProperties0.getCheckpointInterval();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "tmlog" + "'", str6, "tmlog");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "tmlog" + "'", str7, "tmlog");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + long9 + "' != '" + 300000L + "'", long9 == 300000L);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "hi!" + "'", str10, "hi!");
        org.junit.Assert.assertNotNull(properties17);
        org.junit.Assert.assertTrue("'" + long20 + "' != '" + 500L + "'", long20 == 500L);
    }

    @Test
    public void test7542() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7542");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setSerialJtaTransactions(false);
        boolean boolean3 = atomikosProperties0.isSerialJtaTransactions();
        java.lang.String str4 = atomikosProperties0.getService();
        boolean boolean5 = atomikosProperties0.isEnableLogging();
        java.lang.String str6 = atomikosProperties0.getTransactionManagerUniqueName();
        boolean boolean7 = atomikosProperties0.isSerialJtaTransactions();
        atomikosProperties0.setService("{}");
        atomikosProperties0.setMaxTimeout((long) (byte) 100);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
    }

    @Test
    public void test7543() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7543");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration3 = properties0.elements();
        boolean boolean4 = properties0.isEmpty();
        java.util.Set<java.lang.Object> objSet5 = properties0.keySet();
        boolean boolean6 = properties0.isEmpty();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet7 = properties0.entrySet();
        java.util.Properties properties8 = new java.util.Properties();
        java.lang.Object obj10 = properties8.remove((java.lang.Object) 0.0d);
        boolean boolean11 = properties8.isEmpty();
        java.lang.Object obj14 = properties8.setProperty("", "hi!");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties15 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties15.setSerialJtaTransactions(false);
        boolean boolean18 = properties0.remove((java.lang.Object) properties8, (java.lang.Object) atomikosProperties15);
        java.util.Properties properties19 = new java.util.Properties();
        java.lang.Object obj21 = properties19.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration22 = properties19.elements();
        int int23 = properties19.size();
        java.util.Properties properties24 = new java.util.Properties(properties19);
        boolean boolean25 = properties24.isEmpty();
        java.util.Properties properties26 = new java.util.Properties();
        java.lang.Object obj28 = properties26.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration29 = properties26.elements();
        int int30 = properties26.size();
        java.util.Properties properties31 = new java.util.Properties();
        java.lang.Object obj33 = properties31.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration34 = properties31.elements();
        boolean boolean35 = properties31.isEmpty();
        java.util.Set<java.lang.Object> objSet36 = properties31.keySet();
        boolean boolean37 = properties26.containsKey((java.lang.Object) objSet36);
        java.util.Enumeration<java.lang.Object> objEnumeration38 = properties26.keys();
        java.util.Properties properties39 = new java.util.Properties();
        java.lang.Object obj41 = properties39.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration42 = properties39.elements();
        boolean boolean43 = properties39.isEmpty();
        java.util.Set<java.lang.Object> objSet44 = properties39.keySet();
        java.util.Enumeration<java.lang.Object> objEnumeration45 = properties39.keys();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet46 = properties39.entrySet();
        boolean boolean48 = properties26.remove((java.lang.Object) properties39, (java.lang.Object) 1.0f);
        boolean boolean49 = properties24.contains((java.lang.Object) properties39);
        properties0.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties39);
        java.util.Properties properties51 = new java.util.Properties();
        java.lang.Object obj53 = properties51.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration54 = properties51.elements();
        int int55 = properties51.size();
        java.util.Properties properties56 = new java.util.Properties(properties51);
        boolean boolean57 = properties56.isEmpty();
        java.util.Properties properties58 = new java.util.Properties();
        java.lang.Object obj60 = properties58.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration61 = properties58.elements();
        int int62 = properties58.size();
        java.util.Properties properties63 = new java.util.Properties();
        java.lang.Object obj65 = properties63.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration66 = properties63.elements();
        boolean boolean67 = properties63.isEmpty();
        java.util.Set<java.lang.Object> objSet68 = properties63.keySet();
        boolean boolean69 = properties58.containsKey((java.lang.Object) objSet68);
        java.util.Enumeration<java.lang.Object> objEnumeration70 = properties58.keys();
        java.util.Properties properties71 = new java.util.Properties();
        java.lang.Object obj73 = properties71.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration74 = properties71.elements();
        boolean boolean75 = properties71.isEmpty();
        java.util.Set<java.lang.Object> objSet76 = properties71.keySet();
        java.util.Enumeration<java.lang.Object> objEnumeration77 = properties71.keys();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet78 = properties71.entrySet();
        boolean boolean80 = properties58.remove((java.lang.Object) properties71, (java.lang.Object) 1.0f);
        boolean boolean81 = properties56.contains((java.lang.Object) properties71);
        java.util.Properties properties82 = new java.util.Properties(properties71);
        java.util.Properties properties83 = new java.util.Properties();
        java.lang.Object obj85 = properties83.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration86 = properties83.elements();
        boolean boolean87 = properties83.isEmpty();
        java.util.Set<java.lang.Object> objSet88 = properties83.keySet();
        java.util.Enumeration<java.lang.Object> objEnumeration89 = properties83.keys();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet90 = properties83.entrySet();
        java.util.Properties properties91 = new java.util.Properties(properties83);
        java.util.Set<java.lang.Object> objSet92 = properties83.keySet();
        java.lang.Object obj93 = properties0.putIfAbsent((java.lang.Object) properties71, (java.lang.Object) properties83);
        java.util.Set<java.lang.Object> objSet94 = properties83.keySet();
        java.util.Enumeration<java.lang.Object> objEnumeration95 = properties83.keys();
        java.util.Collection<java.lang.Object> objCollection96 = properties83.values();
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(objEnumeration3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(objSet5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(objEntrySet7);
        org.junit.Assert.assertNull(obj10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNull(obj14);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNull(obj21);
        org.junit.Assert.assertNotNull(objEnumeration22);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 0 + "'", int23 == 0);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNull(obj28);
        org.junit.Assert.assertNotNull(objEnumeration29);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 0 + "'", int30 == 0);
        org.junit.Assert.assertNull(obj33);
        org.junit.Assert.assertNotNull(objEnumeration34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertNotNull(objSet36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(objEnumeration38);
        org.junit.Assert.assertNull(obj41);
        org.junit.Assert.assertNotNull(objEnumeration42);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNotNull(objSet44);
        org.junit.Assert.assertNotNull(objEnumeration45);
        org.junit.Assert.assertNotNull(objEntrySet46);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNull(obj53);
        org.junit.Assert.assertNotNull(objEnumeration54);
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + 0 + "'", int55 == 0);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertNull(obj60);
        org.junit.Assert.assertNotNull(objEnumeration61);
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + 0 + "'", int62 == 0);
        org.junit.Assert.assertNull(obj65);
        org.junit.Assert.assertNotNull(objEnumeration66);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + true + "'", boolean67 == true);
        org.junit.Assert.assertNotNull(objSet68);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertNotNull(objEnumeration70);
        org.junit.Assert.assertNull(obj73);
        org.junit.Assert.assertNotNull(objEnumeration74);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + true + "'", boolean75 == true);
        org.junit.Assert.assertNotNull(objSet76);
        org.junit.Assert.assertNotNull(objEnumeration77);
        org.junit.Assert.assertNotNull(objEntrySet78);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", boolean80 == false);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + false + "'", boolean81 == false);
        org.junit.Assert.assertNull(obj85);
        org.junit.Assert.assertNotNull(objEnumeration86);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + true + "'", boolean87 == true);
        org.junit.Assert.assertNotNull(objSet88);
        org.junit.Assert.assertNotNull(objEnumeration89);
        org.junit.Assert.assertNotNull(objEntrySet90);
        org.junit.Assert.assertNotNull(objSet92);
        org.junit.Assert.assertNull(obj93);
        org.junit.Assert.assertNotNull(objSet94);
        org.junit.Assert.assertNotNull(objEnumeration95);
        org.junit.Assert.assertNotNull(objCollection96);
    }

    @Test
    public void test7544() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7544");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration3 = properties0.elements();
        boolean boolean4 = properties0.isEmpty();
        java.util.Enumeration<java.lang.Object> objEnumeration5 = properties0.elements();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet6 = properties0.entrySet();
        java.util.Set<java.lang.String> strSet7 = properties0.stringPropertyNames();
        java.util.Properties properties8 = new java.util.Properties();
        java.lang.Object obj10 = properties8.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration11 = properties8.elements();
        boolean boolean12 = properties8.isEmpty();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet13 = properties8.entrySet();
        boolean boolean14 = properties0.contains((java.lang.Object) properties8);
        java.util.Properties properties15 = new java.util.Properties();
        java.lang.Object obj17 = properties15.remove((java.lang.Object) 0.0d);
        java.util.Properties properties18 = new java.util.Properties();
        java.util.Collection<java.lang.Object> objCollection19 = properties18.values();
        java.util.Enumeration<java.lang.Object> objEnumeration20 = properties18.keys();
        java.util.Properties properties21 = new java.util.Properties();
        java.lang.Object obj23 = properties21.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration24 = properties21.elements();
        boolean boolean25 = properties21.isEmpty();
        java.util.Set<java.lang.Object> objSet26 = properties21.keySet();
        java.util.Enumeration<java.lang.Object> objEnumeration27 = properties21.keys();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet28 = properties21.entrySet();
        java.lang.Object obj29 = properties15.put((java.lang.Object) properties18, (java.lang.Object) properties21);
        java.lang.Object obj30 = properties18.clone();
        boolean boolean31 = properties0.containsKey((java.lang.Object) properties18);
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet32 = properties18.entrySet();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties33 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties33.setSerialJtaTransactions(false);
        atomikosProperties33.setThreadedTwoPhaseCommit(true);
        atomikosProperties33.setThreadedTwoPhaseCommit(true);
        atomikosProperties33.setLogBaseName("{{}=tmlog}");
        boolean boolean42 = properties18.contains((java.lang.Object) atomikosProperties33);
        java.util.Set<java.lang.String> strSet43 = properties18.stringPropertyNames();
        java.util.Properties properties44 = new java.util.Properties(properties18);
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet45 = properties44.entrySet();
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(objEnumeration3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(objEnumeration5);
        org.junit.Assert.assertNotNull(objEntrySet6);
        org.junit.Assert.assertNotNull(strSet7);
        org.junit.Assert.assertNull(obj10);
        org.junit.Assert.assertNotNull(objEnumeration11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(objEntrySet13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNull(obj17);
        org.junit.Assert.assertNotNull(objCollection19);
        org.junit.Assert.assertNotNull(objEnumeration20);
        org.junit.Assert.assertNull(obj23);
        org.junit.Assert.assertNotNull(objEnumeration24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(objSet26);
        org.junit.Assert.assertNotNull(objEnumeration27);
        org.junit.Assert.assertNotNull(objEntrySet28);
        org.junit.Assert.assertNull(obj29);
        org.junit.Assert.assertNotNull(obj30);
        org.junit.Assert.assertEquals(obj30.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj30), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj30), "{}");
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(objEntrySet32);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(strSet43);
        org.junit.Assert.assertNotNull(objEntrySet45);
    }

    @Test
    public void test7545() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7545");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<?> wildcardEnumeration3 = properties0.propertyNames();
        java.lang.Object obj6 = properties0.setProperty("{}", "hi!");
        properties0.clear();
        java.util.Set<java.lang.String> strSet8 = properties0.stringPropertyNames();
        java.util.Collection<java.lang.Object> objCollection9 = properties0.values();
        java.util.Set<java.lang.Object> objSet10 = properties0.keySet();
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(wildcardEnumeration3);
        org.junit.Assert.assertNull(obj6);
        org.junit.Assert.assertNotNull(strSet8);
        org.junit.Assert.assertNotNull(objCollection9);
        org.junit.Assert.assertNotNull(objSet10);
    }

    @Test
    public void test7546() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7546");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration3 = properties0.elements();
        boolean boolean4 = properties0.isEmpty();
        java.util.Set<java.lang.Object> objSet5 = properties0.keySet();
        boolean boolean7 = properties0.containsKey((java.lang.Object) (-1.0f));
        java.util.Collection<java.lang.Object> objCollection8 = properties0.values();
        java.lang.Object obj9 = properties0.clone();
        java.util.Properties properties10 = new java.util.Properties();
        java.lang.Object obj12 = properties10.remove((java.lang.Object) 0.0d);
        boolean boolean13 = properties10.isEmpty();
        java.lang.Object obj16 = properties10.setProperty("", "hi!");
        java.util.Properties properties17 = new java.util.Properties();
        java.lang.Object obj19 = properties17.remove((java.lang.Object) 0.0d);
        java.util.Properties properties20 = new java.util.Properties();
        java.util.Collection<java.lang.Object> objCollection21 = properties20.values();
        java.util.Enumeration<java.lang.Object> objEnumeration22 = properties20.keys();
        java.util.Properties properties23 = new java.util.Properties();
        java.lang.Object obj25 = properties23.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration26 = properties23.elements();
        boolean boolean27 = properties23.isEmpty();
        java.util.Set<java.lang.Object> objSet28 = properties23.keySet();
        java.util.Enumeration<java.lang.Object> objEnumeration29 = properties23.keys();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet30 = properties23.entrySet();
        java.lang.Object obj31 = properties17.put((java.lang.Object) properties20, (java.lang.Object) properties23);
        java.lang.String str33 = properties20.getProperty("{=hi!}");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties34 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties34.setSerialJtaTransactions(false);
        atomikosProperties34.setThreadedTwoPhaseCommit(true);
        atomikosProperties34.setThreadedTwoPhaseCommit(true);
        long long41 = atomikosProperties34.getMaxTimeout();
        boolean boolean42 = properties20.containsValue((java.lang.Object) atomikosProperties34);
        java.util.Enumeration<java.lang.Object> objEnumeration43 = properties20.elements();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties44 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties44.setSerialJtaTransactions(false);
        boolean boolean47 = atomikosProperties44.isThreadedTwoPhaseCommit();
        atomikosProperties44.setThreadedTwoPhaseCommit(false);
        java.lang.Object obj50 = properties10.putIfAbsent((java.lang.Object) properties20, (java.lang.Object) atomikosProperties44);
        boolean boolean51 = properties0.contains((java.lang.Object) properties20);
        properties0.clear();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties53 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties53.setSerialJtaTransactions(false);
        atomikosProperties53.setThreadedTwoPhaseCommit(true);
        atomikosProperties53.setThreadedTwoPhaseCommit(true);
        java.util.Properties properties60 = atomikosProperties53.asProperties();
        java.util.Set<java.lang.String> strSet61 = properties60.stringPropertyNames();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties62 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties62.setSerialJtaTransactions(false);
        atomikosProperties62.setThreadedTwoPhaseCommit(true);
        atomikosProperties62.setMaxTimeout((long) '#');
        boolean boolean69 = atomikosProperties62.isEnableLogging();
        int int70 = atomikosProperties62.getMaxActives();
        java.util.Properties properties71 = new java.util.Properties();
        java.lang.Object obj73 = properties71.remove((java.lang.Object) 0.0d);
        boolean boolean74 = properties71.isEmpty();
        java.lang.Object obj77 = properties71.setProperty("", "hi!");
        java.util.Set<java.lang.String> strSet78 = properties71.stringPropertyNames();
        java.lang.Object obj79 = properties60.putIfAbsent((java.lang.Object) atomikosProperties62, (java.lang.Object) strSet78);
        boolean boolean81 = properties60.containsKey((java.lang.Object) 35);
        java.util.Set<java.lang.String> strSet82 = properties60.stringPropertyNames();
        properties0.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties60);
        java.lang.String str84 = properties60.toString();
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(objEnumeration3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(objSet5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(objCollection8);
        org.junit.Assert.assertNotNull(obj9);
        org.junit.Assert.assertEquals(obj9.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj9), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj9), "{}");
        org.junit.Assert.assertNull(obj12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNull(obj16);
        org.junit.Assert.assertNull(obj19);
        org.junit.Assert.assertNotNull(objCollection21);
        org.junit.Assert.assertNotNull(objEnumeration22);
        org.junit.Assert.assertNull(obj25);
        org.junit.Assert.assertNotNull(objEnumeration26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNotNull(objSet28);
        org.junit.Assert.assertNotNull(objEnumeration29);
        org.junit.Assert.assertNotNull(objEntrySet30);
        org.junit.Assert.assertNull(obj31);
        org.junit.Assert.assertNull(str33);
        org.junit.Assert.assertTrue("'" + long41 + "' != '" + 300000L + "'", long41 == 300000L);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(objEnumeration43);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNull(obj50);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertNotNull(properties60);
        org.junit.Assert.assertNotNull(strSet61);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + true + "'", boolean69 == true);
        org.junit.Assert.assertTrue("'" + int70 + "' != '" + 50 + "'", int70 == 50);
        org.junit.Assert.assertNull(obj73);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + true + "'", boolean74 == true);
        org.junit.Assert.assertNull(obj77);
        org.junit.Assert.assertNotNull(strSet78);
        org.junit.Assert.assertNull(obj79);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + false + "'", boolean81 == false);
        org.junit.Assert.assertNotNull(strSet82);
    }

    @Test
    public void test7547() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7547");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setSerialJtaTransactions(false);
        boolean boolean3 = atomikosProperties0.isSerialJtaTransactions();
        java.lang.String str4 = atomikosProperties0.getService();
        boolean boolean5 = atomikosProperties0.isEnableLogging();
        java.util.Properties properties6 = atomikosProperties0.asProperties();
        java.util.Set<java.lang.String> strSet7 = properties6.stringPropertyNames();
        boolean boolean8 = properties6.isEmpty();
        boolean boolean9 = properties6.isEmpty();
        java.util.Properties properties10 = new java.util.Properties();
        java.util.Properties properties11 = new java.util.Properties();
        java.lang.Object obj13 = properties11.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet14 = properties11.stringPropertyNames();
        boolean boolean15 = properties10.containsValue((java.lang.Object) properties11);
        java.util.Collection<java.lang.Object> objCollection16 = properties10.values();
        java.util.Properties properties18 = new java.util.Properties();
        java.lang.Object obj20 = properties18.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration21 = properties18.elements();
        boolean boolean22 = properties18.isEmpty();
        java.util.Set<java.lang.Object> objSet23 = properties18.keySet();
        java.lang.Object obj24 = properties10.putIfAbsent((java.lang.Object) "hi!", (java.lang.Object) objSet23);
        java.util.Set<java.lang.Object> objSet25 = properties10.keySet();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties26 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties26.setSerialJtaTransactions(false);
        atomikosProperties26.setThreadedTwoPhaseCommit(true);
        atomikosProperties26.setMaxTimeout((long) '#');
        boolean boolean33 = atomikosProperties26.isEnableLogging();
        atomikosProperties26.setCheckpointInterval((long) (byte) -1);
        atomikosProperties26.setEnableLogging(true);
        java.util.Properties properties38 = new java.util.Properties();
        java.lang.Object obj40 = properties38.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration41 = properties38.elements();
        boolean boolean42 = properties38.isEmpty();
        java.util.Enumeration<java.lang.Object> objEnumeration43 = properties38.elements();
        java.lang.Object obj44 = properties10.replace((java.lang.Object) true, (java.lang.Object) properties38);
        java.util.Properties properties45 = new java.util.Properties();
        java.lang.Object obj47 = properties45.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration48 = properties45.elements();
        int int49 = properties45.size();
        java.util.Properties properties50 = new java.util.Properties(properties45);
        java.util.Set<java.lang.String> strSet51 = properties45.stringPropertyNames();
        boolean boolean52 = properties10.contains((java.lang.Object) strSet51);
        java.util.Collection<java.lang.Object> objCollection53 = properties10.values();
        java.util.Properties properties54 = new java.util.Properties(properties10);
        java.lang.Object obj55 = properties6.remove((java.lang.Object) properties54);
        java.util.Collection<java.lang.Object> objCollection56 = properties54.values();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNotNull(properties6);
        org.junit.Assert.assertNotNull(strSet7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNull(obj13);
        org.junit.Assert.assertNotNull(strSet14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(objCollection16);
        org.junit.Assert.assertNull(obj20);
        org.junit.Assert.assertNotNull(objEnumeration21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNotNull(objSet23);
        org.junit.Assert.assertNull(obj24);
        org.junit.Assert.assertNotNull(objSet25);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNull(obj40);
        org.junit.Assert.assertNotNull(objEnumeration41);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertNotNull(objEnumeration43);
        org.junit.Assert.assertNull(obj44);
        org.junit.Assert.assertNull(obj47);
        org.junit.Assert.assertNotNull(objEnumeration48);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 0 + "'", int49 == 0);
        org.junit.Assert.assertNotNull(strSet51);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertNotNull(objCollection53);
        org.junit.Assert.assertNull(obj55);
        org.junit.Assert.assertNotNull(objCollection56);
    }

    @Test
    public void test7548() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7548");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setSerialJtaTransactions(false);
        atomikosProperties0.setThreadedTwoPhaseCommit(true);
        atomikosProperties0.setMaxTimeout((long) '#');
        boolean boolean7 = atomikosProperties0.isEnableLogging();
        atomikosProperties0.setForceShutdownOnVmExit(true);
        atomikosProperties0.setForceShutdownOnVmExit(true);
        long long12 = atomikosProperties0.getCheckpointInterval();
        atomikosProperties0.setLogBaseName("{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=false, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.service={{}={}}, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.tm_unique_name=hi!, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
        boolean boolean15 = atomikosProperties0.isForceShutdownOnVmExit();
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertTrue("'" + long12 + "' != '" + 500L + "'", long12 == 500L);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
    }

    @Test
    public void test7549() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7549");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setSerialJtaTransactions(false);
        boolean boolean3 = atomikosProperties0.isSerialJtaTransactions();
        java.lang.String str4 = atomikosProperties0.getService();
        atomikosProperties0.setEnableLogging(false);
        atomikosProperties0.setLogBaseDir("{}");
        atomikosProperties0.setLogBaseDir("{{}={}}");
        atomikosProperties0.setEnableLogging(true);
        int int13 = atomikosProperties0.getMaxActives();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 50 + "'", int13 == 50);
    }

    @Test
    public void test7550() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7550");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration3 = properties0.elements();
        int int4 = properties0.size();
        java.util.Properties properties5 = new java.util.Properties(properties0);
        java.util.Set<java.lang.String> strSet6 = properties0.stringPropertyNames();
        java.util.Set<java.lang.String> strSet7 = properties0.stringPropertyNames();
        java.util.Properties properties8 = new java.util.Properties();
        java.lang.Object obj10 = properties8.remove((java.lang.Object) 0.0d);
        boolean boolean11 = properties8.isEmpty();
        java.util.Enumeration<java.lang.Object> objEnumeration12 = properties8.elements();
        java.util.Properties properties13 = new java.util.Properties();
        java.lang.Object obj15 = properties13.remove((java.lang.Object) 0.0d);
        boolean boolean16 = properties13.isEmpty();
        java.util.Enumeration<java.lang.Object> objEnumeration17 = properties13.elements();
        java.util.Enumeration<java.lang.Object> objEnumeration18 = properties13.elements();
        java.lang.Object obj19 = properties0.replace((java.lang.Object) objEnumeration12, (java.lang.Object) objEnumeration18);
        java.util.Properties properties20 = new java.util.Properties();
        java.lang.Object obj22 = properties20.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration23 = properties20.elements();
        boolean boolean24 = properties20.isEmpty();
        java.util.Set<java.lang.Object> objSet25 = properties20.keySet();
        java.util.Enumeration<java.lang.Object> objEnumeration26 = properties20.keys();
        java.lang.String str28 = properties20.getProperty("hi!");
        java.lang.String str30 = properties20.getProperty("");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties31 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties31.setSerialJtaTransactions(false);
        atomikosProperties31.setThreadedTwoPhaseCommit(true);
        atomikosProperties31.setEnableLogging(false);
        boolean boolean38 = properties20.containsKey((java.lang.Object) atomikosProperties31);
        boolean boolean39 = properties0.containsKey((java.lang.Object) boolean38);
        boolean boolean40 = properties0.isEmpty();
        java.util.Properties properties41 = new java.util.Properties();
        java.lang.Object obj43 = properties41.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration44 = properties41.elements();
        boolean boolean45 = properties41.isEmpty();
        java.util.Set<java.lang.Object> objSet46 = properties41.keySet();
        boolean boolean47 = properties41.isEmpty();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet48 = properties41.entrySet();
        java.util.Properties properties49 = new java.util.Properties();
        java.lang.Object obj51 = properties49.remove((java.lang.Object) 0.0d);
        boolean boolean52 = properties49.isEmpty();
        java.lang.Object obj55 = properties49.setProperty("", "hi!");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties56 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties56.setSerialJtaTransactions(false);
        boolean boolean59 = properties41.remove((java.lang.Object) properties49, (java.lang.Object) atomikosProperties56);
        java.util.Properties properties60 = new java.util.Properties(properties49);
        int int61 = properties60.size();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties63 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties63.setSerialJtaTransactions(false);
        boolean boolean66 = atomikosProperties63.isSerialJtaTransactions();
        java.lang.String str67 = atomikosProperties63.getService();
        boolean boolean68 = atomikosProperties63.isEnableLogging();
        java.lang.String str69 = atomikosProperties63.getTransactionManagerUniqueName();
        boolean boolean70 = properties60.remove((java.lang.Object) (byte) 1, (java.lang.Object) atomikosProperties63);
        atomikosProperties63.setMaxActives((int) (short) -1);
        boolean boolean73 = atomikosProperties63.isForceShutdownOnVmExit();
        boolean boolean74 = atomikosProperties63.isEnableLogging();
        long long75 = atomikosProperties63.getDefaultJtaTimeout();
        java.util.Properties properties76 = atomikosProperties63.asProperties();
        java.lang.Object obj77 = properties0.get((java.lang.Object) properties76);
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(objEnumeration3);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNotNull(strSet6);
        org.junit.Assert.assertNotNull(strSet7);
        org.junit.Assert.assertNull(obj10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNotNull(objEnumeration12);
        org.junit.Assert.assertNull(obj15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(objEnumeration17);
        org.junit.Assert.assertNotNull(objEnumeration18);
        org.junit.Assert.assertNull(obj19);
        org.junit.Assert.assertNull(obj22);
        org.junit.Assert.assertNotNull(objEnumeration23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNotNull(objSet25);
        org.junit.Assert.assertNotNull(objEnumeration26);
        org.junit.Assert.assertNull(str28);
        org.junit.Assert.assertNull(str30);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNull(obj43);
        org.junit.Assert.assertNotNull(objEnumeration44);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertNotNull(objSet46);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertNotNull(objEntrySet48);
        org.junit.Assert.assertNull(obj51);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertNull(obj55);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertTrue("'" + int61 + "' != '" + 0 + "'", int61 == 0);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertNull(str67);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + true + "'", boolean68 == true);
        org.junit.Assert.assertNull(str69);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + true + "'", boolean74 == true);
        org.junit.Assert.assertTrue("'" + long75 + "' != '" + 10000L + "'", long75 == 10000L);
        org.junit.Assert.assertNotNull(properties76);
        org.junit.Assert.assertNull(obj77);
    }

    @Test
    public void test7551() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7551");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setSerialJtaTransactions(false);
        boolean boolean3 = atomikosProperties0.isSerialJtaTransactions();
        java.lang.String str4 = atomikosProperties0.getService();
        boolean boolean5 = atomikosProperties0.isEnableLogging();
        java.util.Properties properties6 = atomikosProperties0.asProperties();
        atomikosProperties0.setForceShutdownOnVmExit(true);
        atomikosProperties0.setMaxActives((int) (short) -1);
        atomikosProperties0.setMaxTimeout((long) ' ');
        atomikosProperties0.setEnableLogging(false);
        atomikosProperties0.setService("{{}={}}");
        atomikosProperties0.setLogBaseName("{{}={}}");
        atomikosProperties0.setLogBaseDir("{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=false, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=true, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
        long long21 = atomikosProperties0.getDefaultJtaTimeout();
        java.lang.String str22 = atomikosProperties0.getLogBaseName();
        atomikosProperties0.setSerialJtaTransactions(false);
        long long25 = atomikosProperties0.getDefaultJtaTimeout();
        long long26 = atomikosProperties0.getDefaultJtaTimeout();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNotNull(properties6);
        org.junit.Assert.assertTrue("'" + long21 + "' != '" + 10000L + "'", long21 == 10000L);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "{{}={}}" + "'", str22, "{{}={}}");
        org.junit.Assert.assertTrue("'" + long25 + "' != '" + 10000L + "'", long25 == 10000L);
        org.junit.Assert.assertTrue("'" + long26 + "' != '" + 10000L + "'", long26 == 10000L);
    }

    @Test
    public void test7552() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7552");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setSerialJtaTransactions(false);
        atomikosProperties0.setThreadedTwoPhaseCommit(true);
        atomikosProperties0.setSerialJtaTransactions(false);
        java.lang.String str7 = atomikosProperties0.getService();
        java.lang.String str8 = atomikosProperties0.getLogBaseDir();
        int int9 = atomikosProperties0.getMaxActives();
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 50 + "'", int9 == 50);
    }

    @Test
    public void test7553() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7553");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setSerialJtaTransactions(false);
        atomikosProperties0.setThreadedTwoPhaseCommit(true);
        atomikosProperties0.setMaxTimeout((long) '#');
        boolean boolean7 = atomikosProperties0.isEnableLogging();
        atomikosProperties0.setCheckpointInterval((long) (byte) -1);
        atomikosProperties0.setMaxActives((int) (byte) 100);
        atomikosProperties0.setForceShutdownOnVmExit(false);
        atomikosProperties0.setDefaultJtaTimeout((long) (byte) 0);
        long long16 = atomikosProperties0.getCheckpointInterval();
        boolean boolean17 = atomikosProperties0.isEnableLogging();
        boolean boolean18 = atomikosProperties0.isEnableLogging();
        java.lang.String str19 = atomikosProperties0.getService();
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertTrue("'" + long16 + "' != '" + (-1L) + "'", long16 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNull(str19);
    }

    @Test
    public void test7554() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7554");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setSerialJtaTransactions(false);
        atomikosProperties0.setThreadedTwoPhaseCommit(true);
        atomikosProperties0.setEnableLogging(false);
        atomikosProperties0.setForceShutdownOnVmExit(true);
        long long9 = atomikosProperties0.getDefaultJtaTimeout();
        atomikosProperties0.setLogBaseName("tmlog");
        long long12 = atomikosProperties0.getDefaultJtaTimeout();
        java.lang.String str13 = atomikosProperties0.getTransactionManagerUniqueName();
        atomikosProperties0.setThreadedTwoPhaseCommit(true);
        org.junit.Assert.assertTrue("'" + long9 + "' != '" + 10000L + "'", long9 == 10000L);
        org.junit.Assert.assertTrue("'" + long12 + "' != '" + 10000L + "'", long12 == 10000L);
        org.junit.Assert.assertNull(str13);
    }

    @Test
    public void test7555() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7555");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet3 = properties0.stringPropertyNames();
        java.util.Properties properties4 = new java.util.Properties();
        java.util.Properties properties5 = new java.util.Properties();
        java.lang.Object obj7 = properties5.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet8 = properties5.stringPropertyNames();
        boolean boolean9 = properties4.containsValue((java.lang.Object) properties5);
        java.util.Collection<java.lang.Object> objCollection10 = properties4.values();
        java.util.Enumeration<?> wildcardEnumeration11 = properties4.propertyNames();
        java.lang.Object obj13 = properties0.put((java.lang.Object) wildcardEnumeration11, (java.lang.Object) 10.0d);
        java.util.Properties properties14 = new java.util.Properties();
        java.lang.Object obj16 = properties14.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration17 = properties14.elements();
        boolean boolean18 = properties14.isEmpty();
        java.util.Set<java.lang.Object> objSet19 = properties14.keySet();
        boolean boolean20 = properties14.isEmpty();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet21 = properties14.entrySet();
        java.util.Properties properties22 = new java.util.Properties();
        java.lang.Object obj24 = properties22.remove((java.lang.Object) 0.0d);
        boolean boolean25 = properties22.isEmpty();
        java.lang.Object obj28 = properties22.setProperty("", "hi!");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties29 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties29.setSerialJtaTransactions(false);
        boolean boolean32 = properties14.remove((java.lang.Object) properties22, (java.lang.Object) atomikosProperties29);
        java.util.Properties properties33 = new java.util.Properties(properties22);
        int int34 = properties33.size();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties36 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties36.setSerialJtaTransactions(false);
        boolean boolean39 = atomikosProperties36.isSerialJtaTransactions();
        java.lang.String str40 = atomikosProperties36.getService();
        boolean boolean41 = atomikosProperties36.isEnableLogging();
        java.lang.String str42 = atomikosProperties36.getTransactionManagerUniqueName();
        boolean boolean43 = properties33.remove((java.lang.Object) (byte) 1, (java.lang.Object) atomikosProperties36);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties44 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties44.setSerialJtaTransactions(false);
        atomikosProperties44.setThreadedTwoPhaseCommit(true);
        atomikosProperties44.setEnableLogging(false);
        boolean boolean51 = atomikosProperties44.isSerialJtaTransactions();
        int int52 = atomikosProperties44.getMaxActives();
        boolean boolean53 = atomikosProperties44.isSerialJtaTransactions();
        boolean boolean54 = properties0.remove((java.lang.Object) properties33, (java.lang.Object) boolean53);
        java.util.Properties properties55 = new java.util.Properties();
        java.lang.Object obj57 = properties55.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration58 = properties55.elements();
        boolean boolean59 = properties55.isEmpty();
        java.util.Set<java.lang.Object> objSet60 = properties55.keySet();
        boolean boolean61 = properties55.isEmpty();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet62 = properties55.entrySet();
        java.util.Properties properties63 = new java.util.Properties();
        java.lang.Object obj65 = properties63.remove((java.lang.Object) 0.0d);
        boolean boolean66 = properties63.isEmpty();
        java.lang.Object obj69 = properties63.setProperty("", "hi!");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties70 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties70.setSerialJtaTransactions(false);
        boolean boolean73 = properties55.remove((java.lang.Object) properties63, (java.lang.Object) atomikosProperties70);
        java.util.Properties properties74 = new java.util.Properties();
        java.lang.Object obj76 = properties74.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration77 = properties74.elements();
        int int78 = properties74.size();
        java.util.Properties properties79 = new java.util.Properties(properties74);
        java.util.Set<java.lang.String> strSet80 = properties74.stringPropertyNames();
        java.util.Set<java.lang.String> strSet81 = properties74.stringPropertyNames();
        java.lang.Object obj82 = properties0.put((java.lang.Object) properties63, (java.lang.Object) properties74);
        java.lang.String str84 = properties0.getProperty("");
        java.util.Set<java.lang.String> strSet85 = properties0.stringPropertyNames();
        java.util.Properties properties86 = new java.util.Properties(properties0);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties87 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties87.setSerialJtaTransactions(false);
        atomikosProperties87.setThreadedTwoPhaseCommit(true);
        atomikosProperties87.setMaxTimeout((long) '#');
        atomikosProperties87.setLogBaseName("{=hi!}");
        boolean boolean96 = properties0.containsValue((java.lang.Object) "{=hi!}");
        java.io.OutputStream outputStream97 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties0.store(outputStream97, "{com.atomikos.icatch.enable_logging=false, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=false, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(strSet3);
        org.junit.Assert.assertNull(obj7);
        org.junit.Assert.assertNotNull(strSet8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(objCollection10);
        org.junit.Assert.assertNotNull(wildcardEnumeration11);
        org.junit.Assert.assertNull(obj13);
        org.junit.Assert.assertNull(obj16);
        org.junit.Assert.assertNotNull(objEnumeration17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(objSet19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNotNull(objEntrySet21);
        org.junit.Assert.assertNull(obj24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNull(obj28);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 0 + "'", int34 == 0);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNull(str40);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertNull(str42);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + 50 + "'", int52 == 50);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertNull(obj57);
        org.junit.Assert.assertNotNull(objEnumeration58);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertNotNull(objSet60);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertNotNull(objEntrySet62);
        org.junit.Assert.assertNull(obj65);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66 == true);
        org.junit.Assert.assertNull(obj69);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertNull(obj76);
        org.junit.Assert.assertNotNull(objEnumeration77);
        org.junit.Assert.assertTrue("'" + int78 + "' != '" + 0 + "'", int78 == 0);
        org.junit.Assert.assertNotNull(strSet80);
        org.junit.Assert.assertNotNull(strSet81);
        org.junit.Assert.assertNull(obj82);
        org.junit.Assert.assertNull(str84);
        org.junit.Assert.assertNotNull(strSet85);
        org.junit.Assert.assertTrue("'" + boolean96 + "' != '" + false + "'", boolean96 == false);
    }

    @Test
    public void test7556() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7556");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setSerialJtaTransactions(false);
        atomikosProperties0.setThreadedTwoPhaseCommit(true);
        atomikosProperties0.setEnableLogging(false);
        atomikosProperties0.setSerialJtaTransactions(false);
        atomikosProperties0.setMaxTimeout(0L);
        long long11 = atomikosProperties0.getDefaultJtaTimeout();
        long long12 = atomikosProperties0.getDefaultJtaTimeout();
        java.util.Properties properties13 = atomikosProperties0.asProperties();
        java.util.Properties properties14 = new java.util.Properties();
        java.lang.Object obj16 = properties14.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration17 = properties14.elements();
        int int18 = properties14.size();
        java.util.Properties properties19 = new java.util.Properties(properties14);
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet20 = properties14.entrySet();
        java.lang.Object obj23 = properties14.setProperty("", "{}");
        java.util.Properties properties24 = new java.util.Properties();
        java.lang.Object obj26 = properties24.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration27 = properties24.elements();
        boolean boolean28 = properties24.isEmpty();
        java.util.Set<java.lang.Object> objSet29 = properties24.keySet();
        boolean boolean30 = properties24.isEmpty();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet31 = properties24.entrySet();
        java.util.Properties properties32 = new java.util.Properties();
        java.lang.Object obj34 = properties32.remove((java.lang.Object) 0.0d);
        boolean boolean35 = properties32.isEmpty();
        java.lang.Object obj38 = properties32.setProperty("", "hi!");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties39 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties39.setSerialJtaTransactions(false);
        boolean boolean42 = properties24.remove((java.lang.Object) properties32, (java.lang.Object) atomikosProperties39);
        java.util.Properties properties43 = new java.util.Properties(properties32);
        int int44 = properties43.size();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties46 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties46.setSerialJtaTransactions(false);
        boolean boolean49 = atomikosProperties46.isSerialJtaTransactions();
        java.lang.String str50 = atomikosProperties46.getService();
        boolean boolean51 = atomikosProperties46.isEnableLogging();
        java.lang.String str52 = atomikosProperties46.getTransactionManagerUniqueName();
        boolean boolean53 = properties43.remove((java.lang.Object) (byte) 1, (java.lang.Object) atomikosProperties46);
        java.util.Properties properties54 = new java.util.Properties();
        java.lang.Object obj56 = properties54.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration57 = properties54.elements();
        boolean boolean58 = properties54.isEmpty();
        java.util.Enumeration<java.lang.Object> objEnumeration59 = properties54.elements();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet60 = properties54.entrySet();
        java.lang.Object obj61 = properties43.remove((java.lang.Object) objEntrySet60);
        boolean boolean62 = properties43.isEmpty();
        java.util.Properties properties63 = new java.util.Properties();
        java.lang.Object obj65 = properties63.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration66 = properties63.elements();
        boolean boolean67 = properties63.isEmpty();
        java.util.Set<java.lang.Object> objSet68 = properties63.keySet();
        java.util.Enumeration<java.lang.Object> objEnumeration69 = properties63.keys();
        java.lang.String str71 = properties63.getProperty("hi!");
        java.lang.String str73 = properties63.getProperty("");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties74 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties74.setSerialJtaTransactions(false);
        atomikosProperties74.setThreadedTwoPhaseCommit(true);
        atomikosProperties74.setEnableLogging(false);
        boolean boolean81 = properties63.containsKey((java.lang.Object) atomikosProperties74);
        atomikosProperties74.setTransactionManagerUniqueName("tmlog");
        boolean boolean84 = atomikosProperties74.isForceShutdownOnVmExit();
        java.lang.Object obj85 = properties14.put((java.lang.Object) boolean62, (java.lang.Object) atomikosProperties74);
        atomikosProperties74.setLogBaseName("");
        atomikosProperties74.setDefaultJtaTimeout((long) (short) 100);
        java.util.Properties properties90 = atomikosProperties74.asProperties();
        java.lang.Object obj91 = properties13.get((java.lang.Object) atomikosProperties74);
        java.util.Properties properties92 = new java.util.Properties(properties13);
        java.lang.Object obj95 = properties92.setProperty("{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=false, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}", "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=100, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=35, com.atomikos.icatch.threaded_2pc=true, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
        org.junit.Assert.assertTrue("'" + long11 + "' != '" + 10000L + "'", long11 == 10000L);
        org.junit.Assert.assertTrue("'" + long12 + "' != '" + 10000L + "'", long12 == 10000L);
        org.junit.Assert.assertNotNull(properties13);
        org.junit.Assert.assertNull(obj16);
        org.junit.Assert.assertNotNull(objEnumeration17);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 0 + "'", int18 == 0);
        org.junit.Assert.assertNotNull(objEntrySet20);
        org.junit.Assert.assertNull(obj23);
        org.junit.Assert.assertNull(obj26);
        org.junit.Assert.assertNotNull(objEnumeration27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNotNull(objSet29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNotNull(objEntrySet31);
        org.junit.Assert.assertNull(obj34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertNull(obj38);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 0 + "'", int44 == 0);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNull(str50);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertNull(str52);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertNull(obj56);
        org.junit.Assert.assertNotNull(objEnumeration57);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertNotNull(objEnumeration59);
        org.junit.Assert.assertNotNull(objEntrySet60);
        org.junit.Assert.assertNull(obj61);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + true + "'", boolean62 == true);
        org.junit.Assert.assertNull(obj65);
        org.junit.Assert.assertNotNull(objEnumeration66);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + true + "'", boolean67 == true);
        org.junit.Assert.assertNotNull(objSet68);
        org.junit.Assert.assertNotNull(objEnumeration69);
        org.junit.Assert.assertNull(str71);
        org.junit.Assert.assertNull(str73);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + false + "'", boolean81 == false);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + false + "'", boolean84 == false);
        org.junit.Assert.assertNull(obj85);
        org.junit.Assert.assertNotNull(properties90);
        org.junit.Assert.assertNull(obj91);
        org.junit.Assert.assertNull(obj95);
    }

    @Test
    public void test7557() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7557");
        java.util.Properties properties0 = new java.util.Properties();
        java.util.Properties properties1 = new java.util.Properties();
        java.lang.Object obj3 = properties1.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet4 = properties1.stringPropertyNames();
        boolean boolean5 = properties0.containsValue((java.lang.Object) properties1);
        java.util.Collection<java.lang.Object> objCollection6 = properties0.values();
        java.util.Properties properties8 = new java.util.Properties();
        java.lang.Object obj10 = properties8.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration11 = properties8.elements();
        boolean boolean12 = properties8.isEmpty();
        java.util.Set<java.lang.Object> objSet13 = properties8.keySet();
        java.lang.Object obj14 = properties0.putIfAbsent((java.lang.Object) "hi!", (java.lang.Object) objSet13);
        java.util.Set<java.lang.Object> objSet15 = properties0.keySet();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties16 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties16.setSerialJtaTransactions(false);
        atomikosProperties16.setThreadedTwoPhaseCommit(true);
        atomikosProperties16.setMaxTimeout((long) '#');
        boolean boolean23 = atomikosProperties16.isEnableLogging();
        atomikosProperties16.setCheckpointInterval((long) (byte) -1);
        atomikosProperties16.setEnableLogging(true);
        java.util.Properties properties28 = new java.util.Properties();
        java.lang.Object obj30 = properties28.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration31 = properties28.elements();
        boolean boolean32 = properties28.isEmpty();
        java.util.Enumeration<java.lang.Object> objEnumeration33 = properties28.elements();
        java.lang.Object obj34 = properties0.replace((java.lang.Object) true, (java.lang.Object) properties28);
        java.util.Properties properties35 = new java.util.Properties();
        java.lang.Object obj37 = properties35.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration38 = properties35.elements();
        int int39 = properties35.size();
        java.util.Properties properties40 = new java.util.Properties(properties35);
        java.util.Set<java.lang.String> strSet41 = properties35.stringPropertyNames();
        boolean boolean42 = properties0.contains((java.lang.Object) strSet41);
        java.util.Collection<java.lang.Object> objCollection43 = properties0.values();
        java.util.Properties properties44 = new java.util.Properties(properties0);
        java.util.Set<java.lang.String> strSet45 = properties44.stringPropertyNames();
        java.io.OutputStream outputStream46 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties44.store(outputStream46, "{com.atomikos.icatch.enable_logging=false, com.atomikos.icatch.force_shutdown_on_vm_exit=true, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=false, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=32, com.atomikos.icatch.service={{}={}}, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.max_actives=-1, com.atomikos.icatch.log_base_name=tmlog}");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(obj3);
        org.junit.Assert.assertNotNull(strSet4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(objCollection6);
        org.junit.Assert.assertNull(obj10);
        org.junit.Assert.assertNotNull(objEnumeration11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(objSet13);
        org.junit.Assert.assertNull(obj14);
        org.junit.Assert.assertNotNull(objSet15);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNull(obj30);
        org.junit.Assert.assertNotNull(objEnumeration31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertNotNull(objEnumeration33);
        org.junit.Assert.assertNull(obj34);
        org.junit.Assert.assertNull(obj37);
        org.junit.Assert.assertNotNull(objEnumeration38);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 0 + "'", int39 == 0);
        org.junit.Assert.assertNotNull(strSet41);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertNotNull(objCollection43);
        org.junit.Assert.assertNotNull(strSet45);
    }

    @Test
    public void test7558() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7558");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setSerialJtaTransactions(false);
        atomikosProperties0.setThreadedTwoPhaseCommit(true);
        atomikosProperties0.setMaxTimeout((long) '#');
        boolean boolean7 = atomikosProperties0.isEnableLogging();
        atomikosProperties0.setCheckpointInterval((long) (byte) -1);
        atomikosProperties0.setMaxActives((int) (byte) 100);
        atomikosProperties0.setForceShutdownOnVmExit(false);
        atomikosProperties0.setThreadedTwoPhaseCommit(true);
        long long16 = atomikosProperties0.getDefaultJtaTimeout();
        long long17 = atomikosProperties0.getMaxTimeout();
        boolean boolean18 = atomikosProperties0.isEnableLogging();
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertTrue("'" + long16 + "' != '" + 10000L + "'", long16 == 10000L);
        org.junit.Assert.assertTrue("'" + long17 + "' != '" + 35L + "'", long17 == 35L);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
    }

    @Test
    public void test7559() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7559");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet3 = properties0.stringPropertyNames();
        java.util.Properties properties4 = new java.util.Properties();
        java.util.Properties properties5 = new java.util.Properties();
        java.lang.Object obj7 = properties5.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet8 = properties5.stringPropertyNames();
        boolean boolean9 = properties4.containsValue((java.lang.Object) properties5);
        java.util.Collection<java.lang.Object> objCollection10 = properties4.values();
        java.util.Enumeration<?> wildcardEnumeration11 = properties4.propertyNames();
        java.lang.Object obj13 = properties0.put((java.lang.Object) wildcardEnumeration11, (java.lang.Object) 10.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration14 = properties0.elements();
        java.util.Properties properties16 = new java.util.Properties();
        java.lang.Object obj18 = properties16.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration19 = properties16.elements();
        boolean boolean20 = properties16.isEmpty();
        java.util.Set<java.lang.Object> objSet21 = properties16.keySet();
        java.util.Enumeration<java.lang.Object> objEnumeration22 = properties16.keys();
        boolean boolean24 = properties16.equals((java.lang.Object) "");
        java.lang.String str25 = properties16.toString();
        java.lang.Object obj26 = properties0.put((java.lang.Object) 'a', (java.lang.Object) properties16);
        java.lang.String str27 = properties0.toString();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties28 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties28.setSerialJtaTransactions(false);
        boolean boolean31 = atomikosProperties28.isSerialJtaTransactions();
        java.lang.String str32 = atomikosProperties28.getService();
        boolean boolean33 = atomikosProperties28.isEnableLogging();
        atomikosProperties28.setCheckpointInterval((long) (byte) 100);
        atomikosProperties28.setLogBaseDir("tmlog");
        long long38 = atomikosProperties28.getDefaultJtaTimeout();
        atomikosProperties28.setCheckpointInterval((long) 2);
        atomikosProperties28.setEnableLogging(false);
        java.lang.Object obj43 = properties0.remove((java.lang.Object) atomikosProperties28);
        java.io.PrintWriter printWriter44 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties0.list(printWriter44);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(strSet3);
        org.junit.Assert.assertNull(obj7);
        org.junit.Assert.assertNotNull(strSet8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(objCollection10);
        org.junit.Assert.assertNotNull(wildcardEnumeration11);
        org.junit.Assert.assertNull(obj13);
        org.junit.Assert.assertNotNull(objEnumeration14);
        org.junit.Assert.assertNull(obj18);
        org.junit.Assert.assertNotNull(objEnumeration19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNotNull(objSet21);
        org.junit.Assert.assertNotNull(objEnumeration22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "{}" + "'", str25, "{}");
        org.junit.Assert.assertNull(obj26);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNull(str32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertTrue("'" + long38 + "' != '" + 10000L + "'", long38 == 10000L);
        org.junit.Assert.assertNull(obj43);
    }

    @Test
    public void test7560() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7560");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setSerialJtaTransactions(false);
        boolean boolean3 = atomikosProperties0.isSerialJtaTransactions();
        atomikosProperties0.setTransactionManagerUniqueName("hi!");
        atomikosProperties0.setForceShutdownOnVmExit(false);
        atomikosProperties0.setDefaultJtaTimeout((long) 50);
        java.lang.String str10 = atomikosProperties0.getLogBaseName();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "tmlog" + "'", str10, "tmlog");
    }

    @Test
    public void test7561() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7561");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setSerialJtaTransactions(false);
        atomikosProperties0.setThreadedTwoPhaseCommit(true);
        boolean boolean5 = atomikosProperties0.isForceShutdownOnVmExit();
        java.lang.String str6 = atomikosProperties0.getLogBaseDir();
        atomikosProperties0.setTransactionManagerUniqueName("{=hi!}");
        java.lang.String str9 = atomikosProperties0.getLogBaseName();
        long long10 = atomikosProperties0.getCheckpointInterval();
        atomikosProperties0.setSerialJtaTransactions(true);
        atomikosProperties0.setService("hi!");
        boolean boolean15 = atomikosProperties0.isForceShutdownOnVmExit();
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "tmlog" + "'", str9, "tmlog");
        org.junit.Assert.assertTrue("'" + long10 + "' != '" + 500L + "'", long10 == 500L);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
    }

    @Test
    public void test7562() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7562");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration3 = properties0.elements();
        boolean boolean4 = properties0.isEmpty();
        java.util.Set<java.lang.Object> objSet5 = properties0.keySet();
        java.util.Enumeration<java.lang.Object> objEnumeration6 = properties0.keys();
        java.lang.String str8 = properties0.getProperty("hi!");
        java.util.Enumeration<?> wildcardEnumeration9 = properties0.propertyNames();
        java.util.Properties properties10 = new java.util.Properties();
        java.lang.Object obj12 = properties10.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration13 = properties10.elements();
        boolean boolean14 = properties10.isEmpty();
        java.util.Enumeration<java.lang.Object> objEnumeration15 = properties10.elements();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet16 = properties10.entrySet();
        java.util.Set<java.lang.String> strSet17 = properties10.stringPropertyNames();
        boolean boolean18 = properties10.isEmpty();
        properties0.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties10);
        java.util.Set<java.lang.Object> objSet20 = properties0.keySet();
        java.io.Writer writer21 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties0.store(writer21, "tmlog");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(objEnumeration3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(objSet5);
        org.junit.Assert.assertNotNull(objEnumeration6);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNotNull(wildcardEnumeration9);
        org.junit.Assert.assertNull(obj12);
        org.junit.Assert.assertNotNull(objEnumeration13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(objEnumeration15);
        org.junit.Assert.assertNotNull(objEntrySet16);
        org.junit.Assert.assertNotNull(strSet17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(objSet20);
    }

    @Test
    public void test7563() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7563");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setSerialJtaTransactions(false);
        atomikosProperties0.setThreadedTwoPhaseCommit(true);
        atomikosProperties0.setMaxTimeout((long) '#');
        boolean boolean7 = atomikosProperties0.isEnableLogging();
        atomikosProperties0.setCheckpointInterval((long) (byte) -1);
        atomikosProperties0.setMaxActives((int) (byte) 100);
        atomikosProperties0.setTransactionManagerUniqueName("{=hi!}");
        atomikosProperties0.setDefaultJtaTimeout((long) 'a');
        boolean boolean16 = atomikosProperties0.isEnableLogging();
        boolean boolean17 = atomikosProperties0.isEnableLogging();
        atomikosProperties0.setThreadedTwoPhaseCommit(true);
        java.util.Properties properties20 = atomikosProperties0.asProperties();
        java.io.InputStream inputStream21 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties20.load(inputStream21);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(properties20);
    }

    @Test
    public void test7564() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7564");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration3 = properties0.elements();
        boolean boolean4 = properties0.isEmpty();
        java.util.Set<java.lang.Object> objSet5 = properties0.keySet();
        boolean boolean7 = properties0.containsKey((java.lang.Object) (-1.0f));
        java.util.Collection<java.lang.Object> objCollection8 = properties0.values();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet9 = properties0.entrySet();
        java.util.Properties properties10 = new java.util.Properties();
        java.lang.Object obj12 = properties10.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration13 = properties10.elements();
        boolean boolean14 = properties10.isEmpty();
        java.util.Set<java.lang.Object> objSet15 = properties10.keySet();
        java.util.Properties properties16 = new java.util.Properties();
        java.lang.Object obj18 = properties16.remove((java.lang.Object) 0.0d);
        java.util.Properties properties19 = new java.util.Properties();
        java.util.Collection<java.lang.Object> objCollection20 = properties19.values();
        java.util.Enumeration<java.lang.Object> objEnumeration21 = properties19.keys();
        java.util.Properties properties22 = new java.util.Properties();
        java.lang.Object obj24 = properties22.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration25 = properties22.elements();
        boolean boolean26 = properties22.isEmpty();
        java.util.Set<java.lang.Object> objSet27 = properties22.keySet();
        java.util.Enumeration<java.lang.Object> objEnumeration28 = properties22.keys();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet29 = properties22.entrySet();
        java.lang.Object obj30 = properties16.put((java.lang.Object) properties19, (java.lang.Object) properties22);
        java.lang.String str32 = properties19.getProperty("{=hi!}");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties33 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties33.setSerialJtaTransactions(false);
        atomikosProperties33.setThreadedTwoPhaseCommit(true);
        atomikosProperties33.setThreadedTwoPhaseCommit(true);
        long long40 = atomikosProperties33.getMaxTimeout();
        boolean boolean41 = properties19.containsValue((java.lang.Object) atomikosProperties33);
        java.util.Enumeration<java.lang.Object> objEnumeration42 = properties19.elements();
        java.util.Set<java.lang.String> strSet43 = properties19.stringPropertyNames();
        boolean boolean44 = properties10.contains((java.lang.Object) properties19);
        java.util.Enumeration<java.lang.Object> objEnumeration45 = properties19.elements();
        boolean boolean46 = properties0.equals((java.lang.Object) properties19);
        java.util.Set<java.lang.String> strSet47 = properties0.stringPropertyNames();
        java.util.Properties properties48 = new java.util.Properties();
        java.lang.Object obj50 = properties48.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration51 = properties48.elements();
        boolean boolean52 = properties48.isEmpty();
        java.util.Enumeration<java.lang.Object> objEnumeration53 = properties48.elements();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet54 = properties48.entrySet();
        java.util.Set<java.lang.String> strSet55 = properties48.stringPropertyNames();
        properties0.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties48);
        java.io.InputStream inputStream57 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties0.load(inputStream57);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(objEnumeration3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(objSet5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(objCollection8);
        org.junit.Assert.assertNotNull(objEntrySet9);
        org.junit.Assert.assertNull(obj12);
        org.junit.Assert.assertNotNull(objEnumeration13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(objSet15);
        org.junit.Assert.assertNull(obj18);
        org.junit.Assert.assertNotNull(objCollection20);
        org.junit.Assert.assertNotNull(objEnumeration21);
        org.junit.Assert.assertNull(obj24);
        org.junit.Assert.assertNotNull(objEnumeration25);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertNotNull(objSet27);
        org.junit.Assert.assertNotNull(objEnumeration28);
        org.junit.Assert.assertNotNull(objEntrySet29);
        org.junit.Assert.assertNull(obj30);
        org.junit.Assert.assertNull(str32);
        org.junit.Assert.assertTrue("'" + long40 + "' != '" + 300000L + "'", long40 == 300000L);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(objEnumeration42);
        org.junit.Assert.assertNotNull(strSet43);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(objEnumeration45);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertNotNull(strSet47);
        org.junit.Assert.assertNull(obj50);
        org.junit.Assert.assertNotNull(objEnumeration51);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertNotNull(objEnumeration53);
        org.junit.Assert.assertNotNull(objEntrySet54);
        org.junit.Assert.assertNotNull(strSet55);
    }

    @Test
    public void test7565() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7565");
        java.util.Properties properties0 = new java.util.Properties();
        java.util.Collection<java.lang.Object> objCollection1 = properties0.values();
        java.util.Enumeration<java.lang.Object> objEnumeration2 = properties0.keys();
        properties0.clear();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties4 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties4.setSerialJtaTransactions(false);
        boolean boolean7 = atomikosProperties4.isSerialJtaTransactions();
        atomikosProperties4.setTransactionManagerUniqueName("hi!");
        java.lang.String str10 = atomikosProperties4.getLogBaseName();
        java.lang.String str11 = atomikosProperties4.getLogBaseName();
        java.lang.Object obj12 = properties0.get((java.lang.Object) str11);
        java.lang.String str15 = properties0.getProperty("{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=false, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, hi!=, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}", "{{}={}}");
        org.junit.Assert.assertNotNull(objCollection1);
        org.junit.Assert.assertNotNull(objEnumeration2);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "tmlog" + "'", str10, "tmlog");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "tmlog" + "'", str11, "tmlog");
        org.junit.Assert.assertNull(obj12);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "{{}={}}" + "'", str15, "{{}={}}");
    }

    @Test
    public void test7566() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7566");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration3 = properties0.elements();
        int int4 = properties0.size();
        java.util.Properties properties5 = new java.util.Properties();
        java.lang.Object obj7 = properties5.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration8 = properties5.elements();
        boolean boolean9 = properties5.isEmpty();
        java.util.Set<java.lang.Object> objSet10 = properties5.keySet();
        boolean boolean11 = properties0.containsKey((java.lang.Object) objSet10);
        java.util.Enumeration<java.lang.Object> objEnumeration12 = properties0.keys();
        java.util.Properties properties13 = new java.util.Properties();
        java.lang.Object obj15 = properties13.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration16 = properties13.elements();
        boolean boolean17 = properties13.isEmpty();
        java.util.Set<java.lang.Object> objSet18 = properties13.keySet();
        java.util.Enumeration<java.lang.Object> objEnumeration19 = properties13.keys();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet20 = properties13.entrySet();
        boolean boolean22 = properties0.remove((java.lang.Object) properties13, (java.lang.Object) 1.0f);
        java.lang.Object obj23 = properties13.clone();
        java.util.Collection<java.lang.Object> objCollection24 = properties13.values();
        java.util.Collection<java.lang.Object> objCollection25 = properties13.values();
        java.lang.String str26 = properties13.toString();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties27 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties27.setSerialJtaTransactions(false);
        atomikosProperties27.setThreadedTwoPhaseCommit(true);
        atomikosProperties27.setMaxTimeout((long) '#');
        boolean boolean34 = atomikosProperties27.isEnableLogging();
        atomikosProperties27.setMaxActives((int) '#');
        atomikosProperties27.setSerialJtaTransactions(true);
        atomikosProperties27.setThreadedTwoPhaseCommit(true);
        java.lang.Class<?> wildcardClass41 = atomikosProperties27.getClass();
        boolean boolean42 = properties13.contains((java.lang.Object) atomikosProperties27);
        boolean boolean43 = properties13.isEmpty();
        java.util.Properties properties44 = new java.util.Properties(properties13);
        int int45 = properties13.size();
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(objEnumeration3);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNull(obj7);
        org.junit.Assert.assertNotNull(objEnumeration8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertNotNull(objSet10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(objEnumeration12);
        org.junit.Assert.assertNull(obj15);
        org.junit.Assert.assertNotNull(objEnumeration16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(objSet18);
        org.junit.Assert.assertNotNull(objEnumeration19);
        org.junit.Assert.assertNotNull(objEntrySet20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(obj23);
        org.junit.Assert.assertEquals(obj23.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj23), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj23), "{}");
        org.junit.Assert.assertNotNull(objCollection24);
        org.junit.Assert.assertNotNull(objCollection25);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "{}" + "'", str26, "{}");
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertNotNull(wildcardClass41);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 0 + "'", int45 == 0);
    }

    @Test
    public void test7567() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7567");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setSerialJtaTransactions(false);
        atomikosProperties0.setThreadedTwoPhaseCommit(true);
        atomikosProperties0.setMaxTimeout((long) '#');
        boolean boolean7 = atomikosProperties0.isEnableLogging();
        atomikosProperties0.setCheckpointInterval((long) (byte) -1);
        atomikosProperties0.setMaxActives(10);
        boolean boolean12 = atomikosProperties0.isEnableLogging();
        java.util.Properties properties13 = atomikosProperties0.asProperties();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties14 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties14.setSerialJtaTransactions(false);
        atomikosProperties14.setThreadedTwoPhaseCommit(true);
        atomikosProperties14.setMaxTimeout((long) '#');
        boolean boolean21 = atomikosProperties14.isEnableLogging();
        java.util.Properties properties22 = atomikosProperties14.asProperties();
        atomikosProperties14.setSerialJtaTransactions(true);
        java.lang.String str25 = atomikosProperties14.getLogBaseName();
        java.lang.Object obj26 = properties13.remove((java.lang.Object) atomikosProperties14);
        java.lang.String str28 = properties13.getProperty("{hi!=[], {=hi!}={com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=false, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.tm_unique_name=tmlog, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}}");
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(properties13);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(properties22);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "tmlog" + "'", str25, "tmlog");
        org.junit.Assert.assertNull(obj26);
        org.junit.Assert.assertNull(str28);
    }

    @Test
    public void test7568() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7568");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        java.util.Properties properties3 = new java.util.Properties();
        java.util.Collection<java.lang.Object> objCollection4 = properties3.values();
        java.util.Enumeration<java.lang.Object> objEnumeration5 = properties3.keys();
        java.util.Properties properties6 = new java.util.Properties();
        java.lang.Object obj8 = properties6.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration9 = properties6.elements();
        boolean boolean10 = properties6.isEmpty();
        java.util.Set<java.lang.Object> objSet11 = properties6.keySet();
        java.util.Enumeration<java.lang.Object> objEnumeration12 = properties6.keys();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet13 = properties6.entrySet();
        java.lang.Object obj14 = properties0.put((java.lang.Object) properties3, (java.lang.Object) properties6);
        java.lang.Object obj15 = properties3.clone();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties16 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties16.setSerialJtaTransactions(false);
        atomikosProperties16.setThreadedTwoPhaseCommit(true);
        atomikosProperties16.setMaxTimeout((long) '#');
        boolean boolean23 = atomikosProperties16.isEnableLogging();
        atomikosProperties16.setCheckpointInterval((long) 100);
        atomikosProperties16.setSerialJtaTransactions(true);
        boolean boolean28 = properties3.equals((java.lang.Object) atomikosProperties16);
        java.util.Properties properties29 = new java.util.Properties();
        java.lang.Object obj31 = properties29.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration32 = properties29.elements();
        boolean boolean33 = properties29.isEmpty();
        java.util.Enumeration<java.lang.Object> objEnumeration34 = properties29.elements();
        boolean boolean35 = properties3.containsKey((java.lang.Object) properties29);
        java.util.Properties properties36 = new java.util.Properties();
        java.lang.Object obj38 = properties36.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration39 = properties36.elements();
        boolean boolean40 = properties36.isEmpty();
        java.util.Set<java.lang.Object> objSet41 = properties36.keySet();
        java.util.Enumeration<java.lang.Object> objEnumeration42 = properties36.keys();
        boolean boolean44 = properties36.equals((java.lang.Object) "");
        boolean boolean45 = properties3.containsValue((java.lang.Object) properties36);
        java.lang.Object obj46 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj47 = properties3.remove(obj46);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(objCollection4);
        org.junit.Assert.assertNotNull(objEnumeration5);
        org.junit.Assert.assertNull(obj8);
        org.junit.Assert.assertNotNull(objEnumeration9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(objSet11);
        org.junit.Assert.assertNotNull(objEnumeration12);
        org.junit.Assert.assertNotNull(objEntrySet13);
        org.junit.Assert.assertNull(obj14);
        org.junit.Assert.assertNotNull(obj15);
        org.junit.Assert.assertEquals(obj15.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj15), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj15), "{}");
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNull(obj31);
        org.junit.Assert.assertNotNull(objEnumeration32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNotNull(objEnumeration34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNull(obj38);
        org.junit.Assert.assertNotNull(objEnumeration39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNotNull(objSet41);
        org.junit.Assert.assertNotNull(objEnumeration42);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
    }

    @Test
    public void test7569() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7569");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration3 = properties0.elements();
        boolean boolean4 = properties0.isEmpty();
        java.lang.Object obj7 = properties0.setProperty("tmlog", "");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties8 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties8.setSerialJtaTransactions(false);
        boolean boolean11 = atomikosProperties8.isSerialJtaTransactions();
        atomikosProperties8.setTransactionManagerUniqueName("hi!");
        atomikosProperties8.setForceShutdownOnVmExit(false);
        atomikosProperties8.setDefaultJtaTimeout((long) (byte) 10);
        java.lang.String str18 = atomikosProperties8.getTransactionManagerUniqueName();
        java.util.Properties properties19 = new java.util.Properties();
        java.util.Properties properties20 = new java.util.Properties();
        java.lang.Object obj22 = properties20.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet23 = properties20.stringPropertyNames();
        boolean boolean24 = properties19.containsValue((java.lang.Object) properties20);
        java.util.Collection<java.lang.Object> objCollection25 = properties19.values();
        java.util.Properties properties27 = new java.util.Properties();
        java.lang.Object obj29 = properties27.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration30 = properties27.elements();
        boolean boolean31 = properties27.isEmpty();
        java.util.Set<java.lang.Object> objSet32 = properties27.keySet();
        java.lang.Object obj33 = properties19.putIfAbsent((java.lang.Object) "hi!", (java.lang.Object) objSet32);
        java.util.Set<java.lang.Object> objSet34 = properties19.keySet();
        java.util.Set<java.lang.Object> objSet35 = properties19.keySet();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet36 = properties19.entrySet();
        java.util.Set<java.lang.Object> objSet37 = properties19.keySet();
        java.lang.Object obj38 = properties0.replace((java.lang.Object) atomikosProperties8, (java.lang.Object) properties19);
        java.util.Enumeration<java.lang.Object> objEnumeration39 = properties0.keys();
        java.util.Properties properties40 = new java.util.Properties();
        java.lang.Object obj42 = properties40.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet43 = properties40.stringPropertyNames();
        java.util.Properties properties44 = new java.util.Properties();
        java.lang.Object obj46 = properties44.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet47 = properties44.stringPropertyNames();
        java.lang.Object obj49 = properties40.put((java.lang.Object) strSet47, (java.lang.Object) 0.0d);
        boolean boolean50 = properties0.equals((java.lang.Object) 0.0d);
        java.io.OutputStream outputStream51 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties0.storeToXML(outputStream51, "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=100, com.atomikos.icatch.serial_jta_transactions=false, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=35, com.atomikos.icatch.service={=hi!}, com.atomikos.icatch.threaded_2pc=true, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}", "{{hi!=[]}={hi!=[], {}={}}}");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(objEnumeration3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNull(obj7);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "hi!" + "'", str18, "hi!");
        org.junit.Assert.assertNull(obj22);
        org.junit.Assert.assertNotNull(strSet23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(objCollection25);
        org.junit.Assert.assertNull(obj29);
        org.junit.Assert.assertNotNull(objEnumeration30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNotNull(objSet32);
        org.junit.Assert.assertNull(obj33);
        org.junit.Assert.assertNotNull(objSet34);
        org.junit.Assert.assertNotNull(objSet35);
        org.junit.Assert.assertNotNull(objEntrySet36);
        org.junit.Assert.assertNotNull(objSet37);
        org.junit.Assert.assertNull(obj38);
        org.junit.Assert.assertNotNull(objEnumeration39);
        org.junit.Assert.assertNull(obj42);
        org.junit.Assert.assertNotNull(strSet43);
        org.junit.Assert.assertNull(obj46);
        org.junit.Assert.assertNotNull(strSet47);
        org.junit.Assert.assertNull(obj49);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
    }

    @Test
    public void test7570() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7570");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration3 = properties0.elements();
        boolean boolean4 = properties0.isEmpty();
        java.util.Set<java.lang.Object> objSet5 = properties0.keySet();
        boolean boolean6 = properties0.isEmpty();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet7 = properties0.entrySet();
        java.util.Properties properties8 = new java.util.Properties();
        java.lang.Object obj10 = properties8.remove((java.lang.Object) 0.0d);
        boolean boolean11 = properties8.isEmpty();
        java.lang.Object obj14 = properties8.setProperty("", "hi!");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties15 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties15.setSerialJtaTransactions(false);
        boolean boolean18 = properties0.remove((java.lang.Object) properties8, (java.lang.Object) atomikosProperties15);
        java.util.Enumeration<java.lang.Object> objEnumeration19 = properties0.elements();
        java.util.Collection<java.lang.Object> objCollection20 = properties0.values();
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(objEnumeration3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(objSet5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(objEntrySet7);
        org.junit.Assert.assertNull(obj10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNull(obj14);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(objEnumeration19);
        org.junit.Assert.assertNotNull(objCollection20);
    }

    @Test
    public void test7571() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7571");
        java.util.Properties properties0 = new java.util.Properties();
        java.util.Collection<java.lang.Object> objCollection1 = properties0.values();
        java.util.Enumeration<java.lang.Object> objEnumeration2 = properties0.keys();
        properties0.clear();
        java.lang.String str4 = properties0.toString();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties5 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties5.setSerialJtaTransactions(false);
        atomikosProperties5.setThreadedTwoPhaseCommit(true);
        atomikosProperties5.setMaxTimeout((long) '#');
        boolean boolean12 = atomikosProperties5.isEnableLogging();
        atomikosProperties5.setCheckpointInterval((long) (byte) -1);
        atomikosProperties5.setCheckpointInterval(0L);
        java.lang.String str17 = atomikosProperties5.getService();
        boolean boolean18 = atomikosProperties5.isForceShutdownOnVmExit();
        java.util.Properties properties19 = new java.util.Properties();
        java.lang.Object obj21 = properties19.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration22 = properties19.elements();
        boolean boolean23 = properties19.isEmpty();
        java.util.Set<java.lang.Object> objSet24 = properties19.keySet();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties25 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties25.setSerialJtaTransactions(false);
        atomikosProperties25.setThreadedTwoPhaseCommit(true);
        atomikosProperties25.setThreadedTwoPhaseCommit(true);
        java.util.Properties properties32 = atomikosProperties25.asProperties();
        int int33 = atomikosProperties25.getMaxActives();
        java.util.Properties properties34 = new java.util.Properties();
        java.lang.Object obj36 = properties34.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration37 = properties34.elements();
        boolean boolean38 = properties34.isEmpty();
        java.util.Set<java.lang.Object> objSet39 = properties34.keySet();
        boolean boolean41 = properties34.containsKey((java.lang.Object) (-1.0f));
        java.lang.Object obj42 = properties19.put((java.lang.Object) atomikosProperties25, (java.lang.Object) properties34);
        boolean boolean43 = properties0.remove((java.lang.Object) atomikosProperties5, (java.lang.Object) atomikosProperties25);
        boolean boolean44 = atomikosProperties25.isThreadedTwoPhaseCommit();
        atomikosProperties25.setEnableLogging(true);
        org.junit.Assert.assertNotNull(objCollection1);
        org.junit.Assert.assertNotNull(objEnumeration2);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "{}" + "'", str4, "{}");
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNull(str17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNull(obj21);
        org.junit.Assert.assertNotNull(objEnumeration22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNotNull(objSet24);
        org.junit.Assert.assertNotNull(properties32);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 50 + "'", int33 == 50);
        org.junit.Assert.assertNull(obj36);
        org.junit.Assert.assertNotNull(objEnumeration37);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertNotNull(objSet39);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNull(obj42);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
    }

    @Test
    public void test7572() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7572");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration3 = properties0.elements();
        int int4 = properties0.size();
        java.util.Properties properties5 = new java.util.Properties(properties0);
        boolean boolean6 = properties5.isEmpty();
        java.util.Properties properties7 = new java.util.Properties();
        java.lang.Object obj9 = properties7.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration10 = properties7.elements();
        boolean boolean11 = properties7.isEmpty();
        java.util.Set<java.lang.Object> objSet12 = properties7.keySet();
        java.util.Enumeration<java.lang.Object> objEnumeration13 = properties7.keys();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet14 = properties7.entrySet();
        java.util.Properties properties15 = new java.util.Properties();
        java.lang.Object obj17 = properties15.remove((java.lang.Object) 0.0d);
        java.util.Properties properties18 = new java.util.Properties();
        java.util.Collection<java.lang.Object> objCollection19 = properties18.values();
        java.util.Enumeration<java.lang.Object> objEnumeration20 = properties18.keys();
        java.util.Properties properties21 = new java.util.Properties();
        java.lang.Object obj23 = properties21.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration24 = properties21.elements();
        boolean boolean25 = properties21.isEmpty();
        java.util.Set<java.lang.Object> objSet26 = properties21.keySet();
        java.util.Enumeration<java.lang.Object> objEnumeration27 = properties21.keys();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet28 = properties21.entrySet();
        java.lang.Object obj29 = properties15.put((java.lang.Object) properties18, (java.lang.Object) properties21);
        java.lang.String str31 = properties18.getProperty("{=hi!}");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties32 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties32.setSerialJtaTransactions(false);
        atomikosProperties32.setThreadedTwoPhaseCommit(true);
        atomikosProperties32.setThreadedTwoPhaseCommit(true);
        long long39 = atomikosProperties32.getMaxTimeout();
        boolean boolean40 = properties18.containsValue((java.lang.Object) atomikosProperties32);
        java.util.Enumeration<java.lang.Object> objEnumeration41 = properties18.elements();
        boolean boolean42 = properties7.contains((java.lang.Object) objEnumeration41);
        properties5.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties7);
        java.lang.Object obj44 = properties5.clone();
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(objEnumeration3);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNull(obj9);
        org.junit.Assert.assertNotNull(objEnumeration10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNotNull(objSet12);
        org.junit.Assert.assertNotNull(objEnumeration13);
        org.junit.Assert.assertNotNull(objEntrySet14);
        org.junit.Assert.assertNull(obj17);
        org.junit.Assert.assertNotNull(objCollection19);
        org.junit.Assert.assertNotNull(objEnumeration20);
        org.junit.Assert.assertNull(obj23);
        org.junit.Assert.assertNotNull(objEnumeration24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(objSet26);
        org.junit.Assert.assertNotNull(objEnumeration27);
        org.junit.Assert.assertNotNull(objEntrySet28);
        org.junit.Assert.assertNull(obj29);
        org.junit.Assert.assertNull(str31);
        org.junit.Assert.assertTrue("'" + long39 + "' != '" + 300000L + "'", long39 == 300000L);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(objEnumeration41);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(obj44);
        org.junit.Assert.assertEquals(obj44.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj44), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj44), "{}");
    }

    @Test
    public void test7573() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7573");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration3 = properties0.elements();
        boolean boolean4 = properties0.isEmpty();
        java.util.Set<java.lang.Object> objSet5 = properties0.keySet();
        java.lang.Object obj6 = properties0.clone();
        java.util.Properties properties7 = new java.util.Properties();
        java.util.Properties properties8 = new java.util.Properties();
        java.lang.Object obj10 = properties8.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet11 = properties8.stringPropertyNames();
        boolean boolean12 = properties7.containsValue((java.lang.Object) properties8);
        java.util.Collection<java.lang.Object> objCollection13 = properties7.values();
        java.lang.Object obj14 = properties7.clone();
        java.util.Properties properties15 = new java.util.Properties();
        java.lang.Object obj17 = properties15.remove((java.lang.Object) 0.0d);
        boolean boolean19 = properties15.containsValue((java.lang.Object) "hi!");
        java.lang.Object obj22 = properties15.put((java.lang.Object) (byte) -1, (java.lang.Object) 100L);
        java.util.Properties properties23 = new java.util.Properties();
        java.util.Properties properties24 = new java.util.Properties();
        java.lang.Object obj26 = properties24.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet27 = properties24.stringPropertyNames();
        boolean boolean28 = properties23.containsValue((java.lang.Object) properties24);
        java.util.Collection<java.lang.Object> objCollection29 = properties23.values();
        java.util.Properties properties31 = new java.util.Properties();
        java.lang.Object obj33 = properties31.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration34 = properties31.elements();
        boolean boolean35 = properties31.isEmpty();
        java.util.Set<java.lang.Object> objSet36 = properties31.keySet();
        java.lang.Object obj37 = properties23.putIfAbsent((java.lang.Object) "hi!", (java.lang.Object) objSet36);
        java.util.Set<java.lang.Object> objSet38 = properties23.keySet();
        boolean boolean39 = properties15.containsKey((java.lang.Object) properties23);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties40 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties40.setSerialJtaTransactions(false);
        boolean boolean43 = atomikosProperties40.isSerialJtaTransactions();
        atomikosProperties40.setCheckpointInterval((long) 10);
        atomikosProperties40.setForceShutdownOnVmExit(true);
        boolean boolean48 = properties0.replace((java.lang.Object) properties7, (java.lang.Object) properties15, (java.lang.Object) true);
        java.lang.Object obj51 = properties15.setProperty("{=hi!}", "tmlog");
        java.util.Properties properties52 = new java.util.Properties();
        java.lang.Object obj54 = properties52.remove((java.lang.Object) 0.0d);
        boolean boolean56 = properties52.containsValue((java.lang.Object) "hi!");
        java.lang.Object obj59 = properties52.put((java.lang.Object) (byte) -1, (java.lang.Object) 100L);
        java.util.Properties properties60 = new java.util.Properties();
        java.util.Properties properties61 = new java.util.Properties();
        java.lang.Object obj63 = properties61.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet64 = properties61.stringPropertyNames();
        boolean boolean65 = properties60.containsValue((java.lang.Object) properties61);
        java.util.Collection<java.lang.Object> objCollection66 = properties60.values();
        java.util.Properties properties68 = new java.util.Properties();
        java.lang.Object obj70 = properties68.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration71 = properties68.elements();
        boolean boolean72 = properties68.isEmpty();
        java.util.Set<java.lang.Object> objSet73 = properties68.keySet();
        java.lang.Object obj74 = properties60.putIfAbsent((java.lang.Object) "hi!", (java.lang.Object) objSet73);
        java.util.Set<java.lang.Object> objSet75 = properties60.keySet();
        boolean boolean76 = properties52.containsKey((java.lang.Object) properties60);
        java.util.Enumeration<java.lang.Object> objEnumeration77 = properties60.elements();
        java.util.Properties properties78 = new java.util.Properties();
        java.lang.Object obj80 = properties78.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration81 = properties78.elements();
        boolean boolean82 = properties78.isEmpty();
        java.util.Set<java.lang.Object> objSet83 = properties78.keySet();
        boolean boolean84 = properties78.isEmpty();
        boolean boolean85 = properties60.contains((java.lang.Object) boolean84);
        java.util.Enumeration<?> wildcardEnumeration86 = properties60.propertyNames();
        boolean boolean87 = properties15.equals((java.lang.Object) properties60);
        java.lang.Object obj88 = properties15.clone();
        boolean boolean89 = properties15.isEmpty();
        // The following exception was thrown during execution in test generation
        try {
            java.util.Enumeration<?> wildcardEnumeration90 = properties15.propertyNames();
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: java.lang.Byte cannot be cast to java.lang.String");
        } catch (java.lang.ClassCastException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(objEnumeration3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(objSet5);
        org.junit.Assert.assertNotNull(obj6);
        org.junit.Assert.assertEquals(obj6.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj6), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj6), "{}");
        org.junit.Assert.assertNull(obj10);
        org.junit.Assert.assertNotNull(strSet11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(objCollection13);
        org.junit.Assert.assertNotNull(obj14);
        org.junit.Assert.assertEquals(obj14.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj14), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj14), "{}");
        org.junit.Assert.assertNull(obj17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNull(obj22);
        org.junit.Assert.assertNull(obj26);
        org.junit.Assert.assertNotNull(strSet27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(objCollection29);
        org.junit.Assert.assertNull(obj33);
        org.junit.Assert.assertNotNull(objEnumeration34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertNotNull(objSet36);
        org.junit.Assert.assertNull(obj37);
        org.junit.Assert.assertNotNull(objSet38);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNull(obj51);
        org.junit.Assert.assertNull(obj54);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertNull(obj59);
        org.junit.Assert.assertNull(obj63);
        org.junit.Assert.assertNotNull(strSet64);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertNotNull(objCollection66);
        org.junit.Assert.assertNull(obj70);
        org.junit.Assert.assertNotNull(objEnumeration71);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + true + "'", boolean72 == true);
        org.junit.Assert.assertNotNull(objSet73);
        org.junit.Assert.assertNull(obj74);
        org.junit.Assert.assertNotNull(objSet75);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
        org.junit.Assert.assertNotNull(objEnumeration77);
        org.junit.Assert.assertNull(obj80);
        org.junit.Assert.assertNotNull(objEnumeration81);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + true + "'", boolean82 == true);
        org.junit.Assert.assertNotNull(objSet83);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + true + "'", boolean84 == true);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + false + "'", boolean85 == false);
        org.junit.Assert.assertNotNull(wildcardEnumeration86);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + false + "'", boolean87 == false);
        org.junit.Assert.assertNotNull(obj88);
// flaky:         org.junit.Assert.assertEquals(obj88.toString(), "{{=hi!}=tmlog, -1=100}");
// flaky:         org.junit.Assert.assertEquals(java.lang.String.valueOf(obj88), "{{=hi!}=tmlog, -1=100}");
// flaky:         org.junit.Assert.assertEquals(java.util.Objects.toString(obj88), "{{=hi!}=tmlog, -1=100}");
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + false + "'", boolean89 == false);
    }

    @Test
    public void test7574() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7574");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration3 = properties0.elements();
        boolean boolean4 = properties0.isEmpty();
        java.util.Set<java.lang.Object> objSet5 = properties0.keySet();
        java.lang.Object obj6 = properties0.clone();
        java.util.Properties properties7 = new java.util.Properties();
        java.util.Properties properties8 = new java.util.Properties();
        java.lang.Object obj10 = properties8.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet11 = properties8.stringPropertyNames();
        boolean boolean12 = properties7.containsValue((java.lang.Object) properties8);
        java.util.Collection<java.lang.Object> objCollection13 = properties7.values();
        java.lang.Object obj14 = properties7.clone();
        java.util.Properties properties15 = new java.util.Properties();
        java.lang.Object obj17 = properties15.remove((java.lang.Object) 0.0d);
        boolean boolean19 = properties15.containsValue((java.lang.Object) "hi!");
        java.lang.Object obj22 = properties15.put((java.lang.Object) (byte) -1, (java.lang.Object) 100L);
        java.util.Properties properties23 = new java.util.Properties();
        java.util.Properties properties24 = new java.util.Properties();
        java.lang.Object obj26 = properties24.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet27 = properties24.stringPropertyNames();
        boolean boolean28 = properties23.containsValue((java.lang.Object) properties24);
        java.util.Collection<java.lang.Object> objCollection29 = properties23.values();
        java.util.Properties properties31 = new java.util.Properties();
        java.lang.Object obj33 = properties31.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration34 = properties31.elements();
        boolean boolean35 = properties31.isEmpty();
        java.util.Set<java.lang.Object> objSet36 = properties31.keySet();
        java.lang.Object obj37 = properties23.putIfAbsent((java.lang.Object) "hi!", (java.lang.Object) objSet36);
        java.util.Set<java.lang.Object> objSet38 = properties23.keySet();
        boolean boolean39 = properties15.containsKey((java.lang.Object) properties23);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties40 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties40.setSerialJtaTransactions(false);
        boolean boolean43 = atomikosProperties40.isSerialJtaTransactions();
        atomikosProperties40.setCheckpointInterval((long) 10);
        atomikosProperties40.setForceShutdownOnVmExit(true);
        boolean boolean48 = properties0.replace((java.lang.Object) properties7, (java.lang.Object) properties15, (java.lang.Object) true);
        java.util.Enumeration<java.lang.Object> objEnumeration49 = properties15.elements();
        java.lang.String str52 = properties15.getProperty("{[com.atomikos.icatch.enable_logging, com.atomikos.icatch.force_shutdown_on_vm_exit, com.atomikos.icatch.checkpoint_interval, com.atomikos.icatch.serial_jta_transactions, com.atomikos.icatch.default_jta_timeout, com.atomikos.icatch.max_timeout, com.atomikos.icatch.threaded_2pc, com.atomikos.icatch.max_actives, com.atomikos.icatch.log_base_name]=false}", "{{hi!=[]}={hi!=[], {}={}}}");
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(objEnumeration3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(objSet5);
        org.junit.Assert.assertNotNull(obj6);
        org.junit.Assert.assertEquals(obj6.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj6), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj6), "{}");
        org.junit.Assert.assertNull(obj10);
        org.junit.Assert.assertNotNull(strSet11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(objCollection13);
        org.junit.Assert.assertNotNull(obj14);
        org.junit.Assert.assertEquals(obj14.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj14), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj14), "{}");
        org.junit.Assert.assertNull(obj17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNull(obj22);
        org.junit.Assert.assertNull(obj26);
        org.junit.Assert.assertNotNull(strSet27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(objCollection29);
        org.junit.Assert.assertNull(obj33);
        org.junit.Assert.assertNotNull(objEnumeration34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertNotNull(objSet36);
        org.junit.Assert.assertNull(obj37);
        org.junit.Assert.assertNotNull(objSet38);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNotNull(objEnumeration49);
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "{{hi!=[]}={hi!=[], {}={}}}" + "'", str52, "{{hi!=[]}={hi!=[], {}={}}}");
    }

    @Test
    public void test7575() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7575");
        java.util.Properties properties0 = new java.util.Properties();
        boolean boolean2 = properties0.contains((java.lang.Object) 100.0d);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties3 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties3.setSerialJtaTransactions(false);
        atomikosProperties3.setThreadedTwoPhaseCommit(true);
        atomikosProperties3.setSerialJtaTransactions(false);
        java.lang.String str10 = atomikosProperties3.getService();
        boolean boolean11 = properties0.containsKey((java.lang.Object) atomikosProperties3);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties12 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties12.setSerialJtaTransactions(false);
        atomikosProperties12.setThreadedTwoPhaseCommit(true);
        atomikosProperties12.setMaxTimeout((long) '#');
        boolean boolean19 = atomikosProperties12.isEnableLogging();
        atomikosProperties12.setCheckpointInterval((long) 100);
        atomikosProperties12.setForceShutdownOnVmExit(false);
        boolean boolean24 = properties0.containsValue((java.lang.Object) atomikosProperties12);
        atomikosProperties12.setService("{=hi!}");
        atomikosProperties12.setDefaultJtaTimeout(0L);
        atomikosProperties12.setThreadedTwoPhaseCommit(true);
        atomikosProperties12.setLogBaseName("{hi!=[]}");
        atomikosProperties12.setEnableLogging(true);
        atomikosProperties12.setCheckpointInterval((long) 9);
        atomikosProperties12.setLogBaseDir("{=hi!}");
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
    }

    @Test
    public void test7576() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7576");
        java.util.Properties properties0 = new java.util.Properties();
        java.util.Collection<java.lang.Object> objCollection1 = properties0.values();
        java.util.Properties properties2 = new java.util.Properties();
        java.lang.Object obj4 = properties2.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet5 = properties2.stringPropertyNames();
        java.util.Properties properties6 = new java.util.Properties();
        java.util.Properties properties7 = new java.util.Properties();
        java.lang.Object obj9 = properties7.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet10 = properties7.stringPropertyNames();
        boolean boolean11 = properties6.containsValue((java.lang.Object) properties7);
        java.util.Collection<java.lang.Object> objCollection12 = properties6.values();
        java.util.Enumeration<?> wildcardEnumeration13 = properties6.propertyNames();
        java.lang.Object obj15 = properties2.put((java.lang.Object) wildcardEnumeration13, (java.lang.Object) 10.0d);
        boolean boolean16 = properties0.equals((java.lang.Object) 10.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration17 = properties0.keys();
        java.util.Properties properties18 = new java.util.Properties();
        java.lang.Object obj20 = properties18.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration21 = properties18.elements();
        int int22 = properties18.size();
        java.util.Properties properties23 = new java.util.Properties();
        java.lang.Object obj25 = properties23.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration26 = properties23.elements();
        boolean boolean27 = properties23.isEmpty();
        java.util.Set<java.lang.Object> objSet28 = properties23.keySet();
        boolean boolean29 = properties18.containsKey((java.lang.Object) objSet28);
        java.util.Enumeration<java.lang.Object> objEnumeration30 = properties18.keys();
        java.util.Properties properties31 = new java.util.Properties();
        java.lang.Object obj33 = properties31.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration34 = properties31.elements();
        boolean boolean35 = properties31.isEmpty();
        java.util.Set<java.lang.Object> objSet36 = properties31.keySet();
        java.util.Enumeration<java.lang.Object> objEnumeration37 = properties31.keys();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet38 = properties31.entrySet();
        boolean boolean40 = properties18.remove((java.lang.Object) properties31, (java.lang.Object) 1.0f);
        java.lang.Object obj41 = properties31.clone();
        java.util.Collection<java.lang.Object> objCollection42 = properties31.values();
        java.util.Collection<java.lang.Object> objCollection43 = properties31.values();
        java.lang.String str44 = properties31.toString();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties45 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties45.setSerialJtaTransactions(false);
        atomikosProperties45.setThreadedTwoPhaseCommit(true);
        atomikosProperties45.setMaxTimeout((long) '#');
        boolean boolean52 = atomikosProperties45.isEnableLogging();
        atomikosProperties45.setMaxActives((int) '#');
        atomikosProperties45.setSerialJtaTransactions(true);
        atomikosProperties45.setThreadedTwoPhaseCommit(true);
        java.lang.Class<?> wildcardClass59 = atomikosProperties45.getClass();
        boolean boolean60 = properties31.contains((java.lang.Object) atomikosProperties45);
        boolean boolean61 = properties31.isEmpty();
        boolean boolean62 = properties0.containsValue((java.lang.Object) properties31);
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet63 = properties0.entrySet();
        java.io.InputStream inputStream64 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties0.load(inputStream64);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(objCollection1);
        org.junit.Assert.assertNull(obj4);
        org.junit.Assert.assertNotNull(strSet5);
        org.junit.Assert.assertNull(obj9);
        org.junit.Assert.assertNotNull(strSet10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(objCollection12);
        org.junit.Assert.assertNotNull(wildcardEnumeration13);
        org.junit.Assert.assertNull(obj15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(objEnumeration17);
        org.junit.Assert.assertNull(obj20);
        org.junit.Assert.assertNotNull(objEnumeration21);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 0 + "'", int22 == 0);
        org.junit.Assert.assertNull(obj25);
        org.junit.Assert.assertNotNull(objEnumeration26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNotNull(objSet28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(objEnumeration30);
        org.junit.Assert.assertNull(obj33);
        org.junit.Assert.assertNotNull(objEnumeration34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertNotNull(objSet36);
        org.junit.Assert.assertNotNull(objEnumeration37);
        org.junit.Assert.assertNotNull(objEntrySet38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(obj41);
        org.junit.Assert.assertEquals(obj41.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj41), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj41), "{}");
        org.junit.Assert.assertNotNull(objCollection42);
        org.junit.Assert.assertNotNull(objCollection43);
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "{}" + "'", str44, "{}");
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertNotNull(wildcardClass59);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertNotNull(objEntrySet63);
    }

    @Test
    public void test7577() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7577");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setSerialJtaTransactions(false);
        atomikosProperties0.setThreadedTwoPhaseCommit(true);
        atomikosProperties0.setMaxTimeout((long) '#');
        boolean boolean7 = atomikosProperties0.isEnableLogging();
        atomikosProperties0.setCheckpointInterval((long) (byte) -1);
        atomikosProperties0.setEnableLogging(true);
        atomikosProperties0.setLogBaseName("{}");
        atomikosProperties0.setLogBaseName("tmlog");
        atomikosProperties0.setSerialJtaTransactions(true);
        boolean boolean18 = atomikosProperties0.isEnableLogging();
        long long19 = atomikosProperties0.getDefaultJtaTimeout();
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + long19 + "' != '" + 10000L + "'", long19 == 10000L);
    }

    @Test
    public void test7578() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7578");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration3 = properties0.elements();
        boolean boolean4 = properties0.isEmpty();
        java.util.Set<java.lang.Object> objSet5 = properties0.keySet();
        boolean boolean6 = properties0.isEmpty();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet7 = properties0.entrySet();
        java.util.Properties properties8 = new java.util.Properties();
        java.lang.Object obj10 = properties8.remove((java.lang.Object) 0.0d);
        boolean boolean11 = properties8.isEmpty();
        java.lang.Object obj14 = properties8.setProperty("", "hi!");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties15 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties15.setSerialJtaTransactions(false);
        boolean boolean18 = properties0.remove((java.lang.Object) properties8, (java.lang.Object) atomikosProperties15);
        java.lang.String str19 = atomikosProperties15.getTransactionManagerUniqueName();
        atomikosProperties15.setMaxActives(50);
        java.lang.String str22 = atomikosProperties15.getLogBaseDir();
        java.lang.String str23 = atomikosProperties15.getLogBaseDir();
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(objEnumeration3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(objSet5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(objEntrySet7);
        org.junit.Assert.assertNull(obj10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNull(obj14);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNull(str19);
        org.junit.Assert.assertNull(str22);
        org.junit.Assert.assertNull(str23);
    }

    @Test
    public void test7579() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7579");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setSerialJtaTransactions(false);
        atomikosProperties0.setThreadedTwoPhaseCommit(true);
        atomikosProperties0.setMaxTimeout((long) '#');
        boolean boolean7 = atomikosProperties0.isEnableLogging();
        atomikosProperties0.setCheckpointInterval((long) (byte) -1);
        atomikosProperties0.setMaxActives((int) (byte) 100);
        atomikosProperties0.setTransactionManagerUniqueName("{=hi!}");
        java.lang.String str14 = atomikosProperties0.getLogBaseDir();
        atomikosProperties0.setForceShutdownOnVmExit(false);
        atomikosProperties0.setLogBaseName("{{}={}}");
        int int19 = atomikosProperties0.getMaxActives();
        atomikosProperties0.setLogBaseDir("{[com.atomikos.icatch.enable_logging, com.atomikos.icatch.force_shutdown_on_vm_exit, com.atomikos.icatch.checkpoint_interval, com.atomikos.icatch.serial_jta_transactions, com.atomikos.icatch.default_jta_timeout, com.atomikos.icatch.max_timeout, com.atomikos.icatch.threaded_2pc, com.atomikos.icatch.max_actives, com.atomikos.icatch.log_base_name]=false}");
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 100 + "'", int19 == 100);
    }

    @Test
    public void test7580() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7580");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        boolean boolean3 = properties0.isEmpty();
        java.lang.Object obj6 = properties0.setProperty("", "hi!");
        java.util.Properties properties7 = new java.util.Properties();
        java.lang.Object obj9 = properties7.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration10 = properties7.elements();
        boolean boolean11 = properties7.isEmpty();
        java.util.Set<java.lang.Object> objSet12 = properties7.keySet();
        boolean boolean13 = properties7.isEmpty();
        java.util.Properties properties14 = new java.util.Properties();
        java.util.Collection<java.lang.Object> objCollection15 = properties14.values();
        java.util.Enumeration<java.lang.Object> objEnumeration16 = properties14.keys();
        java.lang.Object obj17 = properties7.remove((java.lang.Object) properties14);
        java.lang.Object obj18 = properties0.get((java.lang.Object) properties14);
        boolean boolean19 = properties0.isEmpty();
        java.util.Properties properties20 = new java.util.Properties();
        java.lang.Object obj22 = properties20.remove((java.lang.Object) 0.0d);
        boolean boolean23 = properties20.isEmpty();
        java.lang.Object obj26 = properties20.setProperty("", "hi!");
        java.util.Properties properties27 = new java.util.Properties();
        java.lang.Object obj29 = properties27.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration30 = properties27.elements();
        boolean boolean31 = properties27.isEmpty();
        java.util.Set<java.lang.Object> objSet32 = properties27.keySet();
        boolean boolean33 = properties27.isEmpty();
        java.util.Properties properties34 = new java.util.Properties();
        java.util.Collection<java.lang.Object> objCollection35 = properties34.values();
        java.util.Enumeration<java.lang.Object> objEnumeration36 = properties34.keys();
        java.lang.Object obj37 = properties27.remove((java.lang.Object) properties34);
        java.lang.Object obj38 = properties20.get((java.lang.Object) properties34);
        java.util.Enumeration<java.lang.Object> objEnumeration39 = properties34.keys();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties40 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties40.setSerialJtaTransactions(false);
        atomikosProperties40.setThreadedTwoPhaseCommit(true);
        atomikosProperties40.setMaxTimeout((long) '#');
        boolean boolean47 = atomikosProperties40.isForceShutdownOnVmExit();
        long long48 = atomikosProperties40.getCheckpointInterval();
        java.lang.Object obj49 = new java.lang.Object();
        boolean boolean51 = properties34.replace((java.lang.Object) long48, obj49, (java.lang.Object) "hi!");
        java.util.Set<java.lang.Object> objSet52 = properties34.keySet();
        java.util.Properties properties53 = new java.util.Properties();
        java.util.Properties properties54 = new java.util.Properties();
        java.lang.Object obj56 = properties54.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet57 = properties54.stringPropertyNames();
        boolean boolean58 = properties53.containsValue((java.lang.Object) properties54);
        java.util.Collection<java.lang.Object> objCollection59 = properties53.values();
        java.util.Enumeration<?> wildcardEnumeration60 = properties53.propertyNames();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet61 = properties53.entrySet();
        properties34.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties53);
        java.util.Enumeration<java.lang.Object> objEnumeration63 = properties34.elements();
        java.lang.Object obj64 = properties34.clone();
        java.util.Enumeration<?> wildcardEnumeration65 = properties34.propertyNames();
        boolean boolean66 = properties0.containsKey((java.lang.Object) wildcardEnumeration65);
        java.util.Properties properties67 = new java.util.Properties();
        java.util.Properties properties68 = new java.util.Properties();
        java.lang.Object obj70 = properties68.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet71 = properties68.stringPropertyNames();
        boolean boolean72 = properties67.containsValue((java.lang.Object) properties68);
        java.util.Enumeration<?> wildcardEnumeration73 = properties67.propertyNames();
        java.lang.Object obj74 = properties67.clone();
        boolean boolean75 = properties0.containsValue((java.lang.Object) properties67);
        java.util.Set<java.lang.Object> objSet76 = properties0.keySet();
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNull(obj6);
        org.junit.Assert.assertNull(obj9);
        org.junit.Assert.assertNotNull(objEnumeration10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNotNull(objSet12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(objCollection15);
        org.junit.Assert.assertNotNull(objEnumeration16);
        org.junit.Assert.assertNull(obj17);
        org.junit.Assert.assertNull(obj18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNull(obj22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNull(obj26);
        org.junit.Assert.assertNull(obj29);
        org.junit.Assert.assertNotNull(objEnumeration30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNotNull(objSet32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNotNull(objCollection35);
        org.junit.Assert.assertNotNull(objEnumeration36);
        org.junit.Assert.assertNull(obj37);
        org.junit.Assert.assertNull(obj38);
        org.junit.Assert.assertNotNull(objEnumeration39);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertTrue("'" + long48 + "' != '" + 500L + "'", long48 == 500L);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertNotNull(objSet52);
        org.junit.Assert.assertNull(obj56);
        org.junit.Assert.assertNotNull(strSet57);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertNotNull(objCollection59);
        org.junit.Assert.assertNotNull(wildcardEnumeration60);
        org.junit.Assert.assertNotNull(objEntrySet61);
        org.junit.Assert.assertNotNull(objEnumeration63);
        org.junit.Assert.assertNotNull(obj64);
        org.junit.Assert.assertEquals(obj64.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj64), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj64), "{}");
        org.junit.Assert.assertNotNull(wildcardEnumeration65);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertNull(obj70);
        org.junit.Assert.assertNotNull(strSet71);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertNotNull(wildcardEnumeration73);
        org.junit.Assert.assertNotNull(obj74);
        org.junit.Assert.assertEquals(obj74.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj74), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj74), "{}");
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
        org.junit.Assert.assertNotNull(objSet76);
    }

    @Test
    public void test7581() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7581");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        boolean boolean3 = properties0.isEmpty();
        java.util.Enumeration<java.lang.Object> objEnumeration4 = properties0.elements();
        java.lang.Object obj7 = properties0.replace((java.lang.Object) 1, (java.lang.Object) 1);
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet8 = properties0.entrySet();
        java.util.Properties properties9 = new java.util.Properties(properties0);
        boolean boolean10 = properties9.isEmpty();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet11 = properties9.entrySet();
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(objEnumeration4);
        org.junit.Assert.assertNull(obj7);
        org.junit.Assert.assertNotNull(objEntrySet8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(objEntrySet11);
    }

    @Test
    public void test7582() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7582");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet3 = properties0.stringPropertyNames();
        java.lang.String str4 = properties0.toString();
        java.util.Properties properties5 = new java.util.Properties();
        java.lang.Object obj7 = properties5.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration8 = properties5.elements();
        boolean boolean9 = properties5.isEmpty();
        java.lang.Object obj12 = properties5.setProperty("tmlog", "");
        properties0.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties5);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties14 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties14.setSerialJtaTransactions(false);
        boolean boolean17 = atomikosProperties14.isSerialJtaTransactions();
        atomikosProperties14.setTransactionManagerUniqueName("hi!");
        java.lang.String str20 = atomikosProperties14.getLogBaseName();
        java.lang.String str21 = atomikosProperties14.getLogBaseName();
        boolean boolean22 = atomikosProperties14.isForceShutdownOnVmExit();
        long long23 = atomikosProperties14.getCheckpointInterval();
        boolean boolean24 = atomikosProperties14.isThreadedTwoPhaseCommit();
        java.lang.String str25 = atomikosProperties14.getService();
        boolean boolean26 = properties0.equals((java.lang.Object) str25);
        java.lang.String str27 = properties0.toString();
        java.io.OutputStream outputStream28 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties0.store(outputStream28, "{true=true}");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(strSet3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "{}" + "'", str4, "{}");
        org.junit.Assert.assertNull(obj7);
        org.junit.Assert.assertNotNull(objEnumeration8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertNull(obj12);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "tmlog" + "'", str20, "tmlog");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "tmlog" + "'", str21, "tmlog");
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + long23 + "' != '" + 500L + "'", long23 == 500L);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNull(str25);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "{tmlog=}" + "'", str27, "{tmlog=}");
    }

    @Test
    public void test7583() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7583");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration3 = properties0.elements();
        boolean boolean4 = properties0.isEmpty();
        java.util.Set<java.lang.Object> objSet5 = properties0.keySet();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties6 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties6.setSerialJtaTransactions(false);
        atomikosProperties6.setThreadedTwoPhaseCommit(true);
        atomikosProperties6.setThreadedTwoPhaseCommit(true);
        java.util.Properties properties13 = atomikosProperties6.asProperties();
        int int14 = atomikosProperties6.getMaxActives();
        java.util.Properties properties15 = new java.util.Properties();
        java.lang.Object obj17 = properties15.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration18 = properties15.elements();
        boolean boolean19 = properties15.isEmpty();
        java.util.Set<java.lang.Object> objSet20 = properties15.keySet();
        boolean boolean22 = properties15.containsKey((java.lang.Object) (-1.0f));
        java.lang.Object obj23 = properties0.put((java.lang.Object) atomikosProperties6, (java.lang.Object) properties15);
        java.lang.String str24 = properties0.toString();
        java.util.Properties properties25 = new java.util.Properties();
        java.lang.Object obj27 = properties25.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration28 = properties25.elements();
        boolean boolean29 = properties25.isEmpty();
        java.util.Set<java.lang.Object> objSet30 = properties25.keySet();
        java.util.Enumeration<java.lang.Object> objEnumeration31 = properties25.keys();
        java.util.Enumeration<java.lang.Object> objEnumeration32 = properties25.elements();
        java.util.Properties properties33 = new java.util.Properties();
        java.lang.Object obj35 = properties33.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration36 = properties33.elements();
        boolean boolean37 = properties33.isEmpty();
        java.util.Set<java.lang.Object> objSet38 = properties33.keySet();
        java.util.Enumeration<java.lang.Object> objEnumeration39 = properties33.keys();
        java.lang.String str41 = properties33.getProperty("hi!");
        java.lang.String str43 = properties33.getProperty("");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties44 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties44.setSerialJtaTransactions(false);
        atomikosProperties44.setThreadedTwoPhaseCommit(true);
        atomikosProperties44.setEnableLogging(false);
        boolean boolean51 = properties33.containsKey((java.lang.Object) atomikosProperties44);
        boolean boolean52 = properties25.containsKey((java.lang.Object) boolean51);
        java.util.Properties properties53 = new java.util.Properties();
        java.lang.Object obj55 = properties53.remove((java.lang.Object) 0.0d);
        boolean boolean56 = properties53.isEmpty();
        java.lang.Object obj59 = properties53.setProperty("", "hi!");
        int int60 = properties53.size();
        java.lang.Object obj61 = properties0.replace((java.lang.Object) properties25, (java.lang.Object) properties53);
        java.util.Properties properties62 = new java.util.Properties(properties0);
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet63 = properties62.entrySet();
        boolean boolean64 = properties62.isEmpty();
        int int65 = properties62.size();
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(objEnumeration3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(objSet5);
        org.junit.Assert.assertNotNull(properties13);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 50 + "'", int14 == 50);
        org.junit.Assert.assertNull(obj17);
        org.junit.Assert.assertNotNull(objEnumeration18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(objSet20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNull(obj23);
        org.junit.Assert.assertNull(obj27);
        org.junit.Assert.assertNotNull(objEnumeration28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNotNull(objSet30);
        org.junit.Assert.assertNotNull(objEnumeration31);
        org.junit.Assert.assertNotNull(objEnumeration32);
        org.junit.Assert.assertNull(obj35);
        org.junit.Assert.assertNotNull(objEnumeration36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertNotNull(objSet38);
        org.junit.Assert.assertNotNull(objEnumeration39);
        org.junit.Assert.assertNull(str41);
        org.junit.Assert.assertNull(str43);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNull(obj55);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertNull(obj59);
        org.junit.Assert.assertTrue("'" + int60 + "' != '" + 1 + "'", int60 == 1);
        org.junit.Assert.assertNull(obj61);
        org.junit.Assert.assertNotNull(objEntrySet63);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64 == true);
        org.junit.Assert.assertTrue("'" + int65 + "' != '" + 0 + "'", int65 == 0);
    }

    @Test
    public void test7584() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7584");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        boolean boolean3 = properties0.isEmpty();
        java.lang.Object obj6 = properties0.setProperty("", "hi!");
        java.util.Properties properties7 = new java.util.Properties();
        java.lang.Object obj9 = properties7.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration10 = properties7.elements();
        boolean boolean11 = properties7.isEmpty();
        java.util.Set<java.lang.Object> objSet12 = properties7.keySet();
        boolean boolean13 = properties7.isEmpty();
        java.util.Properties properties14 = new java.util.Properties();
        java.util.Collection<java.lang.Object> objCollection15 = properties14.values();
        java.util.Enumeration<java.lang.Object> objEnumeration16 = properties14.keys();
        java.lang.Object obj17 = properties7.remove((java.lang.Object) properties14);
        java.lang.Object obj18 = properties0.get((java.lang.Object) properties14);
        java.util.Enumeration<java.lang.Object> objEnumeration19 = properties14.keys();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties20 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties20.setSerialJtaTransactions(false);
        atomikosProperties20.setThreadedTwoPhaseCommit(true);
        atomikosProperties20.setMaxTimeout((long) '#');
        boolean boolean27 = atomikosProperties20.isForceShutdownOnVmExit();
        long long28 = atomikosProperties20.getCheckpointInterval();
        java.lang.Object obj29 = new java.lang.Object();
        boolean boolean31 = properties14.replace((java.lang.Object) long28, obj29, (java.lang.Object) "hi!");
        java.util.Set<java.lang.Object> objSet32 = properties14.keySet();
        java.util.Properties properties33 = new java.util.Properties();
        java.util.Properties properties34 = new java.util.Properties();
        java.lang.Object obj36 = properties34.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet37 = properties34.stringPropertyNames();
        boolean boolean38 = properties33.containsValue((java.lang.Object) properties34);
        java.util.Collection<java.lang.Object> objCollection39 = properties33.values();
        java.util.Enumeration<?> wildcardEnumeration40 = properties33.propertyNames();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet41 = properties33.entrySet();
        properties14.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties33);
        java.util.Enumeration<java.lang.Object> objEnumeration43 = properties14.elements();
        java.lang.Object obj44 = properties14.clone();
        java.lang.String str46 = properties14.getProperty("{true=true}");
        java.util.Properties properties47 = new java.util.Properties();
        java.lang.Object obj49 = properties47.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration50 = properties47.elements();
        boolean boolean51 = properties47.isEmpty();
        java.util.Set<java.lang.Object> objSet52 = properties47.keySet();
        java.util.Enumeration<java.lang.Object> objEnumeration53 = properties47.keys();
        java.lang.String str55 = properties47.getProperty("hi!");
        java.util.Enumeration<?> wildcardEnumeration56 = properties47.propertyNames();
        int int57 = properties47.size();
        boolean boolean58 = properties14.contains((java.lang.Object) properties47);
        java.lang.Object obj59 = properties47.clone();
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNull(obj6);
        org.junit.Assert.assertNull(obj9);
        org.junit.Assert.assertNotNull(objEnumeration10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNotNull(objSet12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(objCollection15);
        org.junit.Assert.assertNotNull(objEnumeration16);
        org.junit.Assert.assertNull(obj17);
        org.junit.Assert.assertNull(obj18);
        org.junit.Assert.assertNotNull(objEnumeration19);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertTrue("'" + long28 + "' != '" + 500L + "'", long28 == 500L);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(objSet32);
        org.junit.Assert.assertNull(obj36);
        org.junit.Assert.assertNotNull(strSet37);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(objCollection39);
        org.junit.Assert.assertNotNull(wildcardEnumeration40);
        org.junit.Assert.assertNotNull(objEntrySet41);
        org.junit.Assert.assertNotNull(objEnumeration43);
        org.junit.Assert.assertNotNull(obj44);
        org.junit.Assert.assertEquals(obj44.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj44), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj44), "{}");
        org.junit.Assert.assertNull(str46);
        org.junit.Assert.assertNull(obj49);
        org.junit.Assert.assertNotNull(objEnumeration50);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertNotNull(objSet52);
        org.junit.Assert.assertNotNull(objEnumeration53);
        org.junit.Assert.assertNull(str55);
        org.junit.Assert.assertNotNull(wildcardEnumeration56);
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + 0 + "'", int57 == 0);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertNotNull(obj59);
        org.junit.Assert.assertEquals(obj59.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj59), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj59), "{}");
    }

    @Test
    public void test7585() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7585");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setSerialJtaTransactions(false);
        atomikosProperties0.setThreadedTwoPhaseCommit(true);
        java.lang.String str5 = atomikosProperties0.getLogBaseName();
        atomikosProperties0.setCheckpointInterval((long) 0);
        boolean boolean8 = atomikosProperties0.isEnableLogging();
        boolean boolean9 = atomikosProperties0.isSerialJtaTransactions();
        java.lang.String str10 = atomikosProperties0.getService();
        atomikosProperties0.setEnableLogging(false);
        java.lang.String str13 = atomikosProperties0.getLogBaseDir();
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "tmlog" + "'", str5, "tmlog");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertNull(str13);
    }

    @Test
    public void test7586() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7586");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setSerialJtaTransactions(false);
        atomikosProperties0.setThreadedTwoPhaseCommit(true);
        atomikosProperties0.setMaxTimeout((long) '#');
        boolean boolean7 = atomikosProperties0.isEnableLogging();
        atomikosProperties0.setCheckpointInterval((long) (byte) -1);
        atomikosProperties0.setCheckpointInterval(0L);
        java.lang.String str12 = atomikosProperties0.getService();
        boolean boolean13 = atomikosProperties0.isForceShutdownOnVmExit();
        java.util.Properties properties14 = atomikosProperties0.asProperties();
        atomikosProperties0.setTransactionManagerUniqueName("");
        atomikosProperties0.setService("{-1=100}");
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(properties14);
    }

    @Test
    public void test7587() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7587");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration3 = properties0.elements();
        boolean boolean4 = properties0.isEmpty();
        java.util.Set<java.lang.Object> objSet5 = properties0.keySet();
        java.util.Enumeration<java.lang.Object> objEnumeration6 = properties0.keys();
        java.lang.String str8 = properties0.getProperty("hi!");
        java.util.Properties properties10 = new java.util.Properties();
        java.lang.Object obj12 = properties10.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration13 = properties10.elements();
        int int14 = properties10.size();
        java.util.Properties properties15 = new java.util.Properties(properties10);
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet16 = properties10.entrySet();
        java.util.Properties properties17 = new java.util.Properties();
        java.util.Properties properties18 = new java.util.Properties();
        java.lang.Object obj20 = properties18.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet21 = properties18.stringPropertyNames();
        boolean boolean22 = properties17.containsValue((java.lang.Object) properties18);
        java.util.Collection<java.lang.Object> objCollection23 = properties17.values();
        java.util.Properties properties25 = new java.util.Properties();
        java.lang.Object obj27 = properties25.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration28 = properties25.elements();
        boolean boolean29 = properties25.isEmpty();
        java.util.Set<java.lang.Object> objSet30 = properties25.keySet();
        java.lang.Object obj31 = properties17.putIfAbsent((java.lang.Object) "hi!", (java.lang.Object) objSet30);
        boolean boolean32 = properties0.replace((java.lang.Object) "hi!", (java.lang.Object) properties10, (java.lang.Object) "hi!");
        java.util.Set<java.lang.String> strSet33 = properties10.stringPropertyNames();
        java.util.Properties properties34 = new java.util.Properties();
        java.lang.Object obj36 = properties34.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration37 = properties34.elements();
        int int38 = properties34.size();
        java.util.Properties properties39 = new java.util.Properties(properties34);
        java.util.Set<java.lang.String> strSet40 = properties34.stringPropertyNames();
        java.util.Set<java.lang.String> strSet41 = properties34.stringPropertyNames();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties42 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties42.setSerialJtaTransactions(false);
        atomikosProperties42.setThreadedTwoPhaseCommit(true);
        atomikosProperties42.setMaxTimeout((long) '#');
        boolean boolean49 = atomikosProperties42.isEnableLogging();
        atomikosProperties42.setCheckpointInterval((long) (byte) -1);
        atomikosProperties42.setEnableLogging(true);
        atomikosProperties42.setLogBaseName("{}");
        long long56 = atomikosProperties42.getDefaultJtaTimeout();
        java.lang.Object obj57 = properties10.putIfAbsent((java.lang.Object) properties34, (java.lang.Object) atomikosProperties42);
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet58 = properties10.entrySet();
        java.util.Properties properties59 = new java.util.Properties();
        java.lang.Object obj61 = properties59.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet62 = properties59.stringPropertyNames();
        java.util.Properties properties63 = new java.util.Properties();
        java.util.Properties properties64 = new java.util.Properties();
        java.lang.Object obj66 = properties64.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet67 = properties64.stringPropertyNames();
        boolean boolean68 = properties63.containsValue((java.lang.Object) properties64);
        java.util.Collection<java.lang.Object> objCollection69 = properties63.values();
        java.util.Enumeration<?> wildcardEnumeration70 = properties63.propertyNames();
        java.lang.Object obj72 = properties59.put((java.lang.Object) wildcardEnumeration70, (java.lang.Object) 10.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration73 = properties59.elements();
        java.util.Properties properties75 = new java.util.Properties();
        java.lang.Object obj77 = properties75.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration78 = properties75.elements();
        boolean boolean79 = properties75.isEmpty();
        java.util.Set<java.lang.Object> objSet80 = properties75.keySet();
        java.util.Enumeration<java.lang.Object> objEnumeration81 = properties75.keys();
        boolean boolean83 = properties75.equals((java.lang.Object) "");
        java.lang.String str84 = properties75.toString();
        java.lang.Object obj85 = properties59.put((java.lang.Object) 'a', (java.lang.Object) properties75);
        boolean boolean86 = properties10.contains((java.lang.Object) properties59);
        java.util.Set<java.lang.String> strSet87 = properties59.stringPropertyNames();
        java.lang.Object obj90 = properties59.setProperty("{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=100, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=35, com.atomikos.icatch.threaded_2pc=true, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}", "{hi!=[]}");
        java.io.InputStream inputStream91 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties59.loadFromXML(inputStream91);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(objEnumeration3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(objSet5);
        org.junit.Assert.assertNotNull(objEnumeration6);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNull(obj12);
        org.junit.Assert.assertNotNull(objEnumeration13);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertNotNull(objEntrySet16);
        org.junit.Assert.assertNull(obj20);
        org.junit.Assert.assertNotNull(strSet21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(objCollection23);
        org.junit.Assert.assertNull(obj27);
        org.junit.Assert.assertNotNull(objEnumeration28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNotNull(objSet30);
        org.junit.Assert.assertNull(obj31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(strSet33);
        org.junit.Assert.assertNull(obj36);
        org.junit.Assert.assertNotNull(objEnumeration37);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 0 + "'", int38 == 0);
        org.junit.Assert.assertNotNull(strSet40);
        org.junit.Assert.assertNotNull(strSet41);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertTrue("'" + long56 + "' != '" + 10000L + "'", long56 == 10000L);
        org.junit.Assert.assertNull(obj57);
        org.junit.Assert.assertNotNull(objEntrySet58);
        org.junit.Assert.assertNull(obj61);
        org.junit.Assert.assertNotNull(strSet62);
        org.junit.Assert.assertNull(obj66);
        org.junit.Assert.assertNotNull(strSet67);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertNotNull(objCollection69);
        org.junit.Assert.assertNotNull(wildcardEnumeration70);
        org.junit.Assert.assertNull(obj72);
        org.junit.Assert.assertNotNull(objEnumeration73);
        org.junit.Assert.assertNull(obj77);
        org.junit.Assert.assertNotNull(objEnumeration78);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + true + "'", boolean79 == true);
        org.junit.Assert.assertNotNull(objSet80);
        org.junit.Assert.assertNotNull(objEnumeration81);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + false + "'", boolean83 == false);
        org.junit.Assert.assertEquals("'" + str84 + "' != '" + "{}" + "'", str84, "{}");
        org.junit.Assert.assertNull(obj85);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + false + "'", boolean86 == false);
        org.junit.Assert.assertNotNull(strSet87);
        org.junit.Assert.assertNull(obj90);
    }

    @Test
    public void test7588() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7588");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setSerialJtaTransactions(false);
        atomikosProperties0.setThreadedTwoPhaseCommit(true);
        atomikosProperties0.setMaxTimeout((long) '#');
        long long7 = atomikosProperties0.getCheckpointInterval();
        java.lang.String str8 = atomikosProperties0.getTransactionManagerUniqueName();
        atomikosProperties0.setTransactionManagerUniqueName("{=hi!}");
        boolean boolean11 = atomikosProperties0.isEnableLogging();
        atomikosProperties0.setMaxActives(35);
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + 500L + "'", long7 == 500L);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
    }

    @Test
    public void test7589() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7589");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setSerialJtaTransactions(false);
        boolean boolean3 = atomikosProperties0.isSerialJtaTransactions();
        atomikosProperties0.setTransactionManagerUniqueName("hi!");
        java.lang.String str6 = atomikosProperties0.getLogBaseName();
        java.lang.String str7 = atomikosProperties0.getLogBaseName();
        boolean boolean8 = atomikosProperties0.isForceShutdownOnVmExit();
        long long9 = atomikosProperties0.getMaxTimeout();
        java.lang.String str10 = atomikosProperties0.getTransactionManagerUniqueName();
        java.lang.String str11 = atomikosProperties0.getLogBaseName();
        boolean boolean12 = atomikosProperties0.isThreadedTwoPhaseCommit();
        java.lang.Class<?> wildcardClass13 = atomikosProperties0.getClass();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "tmlog" + "'", str6, "tmlog");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "tmlog" + "'", str7, "tmlog");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + long9 + "' != '" + 300000L + "'", long9 == 300000L);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "hi!" + "'", str10, "hi!");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "tmlog" + "'", str11, "tmlog");
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(wildcardClass13);
    }

    @Test
    public void test7590() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7590");
        java.util.Properties properties0 = new java.util.Properties();
        boolean boolean2 = properties0.contains((java.lang.Object) 100.0d);
        java.util.Properties properties3 = new java.util.Properties();
        java.lang.Object obj5 = properties3.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration6 = properties3.elements();
        boolean boolean7 = properties3.isEmpty();
        java.util.Set<java.lang.Object> objSet8 = properties3.keySet();
        boolean boolean9 = properties3.isEmpty();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet10 = properties3.entrySet();
        java.util.Properties properties11 = new java.util.Properties();
        java.lang.Object obj13 = properties11.remove((java.lang.Object) 0.0d);
        boolean boolean14 = properties11.isEmpty();
        java.lang.Object obj17 = properties11.setProperty("", "hi!");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties18 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties18.setSerialJtaTransactions(false);
        boolean boolean21 = properties3.remove((java.lang.Object) properties11, (java.lang.Object) atomikosProperties18);
        boolean boolean22 = properties0.equals((java.lang.Object) properties3);
        java.util.Enumeration<java.lang.Object> objEnumeration23 = properties0.elements();
        java.util.Properties properties24 = new java.util.Properties();
        java.lang.Object obj26 = properties24.remove((java.lang.Object) 0.0d);
        boolean boolean28 = properties24.containsValue((java.lang.Object) "hi!");
        java.lang.Object obj31 = properties24.put((java.lang.Object) (byte) -1, (java.lang.Object) 100L);
        java.util.Collection<java.lang.Object> objCollection32 = properties24.values();
        java.util.Properties properties33 = new java.util.Properties();
        java.lang.Object obj35 = properties33.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration36 = properties33.elements();
        int int37 = properties33.size();
        java.util.Properties properties38 = new java.util.Properties(properties33);
        java.util.Set<java.lang.String> strSet39 = properties33.stringPropertyNames();
        java.util.Set<java.lang.String> strSet40 = properties33.stringPropertyNames();
        java.util.Properties properties41 = new java.util.Properties();
        java.lang.Object obj43 = properties41.remove((java.lang.Object) 0.0d);
        boolean boolean44 = properties41.isEmpty();
        java.util.Enumeration<java.lang.Object> objEnumeration45 = properties41.elements();
        java.util.Properties properties46 = new java.util.Properties();
        java.lang.Object obj48 = properties46.remove((java.lang.Object) 0.0d);
        boolean boolean49 = properties46.isEmpty();
        java.util.Enumeration<java.lang.Object> objEnumeration50 = properties46.elements();
        java.util.Enumeration<java.lang.Object> objEnumeration51 = properties46.elements();
        java.lang.Object obj52 = properties33.replace((java.lang.Object) objEnumeration45, (java.lang.Object) objEnumeration51);
        java.util.Enumeration<java.lang.Object> objEnumeration53 = properties33.keys();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties54 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties54.setSerialJtaTransactions(false);
        boolean boolean57 = atomikosProperties54.isSerialJtaTransactions();
        java.lang.String str58 = atomikosProperties54.getService();
        boolean boolean59 = atomikosProperties54.isEnableLogging();
        java.lang.String str60 = atomikosProperties54.getLogBaseName();
        boolean boolean61 = properties33.containsKey((java.lang.Object) atomikosProperties54);
        java.lang.Object obj62 = null;
        java.lang.Object obj63 = properties24.getOrDefault((java.lang.Object) atomikosProperties54, obj62);
        java.util.Properties properties64 = atomikosProperties54.asProperties();
        java.util.Enumeration<java.lang.Object> objEnumeration65 = properties64.elements();
        java.util.Properties properties66 = new java.util.Properties();
        java.util.Properties properties67 = new java.util.Properties();
        java.lang.Object obj69 = properties67.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet70 = properties67.stringPropertyNames();
        boolean boolean71 = properties66.containsValue((java.lang.Object) properties67);
        java.util.Enumeration<?> wildcardEnumeration72 = properties67.propertyNames();
        java.util.Properties properties73 = new java.util.Properties(properties67);
        java.util.Enumeration<java.lang.Object> objEnumeration74 = properties67.keys();
        java.lang.Object obj75 = properties0.put((java.lang.Object) objEnumeration65, (java.lang.Object) properties67);
        java.io.Writer writer76 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties0.store(writer76, "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=false, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, hi!=, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNull(obj5);
        org.junit.Assert.assertNotNull(objEnumeration6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(objSet8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertNotNull(objEntrySet10);
        org.junit.Assert.assertNull(obj13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNull(obj17);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNotNull(objEnumeration23);
        org.junit.Assert.assertNull(obj26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNull(obj31);
        org.junit.Assert.assertNotNull(objCollection32);
        org.junit.Assert.assertNull(obj35);
        org.junit.Assert.assertNotNull(objEnumeration36);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 0 + "'", int37 == 0);
        org.junit.Assert.assertNotNull(strSet39);
        org.junit.Assert.assertNotNull(strSet40);
        org.junit.Assert.assertNull(obj43);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertNotNull(objEnumeration45);
        org.junit.Assert.assertNull(obj48);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertNotNull(objEnumeration50);
        org.junit.Assert.assertNotNull(objEnumeration51);
        org.junit.Assert.assertNull(obj52);
        org.junit.Assert.assertNotNull(objEnumeration53);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertNull(str58);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "tmlog" + "'", str60, "tmlog");
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertNull(obj63);
        org.junit.Assert.assertNotNull(properties64);
        org.junit.Assert.assertNotNull(objEnumeration65);
        org.junit.Assert.assertNull(obj69);
        org.junit.Assert.assertNotNull(strSet70);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertNotNull(wildcardEnumeration72);
        org.junit.Assert.assertNotNull(objEnumeration74);
        org.junit.Assert.assertNull(obj75);
    }

    @Test
    public void test7591() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7591");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration3 = properties0.elements();
        boolean boolean4 = properties0.isEmpty();
        java.util.Set<java.lang.Object> objSet5 = properties0.keySet();
        java.util.Enumeration<java.lang.Object> objEnumeration6 = properties0.keys();
        java.lang.String str8 = properties0.getProperty("hi!");
        java.lang.String str10 = properties0.getProperty("");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties11 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties11.setSerialJtaTransactions(false);
        atomikosProperties11.setThreadedTwoPhaseCommit(true);
        atomikosProperties11.setEnableLogging(false);
        boolean boolean18 = properties0.containsKey((java.lang.Object) atomikosProperties11);
        atomikosProperties11.setService("tmlog");
        atomikosProperties11.setSerialJtaTransactions(true);
        long long23 = atomikosProperties11.getDefaultJtaTimeout();
        boolean boolean24 = atomikosProperties11.isForceShutdownOnVmExit();
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(objEnumeration3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(objSet5);
        org.junit.Assert.assertNotNull(objEnumeration6);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + long23 + "' != '" + 10000L + "'", long23 == 10000L);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
    }

    @Test
    public void test7592() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7592");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration3 = properties0.elements();
        boolean boolean4 = properties0.isEmpty();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet5 = properties0.entrySet();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties7 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties7.setSerialJtaTransactions(false);
        atomikosProperties7.setThreadedTwoPhaseCommit(true);
        atomikosProperties7.setMaxTimeout((long) '#');
        boolean boolean14 = atomikosProperties7.isForceShutdownOnVmExit();
        java.lang.Object obj15 = properties0.put((java.lang.Object) (short) 1, (java.lang.Object) atomikosProperties7);
        atomikosProperties7.setForceShutdownOnVmExit(false);
        long long18 = atomikosProperties7.getDefaultJtaTimeout();
        atomikosProperties7.setThreadedTwoPhaseCommit(true);
        java.util.Properties properties21 = atomikosProperties7.asProperties();
        atomikosProperties7.setLogBaseDir("{{}={}}");
        boolean boolean24 = atomikosProperties7.isSerialJtaTransactions();
        boolean boolean25 = atomikosProperties7.isEnableLogging();
        atomikosProperties7.setForceShutdownOnVmExit(true);
        atomikosProperties7.setEnableLogging(false);
        long long30 = atomikosProperties7.getDefaultJtaTimeout();
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(objEnumeration3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(objEntrySet5);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNull(obj15);
        org.junit.Assert.assertTrue("'" + long18 + "' != '" + 10000L + "'", long18 == 10000L);
        org.junit.Assert.assertNotNull(properties21);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertTrue("'" + long30 + "' != '" + 10000L + "'", long30 == 10000L);
    }

    @Test
    public void test7593() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7593");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setSerialJtaTransactions(false);
        atomikosProperties0.setThreadedTwoPhaseCommit(true);
        atomikosProperties0.setMaxTimeout((long) '#');
        boolean boolean7 = atomikosProperties0.isEnableLogging();
        atomikosProperties0.setCheckpointInterval((long) 100);
        java.lang.String str10 = atomikosProperties0.getTransactionManagerUniqueName();
        atomikosProperties0.setCheckpointInterval((long) (byte) 100);
        atomikosProperties0.setThreadedTwoPhaseCommit(true);
        java.lang.String str15 = atomikosProperties0.getLogBaseName();
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "tmlog" + "'", str15, "tmlog");
    }

    @Test
    public void test7594() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7594");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        boolean boolean3 = properties0.isEmpty();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties4 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        boolean boolean5 = properties0.containsValue((java.lang.Object) atomikosProperties4);
        java.util.Properties properties6 = atomikosProperties4.asProperties();
        java.util.Properties properties7 = atomikosProperties4.asProperties();
        java.lang.String str9 = properties7.getProperty("{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=false, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, hi!=, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties10 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties10.setSerialJtaTransactions(false);
        atomikosProperties10.setThreadedTwoPhaseCommit(true);
        atomikosProperties10.setMaxTimeout((long) '#');
        boolean boolean17 = atomikosProperties10.isEnableLogging();
        atomikosProperties10.setCheckpointInterval((long) 100);
        java.lang.String str20 = atomikosProperties10.getTransactionManagerUniqueName();
        atomikosProperties10.setEnableLogging(false);
        boolean boolean23 = atomikosProperties10.isEnableLogging();
        boolean boolean24 = atomikosProperties10.isThreadedTwoPhaseCommit();
        java.util.Properties properties25 = atomikosProperties10.asProperties();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties26 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties26.setSerialJtaTransactions(false);
        atomikosProperties26.setThreadedTwoPhaseCommit(true);
        atomikosProperties26.setThreadedTwoPhaseCommit(true);
        java.util.Properties properties33 = atomikosProperties26.asProperties();
        int int34 = atomikosProperties26.getMaxActives();
        atomikosProperties26.setService("hi!");
        long long37 = atomikosProperties26.getMaxTimeout();
        atomikosProperties26.setTransactionManagerUniqueName("hi!");
        java.util.Properties properties40 = atomikosProperties26.asProperties();
        atomikosProperties26.setForceShutdownOnVmExit(true);
        atomikosProperties26.setMaxActives((int) ' ');
        java.util.Properties properties45 = atomikosProperties26.asProperties();
        java.lang.Object obj46 = properties7.put((java.lang.Object) atomikosProperties10, (java.lang.Object) properties45);
        java.util.Set<java.lang.String> strSet47 = properties45.stringPropertyNames();
        java.util.Enumeration<java.lang.Object> objEnumeration48 = properties45.keys();
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(properties6);
        org.junit.Assert.assertNotNull(properties7);
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNull(str20);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNotNull(properties25);
        org.junit.Assert.assertNotNull(properties33);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 50 + "'", int34 == 50);
        org.junit.Assert.assertTrue("'" + long37 + "' != '" + 300000L + "'", long37 == 300000L);
        org.junit.Assert.assertNotNull(properties40);
        org.junit.Assert.assertNotNull(properties45);
        org.junit.Assert.assertNull(obj46);
        org.junit.Assert.assertNotNull(strSet47);
        org.junit.Assert.assertNotNull(objEnumeration48);
    }

    @Test
    public void test7595() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7595");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setSerialJtaTransactions(false);
        boolean boolean3 = atomikosProperties0.isSerialJtaTransactions();
        java.lang.String str4 = atomikosProperties0.getService();
        boolean boolean5 = atomikosProperties0.isEnableLogging();
        java.util.Properties properties6 = atomikosProperties0.asProperties();
        atomikosProperties0.setForceShutdownOnVmExit(true);
        atomikosProperties0.setMaxActives((int) (short) -1);
        atomikosProperties0.setMaxTimeout((long) ' ');
        atomikosProperties0.setMaxTimeout((long) (short) 100);
        long long15 = atomikosProperties0.getDefaultJtaTimeout();
        java.lang.String str16 = atomikosProperties0.getLogBaseName();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNotNull(properties6);
        org.junit.Assert.assertTrue("'" + long15 + "' != '" + 10000L + "'", long15 == 10000L);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "tmlog" + "'", str16, "tmlog");
    }

    @Test
    public void test7596() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7596");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet3 = properties0.stringPropertyNames();
        java.util.Properties properties4 = new java.util.Properties();
        java.lang.Object obj6 = properties4.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet7 = properties4.stringPropertyNames();
        java.lang.Object obj9 = properties0.put((java.lang.Object) strSet7, (java.lang.Object) 0.0d);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties10 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties10.setSerialJtaTransactions(false);
        atomikosProperties10.setThreadedTwoPhaseCommit(true);
        atomikosProperties10.setMaxTimeout((long) '#');
        boolean boolean17 = atomikosProperties10.isEnableLogging();
        atomikosProperties10.setCheckpointInterval((long) (byte) -1);
        atomikosProperties10.setEnableLogging(true);
        atomikosProperties10.setLogBaseName("{}");
        atomikosProperties10.setLogBaseName("tmlog");
        java.util.Properties properties26 = new java.util.Properties();
        java.lang.Object obj28 = properties26.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration29 = properties26.elements();
        boolean boolean30 = properties26.isEmpty();
        java.util.Set<java.lang.Object> objSet31 = properties26.keySet();
        java.util.Enumeration<java.lang.Object> objEnumeration32 = properties26.keys();
        java.lang.String str34 = properties26.getProperty("hi!");
        java.util.Properties properties36 = new java.util.Properties();
        java.lang.Object obj38 = properties36.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration39 = properties36.elements();
        int int40 = properties36.size();
        java.util.Properties properties41 = new java.util.Properties(properties36);
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet42 = properties36.entrySet();
        java.util.Properties properties43 = new java.util.Properties();
        java.util.Properties properties44 = new java.util.Properties();
        java.lang.Object obj46 = properties44.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet47 = properties44.stringPropertyNames();
        boolean boolean48 = properties43.containsValue((java.lang.Object) properties44);
        java.util.Collection<java.lang.Object> objCollection49 = properties43.values();
        java.util.Properties properties51 = new java.util.Properties();
        java.lang.Object obj53 = properties51.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration54 = properties51.elements();
        boolean boolean55 = properties51.isEmpty();
        java.util.Set<java.lang.Object> objSet56 = properties51.keySet();
        java.lang.Object obj57 = properties43.putIfAbsent((java.lang.Object) "hi!", (java.lang.Object) objSet56);
        boolean boolean58 = properties26.replace((java.lang.Object) "hi!", (java.lang.Object) properties36, (java.lang.Object) "hi!");
        java.util.Set<java.lang.String> strSet59 = properties36.stringPropertyNames();
        java.util.Properties properties60 = new java.util.Properties();
        java.lang.Object obj62 = properties60.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration63 = properties60.elements();
        int int64 = properties60.size();
        java.util.Properties properties65 = new java.util.Properties(properties60);
        java.util.Set<java.lang.String> strSet66 = properties60.stringPropertyNames();
        java.util.Set<java.lang.String> strSet67 = properties60.stringPropertyNames();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties68 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties68.setSerialJtaTransactions(false);
        atomikosProperties68.setThreadedTwoPhaseCommit(true);
        atomikosProperties68.setMaxTimeout((long) '#');
        boolean boolean75 = atomikosProperties68.isEnableLogging();
        atomikosProperties68.setCheckpointInterval((long) (byte) -1);
        atomikosProperties68.setEnableLogging(true);
        atomikosProperties68.setLogBaseName("{}");
        long long82 = atomikosProperties68.getDefaultJtaTimeout();
        java.lang.Object obj83 = properties36.putIfAbsent((java.lang.Object) properties60, (java.lang.Object) atomikosProperties68);
        java.lang.Object obj84 = properties0.getOrDefault((java.lang.Object) "tmlog", obj83);
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet85 = properties0.entrySet();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet86 = properties0.entrySet();
        java.util.Collection<java.lang.Object> objCollection87 = properties0.values();
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(strSet3);
        org.junit.Assert.assertNull(obj6);
        org.junit.Assert.assertNotNull(strSet7);
        org.junit.Assert.assertNull(obj9);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNull(obj28);
        org.junit.Assert.assertNotNull(objEnumeration29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNotNull(objSet31);
        org.junit.Assert.assertNotNull(objEnumeration32);
        org.junit.Assert.assertNull(str34);
        org.junit.Assert.assertNull(obj38);
        org.junit.Assert.assertNotNull(objEnumeration39);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 0 + "'", int40 == 0);
        org.junit.Assert.assertNotNull(objEntrySet42);
        org.junit.Assert.assertNull(obj46);
        org.junit.Assert.assertNotNull(strSet47);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNotNull(objCollection49);
        org.junit.Assert.assertNull(obj53);
        org.junit.Assert.assertNotNull(objEnumeration54);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertNotNull(objSet56);
        org.junit.Assert.assertNull(obj57);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertNotNull(strSet59);
        org.junit.Assert.assertNull(obj62);
        org.junit.Assert.assertNotNull(objEnumeration63);
        org.junit.Assert.assertTrue("'" + int64 + "' != '" + 0 + "'", int64 == 0);
        org.junit.Assert.assertNotNull(strSet66);
        org.junit.Assert.assertNotNull(strSet67);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + true + "'", boolean75 == true);
        org.junit.Assert.assertTrue("'" + long82 + "' != '" + 10000L + "'", long82 == 10000L);
        org.junit.Assert.assertNull(obj83);
        org.junit.Assert.assertNull(obj84);
        org.junit.Assert.assertNotNull(objEntrySet85);
        org.junit.Assert.assertNotNull(objEntrySet86);
        org.junit.Assert.assertNotNull(objCollection87);
    }

    @Test
    public void test7597() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7597");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration3 = properties0.elements();
        boolean boolean4 = properties0.isEmpty();
        java.util.Set<java.lang.Object> objSet5 = properties0.keySet();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties6 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties6.setSerialJtaTransactions(false);
        atomikosProperties6.setThreadedTwoPhaseCommit(true);
        atomikosProperties6.setThreadedTwoPhaseCommit(true);
        java.util.Properties properties13 = atomikosProperties6.asProperties();
        int int14 = atomikosProperties6.getMaxActives();
        java.util.Properties properties15 = new java.util.Properties();
        java.lang.Object obj17 = properties15.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration18 = properties15.elements();
        boolean boolean19 = properties15.isEmpty();
        java.util.Set<java.lang.Object> objSet20 = properties15.keySet();
        boolean boolean22 = properties15.containsKey((java.lang.Object) (-1.0f));
        java.lang.Object obj23 = properties0.put((java.lang.Object) atomikosProperties6, (java.lang.Object) properties15);
        properties15.clear();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties25 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties25.setSerialJtaTransactions(false);
        atomikosProperties25.setThreadedTwoPhaseCommit(true);
        atomikosProperties25.setMaxTimeout((long) '#');
        boolean boolean32 = atomikosProperties25.isEnableLogging();
        atomikosProperties25.setTransactionManagerUniqueName("hi!");
        java.lang.String str35 = atomikosProperties25.getTransactionManagerUniqueName();
        atomikosProperties25.setThreadedTwoPhaseCommit(false);
        atomikosProperties25.setThreadedTwoPhaseCommit(true);
        boolean boolean40 = properties15.contains((java.lang.Object) atomikosProperties25);
        boolean boolean41 = atomikosProperties25.isForceShutdownOnVmExit();
        atomikosProperties25.setService("{=hi!}");
        java.lang.String str44 = atomikosProperties25.getService();
        java.lang.String str45 = atomikosProperties25.getService();
        java.lang.String str46 = atomikosProperties25.getLogBaseName();
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(objEnumeration3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(objSet5);
        org.junit.Assert.assertNotNull(properties13);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 50 + "'", int14 == 50);
        org.junit.Assert.assertNull(obj17);
        org.junit.Assert.assertNotNull(objEnumeration18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(objSet20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNull(obj23);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "hi!" + "'", str35, "hi!");
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "{=hi!}" + "'", str44, "{=hi!}");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "{=hi!}" + "'", str45, "{=hi!}");
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "tmlog" + "'", str46, "tmlog");
    }

    @Test
    public void test7598() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7598");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setSerialJtaTransactions(false);
        atomikosProperties0.setThreadedTwoPhaseCommit(true);
        atomikosProperties0.setMaxTimeout((long) '#');
        long long7 = atomikosProperties0.getCheckpointInterval();
        atomikosProperties0.setMaxTimeout((long) (byte) 100);
        atomikosProperties0.setThreadedTwoPhaseCommit(false);
        atomikosProperties0.setMaxTimeout((long) '4');
        long long14 = atomikosProperties0.getDefaultJtaTimeout();
        atomikosProperties0.setSerialJtaTransactions(true);
        java.lang.String str17 = atomikosProperties0.getService();
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + 500L + "'", long7 == 500L);
        org.junit.Assert.assertTrue("'" + long14 + "' != '" + 10000L + "'", long14 == 10000L);
        org.junit.Assert.assertNull(str17);
    }

    @Test
    public void test7599() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7599");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        boolean boolean3 = properties0.isEmpty();
        java.lang.Object obj6 = properties0.setProperty("", "hi!");
        java.util.Properties properties7 = new java.util.Properties();
        java.lang.Object obj9 = properties7.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration10 = properties7.elements();
        boolean boolean11 = properties7.isEmpty();
        java.util.Set<java.lang.Object> objSet12 = properties7.keySet();
        boolean boolean13 = properties7.isEmpty();
        java.util.Properties properties14 = new java.util.Properties();
        java.util.Collection<java.lang.Object> objCollection15 = properties14.values();
        java.util.Enumeration<java.lang.Object> objEnumeration16 = properties14.keys();
        java.lang.Object obj17 = properties7.remove((java.lang.Object) properties14);
        java.lang.Object obj18 = properties0.get((java.lang.Object) properties14);
        boolean boolean19 = properties0.isEmpty();
        java.util.Properties properties20 = new java.util.Properties();
        java.lang.Object obj22 = properties20.remove((java.lang.Object) 0.0d);
        boolean boolean23 = properties20.isEmpty();
        java.lang.Object obj26 = properties20.setProperty("", "hi!");
        java.util.Properties properties27 = new java.util.Properties();
        java.lang.Object obj29 = properties27.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration30 = properties27.elements();
        boolean boolean31 = properties27.isEmpty();
        java.util.Set<java.lang.Object> objSet32 = properties27.keySet();
        boolean boolean33 = properties27.isEmpty();
        java.util.Properties properties34 = new java.util.Properties();
        java.util.Collection<java.lang.Object> objCollection35 = properties34.values();
        java.util.Enumeration<java.lang.Object> objEnumeration36 = properties34.keys();
        java.lang.Object obj37 = properties27.remove((java.lang.Object) properties34);
        java.lang.Object obj38 = properties20.get((java.lang.Object) properties34);
        java.util.Enumeration<java.lang.Object> objEnumeration39 = properties34.keys();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties40 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties40.setSerialJtaTransactions(false);
        atomikosProperties40.setThreadedTwoPhaseCommit(true);
        atomikosProperties40.setMaxTimeout((long) '#');
        boolean boolean47 = atomikosProperties40.isForceShutdownOnVmExit();
        long long48 = atomikosProperties40.getCheckpointInterval();
        java.lang.Object obj49 = new java.lang.Object();
        boolean boolean51 = properties34.replace((java.lang.Object) long48, obj49, (java.lang.Object) "hi!");
        java.util.Set<java.lang.Object> objSet52 = properties34.keySet();
        java.util.Properties properties53 = new java.util.Properties();
        java.util.Properties properties54 = new java.util.Properties();
        java.lang.Object obj56 = properties54.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet57 = properties54.stringPropertyNames();
        boolean boolean58 = properties53.containsValue((java.lang.Object) properties54);
        java.util.Collection<java.lang.Object> objCollection59 = properties53.values();
        java.util.Enumeration<?> wildcardEnumeration60 = properties53.propertyNames();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet61 = properties53.entrySet();
        properties34.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties53);
        java.util.Enumeration<java.lang.Object> objEnumeration63 = properties34.elements();
        java.lang.Object obj64 = properties34.clone();
        java.util.Enumeration<?> wildcardEnumeration65 = properties34.propertyNames();
        boolean boolean66 = properties0.containsKey((java.lang.Object) wildcardEnumeration65);
        java.util.Properties properties67 = new java.util.Properties();
        java.util.Properties properties68 = new java.util.Properties();
        java.lang.Object obj70 = properties68.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet71 = properties68.stringPropertyNames();
        boolean boolean72 = properties67.containsValue((java.lang.Object) properties68);
        java.util.Enumeration<?> wildcardEnumeration73 = properties67.propertyNames();
        java.lang.Object obj74 = properties67.clone();
        boolean boolean75 = properties0.containsValue((java.lang.Object) properties67);
        java.io.OutputStream outputStream76 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties0.save(outputStream76, "{-1=100}");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNull(obj6);
        org.junit.Assert.assertNull(obj9);
        org.junit.Assert.assertNotNull(objEnumeration10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNotNull(objSet12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(objCollection15);
        org.junit.Assert.assertNotNull(objEnumeration16);
        org.junit.Assert.assertNull(obj17);
        org.junit.Assert.assertNull(obj18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNull(obj22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNull(obj26);
        org.junit.Assert.assertNull(obj29);
        org.junit.Assert.assertNotNull(objEnumeration30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNotNull(objSet32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNotNull(objCollection35);
        org.junit.Assert.assertNotNull(objEnumeration36);
        org.junit.Assert.assertNull(obj37);
        org.junit.Assert.assertNull(obj38);
        org.junit.Assert.assertNotNull(objEnumeration39);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertTrue("'" + long48 + "' != '" + 500L + "'", long48 == 500L);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertNotNull(objSet52);
        org.junit.Assert.assertNull(obj56);
        org.junit.Assert.assertNotNull(strSet57);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertNotNull(objCollection59);
        org.junit.Assert.assertNotNull(wildcardEnumeration60);
        org.junit.Assert.assertNotNull(objEntrySet61);
        org.junit.Assert.assertNotNull(objEnumeration63);
        org.junit.Assert.assertNotNull(obj64);
        org.junit.Assert.assertEquals(obj64.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj64), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj64), "{}");
        org.junit.Assert.assertNotNull(wildcardEnumeration65);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertNull(obj70);
        org.junit.Assert.assertNotNull(strSet71);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertNotNull(wildcardEnumeration73);
        org.junit.Assert.assertNotNull(obj74);
        org.junit.Assert.assertEquals(obj74.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj74), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj74), "{}");
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
    }

    @Test
    public void test7600() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7600");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration3 = properties0.elements();
        boolean boolean4 = properties0.isEmpty();
        java.util.Set<java.lang.Object> objSet5 = properties0.keySet();
        java.util.Enumeration<java.lang.Object> objEnumeration6 = properties0.keys();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet7 = properties0.entrySet();
        java.util.Properties properties8 = new java.util.Properties();
        java.lang.Object obj10 = properties8.remove((java.lang.Object) 0.0d);
        java.util.Properties properties11 = new java.util.Properties();
        java.util.Collection<java.lang.Object> objCollection12 = properties11.values();
        java.util.Enumeration<java.lang.Object> objEnumeration13 = properties11.keys();
        java.util.Properties properties14 = new java.util.Properties();
        java.lang.Object obj16 = properties14.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration17 = properties14.elements();
        boolean boolean18 = properties14.isEmpty();
        java.util.Set<java.lang.Object> objSet19 = properties14.keySet();
        java.util.Enumeration<java.lang.Object> objEnumeration20 = properties14.keys();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet21 = properties14.entrySet();
        java.lang.Object obj22 = properties8.put((java.lang.Object) properties11, (java.lang.Object) properties14);
        java.lang.String str24 = properties11.getProperty("{=hi!}");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties25 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties25.setSerialJtaTransactions(false);
        atomikosProperties25.setThreadedTwoPhaseCommit(true);
        atomikosProperties25.setThreadedTwoPhaseCommit(true);
        long long32 = atomikosProperties25.getMaxTimeout();
        boolean boolean33 = properties11.containsValue((java.lang.Object) atomikosProperties25);
        java.util.Enumeration<java.lang.Object> objEnumeration34 = properties11.elements();
        boolean boolean35 = properties0.contains((java.lang.Object) objEnumeration34);
        java.util.Properties properties36 = new java.util.Properties(properties0);
        java.util.Set<java.lang.Object> objSet37 = properties0.keySet();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet38 = properties0.entrySet();
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(objEnumeration3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(objSet5);
        org.junit.Assert.assertNotNull(objEnumeration6);
        org.junit.Assert.assertNotNull(objEntrySet7);
        org.junit.Assert.assertNull(obj10);
        org.junit.Assert.assertNotNull(objCollection12);
        org.junit.Assert.assertNotNull(objEnumeration13);
        org.junit.Assert.assertNull(obj16);
        org.junit.Assert.assertNotNull(objEnumeration17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(objSet19);
        org.junit.Assert.assertNotNull(objEnumeration20);
        org.junit.Assert.assertNotNull(objEntrySet21);
        org.junit.Assert.assertNull(obj22);
        org.junit.Assert.assertNull(str24);
        org.junit.Assert.assertTrue("'" + long32 + "' != '" + 300000L + "'", long32 == 300000L);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(objEnumeration34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(objSet37);
        org.junit.Assert.assertNotNull(objEntrySet38);
    }

    @Test
    public void test7601() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7601");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setSerialJtaTransactions(false);
        boolean boolean3 = atomikosProperties0.isSerialJtaTransactions();
        atomikosProperties0.setTransactionManagerUniqueName("hi!");
        java.lang.String str6 = atomikosProperties0.getLogBaseName();
        java.lang.String str7 = atomikosProperties0.getLogBaseName();
        boolean boolean8 = atomikosProperties0.isForceShutdownOnVmExit();
        long long9 = atomikosProperties0.getCheckpointInterval();
        boolean boolean10 = atomikosProperties0.isThreadedTwoPhaseCommit();
        boolean boolean11 = atomikosProperties0.isThreadedTwoPhaseCommit();
        atomikosProperties0.setMaxTimeout((long) (short) 0);
        java.util.Properties properties14 = atomikosProperties0.asProperties();
        java.lang.String str15 = atomikosProperties0.getService();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "tmlog" + "'", str6, "tmlog");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "tmlog" + "'", str7, "tmlog");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + long9 + "' != '" + 500L + "'", long9 == 500L);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(properties14);
        org.junit.Assert.assertNull(str15);
    }

    @Test
    public void test7602() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7602");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setSerialJtaTransactions(false);
        atomikosProperties0.setThreadedTwoPhaseCommit(true);
        atomikosProperties0.setThreadedTwoPhaseCommit(true);
        atomikosProperties0.setLogBaseName("{=hi!}");
        atomikosProperties0.setLogBaseName("{hi!=[]}");
        atomikosProperties0.setEnableLogging(true);
        java.lang.String str13 = atomikosProperties0.getLogBaseDir();
        org.junit.Assert.assertNull(str13);
    }

    @Test
    public void test7603() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7603");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setSerialJtaTransactions(false);
        atomikosProperties0.setThreadedTwoPhaseCommit(true);
        atomikosProperties0.setMaxTimeout((long) '#');
        java.lang.String str7 = atomikosProperties0.getLogBaseDir();
        boolean boolean8 = atomikosProperties0.isThreadedTwoPhaseCommit();
        atomikosProperties0.setLogBaseName("hi!");
        boolean boolean11 = atomikosProperties0.isEnableLogging();
        atomikosProperties0.setEnableLogging(false);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
    }

    @Test
    public void test7604() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7604");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setSerialJtaTransactions(false);
        atomikosProperties0.setThreadedTwoPhaseCommit(true);
        atomikosProperties0.setMaxTimeout((long) '#');
        boolean boolean7 = atomikosProperties0.isEnableLogging();
        atomikosProperties0.setForceShutdownOnVmExit(true);
        atomikosProperties0.setSerialJtaTransactions(true);
        java.util.Properties properties12 = atomikosProperties0.asProperties();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties13 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties13.setSerialJtaTransactions(false);
        atomikosProperties13.setThreadedTwoPhaseCommit(true);
        atomikosProperties13.setEnableLogging(false);
        boolean boolean20 = atomikosProperties13.isSerialJtaTransactions();
        int int21 = atomikosProperties13.getMaxActives();
        boolean boolean22 = atomikosProperties13.isEnableLogging();
        long long23 = atomikosProperties13.getCheckpointInterval();
        java.util.Properties properties24 = atomikosProperties13.asProperties();
        atomikosProperties13.setSerialJtaTransactions(false);
        java.lang.Object obj27 = null;
        java.lang.Object obj28 = properties12.getOrDefault((java.lang.Object) atomikosProperties13, obj27);
        java.io.OutputStream outputStream29 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties12.save(outputStream29, "{hi!=[], {hi!=[]}=}");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(properties12);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 50 + "'", int21 == 50);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + long23 + "' != '" + 500L + "'", long23 == 500L);
        org.junit.Assert.assertNotNull(properties24);
        org.junit.Assert.assertNull(obj28);
    }

    @Test
    public void test7605() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7605");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setSerialJtaTransactions(false);
        atomikosProperties0.setThreadedTwoPhaseCommit(true);
        atomikosProperties0.setMaxTimeout((long) '#');
        boolean boolean7 = atomikosProperties0.isForceShutdownOnVmExit();
        long long8 = atomikosProperties0.getMaxTimeout();
        boolean boolean9 = atomikosProperties0.isForceShutdownOnVmExit();
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + long8 + "' != '" + 35L + "'", long8 == 35L);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
    }

    @Test
    public void test7606() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7606");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setSerialJtaTransactions(false);
        atomikosProperties0.setThreadedTwoPhaseCommit(true);
        atomikosProperties0.setMaxTimeout((long) '#');
        boolean boolean7 = atomikosProperties0.isEnableLogging();
        atomikosProperties0.setCheckpointInterval((long) (byte) -1);
        atomikosProperties0.setMaxActives((int) (byte) 100);
        atomikosProperties0.setForceShutdownOnVmExit(false);
        atomikosProperties0.setThreadedTwoPhaseCommit(true);
        atomikosProperties0.setSerialJtaTransactions(true);
        atomikosProperties0.setMaxTimeout((-1L));
        java.lang.String str20 = atomikosProperties0.getService();
        atomikosProperties0.setMaxTimeout((long) (short) 0);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNull(str20);
    }

    @Test
    public void test7607() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7607");
        java.util.Properties properties0 = new java.util.Properties();
        java.util.Collection<java.lang.Object> objCollection1 = properties0.values();
        java.util.Enumeration<java.lang.Object> objEnumeration2 = properties0.keys();
        java.lang.Object obj5 = properties0.setProperty("{}", "{}");
        java.util.Set<java.lang.String> strSet6 = properties0.stringPropertyNames();
        java.util.Properties properties7 = new java.util.Properties();
        boolean boolean9 = properties7.contains((java.lang.Object) 100.0d);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties10 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties10.setSerialJtaTransactions(false);
        atomikosProperties10.setThreadedTwoPhaseCommit(true);
        atomikosProperties10.setSerialJtaTransactions(false);
        java.lang.String str17 = atomikosProperties10.getService();
        boolean boolean18 = properties7.containsKey((java.lang.Object) atomikosProperties10);
        boolean boolean19 = properties0.containsKey((java.lang.Object) properties7);
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet20 = properties0.entrySet();
        java.util.Properties properties21 = new java.util.Properties(properties0);
        java.lang.String str24 = properties21.getProperty("{hi!=[], {hi!=[]}=}", "{=hi!}");
        org.junit.Assert.assertNotNull(objCollection1);
        org.junit.Assert.assertNotNull(objEnumeration2);
        org.junit.Assert.assertNull(obj5);
        org.junit.Assert.assertNotNull(strSet6);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNull(str17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(objEntrySet20);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "{=hi!}" + "'", str24, "{=hi!}");
    }

    @Test
    public void test7608() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7608");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration3 = properties0.elements();
        int int4 = properties0.size();
        java.util.Properties properties5 = new java.util.Properties();
        java.lang.Object obj7 = properties5.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration8 = properties5.elements();
        boolean boolean9 = properties5.isEmpty();
        java.util.Set<java.lang.Object> objSet10 = properties5.keySet();
        boolean boolean11 = properties0.containsKey((java.lang.Object) objSet10);
        java.util.Properties properties12 = new java.util.Properties();
        java.lang.Object obj14 = properties12.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration15 = properties12.elements();
        boolean boolean16 = properties12.isEmpty();
        java.util.Set<java.lang.Object> objSet17 = properties12.keySet();
        boolean boolean18 = properties12.isEmpty();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet19 = properties12.entrySet();
        java.util.Properties properties20 = new java.util.Properties();
        java.lang.Object obj22 = properties20.remove((java.lang.Object) 0.0d);
        boolean boolean23 = properties20.isEmpty();
        java.lang.Object obj26 = properties20.setProperty("", "hi!");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties27 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties27.setSerialJtaTransactions(false);
        boolean boolean30 = properties12.remove((java.lang.Object) properties20, (java.lang.Object) atomikosProperties27);
        java.util.Properties properties31 = new java.util.Properties(properties20);
        int int32 = properties31.size();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties34 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties34.setSerialJtaTransactions(false);
        boolean boolean37 = atomikosProperties34.isSerialJtaTransactions();
        java.lang.String str38 = atomikosProperties34.getService();
        boolean boolean39 = atomikosProperties34.isEnableLogging();
        java.lang.String str40 = atomikosProperties34.getTransactionManagerUniqueName();
        boolean boolean41 = properties31.remove((java.lang.Object) (byte) 1, (java.lang.Object) atomikosProperties34);
        atomikosProperties34.setEnableLogging(false);
        boolean boolean44 = atomikosProperties34.isThreadedTwoPhaseCommit();
        java.lang.Object obj45 = properties0.get((java.lang.Object) atomikosProperties34);
        atomikosProperties34.setLogBaseName("{{}=tmlog}");
        java.lang.String str48 = atomikosProperties34.getTransactionManagerUniqueName();
        atomikosProperties34.setCheckpointInterval(300000L);
        boolean boolean51 = atomikosProperties34.isForceShutdownOnVmExit();
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(objEnumeration3);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNull(obj7);
        org.junit.Assert.assertNotNull(objEnumeration8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertNotNull(objSet10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNull(obj14);
        org.junit.Assert.assertNotNull(objEnumeration15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(objSet17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(objEntrySet19);
        org.junit.Assert.assertNull(obj22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNull(obj26);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 0 + "'", int32 == 0);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNull(str38);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNull(str40);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNull(obj45);
        org.junit.Assert.assertNull(str48);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
    }

    @Test
    public void test7609() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7609");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration3 = properties0.elements();
        boolean boolean4 = properties0.isEmpty();
        java.util.Set<java.lang.Object> objSet5 = properties0.keySet();
        boolean boolean6 = properties0.isEmpty();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet7 = properties0.entrySet();
        java.util.Properties properties8 = new java.util.Properties();
        java.lang.Object obj10 = properties8.remove((java.lang.Object) 0.0d);
        boolean boolean11 = properties8.isEmpty();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties12 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        boolean boolean13 = properties8.containsValue((java.lang.Object) atomikosProperties12);
        java.util.Properties properties14 = new java.util.Properties();
        java.lang.Object obj16 = properties14.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration17 = properties14.elements();
        int int18 = properties14.size();
        java.util.Properties properties19 = new java.util.Properties(properties14);
        java.util.Set<java.lang.String> strSet20 = properties14.stringPropertyNames();
        java.util.Set<java.lang.String> strSet21 = properties14.stringPropertyNames();
        java.lang.Object obj22 = properties0.getOrDefault((java.lang.Object) properties8, (java.lang.Object) properties14);
        java.util.Properties properties23 = new java.util.Properties();
        java.util.Collection<java.lang.Object> objCollection24 = properties23.values();
        java.util.Collection<java.lang.Object> objCollection25 = properties23.values();
        boolean boolean26 = properties23.isEmpty();
        properties0.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties23);
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet28 = properties0.entrySet();
        java.io.OutputStream outputStream29 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties0.save(outputStream29, "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=false, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=35, com.atomikos.icatch.threaded_2pc=true, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(objEnumeration3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(objSet5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(objEntrySet7);
        org.junit.Assert.assertNull(obj10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNull(obj16);
        org.junit.Assert.assertNotNull(objEnumeration17);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 0 + "'", int18 == 0);
        org.junit.Assert.assertNotNull(strSet20);
        org.junit.Assert.assertNotNull(strSet21);
        org.junit.Assert.assertNotNull(obj22);
        org.junit.Assert.assertEquals(obj22.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj22), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj22), "{}");
        org.junit.Assert.assertNotNull(objCollection24);
        org.junit.Assert.assertNotNull(objCollection25);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertNotNull(objEntrySet28);
    }

    @Test
    public void test7610() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7610");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        java.util.Properties properties3 = new java.util.Properties();
        java.util.Collection<java.lang.Object> objCollection4 = properties3.values();
        java.util.Enumeration<java.lang.Object> objEnumeration5 = properties3.keys();
        java.util.Properties properties6 = new java.util.Properties();
        java.lang.Object obj8 = properties6.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration9 = properties6.elements();
        boolean boolean10 = properties6.isEmpty();
        java.util.Set<java.lang.Object> objSet11 = properties6.keySet();
        java.util.Enumeration<java.lang.Object> objEnumeration12 = properties6.keys();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet13 = properties6.entrySet();
        java.lang.Object obj14 = properties0.put((java.lang.Object) properties3, (java.lang.Object) properties6);
        java.lang.Object obj15 = properties3.clone();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties16 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties16.setSerialJtaTransactions(false);
        atomikosProperties16.setThreadedTwoPhaseCommit(true);
        atomikosProperties16.setMaxTimeout((long) '#');
        boolean boolean23 = atomikosProperties16.isEnableLogging();
        atomikosProperties16.setCheckpointInterval((long) 100);
        atomikosProperties16.setSerialJtaTransactions(true);
        boolean boolean28 = properties3.equals((java.lang.Object) atomikosProperties16);
        java.util.Properties properties29 = new java.util.Properties();
        java.lang.Object obj31 = properties29.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration32 = properties29.elements();
        boolean boolean33 = properties29.isEmpty();
        java.util.Enumeration<java.lang.Object> objEnumeration34 = properties29.elements();
        boolean boolean35 = properties3.containsKey((java.lang.Object) properties29);
        java.util.Properties properties36 = new java.util.Properties();
        java.lang.Object obj38 = properties36.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration39 = properties36.elements();
        boolean boolean40 = properties36.isEmpty();
        java.util.Set<java.lang.Object> objSet41 = properties36.keySet();
        java.util.Enumeration<java.lang.Object> objEnumeration42 = properties36.keys();
        boolean boolean44 = properties36.equals((java.lang.Object) "");
        boolean boolean45 = properties3.containsValue((java.lang.Object) properties36);
        java.util.Enumeration<java.lang.Object> objEnumeration46 = properties36.keys();
        java.lang.Object obj47 = null;
        java.lang.Object obj48 = null;
        java.util.Properties properties49 = new java.util.Properties();
        java.lang.Object obj51 = properties49.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration52 = properties49.elements();
        boolean boolean53 = properties49.isEmpty();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet54 = properties49.entrySet();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties56 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties56.setSerialJtaTransactions(false);
        atomikosProperties56.setThreadedTwoPhaseCommit(true);
        atomikosProperties56.setMaxTimeout((long) '#');
        boolean boolean63 = atomikosProperties56.isForceShutdownOnVmExit();
        java.lang.Object obj64 = properties49.put((java.lang.Object) (short) 1, (java.lang.Object) atomikosProperties56);
        atomikosProperties56.setForceShutdownOnVmExit(true);
        java.util.Properties properties67 = atomikosProperties56.asProperties();
        java.lang.String str68 = atomikosProperties56.getTransactionManagerUniqueName();
        atomikosProperties56.setMaxTimeout((long) (short) 0);
        atomikosProperties56.setService("tmlog");
        atomikosProperties56.setSerialJtaTransactions(true);
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean75 = properties36.replace(obj47, obj48, (java.lang.Object) true);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(objCollection4);
        org.junit.Assert.assertNotNull(objEnumeration5);
        org.junit.Assert.assertNull(obj8);
        org.junit.Assert.assertNotNull(objEnumeration9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(objSet11);
        org.junit.Assert.assertNotNull(objEnumeration12);
        org.junit.Assert.assertNotNull(objEntrySet13);
        org.junit.Assert.assertNull(obj14);
        org.junit.Assert.assertNotNull(obj15);
        org.junit.Assert.assertEquals(obj15.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj15), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj15), "{}");
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNull(obj31);
        org.junit.Assert.assertNotNull(objEnumeration32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNotNull(objEnumeration34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNull(obj38);
        org.junit.Assert.assertNotNull(objEnumeration39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNotNull(objSet41);
        org.junit.Assert.assertNotNull(objEnumeration42);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNotNull(objEnumeration46);
        org.junit.Assert.assertNull(obj51);
        org.junit.Assert.assertNotNull(objEnumeration52);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertNotNull(objEntrySet54);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertNull(obj64);
        org.junit.Assert.assertNotNull(properties67);
        org.junit.Assert.assertNull(str68);
    }

    @Test
    public void test7611() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7611");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setSerialJtaTransactions(false);
        atomikosProperties0.setThreadedTwoPhaseCommit(true);
        atomikosProperties0.setSerialJtaTransactions(false);
        java.lang.String str7 = atomikosProperties0.getService();
        java.util.Properties properties8 = atomikosProperties0.asProperties();
        java.util.Properties properties9 = atomikosProperties0.asProperties();
        java.util.Properties properties10 = new java.util.Properties(properties9);
        java.lang.Object obj11 = properties10.clone();
        java.util.Collection<java.lang.Object> objCollection12 = properties10.values();
        java.util.Properties properties13 = new java.util.Properties();
        java.lang.Object obj15 = properties13.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration16 = properties13.elements();
        boolean boolean17 = properties13.isEmpty();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet18 = properties13.entrySet();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties20 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties20.setSerialJtaTransactions(false);
        atomikosProperties20.setThreadedTwoPhaseCommit(true);
        atomikosProperties20.setMaxTimeout((long) '#');
        boolean boolean27 = atomikosProperties20.isForceShutdownOnVmExit();
        java.lang.Object obj28 = properties13.put((java.lang.Object) (short) 1, (java.lang.Object) atomikosProperties20);
        atomikosProperties20.setForceShutdownOnVmExit(false);
        long long31 = atomikosProperties20.getDefaultJtaTimeout();
        atomikosProperties20.setThreadedTwoPhaseCommit(true);
        atomikosProperties20.setLogBaseName("{}");
        boolean boolean36 = atomikosProperties20.isThreadedTwoPhaseCommit();
        boolean boolean37 = atomikosProperties20.isThreadedTwoPhaseCommit();
        boolean boolean38 = properties10.containsKey((java.lang.Object) atomikosProperties20);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNotNull(properties8);
        org.junit.Assert.assertNotNull(properties9);
        org.junit.Assert.assertNotNull(obj11);
        org.junit.Assert.assertEquals(obj11.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj11), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj11), "{}");
        org.junit.Assert.assertNotNull(objCollection12);
        org.junit.Assert.assertNull(obj15);
        org.junit.Assert.assertNotNull(objEnumeration16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(objEntrySet18);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNull(obj28);
        org.junit.Assert.assertTrue("'" + long31 + "' != '" + 10000L + "'", long31 == 10000L);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
    }

    @Test
    public void test7612() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7612");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration3 = properties0.elements();
        boolean boolean4 = properties0.isEmpty();
        java.util.Set<java.lang.Object> objSet5 = properties0.keySet();
        boolean boolean6 = properties0.isEmpty();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet7 = properties0.entrySet();
        java.util.Properties properties8 = new java.util.Properties();
        java.lang.Object obj10 = properties8.remove((java.lang.Object) 0.0d);
        boolean boolean11 = properties8.isEmpty();
        java.lang.Object obj14 = properties8.setProperty("", "hi!");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties15 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties15.setSerialJtaTransactions(false);
        boolean boolean18 = properties0.remove((java.lang.Object) properties8, (java.lang.Object) atomikosProperties15);
        java.util.Properties properties19 = new java.util.Properties(properties8);
        int int20 = properties19.size();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties22 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties22.setSerialJtaTransactions(false);
        boolean boolean25 = atomikosProperties22.isSerialJtaTransactions();
        java.lang.String str26 = atomikosProperties22.getService();
        boolean boolean27 = atomikosProperties22.isEnableLogging();
        java.lang.String str28 = atomikosProperties22.getTransactionManagerUniqueName();
        boolean boolean29 = properties19.remove((java.lang.Object) (byte) 1, (java.lang.Object) atomikosProperties22);
        atomikosProperties22.setMaxActives((int) (short) -1);
        boolean boolean32 = atomikosProperties22.isThreadedTwoPhaseCommit();
        atomikosProperties22.setDefaultJtaTimeout((long) 100);
        boolean boolean35 = atomikosProperties22.isThreadedTwoPhaseCommit();
        long long36 = atomikosProperties22.getCheckpointInterval();
        java.lang.String str37 = atomikosProperties22.getTransactionManagerUniqueName();
        boolean boolean38 = atomikosProperties22.isEnableLogging();
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(objEnumeration3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(objSet5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(objEntrySet7);
        org.junit.Assert.assertNull(obj10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNull(obj14);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 0 + "'", int20 == 0);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNull(str26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNull(str28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertTrue("'" + long36 + "' != '" + 500L + "'", long36 == 500L);
        org.junit.Assert.assertNull(str37);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
    }

    @Test
    public void test7613() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7613");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet3 = properties0.stringPropertyNames();
        java.util.Properties properties4 = new java.util.Properties();
        java.lang.Object obj6 = properties4.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet7 = properties4.stringPropertyNames();
        java.lang.Object obj9 = properties0.put((java.lang.Object) strSet7, (java.lang.Object) 0.0d);
        java.util.Properties properties10 = new java.util.Properties();
        java.util.Properties properties11 = new java.util.Properties();
        java.lang.Object obj13 = properties11.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet14 = properties11.stringPropertyNames();
        boolean boolean15 = properties10.containsValue((java.lang.Object) properties11);
        java.util.Collection<java.lang.Object> objCollection16 = properties10.values();
        java.util.Properties properties18 = new java.util.Properties();
        java.lang.Object obj20 = properties18.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration21 = properties18.elements();
        boolean boolean22 = properties18.isEmpty();
        java.util.Set<java.lang.Object> objSet23 = properties18.keySet();
        java.lang.Object obj24 = properties10.putIfAbsent((java.lang.Object) "hi!", (java.lang.Object) objSet23);
        java.util.Set<java.lang.Object> objSet25 = properties10.keySet();
        java.lang.Object obj27 = properties0.putIfAbsent((java.lang.Object) properties10, (java.lang.Object) (short) 10);
        java.util.Enumeration<?> wildcardEnumeration28 = properties10.propertyNames();
        java.util.Properties properties29 = new java.util.Properties();
        java.lang.Object obj31 = properties29.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration32 = properties29.elements();
        boolean boolean33 = properties29.isEmpty();
        java.util.Set<java.lang.Object> objSet34 = properties29.keySet();
        boolean boolean35 = properties29.isEmpty();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet36 = properties29.entrySet();
        java.util.Properties properties37 = new java.util.Properties();
        java.lang.Object obj39 = properties37.remove((java.lang.Object) 0.0d);
        boolean boolean40 = properties37.isEmpty();
        java.lang.Object obj43 = properties37.setProperty("", "hi!");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties44 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties44.setSerialJtaTransactions(false);
        boolean boolean47 = properties29.remove((java.lang.Object) properties37, (java.lang.Object) atomikosProperties44);
        java.util.Properties properties48 = new java.util.Properties(properties37);
        int int49 = properties48.size();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties51 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties51.setSerialJtaTransactions(false);
        boolean boolean54 = atomikosProperties51.isSerialJtaTransactions();
        java.lang.String str55 = atomikosProperties51.getService();
        boolean boolean56 = atomikosProperties51.isEnableLogging();
        java.lang.String str57 = atomikosProperties51.getTransactionManagerUniqueName();
        boolean boolean58 = properties48.remove((java.lang.Object) (byte) 1, (java.lang.Object) atomikosProperties51);
        atomikosProperties51.setMaxActives((int) (short) -1);
        boolean boolean61 = atomikosProperties51.isForceShutdownOnVmExit();
        boolean boolean62 = atomikosProperties51.isEnableLogging();
        long long63 = atomikosProperties51.getDefaultJtaTimeout();
        boolean boolean64 = properties10.containsKey((java.lang.Object) atomikosProperties51);
        atomikosProperties51.setSerialJtaTransactions(false);
        atomikosProperties51.setMaxActives(50);
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(strSet3);
        org.junit.Assert.assertNull(obj6);
        org.junit.Assert.assertNotNull(strSet7);
        org.junit.Assert.assertNull(obj9);
        org.junit.Assert.assertNull(obj13);
        org.junit.Assert.assertNotNull(strSet14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(objCollection16);
        org.junit.Assert.assertNull(obj20);
        org.junit.Assert.assertNotNull(objEnumeration21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNotNull(objSet23);
        org.junit.Assert.assertNull(obj24);
        org.junit.Assert.assertNotNull(objSet25);
        org.junit.Assert.assertNull(obj27);
        org.junit.Assert.assertNotNull(wildcardEnumeration28);
        org.junit.Assert.assertNull(obj31);
        org.junit.Assert.assertNotNull(objEnumeration32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNotNull(objSet34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertNotNull(objEntrySet36);
        org.junit.Assert.assertNull(obj39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNull(obj43);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 0 + "'", int49 == 0);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertNull(str55);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertNull(str57);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + true + "'", boolean62 == true);
        org.junit.Assert.assertTrue("'" + long63 + "' != '" + 10000L + "'", long63 == 10000L);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
    }

    @Test
    public void test7614() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7614");
        java.util.Properties properties0 = new java.util.Properties();
        java.util.Collection<java.lang.Object> objCollection1 = properties0.values();
        java.util.Properties properties2 = new java.util.Properties();
        java.lang.Object obj4 = properties2.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet5 = properties2.stringPropertyNames();
        java.util.Properties properties6 = new java.util.Properties();
        java.util.Properties properties7 = new java.util.Properties();
        java.lang.Object obj9 = properties7.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet10 = properties7.stringPropertyNames();
        boolean boolean11 = properties6.containsValue((java.lang.Object) properties7);
        java.util.Collection<java.lang.Object> objCollection12 = properties6.values();
        java.util.Enumeration<?> wildcardEnumeration13 = properties6.propertyNames();
        java.lang.Object obj15 = properties2.put((java.lang.Object) wildcardEnumeration13, (java.lang.Object) 10.0d);
        boolean boolean16 = properties0.equals((java.lang.Object) 10.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration17 = properties0.keys();
        int int18 = properties0.size();
        java.io.PrintStream printStream19 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties0.list(printStream19);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(objCollection1);
        org.junit.Assert.assertNull(obj4);
        org.junit.Assert.assertNotNull(strSet5);
        org.junit.Assert.assertNull(obj9);
        org.junit.Assert.assertNotNull(strSet10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(objCollection12);
        org.junit.Assert.assertNotNull(wildcardEnumeration13);
        org.junit.Assert.assertNull(obj15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(objEnumeration17);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 0 + "'", int18 == 0);
    }

    @Test
    public void test7615() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7615");
        java.util.Properties properties0 = new java.util.Properties();
        java.util.Collection<java.lang.Object> objCollection1 = properties0.values();
        java.util.Collection<java.lang.Object> objCollection2 = properties0.values();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties3 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties3.setSerialJtaTransactions(false);
        boolean boolean6 = atomikosProperties3.isThreadedTwoPhaseCommit();
        atomikosProperties3.setThreadedTwoPhaseCommit(false);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties9 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties9.setSerialJtaTransactions(false);
        boolean boolean12 = atomikosProperties9.isSerialJtaTransactions();
        atomikosProperties9.setTransactionManagerUniqueName("hi!");
        java.lang.String str15 = atomikosProperties9.getLogBaseName();
        java.lang.String str16 = atomikosProperties9.getLogBaseName();
        boolean boolean17 = atomikosProperties9.isForceShutdownOnVmExit();
        long long18 = atomikosProperties9.getMaxTimeout();
        java.lang.String str19 = atomikosProperties9.getTransactionManagerUniqueName();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties20 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties20.setSerialJtaTransactions(false);
        atomikosProperties20.setThreadedTwoPhaseCommit(true);
        atomikosProperties20.setThreadedTwoPhaseCommit(true);
        boolean boolean27 = properties0.replace((java.lang.Object) atomikosProperties3, (java.lang.Object) str19, (java.lang.Object) true);
        java.util.Properties properties28 = atomikosProperties3.asProperties();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet29 = properties28.entrySet();
        org.junit.Assert.assertNotNull(objCollection1);
        org.junit.Assert.assertNotNull(objCollection2);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "tmlog" + "'", str15, "tmlog");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "tmlog" + "'", str16, "tmlog");
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + long18 + "' != '" + 300000L + "'", long18 == 300000L);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "hi!" + "'", str19, "hi!");
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(properties28);
        org.junit.Assert.assertNotNull(objEntrySet29);
    }

    @Test
    public void test7616() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7616");
        java.util.Properties properties0 = new java.util.Properties();
        java.util.Properties properties1 = new java.util.Properties();
        java.lang.Object obj3 = properties1.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet4 = properties1.stringPropertyNames();
        boolean boolean5 = properties0.containsValue((java.lang.Object) properties1);
        boolean boolean6 = properties1.isEmpty();
        java.lang.String str8 = properties1.getProperty("{true=class org.springframework.boot.jta.atomikos.AtomikosProperties}");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties9 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties9.setSerialJtaTransactions(false);
        atomikosProperties9.setThreadedTwoPhaseCommit(true);
        atomikosProperties9.setThreadedTwoPhaseCommit(true);
        java.util.Properties properties16 = atomikosProperties9.asProperties();
        int int17 = atomikosProperties9.getMaxActives();
        atomikosProperties9.setService("hi!");
        long long20 = atomikosProperties9.getMaxTimeout();
        boolean boolean21 = atomikosProperties9.isForceShutdownOnVmExit();
        atomikosProperties9.setService("hi!");
        boolean boolean24 = atomikosProperties9.isForceShutdownOnVmExit();
        java.lang.Object obj25 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean26 = properties1.remove((java.lang.Object) atomikosProperties9, obj25);
// flaky:             org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(obj3);
        org.junit.Assert.assertNotNull(strSet4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNotNull(properties16);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 50 + "'", int17 == 50);
        org.junit.Assert.assertTrue("'" + long20 + "' != '" + 300000L + "'", long20 == 300000L);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
    }

    @Test
    public void test7617() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7617");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setSerialJtaTransactions(false);
        atomikosProperties0.setThreadedTwoPhaseCommit(true);
        atomikosProperties0.setThreadedTwoPhaseCommit(true);
        java.util.Properties properties7 = atomikosProperties0.asProperties();
        int int8 = atomikosProperties0.getMaxActives();
        atomikosProperties0.setService("hi!");
        long long11 = atomikosProperties0.getMaxTimeout();
        atomikosProperties0.setTransactionManagerUniqueName("hi!");
        atomikosProperties0.setEnableLogging(false);
        atomikosProperties0.setMaxActives((int) 'a');
        atomikosProperties0.setLogBaseName("{=hi!}");
        boolean boolean20 = atomikosProperties0.isForceShutdownOnVmExit();
        atomikosProperties0.setLogBaseName("");
        long long23 = atomikosProperties0.getCheckpointInterval();
        atomikosProperties0.setThreadedTwoPhaseCommit(true);
        org.junit.Assert.assertNotNull(properties7);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 50 + "'", int8 == 50);
        org.junit.Assert.assertTrue("'" + long11 + "' != '" + 300000L + "'", long11 == 300000L);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertTrue("'" + long23 + "' != '" + 500L + "'", long23 == 500L);
    }

    @Test
    public void test7618() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7618");
        java.util.Properties properties0 = new java.util.Properties();
        java.util.Collection<java.lang.Object> objCollection1 = properties0.values();
        java.util.Enumeration<java.lang.Object> objEnumeration2 = properties0.keys();
        java.lang.Object obj5 = properties0.setProperty("{}", "{}");
        java.util.Set<java.lang.String> strSet6 = properties0.stringPropertyNames();
        java.util.Properties properties7 = new java.util.Properties();
        boolean boolean9 = properties7.contains((java.lang.Object) 100.0d);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties10 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties10.setSerialJtaTransactions(false);
        atomikosProperties10.setThreadedTwoPhaseCommit(true);
        atomikosProperties10.setSerialJtaTransactions(false);
        java.lang.String str17 = atomikosProperties10.getService();
        boolean boolean18 = properties7.containsKey((java.lang.Object) atomikosProperties10);
        boolean boolean19 = properties0.containsKey((java.lang.Object) properties7);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties20 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties20.setSerialJtaTransactions(false);
        boolean boolean23 = atomikosProperties20.isSerialJtaTransactions();
        atomikosProperties20.setTransactionManagerUniqueName("hi!");
        java.lang.String str26 = atomikosProperties20.getLogBaseName();
        java.lang.String str27 = atomikosProperties20.getLogBaseName();
        long long28 = atomikosProperties20.getDefaultJtaTimeout();
        java.util.Properties properties29 = new java.util.Properties();
        java.lang.Object obj31 = properties29.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration32 = properties29.elements();
        boolean boolean33 = properties29.isEmpty();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet34 = properties29.entrySet();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties36 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties36.setSerialJtaTransactions(false);
        atomikosProperties36.setThreadedTwoPhaseCommit(true);
        atomikosProperties36.setMaxTimeout((long) '#');
        boolean boolean43 = atomikosProperties36.isForceShutdownOnVmExit();
        java.lang.Object obj44 = properties29.put((java.lang.Object) (short) 1, (java.lang.Object) atomikosProperties36);
        atomikosProperties36.setForceShutdownOnVmExit(true);
        java.util.Properties properties47 = atomikosProperties36.asProperties();
        java.lang.Object obj48 = properties0.getOrDefault((java.lang.Object) atomikosProperties20, (java.lang.Object) properties47);
        atomikosProperties20.setThreadedTwoPhaseCommit(true);
        atomikosProperties20.setThreadedTwoPhaseCommit(false);
        java.util.Properties properties53 = atomikosProperties20.asProperties();
        int int54 = atomikosProperties20.getMaxActives();
        org.junit.Assert.assertNotNull(objCollection1);
        org.junit.Assert.assertNotNull(objEnumeration2);
        org.junit.Assert.assertNull(obj5);
        org.junit.Assert.assertNotNull(strSet6);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNull(str17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "tmlog" + "'", str26, "tmlog");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "tmlog" + "'", str27, "tmlog");
        org.junit.Assert.assertTrue("'" + long28 + "' != '" + 10000L + "'", long28 == 10000L);
        org.junit.Assert.assertNull(obj31);
        org.junit.Assert.assertNotNull(objEnumeration32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNotNull(objEntrySet34);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNull(obj44);
        org.junit.Assert.assertNotNull(properties47);
        org.junit.Assert.assertNotNull(obj48);
// flaky:         org.junit.Assert.assertEquals(obj48.toString(), "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=true, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=false, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=35, com.atomikos.icatch.threaded_2pc=true, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
// flaky:         org.junit.Assert.assertEquals(java.lang.String.valueOf(obj48), "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=true, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=false, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=35, com.atomikos.icatch.threaded_2pc=true, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
// flaky:         org.junit.Assert.assertEquals(java.util.Objects.toString(obj48), "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=true, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=false, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=35, com.atomikos.icatch.threaded_2pc=true, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
        org.junit.Assert.assertNotNull(properties53);
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + 50 + "'", int54 == 50);
    }

    @Test
    public void test7619() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7619");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        boolean boolean3 = properties0.isEmpty();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties4 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties4.setSerialJtaTransactions(false);
        atomikosProperties4.setThreadedTwoPhaseCommit(true);
        atomikosProperties4.setThreadedTwoPhaseCommit(true);
        java.util.Properties properties11 = atomikosProperties4.asProperties();
        int int12 = atomikosProperties4.getMaxActives();
        atomikosProperties4.setService("hi!");
        java.lang.Object obj15 = properties0.get((java.lang.Object) atomikosProperties4);
        java.util.Properties properties16 = new java.util.Properties();
        java.lang.Object obj18 = properties16.remove((java.lang.Object) 0.0d);
        boolean boolean19 = properties16.isEmpty();
        java.util.Enumeration<java.lang.Object> objEnumeration20 = properties16.elements();
        java.lang.Object obj23 = properties16.replace((java.lang.Object) 1, (java.lang.Object) 1);
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet24 = properties16.entrySet();
        java.util.Properties properties25 = new java.util.Properties();
        java.lang.Object obj27 = properties25.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration28 = properties25.elements();
        boolean boolean29 = properties25.isEmpty();
        java.util.Set<java.lang.Object> objSet30 = properties25.keySet();
        java.util.Properties properties31 = new java.util.Properties();
        java.lang.Object obj33 = properties31.remove((java.lang.Object) 0.0d);
        java.util.Properties properties34 = new java.util.Properties();
        java.util.Collection<java.lang.Object> objCollection35 = properties34.values();
        java.util.Enumeration<java.lang.Object> objEnumeration36 = properties34.keys();
        java.util.Properties properties37 = new java.util.Properties();
        java.lang.Object obj39 = properties37.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration40 = properties37.elements();
        boolean boolean41 = properties37.isEmpty();
        java.util.Set<java.lang.Object> objSet42 = properties37.keySet();
        java.util.Enumeration<java.lang.Object> objEnumeration43 = properties37.keys();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet44 = properties37.entrySet();
        java.lang.Object obj45 = properties31.put((java.lang.Object) properties34, (java.lang.Object) properties37);
        java.lang.String str47 = properties34.getProperty("{=hi!}");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties48 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties48.setSerialJtaTransactions(false);
        atomikosProperties48.setThreadedTwoPhaseCommit(true);
        atomikosProperties48.setThreadedTwoPhaseCommit(true);
        long long55 = atomikosProperties48.getMaxTimeout();
        boolean boolean56 = properties34.containsValue((java.lang.Object) atomikosProperties48);
        java.util.Enumeration<java.lang.Object> objEnumeration57 = properties34.elements();
        java.util.Set<java.lang.String> strSet58 = properties34.stringPropertyNames();
        boolean boolean59 = properties25.contains((java.lang.Object) properties34);
        java.util.Properties properties60 = new java.util.Properties();
        java.lang.Object obj62 = properties60.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration63 = properties60.elements();
        int int64 = properties60.size();
        java.util.Properties properties65 = new java.util.Properties(properties60);
        java.lang.Object obj66 = properties34.remove((java.lang.Object) properties65);
        boolean boolean67 = properties16.equals(obj66);
        boolean boolean68 = properties0.equals(obj66);
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet69 = properties0.entrySet();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet70 = properties0.entrySet();
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(properties11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 50 + "'", int12 == 50);
        org.junit.Assert.assertNull(obj15);
        org.junit.Assert.assertNull(obj18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(objEnumeration20);
        org.junit.Assert.assertNull(obj23);
        org.junit.Assert.assertNotNull(objEntrySet24);
        org.junit.Assert.assertNull(obj27);
        org.junit.Assert.assertNotNull(objEnumeration28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNotNull(objSet30);
        org.junit.Assert.assertNull(obj33);
        org.junit.Assert.assertNotNull(objCollection35);
        org.junit.Assert.assertNotNull(objEnumeration36);
        org.junit.Assert.assertNull(obj39);
        org.junit.Assert.assertNotNull(objEnumeration40);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertNotNull(objSet42);
        org.junit.Assert.assertNotNull(objEnumeration43);
        org.junit.Assert.assertNotNull(objEntrySet44);
        org.junit.Assert.assertNull(obj45);
        org.junit.Assert.assertNull(str47);
        org.junit.Assert.assertTrue("'" + long55 + "' != '" + 300000L + "'", long55 == 300000L);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertNotNull(objEnumeration57);
        org.junit.Assert.assertNotNull(strSet58);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertNull(obj62);
        org.junit.Assert.assertNotNull(objEnumeration63);
        org.junit.Assert.assertTrue("'" + int64 + "' != '" + 0 + "'", int64 == 0);
        org.junit.Assert.assertNull(obj66);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertNotNull(objEntrySet69);
        org.junit.Assert.assertNotNull(objEntrySet70);
    }

    @Test
    public void test7620() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7620");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setSerialJtaTransactions(false);
        atomikosProperties0.setThreadedTwoPhaseCommit(true);
        atomikosProperties0.setLogBaseName("{=hi!}");
        java.lang.String str7 = atomikosProperties0.getTransactionManagerUniqueName();
        java.util.Properties properties8 = atomikosProperties0.asProperties();
        java.lang.String str9 = atomikosProperties0.getService();
        java.lang.String str10 = atomikosProperties0.getService();
        java.lang.String str11 = atomikosProperties0.getLogBaseDir();
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNotNull(properties8);
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertNull(str11);
    }

    @Test
    public void test7621() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7621");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setSerialJtaTransactions(false);
        atomikosProperties0.setThreadedTwoPhaseCommit(true);
        atomikosProperties0.setMaxTimeout((long) '#');
        boolean boolean7 = atomikosProperties0.isEnableLogging();
        long long8 = atomikosProperties0.getCheckpointInterval();
        atomikosProperties0.setMaxTimeout(35L);
        java.lang.String str11 = atomikosProperties0.getTransactionManagerUniqueName();
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertTrue("'" + long8 + "' != '" + 500L + "'", long8 == 500L);
        org.junit.Assert.assertNull(str11);
    }

    @Test
    public void test7622() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7622");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setSerialJtaTransactions(false);
        atomikosProperties0.setThreadedTwoPhaseCommit(true);
        atomikosProperties0.setEnableLogging(false);
        boolean boolean7 = atomikosProperties0.isSerialJtaTransactions();
        int int8 = atomikosProperties0.getMaxActives();
        atomikosProperties0.setTransactionManagerUniqueName("tmlog");
        int int11 = atomikosProperties0.getMaxActives();
        int int12 = atomikosProperties0.getMaxActives();
        boolean boolean13 = atomikosProperties0.isForceShutdownOnVmExit();
        atomikosProperties0.setService("hi!");
        boolean boolean16 = atomikosProperties0.isSerialJtaTransactions();
        atomikosProperties0.setService("{com.atomikos.icatch.enable_logging=false, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=false, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 50 + "'", int8 == 50);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 50 + "'", int11 == 50);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 50 + "'", int12 == 50);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
    }

    @Test
    public void test7623() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7623");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setSerialJtaTransactions(false);
        atomikosProperties0.setThreadedTwoPhaseCommit(true);
        atomikosProperties0.setEnableLogging(false);
        boolean boolean7 = atomikosProperties0.isSerialJtaTransactions();
        int int8 = atomikosProperties0.getMaxActives();
        boolean boolean9 = atomikosProperties0.isEnableLogging();
        long long10 = atomikosProperties0.getCheckpointInterval();
        java.util.Properties properties11 = atomikosProperties0.asProperties();
        java.util.Enumeration<java.lang.Object> objEnumeration12 = properties11.elements();
        java.lang.String str14 = properties11.getProperty("{tmlog=}");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties15 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties15.setSerialJtaTransactions(false);
        atomikosProperties15.setThreadedTwoPhaseCommit(true);
        atomikosProperties15.setMaxTimeout((long) '#');
        boolean boolean22 = atomikosProperties15.isEnableLogging();
        atomikosProperties15.setForceShutdownOnVmExit(true);
        atomikosProperties15.setForceShutdownOnVmExit(true);
        atomikosProperties15.setLogBaseDir("{=hi!}");
        java.lang.Object obj29 = properties11.remove((java.lang.Object) "{=hi!}");
        java.lang.Object obj30 = properties11.clone();
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 50 + "'", int8 == 50);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + long10 + "' != '" + 500L + "'", long10 == 500L);
        org.junit.Assert.assertNotNull(properties11);
        org.junit.Assert.assertNotNull(objEnumeration12);
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNull(obj29);
        org.junit.Assert.assertNotNull(obj30);
// flaky:         org.junit.Assert.assertEquals(obj30.toString(), "{com.atomikos.icatch.enable_logging=false, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=false, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=true, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
// flaky:         org.junit.Assert.assertEquals(java.lang.String.valueOf(obj30), "{com.atomikos.icatch.enable_logging=false, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=false, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=true, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
// flaky:         org.junit.Assert.assertEquals(java.util.Objects.toString(obj30), "{com.atomikos.icatch.enable_logging=false, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=false, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=true, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
    }

    @Test
    public void test7624() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7624");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration3 = properties0.elements();
        boolean boolean4 = properties0.isEmpty();
        java.util.Set<java.lang.Object> objSet5 = properties0.keySet();
        boolean boolean7 = properties0.containsKey((java.lang.Object) (-1.0f));
        java.util.Collection<java.lang.Object> objCollection8 = properties0.values();
        java.util.Set<java.lang.Object> objSet9 = properties0.keySet();
        java.lang.Object obj10 = properties0.clone();
        java.lang.String str11 = properties0.toString();
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(objEnumeration3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(objSet5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(objCollection8);
        org.junit.Assert.assertNotNull(objSet9);
        org.junit.Assert.assertNotNull(obj10);
        org.junit.Assert.assertEquals(obj10.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj10), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj10), "{}");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "{}" + "'", str11, "{}");
    }

    @Test
    public void test7625() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7625");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setSerialJtaTransactions(false);
        atomikosProperties0.setThreadedTwoPhaseCommit(true);
        atomikosProperties0.setMaxTimeout((long) '#');
        boolean boolean7 = atomikosProperties0.isForceShutdownOnVmExit();
        atomikosProperties0.setCheckpointInterval((long) '4');
        int int10 = atomikosProperties0.getMaxActives();
        atomikosProperties0.setService("{{}={}}");
        long long13 = atomikosProperties0.getMaxTimeout();
        atomikosProperties0.setMaxTimeout((long) 10);
        atomikosProperties0.setMaxTimeout((long) (short) 10);
        atomikosProperties0.setCheckpointInterval(10L);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 50 + "'", int10 == 50);
        org.junit.Assert.assertTrue("'" + long13 + "' != '" + 35L + "'", long13 == 35L);
    }

    @Test
    public void test7626() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7626");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setSerialJtaTransactions(false);
        boolean boolean3 = atomikosProperties0.isSerialJtaTransactions();
        java.lang.String str4 = atomikosProperties0.getService();
        boolean boolean5 = atomikosProperties0.isEnableLogging();
        java.util.Properties properties6 = atomikosProperties0.asProperties();
        java.util.Properties properties7 = new java.util.Properties();
        java.lang.Object obj9 = properties7.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration10 = properties7.elements();
        int int11 = properties7.size();
        java.util.Properties properties12 = new java.util.Properties(properties7);
        java.util.Set<java.lang.String> strSet13 = properties7.stringPropertyNames();
        java.util.Set<java.lang.String> strSet14 = properties7.stringPropertyNames();
        java.lang.Object obj15 = properties6.remove((java.lang.Object) properties7);
        java.util.Properties properties16 = new java.util.Properties();
        java.lang.Object obj18 = properties16.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration19 = properties16.elements();
        int int20 = properties16.size();
        java.util.Properties properties21 = new java.util.Properties();
        java.lang.Object obj23 = properties21.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration24 = properties21.elements();
        boolean boolean25 = properties21.isEmpty();
        java.util.Set<java.lang.Object> objSet26 = properties21.keySet();
        boolean boolean27 = properties16.containsKey((java.lang.Object) objSet26);
        java.util.Enumeration<java.lang.Object> objEnumeration28 = properties16.keys();
        java.util.Properties properties29 = new java.util.Properties();
        java.lang.Object obj31 = properties29.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration32 = properties29.elements();
        boolean boolean33 = properties29.isEmpty();
        java.util.Set<java.lang.Object> objSet34 = properties29.keySet();
        java.util.Enumeration<java.lang.Object> objEnumeration35 = properties29.keys();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet36 = properties29.entrySet();
        boolean boolean38 = properties16.remove((java.lang.Object) properties29, (java.lang.Object) 1.0f);
        java.lang.Object obj39 = properties29.clone();
        java.util.Collection<java.lang.Object> objCollection40 = properties29.values();
        java.util.Properties properties41 = new java.util.Properties(properties29);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties42 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties42.setSerialJtaTransactions(false);
        boolean boolean45 = atomikosProperties42.isSerialJtaTransactions();
        atomikosProperties42.setTransactionManagerUniqueName("hi!");
        atomikosProperties42.setForceShutdownOnVmExit(false);
        atomikosProperties42.setDefaultJtaTimeout((long) (byte) 10);
        java.lang.String str52 = atomikosProperties42.getTransactionManagerUniqueName();
        atomikosProperties42.setForceShutdownOnVmExit(true);
        boolean boolean55 = properties41.contains((java.lang.Object) atomikosProperties42);
        java.util.Properties properties56 = new java.util.Properties();
        java.lang.Object obj58 = properties56.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration59 = properties56.elements();
        boolean boolean60 = properties56.isEmpty();
        java.util.Set<java.lang.Object> objSet61 = properties56.keySet();
        java.lang.Object obj62 = properties56.clone();
        java.lang.Class<?> wildcardClass63 = properties56.getClass();
        boolean boolean64 = properties41.containsValue((java.lang.Object) properties56);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties65 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties65.setSerialJtaTransactions(false);
        atomikosProperties65.setThreadedTwoPhaseCommit(true);
        atomikosProperties65.setSerialJtaTransactions(false);
        atomikosProperties65.setService("{=hi!}");
        atomikosProperties65.setLogBaseDir("");
        boolean boolean76 = properties41.containsKey((java.lang.Object) "");
        java.util.Set<java.lang.String> strSet77 = properties41.stringPropertyNames();
        boolean boolean78 = properties6.contains((java.lang.Object) properties41);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNotNull(properties6);
        org.junit.Assert.assertNull(obj9);
        org.junit.Assert.assertNotNull(objEnumeration10);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertNotNull(strSet13);
        org.junit.Assert.assertNotNull(strSet14);
        org.junit.Assert.assertNull(obj15);
        org.junit.Assert.assertNull(obj18);
        org.junit.Assert.assertNotNull(objEnumeration19);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 0 + "'", int20 == 0);
        org.junit.Assert.assertNull(obj23);
        org.junit.Assert.assertNotNull(objEnumeration24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(objSet26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(objEnumeration28);
        org.junit.Assert.assertNull(obj31);
        org.junit.Assert.assertNotNull(objEnumeration32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNotNull(objSet34);
        org.junit.Assert.assertNotNull(objEnumeration35);
        org.junit.Assert.assertNotNull(objEntrySet36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(obj39);
        org.junit.Assert.assertEquals(obj39.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj39), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj39), "{}");
        org.junit.Assert.assertNotNull(objCollection40);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "hi!" + "'", str52, "hi!");
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertNull(obj58);
        org.junit.Assert.assertNotNull(objEnumeration59);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertNotNull(objSet61);
        org.junit.Assert.assertNotNull(obj62);
        org.junit.Assert.assertEquals(obj62.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj62), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj62), "{}");
        org.junit.Assert.assertNotNull(wildcardClass63);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
        org.junit.Assert.assertNotNull(strSet77);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + false + "'", boolean78 == false);
    }

    @Test
    public void test7627() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7627");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setSerialJtaTransactions(false);
        atomikosProperties0.setThreadedTwoPhaseCommit(true);
        boolean boolean5 = atomikosProperties0.isForceShutdownOnVmExit();
        java.lang.String str6 = atomikosProperties0.getLogBaseDir();
        atomikosProperties0.setTransactionManagerUniqueName("{=hi!}");
        java.lang.String str9 = atomikosProperties0.getLogBaseName();
        long long10 = atomikosProperties0.getCheckpointInterval();
        atomikosProperties0.setSerialJtaTransactions(true);
        atomikosProperties0.setService("hi!");
        atomikosProperties0.setForceShutdownOnVmExit(false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "tmlog" + "'", str9, "tmlog");
        org.junit.Assert.assertTrue("'" + long10 + "' != '" + 500L + "'", long10 == 500L);
    }

    @Test
    public void test7628() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7628");
        java.util.Properties properties0 = new java.util.Properties();
        java.util.Properties properties1 = new java.util.Properties();
        java.lang.Object obj3 = properties1.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet4 = properties1.stringPropertyNames();
        boolean boolean5 = properties0.containsValue((java.lang.Object) properties1);
        java.util.Collection<java.lang.Object> objCollection6 = properties0.values();
        java.util.Properties properties8 = new java.util.Properties();
        java.lang.Object obj10 = properties8.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration11 = properties8.elements();
        boolean boolean12 = properties8.isEmpty();
        java.util.Set<java.lang.Object> objSet13 = properties8.keySet();
        java.lang.Object obj14 = properties0.putIfAbsent((java.lang.Object) "hi!", (java.lang.Object) objSet13);
        java.util.Set<java.lang.Object> objSet15 = properties0.keySet();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties16 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties16.setSerialJtaTransactions(false);
        atomikosProperties16.setThreadedTwoPhaseCommit(true);
        atomikosProperties16.setMaxTimeout((long) '#');
        boolean boolean23 = atomikosProperties16.isEnableLogging();
        atomikosProperties16.setCheckpointInterval((long) (byte) -1);
        atomikosProperties16.setEnableLogging(true);
        java.util.Properties properties28 = new java.util.Properties();
        java.lang.Object obj30 = properties28.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration31 = properties28.elements();
        boolean boolean32 = properties28.isEmpty();
        java.util.Enumeration<java.lang.Object> objEnumeration33 = properties28.elements();
        java.lang.Object obj34 = properties0.replace((java.lang.Object) true, (java.lang.Object) properties28);
        java.util.Properties properties35 = new java.util.Properties();
        java.lang.Object obj37 = properties35.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration38 = properties35.elements();
        int int39 = properties35.size();
        java.util.Properties properties40 = new java.util.Properties(properties35);
        java.util.Set<java.lang.String> strSet41 = properties35.stringPropertyNames();
        boolean boolean42 = properties0.contains((java.lang.Object) strSet41);
        java.util.Properties properties43 = new java.util.Properties();
        java.lang.Object obj45 = properties43.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration46 = properties43.elements();
        boolean boolean47 = properties43.isEmpty();
        java.util.Set<java.lang.Object> objSet48 = properties43.keySet();
        java.util.Properties properties49 = new java.util.Properties();
        java.lang.Object obj51 = properties49.remove((java.lang.Object) 0.0d);
        java.util.Properties properties52 = new java.util.Properties();
        java.util.Collection<java.lang.Object> objCollection53 = properties52.values();
        java.util.Enumeration<java.lang.Object> objEnumeration54 = properties52.keys();
        java.util.Properties properties55 = new java.util.Properties();
        java.lang.Object obj57 = properties55.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration58 = properties55.elements();
        boolean boolean59 = properties55.isEmpty();
        java.util.Set<java.lang.Object> objSet60 = properties55.keySet();
        java.util.Enumeration<java.lang.Object> objEnumeration61 = properties55.keys();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet62 = properties55.entrySet();
        java.lang.Object obj63 = properties49.put((java.lang.Object) properties52, (java.lang.Object) properties55);
        java.lang.String str65 = properties52.getProperty("{=hi!}");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties66 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties66.setSerialJtaTransactions(false);
        atomikosProperties66.setThreadedTwoPhaseCommit(true);
        atomikosProperties66.setThreadedTwoPhaseCommit(true);
        long long73 = atomikosProperties66.getMaxTimeout();
        boolean boolean74 = properties52.containsValue((java.lang.Object) atomikosProperties66);
        java.util.Enumeration<java.lang.Object> objEnumeration75 = properties52.elements();
        java.util.Set<java.lang.String> strSet76 = properties52.stringPropertyNames();
        boolean boolean77 = properties43.contains((java.lang.Object) properties52);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties79 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties79.setSerialJtaTransactions(false);
        atomikosProperties79.setThreadedTwoPhaseCommit(true);
        atomikosProperties79.setEnableLogging(false);
        boolean boolean86 = atomikosProperties79.isSerialJtaTransactions();
        int int87 = atomikosProperties79.getMaxActives();
        boolean boolean88 = atomikosProperties79.isEnableLogging();
        long long89 = atomikosProperties79.getCheckpointInterval();
        java.util.Properties properties90 = atomikosProperties79.asProperties();
        atomikosProperties79.setForceShutdownOnVmExit(false);
        boolean boolean93 = atomikosProperties79.isSerialJtaTransactions();
        java.lang.Object obj94 = properties52.put((java.lang.Object) (byte) -1, (java.lang.Object) boolean93);
        java.lang.Object obj95 = properties0.get((java.lang.Object) boolean93);
        properties0.clear();
        java.util.Set<java.lang.Object> objSet97 = properties0.keySet();
        org.junit.Assert.assertNull(obj3);
        org.junit.Assert.assertNotNull(strSet4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(objCollection6);
        org.junit.Assert.assertNull(obj10);
        org.junit.Assert.assertNotNull(objEnumeration11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(objSet13);
        org.junit.Assert.assertNull(obj14);
        org.junit.Assert.assertNotNull(objSet15);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNull(obj30);
        org.junit.Assert.assertNotNull(objEnumeration31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertNotNull(objEnumeration33);
        org.junit.Assert.assertNull(obj34);
        org.junit.Assert.assertNull(obj37);
        org.junit.Assert.assertNotNull(objEnumeration38);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 0 + "'", int39 == 0);
        org.junit.Assert.assertNotNull(strSet41);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertNull(obj45);
        org.junit.Assert.assertNotNull(objEnumeration46);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertNotNull(objSet48);
        org.junit.Assert.assertNull(obj51);
        org.junit.Assert.assertNotNull(objCollection53);
        org.junit.Assert.assertNotNull(objEnumeration54);
        org.junit.Assert.assertNull(obj57);
        org.junit.Assert.assertNotNull(objEnumeration58);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertNotNull(objSet60);
        org.junit.Assert.assertNotNull(objEnumeration61);
        org.junit.Assert.assertNotNull(objEntrySet62);
        org.junit.Assert.assertNull(obj63);
        org.junit.Assert.assertNull(str65);
        org.junit.Assert.assertTrue("'" + long73 + "' != '" + 300000L + "'", long73 == 300000L);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
        org.junit.Assert.assertNotNull(objEnumeration75);
        org.junit.Assert.assertNotNull(strSet76);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + false + "'", boolean77 == false);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + false + "'", boolean86 == false);
        org.junit.Assert.assertTrue("'" + int87 + "' != '" + 50 + "'", int87 == 50);
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + false + "'", boolean88 == false);
        org.junit.Assert.assertTrue("'" + long89 + "' != '" + 500L + "'", long89 == 500L);
        org.junit.Assert.assertNotNull(properties90);
        org.junit.Assert.assertTrue("'" + boolean93 + "' != '" + false + "'", boolean93 == false);
        org.junit.Assert.assertNull(obj94);
        org.junit.Assert.assertNull(obj95);
        org.junit.Assert.assertNotNull(objSet97);
    }

    @Test
    public void test7629() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7629");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setSerialJtaTransactions(false);
        atomikosProperties0.setThreadedTwoPhaseCommit(true);
        atomikosProperties0.setEnableLogging(false);
        boolean boolean7 = atomikosProperties0.isSerialJtaTransactions();
        int int8 = atomikosProperties0.getMaxActives();
        boolean boolean9 = atomikosProperties0.isEnableLogging();
        long long10 = atomikosProperties0.getCheckpointInterval();
        java.util.Properties properties11 = atomikosProperties0.asProperties();
        atomikosProperties0.setSerialJtaTransactions(false);
        int int14 = atomikosProperties0.getMaxActives();
        long long15 = atomikosProperties0.getMaxTimeout();
        java.util.Properties properties16 = atomikosProperties0.asProperties();
        java.util.Properties properties17 = new java.util.Properties();
        java.util.Properties properties18 = new java.util.Properties();
        java.lang.Object obj20 = properties18.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet21 = properties18.stringPropertyNames();
        boolean boolean22 = properties17.containsValue((java.lang.Object) properties18);
        java.util.Enumeration<?> wildcardEnumeration23 = properties18.propertyNames();
        java.util.Properties properties24 = new java.util.Properties();
        java.lang.Object obj26 = properties24.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration27 = properties24.elements();
        boolean boolean28 = properties24.isEmpty();
        java.util.Set<java.lang.Object> objSet29 = properties24.keySet();
        java.util.Enumeration<java.lang.Object> objEnumeration30 = properties24.keys();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet31 = properties24.entrySet();
        boolean boolean32 = properties18.containsValue((java.lang.Object) objEntrySet31);
        java.util.Properties properties33 = new java.util.Properties();
        java.util.Properties properties34 = new java.util.Properties();
        java.lang.Object obj36 = properties34.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet37 = properties34.stringPropertyNames();
        boolean boolean38 = properties33.containsValue((java.lang.Object) properties34);
        java.util.Collection<java.lang.Object> objCollection39 = properties33.values();
        java.util.Properties properties41 = new java.util.Properties();
        java.lang.Object obj43 = properties41.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration44 = properties41.elements();
        boolean boolean45 = properties41.isEmpty();
        java.util.Set<java.lang.Object> objSet46 = properties41.keySet();
        java.lang.Object obj47 = properties33.putIfAbsent((java.lang.Object) "hi!", (java.lang.Object) objSet46);
        java.util.Set<java.lang.Object> objSet48 = properties33.keySet();
        java.util.Set<java.lang.Object> objSet49 = properties33.keySet();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet50 = properties33.entrySet();
        java.util.Set<java.lang.Object> objSet51 = properties33.keySet();
        boolean boolean52 = properties18.equals((java.lang.Object) objSet51);
        java.util.Set<java.lang.Object> objSet53 = properties18.keySet();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties54 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties54.setSerialJtaTransactions(false);
        atomikosProperties54.setThreadedTwoPhaseCommit(true);
        atomikosProperties54.setEnableLogging(false);
        boolean boolean61 = atomikosProperties54.isSerialJtaTransactions();
        int int62 = atomikosProperties54.getMaxActives();
        boolean boolean63 = atomikosProperties54.isEnableLogging();
        long long64 = atomikosProperties54.getCheckpointInterval();
        java.util.Properties properties65 = atomikosProperties54.asProperties();
        atomikosProperties54.setSerialJtaTransactions(false);
        atomikosProperties54.setDefaultJtaTimeout((long) (-1));
        atomikosProperties54.setService("{{{}={}}={}}");
        java.util.Properties properties72 = atomikosProperties54.asProperties();
        java.lang.Object obj73 = properties16.put((java.lang.Object) properties18, (java.lang.Object) atomikosProperties54);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 50 + "'", int8 == 50);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + long10 + "' != '" + 500L + "'", long10 == 500L);
        org.junit.Assert.assertNotNull(properties11);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 50 + "'", int14 == 50);
        org.junit.Assert.assertTrue("'" + long15 + "' != '" + 300000L + "'", long15 == 300000L);
        org.junit.Assert.assertNotNull(properties16);
        org.junit.Assert.assertNull(obj20);
        org.junit.Assert.assertNotNull(strSet21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(wildcardEnumeration23);
        org.junit.Assert.assertNull(obj26);
        org.junit.Assert.assertNotNull(objEnumeration27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNotNull(objSet29);
        org.junit.Assert.assertNotNull(objEnumeration30);
        org.junit.Assert.assertNotNull(objEntrySet31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNull(obj36);
        org.junit.Assert.assertNotNull(strSet37);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(objCollection39);
        org.junit.Assert.assertNull(obj43);
        org.junit.Assert.assertNotNull(objEnumeration44);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertNotNull(objSet46);
        org.junit.Assert.assertNull(obj47);
        org.junit.Assert.assertNotNull(objSet48);
        org.junit.Assert.assertNotNull(objSet49);
        org.junit.Assert.assertNotNull(objEntrySet50);
        org.junit.Assert.assertNotNull(objSet51);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNotNull(objSet53);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + 50 + "'", int62 == 50);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertTrue("'" + long64 + "' != '" + 500L + "'", long64 == 500L);
        org.junit.Assert.assertNotNull(properties65);
        org.junit.Assert.assertNotNull(properties72);
        org.junit.Assert.assertNull(obj73);
    }

    @Test
    public void test7630() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7630");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setSerialJtaTransactions(false);
        atomikosProperties0.setThreadedTwoPhaseCommit(true);
        atomikosProperties0.setMaxTimeout((long) '#');
        boolean boolean7 = atomikosProperties0.isEnableLogging();
        int int8 = atomikosProperties0.getMaxActives();
        boolean boolean9 = atomikosProperties0.isSerialJtaTransactions();
        atomikosProperties0.setLogBaseName("{}");
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 50 + "'", int8 == 50);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
    }

    @Test
    public void test7631() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7631");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setSerialJtaTransactions(false);
        atomikosProperties0.setThreadedTwoPhaseCommit(true);
        atomikosProperties0.setMaxTimeout((long) '#');
        java.lang.String str7 = atomikosProperties0.getService();
        atomikosProperties0.setDefaultJtaTimeout((long) '#');
        atomikosProperties0.setCheckpointInterval((long) (byte) -1);
        atomikosProperties0.setLogBaseName("tmlog");
        java.lang.String str14 = atomikosProperties0.getLogBaseDir();
        boolean boolean15 = atomikosProperties0.isEnableLogging();
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
    }

    @Test
    public void test7632() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7632");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration3 = properties0.elements();
        java.util.Enumeration<java.lang.Object> objEnumeration4 = properties0.elements();
        int int5 = properties0.size();
        java.util.Properties properties6 = new java.util.Properties();
        java.lang.Object obj8 = properties6.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration9 = properties6.elements();
        boolean boolean10 = properties6.isEmpty();
        java.util.Set<java.lang.Object> objSet11 = properties6.keySet();
        boolean boolean12 = properties6.isEmpty();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet13 = properties6.entrySet();
        java.util.Properties properties14 = new java.util.Properties();
        java.lang.Object obj16 = properties14.remove((java.lang.Object) 0.0d);
        boolean boolean17 = properties14.isEmpty();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties18 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        boolean boolean19 = properties14.containsValue((java.lang.Object) atomikosProperties18);
        java.util.Properties properties20 = new java.util.Properties();
        java.lang.Object obj22 = properties20.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration23 = properties20.elements();
        int int24 = properties20.size();
        java.util.Properties properties25 = new java.util.Properties(properties20);
        java.util.Set<java.lang.String> strSet26 = properties20.stringPropertyNames();
        java.util.Set<java.lang.String> strSet27 = properties20.stringPropertyNames();
        java.lang.Object obj28 = properties6.getOrDefault((java.lang.Object) properties14, (java.lang.Object) properties20);
        boolean boolean29 = properties0.equals((java.lang.Object) properties20);
        java.util.Properties properties30 = new java.util.Properties();
        java.lang.Object obj32 = properties30.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration33 = properties30.elements();
        boolean boolean34 = properties30.isEmpty();
        java.util.Set<java.lang.Object> objSet35 = properties30.keySet();
        boolean boolean36 = properties30.isEmpty();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet37 = properties30.entrySet();
        java.util.Properties properties38 = new java.util.Properties();
        java.lang.Object obj40 = properties38.remove((java.lang.Object) 0.0d);
        boolean boolean41 = properties38.isEmpty();
        java.lang.Object obj44 = properties38.setProperty("", "hi!");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties45 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties45.setSerialJtaTransactions(false);
        boolean boolean48 = properties30.remove((java.lang.Object) properties38, (java.lang.Object) atomikosProperties45);
        java.util.Properties properties49 = new java.util.Properties(properties38);
        int int50 = properties49.size();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties52 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties52.setSerialJtaTransactions(false);
        boolean boolean55 = atomikosProperties52.isSerialJtaTransactions();
        java.lang.String str56 = atomikosProperties52.getService();
        boolean boolean57 = atomikosProperties52.isEnableLogging();
        java.lang.String str58 = atomikosProperties52.getTransactionManagerUniqueName();
        boolean boolean59 = properties49.remove((java.lang.Object) (byte) 1, (java.lang.Object) atomikosProperties52);
        java.util.Properties properties60 = new java.util.Properties();
        java.lang.Object obj62 = properties60.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration63 = properties60.elements();
        boolean boolean64 = properties60.isEmpty();
        java.util.Enumeration<java.lang.Object> objEnumeration65 = properties60.elements();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet66 = properties60.entrySet();
        java.lang.Object obj67 = properties49.remove((java.lang.Object) objEntrySet66);
        boolean boolean68 = properties49.isEmpty();
        java.lang.String str69 = properties49.toString();
        properties49.clear();
        java.util.Enumeration<java.lang.Object> objEnumeration71 = properties49.elements();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties72 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties72.setSerialJtaTransactions(false);
        atomikosProperties72.setThreadedTwoPhaseCommit(true);
        atomikosProperties72.setThreadedTwoPhaseCommit(true);
        java.util.Properties properties79 = atomikosProperties72.asProperties();
        int int80 = atomikosProperties72.getMaxActives();
        atomikosProperties72.setService("hi!");
        long long83 = atomikosProperties72.getMaxTimeout();
        atomikosProperties72.setTransactionManagerUniqueName("hi!");
        atomikosProperties72.setForceShutdownOnVmExit(false);
        java.lang.String str88 = atomikosProperties72.getService();
        java.lang.String str89 = atomikosProperties72.getLogBaseName();
        java.lang.Object obj90 = properties0.replace((java.lang.Object) objEnumeration71, (java.lang.Object) atomikosProperties72);
        atomikosProperties72.setMaxActives(50);
        long long93 = atomikosProperties72.getCheckpointInterval();
        boolean boolean94 = atomikosProperties72.isEnableLogging();
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(objEnumeration3);
        org.junit.Assert.assertNotNull(objEnumeration4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertNull(obj8);
        org.junit.Assert.assertNotNull(objEnumeration9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(objSet11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(objEntrySet13);
        org.junit.Assert.assertNull(obj16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNull(obj22);
        org.junit.Assert.assertNotNull(objEnumeration23);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 0 + "'", int24 == 0);
        org.junit.Assert.assertNotNull(strSet26);
        org.junit.Assert.assertNotNull(strSet27);
        org.junit.Assert.assertNotNull(obj28);
        org.junit.Assert.assertEquals(obj28.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj28), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj28), "{}");
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNull(obj32);
        org.junit.Assert.assertNotNull(objEnumeration33);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertNotNull(objSet35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNotNull(objEntrySet37);
        org.junit.Assert.assertNull(obj40);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertNull(obj44);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + 0 + "'", int50 == 0);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertNull(str56);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertNull(str58);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertNull(obj62);
        org.junit.Assert.assertNotNull(objEnumeration63);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64 == true);
        org.junit.Assert.assertNotNull(objEnumeration65);
        org.junit.Assert.assertNotNull(objEntrySet66);
        org.junit.Assert.assertNull(obj67);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + true + "'", boolean68 == true);
        org.junit.Assert.assertEquals("'" + str69 + "' != '" + "{}" + "'", str69, "{}");
        org.junit.Assert.assertNotNull(objEnumeration71);
        org.junit.Assert.assertNotNull(properties79);
        org.junit.Assert.assertTrue("'" + int80 + "' != '" + 50 + "'", int80 == 50);
        org.junit.Assert.assertTrue("'" + long83 + "' != '" + 300000L + "'", long83 == 300000L);
        org.junit.Assert.assertEquals("'" + str88 + "' != '" + "hi!" + "'", str88, "hi!");
        org.junit.Assert.assertEquals("'" + str89 + "' != '" + "tmlog" + "'", str89, "tmlog");
        org.junit.Assert.assertNull(obj90);
        org.junit.Assert.assertTrue("'" + long93 + "' != '" + 500L + "'", long93 == 500L);
        org.junit.Assert.assertTrue("'" + boolean94 + "' != '" + true + "'", boolean94 == true);
    }

    @Test
    public void test7633() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7633");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setSerialJtaTransactions(false);
        atomikosProperties0.setThreadedTwoPhaseCommit(true);
        atomikosProperties0.setEnableLogging(false);
        atomikosProperties0.setForceShutdownOnVmExit(true);
        long long9 = atomikosProperties0.getDefaultJtaTimeout();
        atomikosProperties0.setLogBaseName("tmlog");
        atomikosProperties0.setForceShutdownOnVmExit(true);
        atomikosProperties0.setDefaultJtaTimeout((long) (byte) 0);
        atomikosProperties0.setEnableLogging(false);
        long long18 = atomikosProperties0.getDefaultJtaTimeout();
        org.junit.Assert.assertTrue("'" + long9 + "' != '" + 10000L + "'", long9 == 10000L);
        org.junit.Assert.assertTrue("'" + long18 + "' != '" + 0L + "'", long18 == 0L);
    }

    @Test
    public void test7634() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7634");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setSerialJtaTransactions(false);
        boolean boolean3 = atomikosProperties0.isSerialJtaTransactions();
        java.lang.String str4 = atomikosProperties0.getService();
        boolean boolean5 = atomikosProperties0.isEnableLogging();
        java.util.Properties properties6 = atomikosProperties0.asProperties();
        java.util.Properties properties7 = new java.util.Properties();
        java.lang.Object obj9 = properties7.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration10 = properties7.elements();
        int int11 = properties7.size();
        java.util.Properties properties12 = new java.util.Properties(properties7);
        java.util.Set<java.lang.String> strSet13 = properties7.stringPropertyNames();
        java.util.Set<java.lang.String> strSet14 = properties7.stringPropertyNames();
        java.lang.Object obj15 = properties6.remove((java.lang.Object) properties7);
        int int16 = properties6.size();
        java.io.PrintWriter printWriter17 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties6.list(printWriter17);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNotNull(properties6);
        org.junit.Assert.assertNull(obj9);
        org.junit.Assert.assertNotNull(objEnumeration10);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertNotNull(strSet13);
        org.junit.Assert.assertNotNull(strSet14);
        org.junit.Assert.assertNull(obj15);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 9 + "'", int16 == 9);
    }

    @Test
    public void test7635() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7635");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration3 = properties0.elements();
        boolean boolean4 = properties0.isEmpty();
        java.util.Set<java.lang.Object> objSet5 = properties0.keySet();
        java.util.Enumeration<java.lang.Object> objEnumeration6 = properties0.keys();
        java.util.Enumeration<java.lang.Object> objEnumeration7 = properties0.elements();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties8 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties8.setSerialJtaTransactions(false);
        boolean boolean11 = atomikosProperties8.isThreadedTwoPhaseCommit();
        atomikosProperties8.setTransactionManagerUniqueName("hi!");
        java.util.Properties properties14 = new java.util.Properties();
        java.lang.Object obj16 = properties14.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet17 = properties14.stringPropertyNames();
        java.util.Properties properties18 = new java.util.Properties();
        java.util.Properties properties19 = new java.util.Properties();
        java.lang.Object obj21 = properties19.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet22 = properties19.stringPropertyNames();
        boolean boolean23 = properties18.containsValue((java.lang.Object) properties19);
        java.util.Collection<java.lang.Object> objCollection24 = properties18.values();
        java.util.Enumeration<?> wildcardEnumeration25 = properties18.propertyNames();
        java.lang.Object obj27 = properties14.put((java.lang.Object) wildcardEnumeration25, (java.lang.Object) 10.0d);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties28 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties28.setSerialJtaTransactions(false);
        atomikosProperties28.setThreadedTwoPhaseCommit(true);
        atomikosProperties28.setMaxTimeout((long) '#');
        boolean boolean35 = atomikosProperties28.isForceShutdownOnVmExit();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties36 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties36.setSerialJtaTransactions(false);
        atomikosProperties36.setThreadedTwoPhaseCommit(true);
        atomikosProperties36.setThreadedTwoPhaseCommit(true);
        java.lang.Object obj43 = properties14.getOrDefault((java.lang.Object) boolean35, (java.lang.Object) atomikosProperties36);
        boolean boolean44 = properties0.remove((java.lang.Object) atomikosProperties8, obj43);
        atomikosProperties8.setLogBaseName("{true=class org.springframework.boot.jta.atomikos.AtomikosProperties}");
        atomikosProperties8.setService("{=hi!}");
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(objEnumeration3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(objSet5);
        org.junit.Assert.assertNotNull(objEnumeration6);
        org.junit.Assert.assertNotNull(objEnumeration7);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNull(obj16);
        org.junit.Assert.assertNotNull(strSet17);
        org.junit.Assert.assertNull(obj21);
        org.junit.Assert.assertNotNull(strSet22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(objCollection24);
        org.junit.Assert.assertNotNull(wildcardEnumeration25);
        org.junit.Assert.assertNull(obj27);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(obj43);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
    }

    @Test
    public void test7636() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7636");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setSerialJtaTransactions(false);
        boolean boolean3 = atomikosProperties0.isSerialJtaTransactions();
        atomikosProperties0.setTransactionManagerUniqueName("hi!");
        java.lang.String str6 = atomikosProperties0.getLogBaseName();
        java.lang.String str7 = atomikosProperties0.getLogBaseName();
        boolean boolean8 = atomikosProperties0.isForceShutdownOnVmExit();
        long long9 = atomikosProperties0.getCheckpointInterval();
        boolean boolean10 = atomikosProperties0.isThreadedTwoPhaseCommit();
        boolean boolean11 = atomikosProperties0.isThreadedTwoPhaseCommit();
        atomikosProperties0.setMaxTimeout((long) (short) 0);
        java.util.Properties properties14 = atomikosProperties0.asProperties();
        atomikosProperties0.setMaxActives((int) (short) 10);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "tmlog" + "'", str6, "tmlog");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "tmlog" + "'", str7, "tmlog");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + long9 + "' != '" + 500L + "'", long9 == 500L);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(properties14);
    }

    @Test
    public void test7637() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7637");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        java.util.Properties properties3 = new java.util.Properties();
        java.util.Collection<java.lang.Object> objCollection4 = properties3.values();
        java.util.Enumeration<java.lang.Object> objEnumeration5 = properties3.keys();
        java.util.Properties properties6 = new java.util.Properties();
        java.lang.Object obj8 = properties6.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration9 = properties6.elements();
        boolean boolean10 = properties6.isEmpty();
        java.util.Set<java.lang.Object> objSet11 = properties6.keySet();
        java.util.Enumeration<java.lang.Object> objEnumeration12 = properties6.keys();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet13 = properties6.entrySet();
        java.lang.Object obj14 = properties0.put((java.lang.Object) properties3, (java.lang.Object) properties6);
        java.util.Properties properties15 = new java.util.Properties();
        java.util.Collection<java.lang.Object> objCollection16 = properties15.values();
        java.util.Enumeration<java.lang.Object> objEnumeration17 = properties15.keys();
        java.lang.Object obj20 = properties15.setProperty("{}", "{}");
        java.util.Set<java.lang.String> strSet21 = properties15.stringPropertyNames();
        java.util.Properties properties22 = new java.util.Properties();
        boolean boolean24 = properties22.contains((java.lang.Object) 100.0d);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties25 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties25.setSerialJtaTransactions(false);
        atomikosProperties25.setThreadedTwoPhaseCommit(true);
        atomikosProperties25.setSerialJtaTransactions(false);
        java.lang.String str32 = atomikosProperties25.getService();
        boolean boolean33 = properties22.containsKey((java.lang.Object) atomikosProperties25);
        boolean boolean34 = properties15.containsKey((java.lang.Object) properties22);
        java.lang.String str36 = properties15.getProperty("");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties37 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties37.setSerialJtaTransactions(false);
        atomikosProperties37.setThreadedTwoPhaseCommit(true);
        atomikosProperties37.setMaxTimeout((long) '#');
        boolean boolean44 = atomikosProperties37.isEnableLogging();
        atomikosProperties37.setCheckpointInterval((long) (byte) -1);
        atomikosProperties37.setMaxActives((int) (byte) 100);
        atomikosProperties37.setForceShutdownOnVmExit(false);
        boolean boolean51 = properties15.contains((java.lang.Object) false);
        properties15.clear();
        boolean boolean53 = properties6.equals((java.lang.Object) properties15);
        java.util.Enumeration<java.lang.Object> objEnumeration54 = properties6.elements();
        java.io.PrintWriter printWriter55 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties6.list(printWriter55);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(objCollection4);
        org.junit.Assert.assertNotNull(objEnumeration5);
        org.junit.Assert.assertNull(obj8);
        org.junit.Assert.assertNotNull(objEnumeration9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(objSet11);
        org.junit.Assert.assertNotNull(objEnumeration12);
        org.junit.Assert.assertNotNull(objEntrySet13);
        org.junit.Assert.assertNull(obj14);
        org.junit.Assert.assertNotNull(objCollection16);
        org.junit.Assert.assertNotNull(objEnumeration17);
        org.junit.Assert.assertNull(obj20);
        org.junit.Assert.assertNotNull(strSet21);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNull(str32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNull(str36);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertNotNull(objEnumeration54);
    }

    @Test
    public void test7638() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7638");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet3 = properties0.stringPropertyNames();
        java.util.Properties properties4 = new java.util.Properties();
        java.lang.Object obj6 = properties4.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet7 = properties4.stringPropertyNames();
        java.lang.Object obj9 = properties0.put((java.lang.Object) strSet7, (java.lang.Object) 0.0d);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties10 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties10.setSerialJtaTransactions(false);
        atomikosProperties10.setThreadedTwoPhaseCommit(true);
        atomikosProperties10.setMaxTimeout((long) '#');
        boolean boolean17 = atomikosProperties10.isEnableLogging();
        atomikosProperties10.setCheckpointInterval((long) (byte) -1);
        atomikosProperties10.setEnableLogging(true);
        atomikosProperties10.setLogBaseName("{}");
        atomikosProperties10.setLogBaseName("tmlog");
        java.util.Properties properties26 = new java.util.Properties();
        java.lang.Object obj28 = properties26.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration29 = properties26.elements();
        boolean boolean30 = properties26.isEmpty();
        java.util.Set<java.lang.Object> objSet31 = properties26.keySet();
        java.util.Enumeration<java.lang.Object> objEnumeration32 = properties26.keys();
        java.lang.String str34 = properties26.getProperty("hi!");
        java.util.Properties properties36 = new java.util.Properties();
        java.lang.Object obj38 = properties36.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration39 = properties36.elements();
        int int40 = properties36.size();
        java.util.Properties properties41 = new java.util.Properties(properties36);
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet42 = properties36.entrySet();
        java.util.Properties properties43 = new java.util.Properties();
        java.util.Properties properties44 = new java.util.Properties();
        java.lang.Object obj46 = properties44.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet47 = properties44.stringPropertyNames();
        boolean boolean48 = properties43.containsValue((java.lang.Object) properties44);
        java.util.Collection<java.lang.Object> objCollection49 = properties43.values();
        java.util.Properties properties51 = new java.util.Properties();
        java.lang.Object obj53 = properties51.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration54 = properties51.elements();
        boolean boolean55 = properties51.isEmpty();
        java.util.Set<java.lang.Object> objSet56 = properties51.keySet();
        java.lang.Object obj57 = properties43.putIfAbsent((java.lang.Object) "hi!", (java.lang.Object) objSet56);
        boolean boolean58 = properties26.replace((java.lang.Object) "hi!", (java.lang.Object) properties36, (java.lang.Object) "hi!");
        java.util.Set<java.lang.String> strSet59 = properties36.stringPropertyNames();
        java.util.Properties properties60 = new java.util.Properties();
        java.lang.Object obj62 = properties60.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration63 = properties60.elements();
        int int64 = properties60.size();
        java.util.Properties properties65 = new java.util.Properties(properties60);
        java.util.Set<java.lang.String> strSet66 = properties60.stringPropertyNames();
        java.util.Set<java.lang.String> strSet67 = properties60.stringPropertyNames();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties68 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties68.setSerialJtaTransactions(false);
        atomikosProperties68.setThreadedTwoPhaseCommit(true);
        atomikosProperties68.setMaxTimeout((long) '#');
        boolean boolean75 = atomikosProperties68.isEnableLogging();
        atomikosProperties68.setCheckpointInterval((long) (byte) -1);
        atomikosProperties68.setEnableLogging(true);
        atomikosProperties68.setLogBaseName("{}");
        long long82 = atomikosProperties68.getDefaultJtaTimeout();
        java.lang.Object obj83 = properties36.putIfAbsent((java.lang.Object) properties60, (java.lang.Object) atomikosProperties68);
        java.lang.Object obj84 = properties0.getOrDefault((java.lang.Object) "tmlog", obj83);
        java.util.Collection<java.lang.Object> objCollection85 = properties0.values();
        java.lang.String str86 = properties0.toString();
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(strSet3);
        org.junit.Assert.assertNull(obj6);
        org.junit.Assert.assertNotNull(strSet7);
        org.junit.Assert.assertNull(obj9);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNull(obj28);
        org.junit.Assert.assertNotNull(objEnumeration29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNotNull(objSet31);
        org.junit.Assert.assertNotNull(objEnumeration32);
        org.junit.Assert.assertNull(str34);
        org.junit.Assert.assertNull(obj38);
        org.junit.Assert.assertNotNull(objEnumeration39);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 0 + "'", int40 == 0);
        org.junit.Assert.assertNotNull(objEntrySet42);
        org.junit.Assert.assertNull(obj46);
        org.junit.Assert.assertNotNull(strSet47);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNotNull(objCollection49);
        org.junit.Assert.assertNull(obj53);
        org.junit.Assert.assertNotNull(objEnumeration54);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertNotNull(objSet56);
        org.junit.Assert.assertNull(obj57);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertNotNull(strSet59);
        org.junit.Assert.assertNull(obj62);
        org.junit.Assert.assertNotNull(objEnumeration63);
        org.junit.Assert.assertTrue("'" + int64 + "' != '" + 0 + "'", int64 == 0);
        org.junit.Assert.assertNotNull(strSet66);
        org.junit.Assert.assertNotNull(strSet67);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + true + "'", boolean75 == true);
        org.junit.Assert.assertTrue("'" + long82 + "' != '" + 10000L + "'", long82 == 10000L);
        org.junit.Assert.assertNull(obj83);
        org.junit.Assert.assertNull(obj84);
        org.junit.Assert.assertNotNull(objCollection85);
        org.junit.Assert.assertEquals("'" + str86 + "' != '" + "{[]=0.0}" + "'", str86, "{[]=0.0}");
    }

    @Test
    public void test7639() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7639");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration3 = properties0.elements();
        boolean boolean4 = properties0.isEmpty();
        java.lang.Object obj7 = properties0.setProperty("tmlog", "");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties8 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties8.setSerialJtaTransactions(false);
        boolean boolean11 = atomikosProperties8.isSerialJtaTransactions();
        atomikosProperties8.setTransactionManagerUniqueName("hi!");
        atomikosProperties8.setForceShutdownOnVmExit(false);
        atomikosProperties8.setDefaultJtaTimeout((long) (byte) 10);
        java.lang.String str18 = atomikosProperties8.getTransactionManagerUniqueName();
        java.util.Properties properties19 = new java.util.Properties();
        java.util.Properties properties20 = new java.util.Properties();
        java.lang.Object obj22 = properties20.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet23 = properties20.stringPropertyNames();
        boolean boolean24 = properties19.containsValue((java.lang.Object) properties20);
        java.util.Collection<java.lang.Object> objCollection25 = properties19.values();
        java.util.Properties properties27 = new java.util.Properties();
        java.lang.Object obj29 = properties27.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration30 = properties27.elements();
        boolean boolean31 = properties27.isEmpty();
        java.util.Set<java.lang.Object> objSet32 = properties27.keySet();
        java.lang.Object obj33 = properties19.putIfAbsent((java.lang.Object) "hi!", (java.lang.Object) objSet32);
        java.util.Set<java.lang.Object> objSet34 = properties19.keySet();
        java.util.Set<java.lang.Object> objSet35 = properties19.keySet();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet36 = properties19.entrySet();
        java.util.Set<java.lang.Object> objSet37 = properties19.keySet();
        java.lang.Object obj38 = properties0.replace((java.lang.Object) atomikosProperties8, (java.lang.Object) properties19);
        java.util.Properties properties39 = atomikosProperties8.asProperties();
        java.util.Properties properties40 = new java.util.Properties();
        java.util.Collection<java.lang.Object> objCollection41 = properties40.values();
        java.util.Collection<java.lang.Object> objCollection42 = properties40.values();
        java.lang.Object obj43 = properties39.get((java.lang.Object) properties40);
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet44 = properties39.entrySet();
        java.util.Properties properties45 = new java.util.Properties();
        java.lang.Object obj47 = properties45.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration48 = properties45.elements();
        boolean boolean49 = properties45.isEmpty();
        java.util.Set<java.lang.Object> objSet50 = properties45.keySet();
        boolean boolean51 = properties45.isEmpty();
        java.util.Properties properties52 = new java.util.Properties();
        java.util.Collection<java.lang.Object> objCollection53 = properties52.values();
        java.util.Enumeration<java.lang.Object> objEnumeration54 = properties52.keys();
        java.lang.Object obj55 = properties45.remove((java.lang.Object) properties52);
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet56 = properties52.entrySet();
        boolean boolean57 = properties39.equals((java.lang.Object) properties52);
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(objEnumeration3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNull(obj7);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "hi!" + "'", str18, "hi!");
        org.junit.Assert.assertNull(obj22);
        org.junit.Assert.assertNotNull(strSet23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(objCollection25);
        org.junit.Assert.assertNull(obj29);
        org.junit.Assert.assertNotNull(objEnumeration30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNotNull(objSet32);
        org.junit.Assert.assertNull(obj33);
        org.junit.Assert.assertNotNull(objSet34);
        org.junit.Assert.assertNotNull(objSet35);
        org.junit.Assert.assertNotNull(objEntrySet36);
        org.junit.Assert.assertNotNull(objSet37);
        org.junit.Assert.assertNull(obj38);
        org.junit.Assert.assertNotNull(properties39);
        org.junit.Assert.assertNotNull(objCollection41);
        org.junit.Assert.assertNotNull(objCollection42);
        org.junit.Assert.assertNull(obj43);
        org.junit.Assert.assertNotNull(objEntrySet44);
        org.junit.Assert.assertNull(obj47);
        org.junit.Assert.assertNotNull(objEnumeration48);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertNotNull(objSet50);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertNotNull(objCollection53);
        org.junit.Assert.assertNotNull(objEnumeration54);
        org.junit.Assert.assertNull(obj55);
        org.junit.Assert.assertNotNull(objEntrySet56);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
    }

    @Test
    public void test7640() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7640");
        java.util.Properties properties0 = new java.util.Properties();
        java.util.Properties properties1 = new java.util.Properties();
        java.lang.Object obj3 = properties1.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet4 = properties1.stringPropertyNames();
        boolean boolean5 = properties0.containsValue((java.lang.Object) properties1);
        java.util.Properties properties6 = new java.util.Properties();
        java.lang.Object obj8 = properties6.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration9 = properties6.elements();
        boolean boolean10 = properties6.isEmpty();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet11 = properties6.entrySet();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties13 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties13.setSerialJtaTransactions(false);
        atomikosProperties13.setThreadedTwoPhaseCommit(true);
        atomikosProperties13.setMaxTimeout((long) '#');
        boolean boolean20 = atomikosProperties13.isForceShutdownOnVmExit();
        java.lang.Object obj21 = properties6.put((java.lang.Object) (short) 1, (java.lang.Object) atomikosProperties13);
        atomikosProperties13.setForceShutdownOnVmExit(true);
        java.util.Properties properties24 = atomikosProperties13.asProperties();
        java.lang.String str25 = atomikosProperties13.getService();
        atomikosProperties13.setLogBaseName("{{}=tmlog}");
        boolean boolean28 = properties0.equals((java.lang.Object) atomikosProperties13);
        boolean boolean29 = properties0.isEmpty();
        java.util.Enumeration<?> wildcardEnumeration30 = properties0.propertyNames();
        java.util.Enumeration<java.lang.Object> objEnumeration31 = properties0.keys();
        org.junit.Assert.assertNull(obj3);
        org.junit.Assert.assertNotNull(strSet4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNull(obj8);
        org.junit.Assert.assertNotNull(objEnumeration9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(objEntrySet11);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNull(obj21);
        org.junit.Assert.assertNotNull(properties24);
        org.junit.Assert.assertNull(str25);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNotNull(wildcardEnumeration30);
        org.junit.Assert.assertNotNull(objEnumeration31);
    }

    @Test
    public void test7641() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7641");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setSerialJtaTransactions(false);
        atomikosProperties0.setThreadedTwoPhaseCommit(true);
        atomikosProperties0.setEnableLogging(false);
        boolean boolean7 = atomikosProperties0.isSerialJtaTransactions();
        int int8 = atomikosProperties0.getMaxActives();
        boolean boolean9 = atomikosProperties0.isEnableLogging();
        atomikosProperties0.setForceShutdownOnVmExit(true);
        boolean boolean12 = atomikosProperties0.isSerialJtaTransactions();
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 50 + "'", int8 == 50);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
    }

    @Test
    public void test7642() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7642");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration3 = properties0.elements();
        boolean boolean4 = properties0.isEmpty();
        java.util.Set<java.lang.Object> objSet5 = properties0.keySet();
        java.util.Enumeration<java.lang.Object> objEnumeration6 = properties0.keys();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet7 = properties0.entrySet();
        java.util.Properties properties8 = new java.util.Properties(properties0);
        java.util.Set<java.lang.Object> objSet9 = properties0.keySet();
        java.util.Enumeration<java.lang.Object> objEnumeration10 = properties0.keys();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties11 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties11.setSerialJtaTransactions(false);
        atomikosProperties11.setThreadedTwoPhaseCommit(true);
        atomikosProperties11.setMaxTimeout((long) '#');
        boolean boolean18 = atomikosProperties11.isEnableLogging();
        atomikosProperties11.setCheckpointInterval((long) (byte) -1);
        atomikosProperties11.setMaxActives((int) (byte) 100);
        atomikosProperties11.setForceShutdownOnVmExit(false);
        boolean boolean25 = atomikosProperties11.isThreadedTwoPhaseCommit();
        boolean boolean26 = atomikosProperties11.isForceShutdownOnVmExit();
        atomikosProperties11.setCheckpointInterval((long) (byte) 100);
        atomikosProperties11.setEnableLogging(true);
        atomikosProperties11.setSerialJtaTransactions(true);
        atomikosProperties11.setEnableLogging(false);
        atomikosProperties11.setTransactionManagerUniqueName("{{}={}}");
        boolean boolean37 = properties0.equals((java.lang.Object) atomikosProperties11);
        java.io.PrintStream printStream38 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties0.list(printStream38);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(objEnumeration3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(objSet5);
        org.junit.Assert.assertNotNull(objEnumeration6);
        org.junit.Assert.assertNotNull(objEntrySet7);
        org.junit.Assert.assertNotNull(objSet9);
        org.junit.Assert.assertNotNull(objEnumeration10);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
    }

    @Test
    public void test7643() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7643");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setSerialJtaTransactions(false);
        boolean boolean3 = atomikosProperties0.isThreadedTwoPhaseCommit();
        atomikosProperties0.setTransactionManagerUniqueName("hi!");
        java.lang.String str6 = atomikosProperties0.getLogBaseName();
        atomikosProperties0.setSerialJtaTransactions(true);
        atomikosProperties0.setDefaultJtaTimeout(500L);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "tmlog" + "'", str6, "tmlog");
    }

    @Test
    public void test7644() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7644");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setSerialJtaTransactions(false);
        atomikosProperties0.setThreadedTwoPhaseCommit(true);
        atomikosProperties0.setThreadedTwoPhaseCommit(true);
        java.util.Properties properties7 = atomikosProperties0.asProperties();
        int int8 = atomikosProperties0.getMaxActives();
        boolean boolean9 = atomikosProperties0.isThreadedTwoPhaseCommit();
        atomikosProperties0.setCheckpointInterval((long) 50);
        atomikosProperties0.setMaxTimeout((long) (short) 0);
        atomikosProperties0.setService("{hi!=[]}");
        java.lang.String str16 = atomikosProperties0.getTransactionManagerUniqueName();
        atomikosProperties0.setLogBaseDir("{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=false, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=35, com.atomikos.icatch.threaded_2pc=true, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
        org.junit.Assert.assertNotNull(properties7);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 50 + "'", int8 == 50);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertNull(str16);
    }

    @Test
    public void test7645() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7645");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet3 = properties0.stringPropertyNames();
        java.util.Properties properties4 = new java.util.Properties();
        java.util.Properties properties5 = new java.util.Properties();
        java.lang.Object obj7 = properties5.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet8 = properties5.stringPropertyNames();
        boolean boolean9 = properties4.containsValue((java.lang.Object) properties5);
        java.util.Collection<java.lang.Object> objCollection10 = properties4.values();
        java.util.Enumeration<?> wildcardEnumeration11 = properties4.propertyNames();
        java.lang.Object obj13 = properties0.put((java.lang.Object) wildcardEnumeration11, (java.lang.Object) 10.0d);
        java.lang.String str15 = properties0.getProperty("");
        java.util.Properties properties16 = new java.util.Properties();
        java.lang.Object obj18 = properties16.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration19 = properties16.elements();
        boolean boolean20 = properties16.isEmpty();
        java.util.Set<java.lang.Object> objSet21 = properties16.keySet();
        boolean boolean22 = properties16.isEmpty();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet23 = properties16.entrySet();
        properties16.clear();
        boolean boolean25 = properties0.containsKey((java.lang.Object) properties16);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties26 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties26.setSerialJtaTransactions(false);
        boolean boolean29 = atomikosProperties26.isSerialJtaTransactions();
        java.lang.String str30 = atomikosProperties26.getService();
        boolean boolean31 = atomikosProperties26.isEnableLogging();
        java.util.Properties properties32 = atomikosProperties26.asProperties();
        java.util.Set<java.lang.String> strSet33 = properties32.stringPropertyNames();
        boolean boolean34 = properties32.isEmpty();
        java.util.Properties properties35 = new java.util.Properties();
        java.lang.Object obj37 = properties35.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration38 = properties35.elements();
        int int39 = properties35.size();
        java.util.Properties properties40 = new java.util.Properties(properties35);
        java.lang.Object obj41 = properties40.clone();
        boolean boolean42 = properties0.remove((java.lang.Object) properties32, obj41);
        java.lang.String str43 = properties32.toString();
        java.util.Enumeration<java.lang.Object> objEnumeration44 = properties32.elements();
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(strSet3);
        org.junit.Assert.assertNull(obj7);
        org.junit.Assert.assertNotNull(strSet8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(objCollection10);
        org.junit.Assert.assertNotNull(wildcardEnumeration11);
        org.junit.Assert.assertNull(obj13);
        org.junit.Assert.assertNull(str15);
        org.junit.Assert.assertNull(obj18);
        org.junit.Assert.assertNotNull(objEnumeration19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNotNull(objSet21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNotNull(objEntrySet23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNull(str30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNotNull(properties32);
        org.junit.Assert.assertNotNull(strSet33);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNull(obj37);
        org.junit.Assert.assertNotNull(objEnumeration38);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 0 + "'", int39 == 0);
        org.junit.Assert.assertNotNull(obj41);
        org.junit.Assert.assertEquals(obj41.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj41), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj41), "{}");
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
// flaky:         org.junit.Assert.assertEquals("'" + str43 + "' != '" + "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=false, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}" + "'", str43, "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=false, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
        org.junit.Assert.assertNotNull(objEnumeration44);
    }

    @Test
    public void test7646() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7646");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration3 = properties0.elements();
        java.util.Properties properties5 = new java.util.Properties();
        java.lang.Object obj7 = properties5.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration8 = properties5.elements();
        boolean boolean9 = properties5.isEmpty();
        java.util.Set<java.lang.Object> objSet10 = properties5.keySet();
        boolean boolean11 = properties5.isEmpty();
        java.lang.Object obj12 = properties0.getOrDefault((java.lang.Object) true, (java.lang.Object) boolean11);
        java.util.Properties properties13 = new java.util.Properties();
        java.lang.Object obj15 = properties13.remove((java.lang.Object) 0.0d);
        boolean boolean16 = properties13.isEmpty();
        java.util.Enumeration<java.lang.Object> objEnumeration17 = properties13.keys();
        java.util.Properties properties18 = new java.util.Properties();
        java.lang.Object obj20 = properties18.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet21 = properties18.stringPropertyNames();
        java.util.Properties properties22 = new java.util.Properties();
        java.util.Properties properties23 = new java.util.Properties();
        java.lang.Object obj25 = properties23.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet26 = properties23.stringPropertyNames();
        boolean boolean27 = properties22.containsValue((java.lang.Object) properties23);
        java.util.Collection<java.lang.Object> objCollection28 = properties22.values();
        java.util.Enumeration<?> wildcardEnumeration29 = properties22.propertyNames();
        java.lang.Object obj31 = properties18.put((java.lang.Object) wildcardEnumeration29, (java.lang.Object) 10.0d);
        java.util.Properties properties32 = new java.util.Properties();
        java.util.Properties properties33 = new java.util.Properties();
        java.lang.Object obj35 = properties33.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet36 = properties33.stringPropertyNames();
        boolean boolean37 = properties32.containsValue((java.lang.Object) properties33);
        java.util.Collection<java.lang.Object> objCollection38 = properties32.values();
        java.lang.Object obj39 = properties32.clone();
        boolean boolean40 = properties0.replace((java.lang.Object) properties13, (java.lang.Object) 10.0d, obj39);
        java.util.Properties properties41 = new java.util.Properties(properties13);
        boolean boolean42 = properties13.isEmpty();
        java.util.Set<java.lang.String> strSet43 = properties13.stringPropertyNames();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties44 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties44.setSerialJtaTransactions(false);
        atomikosProperties44.setThreadedTwoPhaseCommit(true);
        atomikosProperties44.setMaxTimeout((long) '#');
        boolean boolean51 = atomikosProperties44.isEnableLogging();
        atomikosProperties44.setCheckpointInterval((long) (byte) -1);
        atomikosProperties44.setMaxActives((int) (byte) 100);
        atomikosProperties44.setForceShutdownOnVmExit(false);
        boolean boolean58 = atomikosProperties44.isThreadedTwoPhaseCommit();
        boolean boolean59 = atomikosProperties44.isForceShutdownOnVmExit();
        atomikosProperties44.setCheckpointInterval((long) (byte) 100);
        atomikosProperties44.setEnableLogging(true);
        atomikosProperties44.setSerialJtaTransactions(true);
        java.lang.String str66 = atomikosProperties44.getTransactionManagerUniqueName();
        long long67 = atomikosProperties44.getDefaultJtaTimeout();
        boolean boolean68 = properties13.containsKey((java.lang.Object) long67);
        java.io.Writer writer69 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties13.store(writer69, "{[]=0.0}");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(objEnumeration3);
        org.junit.Assert.assertNull(obj7);
        org.junit.Assert.assertNotNull(objEnumeration8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertNotNull(objSet10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertEquals("'" + obj12 + "' != '" + true + "'", obj12, true);
        org.junit.Assert.assertNull(obj15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(objEnumeration17);
        org.junit.Assert.assertNull(obj20);
        org.junit.Assert.assertNotNull(strSet21);
        org.junit.Assert.assertNull(obj25);
        org.junit.Assert.assertNotNull(strSet26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(objCollection28);
        org.junit.Assert.assertNotNull(wildcardEnumeration29);
        org.junit.Assert.assertNull(obj31);
        org.junit.Assert.assertNull(obj35);
        org.junit.Assert.assertNotNull(strSet36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(objCollection38);
        org.junit.Assert.assertNotNull(obj39);
        org.junit.Assert.assertEquals(obj39.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj39), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj39), "{}");
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertNotNull(strSet43);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertNull(str66);
        org.junit.Assert.assertTrue("'" + long67 + "' != '" + 10000L + "'", long67 == 10000L);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
    }

    @Test
    public void test7647() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7647");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration3 = properties0.elements();
        boolean boolean4 = properties0.isEmpty();
        java.util.Set<java.lang.Object> objSet5 = properties0.keySet();
        java.util.Properties properties6 = new java.util.Properties();
        java.lang.Object obj8 = properties6.remove((java.lang.Object) 0.0d);
        java.util.Properties properties9 = new java.util.Properties();
        java.util.Collection<java.lang.Object> objCollection10 = properties9.values();
        java.util.Enumeration<java.lang.Object> objEnumeration11 = properties9.keys();
        java.util.Properties properties12 = new java.util.Properties();
        java.lang.Object obj14 = properties12.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration15 = properties12.elements();
        boolean boolean16 = properties12.isEmpty();
        java.util.Set<java.lang.Object> objSet17 = properties12.keySet();
        java.util.Enumeration<java.lang.Object> objEnumeration18 = properties12.keys();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet19 = properties12.entrySet();
        java.lang.Object obj20 = properties6.put((java.lang.Object) properties9, (java.lang.Object) properties12);
        java.lang.String str22 = properties9.getProperty("{=hi!}");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties23 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties23.setSerialJtaTransactions(false);
        atomikosProperties23.setThreadedTwoPhaseCommit(true);
        atomikosProperties23.setThreadedTwoPhaseCommit(true);
        long long30 = atomikosProperties23.getMaxTimeout();
        boolean boolean31 = properties9.containsValue((java.lang.Object) atomikosProperties23);
        java.util.Enumeration<java.lang.Object> objEnumeration32 = properties9.elements();
        java.util.Set<java.lang.String> strSet33 = properties9.stringPropertyNames();
        boolean boolean34 = properties0.contains((java.lang.Object) properties9);
        java.util.Properties properties35 = new java.util.Properties();
        java.lang.Object obj37 = properties35.remove((java.lang.Object) 0.0d);
        boolean boolean38 = properties35.isEmpty();
        java.lang.Object obj41 = properties35.setProperty("", "hi!");
        int int42 = properties35.size();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties43 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties43.setSerialJtaTransactions(false);
        boolean boolean46 = atomikosProperties43.isSerialJtaTransactions();
        java.lang.String str47 = atomikosProperties43.getService();
        atomikosProperties43.setEnableLogging(false);
        java.util.Properties properties50 = atomikosProperties43.asProperties();
        java.util.Properties properties51 = new java.util.Properties();
        java.lang.Object obj53 = properties51.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet54 = properties51.stringPropertyNames();
        java.util.Properties properties55 = new java.util.Properties();
        java.util.Properties properties56 = new java.util.Properties();
        java.lang.Object obj58 = properties56.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet59 = properties56.stringPropertyNames();
        boolean boolean60 = properties55.containsValue((java.lang.Object) properties56);
        java.util.Collection<java.lang.Object> objCollection61 = properties55.values();
        java.util.Enumeration<?> wildcardEnumeration62 = properties55.propertyNames();
        java.lang.Object obj64 = properties51.put((java.lang.Object) wildcardEnumeration62, (java.lang.Object) 10.0d);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties65 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties65.setSerialJtaTransactions(false);
        atomikosProperties65.setThreadedTwoPhaseCommit(true);
        atomikosProperties65.setMaxTimeout((long) '#');
        boolean boolean72 = atomikosProperties65.isForceShutdownOnVmExit();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties73 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties73.setSerialJtaTransactions(false);
        atomikosProperties73.setThreadedTwoPhaseCommit(true);
        atomikosProperties73.setThreadedTwoPhaseCommit(true);
        java.lang.Object obj80 = properties51.getOrDefault((java.lang.Object) boolean72, (java.lang.Object) atomikosProperties73);
        java.lang.Object obj81 = properties35.putIfAbsent((java.lang.Object) atomikosProperties43, (java.lang.Object) atomikosProperties73);
        java.lang.Object obj82 = properties9.remove((java.lang.Object) atomikosProperties43);
        atomikosProperties43.setMaxActives((int) (byte) 100);
        java.lang.String str85 = atomikosProperties43.getLogBaseName();
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(objEnumeration3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(objSet5);
        org.junit.Assert.assertNull(obj8);
        org.junit.Assert.assertNotNull(objCollection10);
        org.junit.Assert.assertNotNull(objEnumeration11);
        org.junit.Assert.assertNull(obj14);
        org.junit.Assert.assertNotNull(objEnumeration15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(objSet17);
        org.junit.Assert.assertNotNull(objEnumeration18);
        org.junit.Assert.assertNotNull(objEntrySet19);
        org.junit.Assert.assertNull(obj20);
        org.junit.Assert.assertNull(str22);
        org.junit.Assert.assertTrue("'" + long30 + "' != '" + 300000L + "'", long30 == 300000L);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(objEnumeration32);
        org.junit.Assert.assertNotNull(strSet33);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNull(obj37);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertNull(obj41);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 1 + "'", int42 == 1);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNull(str47);
        org.junit.Assert.assertNotNull(properties50);
        org.junit.Assert.assertNull(obj53);
        org.junit.Assert.assertNotNull(strSet54);
        org.junit.Assert.assertNull(obj58);
        org.junit.Assert.assertNotNull(strSet59);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertNotNull(objCollection61);
        org.junit.Assert.assertNotNull(wildcardEnumeration62);
        org.junit.Assert.assertNull(obj64);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertNotNull(obj80);
        org.junit.Assert.assertNull(obj81);
        org.junit.Assert.assertNull(obj82);
        org.junit.Assert.assertEquals("'" + str85 + "' != '" + "tmlog" + "'", str85, "tmlog");
    }

    @Test
    public void test7648() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7648");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setSerialJtaTransactions(false);
        atomikosProperties0.setThreadedTwoPhaseCommit(true);
        atomikosProperties0.setMaxTimeout((long) '#');
        boolean boolean7 = atomikosProperties0.isEnableLogging();
        atomikosProperties0.setCheckpointInterval((long) (byte) -1);
        atomikosProperties0.setEnableLogging(true);
        atomikosProperties0.setLogBaseDir("");
        java.lang.String str14 = atomikosProperties0.getTransactionManagerUniqueName();
        atomikosProperties0.setForceShutdownOnVmExit(true);
        atomikosProperties0.setMaxTimeout(35L);
        long long19 = atomikosProperties0.getDefaultJtaTimeout();
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertTrue("'" + long19 + "' != '" + 10000L + "'", long19 == 10000L);
    }

    @Test
    public void test7649() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7649");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setSerialJtaTransactions(false);
        atomikosProperties0.setThreadedTwoPhaseCommit(true);
        atomikosProperties0.setMaxTimeout((long) '#');
        boolean boolean7 = atomikosProperties0.isEnableLogging();
        atomikosProperties0.setMaxActives((int) '#');
        boolean boolean10 = atomikosProperties0.isForceShutdownOnVmExit();
        atomikosProperties0.setMaxActives((int) (short) 1);
        atomikosProperties0.setThreadedTwoPhaseCommit(false);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
    }

    @Test
    public void test7650() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7650");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setSerialJtaTransactions(false);
        atomikosProperties0.setThreadedTwoPhaseCommit(true);
        atomikosProperties0.setEnableLogging(false);
        boolean boolean7 = atomikosProperties0.isSerialJtaTransactions();
        int int8 = atomikosProperties0.getMaxActives();
        boolean boolean9 = atomikosProperties0.isEnableLogging();
        java.lang.String str10 = atomikosProperties0.getLogBaseDir();
        java.util.Properties properties11 = atomikosProperties0.asProperties();
        java.io.OutputStream outputStream12 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties11.save(outputStream12, "{{{}={}}={}}");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 50 + "'", int8 == 50);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertNotNull(properties11);
    }

    @Test
    public void test7651() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7651");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setSerialJtaTransactions(false);
        boolean boolean3 = atomikosProperties0.isSerialJtaTransactions();
        atomikosProperties0.setTransactionManagerUniqueName("tmlog");
        java.util.Properties properties6 = atomikosProperties0.asProperties();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties7 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties7.setSerialJtaTransactions(false);
        boolean boolean10 = atomikosProperties7.isSerialJtaTransactions();
        atomikosProperties7.setTransactionManagerUniqueName("hi!");
        boolean boolean13 = atomikosProperties7.isEnableLogging();
        java.lang.String str14 = atomikosProperties7.getTransactionManagerUniqueName();
        atomikosProperties7.setCheckpointInterval(1L);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties17 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties17.setSerialJtaTransactions(false);
        atomikosProperties17.setThreadedTwoPhaseCommit(true);
        atomikosProperties17.setThreadedTwoPhaseCommit(true);
        java.util.Properties properties24 = atomikosProperties17.asProperties();
        int int25 = atomikosProperties17.getMaxActives();
        atomikosProperties17.setService("hi!");
        long long28 = atomikosProperties17.getMaxTimeout();
        atomikosProperties17.setTransactionManagerUniqueName("hi!");
        java.util.Properties properties31 = atomikosProperties17.asProperties();
        java.lang.Object obj32 = properties6.getOrDefault((java.lang.Object) atomikosProperties7, (java.lang.Object) properties31);
        java.util.Properties properties33 = atomikosProperties7.asProperties();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties34 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties34.setSerialJtaTransactions(false);
        boolean boolean37 = atomikosProperties34.isSerialJtaTransactions();
        boolean boolean38 = atomikosProperties34.isEnableLogging();
        atomikosProperties34.setSerialJtaTransactions(true);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties41 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties41.setSerialJtaTransactions(false);
        atomikosProperties41.setThreadedTwoPhaseCommit(true);
        atomikosProperties41.setMaxTimeout((long) '#');
        boolean boolean48 = atomikosProperties41.isEnableLogging();
        atomikosProperties41.setCheckpointInterval((long) (byte) -1);
        atomikosProperties41.setCheckpointInterval(0L);
        java.lang.String str53 = atomikosProperties41.getService();
        boolean boolean54 = atomikosProperties41.isForceShutdownOnVmExit();
        java.util.Properties properties55 = atomikosProperties41.asProperties();
        java.lang.Object obj56 = properties55.clone();
        java.util.Enumeration<java.lang.Object> objEnumeration57 = properties55.elements();
        java.lang.Object obj58 = properties33.getOrDefault((java.lang.Object) atomikosProperties34, (java.lang.Object) properties55);
        java.util.Enumeration<java.lang.Object> objEnumeration59 = properties33.elements();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(properties6);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "hi!" + "'", str14, "hi!");
        org.junit.Assert.assertNotNull(properties24);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 50 + "'", int25 == 50);
        org.junit.Assert.assertTrue("'" + long28 + "' != '" + 300000L + "'", long28 == 300000L);
        org.junit.Assert.assertNotNull(properties31);
        org.junit.Assert.assertNotNull(obj32);
// flaky:         org.junit.Assert.assertEquals(obj32.toString(), "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=false, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.service=hi!, com.atomikos.icatch.threaded_2pc=true, com.atomikos.icatch.tm_unique_name=hi!, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
// flaky:         org.junit.Assert.assertEquals(java.lang.String.valueOf(obj32), "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=false, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.service=hi!, com.atomikos.icatch.threaded_2pc=true, com.atomikos.icatch.tm_unique_name=hi!, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
// flaky:         org.junit.Assert.assertEquals(java.util.Objects.toString(obj32), "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=false, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.service=hi!, com.atomikos.icatch.threaded_2pc=true, com.atomikos.icatch.tm_unique_name=hi!, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
        org.junit.Assert.assertNotNull(properties33);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertNull(str53);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertNotNull(properties55);
        org.junit.Assert.assertNotNull(obj56);
// flaky:         org.junit.Assert.assertEquals(obj56.toString(), "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=0, com.atomikos.icatch.serial_jta_transactions=false, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=35, com.atomikos.icatch.threaded_2pc=true, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
// flaky:         org.junit.Assert.assertEquals(java.lang.String.valueOf(obj56), "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=0, com.atomikos.icatch.serial_jta_transactions=false, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=35, com.atomikos.icatch.threaded_2pc=true, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
// flaky:         org.junit.Assert.assertEquals(java.util.Objects.toString(obj56), "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=0, com.atomikos.icatch.serial_jta_transactions=false, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=35, com.atomikos.icatch.threaded_2pc=true, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
        org.junit.Assert.assertNotNull(objEnumeration57);
        org.junit.Assert.assertNotNull(obj58);
// flaky:         org.junit.Assert.assertEquals(obj58.toString(), "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=0, com.atomikos.icatch.serial_jta_transactions=false, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=35, com.atomikos.icatch.threaded_2pc=true, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
// flaky:         org.junit.Assert.assertEquals(java.lang.String.valueOf(obj58), "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=0, com.atomikos.icatch.serial_jta_transactions=false, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=35, com.atomikos.icatch.threaded_2pc=true, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
// flaky:         org.junit.Assert.assertEquals(java.util.Objects.toString(obj58), "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=0, com.atomikos.icatch.serial_jta_transactions=false, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=35, com.atomikos.icatch.threaded_2pc=true, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
        org.junit.Assert.assertNotNull(objEnumeration59);
    }

    @Test
    public void test7652() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7652");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        boolean boolean4 = properties0.containsValue((java.lang.Object) "hi!");
        java.lang.Object obj7 = properties0.put((java.lang.Object) (byte) -1, (java.lang.Object) 100L);
        java.util.Properties properties8 = new java.util.Properties();
        java.util.Properties properties9 = new java.util.Properties();
        java.lang.Object obj11 = properties9.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet12 = properties9.stringPropertyNames();
        boolean boolean13 = properties8.containsValue((java.lang.Object) properties9);
        java.util.Collection<java.lang.Object> objCollection14 = properties8.values();
        java.util.Properties properties16 = new java.util.Properties();
        java.lang.Object obj18 = properties16.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration19 = properties16.elements();
        boolean boolean20 = properties16.isEmpty();
        java.util.Set<java.lang.Object> objSet21 = properties16.keySet();
        java.lang.Object obj22 = properties8.putIfAbsent((java.lang.Object) "hi!", (java.lang.Object) objSet21);
        java.util.Set<java.lang.Object> objSet23 = properties8.keySet();
        boolean boolean24 = properties0.containsKey((java.lang.Object) properties8);
        java.util.Enumeration<java.lang.Object> objEnumeration25 = properties8.elements();
        java.util.Properties properties26 = new java.util.Properties();
        java.lang.Object obj28 = properties26.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration29 = properties26.elements();
        boolean boolean30 = properties26.isEmpty();
        java.util.Set<java.lang.Object> objSet31 = properties26.keySet();
        boolean boolean32 = properties26.isEmpty();
        boolean boolean33 = properties8.contains((java.lang.Object) boolean32);
        java.util.Properties properties34 = new java.util.Properties();
        java.lang.Object obj36 = properties34.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration37 = properties34.elements();
        boolean boolean38 = properties34.isEmpty();
        java.util.Set<java.lang.Object> objSet39 = properties34.keySet();
        boolean boolean41 = properties34.containsKey((java.lang.Object) (-1.0f));
        java.util.Collection<java.lang.Object> objCollection42 = properties34.values();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties43 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties43.setSerialJtaTransactions(false);
        atomikosProperties43.setThreadedTwoPhaseCommit(true);
        atomikosProperties43.setLogBaseName("{=hi!}");
        java.lang.Object obj50 = properties8.put((java.lang.Object) objCollection42, (java.lang.Object) atomikosProperties43);
        atomikosProperties43.setForceShutdownOnVmExit(true);
        atomikosProperties43.setForceShutdownOnVmExit(true);
        atomikosProperties43.setTransactionManagerUniqueName("{}");
        java.util.Properties properties57 = atomikosProperties43.asProperties();
        java.io.OutputStream outputStream58 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties57.storeToXML(outputStream58, "{{{}={}}={}, =hi!}");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNull(obj7);
        org.junit.Assert.assertNull(obj11);
        org.junit.Assert.assertNotNull(strSet12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(objCollection14);
        org.junit.Assert.assertNull(obj18);
        org.junit.Assert.assertNotNull(objEnumeration19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNotNull(objSet21);
        org.junit.Assert.assertNull(obj22);
        org.junit.Assert.assertNotNull(objSet23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(objEnumeration25);
        org.junit.Assert.assertNull(obj28);
        org.junit.Assert.assertNotNull(objEnumeration29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNotNull(objSet31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNull(obj36);
        org.junit.Assert.assertNotNull(objEnumeration37);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertNotNull(objSet39);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(objCollection42);
        org.junit.Assert.assertNull(obj50);
        org.junit.Assert.assertNotNull(properties57);
    }

    @Test
    public void test7653() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7653");
        java.util.Properties properties0 = new java.util.Properties();
        java.util.Properties properties1 = new java.util.Properties();
        java.lang.Object obj3 = properties1.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet4 = properties1.stringPropertyNames();
        boolean boolean5 = properties0.containsValue((java.lang.Object) properties1);
        java.util.Collection<java.lang.Object> objCollection6 = properties0.values();
        java.util.Properties properties8 = new java.util.Properties();
        java.lang.Object obj10 = properties8.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration11 = properties8.elements();
        boolean boolean12 = properties8.isEmpty();
        java.util.Set<java.lang.Object> objSet13 = properties8.keySet();
        java.lang.Object obj14 = properties0.putIfAbsent((java.lang.Object) "hi!", (java.lang.Object) objSet13);
        java.util.Set<java.lang.Object> objSet15 = properties0.keySet();
        java.util.Set<java.lang.Object> objSet16 = properties0.keySet();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet17 = properties0.entrySet();
        java.util.Set<java.lang.Object> objSet18 = properties0.keySet();
        java.lang.String str20 = properties0.getProperty("");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties21 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties21.setSerialJtaTransactions(false);
        atomikosProperties21.setThreadedTwoPhaseCommit(true);
        atomikosProperties21.setMaxTimeout((long) '#');
        boolean boolean28 = atomikosProperties21.isEnableLogging();
        atomikosProperties21.setMaxActives((int) '#');
        atomikosProperties21.setSerialJtaTransactions(true);
        boolean boolean33 = atomikosProperties21.isThreadedTwoPhaseCommit();
        atomikosProperties21.setCheckpointInterval(300000L);
        long long36 = atomikosProperties21.getCheckpointInterval();
        java.lang.Object obj37 = properties0.get((java.lang.Object) long36);
        boolean boolean38 = properties0.isEmpty();
        java.util.Properties properties39 = new java.util.Properties();
        java.util.Properties properties40 = new java.util.Properties();
        java.lang.Object obj42 = properties40.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet43 = properties40.stringPropertyNames();
        boolean boolean44 = properties39.containsValue((java.lang.Object) properties40);
        java.util.Collection<java.lang.Object> objCollection45 = properties39.values();
        java.util.Properties properties47 = new java.util.Properties();
        java.lang.Object obj49 = properties47.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration50 = properties47.elements();
        boolean boolean51 = properties47.isEmpty();
        java.util.Set<java.lang.Object> objSet52 = properties47.keySet();
        java.lang.Object obj53 = properties39.putIfAbsent((java.lang.Object) "hi!", (java.lang.Object) objSet52);
        java.util.Set<java.lang.Object> objSet54 = properties39.keySet();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties55 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties55.setSerialJtaTransactions(false);
        atomikosProperties55.setThreadedTwoPhaseCommit(true);
        atomikosProperties55.setMaxTimeout((long) '#');
        boolean boolean62 = atomikosProperties55.isEnableLogging();
        atomikosProperties55.setCheckpointInterval((long) (byte) -1);
        atomikosProperties55.setEnableLogging(true);
        java.util.Properties properties67 = new java.util.Properties();
        java.lang.Object obj69 = properties67.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration70 = properties67.elements();
        boolean boolean71 = properties67.isEmpty();
        java.util.Enumeration<java.lang.Object> objEnumeration72 = properties67.elements();
        java.lang.Object obj73 = properties39.replace((java.lang.Object) true, (java.lang.Object) properties67);
        java.util.Properties properties74 = new java.util.Properties();
        java.lang.Object obj76 = properties74.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration77 = properties74.elements();
        int int78 = properties74.size();
        java.util.Properties properties79 = new java.util.Properties(properties74);
        java.util.Set<java.lang.String> strSet80 = properties74.stringPropertyNames();
        boolean boolean81 = properties39.contains((java.lang.Object) strSet80);
        java.util.Collection<java.lang.Object> objCollection82 = properties39.values();
        java.util.Properties properties83 = new java.util.Properties(properties39);
        java.lang.Object obj84 = properties39.clone();
        java.util.Properties properties85 = new java.util.Properties(properties39);
        properties0.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties39);
        int int87 = properties39.size();
        java.io.Writer writer88 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties39.store(writer88, "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=false, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.max_actives=2, com.atomikos.icatch.log_base_name=tmlog}");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(obj3);
        org.junit.Assert.assertNotNull(strSet4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(objCollection6);
        org.junit.Assert.assertNull(obj10);
        org.junit.Assert.assertNotNull(objEnumeration11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(objSet13);
        org.junit.Assert.assertNull(obj14);
        org.junit.Assert.assertNotNull(objSet15);
        org.junit.Assert.assertNotNull(objSet16);
        org.junit.Assert.assertNotNull(objEntrySet17);
        org.junit.Assert.assertNotNull(objSet18);
        org.junit.Assert.assertNull(str20);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertTrue("'" + long36 + "' != '" + 300000L + "'", long36 == 300000L);
        org.junit.Assert.assertNull(obj37);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNull(obj42);
        org.junit.Assert.assertNotNull(strSet43);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(objCollection45);
        org.junit.Assert.assertNull(obj49);
        org.junit.Assert.assertNotNull(objEnumeration50);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertNotNull(objSet52);
        org.junit.Assert.assertNull(obj53);
        org.junit.Assert.assertNotNull(objSet54);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + true + "'", boolean62 == true);
        org.junit.Assert.assertNull(obj69);
        org.junit.Assert.assertNotNull(objEnumeration70);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + true + "'", boolean71 == true);
        org.junit.Assert.assertNotNull(objEnumeration72);
        org.junit.Assert.assertNull(obj73);
        org.junit.Assert.assertNull(obj76);
        org.junit.Assert.assertNotNull(objEnumeration77);
        org.junit.Assert.assertTrue("'" + int78 + "' != '" + 0 + "'", int78 == 0);
        org.junit.Assert.assertNotNull(strSet80);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + true + "'", boolean81 == true);
        org.junit.Assert.assertNotNull(objCollection82);
        org.junit.Assert.assertNotNull(obj84);
        org.junit.Assert.assertEquals(obj84.toString(), "{hi!=[]}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj84), "{hi!=[]}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj84), "{hi!=[]}");
        org.junit.Assert.assertTrue("'" + int87 + "' != '" + 1 + "'", int87 == 1);
    }

    @Test
    public void test7654() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7654");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setSerialJtaTransactions(false);
        boolean boolean3 = atomikosProperties0.isSerialJtaTransactions();
        atomikosProperties0.setTransactionManagerUniqueName("hi!");
        java.lang.String str6 = atomikosProperties0.getLogBaseName();
        java.lang.String str7 = atomikosProperties0.getLogBaseName();
        boolean boolean8 = atomikosProperties0.isSerialJtaTransactions();
        long long9 = atomikosProperties0.getDefaultJtaTimeout();
        java.util.Properties properties10 = atomikosProperties0.asProperties();
        java.lang.String str11 = atomikosProperties0.getLogBaseDir();
        boolean boolean12 = atomikosProperties0.isForceShutdownOnVmExit();
        atomikosProperties0.setThreadedTwoPhaseCommit(true);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "tmlog" + "'", str6, "tmlog");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "tmlog" + "'", str7, "tmlog");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + long9 + "' != '" + 10000L + "'", long9 == 10000L);
        org.junit.Assert.assertNotNull(properties10);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
    }

    @Test
    public void test7655() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7655");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setSerialJtaTransactions(false);
        boolean boolean3 = atomikosProperties0.isThreadedTwoPhaseCommit();
        long long4 = atomikosProperties0.getCheckpointInterval();
        java.lang.String str5 = atomikosProperties0.getLogBaseDir();
        long long6 = atomikosProperties0.getMaxTimeout();
        atomikosProperties0.setService("{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=false, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.service={{}={}}, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.tm_unique_name=hi!, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
        atomikosProperties0.setForceShutdownOnVmExit(true);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + long4 + "' != '" + 500L + "'", long4 == 500L);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertTrue("'" + long6 + "' != '" + 300000L + "'", long6 == 300000L);
    }

    @Test
    public void test7656() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7656");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        boolean boolean3 = properties0.isEmpty();
        java.util.Enumeration<java.lang.Object> objEnumeration4 = properties0.elements();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet5 = properties0.entrySet();
        java.lang.String str6 = properties0.toString();
        java.util.Properties properties7 = new java.util.Properties(properties0);
        int int8 = properties0.size();
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(objEnumeration4);
        org.junit.Assert.assertNotNull(objEntrySet5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "{}" + "'", str6, "{}");
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
    }

    @Test
    public void test7657() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7657");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setSerialJtaTransactions(false);
        boolean boolean3 = atomikosProperties0.isSerialJtaTransactions();
        java.lang.String str4 = atomikosProperties0.getService();
        boolean boolean5 = atomikosProperties0.isEnableLogging();
        atomikosProperties0.setCheckpointInterval((long) (byte) 100);
        atomikosProperties0.setLogBaseDir("tmlog");
        long long10 = atomikosProperties0.getDefaultJtaTimeout();
        atomikosProperties0.setCheckpointInterval((long) 2);
        atomikosProperties0.setEnableLogging(false);
        long long15 = atomikosProperties0.getMaxTimeout();
        boolean boolean16 = atomikosProperties0.isThreadedTwoPhaseCommit();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertTrue("'" + long10 + "' != '" + 10000L + "'", long10 == 10000L);
        org.junit.Assert.assertTrue("'" + long15 + "' != '" + 300000L + "'", long15 == 300000L);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
    }

    @Test
    public void test7658() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7658");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setSerialJtaTransactions(false);
        boolean boolean3 = atomikosProperties0.isSerialJtaTransactions();
        java.lang.String str4 = atomikosProperties0.getService();
        boolean boolean5 = atomikosProperties0.isEnableLogging();
        atomikosProperties0.setMaxActives(2);
        java.util.Properties properties8 = atomikosProperties0.asProperties();
        java.util.Properties properties9 = new java.util.Properties();
        java.lang.Object obj11 = properties9.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration12 = properties9.elements();
        int int13 = properties9.size();
        java.util.Properties properties14 = new java.util.Properties();
        java.lang.Object obj16 = properties14.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration17 = properties14.elements();
        boolean boolean18 = properties14.isEmpty();
        java.util.Set<java.lang.Object> objSet19 = properties14.keySet();
        boolean boolean20 = properties9.containsKey((java.lang.Object) objSet19);
        java.util.Enumeration<java.lang.Object> objEnumeration21 = properties9.keys();
        java.util.Properties properties22 = new java.util.Properties();
        java.lang.Object obj24 = properties22.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration25 = properties22.elements();
        boolean boolean26 = properties22.isEmpty();
        java.util.Set<java.lang.Object> objSet27 = properties22.keySet();
        java.util.Enumeration<java.lang.Object> objEnumeration28 = properties22.keys();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet29 = properties22.entrySet();
        boolean boolean31 = properties9.remove((java.lang.Object) properties22, (java.lang.Object) 1.0f);
        java.util.Set<java.lang.Object> objSet32 = properties9.keySet();
        java.lang.Object obj35 = properties9.setProperty("{true=true}", "");
        properties8.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties9);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNotNull(properties8);
        org.junit.Assert.assertNull(obj11);
        org.junit.Assert.assertNotNull(objEnumeration12);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertNull(obj16);
        org.junit.Assert.assertNotNull(objEnumeration17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(objSet19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(objEnumeration21);
        org.junit.Assert.assertNull(obj24);
        org.junit.Assert.assertNotNull(objEnumeration25);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertNotNull(objSet27);
        org.junit.Assert.assertNotNull(objEnumeration28);
        org.junit.Assert.assertNotNull(objEntrySet29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(objSet32);
        org.junit.Assert.assertNull(obj35);
    }

    @Test
    public void test7659() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7659");
        java.util.Properties properties0 = new java.util.Properties();
        boolean boolean2 = properties0.contains((java.lang.Object) 100.0d);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties3 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties3.setSerialJtaTransactions(false);
        atomikosProperties3.setThreadedTwoPhaseCommit(true);
        atomikosProperties3.setSerialJtaTransactions(false);
        java.lang.String str10 = atomikosProperties3.getService();
        boolean boolean11 = properties0.containsKey((java.lang.Object) atomikosProperties3);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties12 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties12.setSerialJtaTransactions(false);
        atomikosProperties12.setThreadedTwoPhaseCommit(true);
        atomikosProperties12.setMaxTimeout((long) '#');
        boolean boolean19 = atomikosProperties12.isEnableLogging();
        atomikosProperties12.setCheckpointInterval((long) 100);
        atomikosProperties12.setForceShutdownOnVmExit(false);
        boolean boolean24 = properties0.containsValue((java.lang.Object) atomikosProperties12);
        atomikosProperties12.setService("{=hi!}");
        java.util.Properties properties27 = atomikosProperties12.asProperties();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties28 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties28.setSerialJtaTransactions(false);
        atomikosProperties28.setThreadedTwoPhaseCommit(true);
        atomikosProperties28.setMaxTimeout((long) '#');
        long long35 = atomikosProperties28.getCheckpointInterval();
        java.lang.String str36 = atomikosProperties28.getTransactionManagerUniqueName();
        atomikosProperties28.setTransactionManagerUniqueName("{=hi!}");
        atomikosProperties28.setSerialJtaTransactions(false);
        java.util.Properties properties41 = atomikosProperties28.asProperties();
        atomikosProperties28.setEnableLogging(false);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties44 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties44.setSerialJtaTransactions(false);
        atomikosProperties44.setThreadedTwoPhaseCommit(true);
        atomikosProperties44.setMaxTimeout((long) '#');
        boolean boolean51 = atomikosProperties44.isEnableLogging();
        atomikosProperties44.setMaxActives((int) '#');
        atomikosProperties44.setSerialJtaTransactions(true);
        boolean boolean56 = atomikosProperties44.isThreadedTwoPhaseCommit();
        java.lang.Class<?> wildcardClass57 = atomikosProperties44.getClass();
        java.lang.Object obj58 = properties27.getOrDefault((java.lang.Object) atomikosProperties28, (java.lang.Object) atomikosProperties44);
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet59 = properties27.entrySet();
        java.util.Properties properties60 = new java.util.Properties();
        java.lang.Object obj62 = properties60.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration63 = properties60.elements();
        boolean boolean64 = properties60.isEmpty();
        java.util.Set<java.lang.Object> objSet65 = properties60.keySet();
        boolean boolean66 = properties60.isEmpty();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet67 = properties60.entrySet();
        java.util.Properties properties68 = new java.util.Properties();
        java.lang.Object obj70 = properties68.remove((java.lang.Object) 0.0d);
        boolean boolean71 = properties68.isEmpty();
        java.lang.Object obj74 = properties68.setProperty("", "hi!");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties75 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties75.setSerialJtaTransactions(false);
        boolean boolean78 = properties60.remove((java.lang.Object) properties68, (java.lang.Object) atomikosProperties75);
        java.util.Properties properties79 = new java.util.Properties(properties68);
        java.lang.Object obj80 = properties68.clone();
        java.lang.Object obj81 = properties68.clone();
        java.util.Enumeration<java.lang.Object> objEnumeration82 = properties68.elements();
        java.util.Enumeration<?> wildcardEnumeration83 = properties68.propertyNames();
        boolean boolean84 = properties27.containsKey((java.lang.Object) wildcardEnumeration83);
        java.util.Enumeration<java.lang.Object> objEnumeration85 = properties27.keys();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(properties27);
        org.junit.Assert.assertTrue("'" + long35 + "' != '" + 500L + "'", long35 == 500L);
        org.junit.Assert.assertNull(str36);
        org.junit.Assert.assertNotNull(properties41);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertNotNull(wildcardClass57);
        org.junit.Assert.assertNotNull(obj58);
        org.junit.Assert.assertNotNull(objEntrySet59);
        org.junit.Assert.assertNull(obj62);
        org.junit.Assert.assertNotNull(objEnumeration63);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64 == true);
        org.junit.Assert.assertNotNull(objSet65);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66 == true);
        org.junit.Assert.assertNotNull(objEntrySet67);
        org.junit.Assert.assertNull(obj70);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + true + "'", boolean71 == true);
        org.junit.Assert.assertNull(obj74);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + false + "'", boolean78 == false);
        org.junit.Assert.assertNotNull(obj80);
        org.junit.Assert.assertEquals(obj80.toString(), "{=hi!}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj80), "{=hi!}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj80), "{=hi!}");
        org.junit.Assert.assertNotNull(obj81);
        org.junit.Assert.assertEquals(obj81.toString(), "{=hi!}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj81), "{=hi!}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj81), "{=hi!}");
        org.junit.Assert.assertNotNull(objEnumeration82);
        org.junit.Assert.assertNotNull(wildcardEnumeration83);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + false + "'", boolean84 == false);
        org.junit.Assert.assertNotNull(objEnumeration85);
    }

    @Test
    public void test7660() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7660");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setSerialJtaTransactions(false);
        atomikosProperties0.setThreadedTwoPhaseCommit(true);
        atomikosProperties0.setMaxTimeout((long) '#');
        boolean boolean7 = atomikosProperties0.isEnableLogging();
        atomikosProperties0.setCheckpointInterval((long) (byte) -1);
        atomikosProperties0.setEnableLogging(true);
        atomikosProperties0.setLogBaseDir("");
        long long14 = atomikosProperties0.getMaxTimeout();
        atomikosProperties0.setSerialJtaTransactions(true);
        java.lang.String str17 = atomikosProperties0.getLogBaseDir();
        atomikosProperties0.setCheckpointInterval(35L);
        long long20 = atomikosProperties0.getDefaultJtaTimeout();
        java.lang.String str21 = atomikosProperties0.getTransactionManagerUniqueName();
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertTrue("'" + long14 + "' != '" + 35L + "'", long14 == 35L);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "" + "'", str17, "");
        org.junit.Assert.assertTrue("'" + long20 + "' != '" + 10000L + "'", long20 == 10000L);
        org.junit.Assert.assertNull(str21);
    }

    @Test
    public void test7661() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7661");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration3 = properties0.elements();
        boolean boolean4 = properties0.isEmpty();
        java.util.Enumeration<java.lang.Object> objEnumeration5 = properties0.elements();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet6 = properties0.entrySet();
        java.util.Set<java.lang.String> strSet7 = properties0.stringPropertyNames();
        java.lang.Object obj10 = properties0.setProperty("{}", "tmlog");
        java.util.Properties properties11 = new java.util.Properties();
        java.lang.Object obj13 = properties11.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration14 = properties11.elements();
        int int15 = properties11.size();
        java.util.Properties properties16 = new java.util.Properties();
        java.lang.Object obj18 = properties16.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration19 = properties16.elements();
        java.util.Enumeration<java.lang.Object> objEnumeration20 = properties16.keys();
        java.lang.Object obj21 = properties0.getOrDefault((java.lang.Object) properties11, (java.lang.Object) objEnumeration20);
        java.util.Properties properties22 = new java.util.Properties();
        java.util.Properties properties23 = new java.util.Properties();
        java.lang.Object obj25 = properties23.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet26 = properties23.stringPropertyNames();
        boolean boolean27 = properties22.containsValue((java.lang.Object) properties23);
        java.util.Properties properties28 = new java.util.Properties();
        java.lang.Object obj30 = properties28.remove((java.lang.Object) 0.0d);
        boolean boolean32 = properties28.containsValue((java.lang.Object) "hi!");
        boolean boolean33 = properties23.contains((java.lang.Object) "hi!");
        java.lang.Class<?> wildcardClass34 = properties23.getClass();
        boolean boolean35 = properties11.containsKey((java.lang.Object) wildcardClass34);
        java.util.Properties properties36 = new java.util.Properties();
        java.lang.Object obj38 = properties36.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration39 = properties36.elements();
        boolean boolean40 = properties36.isEmpty();
        java.util.Set<java.lang.Object> objSet41 = properties36.keySet();
        java.util.Enumeration<java.lang.Object> objEnumeration42 = properties36.keys();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet43 = properties36.entrySet();
        java.util.Properties properties44 = new java.util.Properties(properties36);
        java.util.Set<java.lang.Object> objSet45 = properties36.keySet();
        java.util.Enumeration<java.lang.Object> objEnumeration46 = properties36.keys();
        properties11.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties36);
        java.util.Properties properties48 = new java.util.Properties();
        java.lang.Object obj50 = properties48.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration51 = properties48.elements();
        boolean boolean52 = properties48.isEmpty();
        java.util.Set<java.lang.Object> objSet53 = properties48.keySet();
        java.util.Enumeration<java.lang.Object> objEnumeration54 = properties48.keys();
        java.lang.String str56 = properties48.getProperty("hi!");
        java.lang.String str58 = properties48.getProperty("");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties59 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties59.setSerialJtaTransactions(false);
        atomikosProperties59.setThreadedTwoPhaseCommit(true);
        atomikosProperties59.setEnableLogging(false);
        boolean boolean66 = properties48.containsKey((java.lang.Object) atomikosProperties59);
        java.util.Properties properties67 = new java.util.Properties();
        java.lang.Object obj69 = properties67.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet70 = properties67.stringPropertyNames();
        java.lang.String str71 = properties67.toString();
        java.util.Properties properties72 = new java.util.Properties();
        java.lang.Object obj74 = properties72.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration75 = properties72.elements();
        boolean boolean76 = properties72.isEmpty();
        java.lang.Object obj79 = properties72.setProperty("tmlog", "");
        properties67.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties72);
        java.lang.Object obj81 = properties72.clone();
        java.util.Properties properties82 = new java.util.Properties();
        java.util.Properties properties83 = new java.util.Properties();
        java.lang.Object obj85 = properties83.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet86 = properties83.stringPropertyNames();
        boolean boolean87 = properties82.containsValue((java.lang.Object) properties83);
        java.util.Enumeration<?> wildcardEnumeration88 = properties83.propertyNames();
        java.util.Properties properties89 = new java.util.Properties(properties83);
        properties72.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties89);
        java.lang.Object obj91 = properties36.putIfAbsent((java.lang.Object) properties48, (java.lang.Object) properties72);
        boolean boolean92 = properties48.isEmpty();
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(objEnumeration3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(objEnumeration5);
        org.junit.Assert.assertNotNull(objEntrySet6);
        org.junit.Assert.assertNotNull(strSet7);
        org.junit.Assert.assertNull(obj10);
        org.junit.Assert.assertNull(obj13);
        org.junit.Assert.assertNotNull(objEnumeration14);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0);
        org.junit.Assert.assertNull(obj18);
        org.junit.Assert.assertNotNull(objEnumeration19);
        org.junit.Assert.assertNotNull(objEnumeration20);
        org.junit.Assert.assertNotNull(obj21);
        org.junit.Assert.assertNull(obj25);
        org.junit.Assert.assertNotNull(strSet26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNull(obj30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(wildcardClass34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNull(obj38);
        org.junit.Assert.assertNotNull(objEnumeration39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNotNull(objSet41);
        org.junit.Assert.assertNotNull(objEnumeration42);
        org.junit.Assert.assertNotNull(objEntrySet43);
        org.junit.Assert.assertNotNull(objSet45);
        org.junit.Assert.assertNotNull(objEnumeration46);
        org.junit.Assert.assertNull(obj50);
        org.junit.Assert.assertNotNull(objEnumeration51);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertNotNull(objSet53);
        org.junit.Assert.assertNotNull(objEnumeration54);
        org.junit.Assert.assertNull(str56);
        org.junit.Assert.assertNull(str58);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertNull(obj69);
        org.junit.Assert.assertNotNull(strSet70);
        org.junit.Assert.assertEquals("'" + str71 + "' != '" + "{}" + "'", str71, "{}");
        org.junit.Assert.assertNull(obj74);
        org.junit.Assert.assertNotNull(objEnumeration75);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + true + "'", boolean76 == true);
        org.junit.Assert.assertNull(obj79);
        org.junit.Assert.assertNotNull(obj81);
        org.junit.Assert.assertEquals(obj81.toString(), "{tmlog=}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj81), "{tmlog=}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj81), "{tmlog=}");
        org.junit.Assert.assertNull(obj85);
        org.junit.Assert.assertNotNull(strSet86);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + false + "'", boolean87 == false);
        org.junit.Assert.assertNotNull(wildcardEnumeration88);
        org.junit.Assert.assertNull(obj91);
        org.junit.Assert.assertTrue("'" + boolean92 + "' != '" + true + "'", boolean92 == true);
    }

    @Test
    public void test7662() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7662");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setSerialJtaTransactions(false);
        atomikosProperties0.setThreadedTwoPhaseCommit(true);
        atomikosProperties0.setEnableLogging(false);
        java.lang.String str7 = atomikosProperties0.getTransactionManagerUniqueName();
        org.junit.Assert.assertNull(str7);
    }

    @Test
    public void test7663() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7663");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration3 = properties0.elements();
        int int4 = properties0.size();
        java.util.Properties properties5 = new java.util.Properties(properties0);
        boolean boolean6 = properties5.isEmpty();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties7 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties7.setSerialJtaTransactions(false);
        atomikosProperties7.setThreadedTwoPhaseCommit(true);
        atomikosProperties7.setMaxTimeout((long) '#');
        boolean boolean14 = atomikosProperties7.isEnableLogging();
        atomikosProperties7.setCheckpointInterval((long) (byte) -1);
        atomikosProperties7.setMaxActives((int) (byte) 100);
        atomikosProperties7.setForceShutdownOnVmExit(false);
        boolean boolean21 = atomikosProperties7.isThreadedTwoPhaseCommit();
        boolean boolean22 = atomikosProperties7.isForceShutdownOnVmExit();
        java.lang.Object obj23 = properties5.remove((java.lang.Object) boolean22);
        java.util.Properties properties24 = new java.util.Properties();
        java.lang.Object obj26 = properties24.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration27 = properties24.elements();
        java.util.Properties properties29 = new java.util.Properties();
        java.lang.Object obj31 = properties29.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration32 = properties29.elements();
        boolean boolean33 = properties29.isEmpty();
        java.util.Set<java.lang.Object> objSet34 = properties29.keySet();
        boolean boolean35 = properties29.isEmpty();
        java.lang.Object obj36 = properties24.getOrDefault((java.lang.Object) true, (java.lang.Object) boolean35);
        java.util.Properties properties37 = new java.util.Properties();
        java.lang.Object obj39 = properties37.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet40 = properties37.stringPropertyNames();
        java.util.Properties properties41 = new java.util.Properties();
        java.util.Properties properties42 = new java.util.Properties();
        java.lang.Object obj44 = properties42.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet45 = properties42.stringPropertyNames();
        boolean boolean46 = properties41.containsValue((java.lang.Object) properties42);
        java.util.Collection<java.lang.Object> objCollection47 = properties41.values();
        java.util.Enumeration<?> wildcardEnumeration48 = properties41.propertyNames();
        java.lang.Object obj50 = properties37.put((java.lang.Object) wildcardEnumeration48, (java.lang.Object) 10.0d);
        java.util.Properties properties51 = new java.util.Properties();
        java.lang.Object obj53 = properties51.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration54 = properties51.elements();
        boolean boolean55 = properties51.isEmpty();
        java.util.Set<java.lang.Object> objSet56 = properties51.keySet();
        boolean boolean57 = properties51.isEmpty();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet58 = properties51.entrySet();
        java.util.Properties properties59 = new java.util.Properties();
        java.lang.Object obj61 = properties59.remove((java.lang.Object) 0.0d);
        boolean boolean62 = properties59.isEmpty();
        java.lang.Object obj65 = properties59.setProperty("", "hi!");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties66 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties66.setSerialJtaTransactions(false);
        boolean boolean69 = properties51.remove((java.lang.Object) properties59, (java.lang.Object) atomikosProperties66);
        java.util.Properties properties70 = new java.util.Properties(properties59);
        int int71 = properties70.size();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties73 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties73.setSerialJtaTransactions(false);
        boolean boolean76 = atomikosProperties73.isSerialJtaTransactions();
        java.lang.String str77 = atomikosProperties73.getService();
        boolean boolean78 = atomikosProperties73.isEnableLogging();
        java.lang.String str79 = atomikosProperties73.getTransactionManagerUniqueName();
        boolean boolean80 = properties70.remove((java.lang.Object) (byte) 1, (java.lang.Object) atomikosProperties73);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties81 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties81.setSerialJtaTransactions(false);
        atomikosProperties81.setThreadedTwoPhaseCommit(true);
        atomikosProperties81.setEnableLogging(false);
        boolean boolean88 = atomikosProperties81.isSerialJtaTransactions();
        int int89 = atomikosProperties81.getMaxActives();
        boolean boolean90 = atomikosProperties81.isSerialJtaTransactions();
        boolean boolean91 = properties37.remove((java.lang.Object) properties70, (java.lang.Object) boolean90);
        boolean boolean92 = properties24.equals((java.lang.Object) boolean91);
        boolean boolean93 = properties24.isEmpty();
        properties5.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties24);
        java.util.Enumeration<?> wildcardEnumeration95 = properties24.propertyNames();
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(objEnumeration3);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNull(obj23);
        org.junit.Assert.assertNull(obj26);
        org.junit.Assert.assertNotNull(objEnumeration27);
        org.junit.Assert.assertNull(obj31);
        org.junit.Assert.assertNotNull(objEnumeration32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNotNull(objSet34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertEquals("'" + obj36 + "' != '" + true + "'", obj36, true);
        org.junit.Assert.assertNull(obj39);
        org.junit.Assert.assertNotNull(strSet40);
        org.junit.Assert.assertNull(obj44);
        org.junit.Assert.assertNotNull(strSet45);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(objCollection47);
        org.junit.Assert.assertNotNull(wildcardEnumeration48);
        org.junit.Assert.assertNull(obj50);
        org.junit.Assert.assertNull(obj53);
        org.junit.Assert.assertNotNull(objEnumeration54);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertNotNull(objSet56);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertNotNull(objEntrySet58);
        org.junit.Assert.assertNull(obj61);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + true + "'", boolean62 == true);
        org.junit.Assert.assertNull(obj65);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertTrue("'" + int71 + "' != '" + 0 + "'", int71 == 0);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
        org.junit.Assert.assertNull(str77);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + true + "'", boolean78 == true);
        org.junit.Assert.assertNull(str79);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", boolean80 == false);
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + false + "'", boolean88 == false);
        org.junit.Assert.assertTrue("'" + int89 + "' != '" + 50 + "'", int89 == 50);
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + false + "'", boolean90 == false);
        org.junit.Assert.assertTrue("'" + boolean91 + "' != '" + false + "'", boolean91 == false);
        org.junit.Assert.assertTrue("'" + boolean92 + "' != '" + false + "'", boolean92 == false);
        org.junit.Assert.assertTrue("'" + boolean93 + "' != '" + true + "'", boolean93 == true);
        org.junit.Assert.assertNotNull(wildcardEnumeration95);
    }

    @Test
    public void test7664() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7664");
        java.util.Properties properties0 = new java.util.Properties();
        java.util.Properties properties1 = new java.util.Properties();
        java.lang.Object obj3 = properties1.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet4 = properties1.stringPropertyNames();
        boolean boolean5 = properties0.containsValue((java.lang.Object) properties1);
        java.util.Collection<java.lang.Object> objCollection6 = properties0.values();
        java.util.Properties properties8 = new java.util.Properties();
        java.lang.Object obj10 = properties8.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration11 = properties8.elements();
        boolean boolean12 = properties8.isEmpty();
        java.util.Set<java.lang.Object> objSet13 = properties8.keySet();
        java.lang.Object obj14 = properties0.putIfAbsent((java.lang.Object) "hi!", (java.lang.Object) objSet13);
        java.util.Set<java.lang.Object> objSet15 = properties0.keySet();
        java.util.Set<java.lang.Object> objSet16 = properties0.keySet();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet17 = properties0.entrySet();
        java.util.Set<java.lang.Object> objSet18 = properties0.keySet();
        java.io.OutputStream outputStream19 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties0.save(outputStream19, "");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(obj3);
        org.junit.Assert.assertNotNull(strSet4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(objCollection6);
        org.junit.Assert.assertNull(obj10);
        org.junit.Assert.assertNotNull(objEnumeration11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(objSet13);
        org.junit.Assert.assertNull(obj14);
        org.junit.Assert.assertNotNull(objSet15);
        org.junit.Assert.assertNotNull(objSet16);
        org.junit.Assert.assertNotNull(objEntrySet17);
        org.junit.Assert.assertNotNull(objSet18);
    }

    @Test
    public void test7665() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7665");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setSerialJtaTransactions(false);
        atomikosProperties0.setThreadedTwoPhaseCommit(true);
        atomikosProperties0.setMaxTimeout((long) '#');
        boolean boolean7 = atomikosProperties0.isEnableLogging();
        atomikosProperties0.setCheckpointInterval((long) (byte) -1);
        atomikosProperties0.setMaxActives((int) (byte) 100);
        atomikosProperties0.setTransactionManagerUniqueName("{=hi!}");
        java.lang.String str14 = atomikosProperties0.getLogBaseDir();
        atomikosProperties0.setForceShutdownOnVmExit(false);
        long long17 = atomikosProperties0.getDefaultJtaTimeout();
        boolean boolean18 = atomikosProperties0.isForceShutdownOnVmExit();
        long long19 = atomikosProperties0.getCheckpointInterval();
        java.lang.Class<?> wildcardClass20 = atomikosProperties0.getClass();
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertTrue("'" + long17 + "' != '" + 10000L + "'", long17 == 10000L);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + long19 + "' != '" + (-1L) + "'", long19 == (-1L));
        org.junit.Assert.assertNotNull(wildcardClass20);
    }

    @Test
    public void test7666() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7666");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setSerialJtaTransactions(false);
        atomikosProperties0.setThreadedTwoPhaseCommit(true);
        atomikosProperties0.setMaxTimeout((long) '#');
        boolean boolean7 = atomikosProperties0.isEnableLogging();
        atomikosProperties0.setTransactionManagerUniqueName("hi!");
        atomikosProperties0.setTransactionManagerUniqueName("tmlog");
        boolean boolean12 = atomikosProperties0.isSerialJtaTransactions();
        long long13 = atomikosProperties0.getDefaultJtaTimeout();
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + long13 + "' != '" + 10000L + "'", long13 == 10000L);
    }

    @Test
    public void test7667() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7667");
        java.util.Properties properties0 = new java.util.Properties();
        boolean boolean2 = properties0.contains((java.lang.Object) 100.0d);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties3 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties3.setSerialJtaTransactions(false);
        atomikosProperties3.setThreadedTwoPhaseCommit(true);
        atomikosProperties3.setSerialJtaTransactions(false);
        java.lang.String str10 = atomikosProperties3.getService();
        boolean boolean11 = properties0.containsKey((java.lang.Object) atomikosProperties3);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties12 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties12.setSerialJtaTransactions(false);
        atomikosProperties12.setThreadedTwoPhaseCommit(true);
        atomikosProperties12.setMaxTimeout((long) '#');
        boolean boolean19 = atomikosProperties12.isEnableLogging();
        atomikosProperties12.setCheckpointInterval((long) 100);
        atomikosProperties12.setForceShutdownOnVmExit(false);
        boolean boolean24 = properties0.containsValue((java.lang.Object) atomikosProperties12);
        atomikosProperties12.setService("{=hi!}");
        java.util.Properties properties27 = atomikosProperties12.asProperties();
        atomikosProperties12.setSerialJtaTransactions(true);
        java.lang.String str30 = atomikosProperties12.getService();
        atomikosProperties12.setThreadedTwoPhaseCommit(false);
        atomikosProperties12.setThreadedTwoPhaseCommit(false);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(properties27);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "{=hi!}" + "'", str30, "{=hi!}");
    }

    @Test
    public void test7668() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7668");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration3 = properties0.elements();
        boolean boolean4 = properties0.isEmpty();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet5 = properties0.entrySet();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties7 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties7.setSerialJtaTransactions(false);
        atomikosProperties7.setThreadedTwoPhaseCommit(true);
        atomikosProperties7.setMaxTimeout((long) '#');
        boolean boolean14 = atomikosProperties7.isForceShutdownOnVmExit();
        java.lang.Object obj15 = properties0.put((java.lang.Object) (short) 1, (java.lang.Object) atomikosProperties7);
        atomikosProperties7.setForceShutdownOnVmExit(true);
        java.util.Properties properties18 = atomikosProperties7.asProperties();
        java.util.Set<java.lang.Object> objSet19 = properties18.keySet();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties20 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties20.setSerialJtaTransactions(false);
        atomikosProperties20.setThreadedTwoPhaseCommit(true);
        atomikosProperties20.setMaxTimeout((long) '#');
        boolean boolean27 = atomikosProperties20.isEnableLogging();
        atomikosProperties20.setCheckpointInterval((long) (byte) -1);
        atomikosProperties20.setEnableLogging(true);
        atomikosProperties20.setLogBaseName("{}");
        long long34 = atomikosProperties20.getDefaultJtaTimeout();
        boolean boolean35 = atomikosProperties20.isSerialJtaTransactions();
        java.lang.String str36 = atomikosProperties20.getLogBaseDir();
        long long37 = atomikosProperties20.getMaxTimeout();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties38 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties38.setSerialJtaTransactions(false);
        boolean boolean41 = atomikosProperties38.isSerialJtaTransactions();
        atomikosProperties38.setTransactionManagerUniqueName("tmlog");
        atomikosProperties38.setDefaultJtaTimeout((long) '4');
        atomikosProperties38.setForceShutdownOnVmExit(true);
        java.lang.String str48 = atomikosProperties38.getLogBaseName();
        atomikosProperties38.setLogBaseDir("");
        java.util.Properties properties51 = atomikosProperties38.asProperties();
        boolean boolean52 = atomikosProperties38.isEnableLogging();
        java.lang.Object obj53 = properties18.replace((java.lang.Object) long37, (java.lang.Object) boolean52);
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(objEnumeration3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(objEntrySet5);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNull(obj15);
        org.junit.Assert.assertNotNull(properties18);
        org.junit.Assert.assertNotNull(objSet19);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertTrue("'" + long34 + "' != '" + 10000L + "'", long34 == 10000L);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNull(str36);
        org.junit.Assert.assertTrue("'" + long37 + "' != '" + 35L + "'", long37 == 35L);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "tmlog" + "'", str48, "tmlog");
        org.junit.Assert.assertNotNull(properties51);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertNull(obj53);
    }

    @Test
    public void test7669() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7669");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setSerialJtaTransactions(false);
        atomikosProperties0.setThreadedTwoPhaseCommit(true);
        atomikosProperties0.setMaxTimeout((long) '#');
        boolean boolean7 = atomikosProperties0.isEnableLogging();
        atomikosProperties0.setCheckpointInterval((long) (byte) -1);
        atomikosProperties0.setEnableLogging(true);
        atomikosProperties0.setLogBaseName("{}");
        atomikosProperties0.setLogBaseName("tmlog");
        java.lang.String str16 = atomikosProperties0.getTransactionManagerUniqueName();
        atomikosProperties0.setSerialJtaTransactions(false);
        java.lang.String str19 = atomikosProperties0.getService();
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNull(str16);
        org.junit.Assert.assertNull(str19);
    }

    @Test
    public void test7670() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7670");
        java.util.Properties properties0 = new java.util.Properties();
        java.util.Collection<java.lang.Object> objCollection1 = properties0.values();
        java.util.Enumeration<java.lang.Object> objEnumeration2 = properties0.keys();
        java.util.Properties properties3 = new java.util.Properties();
        java.lang.Object obj5 = properties3.remove((java.lang.Object) 0.0d);
        java.util.Properties properties6 = new java.util.Properties();
        java.util.Collection<java.lang.Object> objCollection7 = properties6.values();
        java.util.Enumeration<java.lang.Object> objEnumeration8 = properties6.keys();
        java.util.Properties properties9 = new java.util.Properties();
        java.lang.Object obj11 = properties9.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration12 = properties9.elements();
        boolean boolean13 = properties9.isEmpty();
        java.util.Set<java.lang.Object> objSet14 = properties9.keySet();
        java.util.Enumeration<java.lang.Object> objEnumeration15 = properties9.keys();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet16 = properties9.entrySet();
        java.lang.Object obj17 = properties3.put((java.lang.Object) properties6, (java.lang.Object) properties9);
        java.lang.String str19 = properties6.getProperty("{=hi!}");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties20 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties20.setSerialJtaTransactions(false);
        atomikosProperties20.setThreadedTwoPhaseCommit(true);
        atomikosProperties20.setThreadedTwoPhaseCommit(true);
        long long27 = atomikosProperties20.getMaxTimeout();
        boolean boolean28 = properties6.containsValue((java.lang.Object) atomikosProperties20);
        java.util.Enumeration<java.lang.Object> objEnumeration29 = properties6.elements();
        java.util.Set<java.lang.String> strSet30 = properties6.stringPropertyNames();
        java.lang.Object obj31 = properties0.get((java.lang.Object) properties6);
        properties0.clear();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties33 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties33.setSerialJtaTransactions(false);
        atomikosProperties33.setThreadedTwoPhaseCommit(true);
        boolean boolean38 = atomikosProperties33.isForceShutdownOnVmExit();
        java.lang.String str39 = atomikosProperties33.getTransactionManagerUniqueName();
        java.lang.String str40 = atomikosProperties33.getService();
        atomikosProperties33.setEnableLogging(false);
        atomikosProperties33.setDefaultJtaTimeout((long) '#');
        java.util.Properties properties45 = atomikosProperties33.asProperties();
        boolean boolean46 = properties0.equals((java.lang.Object) atomikosProperties33);
        org.junit.Assert.assertNotNull(objCollection1);
        org.junit.Assert.assertNotNull(objEnumeration2);
        org.junit.Assert.assertNull(obj5);
        org.junit.Assert.assertNotNull(objCollection7);
        org.junit.Assert.assertNotNull(objEnumeration8);
        org.junit.Assert.assertNull(obj11);
        org.junit.Assert.assertNotNull(objEnumeration12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(objSet14);
        org.junit.Assert.assertNotNull(objEnumeration15);
        org.junit.Assert.assertNotNull(objEntrySet16);
        org.junit.Assert.assertNull(obj17);
        org.junit.Assert.assertNull(str19);
        org.junit.Assert.assertTrue("'" + long27 + "' != '" + 300000L + "'", long27 == 300000L);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(objEnumeration29);
        org.junit.Assert.assertNotNull(strSet30);
        org.junit.Assert.assertNull(obj31);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNull(str39);
        org.junit.Assert.assertNull(str40);
        org.junit.Assert.assertNotNull(properties45);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
    }

    @Test
    public void test7671() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7671");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setSerialJtaTransactions(false);
        atomikosProperties0.setThreadedTwoPhaseCommit(true);
        boolean boolean5 = atomikosProperties0.isForceShutdownOnVmExit();
        java.lang.String str6 = atomikosProperties0.getTransactionManagerUniqueName();
        atomikosProperties0.setCheckpointInterval(10000L);
        long long9 = atomikosProperties0.getDefaultJtaTimeout();
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertTrue("'" + long9 + "' != '" + 10000L + "'", long9 == 10000L);
    }

    @Test
    public void test7672() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7672");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setSerialJtaTransactions(false);
        atomikosProperties0.setThreadedTwoPhaseCommit(true);
        atomikosProperties0.setSerialJtaTransactions(false);
        atomikosProperties0.setThreadedTwoPhaseCommit(false);
        atomikosProperties0.setLogBaseName("hi!");
        boolean boolean11 = atomikosProperties0.isSerialJtaTransactions();
        java.util.Properties properties12 = atomikosProperties0.asProperties();
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(properties12);
    }

    @Test
    public void test7673() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7673");
        java.util.Properties properties0 = new java.util.Properties();
        boolean boolean2 = properties0.contains((java.lang.Object) 100.0d);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties3 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties3.setSerialJtaTransactions(false);
        atomikosProperties3.setThreadedTwoPhaseCommit(true);
        atomikosProperties3.setSerialJtaTransactions(false);
        java.lang.String str10 = atomikosProperties3.getService();
        boolean boolean11 = properties0.containsKey((java.lang.Object) atomikosProperties3);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties12 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties12.setSerialJtaTransactions(false);
        atomikosProperties12.setThreadedTwoPhaseCommit(true);
        atomikosProperties12.setMaxTimeout((long) '#');
        boolean boolean19 = atomikosProperties12.isEnableLogging();
        atomikosProperties12.setCheckpointInterval((long) 100);
        atomikosProperties12.setForceShutdownOnVmExit(false);
        boolean boolean24 = properties0.containsValue((java.lang.Object) atomikosProperties12);
        atomikosProperties12.setService("{=hi!}");
        atomikosProperties12.setDefaultJtaTimeout(0L);
        atomikosProperties12.setThreadedTwoPhaseCommit(true);
        boolean boolean31 = atomikosProperties12.isThreadedTwoPhaseCommit();
        java.util.Properties properties32 = atomikosProperties12.asProperties();
        java.lang.String str33 = atomikosProperties12.getLogBaseName();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNotNull(properties32);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "tmlog" + "'", str33, "tmlog");
    }

    @Test
    public void test7674() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7674");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet3 = properties0.stringPropertyNames();
        java.util.Properties properties4 = new java.util.Properties();
        java.util.Properties properties5 = new java.util.Properties();
        java.lang.Object obj7 = properties5.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet8 = properties5.stringPropertyNames();
        boolean boolean9 = properties4.containsValue((java.lang.Object) properties5);
        java.util.Collection<java.lang.Object> objCollection10 = properties4.values();
        java.util.Enumeration<?> wildcardEnumeration11 = properties4.propertyNames();
        java.lang.Object obj13 = properties0.put((java.lang.Object) wildcardEnumeration11, (java.lang.Object) 10.0d);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties14 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties14.setSerialJtaTransactions(false);
        atomikosProperties14.setThreadedTwoPhaseCommit(true);
        atomikosProperties14.setMaxTimeout((long) '#');
        boolean boolean21 = atomikosProperties14.isForceShutdownOnVmExit();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties22 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties22.setSerialJtaTransactions(false);
        atomikosProperties22.setThreadedTwoPhaseCommit(true);
        atomikosProperties22.setThreadedTwoPhaseCommit(true);
        java.lang.Object obj29 = properties0.getOrDefault((java.lang.Object) boolean21, (java.lang.Object) atomikosProperties22);
        java.util.Set<java.lang.String> strSet30 = properties0.stringPropertyNames();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties31 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties31.setSerialJtaTransactions(false);
        atomikosProperties31.setThreadedTwoPhaseCommit(true);
        atomikosProperties31.setThreadedTwoPhaseCommit(true);
        long long38 = atomikosProperties31.getMaxTimeout();
        java.lang.String str39 = atomikosProperties31.getLogBaseName();
        boolean boolean40 = atomikosProperties31.isSerialJtaTransactions();
        java.util.Properties properties41 = new java.util.Properties();
        java.lang.Object obj43 = properties41.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet44 = properties41.stringPropertyNames();
        java.util.Properties properties45 = new java.util.Properties();
        java.util.Properties properties46 = new java.util.Properties();
        java.lang.Object obj48 = properties46.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet49 = properties46.stringPropertyNames();
        boolean boolean50 = properties45.containsValue((java.lang.Object) properties46);
        java.util.Collection<java.lang.Object> objCollection51 = properties45.values();
        java.util.Enumeration<?> wildcardEnumeration52 = properties45.propertyNames();
        java.lang.Object obj54 = properties41.put((java.lang.Object) wildcardEnumeration52, (java.lang.Object) 10.0d);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties55 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties55.setSerialJtaTransactions(false);
        atomikosProperties55.setThreadedTwoPhaseCommit(true);
        atomikosProperties55.setMaxTimeout((long) '#');
        boolean boolean62 = atomikosProperties55.isForceShutdownOnVmExit();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties63 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties63.setSerialJtaTransactions(false);
        atomikosProperties63.setThreadedTwoPhaseCommit(true);
        atomikosProperties63.setThreadedTwoPhaseCommit(true);
        java.lang.Object obj70 = properties41.getOrDefault((java.lang.Object) boolean62, (java.lang.Object) atomikosProperties63);
        long long71 = atomikosProperties63.getMaxTimeout();
        java.lang.String str72 = atomikosProperties63.getTransactionManagerUniqueName();
        java.lang.Object obj73 = properties0.getOrDefault((java.lang.Object) atomikosProperties31, (java.lang.Object) str72);
        atomikosProperties31.setMaxActives((int) (short) 10);
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(strSet3);
        org.junit.Assert.assertNull(obj7);
        org.junit.Assert.assertNotNull(strSet8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(objCollection10);
        org.junit.Assert.assertNotNull(wildcardEnumeration11);
        org.junit.Assert.assertNull(obj13);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(obj29);
        org.junit.Assert.assertNotNull(strSet30);
        org.junit.Assert.assertTrue("'" + long38 + "' != '" + 300000L + "'", long38 == 300000L);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "tmlog" + "'", str39, "tmlog");
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNull(obj43);
        org.junit.Assert.assertNotNull(strSet44);
        org.junit.Assert.assertNull(obj48);
        org.junit.Assert.assertNotNull(strSet49);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertNotNull(objCollection51);
        org.junit.Assert.assertNotNull(wildcardEnumeration52);
        org.junit.Assert.assertNull(obj54);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertNotNull(obj70);
        org.junit.Assert.assertTrue("'" + long71 + "' != '" + 300000L + "'", long71 == 300000L);
        org.junit.Assert.assertNull(str72);
        org.junit.Assert.assertNull(obj73);
    }

    @Test
    public void test7675() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7675");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setSerialJtaTransactions(false);
        boolean boolean3 = atomikosProperties0.isSerialJtaTransactions();
        java.lang.String str4 = atomikosProperties0.getService();
        boolean boolean5 = atomikosProperties0.isEnableLogging();
        atomikosProperties0.setCheckpointInterval((long) (byte) 100);
        java.lang.String str8 = atomikosProperties0.getLogBaseName();
        atomikosProperties0.setTransactionManagerUniqueName("tmlog");
        atomikosProperties0.setSerialJtaTransactions(false);
        boolean boolean13 = atomikosProperties0.isForceShutdownOnVmExit();
        atomikosProperties0.setMaxActives(100);
        atomikosProperties0.setEnableLogging(true);
        java.util.Properties properties18 = atomikosProperties0.asProperties();
        java.io.OutputStream outputStream19 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties18.storeToXML(outputStream19, "{true={com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=100, com.atomikos.icatch.serial_jta_transactions=false, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=35, com.atomikos.icatch.threaded_2pc=true, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}}");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "tmlog" + "'", str8, "tmlog");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(properties18);
    }

    @Test
    public void test7676() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7676");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setSerialJtaTransactions(false);
        atomikosProperties0.setThreadedTwoPhaseCommit(true);
        atomikosProperties0.setMaxTimeout((long) '#');
        java.lang.String str7 = atomikosProperties0.getLogBaseDir();
        long long8 = atomikosProperties0.getMaxTimeout();
        java.util.Properties properties9 = atomikosProperties0.asProperties();
        atomikosProperties0.setForceShutdownOnVmExit(false);
        atomikosProperties0.setSerialJtaTransactions(true);
        atomikosProperties0.setEnableLogging(false);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertTrue("'" + long8 + "' != '" + 35L + "'", long8 == 35L);
        org.junit.Assert.assertNotNull(properties9);
    }

    @Test
    public void test7677() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7677");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet3 = properties0.stringPropertyNames();
        java.lang.String str4 = properties0.toString();
        java.util.Properties properties5 = new java.util.Properties();
        java.lang.Object obj7 = properties5.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration8 = properties5.elements();
        boolean boolean9 = properties5.isEmpty();
        java.lang.Object obj12 = properties5.setProperty("tmlog", "");
        properties0.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties5);
        java.lang.Object obj14 = properties5.clone();
        java.util.Properties properties15 = new java.util.Properties();
        java.lang.Object obj17 = properties15.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration18 = properties15.elements();
        boolean boolean19 = properties15.isEmpty();
        java.util.Set<java.lang.Object> objSet20 = properties15.keySet();
        java.util.Enumeration<java.lang.Object> objEnumeration21 = properties15.keys();
        java.util.Enumeration<java.lang.Object> objEnumeration22 = properties15.elements();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties23 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties23.setSerialJtaTransactions(false);
        boolean boolean26 = atomikosProperties23.isSerialJtaTransactions();
        java.lang.String str27 = atomikosProperties23.getService();
        boolean boolean28 = atomikosProperties23.isEnableLogging();
        atomikosProperties23.setCheckpointInterval((long) (byte) 100);
        java.lang.String str31 = atomikosProperties23.getLogBaseName();
        boolean boolean32 = properties15.contains((java.lang.Object) atomikosProperties23);
        boolean boolean33 = properties5.containsValue((java.lang.Object) atomikosProperties23);
        int int34 = properties5.size();
        java.util.Properties properties35 = new java.util.Properties();
        java.lang.Object obj37 = properties35.remove((java.lang.Object) 0.0d);
        boolean boolean38 = properties35.isEmpty();
        java.util.Set<java.lang.String> strSet39 = properties35.stringPropertyNames();
        java.lang.String str41 = properties35.getProperty("hi!");
        java.util.Properties properties42 = new java.util.Properties();
        java.lang.Object obj44 = properties42.remove((java.lang.Object) 0.0d);
        boolean boolean45 = properties42.isEmpty();
        java.util.Enumeration<java.lang.Object> objEnumeration46 = properties42.elements();
        java.util.Enumeration<java.lang.Object> objEnumeration47 = properties42.elements();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties48 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties48.setSerialJtaTransactions(false);
        atomikosProperties48.setThreadedTwoPhaseCommit(true);
        atomikosProperties48.setMaxTimeout((long) '#');
        boolean boolean55 = atomikosProperties48.isForceShutdownOnVmExit();
        int int56 = atomikosProperties48.getMaxActives();
        java.lang.Object obj57 = properties42.remove((java.lang.Object) int56);
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet58 = properties42.entrySet();
        java.util.Properties properties59 = new java.util.Properties(properties42);
        boolean boolean60 = properties35.containsValue((java.lang.Object) properties59);
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet61 = properties59.entrySet();
        java.util.Properties properties62 = new java.util.Properties();
        java.lang.Object obj64 = properties62.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration65 = properties62.elements();
        int int66 = properties62.size();
        java.util.Properties properties67 = new java.util.Properties();
        java.lang.Object obj69 = properties67.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration70 = properties67.elements();
        boolean boolean71 = properties67.isEmpty();
        java.util.Set<java.lang.Object> objSet72 = properties67.keySet();
        boolean boolean73 = properties62.containsKey((java.lang.Object) objSet72);
        java.util.Enumeration<java.lang.Object> objEnumeration74 = properties62.keys();
        java.util.Enumeration<java.lang.Object> objEnumeration75 = properties62.keys();
        java.lang.Object obj76 = properties5.put((java.lang.Object) properties59, (java.lang.Object) objEnumeration75);
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(strSet3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "{}" + "'", str4, "{}");
        org.junit.Assert.assertNull(obj7);
        org.junit.Assert.assertNotNull(objEnumeration8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertNull(obj12);
        org.junit.Assert.assertNotNull(obj14);
        org.junit.Assert.assertEquals(obj14.toString(), "{tmlog=}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj14), "{tmlog=}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj14), "{tmlog=}");
        org.junit.Assert.assertNull(obj17);
        org.junit.Assert.assertNotNull(objEnumeration18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(objSet20);
        org.junit.Assert.assertNotNull(objEnumeration21);
        org.junit.Assert.assertNotNull(objEnumeration22);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNull(str27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "tmlog" + "'", str31, "tmlog");
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 1 + "'", int34 == 1);
        org.junit.Assert.assertNull(obj37);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertNotNull(strSet39);
        org.junit.Assert.assertNull(str41);
        org.junit.Assert.assertNull(obj44);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertNotNull(objEnumeration46);
        org.junit.Assert.assertNotNull(objEnumeration47);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + 50 + "'", int56 == 50);
        org.junit.Assert.assertNull(obj57);
        org.junit.Assert.assertNotNull(objEntrySet58);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertNotNull(objEntrySet61);
        org.junit.Assert.assertNull(obj64);
        org.junit.Assert.assertNotNull(objEnumeration65);
        org.junit.Assert.assertTrue("'" + int66 + "' != '" + 0 + "'", int66 == 0);
        org.junit.Assert.assertNull(obj69);
        org.junit.Assert.assertNotNull(objEnumeration70);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + true + "'", boolean71 == true);
        org.junit.Assert.assertNotNull(objSet72);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertNotNull(objEnumeration74);
        org.junit.Assert.assertNotNull(objEnumeration75);
        org.junit.Assert.assertNull(obj76);
    }

    @Test
    public void test7678() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7678");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        java.util.Properties properties3 = new java.util.Properties();
        java.util.Collection<java.lang.Object> objCollection4 = properties3.values();
        java.util.Enumeration<java.lang.Object> objEnumeration5 = properties3.keys();
        java.util.Properties properties6 = new java.util.Properties();
        java.lang.Object obj8 = properties6.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration9 = properties6.elements();
        boolean boolean10 = properties6.isEmpty();
        java.util.Set<java.lang.Object> objSet11 = properties6.keySet();
        java.util.Enumeration<java.lang.Object> objEnumeration12 = properties6.keys();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet13 = properties6.entrySet();
        java.lang.Object obj14 = properties0.put((java.lang.Object) properties3, (java.lang.Object) properties6);
        java.lang.Object obj15 = properties3.clone();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties16 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties16.setSerialJtaTransactions(false);
        atomikosProperties16.setThreadedTwoPhaseCommit(true);
        atomikosProperties16.setMaxTimeout((long) '#');
        boolean boolean23 = atomikosProperties16.isEnableLogging();
        atomikosProperties16.setCheckpointInterval((long) 100);
        atomikosProperties16.setSerialJtaTransactions(true);
        boolean boolean28 = properties3.equals((java.lang.Object) atomikosProperties16);
        java.util.Properties properties29 = new java.util.Properties();
        java.lang.Object obj31 = properties29.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration32 = properties29.elements();
        boolean boolean33 = properties29.isEmpty();
        java.util.Enumeration<java.lang.Object> objEnumeration34 = properties29.elements();
        boolean boolean35 = properties3.containsKey((java.lang.Object) properties29);
        java.util.Properties properties36 = new java.util.Properties();
        java.lang.Object obj38 = properties36.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration39 = properties36.elements();
        boolean boolean40 = properties36.isEmpty();
        java.util.Set<java.lang.Object> objSet41 = properties36.keySet();
        java.util.Enumeration<java.lang.Object> objEnumeration42 = properties36.keys();
        boolean boolean44 = properties36.equals((java.lang.Object) "");
        boolean boolean45 = properties3.containsValue((java.lang.Object) properties36);
        java.util.Set<java.lang.String> strSet46 = properties36.stringPropertyNames();
        java.util.Set<java.lang.Object> objSet47 = properties36.keySet();
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(objCollection4);
        org.junit.Assert.assertNotNull(objEnumeration5);
        org.junit.Assert.assertNull(obj8);
        org.junit.Assert.assertNotNull(objEnumeration9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(objSet11);
        org.junit.Assert.assertNotNull(objEnumeration12);
        org.junit.Assert.assertNotNull(objEntrySet13);
        org.junit.Assert.assertNull(obj14);
        org.junit.Assert.assertNotNull(obj15);
        org.junit.Assert.assertEquals(obj15.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj15), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj15), "{}");
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNull(obj31);
        org.junit.Assert.assertNotNull(objEnumeration32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNotNull(objEnumeration34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNull(obj38);
        org.junit.Assert.assertNotNull(objEnumeration39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNotNull(objSet41);
        org.junit.Assert.assertNotNull(objEnumeration42);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNotNull(strSet46);
        org.junit.Assert.assertNotNull(objSet47);
    }

    @Test
    public void test7679() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7679");
        java.util.Properties properties0 = new java.util.Properties();
        java.util.Properties properties1 = new java.util.Properties();
        java.lang.Object obj3 = properties1.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet4 = properties1.stringPropertyNames();
        boolean boolean5 = properties0.containsValue((java.lang.Object) properties1);
        java.util.Collection<java.lang.Object> objCollection6 = properties0.values();
        java.util.Properties properties8 = new java.util.Properties();
        java.lang.Object obj10 = properties8.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration11 = properties8.elements();
        boolean boolean12 = properties8.isEmpty();
        java.util.Set<java.lang.Object> objSet13 = properties8.keySet();
        java.lang.Object obj14 = properties0.putIfAbsent((java.lang.Object) "hi!", (java.lang.Object) objSet13);
        java.util.Set<java.lang.Object> objSet15 = properties0.keySet();
        java.util.Set<java.lang.Object> objSet16 = properties0.keySet();
        java.util.Properties properties17 = new java.util.Properties(properties0);
        java.lang.String str18 = properties17.toString();
        org.junit.Assert.assertNull(obj3);
        org.junit.Assert.assertNotNull(strSet4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(objCollection6);
        org.junit.Assert.assertNull(obj10);
        org.junit.Assert.assertNotNull(objEnumeration11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(objSet13);
        org.junit.Assert.assertNull(obj14);
        org.junit.Assert.assertNotNull(objSet15);
        org.junit.Assert.assertNotNull(objSet16);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "{}" + "'", str18, "{}");
    }

    @Test
    public void test7680() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7680");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration3 = properties0.elements();
        boolean boolean4 = properties0.isEmpty();
        java.util.Set<java.lang.Object> objSet5 = properties0.keySet();
        boolean boolean6 = properties0.isEmpty();
        java.util.Properties properties7 = new java.util.Properties();
        java.util.Collection<java.lang.Object> objCollection8 = properties7.values();
        java.util.Enumeration<java.lang.Object> objEnumeration9 = properties7.keys();
        java.lang.Object obj10 = properties0.remove((java.lang.Object) properties7);
        java.util.Set<java.lang.String> strSet11 = properties7.stringPropertyNames();
        java.util.Enumeration<java.lang.Object> objEnumeration12 = properties7.elements();
        java.util.Enumeration<?> wildcardEnumeration13 = properties7.propertyNames();
        java.util.Properties properties14 = new java.util.Properties(properties7);
        java.util.Properties properties15 = new java.util.Properties();
        java.lang.Object obj17 = properties15.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet18 = properties15.stringPropertyNames();
        java.util.Properties properties19 = new java.util.Properties();
        java.util.Properties properties20 = new java.util.Properties();
        java.lang.Object obj22 = properties20.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet23 = properties20.stringPropertyNames();
        boolean boolean24 = properties19.containsValue((java.lang.Object) properties20);
        java.util.Collection<java.lang.Object> objCollection25 = properties19.values();
        java.util.Enumeration<?> wildcardEnumeration26 = properties19.propertyNames();
        java.lang.Object obj28 = properties15.put((java.lang.Object) wildcardEnumeration26, (java.lang.Object) 10.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration29 = properties15.elements();
        java.util.Properties properties31 = new java.util.Properties();
        java.lang.Object obj33 = properties31.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration34 = properties31.elements();
        boolean boolean35 = properties31.isEmpty();
        java.util.Set<java.lang.Object> objSet36 = properties31.keySet();
        java.util.Enumeration<java.lang.Object> objEnumeration37 = properties31.keys();
        boolean boolean39 = properties31.equals((java.lang.Object) "");
        java.lang.String str40 = properties31.toString();
        java.lang.Object obj41 = properties15.put((java.lang.Object) 'a', (java.lang.Object) properties31);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties43 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties43.setSerialJtaTransactions(false);
        atomikosProperties43.setThreadedTwoPhaseCommit(true);
        atomikosProperties43.setMaxTimeout((long) '#');
        java.lang.String str50 = atomikosProperties43.getLogBaseDir();
        java.lang.Class<?> wildcardClass51 = atomikosProperties43.getClass();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties52 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties52.setSerialJtaTransactions(false);
        boolean boolean55 = atomikosProperties52.isSerialJtaTransactions();
        java.util.Properties properties56 = atomikosProperties52.asProperties();
        java.lang.Object obj59 = properties56.setProperty("hi!", "");
        java.util.Properties properties60 = new java.util.Properties(properties56);
        boolean boolean61 = properties15.replace((java.lang.Object) "{}", (java.lang.Object) atomikosProperties43, (java.lang.Object) properties56);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties62 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties62.setSerialJtaTransactions(false);
        boolean boolean65 = atomikosProperties62.isSerialJtaTransactions();
        java.lang.String str66 = atomikosProperties62.getLogBaseDir();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties67 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties67.setSerialJtaTransactions(false);
        boolean boolean70 = atomikosProperties67.isSerialJtaTransactions();
        atomikosProperties67.setTransactionManagerUniqueName("hi!");
        java.lang.String str73 = atomikosProperties67.getLogBaseName();
        java.lang.String str74 = atomikosProperties67.getLogBaseName();
        boolean boolean75 = atomikosProperties67.isForceShutdownOnVmExit();
        long long76 = atomikosProperties67.getMaxTimeout();
        atomikosProperties67.setSerialJtaTransactions(false);
        boolean boolean79 = atomikosProperties67.isThreadedTwoPhaseCommit();
        long long80 = atomikosProperties67.getDefaultJtaTimeout();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties81 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties81.setSerialJtaTransactions(false);
        atomikosProperties81.setThreadedTwoPhaseCommit(true);
        atomikosProperties81.setMaxTimeout((long) '#');
        boolean boolean88 = atomikosProperties81.isEnableLogging();
        atomikosProperties81.setTransactionManagerUniqueName("hi!");
        atomikosProperties81.setForceShutdownOnVmExit(false);
        atomikosProperties81.setSerialJtaTransactions(false);
        boolean boolean95 = atomikosProperties81.isSerialJtaTransactions();
        boolean boolean96 = properties15.replace((java.lang.Object) atomikosProperties62, (java.lang.Object) atomikosProperties67, (java.lang.Object) boolean95);
        boolean boolean97 = properties14.containsKey((java.lang.Object) properties15);
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(objEnumeration3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(objSet5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(objCollection8);
        org.junit.Assert.assertNotNull(objEnumeration9);
        org.junit.Assert.assertNull(obj10);
        org.junit.Assert.assertNotNull(strSet11);
        org.junit.Assert.assertNotNull(objEnumeration12);
        org.junit.Assert.assertNotNull(wildcardEnumeration13);
        org.junit.Assert.assertNull(obj17);
        org.junit.Assert.assertNotNull(strSet18);
        org.junit.Assert.assertNull(obj22);
        org.junit.Assert.assertNotNull(strSet23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(objCollection25);
        org.junit.Assert.assertNotNull(wildcardEnumeration26);
        org.junit.Assert.assertNull(obj28);
        org.junit.Assert.assertNotNull(objEnumeration29);
        org.junit.Assert.assertNull(obj33);
        org.junit.Assert.assertNotNull(objEnumeration34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertNotNull(objSet36);
        org.junit.Assert.assertNotNull(objEnumeration37);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "{}" + "'", str40, "{}");
        org.junit.Assert.assertNull(obj41);
        org.junit.Assert.assertNull(str50);
        org.junit.Assert.assertNotNull(wildcardClass51);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertNotNull(properties56);
        org.junit.Assert.assertNull(obj59);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertNull(str66);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertEquals("'" + str73 + "' != '" + "tmlog" + "'", str73, "tmlog");
        org.junit.Assert.assertEquals("'" + str74 + "' != '" + "tmlog" + "'", str74, "tmlog");
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
        org.junit.Assert.assertTrue("'" + long76 + "' != '" + 300000L + "'", long76 == 300000L);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + false + "'", boolean79 == false);
        org.junit.Assert.assertTrue("'" + long80 + "' != '" + 10000L + "'", long80 == 10000L);
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + true + "'", boolean88 == true);
        org.junit.Assert.assertTrue("'" + boolean95 + "' != '" + false + "'", boolean95 == false);
        org.junit.Assert.assertTrue("'" + boolean96 + "' != '" + false + "'", boolean96 == false);
        org.junit.Assert.assertTrue("'" + boolean97 + "' != '" + false + "'", boolean97 == false);
    }

    @Test
    public void test7681() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7681");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        java.util.Properties properties3 = new java.util.Properties();
        java.util.Collection<java.lang.Object> objCollection4 = properties3.values();
        java.util.Enumeration<java.lang.Object> objEnumeration5 = properties3.keys();
        java.util.Properties properties6 = new java.util.Properties();
        java.lang.Object obj8 = properties6.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration9 = properties6.elements();
        boolean boolean10 = properties6.isEmpty();
        java.util.Set<java.lang.Object> objSet11 = properties6.keySet();
        java.util.Enumeration<java.lang.Object> objEnumeration12 = properties6.keys();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet13 = properties6.entrySet();
        java.lang.Object obj14 = properties0.put((java.lang.Object) properties3, (java.lang.Object) properties6);
        java.util.Properties properties15 = new java.util.Properties();
        java.lang.Object obj17 = properties15.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration18 = properties15.elements();
        boolean boolean19 = properties15.isEmpty();
        java.util.Set<java.lang.Object> objSet20 = properties15.keySet();
        boolean boolean21 = properties15.isEmpty();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet22 = properties15.entrySet();
        java.util.Properties properties23 = new java.util.Properties();
        java.lang.Object obj25 = properties23.remove((java.lang.Object) 0.0d);
        boolean boolean26 = properties23.isEmpty();
        java.lang.Object obj29 = properties23.setProperty("", "hi!");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties30 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties30.setSerialJtaTransactions(false);
        boolean boolean33 = properties15.remove((java.lang.Object) properties23, (java.lang.Object) atomikosProperties30);
        java.util.Properties properties34 = new java.util.Properties(properties23);
        int int35 = properties34.size();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties37 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties37.setSerialJtaTransactions(false);
        boolean boolean40 = atomikosProperties37.isSerialJtaTransactions();
        java.lang.String str41 = atomikosProperties37.getService();
        boolean boolean42 = atomikosProperties37.isEnableLogging();
        java.lang.String str43 = atomikosProperties37.getTransactionManagerUniqueName();
        boolean boolean44 = properties34.remove((java.lang.Object) (byte) 1, (java.lang.Object) atomikosProperties37);
        atomikosProperties37.setMaxActives((int) (short) -1);
        boolean boolean47 = atomikosProperties37.isThreadedTwoPhaseCommit();
        long long48 = atomikosProperties37.getDefaultJtaTimeout();
        atomikosProperties37.setForceShutdownOnVmExit(true);
        atomikosProperties37.setSerialJtaTransactions(true);
        java.util.Properties properties53 = new java.util.Properties();
        java.lang.Object obj55 = properties53.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration56 = properties53.elements();
        int int57 = properties53.size();
        java.util.Properties properties58 = new java.util.Properties();
        java.lang.Object obj60 = properties58.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration61 = properties58.elements();
        boolean boolean62 = properties58.isEmpty();
        java.util.Set<java.lang.Object> objSet63 = properties58.keySet();
        boolean boolean64 = properties53.containsKey((java.lang.Object) objSet63);
        java.lang.Object obj65 = properties3.putIfAbsent((java.lang.Object) true, (java.lang.Object) boolean64);
        java.util.Properties properties66 = new java.util.Properties(properties3);
        int int67 = properties3.size();
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(objCollection4);
        org.junit.Assert.assertNotNull(objEnumeration5);
        org.junit.Assert.assertNull(obj8);
        org.junit.Assert.assertNotNull(objEnumeration9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(objSet11);
        org.junit.Assert.assertNotNull(objEnumeration12);
        org.junit.Assert.assertNotNull(objEntrySet13);
        org.junit.Assert.assertNull(obj14);
        org.junit.Assert.assertNull(obj17);
        org.junit.Assert.assertNotNull(objEnumeration18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(objSet20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(objEntrySet22);
        org.junit.Assert.assertNull(obj25);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertNull(obj29);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 0 + "'", int35 == 0);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNull(str41);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertNull(str43);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertTrue("'" + long48 + "' != '" + 10000L + "'", long48 == 10000L);
        org.junit.Assert.assertNull(obj55);
        org.junit.Assert.assertNotNull(objEnumeration56);
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + 0 + "'", int57 == 0);
        org.junit.Assert.assertNull(obj60);
        org.junit.Assert.assertNotNull(objEnumeration61);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + true + "'", boolean62 == true);
        org.junit.Assert.assertNotNull(objSet63);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertNull(obj65);
        org.junit.Assert.assertTrue("'" + int67 + "' != '" + 1 + "'", int67 == 1);
    }

    @Test
    public void test7682() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7682");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setSerialJtaTransactions(false);
        boolean boolean3 = atomikosProperties0.isSerialJtaTransactions();
        java.lang.String str4 = atomikosProperties0.getService();
        boolean boolean5 = atomikosProperties0.isEnableLogging();
        atomikosProperties0.setCheckpointInterval((long) (byte) 100);
        atomikosProperties0.setLogBaseDir("tmlog");
        long long10 = atomikosProperties0.getDefaultJtaTimeout();
        long long11 = atomikosProperties0.getCheckpointInterval();
        long long12 = atomikosProperties0.getCheckpointInterval();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertTrue("'" + long10 + "' != '" + 10000L + "'", long10 == 10000L);
        org.junit.Assert.assertTrue("'" + long11 + "' != '" + 100L + "'", long11 == 100L);
        org.junit.Assert.assertTrue("'" + long12 + "' != '" + 100L + "'", long12 == 100L);
    }

    @Test
    public void test7683() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7683");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setSerialJtaTransactions(false);
        atomikosProperties0.setThreadedTwoPhaseCommit(true);
        atomikosProperties0.setEnableLogging(false);
        boolean boolean7 = atomikosProperties0.isSerialJtaTransactions();
        int int8 = atomikosProperties0.getMaxActives();
        atomikosProperties0.setDefaultJtaTimeout((long) '#');
        java.lang.String str11 = atomikosProperties0.getLogBaseDir();
        atomikosProperties0.setTransactionManagerUniqueName("hi!");
        long long14 = atomikosProperties0.getMaxTimeout();
        java.lang.String str15 = atomikosProperties0.getLogBaseDir();
        boolean boolean16 = atomikosProperties0.isSerialJtaTransactions();
        boolean boolean17 = atomikosProperties0.isForceShutdownOnVmExit();
        atomikosProperties0.setForceShutdownOnVmExit(true);
        atomikosProperties0.setForceShutdownOnVmExit(false);
        atomikosProperties0.setLogBaseDir("{hi!=[], {=hi!}={com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=false, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.tm_unique_name=tmlog, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}}");
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 50 + "'", int8 == 50);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertTrue("'" + long14 + "' != '" + 300000L + "'", long14 == 300000L);
        org.junit.Assert.assertNull(str15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
    }

    @Test
    public void test7684() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7684");
        java.util.Properties properties0 = new java.util.Properties();
        java.util.Properties properties1 = new java.util.Properties();
        java.lang.Object obj3 = properties1.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet4 = properties1.stringPropertyNames();
        boolean boolean5 = properties0.containsValue((java.lang.Object) properties1);
        java.util.Collection<java.lang.Object> objCollection6 = properties0.values();
        java.util.Enumeration<?> wildcardEnumeration7 = properties0.propertyNames();
        java.util.Set<java.lang.String> strSet8 = properties0.stringPropertyNames();
        properties0.clear();
        java.util.Enumeration<?> wildcardEnumeration10 = properties0.propertyNames();
        org.junit.Assert.assertNull(obj3);
        org.junit.Assert.assertNotNull(strSet4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(objCollection6);
        org.junit.Assert.assertNotNull(wildcardEnumeration7);
        org.junit.Assert.assertNotNull(strSet8);
        org.junit.Assert.assertNotNull(wildcardEnumeration10);
    }

    @Test
    public void test7685() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7685");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setSerialJtaTransactions(false);
        boolean boolean3 = atomikosProperties0.isThreadedTwoPhaseCommit();
        atomikosProperties0.setTransactionManagerUniqueName("hi!");
        java.lang.String str6 = atomikosProperties0.getLogBaseName();
        long long7 = atomikosProperties0.getMaxTimeout();
        long long8 = atomikosProperties0.getDefaultJtaTimeout();
        java.lang.String str9 = atomikosProperties0.getTransactionManagerUniqueName();
        atomikosProperties0.setSerialJtaTransactions(false);
        boolean boolean12 = atomikosProperties0.isSerialJtaTransactions();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "tmlog" + "'", str6, "tmlog");
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + 300000L + "'", long7 == 300000L);
        org.junit.Assert.assertTrue("'" + long8 + "' != '" + 10000L + "'", long8 == 10000L);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "hi!" + "'", str9, "hi!");
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
    }

    @Test
    public void test7686() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7686");
        java.util.Properties properties0 = new java.util.Properties();
        boolean boolean2 = properties0.contains((java.lang.Object) 100.0d);
        java.lang.Object obj3 = null;
        boolean boolean4 = properties0.equals(obj3);
        java.util.Properties properties5 = new java.util.Properties(properties0);
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet6 = properties0.entrySet();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties7 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties7.setSerialJtaTransactions(false);
        atomikosProperties7.setThreadedTwoPhaseCommit(true);
        atomikosProperties7.setThreadedTwoPhaseCommit(true);
        long long14 = atomikosProperties7.getMaxTimeout();
        int int15 = atomikosProperties7.getMaxActives();
        boolean boolean16 = atomikosProperties7.isSerialJtaTransactions();
        boolean boolean17 = properties0.contains((java.lang.Object) boolean16);
        properties0.clear();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(objEntrySet6);
        org.junit.Assert.assertTrue("'" + long14 + "' != '" + 300000L + "'", long14 == 300000L);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 50 + "'", int15 == 50);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
    }

    @Test
    public void test7687() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7687");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setSerialJtaTransactions(false);
        atomikosProperties0.setThreadedTwoPhaseCommit(true);
        atomikosProperties0.setMaxTimeout((long) '#');
        boolean boolean7 = atomikosProperties0.isEnableLogging();
        atomikosProperties0.setCheckpointInterval((long) (byte) -1);
        atomikosProperties0.setEnableLogging(true);
        atomikosProperties0.setLogBaseDir("");
        long long14 = atomikosProperties0.getMaxTimeout();
        atomikosProperties0.setService("{hi!=[]}");
        java.lang.String str17 = atomikosProperties0.getLogBaseName();
        boolean boolean18 = atomikosProperties0.isForceShutdownOnVmExit();
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertTrue("'" + long14 + "' != '" + 35L + "'", long14 == 35L);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "tmlog" + "'", str17, "tmlog");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
    }

    @Test
    public void test7688() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7688");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet3 = properties0.stringPropertyNames();
        java.util.Properties properties4 = new java.util.Properties();
        java.util.Properties properties5 = new java.util.Properties();
        java.lang.Object obj7 = properties5.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet8 = properties5.stringPropertyNames();
        boolean boolean9 = properties4.containsValue((java.lang.Object) properties5);
        java.util.Collection<java.lang.Object> objCollection10 = properties4.values();
        java.util.Enumeration<?> wildcardEnumeration11 = properties4.propertyNames();
        java.lang.Object obj13 = properties0.put((java.lang.Object) wildcardEnumeration11, (java.lang.Object) 10.0d);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties14 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties14.setSerialJtaTransactions(false);
        atomikosProperties14.setThreadedTwoPhaseCommit(true);
        atomikosProperties14.setMaxTimeout((long) '#');
        boolean boolean21 = atomikosProperties14.isForceShutdownOnVmExit();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties22 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties22.setSerialJtaTransactions(false);
        atomikosProperties22.setThreadedTwoPhaseCommit(true);
        atomikosProperties22.setThreadedTwoPhaseCommit(true);
        java.lang.Object obj29 = properties0.getOrDefault((java.lang.Object) boolean21, (java.lang.Object) atomikosProperties22);
        java.util.Set<java.lang.String> strSet30 = properties0.stringPropertyNames();
        java.util.Properties properties31 = new java.util.Properties(properties0);
        java.util.Enumeration<java.lang.Object> objEnumeration32 = properties0.keys();
        java.io.PrintStream printStream33 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties0.list(printStream33);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(strSet3);
        org.junit.Assert.assertNull(obj7);
        org.junit.Assert.assertNotNull(strSet8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(objCollection10);
        org.junit.Assert.assertNotNull(wildcardEnumeration11);
        org.junit.Assert.assertNull(obj13);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(obj29);
        org.junit.Assert.assertNotNull(strSet30);
        org.junit.Assert.assertNotNull(objEnumeration32);
    }

    @Test
    public void test7689() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7689");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setSerialJtaTransactions(false);
        atomikosProperties0.setThreadedTwoPhaseCommit(true);
        atomikosProperties0.setMaxTimeout((long) '#');
        boolean boolean7 = atomikosProperties0.isEnableLogging();
        atomikosProperties0.setCheckpointInterval((long) (byte) -1);
        atomikosProperties0.setLogBaseName("{=hi!}");
        long long12 = atomikosProperties0.getMaxTimeout();
        atomikosProperties0.setEnableLogging(true);
        java.util.Properties properties15 = atomikosProperties0.asProperties();
        java.lang.String str16 = properties15.toString();
        java.lang.String str18 = properties15.getProperty("{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=100, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=35, com.atomikos.icatch.threaded_2pc=true, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
        java.io.PrintWriter printWriter19 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties15.list(printWriter19);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertTrue("'" + long12 + "' != '" + 35L + "'", long12 == 35L);
        org.junit.Assert.assertNotNull(properties15);
// flaky:         org.junit.Assert.assertEquals("'" + str16 + "' != '" + "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=-1, com.atomikos.icatch.serial_jta_transactions=false, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=35, com.atomikos.icatch.threaded_2pc=true, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name={=hi!}}" + "'", str16, "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=-1, com.atomikos.icatch.serial_jta_transactions=false, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=35, com.atomikos.icatch.threaded_2pc=true, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name={=hi!}}");
        org.junit.Assert.assertNull(str18);
    }

    @Test
    public void test7690() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7690");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration3 = properties0.elements();
        java.util.Enumeration<java.lang.Object> objEnumeration4 = properties0.keys();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties5 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties5.setSerialJtaTransactions(false);
        atomikosProperties5.setThreadedTwoPhaseCommit(true);
        atomikosProperties5.setEnableLogging(false);
        boolean boolean12 = atomikosProperties5.isSerialJtaTransactions();
        int int13 = atomikosProperties5.getMaxActives();
        boolean boolean14 = atomikosProperties5.isEnableLogging();
        long long15 = atomikosProperties5.getCheckpointInterval();
        java.lang.String str16 = atomikosProperties5.getService();
        boolean boolean17 = atomikosProperties5.isSerialJtaTransactions();
        atomikosProperties5.setEnableLogging(true);
        boolean boolean20 = atomikosProperties5.isForceShutdownOnVmExit();
        boolean boolean21 = properties0.containsKey((java.lang.Object) boolean20);
        boolean boolean22 = properties0.isEmpty();
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(objEnumeration3);
        org.junit.Assert.assertNotNull(objEnumeration4);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 50 + "'", int13 == 50);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + long15 + "' != '" + 500L + "'", long15 == 500L);
        org.junit.Assert.assertNull(str16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
    }

    @Test
    public void test7691() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7691");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        java.util.Properties properties3 = new java.util.Properties();
        java.util.Collection<java.lang.Object> objCollection4 = properties3.values();
        java.util.Enumeration<java.lang.Object> objEnumeration5 = properties3.keys();
        java.util.Properties properties6 = new java.util.Properties();
        java.lang.Object obj8 = properties6.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration9 = properties6.elements();
        boolean boolean10 = properties6.isEmpty();
        java.util.Set<java.lang.Object> objSet11 = properties6.keySet();
        java.util.Enumeration<java.lang.Object> objEnumeration12 = properties6.keys();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet13 = properties6.entrySet();
        java.lang.Object obj14 = properties0.put((java.lang.Object) properties3, (java.lang.Object) properties6);
        java.lang.Object obj15 = properties3.clone();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties16 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties16.setSerialJtaTransactions(false);
        atomikosProperties16.setThreadedTwoPhaseCommit(true);
        atomikosProperties16.setMaxTimeout((long) '#');
        boolean boolean23 = atomikosProperties16.isEnableLogging();
        atomikosProperties16.setCheckpointInterval((long) 100);
        atomikosProperties16.setSerialJtaTransactions(true);
        boolean boolean28 = properties3.equals((java.lang.Object) atomikosProperties16);
        java.util.Enumeration<?> wildcardEnumeration29 = properties3.propertyNames();
        java.util.Properties properties30 = new java.util.Properties();
        java.lang.Object obj32 = properties30.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration33 = properties30.elements();
        boolean boolean34 = properties30.isEmpty();
        java.util.Set<java.lang.Object> objSet35 = properties30.keySet();
        boolean boolean36 = properties30.isEmpty();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet37 = properties30.entrySet();
        java.util.Properties properties38 = new java.util.Properties();
        java.lang.Object obj40 = properties38.remove((java.lang.Object) 0.0d);
        boolean boolean41 = properties38.isEmpty();
        java.lang.Object obj44 = properties38.setProperty("", "hi!");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties45 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties45.setSerialJtaTransactions(false);
        boolean boolean48 = properties30.remove((java.lang.Object) properties38, (java.lang.Object) atomikosProperties45);
        java.util.Properties properties49 = new java.util.Properties(properties38);
        boolean boolean50 = properties49.isEmpty();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties51 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties51.setSerialJtaTransactions(false);
        atomikosProperties51.setThreadedTwoPhaseCommit(true);
        atomikosProperties51.setMaxTimeout((long) '#');
        boolean boolean58 = atomikosProperties51.isEnableLogging();
        atomikosProperties51.setCheckpointInterval((long) (byte) -1);
        atomikosProperties51.setCheckpointInterval(0L);
        java.lang.String str63 = atomikosProperties51.getService();
        boolean boolean64 = atomikosProperties51.isForceShutdownOnVmExit();
        java.util.Properties properties65 = atomikosProperties51.asProperties();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties66 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties66.setSerialJtaTransactions(false);
        atomikosProperties66.setThreadedTwoPhaseCommit(true);
        atomikosProperties66.setThreadedTwoPhaseCommit(true);
        long long73 = atomikosProperties66.getMaxTimeout();
        java.lang.String str74 = atomikosProperties66.getLogBaseName();
        long long75 = atomikosProperties66.getMaxTimeout();
        long long76 = atomikosProperties66.getCheckpointInterval();
        boolean boolean77 = atomikosProperties66.isEnableLogging();
        java.lang.String str78 = atomikosProperties66.getTransactionManagerUniqueName();
        java.lang.Object obj79 = properties49.replace((java.lang.Object) properties65, (java.lang.Object) atomikosProperties66);
        java.util.Collection<java.lang.Object> objCollection80 = properties49.values();
        boolean boolean81 = properties3.containsValue((java.lang.Object) properties49);
        java.io.Writer writer82 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties3.store(writer82, "{com.atomikos.icatch.enable_logging=false, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=false, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=true, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(objCollection4);
        org.junit.Assert.assertNotNull(objEnumeration5);
        org.junit.Assert.assertNull(obj8);
        org.junit.Assert.assertNotNull(objEnumeration9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(objSet11);
        org.junit.Assert.assertNotNull(objEnumeration12);
        org.junit.Assert.assertNotNull(objEntrySet13);
        org.junit.Assert.assertNull(obj14);
        org.junit.Assert.assertNotNull(obj15);
        org.junit.Assert.assertEquals(obj15.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj15), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj15), "{}");
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(wildcardEnumeration29);
        org.junit.Assert.assertNull(obj32);
        org.junit.Assert.assertNotNull(objEnumeration33);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertNotNull(objSet35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNotNull(objEntrySet37);
        org.junit.Assert.assertNull(obj40);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertNull(obj44);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertNull(str63);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertNotNull(properties65);
        org.junit.Assert.assertTrue("'" + long73 + "' != '" + 300000L + "'", long73 == 300000L);
        org.junit.Assert.assertEquals("'" + str74 + "' != '" + "tmlog" + "'", str74, "tmlog");
        org.junit.Assert.assertTrue("'" + long75 + "' != '" + 300000L + "'", long75 == 300000L);
        org.junit.Assert.assertTrue("'" + long76 + "' != '" + 500L + "'", long76 == 500L);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + true + "'", boolean77 == true);
        org.junit.Assert.assertNull(str78);
        org.junit.Assert.assertNull(obj79);
        org.junit.Assert.assertNotNull(objCollection80);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + false + "'", boolean81 == false);
    }

    @Test
    public void test7692() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7692");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration3 = properties0.elements();
        boolean boolean4 = properties0.isEmpty();
        java.util.Set<java.lang.Object> objSet5 = properties0.keySet();
        boolean boolean6 = properties0.isEmpty();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet7 = properties0.entrySet();
        java.util.Properties properties8 = new java.util.Properties();
        java.lang.Object obj10 = properties8.remove((java.lang.Object) 0.0d);
        boolean boolean11 = properties8.isEmpty();
        java.lang.Object obj14 = properties8.setProperty("", "hi!");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties15 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties15.setSerialJtaTransactions(false);
        boolean boolean18 = properties0.remove((java.lang.Object) properties8, (java.lang.Object) atomikosProperties15);
        java.util.Properties properties19 = new java.util.Properties(properties8);
        int int20 = properties19.size();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties22 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties22.setSerialJtaTransactions(false);
        boolean boolean25 = atomikosProperties22.isSerialJtaTransactions();
        java.lang.String str26 = atomikosProperties22.getService();
        boolean boolean27 = atomikosProperties22.isEnableLogging();
        java.lang.String str28 = atomikosProperties22.getTransactionManagerUniqueName();
        boolean boolean29 = properties19.remove((java.lang.Object) (byte) 1, (java.lang.Object) atomikosProperties22);
        atomikosProperties22.setMaxActives((int) (short) -1);
        java.util.Properties properties32 = atomikosProperties22.asProperties();
        java.util.Properties properties33 = new java.util.Properties(properties32);
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(objEnumeration3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(objSet5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(objEntrySet7);
        org.junit.Assert.assertNull(obj10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNull(obj14);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 0 + "'", int20 == 0);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNull(str26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNull(str28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(properties32);
    }

    @Test
    public void test7693() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7693");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setSerialJtaTransactions(false);
        atomikosProperties0.setThreadedTwoPhaseCommit(true);
        atomikosProperties0.setMaxTimeout((long) '#');
        boolean boolean7 = atomikosProperties0.isEnableLogging();
        int int8 = atomikosProperties0.getMaxActives();
        int int9 = atomikosProperties0.getMaxActives();
        java.util.Properties properties10 = atomikosProperties0.asProperties();
        java.lang.String str11 = atomikosProperties0.getService();
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 50 + "'", int8 == 50);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 50 + "'", int9 == 50);
        org.junit.Assert.assertNotNull(properties10);
        org.junit.Assert.assertNull(str11);
    }

    @Test
    public void test7694() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7694");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setSerialJtaTransactions(false);
        atomikosProperties0.setThreadedTwoPhaseCommit(true);
        atomikosProperties0.setThreadedTwoPhaseCommit(true);
        int int7 = atomikosProperties0.getMaxActives();
        long long8 = atomikosProperties0.getMaxTimeout();
        boolean boolean9 = atomikosProperties0.isSerialJtaTransactions();
        long long10 = atomikosProperties0.getCheckpointInterval();
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 50 + "'", int7 == 50);
        org.junit.Assert.assertTrue("'" + long8 + "' != '" + 300000L + "'", long8 == 300000L);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + long10 + "' != '" + 500L + "'", long10 == 500L);
    }

    @Test
    public void test7695() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7695");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        boolean boolean3 = properties0.isEmpty();
        java.util.Enumeration<java.lang.Object> objEnumeration4 = properties0.elements();
        java.lang.Object obj7 = properties0.replace((java.lang.Object) 1, (java.lang.Object) 1);
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet8 = properties0.entrySet();
        java.util.Properties properties9 = new java.util.Properties(properties0);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties10 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties10.setSerialJtaTransactions(false);
        atomikosProperties10.setThreadedTwoPhaseCommit(true);
        atomikosProperties10.setMaxTimeout((long) '#');
        boolean boolean17 = atomikosProperties10.isEnableLogging();
        java.util.Properties properties18 = new java.util.Properties();
        java.lang.Object obj20 = properties18.remove((java.lang.Object) 0.0d);
        boolean boolean21 = properties18.isEmpty();
        java.util.Enumeration<java.lang.Object> objEnumeration22 = properties18.elements();
        java.util.Properties properties23 = new java.util.Properties();
        java.lang.Object obj25 = properties23.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration26 = properties23.elements();
        boolean boolean27 = properties23.isEmpty();
        java.lang.Object obj30 = properties23.setProperty("tmlog", "");
        java.util.Properties properties31 = new java.util.Properties();
        java.lang.Object obj33 = properties31.remove((java.lang.Object) 0.0d);
        java.util.Properties properties34 = new java.util.Properties();
        java.util.Collection<java.lang.Object> objCollection35 = properties34.values();
        java.util.Enumeration<java.lang.Object> objEnumeration36 = properties34.keys();
        java.util.Properties properties37 = new java.util.Properties();
        java.lang.Object obj39 = properties37.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration40 = properties37.elements();
        boolean boolean41 = properties37.isEmpty();
        java.util.Set<java.lang.Object> objSet42 = properties37.keySet();
        java.util.Enumeration<java.lang.Object> objEnumeration43 = properties37.keys();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet44 = properties37.entrySet();
        java.lang.Object obj45 = properties31.put((java.lang.Object) properties34, (java.lang.Object) properties37);
        java.lang.String str47 = properties34.getProperty("{=hi!}");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties48 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties48.setSerialJtaTransactions(false);
        boolean boolean51 = atomikosProperties48.isSerialJtaTransactions();
        java.lang.Object obj52 = properties23.put((java.lang.Object) properties34, (java.lang.Object) boolean51);
        properties18.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties23);
        java.util.Properties properties54 = new java.util.Properties();
        java.lang.Object obj56 = properties54.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration57 = properties54.elements();
        boolean boolean58 = properties54.isEmpty();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet59 = properties54.entrySet();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties61 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties61.setSerialJtaTransactions(false);
        atomikosProperties61.setThreadedTwoPhaseCommit(true);
        atomikosProperties61.setMaxTimeout((long) '#');
        boolean boolean68 = atomikosProperties61.isForceShutdownOnVmExit();
        java.lang.Object obj69 = properties54.put((java.lang.Object) (short) 1, (java.lang.Object) atomikosProperties61);
        long long70 = atomikosProperties61.getDefaultJtaTimeout();
        atomikosProperties61.setMaxActives((int) (short) 1);
        java.lang.String str73 = atomikosProperties61.getService();
        atomikosProperties61.setCheckpointInterval((long) '4');
        boolean boolean76 = properties0.replace((java.lang.Object) atomikosProperties10, (java.lang.Object) properties18, (java.lang.Object) atomikosProperties61);
        java.lang.String str77 = atomikosProperties10.getTransactionManagerUniqueName();
        boolean boolean78 = atomikosProperties10.isThreadedTwoPhaseCommit();
        java.lang.String str79 = atomikosProperties10.getLogBaseDir();
        long long80 = atomikosProperties10.getMaxTimeout();
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(objEnumeration4);
        org.junit.Assert.assertNull(obj7);
        org.junit.Assert.assertNotNull(objEntrySet8);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNull(obj20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(objEnumeration22);
        org.junit.Assert.assertNull(obj25);
        org.junit.Assert.assertNotNull(objEnumeration26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNull(obj30);
        org.junit.Assert.assertNull(obj33);
        org.junit.Assert.assertNotNull(objCollection35);
        org.junit.Assert.assertNotNull(objEnumeration36);
        org.junit.Assert.assertNull(obj39);
        org.junit.Assert.assertNotNull(objEnumeration40);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertNotNull(objSet42);
        org.junit.Assert.assertNotNull(objEnumeration43);
        org.junit.Assert.assertNotNull(objEntrySet44);
        org.junit.Assert.assertNull(obj45);
        org.junit.Assert.assertNull(str47);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertNull(obj52);
        org.junit.Assert.assertNull(obj56);
        org.junit.Assert.assertNotNull(objEnumeration57);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertNotNull(objEntrySet59);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertNull(obj69);
        org.junit.Assert.assertTrue("'" + long70 + "' != '" + 10000L + "'", long70 == 10000L);
        org.junit.Assert.assertNull(str73);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
        org.junit.Assert.assertNull(str77);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + true + "'", boolean78 == true);
        org.junit.Assert.assertNull(str79);
        org.junit.Assert.assertTrue("'" + long80 + "' != '" + 35L + "'", long80 == 35L);
    }

    @Test
    public void test7696() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7696");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setSerialJtaTransactions(false);
        atomikosProperties0.setThreadedTwoPhaseCommit(true);
        boolean boolean5 = atomikosProperties0.isForceShutdownOnVmExit();
        java.lang.String str6 = atomikosProperties0.getTransactionManagerUniqueName();
        java.lang.String str7 = atomikosProperties0.getService();
        atomikosProperties0.setCheckpointInterval(0L);
        atomikosProperties0.setSerialJtaTransactions(false);
        long long12 = atomikosProperties0.getMaxTimeout();
        int int13 = atomikosProperties0.getMaxActives();
        atomikosProperties0.setLogBaseName("{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=false, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.tm_unique_name=tmlog, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
        atomikosProperties0.setMaxTimeout((long) (short) 0);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertTrue("'" + long12 + "' != '" + 300000L + "'", long12 == 300000L);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 50 + "'", int13 == 50);
    }

    @Test
    public void test7697() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7697");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setSerialJtaTransactions(false);
        atomikosProperties0.setThreadedTwoPhaseCommit(true);
        atomikosProperties0.setMaxTimeout((long) '#');
        boolean boolean7 = atomikosProperties0.isEnableLogging();
        atomikosProperties0.setCheckpointInterval((long) (byte) -1);
        atomikosProperties0.setEnableLogging(true);
        atomikosProperties0.setLogBaseName("{}");
        atomikosProperties0.setLogBaseName("tmlog");
        atomikosProperties0.setSerialJtaTransactions(true);
        java.lang.String str18 = atomikosProperties0.getTransactionManagerUniqueName();
        atomikosProperties0.setDefaultJtaTimeout((long) 9);
        long long21 = atomikosProperties0.getMaxTimeout();
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNull(str18);
        org.junit.Assert.assertTrue("'" + long21 + "' != '" + 35L + "'", long21 == 35L);
    }

    @Test
    public void test7698() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7698");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setSerialJtaTransactions(false);
        atomikosProperties0.setThreadedTwoPhaseCommit(true);
        atomikosProperties0.setThreadedTwoPhaseCommit(true);
        java.util.Properties properties7 = atomikosProperties0.asProperties();
        int int8 = atomikosProperties0.getMaxActives();
        atomikosProperties0.setService("hi!");
        long long11 = atomikosProperties0.getMaxTimeout();
        atomikosProperties0.setTransactionManagerUniqueName("hi!");
        java.util.Properties properties14 = atomikosProperties0.asProperties();
        java.lang.Object obj15 = properties14.clone();
        int int16 = properties14.size();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties17 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties17.setSerialJtaTransactions(false);
        atomikosProperties17.setThreadedTwoPhaseCommit(true);
        atomikosProperties17.setMaxTimeout((long) '#');
        long long24 = atomikosProperties17.getCheckpointInterval();
        java.lang.String str25 = atomikosProperties17.getTransactionManagerUniqueName();
        atomikosProperties17.setTransactionManagerUniqueName("{=hi!}");
        atomikosProperties17.setSerialJtaTransactions(false);
        atomikosProperties17.setLogBaseName("{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=false, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, hi!=, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
        long long32 = atomikosProperties17.getMaxTimeout();
        boolean boolean33 = properties14.containsValue((java.lang.Object) atomikosProperties17);
        org.junit.Assert.assertNotNull(properties7);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 50 + "'", int8 == 50);
        org.junit.Assert.assertTrue("'" + long11 + "' != '" + 300000L + "'", long11 == 300000L);
        org.junit.Assert.assertNotNull(properties14);
        org.junit.Assert.assertNotNull(obj15);
// flaky:         org.junit.Assert.assertEquals(obj15.toString(), "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=false, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.service=hi!, com.atomikos.icatch.threaded_2pc=true, com.atomikos.icatch.tm_unique_name=hi!, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
// flaky:         org.junit.Assert.assertEquals(java.lang.String.valueOf(obj15), "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=false, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.service=hi!, com.atomikos.icatch.threaded_2pc=true, com.atomikos.icatch.tm_unique_name=hi!, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
// flaky:         org.junit.Assert.assertEquals(java.util.Objects.toString(obj15), "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=false, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.service=hi!, com.atomikos.icatch.threaded_2pc=true, com.atomikos.icatch.tm_unique_name=hi!, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 11 + "'", int16 == 11);
        org.junit.Assert.assertTrue("'" + long24 + "' != '" + 500L + "'", long24 == 500L);
        org.junit.Assert.assertNull(str25);
        org.junit.Assert.assertTrue("'" + long32 + "' != '" + 35L + "'", long32 == 35L);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
    }

    @Test
    public void test7699() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7699");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setSerialJtaTransactions(false);
        boolean boolean3 = atomikosProperties0.isThreadedTwoPhaseCommit();
        atomikosProperties0.setTransactionManagerUniqueName("hi!");
        java.lang.String str6 = atomikosProperties0.getLogBaseName();
        long long7 = atomikosProperties0.getMaxTimeout();
        long long8 = atomikosProperties0.getDefaultJtaTimeout();
        java.lang.String str9 = atomikosProperties0.getTransactionManagerUniqueName();
        long long10 = atomikosProperties0.getDefaultJtaTimeout();
        boolean boolean11 = atomikosProperties0.isEnableLogging();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "tmlog" + "'", str6, "tmlog");
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + 300000L + "'", long7 == 300000L);
        org.junit.Assert.assertTrue("'" + long8 + "' != '" + 10000L + "'", long8 == 10000L);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "hi!" + "'", str9, "hi!");
        org.junit.Assert.assertTrue("'" + long10 + "' != '" + 10000L + "'", long10 == 10000L);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
    }

    @Test
    public void test7700() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7700");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration3 = properties0.elements();
        boolean boolean4 = properties0.isEmpty();
        java.util.Set<java.lang.Object> objSet5 = properties0.keySet();
        java.util.Enumeration<java.lang.Object> objEnumeration6 = properties0.keys();
        java.lang.String str8 = properties0.getProperty("hi!");
        java.util.Properties properties10 = new java.util.Properties();
        java.lang.Object obj12 = properties10.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration13 = properties10.elements();
        int int14 = properties10.size();
        java.util.Properties properties15 = new java.util.Properties(properties10);
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet16 = properties10.entrySet();
        java.util.Properties properties17 = new java.util.Properties();
        java.util.Properties properties18 = new java.util.Properties();
        java.lang.Object obj20 = properties18.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet21 = properties18.stringPropertyNames();
        boolean boolean22 = properties17.containsValue((java.lang.Object) properties18);
        java.util.Collection<java.lang.Object> objCollection23 = properties17.values();
        java.util.Properties properties25 = new java.util.Properties();
        java.lang.Object obj27 = properties25.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration28 = properties25.elements();
        boolean boolean29 = properties25.isEmpty();
        java.util.Set<java.lang.Object> objSet30 = properties25.keySet();
        java.lang.Object obj31 = properties17.putIfAbsent((java.lang.Object) "hi!", (java.lang.Object) objSet30);
        boolean boolean32 = properties0.replace((java.lang.Object) "hi!", (java.lang.Object) properties10, (java.lang.Object) "hi!");
        java.lang.String str34 = properties10.getProperty("{=hi!}");
        java.util.Properties properties35 = new java.util.Properties();
        java.util.Properties properties36 = new java.util.Properties();
        java.lang.Object obj38 = properties36.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet39 = properties36.stringPropertyNames();
        boolean boolean40 = properties35.containsValue((java.lang.Object) properties36);
        java.util.Collection<java.lang.Object> objCollection41 = properties35.values();
        java.util.Properties properties43 = new java.util.Properties();
        java.lang.Object obj45 = properties43.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration46 = properties43.elements();
        boolean boolean47 = properties43.isEmpty();
        java.util.Set<java.lang.Object> objSet48 = properties43.keySet();
        java.lang.Object obj49 = properties35.putIfAbsent((java.lang.Object) "hi!", (java.lang.Object) objSet48);
        java.util.Set<java.lang.Object> objSet50 = properties35.keySet();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties51 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties51.setSerialJtaTransactions(false);
        atomikosProperties51.setThreadedTwoPhaseCommit(true);
        atomikosProperties51.setMaxTimeout((long) '#');
        boolean boolean58 = atomikosProperties51.isEnableLogging();
        atomikosProperties51.setCheckpointInterval((long) (byte) -1);
        atomikosProperties51.setEnableLogging(true);
        java.util.Properties properties63 = new java.util.Properties();
        java.lang.Object obj65 = properties63.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration66 = properties63.elements();
        boolean boolean67 = properties63.isEmpty();
        java.util.Enumeration<java.lang.Object> objEnumeration68 = properties63.elements();
        java.lang.Object obj69 = properties35.replace((java.lang.Object) true, (java.lang.Object) properties63);
        boolean boolean70 = properties10.equals((java.lang.Object) properties35);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties71 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties71.setSerialJtaTransactions(false);
        atomikosProperties71.setThreadedTwoPhaseCommit(true);
        atomikosProperties71.setThreadedTwoPhaseCommit(true);
        java.util.Properties properties78 = atomikosProperties71.asProperties();
        int int79 = atomikosProperties71.getMaxActives();
        atomikosProperties71.setService("hi!");
        atomikosProperties71.setMaxTimeout((long) (byte) 10);
        atomikosProperties71.setDefaultJtaTimeout((long) 50);
        java.lang.Object obj86 = properties35.remove((java.lang.Object) atomikosProperties71);
        atomikosProperties71.setCheckpointInterval(10L);
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(objEnumeration3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(objSet5);
        org.junit.Assert.assertNotNull(objEnumeration6);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNull(obj12);
        org.junit.Assert.assertNotNull(objEnumeration13);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertNotNull(objEntrySet16);
        org.junit.Assert.assertNull(obj20);
        org.junit.Assert.assertNotNull(strSet21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(objCollection23);
        org.junit.Assert.assertNull(obj27);
        org.junit.Assert.assertNotNull(objEnumeration28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNotNull(objSet30);
        org.junit.Assert.assertNull(obj31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNull(str34);
        org.junit.Assert.assertNull(obj38);
        org.junit.Assert.assertNotNull(strSet39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(objCollection41);
        org.junit.Assert.assertNull(obj45);
        org.junit.Assert.assertNotNull(objEnumeration46);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertNotNull(objSet48);
        org.junit.Assert.assertNull(obj49);
        org.junit.Assert.assertNotNull(objSet50);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertNull(obj65);
        org.junit.Assert.assertNotNull(objEnumeration66);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + true + "'", boolean67 == true);
        org.junit.Assert.assertNotNull(objEnumeration68);
        org.junit.Assert.assertNull(obj69);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertNotNull(properties78);
        org.junit.Assert.assertTrue("'" + int79 + "' != '" + 50 + "'", int79 == 50);
        org.junit.Assert.assertNull(obj86);
    }

    @Test
    public void test7701() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7701");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        boolean boolean4 = properties0.containsValue((java.lang.Object) "hi!");
        java.lang.String str6 = properties0.getProperty("hi!");
        java.util.Enumeration<?> wildcardEnumeration7 = properties0.propertyNames();
        java.lang.String str9 = properties0.getProperty("{{}={}}");
        java.lang.Object obj12 = properties0.setProperty("{tmlog=}", "{=hi!}");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties13 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties13.setSerialJtaTransactions(false);
        atomikosProperties13.setThreadedTwoPhaseCommit(true);
        atomikosProperties13.setEnableLogging(false);
        boolean boolean20 = atomikosProperties13.isSerialJtaTransactions();
        java.lang.String str21 = atomikosProperties13.getLogBaseName();
        boolean boolean22 = atomikosProperties13.isForceShutdownOnVmExit();
        java.util.Properties properties23 = atomikosProperties13.asProperties();
        atomikosProperties13.setLogBaseName("{{}={}}");
        long long26 = atomikosProperties13.getMaxTimeout();
        boolean boolean27 = properties0.equals((java.lang.Object) atomikosProperties13);
        atomikosProperties13.setMaxTimeout(35L);
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertNotNull(wildcardEnumeration7);
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertNull(obj12);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "tmlog" + "'", str21, "tmlog");
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(properties23);
        org.junit.Assert.assertTrue("'" + long26 + "' != '" + 300000L + "'", long26 == 300000L);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
    }

    @Test
    public void test7702() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7702");
        java.util.Properties properties0 = new java.util.Properties();
        java.util.Properties properties1 = new java.util.Properties();
        java.lang.Object obj3 = properties1.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet4 = properties1.stringPropertyNames();
        boolean boolean5 = properties0.containsValue((java.lang.Object) properties1);
        java.util.Collection<java.lang.Object> objCollection6 = properties0.values();
        java.util.Properties properties8 = new java.util.Properties();
        java.lang.Object obj10 = properties8.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration11 = properties8.elements();
        boolean boolean12 = properties8.isEmpty();
        java.util.Set<java.lang.Object> objSet13 = properties8.keySet();
        java.lang.Object obj14 = properties0.putIfAbsent((java.lang.Object) "hi!", (java.lang.Object) objSet13);
        java.util.Set<java.lang.Object> objSet15 = properties0.keySet();
        java.util.Set<java.lang.Object> objSet16 = properties0.keySet();
        java.util.Set<java.lang.Object> objSet17 = properties0.keySet();
        java.util.Properties properties18 = new java.util.Properties();
        java.lang.Object obj20 = properties18.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration21 = properties18.elements();
        boolean boolean22 = properties18.isEmpty();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet23 = properties18.entrySet();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties25 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties25.setSerialJtaTransactions(false);
        atomikosProperties25.setThreadedTwoPhaseCommit(true);
        atomikosProperties25.setMaxTimeout((long) '#');
        boolean boolean32 = atomikosProperties25.isForceShutdownOnVmExit();
        java.lang.Object obj33 = properties18.put((java.lang.Object) (short) 1, (java.lang.Object) atomikosProperties25);
        long long34 = atomikosProperties25.getDefaultJtaTimeout();
        atomikosProperties25.setMaxActives((int) (short) 1);
        java.lang.Class<?> wildcardClass37 = atomikosProperties25.getClass();
        java.util.Properties properties38 = new java.util.Properties();
        java.lang.Object obj40 = properties38.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration41 = properties38.elements();
        boolean boolean42 = properties38.isEmpty();
        java.util.Set<java.lang.Object> objSet43 = properties38.keySet();
        boolean boolean44 = properties38.isEmpty();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet45 = properties38.entrySet();
        java.util.Properties properties46 = new java.util.Properties();
        java.lang.Object obj48 = properties46.remove((java.lang.Object) 0.0d);
        boolean boolean49 = properties46.isEmpty();
        java.lang.Object obj52 = properties46.setProperty("", "hi!");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties53 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties53.setSerialJtaTransactions(false);
        boolean boolean56 = properties38.remove((java.lang.Object) properties46, (java.lang.Object) atomikosProperties53);
        java.util.Properties properties57 = new java.util.Properties(properties46);
        int int58 = properties57.size();
        int int59 = properties57.size();
        java.util.Properties properties60 = new java.util.Properties();
        java.lang.Object obj61 = properties57.get((java.lang.Object) properties60);
        boolean boolean62 = properties0.remove((java.lang.Object) atomikosProperties25, (java.lang.Object) properties60);
        java.lang.Object obj65 = properties60.setProperty("{tmlog=}", "{}");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties66 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties66.setSerialJtaTransactions(false);
        atomikosProperties66.setThreadedTwoPhaseCommit(true);
        atomikosProperties66.setMaxTimeout((long) '#');
        boolean boolean73 = atomikosProperties66.isEnableLogging();
        atomikosProperties66.setCheckpointInterval((long) (byte) -1);
        atomikosProperties66.setEnableLogging(true);
        java.lang.String str78 = atomikosProperties66.getTransactionManagerUniqueName();
        atomikosProperties66.setCheckpointInterval((long) (byte) -1);
        java.lang.String str81 = atomikosProperties66.getService();
        java.lang.String str82 = atomikosProperties66.getLogBaseName();
        java.lang.Object obj83 = properties60.get((java.lang.Object) atomikosProperties66);
        atomikosProperties66.setService("");
        atomikosProperties66.setService("{true=class org.springframework.boot.jta.atomikos.AtomikosProperties}");
        java.lang.String str88 = atomikosProperties66.getLogBaseDir();
        atomikosProperties66.setService("{{{}={}}={}}");
        org.junit.Assert.assertNull(obj3);
        org.junit.Assert.assertNotNull(strSet4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(objCollection6);
        org.junit.Assert.assertNull(obj10);
        org.junit.Assert.assertNotNull(objEnumeration11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(objSet13);
        org.junit.Assert.assertNull(obj14);
        org.junit.Assert.assertNotNull(objSet15);
        org.junit.Assert.assertNotNull(objSet16);
        org.junit.Assert.assertNotNull(objSet17);
        org.junit.Assert.assertNull(obj20);
        org.junit.Assert.assertNotNull(objEnumeration21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNotNull(objEntrySet23);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNull(obj33);
        org.junit.Assert.assertTrue("'" + long34 + "' != '" + 10000L + "'", long34 == 10000L);
        org.junit.Assert.assertNotNull(wildcardClass37);
        org.junit.Assert.assertNull(obj40);
        org.junit.Assert.assertNotNull(objEnumeration41);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertNotNull(objSet43);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertNotNull(objEntrySet45);
        org.junit.Assert.assertNull(obj48);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertNull(obj52);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + 0 + "'", int58 == 0);
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + 0 + "'", int59 == 0);
        org.junit.Assert.assertNull(obj61);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertNull(obj65);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + true + "'", boolean73 == true);
        org.junit.Assert.assertNull(str78);
        org.junit.Assert.assertNull(str81);
        org.junit.Assert.assertEquals("'" + str82 + "' != '" + "tmlog" + "'", str82, "tmlog");
        org.junit.Assert.assertNull(obj83);
        org.junit.Assert.assertNull(str88);
    }

    @Test
    public void test7703() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7703");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setSerialJtaTransactions(false);
        atomikosProperties0.setThreadedTwoPhaseCommit(true);
        atomikosProperties0.setMaxTimeout((long) '#');
        long long7 = atomikosProperties0.getCheckpointInterval();
        atomikosProperties0.setMaxTimeout((long) (byte) 100);
        atomikosProperties0.setThreadedTwoPhaseCommit(false);
        atomikosProperties0.setThreadedTwoPhaseCommit(true);
        atomikosProperties0.setLogBaseDir("{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=false, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.service={{}={}}, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.tm_unique_name=hi!, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
        boolean boolean16 = atomikosProperties0.isEnableLogging();
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + 500L + "'", long7 == 500L);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
    }

    @Test
    public void test7704() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7704");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setSerialJtaTransactions(false);
        boolean boolean3 = atomikosProperties0.isSerialJtaTransactions();
        atomikosProperties0.setTransactionManagerUniqueName("hi!");
        boolean boolean6 = atomikosProperties0.isEnableLogging();
        long long7 = atomikosProperties0.getCheckpointInterval();
        atomikosProperties0.setMaxTimeout((long) 10);
        java.util.Properties properties10 = atomikosProperties0.asProperties();
        java.util.Properties properties11 = new java.util.Properties();
        java.lang.Object obj13 = properties11.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration14 = properties11.elements();
        int int15 = properties11.size();
        java.util.Properties properties16 = new java.util.Properties();
        java.lang.Object obj18 = properties16.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration19 = properties16.elements();
        boolean boolean20 = properties16.isEmpty();
        java.util.Set<java.lang.Object> objSet21 = properties16.keySet();
        boolean boolean22 = properties11.containsKey((java.lang.Object) objSet21);
        java.util.Enumeration<java.lang.Object> objEnumeration23 = properties11.keys();
        java.util.Properties properties24 = new java.util.Properties();
        java.lang.Object obj26 = properties24.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration27 = properties24.elements();
        boolean boolean28 = properties24.isEmpty();
        java.util.Set<java.lang.Object> objSet29 = properties24.keySet();
        java.util.Enumeration<java.lang.Object> objEnumeration30 = properties24.keys();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet31 = properties24.entrySet();
        boolean boolean33 = properties11.remove((java.lang.Object) properties24, (java.lang.Object) 1.0f);
        java.lang.Object obj34 = properties24.clone();
        java.util.Collection<java.lang.Object> objCollection35 = properties24.values();
        java.util.Collection<java.lang.Object> objCollection36 = properties24.values();
        java.util.Set<java.lang.String> strSet37 = properties24.stringPropertyNames();
        java.util.Set<java.lang.Object> objSet38 = properties24.keySet();
        java.util.Properties properties39 = new java.util.Properties();
        java.lang.Object obj41 = properties39.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration42 = properties39.elements();
        boolean boolean43 = properties39.isEmpty();
        java.util.Set<java.lang.Object> objSet44 = properties39.keySet();
        boolean boolean45 = properties39.isEmpty();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet46 = properties39.entrySet();
        java.util.Properties properties47 = new java.util.Properties();
        java.lang.Object obj49 = properties47.remove((java.lang.Object) 0.0d);
        boolean boolean50 = properties47.isEmpty();
        java.lang.Object obj53 = properties47.setProperty("", "hi!");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties54 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties54.setSerialJtaTransactions(false);
        boolean boolean57 = properties39.remove((java.lang.Object) properties47, (java.lang.Object) atomikosProperties54);
        java.util.Properties properties58 = new java.util.Properties(properties47);
        int int59 = properties58.size();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties61 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties61.setSerialJtaTransactions(false);
        boolean boolean64 = atomikosProperties61.isSerialJtaTransactions();
        java.lang.String str65 = atomikosProperties61.getService();
        boolean boolean66 = atomikosProperties61.isEnableLogging();
        java.lang.String str67 = atomikosProperties61.getTransactionManagerUniqueName();
        boolean boolean68 = properties58.remove((java.lang.Object) (byte) 1, (java.lang.Object) atomikosProperties61);
        atomikosProperties61.setMaxActives((int) (short) -1);
        boolean boolean71 = atomikosProperties61.isThreadedTwoPhaseCommit();
        atomikosProperties61.setDefaultJtaTimeout((long) 100);
        java.util.Properties properties74 = atomikosProperties61.asProperties();
        boolean boolean75 = properties10.remove((java.lang.Object) properties24, (java.lang.Object) atomikosProperties61);
        java.lang.String str76 = atomikosProperties61.getLogBaseDir();
        atomikosProperties61.setEnableLogging(true);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + 500L + "'", long7 == 500L);
        org.junit.Assert.assertNotNull(properties10);
        org.junit.Assert.assertNull(obj13);
        org.junit.Assert.assertNotNull(objEnumeration14);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0);
        org.junit.Assert.assertNull(obj18);
        org.junit.Assert.assertNotNull(objEnumeration19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNotNull(objSet21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(objEnumeration23);
        org.junit.Assert.assertNull(obj26);
        org.junit.Assert.assertNotNull(objEnumeration27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNotNull(objSet29);
        org.junit.Assert.assertNotNull(objEnumeration30);
        org.junit.Assert.assertNotNull(objEntrySet31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(obj34);
        org.junit.Assert.assertEquals(obj34.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj34), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj34), "{}");
        org.junit.Assert.assertNotNull(objCollection35);
        org.junit.Assert.assertNotNull(objCollection36);
        org.junit.Assert.assertNotNull(strSet37);
        org.junit.Assert.assertNotNull(objSet38);
        org.junit.Assert.assertNull(obj41);
        org.junit.Assert.assertNotNull(objEnumeration42);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNotNull(objSet44);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertNotNull(objEntrySet46);
        org.junit.Assert.assertNull(obj49);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertNull(obj53);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + 0 + "'", int59 == 0);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertNull(str65);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66 == true);
        org.junit.Assert.assertNull(str67);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertNotNull(properties74);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
        org.junit.Assert.assertNull(str76);
    }

    @Test
    public void test7705() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7705");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration3 = properties0.elements();
        boolean boolean4 = properties0.isEmpty();
        java.util.Set<java.lang.Object> objSet5 = properties0.keySet();
        boolean boolean6 = properties0.isEmpty();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet7 = properties0.entrySet();
        java.util.Properties properties8 = new java.util.Properties();
        java.lang.Object obj10 = properties8.remove((java.lang.Object) 0.0d);
        boolean boolean11 = properties8.isEmpty();
        java.lang.Object obj14 = properties8.setProperty("", "hi!");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties15 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties15.setSerialJtaTransactions(false);
        boolean boolean18 = properties0.remove((java.lang.Object) properties8, (java.lang.Object) atomikosProperties15);
        java.util.Properties properties19 = new java.util.Properties(properties8);
        int int20 = properties19.size();
        java.util.Enumeration<java.lang.Object> objEnumeration21 = properties19.elements();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties22 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties22.setSerialJtaTransactions(false);
        boolean boolean25 = atomikosProperties22.isSerialJtaTransactions();
        java.lang.String str26 = atomikosProperties22.getService();
        atomikosProperties22.setEnableLogging(false);
        java.util.Properties properties29 = atomikosProperties22.asProperties();
        atomikosProperties22.setCheckpointInterval((long) 1);
        boolean boolean32 = properties19.containsValue((java.lang.Object) atomikosProperties22);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties33 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties33.setSerialJtaTransactions(false);
        atomikosProperties33.setThreadedTwoPhaseCommit(true);
        atomikosProperties33.setMaxTimeout((long) '#');
        boolean boolean40 = atomikosProperties33.isEnableLogging();
        atomikosProperties33.setCheckpointInterval((long) (byte) -1);
        atomikosProperties33.setMaxActives((int) (byte) 100);
        atomikosProperties33.setTransactionManagerUniqueName("{=hi!}");
        atomikosProperties33.setDefaultJtaTimeout((long) 'a');
        java.util.Properties properties49 = atomikosProperties33.asProperties();
        boolean boolean50 = properties19.containsKey((java.lang.Object) atomikosProperties33);
        atomikosProperties33.setLogBaseDir("{=hi!}");
        atomikosProperties33.setCheckpointInterval((long) (short) 0);
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(objEnumeration3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(objSet5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(objEntrySet7);
        org.junit.Assert.assertNull(obj10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNull(obj14);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 0 + "'", int20 == 0);
        org.junit.Assert.assertNotNull(objEnumeration21);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNull(str26);
        org.junit.Assert.assertNotNull(properties29);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNotNull(properties49);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
    }

    @Test
    public void test7706() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7706");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setSerialJtaTransactions(false);
        atomikosProperties0.setThreadedTwoPhaseCommit(true);
        atomikosProperties0.setThreadedTwoPhaseCommit(true);
        java.util.Properties properties7 = atomikosProperties0.asProperties();
        int int8 = atomikosProperties0.getMaxActives();
        atomikosProperties0.setService("hi!");
        long long11 = atomikosProperties0.getMaxTimeout();
        atomikosProperties0.setTransactionManagerUniqueName("hi!");
        atomikosProperties0.setEnableLogging(false);
        atomikosProperties0.setDefaultJtaTimeout(10L);
        int int18 = atomikosProperties0.getMaxActives();
        org.junit.Assert.assertNotNull(properties7);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 50 + "'", int8 == 50);
        org.junit.Assert.assertTrue("'" + long11 + "' != '" + 300000L + "'", long11 == 300000L);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 50 + "'", int18 == 50);
    }

    @Test
    public void test7707() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7707");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration3 = properties0.elements();
        boolean boolean4 = properties0.isEmpty();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet5 = properties0.entrySet();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties7 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties7.setSerialJtaTransactions(false);
        atomikosProperties7.setThreadedTwoPhaseCommit(true);
        atomikosProperties7.setMaxTimeout((long) '#');
        boolean boolean14 = atomikosProperties7.isForceShutdownOnVmExit();
        java.lang.Object obj15 = properties0.put((java.lang.Object) (short) 1, (java.lang.Object) atomikosProperties7);
        atomikosProperties7.setForceShutdownOnVmExit(true);
        java.util.Properties properties18 = atomikosProperties7.asProperties();
        java.util.Properties properties19 = new java.util.Properties(properties18);
        boolean boolean21 = properties18.contains((java.lang.Object) 35);
        java.lang.String str23 = properties18.getProperty("");
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(objEnumeration3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(objEntrySet5);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNull(obj15);
        org.junit.Assert.assertNotNull(properties18);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNull(str23);
    }

    @Test
    public void test7708() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7708");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setSerialJtaTransactions(false);
        atomikosProperties0.setThreadedTwoPhaseCommit(true);
        atomikosProperties0.setMaxTimeout((long) '#');
        long long7 = atomikosProperties0.getCheckpointInterval();
        java.lang.String str8 = atomikosProperties0.getTransactionManagerUniqueName();
        atomikosProperties0.setDefaultJtaTimeout((long) 0);
        java.util.Properties properties11 = atomikosProperties0.asProperties();
        java.util.Properties properties12 = new java.util.Properties();
        java.util.Properties properties13 = new java.util.Properties();
        java.lang.Object obj15 = properties13.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet16 = properties13.stringPropertyNames();
        boolean boolean17 = properties12.containsValue((java.lang.Object) properties13);
        java.util.Collection<java.lang.Object> objCollection18 = properties12.values();
        java.util.Properties properties20 = new java.util.Properties();
        java.lang.Object obj22 = properties20.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration23 = properties20.elements();
        boolean boolean24 = properties20.isEmpty();
        java.util.Set<java.lang.Object> objSet25 = properties20.keySet();
        java.lang.Object obj26 = properties12.putIfAbsent((java.lang.Object) "hi!", (java.lang.Object) objSet25);
        java.util.Set<java.lang.Object> objSet27 = properties12.keySet();
        java.util.Set<java.lang.Object> objSet28 = properties12.keySet();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet29 = properties12.entrySet();
        java.util.Properties properties30 = new java.util.Properties();
        java.lang.Object obj32 = properties30.remove((java.lang.Object) 0.0d);
        boolean boolean33 = properties30.isEmpty();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties34 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        boolean boolean35 = properties30.containsValue((java.lang.Object) atomikosProperties34);
        java.lang.String str37 = properties30.getProperty("tmlog");
        properties12.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties30);
        boolean boolean39 = properties11.contains((java.lang.Object) properties12);
        java.util.Enumeration<java.lang.Object> objEnumeration40 = properties12.elements();
        java.lang.Object obj41 = properties12.clone();
        java.lang.Class<?> wildcardClass42 = obj41.getClass();
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + 500L + "'", long7 == 500L);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNotNull(properties11);
        org.junit.Assert.assertNull(obj15);
        org.junit.Assert.assertNotNull(strSet16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(objCollection18);
        org.junit.Assert.assertNull(obj22);
        org.junit.Assert.assertNotNull(objEnumeration23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNotNull(objSet25);
        org.junit.Assert.assertNull(obj26);
        org.junit.Assert.assertNotNull(objSet27);
        org.junit.Assert.assertNotNull(objSet28);
        org.junit.Assert.assertNotNull(objEntrySet29);
        org.junit.Assert.assertNull(obj32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNull(str37);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(objEnumeration40);
        org.junit.Assert.assertNotNull(obj41);
        org.junit.Assert.assertEquals(obj41.toString(), "{hi!=[]}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj41), "{hi!=[]}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj41), "{hi!=[]}");
        org.junit.Assert.assertNotNull(wildcardClass42);
    }

    @Test
    public void test7709() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7709");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setSerialJtaTransactions(false);
        atomikosProperties0.setThreadedTwoPhaseCommit(true);
        boolean boolean5 = atomikosProperties0.isSerialJtaTransactions();
        atomikosProperties0.setForceShutdownOnVmExit(false);
        java.lang.String str8 = atomikosProperties0.getTransactionManagerUniqueName();
        boolean boolean9 = atomikosProperties0.isSerialJtaTransactions();
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
    }

    @Test
    public void test7710() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7710");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<?> wildcardEnumeration3 = properties0.propertyNames();
        java.util.Properties properties4 = new java.util.Properties();
        java.lang.Object obj6 = properties4.remove((java.lang.Object) 0.0d);
        boolean boolean7 = properties4.isEmpty();
        java.util.Enumeration<java.lang.Object> objEnumeration8 = properties4.elements();
        java.util.Enumeration<java.lang.Object> objEnumeration9 = properties4.elements();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties10 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties10.setSerialJtaTransactions(false);
        atomikosProperties10.setThreadedTwoPhaseCommit(true);
        atomikosProperties10.setMaxTimeout((long) '#');
        boolean boolean17 = atomikosProperties10.isForceShutdownOnVmExit();
        int int18 = atomikosProperties10.getMaxActives();
        java.lang.Object obj19 = properties4.remove((java.lang.Object) int18);
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet20 = properties4.entrySet();
        java.util.Properties properties21 = new java.util.Properties();
        java.lang.Object obj23 = properties21.remove((java.lang.Object) 0.0d);
        java.lang.String str25 = properties21.getProperty("");
        java.lang.Object obj26 = properties0.getOrDefault((java.lang.Object) properties4, (java.lang.Object) str25);
        java.util.Enumeration<java.lang.Object> objEnumeration27 = properties0.keys();
        java.util.Set<java.lang.Object> objSet28 = properties0.keySet();
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(wildcardEnumeration3);
        org.junit.Assert.assertNull(obj6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(objEnumeration8);
        org.junit.Assert.assertNotNull(objEnumeration9);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 50 + "'", int18 == 50);
        org.junit.Assert.assertNull(obj19);
        org.junit.Assert.assertNotNull(objEntrySet20);
        org.junit.Assert.assertNull(obj23);
        org.junit.Assert.assertNull(str25);
        org.junit.Assert.assertNull(obj26);
        org.junit.Assert.assertNotNull(objEnumeration27);
        org.junit.Assert.assertNotNull(objSet28);
    }

    @Test
    public void test7711() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7711");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration3 = properties0.elements();
        boolean boolean4 = properties0.isEmpty();
        java.util.Set<java.lang.Object> objSet5 = properties0.keySet();
        boolean boolean6 = properties0.isEmpty();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet7 = properties0.entrySet();
        java.util.Properties properties8 = new java.util.Properties();
        java.lang.Object obj10 = properties8.remove((java.lang.Object) 0.0d);
        boolean boolean11 = properties8.isEmpty();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties12 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        boolean boolean13 = properties8.containsValue((java.lang.Object) atomikosProperties12);
        java.util.Properties properties14 = new java.util.Properties();
        java.lang.Object obj16 = properties14.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration17 = properties14.elements();
        int int18 = properties14.size();
        java.util.Properties properties19 = new java.util.Properties(properties14);
        java.util.Set<java.lang.String> strSet20 = properties14.stringPropertyNames();
        java.util.Set<java.lang.String> strSet21 = properties14.stringPropertyNames();
        java.lang.Object obj22 = properties0.getOrDefault((java.lang.Object) properties8, (java.lang.Object) properties14);
        java.util.Properties properties23 = new java.util.Properties();
        java.util.Collection<java.lang.Object> objCollection24 = properties23.values();
        java.util.Collection<java.lang.Object> objCollection25 = properties23.values();
        boolean boolean26 = properties23.isEmpty();
        properties0.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties23);
        java.util.Properties properties28 = new java.util.Properties();
        java.lang.Object obj30 = properties28.remove((java.lang.Object) 0.0d);
        java.util.Properties properties31 = new java.util.Properties();
        java.util.Collection<java.lang.Object> objCollection32 = properties31.values();
        java.util.Enumeration<java.lang.Object> objEnumeration33 = properties31.keys();
        java.util.Properties properties34 = new java.util.Properties();
        java.lang.Object obj36 = properties34.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration37 = properties34.elements();
        boolean boolean38 = properties34.isEmpty();
        java.util.Set<java.lang.Object> objSet39 = properties34.keySet();
        java.util.Enumeration<java.lang.Object> objEnumeration40 = properties34.keys();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet41 = properties34.entrySet();
        java.lang.Object obj42 = properties28.put((java.lang.Object) properties31, (java.lang.Object) properties34);
        java.util.Enumeration<java.lang.Object> objEnumeration43 = properties28.keys();
        java.util.Set<java.lang.String> strSet44 = properties28.stringPropertyNames();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet45 = properties28.entrySet();
        boolean boolean46 = properties0.contains((java.lang.Object) properties28);
        java.lang.Object obj47 = properties0.clone();
        java.io.Writer writer48 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties0.store(writer48, "{hi!=[], {}={}}");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(objEnumeration3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(objSet5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(objEntrySet7);
        org.junit.Assert.assertNull(obj10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNull(obj16);
        org.junit.Assert.assertNotNull(objEnumeration17);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 0 + "'", int18 == 0);
        org.junit.Assert.assertNotNull(strSet20);
        org.junit.Assert.assertNotNull(strSet21);
        org.junit.Assert.assertNotNull(obj22);
        org.junit.Assert.assertEquals(obj22.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj22), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj22), "{}");
        org.junit.Assert.assertNotNull(objCollection24);
        org.junit.Assert.assertNotNull(objCollection25);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertNull(obj30);
        org.junit.Assert.assertNotNull(objCollection32);
        org.junit.Assert.assertNotNull(objEnumeration33);
        org.junit.Assert.assertNull(obj36);
        org.junit.Assert.assertNotNull(objEnumeration37);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertNotNull(objSet39);
        org.junit.Assert.assertNotNull(objEnumeration40);
        org.junit.Assert.assertNotNull(objEntrySet41);
        org.junit.Assert.assertNull(obj42);
        org.junit.Assert.assertNotNull(objEnumeration43);
        org.junit.Assert.assertNotNull(strSet44);
        org.junit.Assert.assertNotNull(objEntrySet45);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(obj47);
        org.junit.Assert.assertEquals(obj47.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj47), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj47), "{}");
    }

    @Test
    public void test7712() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7712");
        java.util.Properties properties0 = new java.util.Properties();
        java.util.Collection<java.lang.Object> objCollection1 = properties0.values();
        java.util.Properties properties2 = new java.util.Properties();
        java.lang.Object obj4 = properties2.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet5 = properties2.stringPropertyNames();
        java.util.Properties properties6 = new java.util.Properties();
        java.util.Properties properties7 = new java.util.Properties();
        java.lang.Object obj9 = properties7.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet10 = properties7.stringPropertyNames();
        boolean boolean11 = properties6.containsValue((java.lang.Object) properties7);
        java.util.Collection<java.lang.Object> objCollection12 = properties6.values();
        java.util.Enumeration<?> wildcardEnumeration13 = properties6.propertyNames();
        java.lang.Object obj15 = properties2.put((java.lang.Object) wildcardEnumeration13, (java.lang.Object) 10.0d);
        boolean boolean16 = properties0.equals((java.lang.Object) 10.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration17 = properties0.keys();
        java.util.Set<java.lang.Object> objSet18 = properties0.keySet();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet19 = properties0.entrySet();
        java.util.Set<java.lang.Object> objSet20 = properties0.keySet();
        java.util.Properties properties21 = new java.util.Properties();
        java.lang.Object obj23 = properties21.remove((java.lang.Object) 0.0d);
        java.util.Properties properties24 = new java.util.Properties();
        java.util.Collection<java.lang.Object> objCollection25 = properties24.values();
        java.util.Enumeration<java.lang.Object> objEnumeration26 = properties24.keys();
        java.util.Properties properties27 = new java.util.Properties();
        java.lang.Object obj29 = properties27.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration30 = properties27.elements();
        boolean boolean31 = properties27.isEmpty();
        java.util.Set<java.lang.Object> objSet32 = properties27.keySet();
        java.util.Enumeration<java.lang.Object> objEnumeration33 = properties27.keys();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet34 = properties27.entrySet();
        java.lang.Object obj35 = properties21.put((java.lang.Object) properties24, (java.lang.Object) properties27);
        java.util.Enumeration<java.lang.Object> objEnumeration36 = properties21.keys();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties37 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties37.setSerialJtaTransactions(false);
        boolean boolean40 = atomikosProperties37.isSerialJtaTransactions();
        java.lang.String str41 = atomikosProperties37.getService();
        boolean boolean42 = atomikosProperties37.isEnableLogging();
        atomikosProperties37.setCheckpointInterval((long) (byte) 100);
        atomikosProperties37.setTransactionManagerUniqueName("{=hi!}");
        atomikosProperties37.setMaxTimeout(10000L);
        atomikosProperties37.setEnableLogging(false);
        long long51 = atomikosProperties37.getDefaultJtaTimeout();
        atomikosProperties37.setMaxActives((int) (byte) 100);
        boolean boolean54 = properties21.containsKey((java.lang.Object) atomikosProperties37);
        atomikosProperties37.setLogBaseName("{}");
        java.lang.String str57 = atomikosProperties37.getLogBaseName();
        boolean boolean58 = properties0.containsValue((java.lang.Object) str57);
        org.junit.Assert.assertNotNull(objCollection1);
        org.junit.Assert.assertNull(obj4);
        org.junit.Assert.assertNotNull(strSet5);
        org.junit.Assert.assertNull(obj9);
        org.junit.Assert.assertNotNull(strSet10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(objCollection12);
        org.junit.Assert.assertNotNull(wildcardEnumeration13);
        org.junit.Assert.assertNull(obj15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(objEnumeration17);
        org.junit.Assert.assertNotNull(objSet18);
        org.junit.Assert.assertNotNull(objEntrySet19);
        org.junit.Assert.assertNotNull(objSet20);
        org.junit.Assert.assertNull(obj23);
        org.junit.Assert.assertNotNull(objCollection25);
        org.junit.Assert.assertNotNull(objEnumeration26);
        org.junit.Assert.assertNull(obj29);
        org.junit.Assert.assertNotNull(objEnumeration30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNotNull(objSet32);
        org.junit.Assert.assertNotNull(objEnumeration33);
        org.junit.Assert.assertNotNull(objEntrySet34);
        org.junit.Assert.assertNull(obj35);
        org.junit.Assert.assertNotNull(objEnumeration36);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNull(str41);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertTrue("'" + long51 + "' != '" + 10000L + "'", long51 == 10000L);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "{}" + "'", str57, "{}");
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
    }

    @Test
    public void test7713() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7713");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        java.util.Properties properties3 = new java.util.Properties();
        java.util.Collection<java.lang.Object> objCollection4 = properties3.values();
        java.util.Enumeration<java.lang.Object> objEnumeration5 = properties3.keys();
        java.util.Properties properties6 = new java.util.Properties();
        java.lang.Object obj8 = properties6.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration9 = properties6.elements();
        boolean boolean10 = properties6.isEmpty();
        java.util.Set<java.lang.Object> objSet11 = properties6.keySet();
        java.util.Enumeration<java.lang.Object> objEnumeration12 = properties6.keys();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet13 = properties6.entrySet();
        java.lang.Object obj14 = properties0.put((java.lang.Object) properties3, (java.lang.Object) properties6);
        java.lang.Object obj15 = properties3.clone();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties16 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties16.setSerialJtaTransactions(false);
        atomikosProperties16.setThreadedTwoPhaseCommit(true);
        atomikosProperties16.setMaxTimeout((long) '#');
        boolean boolean23 = atomikosProperties16.isEnableLogging();
        atomikosProperties16.setCheckpointInterval((long) 100);
        atomikosProperties16.setSerialJtaTransactions(true);
        boolean boolean28 = properties3.equals((java.lang.Object) atomikosProperties16);
        java.util.Properties properties29 = new java.util.Properties();
        java.lang.Object obj31 = properties29.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration32 = properties29.elements();
        boolean boolean33 = properties29.isEmpty();
        java.util.Enumeration<java.lang.Object> objEnumeration34 = properties29.elements();
        boolean boolean35 = properties3.containsKey((java.lang.Object) properties29);
        java.util.Properties properties36 = new java.util.Properties();
        java.lang.Object obj38 = properties36.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration39 = properties36.elements();
        boolean boolean40 = properties36.isEmpty();
        java.util.Set<java.lang.Object> objSet41 = properties36.keySet();
        java.util.Enumeration<java.lang.Object> objEnumeration42 = properties36.keys();
        boolean boolean44 = properties36.equals((java.lang.Object) "");
        boolean boolean45 = properties3.containsValue((java.lang.Object) properties36);
        java.util.Properties properties46 = new java.util.Properties();
        java.lang.Object obj48 = properties46.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration49 = properties46.elements();
        boolean boolean50 = properties46.isEmpty();
        java.util.Set<java.lang.Object> objSet51 = properties46.keySet();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties52 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties52.setSerialJtaTransactions(false);
        atomikosProperties52.setThreadedTwoPhaseCommit(true);
        atomikosProperties52.setThreadedTwoPhaseCommit(true);
        java.util.Properties properties59 = atomikosProperties52.asProperties();
        int int60 = atomikosProperties52.getMaxActives();
        java.util.Properties properties61 = new java.util.Properties();
        java.lang.Object obj63 = properties61.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration64 = properties61.elements();
        boolean boolean65 = properties61.isEmpty();
        java.util.Set<java.lang.Object> objSet66 = properties61.keySet();
        boolean boolean68 = properties61.containsKey((java.lang.Object) (-1.0f));
        java.lang.Object obj69 = properties46.put((java.lang.Object) atomikosProperties52, (java.lang.Object) properties61);
        atomikosProperties52.setLogBaseDir("hi!");
        long long72 = atomikosProperties52.getCheckpointInterval();
        java.lang.Object obj73 = properties3.remove((java.lang.Object) atomikosProperties52);
        atomikosProperties52.setThreadedTwoPhaseCommit(false);
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(objCollection4);
        org.junit.Assert.assertNotNull(objEnumeration5);
        org.junit.Assert.assertNull(obj8);
        org.junit.Assert.assertNotNull(objEnumeration9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(objSet11);
        org.junit.Assert.assertNotNull(objEnumeration12);
        org.junit.Assert.assertNotNull(objEntrySet13);
        org.junit.Assert.assertNull(obj14);
        org.junit.Assert.assertNotNull(obj15);
        org.junit.Assert.assertEquals(obj15.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj15), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj15), "{}");
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNull(obj31);
        org.junit.Assert.assertNotNull(objEnumeration32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNotNull(objEnumeration34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNull(obj38);
        org.junit.Assert.assertNotNull(objEnumeration39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNotNull(objSet41);
        org.junit.Assert.assertNotNull(objEnumeration42);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNull(obj48);
        org.junit.Assert.assertNotNull(objEnumeration49);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertNotNull(objSet51);
        org.junit.Assert.assertNotNull(properties59);
        org.junit.Assert.assertTrue("'" + int60 + "' != '" + 50 + "'", int60 == 50);
        org.junit.Assert.assertNull(obj63);
        org.junit.Assert.assertNotNull(objEnumeration64);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65 == true);
        org.junit.Assert.assertNotNull(objSet66);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertNull(obj69);
        org.junit.Assert.assertTrue("'" + long72 + "' != '" + 500L + "'", long72 == 500L);
        org.junit.Assert.assertNull(obj73);
    }

    @Test
    public void test7714() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7714");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setSerialJtaTransactions(false);
        atomikosProperties0.setThreadedTwoPhaseCommit(true);
        atomikosProperties0.setSerialJtaTransactions(false);
        atomikosProperties0.setService("{=hi!}");
        atomikosProperties0.setLogBaseDir("");
        boolean boolean11 = atomikosProperties0.isForceShutdownOnVmExit();
        boolean boolean12 = atomikosProperties0.isForceShutdownOnVmExit();
        long long13 = atomikosProperties0.getCheckpointInterval();
        atomikosProperties0.setLogBaseName("{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=false, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=35, com.atomikos.icatch.threaded_2pc=true, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + long13 + "' != '" + 500L + "'", long13 == 500L);
    }

    @Test
    public void test7715() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7715");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setSerialJtaTransactions(false);
        atomikosProperties0.setThreadedTwoPhaseCommit(true);
        atomikosProperties0.setMaxTimeout((long) '#');
        java.lang.String str7 = atomikosProperties0.getLogBaseDir();
        boolean boolean8 = atomikosProperties0.isThreadedTwoPhaseCommit();
        java.util.Properties properties9 = atomikosProperties0.asProperties();
        java.lang.Object obj12 = properties9.setProperty("{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=false, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, hi!=, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}", "{hi!=[], {}={}}");
        java.io.InputStream inputStream13 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties9.load(inputStream13);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(properties9);
        org.junit.Assert.assertNull(obj12);
    }

    @Test
    public void test7716() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7716");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        boolean boolean4 = properties0.containsValue((java.lang.Object) "hi!");
        java.lang.Object obj7 = properties0.put((java.lang.Object) (byte) -1, (java.lang.Object) 100L);
        java.util.Properties properties8 = new java.util.Properties();
        java.util.Properties properties9 = new java.util.Properties();
        java.lang.Object obj11 = properties9.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet12 = properties9.stringPropertyNames();
        boolean boolean13 = properties8.containsValue((java.lang.Object) properties9);
        java.util.Collection<java.lang.Object> objCollection14 = properties8.values();
        java.util.Properties properties16 = new java.util.Properties();
        java.lang.Object obj18 = properties16.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration19 = properties16.elements();
        boolean boolean20 = properties16.isEmpty();
        java.util.Set<java.lang.Object> objSet21 = properties16.keySet();
        java.lang.Object obj22 = properties8.putIfAbsent((java.lang.Object) "hi!", (java.lang.Object) objSet21);
        java.util.Set<java.lang.Object> objSet23 = properties8.keySet();
        boolean boolean24 = properties0.containsKey((java.lang.Object) properties8);
        java.util.Collection<java.lang.Object> objCollection25 = properties8.values();
        java.util.Enumeration<java.lang.Object> objEnumeration26 = properties8.elements();
        java.util.Set<java.lang.String> strSet27 = properties8.stringPropertyNames();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet28 = properties8.entrySet();
        java.io.Writer writer29 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties8.store(writer29, "{{}=tmlog}");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNull(obj7);
        org.junit.Assert.assertNull(obj11);
        org.junit.Assert.assertNotNull(strSet12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(objCollection14);
        org.junit.Assert.assertNull(obj18);
        org.junit.Assert.assertNotNull(objEnumeration19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNotNull(objSet21);
        org.junit.Assert.assertNull(obj22);
        org.junit.Assert.assertNotNull(objSet23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(objCollection25);
        org.junit.Assert.assertNotNull(objEnumeration26);
        org.junit.Assert.assertNotNull(strSet27);
        org.junit.Assert.assertNotNull(objEntrySet28);
    }

    @Test
    public void test7717() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7717");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setSerialJtaTransactions(false);
        atomikosProperties0.setThreadedTwoPhaseCommit(true);
        atomikosProperties0.setMaxTimeout((long) '#');
        boolean boolean7 = atomikosProperties0.isForceShutdownOnVmExit();
        atomikosProperties0.setCheckpointInterval((long) '4');
        java.util.Properties properties10 = atomikosProperties0.asProperties();
        boolean boolean11 = properties10.isEmpty();
        java.util.Properties properties12 = new java.util.Properties();
        boolean boolean14 = properties12.contains((java.lang.Object) 100.0d);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties15 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties15.setSerialJtaTransactions(false);
        atomikosProperties15.setThreadedTwoPhaseCommit(true);
        atomikosProperties15.setSerialJtaTransactions(false);
        java.lang.String str22 = atomikosProperties15.getService();
        boolean boolean23 = properties12.containsKey((java.lang.Object) atomikosProperties15);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties24 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties24.setSerialJtaTransactions(false);
        atomikosProperties24.setThreadedTwoPhaseCommit(true);
        atomikosProperties24.setMaxTimeout((long) '#');
        boolean boolean31 = atomikosProperties24.isEnableLogging();
        atomikosProperties24.setCheckpointInterval((long) 100);
        atomikosProperties24.setForceShutdownOnVmExit(false);
        boolean boolean36 = properties12.containsValue((java.lang.Object) atomikosProperties24);
        atomikosProperties24.setSerialJtaTransactions(false);
        atomikosProperties24.setSerialJtaTransactions(true);
        atomikosProperties24.setMaxTimeout(35L);
        atomikosProperties24.setLogBaseDir("{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=false, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, hi!=, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
        java.util.Properties properties45 = new java.util.Properties();
        java.lang.Object obj47 = properties45.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration48 = properties45.elements();
        boolean boolean49 = properties45.isEmpty();
        java.util.Set<java.lang.Object> objSet50 = properties45.keySet();
        boolean boolean51 = properties45.isEmpty();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet52 = properties45.entrySet();
        java.util.Set<java.lang.Object> objSet53 = properties45.keySet();
        boolean boolean54 = properties45.isEmpty();
        java.lang.String str55 = properties45.toString();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet56 = properties45.entrySet();
        java.util.Properties properties57 = new java.util.Properties();
        java.lang.Object obj59 = properties57.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration60 = properties57.elements();
        boolean boolean61 = properties57.isEmpty();
        java.util.Enumeration<java.lang.Object> objEnumeration62 = properties57.elements();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet63 = properties57.entrySet();
        java.util.Set<java.lang.String> strSet64 = properties57.stringPropertyNames();
        java.lang.Object obj67 = properties57.setProperty("{}", "tmlog");
        java.util.Properties properties68 = new java.util.Properties();
        java.lang.Object obj70 = properties68.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration71 = properties68.elements();
        int int72 = properties68.size();
        java.util.Properties properties73 = new java.util.Properties();
        java.lang.Object obj75 = properties73.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration76 = properties73.elements();
        java.util.Enumeration<java.lang.Object> objEnumeration77 = properties73.keys();
        java.lang.Object obj78 = properties57.getOrDefault((java.lang.Object) properties68, (java.lang.Object) objEnumeration77);
        java.util.Properties properties79 = new java.util.Properties(properties68);
        java.util.Properties properties80 = new java.util.Properties();
        java.lang.Object obj82 = properties80.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<?> wildcardEnumeration83 = properties80.propertyNames();
        java.lang.Object obj86 = properties80.setProperty("{}", "hi!");
        properties80.clear();
        boolean boolean88 = properties68.containsValue((java.lang.Object) properties80);
        boolean boolean89 = properties10.replace((java.lang.Object) "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=false, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, hi!=, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}", (java.lang.Object) properties45, (java.lang.Object) boolean88);
        java.lang.Object obj92 = properties45.setProperty("{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=-1, com.atomikos.icatch.serial_jta_transactions=false, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=35, com.atomikos.icatch.threaded_2pc=true, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name={=hi!}}", "{com.atomikos.icatch.enable_logging=false, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=false, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(properties10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNull(str22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNull(obj47);
        org.junit.Assert.assertNotNull(objEnumeration48);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertNotNull(objSet50);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertNotNull(objEntrySet52);
        org.junit.Assert.assertNotNull(objSet53);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "{}" + "'", str55, "{}");
        org.junit.Assert.assertNotNull(objEntrySet56);
        org.junit.Assert.assertNull(obj59);
        org.junit.Assert.assertNotNull(objEnumeration60);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertNotNull(objEnumeration62);
        org.junit.Assert.assertNotNull(objEntrySet63);
        org.junit.Assert.assertNotNull(strSet64);
        org.junit.Assert.assertNull(obj67);
        org.junit.Assert.assertNull(obj70);
        org.junit.Assert.assertNotNull(objEnumeration71);
        org.junit.Assert.assertTrue("'" + int72 + "' != '" + 0 + "'", int72 == 0);
        org.junit.Assert.assertNull(obj75);
        org.junit.Assert.assertNotNull(objEnumeration76);
        org.junit.Assert.assertNotNull(objEnumeration77);
        org.junit.Assert.assertNotNull(obj78);
        org.junit.Assert.assertNull(obj82);
        org.junit.Assert.assertNotNull(wildcardEnumeration83);
        org.junit.Assert.assertNull(obj86);
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + false + "'", boolean88 == false);
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + false + "'", boolean89 == false);
        org.junit.Assert.assertNull(obj92);
    }

    @Test
    public void test7718() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7718");
        java.util.Properties properties0 = new java.util.Properties();
        java.util.Properties properties1 = new java.util.Properties();
        java.lang.Object obj3 = properties1.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet4 = properties1.stringPropertyNames();
        boolean boolean5 = properties0.containsValue((java.lang.Object) properties1);
        java.util.Properties properties6 = new java.util.Properties();
        java.lang.Object obj8 = properties6.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration9 = properties6.elements();
        boolean boolean10 = properties6.isEmpty();
        java.util.Set<java.lang.Object> objSet11 = properties6.keySet();
        boolean boolean12 = properties6.isEmpty();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet13 = properties6.entrySet();
        java.util.Properties properties14 = new java.util.Properties();
        java.lang.Object obj16 = properties14.remove((java.lang.Object) 0.0d);
        boolean boolean17 = properties14.isEmpty();
        java.lang.Object obj20 = properties14.setProperty("", "hi!");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties21 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties21.setSerialJtaTransactions(false);
        boolean boolean24 = properties6.remove((java.lang.Object) properties14, (java.lang.Object) atomikosProperties21);
        boolean boolean25 = properties0.equals((java.lang.Object) atomikosProperties21);
        atomikosProperties21.setThreadedTwoPhaseCommit(false);
        boolean boolean28 = atomikosProperties21.isEnableLogging();
        org.junit.Assert.assertNull(obj3);
        org.junit.Assert.assertNotNull(strSet4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNull(obj8);
        org.junit.Assert.assertNotNull(objEnumeration9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(objSet11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(objEntrySet13);
        org.junit.Assert.assertNull(obj16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNull(obj20);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
    }

    @Test
    public void test7719() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7719");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration3 = properties0.elements();
        int int4 = properties0.size();
        java.util.Properties properties5 = new java.util.Properties(properties0);
        java.util.Set<java.lang.String> strSet6 = properties0.stringPropertyNames();
        java.util.Set<java.lang.String> strSet7 = properties0.stringPropertyNames();
        java.util.Properties properties8 = new java.util.Properties();
        java.lang.Object obj10 = properties8.remove((java.lang.Object) 0.0d);
        boolean boolean11 = properties8.isEmpty();
        java.util.Enumeration<java.lang.Object> objEnumeration12 = properties8.elements();
        java.util.Properties properties13 = new java.util.Properties();
        java.lang.Object obj15 = properties13.remove((java.lang.Object) 0.0d);
        boolean boolean16 = properties13.isEmpty();
        java.util.Enumeration<java.lang.Object> objEnumeration17 = properties13.elements();
        java.util.Enumeration<java.lang.Object> objEnumeration18 = properties13.elements();
        java.lang.Object obj19 = properties0.replace((java.lang.Object) objEnumeration12, (java.lang.Object) objEnumeration18);
        java.util.Enumeration<java.lang.Object> objEnumeration20 = properties0.keys();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties21 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties21.setSerialJtaTransactions(false);
        boolean boolean24 = atomikosProperties21.isSerialJtaTransactions();
        java.lang.String str25 = atomikosProperties21.getService();
        boolean boolean26 = atomikosProperties21.isEnableLogging();
        java.lang.String str27 = atomikosProperties21.getLogBaseName();
        boolean boolean28 = properties0.containsKey((java.lang.Object) atomikosProperties21);
        java.util.Enumeration<java.lang.Object> objEnumeration29 = properties0.elements();
        java.lang.Object obj30 = properties0.clone();
        java.util.Properties properties31 = new java.util.Properties();
        java.lang.Object obj33 = properties31.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration34 = properties31.elements();
        boolean boolean35 = properties31.isEmpty();
        java.util.Set<java.lang.Object> objSet36 = properties31.keySet();
        boolean boolean38 = properties31.containsKey((java.lang.Object) (-1.0f));
        java.util.Collection<java.lang.Object> objCollection39 = properties31.values();
        java.util.Properties properties40 = new java.util.Properties();
        java.lang.Object obj42 = properties40.remove((java.lang.Object) 0.0d);
        boolean boolean43 = properties40.isEmpty();
        java.lang.Object obj46 = properties40.setProperty("", "hi!");
        java.util.Properties properties47 = new java.util.Properties();
        java.lang.Object obj49 = properties47.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration50 = properties47.elements();
        boolean boolean51 = properties47.isEmpty();
        java.util.Set<java.lang.Object> objSet52 = properties47.keySet();
        boolean boolean53 = properties47.isEmpty();
        java.util.Properties properties54 = new java.util.Properties();
        java.util.Collection<java.lang.Object> objCollection55 = properties54.values();
        java.util.Enumeration<java.lang.Object> objEnumeration56 = properties54.keys();
        java.lang.Object obj57 = properties47.remove((java.lang.Object) properties54);
        java.lang.Object obj58 = properties40.get((java.lang.Object) properties54);
        java.util.Enumeration<java.lang.Object> objEnumeration59 = properties54.keys();
        java.lang.Object obj60 = properties31.get((java.lang.Object) properties54);
        java.util.Properties properties61 = new java.util.Properties();
        java.lang.Object obj63 = properties61.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration64 = properties61.elements();
        boolean boolean65 = properties61.isEmpty();
        java.util.Set<java.lang.Object> objSet66 = properties61.keySet();
        boolean boolean67 = properties61.isEmpty();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet68 = properties61.entrySet();
        java.util.Properties properties69 = new java.util.Properties();
        java.lang.Object obj71 = properties69.remove((java.lang.Object) 0.0d);
        boolean boolean72 = properties69.isEmpty();
        java.lang.Object obj75 = properties69.setProperty("", "hi!");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties76 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties76.setSerialJtaTransactions(false);
        boolean boolean79 = properties61.remove((java.lang.Object) properties69, (java.lang.Object) atomikosProperties76);
        atomikosProperties76.setSerialJtaTransactions(false);
        boolean boolean82 = atomikosProperties76.isSerialJtaTransactions();
        atomikosProperties76.setTransactionManagerUniqueName("{{}={}}");
        atomikosProperties76.setSerialJtaTransactions(false);
        boolean boolean87 = properties31.equals((java.lang.Object) atomikosProperties76);
        boolean boolean88 = properties0.contains((java.lang.Object) atomikosProperties76);
        java.util.Set<java.lang.Object> objSet89 = properties0.keySet();
        java.lang.String str91 = properties0.getProperty("{hi!=[], {}={}}");
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(objEnumeration3);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNotNull(strSet6);
        org.junit.Assert.assertNotNull(strSet7);
        org.junit.Assert.assertNull(obj10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNotNull(objEnumeration12);
        org.junit.Assert.assertNull(obj15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(objEnumeration17);
        org.junit.Assert.assertNotNull(objEnumeration18);
        org.junit.Assert.assertNull(obj19);
        org.junit.Assert.assertNotNull(objEnumeration20);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNull(str25);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "tmlog" + "'", str27, "tmlog");
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(objEnumeration29);
        org.junit.Assert.assertNotNull(obj30);
        org.junit.Assert.assertEquals(obj30.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj30), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj30), "{}");
        org.junit.Assert.assertNull(obj33);
        org.junit.Assert.assertNotNull(objEnumeration34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertNotNull(objSet36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(objCollection39);
        org.junit.Assert.assertNull(obj42);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNull(obj46);
        org.junit.Assert.assertNull(obj49);
        org.junit.Assert.assertNotNull(objEnumeration50);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertNotNull(objSet52);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertNotNull(objCollection55);
        org.junit.Assert.assertNotNull(objEnumeration56);
        org.junit.Assert.assertNull(obj57);
        org.junit.Assert.assertNull(obj58);
        org.junit.Assert.assertNotNull(objEnumeration59);
        org.junit.Assert.assertNull(obj60);
        org.junit.Assert.assertNull(obj63);
        org.junit.Assert.assertNotNull(objEnumeration64);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65 == true);
        org.junit.Assert.assertNotNull(objSet66);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + true + "'", boolean67 == true);
        org.junit.Assert.assertNotNull(objEntrySet68);
        org.junit.Assert.assertNull(obj71);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + true + "'", boolean72 == true);
        org.junit.Assert.assertNull(obj75);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + false + "'", boolean79 == false);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + false + "'", boolean82 == false);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + false + "'", boolean87 == false);
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + false + "'", boolean88 == false);
        org.junit.Assert.assertNotNull(objSet89);
        org.junit.Assert.assertNull(str91);
    }

    @Test
    public void test7720() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7720");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration3 = properties0.elements();
        boolean boolean4 = properties0.isEmpty();
        java.util.Set<java.lang.Object> objSet5 = properties0.keySet();
        java.util.Properties properties6 = new java.util.Properties();
        java.lang.Object obj8 = properties6.remove((java.lang.Object) 0.0d);
        java.util.Properties properties9 = new java.util.Properties();
        java.util.Collection<java.lang.Object> objCollection10 = properties9.values();
        java.util.Enumeration<java.lang.Object> objEnumeration11 = properties9.keys();
        java.util.Properties properties12 = new java.util.Properties();
        java.lang.Object obj14 = properties12.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration15 = properties12.elements();
        boolean boolean16 = properties12.isEmpty();
        java.util.Set<java.lang.Object> objSet17 = properties12.keySet();
        java.util.Enumeration<java.lang.Object> objEnumeration18 = properties12.keys();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet19 = properties12.entrySet();
        java.lang.Object obj20 = properties6.put((java.lang.Object) properties9, (java.lang.Object) properties12);
        java.lang.String str22 = properties9.getProperty("{=hi!}");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties23 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties23.setSerialJtaTransactions(false);
        atomikosProperties23.setThreadedTwoPhaseCommit(true);
        atomikosProperties23.setThreadedTwoPhaseCommit(true);
        long long30 = atomikosProperties23.getMaxTimeout();
        boolean boolean31 = properties9.containsValue((java.lang.Object) atomikosProperties23);
        java.util.Enumeration<java.lang.Object> objEnumeration32 = properties9.elements();
        java.util.Set<java.lang.String> strSet33 = properties9.stringPropertyNames();
        boolean boolean34 = properties0.contains((java.lang.Object) properties9);
        java.util.Enumeration<java.lang.Object> objEnumeration35 = properties9.elements();
        java.util.Properties properties36 = new java.util.Properties();
        java.lang.Object obj38 = properties36.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration39 = properties36.elements();
        boolean boolean40 = properties36.isEmpty();
        java.util.Set<java.lang.Object> objSet41 = properties36.keySet();
        boolean boolean42 = properties36.isEmpty();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet43 = properties36.entrySet();
        java.util.Properties properties44 = new java.util.Properties();
        java.lang.Object obj46 = properties44.remove((java.lang.Object) 0.0d);
        boolean boolean47 = properties44.isEmpty();
        java.lang.Object obj50 = properties44.setProperty("", "hi!");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties51 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties51.setSerialJtaTransactions(false);
        boolean boolean54 = properties36.remove((java.lang.Object) properties44, (java.lang.Object) atomikosProperties51);
        java.util.Properties properties55 = new java.util.Properties(properties44);
        java.lang.Object obj56 = properties44.clone();
        java.lang.Object obj57 = properties9.get(obj56);
        java.util.Set<java.lang.Object> objSet58 = properties9.keySet();
        boolean boolean59 = properties9.isEmpty();
        java.io.OutputStream outputStream60 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties9.storeToXML(outputStream60, "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=false, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=35, com.atomikos.icatch.threaded_2pc=true, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}", "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=false, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=35, com.atomikos.icatch.threaded_2pc=true, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(objEnumeration3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(objSet5);
        org.junit.Assert.assertNull(obj8);
        org.junit.Assert.assertNotNull(objCollection10);
        org.junit.Assert.assertNotNull(objEnumeration11);
        org.junit.Assert.assertNull(obj14);
        org.junit.Assert.assertNotNull(objEnumeration15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(objSet17);
        org.junit.Assert.assertNotNull(objEnumeration18);
        org.junit.Assert.assertNotNull(objEntrySet19);
        org.junit.Assert.assertNull(obj20);
        org.junit.Assert.assertNull(str22);
        org.junit.Assert.assertTrue("'" + long30 + "' != '" + 300000L + "'", long30 == 300000L);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(objEnumeration32);
        org.junit.Assert.assertNotNull(strSet33);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(objEnumeration35);
        org.junit.Assert.assertNull(obj38);
        org.junit.Assert.assertNotNull(objEnumeration39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNotNull(objSet41);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertNotNull(objEntrySet43);
        org.junit.Assert.assertNull(obj46);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertNull(obj50);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertNotNull(obj56);
        org.junit.Assert.assertEquals(obj56.toString(), "{=hi!}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj56), "{=hi!}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj56), "{=hi!}");
        org.junit.Assert.assertNull(obj57);
        org.junit.Assert.assertNotNull(objSet58);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
    }

    @Test
    public void test7721() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7721");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setSerialJtaTransactions(false);
        boolean boolean3 = atomikosProperties0.isSerialJtaTransactions();
        java.lang.String str4 = atomikosProperties0.getService();
        boolean boolean5 = atomikosProperties0.isEnableLogging();
        java.util.Properties properties6 = atomikosProperties0.asProperties();
        atomikosProperties0.setForceShutdownOnVmExit(true);
        atomikosProperties0.setMaxActives((int) (short) -1);
        atomikosProperties0.setMaxTimeout((long) ' ');
        atomikosProperties0.setEnableLogging(false);
        atomikosProperties0.setService("{{}={}}");
        java.lang.String str17 = atomikosProperties0.getTransactionManagerUniqueName();
        int int18 = atomikosProperties0.getMaxActives();
        atomikosProperties0.setForceShutdownOnVmExit(false);
        atomikosProperties0.setForceShutdownOnVmExit(true);
        java.lang.String str23 = atomikosProperties0.getLogBaseDir();
        atomikosProperties0.setLogBaseDir("{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=false, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=35, com.atomikos.icatch.threaded_2pc=true, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
        atomikosProperties0.setSerialJtaTransactions(false);
        atomikosProperties0.setTransactionManagerUniqueName("");
        long long30 = atomikosProperties0.getCheckpointInterval();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNotNull(properties6);
        org.junit.Assert.assertNull(str17);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + (-1) + "'", int18 == (-1));
        org.junit.Assert.assertNull(str23);
        org.junit.Assert.assertTrue("'" + long30 + "' != '" + 500L + "'", long30 == 500L);
    }

    @Test
    public void test7722() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7722");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setSerialJtaTransactions(false);
        boolean boolean3 = atomikosProperties0.isSerialJtaTransactions();
        boolean boolean4 = atomikosProperties0.isEnableLogging();
        atomikosProperties0.setService("");
        java.util.Properties properties7 = atomikosProperties0.asProperties();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties8 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties8.setSerialJtaTransactions(false);
        java.lang.Object obj11 = properties7.remove((java.lang.Object) atomikosProperties8);
        atomikosProperties8.setMaxActives((int) (short) 0);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(properties7);
        org.junit.Assert.assertNull(obj11);
    }

    @Test
    public void test7723() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7723");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setSerialJtaTransactions(false);
        atomikosProperties0.setThreadedTwoPhaseCommit(true);
        atomikosProperties0.setEnableLogging(false);
        atomikosProperties0.setForceShutdownOnVmExit(true);
        atomikosProperties0.setService("{{}={}}");
        java.util.Properties properties11 = atomikosProperties0.asProperties();
        properties11.clear();
        org.junit.Assert.assertNotNull(properties11);
    }

    @Test
    public void test7724() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7724");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration3 = properties0.elements();
        boolean boolean4 = properties0.isEmpty();
        java.util.Set<java.lang.Object> objSet5 = properties0.keySet();
        boolean boolean6 = properties0.isEmpty();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet7 = properties0.entrySet();
        java.util.Enumeration<java.lang.Object> objEnumeration8 = properties0.keys();
        java.util.Properties properties9 = new java.util.Properties();
        java.lang.Object obj11 = properties9.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration12 = properties9.elements();
        boolean boolean13 = properties9.isEmpty();
        java.util.Set<java.lang.Object> objSet14 = properties9.keySet();
        boolean boolean15 = properties9.isEmpty();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet16 = properties9.entrySet();
        java.util.Properties properties17 = new java.util.Properties();
        java.lang.Object obj19 = properties17.remove((java.lang.Object) 0.0d);
        boolean boolean20 = properties17.isEmpty();
        java.lang.Object obj23 = properties17.setProperty("", "hi!");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties24 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties24.setSerialJtaTransactions(false);
        boolean boolean27 = properties9.remove((java.lang.Object) properties17, (java.lang.Object) atomikosProperties24);
        java.util.Properties properties28 = new java.util.Properties(properties17);
        int int29 = properties28.size();
        int int30 = properties28.size();
        java.util.Properties properties31 = new java.util.Properties();
        java.lang.Object obj32 = properties28.get((java.lang.Object) properties31);
        properties0.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties31);
        java.lang.Object obj36 = properties31.setProperty("{{}={}}", "{=hi!}");
        java.io.PrintStream printStream37 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties31.list(printStream37);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(objEnumeration3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(objSet5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(objEntrySet7);
        org.junit.Assert.assertNotNull(objEnumeration8);
        org.junit.Assert.assertNull(obj11);
        org.junit.Assert.assertNotNull(objEnumeration12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(objSet14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(objEntrySet16);
        org.junit.Assert.assertNull(obj19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNull(obj23);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 0 + "'", int29 == 0);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 0 + "'", int30 == 0);
        org.junit.Assert.assertNull(obj32);
        org.junit.Assert.assertNull(obj36);
    }

    @Test
    public void test7725() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7725");
        java.util.Properties properties0 = new java.util.Properties();
        java.util.Properties properties1 = new java.util.Properties();
        java.lang.Object obj3 = properties1.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet4 = properties1.stringPropertyNames();
        boolean boolean5 = properties0.containsValue((java.lang.Object) properties1);
        java.util.Enumeration<?> wildcardEnumeration6 = properties1.propertyNames();
        java.util.Properties properties7 = new java.util.Properties();
        java.lang.Object obj9 = properties7.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration10 = properties7.elements();
        boolean boolean11 = properties7.isEmpty();
        java.util.Set<java.lang.Object> objSet12 = properties7.keySet();
        java.util.Enumeration<java.lang.Object> objEnumeration13 = properties7.keys();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet14 = properties7.entrySet();
        boolean boolean15 = properties1.containsValue((java.lang.Object) objEntrySet14);
        java.util.Properties properties16 = new java.util.Properties();
        java.util.Properties properties17 = new java.util.Properties();
        java.lang.Object obj19 = properties17.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet20 = properties17.stringPropertyNames();
        boolean boolean21 = properties16.containsValue((java.lang.Object) properties17);
        java.util.Collection<java.lang.Object> objCollection22 = properties16.values();
        java.util.Properties properties24 = new java.util.Properties();
        java.lang.Object obj26 = properties24.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration27 = properties24.elements();
        boolean boolean28 = properties24.isEmpty();
        java.util.Set<java.lang.Object> objSet29 = properties24.keySet();
        java.lang.Object obj30 = properties16.putIfAbsent((java.lang.Object) "hi!", (java.lang.Object) objSet29);
        java.util.Set<java.lang.Object> objSet31 = properties16.keySet();
        java.util.Set<java.lang.Object> objSet32 = properties16.keySet();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet33 = properties16.entrySet();
        java.util.Set<java.lang.Object> objSet34 = properties16.keySet();
        boolean boolean35 = properties1.equals((java.lang.Object) objSet34);
        java.io.OutputStream outputStream36 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties1.storeToXML(outputStream36, "{[]=0.0}");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(obj3);
        org.junit.Assert.assertNotNull(strSet4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(wildcardEnumeration6);
        org.junit.Assert.assertNull(obj9);
        org.junit.Assert.assertNotNull(objEnumeration10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNotNull(objSet12);
        org.junit.Assert.assertNotNull(objEnumeration13);
        org.junit.Assert.assertNotNull(objEntrySet14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNull(obj19);
        org.junit.Assert.assertNotNull(strSet20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(objCollection22);
        org.junit.Assert.assertNull(obj26);
        org.junit.Assert.assertNotNull(objEnumeration27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNotNull(objSet29);
        org.junit.Assert.assertNull(obj30);
        org.junit.Assert.assertNotNull(objSet31);
        org.junit.Assert.assertNotNull(objSet32);
        org.junit.Assert.assertNotNull(objEntrySet33);
        org.junit.Assert.assertNotNull(objSet34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
    }

    @Test
    public void test7726() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7726");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setSerialJtaTransactions(false);
        atomikosProperties0.setThreadedTwoPhaseCommit(true);
        atomikosProperties0.setThreadedTwoPhaseCommit(true);
        java.util.Properties properties7 = atomikosProperties0.asProperties();
        int int8 = atomikosProperties0.getMaxActives();
        atomikosProperties0.setService("hi!");
        long long11 = atomikosProperties0.getMaxTimeout();
        atomikosProperties0.setTransactionManagerUniqueName("hi!");
        java.util.Properties properties14 = atomikosProperties0.asProperties();
        atomikosProperties0.setMaxActives((int) (short) -1);
        atomikosProperties0.setThreadedTwoPhaseCommit(false);
        long long19 = atomikosProperties0.getDefaultJtaTimeout();
        atomikosProperties0.setLogBaseName("{{{}={}}={}, =hi!}");
        org.junit.Assert.assertNotNull(properties7);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 50 + "'", int8 == 50);
        org.junit.Assert.assertTrue("'" + long11 + "' != '" + 300000L + "'", long11 == 300000L);
        org.junit.Assert.assertNotNull(properties14);
        org.junit.Assert.assertTrue("'" + long19 + "' != '" + 10000L + "'", long19 == 10000L);
    }

    @Test
    public void test7727() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7727");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet3 = properties0.stringPropertyNames();
        java.util.Properties properties4 = new java.util.Properties();
        java.util.Properties properties5 = new java.util.Properties();
        java.lang.Object obj7 = properties5.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet8 = properties5.stringPropertyNames();
        boolean boolean9 = properties4.containsValue((java.lang.Object) properties5);
        java.util.Collection<java.lang.Object> objCollection10 = properties4.values();
        java.util.Enumeration<?> wildcardEnumeration11 = properties4.propertyNames();
        java.lang.Object obj13 = properties0.put((java.lang.Object) wildcardEnumeration11, (java.lang.Object) 10.0d);
        java.util.Properties properties14 = new java.util.Properties();
        java.lang.Object obj16 = properties14.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration17 = properties14.elements();
        boolean boolean18 = properties14.isEmpty();
        java.util.Set<java.lang.Object> objSet19 = properties14.keySet();
        boolean boolean20 = properties14.isEmpty();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet21 = properties14.entrySet();
        java.util.Properties properties22 = new java.util.Properties();
        java.lang.Object obj24 = properties22.remove((java.lang.Object) 0.0d);
        boolean boolean25 = properties22.isEmpty();
        java.lang.Object obj28 = properties22.setProperty("", "hi!");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties29 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties29.setSerialJtaTransactions(false);
        boolean boolean32 = properties14.remove((java.lang.Object) properties22, (java.lang.Object) atomikosProperties29);
        java.util.Properties properties33 = new java.util.Properties(properties22);
        int int34 = properties33.size();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties36 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties36.setSerialJtaTransactions(false);
        boolean boolean39 = atomikosProperties36.isSerialJtaTransactions();
        java.lang.String str40 = atomikosProperties36.getService();
        boolean boolean41 = atomikosProperties36.isEnableLogging();
        java.lang.String str42 = atomikosProperties36.getTransactionManagerUniqueName();
        boolean boolean43 = properties33.remove((java.lang.Object) (byte) 1, (java.lang.Object) atomikosProperties36);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties44 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties44.setSerialJtaTransactions(false);
        atomikosProperties44.setThreadedTwoPhaseCommit(true);
        atomikosProperties44.setEnableLogging(false);
        boolean boolean51 = atomikosProperties44.isSerialJtaTransactions();
        int int52 = atomikosProperties44.getMaxActives();
        boolean boolean53 = atomikosProperties44.isSerialJtaTransactions();
        boolean boolean54 = properties0.remove((java.lang.Object) properties33, (java.lang.Object) boolean53);
        java.util.Properties properties55 = new java.util.Properties();
        java.lang.Object obj57 = properties55.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration58 = properties55.elements();
        boolean boolean59 = properties55.isEmpty();
        java.util.Set<java.lang.Object> objSet60 = properties55.keySet();
        boolean boolean61 = properties55.isEmpty();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet62 = properties55.entrySet();
        java.util.Properties properties63 = new java.util.Properties();
        java.lang.Object obj65 = properties63.remove((java.lang.Object) 0.0d);
        boolean boolean66 = properties63.isEmpty();
        java.lang.Object obj69 = properties63.setProperty("", "hi!");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties70 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties70.setSerialJtaTransactions(false);
        boolean boolean73 = properties55.remove((java.lang.Object) properties63, (java.lang.Object) atomikosProperties70);
        java.util.Properties properties74 = new java.util.Properties();
        java.lang.Object obj76 = properties74.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration77 = properties74.elements();
        int int78 = properties74.size();
        java.util.Properties properties79 = new java.util.Properties(properties74);
        java.util.Set<java.lang.String> strSet80 = properties74.stringPropertyNames();
        java.util.Set<java.lang.String> strSet81 = properties74.stringPropertyNames();
        java.lang.Object obj82 = properties0.put((java.lang.Object) properties63, (java.lang.Object) properties74);
        java.util.Collection<java.lang.Object> objCollection83 = properties63.values();
        java.util.Properties properties84 = new java.util.Properties();
        java.lang.Object obj86 = properties84.remove((java.lang.Object) 0.0d);
        boolean boolean87 = properties84.isEmpty();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties88 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        boolean boolean89 = properties84.containsValue((java.lang.Object) atomikosProperties88);
        int int90 = properties84.size();
        java.lang.Object obj91 = properties84.clone();
        properties63.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties84);
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(strSet3);
        org.junit.Assert.assertNull(obj7);
        org.junit.Assert.assertNotNull(strSet8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(objCollection10);
        org.junit.Assert.assertNotNull(wildcardEnumeration11);
        org.junit.Assert.assertNull(obj13);
        org.junit.Assert.assertNull(obj16);
        org.junit.Assert.assertNotNull(objEnumeration17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(objSet19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNotNull(objEntrySet21);
        org.junit.Assert.assertNull(obj24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNull(obj28);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 0 + "'", int34 == 0);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNull(str40);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertNull(str42);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + 50 + "'", int52 == 50);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertNull(obj57);
        org.junit.Assert.assertNotNull(objEnumeration58);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertNotNull(objSet60);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertNotNull(objEntrySet62);
        org.junit.Assert.assertNull(obj65);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66 == true);
        org.junit.Assert.assertNull(obj69);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertNull(obj76);
        org.junit.Assert.assertNotNull(objEnumeration77);
        org.junit.Assert.assertTrue("'" + int78 + "' != '" + 0 + "'", int78 == 0);
        org.junit.Assert.assertNotNull(strSet80);
        org.junit.Assert.assertNotNull(strSet81);
        org.junit.Assert.assertNull(obj82);
        org.junit.Assert.assertNotNull(objCollection83);
        org.junit.Assert.assertNull(obj86);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + true + "'", boolean87 == true);
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + false + "'", boolean89 == false);
        org.junit.Assert.assertTrue("'" + int90 + "' != '" + 0 + "'", int90 == 0);
        org.junit.Assert.assertNotNull(obj91);
        org.junit.Assert.assertEquals(obj91.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj91), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj91), "{}");
    }

    @Test
    public void test7728() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7728");
        java.util.Properties properties0 = new java.util.Properties();
        java.util.Collection<java.lang.Object> objCollection1 = properties0.values();
        java.util.Enumeration<java.lang.Object> objEnumeration2 = properties0.keys();
        java.lang.Object obj5 = properties0.setProperty("{}", "{}");
        java.util.Set<java.lang.String> strSet6 = properties0.stringPropertyNames();
        java.util.Properties properties7 = new java.util.Properties();
        boolean boolean9 = properties7.contains((java.lang.Object) 100.0d);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties10 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties10.setSerialJtaTransactions(false);
        atomikosProperties10.setThreadedTwoPhaseCommit(true);
        atomikosProperties10.setSerialJtaTransactions(false);
        java.lang.String str17 = atomikosProperties10.getService();
        boolean boolean18 = properties7.containsKey((java.lang.Object) atomikosProperties10);
        boolean boolean19 = properties0.containsKey((java.lang.Object) properties7);
        java.lang.String str21 = properties0.getProperty("");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties22 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties22.setSerialJtaTransactions(false);
        atomikosProperties22.setThreadedTwoPhaseCommit(true);
        atomikosProperties22.setMaxTimeout((long) '#');
        boolean boolean29 = atomikosProperties22.isEnableLogging();
        atomikosProperties22.setCheckpointInterval((long) (byte) -1);
        atomikosProperties22.setMaxActives((int) (byte) 100);
        atomikosProperties22.setForceShutdownOnVmExit(false);
        boolean boolean36 = properties0.contains((java.lang.Object) false);
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet37 = properties0.entrySet();
        java.lang.Object obj40 = properties0.setProperty("hi!", "{hi!=[]}");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties41 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties41.setSerialJtaTransactions(false);
        boolean boolean44 = atomikosProperties41.isSerialJtaTransactions();
        atomikosProperties41.setTransactionManagerUniqueName("tmlog");
        java.util.Properties properties47 = atomikosProperties41.asProperties();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties48 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties48.setSerialJtaTransactions(false);
        boolean boolean51 = atomikosProperties48.isSerialJtaTransactions();
        atomikosProperties48.setTransactionManagerUniqueName("hi!");
        boolean boolean54 = atomikosProperties48.isEnableLogging();
        java.lang.String str55 = atomikosProperties48.getTransactionManagerUniqueName();
        atomikosProperties48.setCheckpointInterval(1L);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties58 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties58.setSerialJtaTransactions(false);
        atomikosProperties58.setThreadedTwoPhaseCommit(true);
        atomikosProperties58.setThreadedTwoPhaseCommit(true);
        java.util.Properties properties65 = atomikosProperties58.asProperties();
        int int66 = atomikosProperties58.getMaxActives();
        atomikosProperties58.setService("hi!");
        long long69 = atomikosProperties58.getMaxTimeout();
        atomikosProperties58.setTransactionManagerUniqueName("hi!");
        java.util.Properties properties72 = atomikosProperties58.asProperties();
        java.lang.Object obj73 = properties47.getOrDefault((java.lang.Object) atomikosProperties48, (java.lang.Object) properties72);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties74 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties74.setSerialJtaTransactions(false);
        atomikosProperties74.setThreadedTwoPhaseCommit(true);
        atomikosProperties74.setMaxTimeout((long) '#');
        java.lang.String str81 = atomikosProperties74.getLogBaseDir();
        atomikosProperties74.setForceShutdownOnVmExit(false);
        long long84 = atomikosProperties74.getMaxTimeout();
        atomikosProperties74.setLogBaseName("tmlog");
        atomikosProperties74.setService("{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=false, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=true, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
        boolean boolean89 = properties0.remove((java.lang.Object) atomikosProperties48, (java.lang.Object) atomikosProperties74);
        atomikosProperties48.setDefaultJtaTimeout(0L);
        java.lang.String str92 = atomikosProperties48.getLogBaseDir();
        atomikosProperties48.setMaxTimeout((long) (short) 0);
        org.junit.Assert.assertNotNull(objCollection1);
        org.junit.Assert.assertNotNull(objEnumeration2);
        org.junit.Assert.assertNull(obj5);
        org.junit.Assert.assertNotNull(strSet6);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNull(str17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNull(str21);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(objEntrySet37);
        org.junit.Assert.assertNull(obj40);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(properties47);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "hi!" + "'", str55, "hi!");
        org.junit.Assert.assertNotNull(properties65);
        org.junit.Assert.assertTrue("'" + int66 + "' != '" + 50 + "'", int66 == 50);
        org.junit.Assert.assertTrue("'" + long69 + "' != '" + 300000L + "'", long69 == 300000L);
        org.junit.Assert.assertNotNull(properties72);
        org.junit.Assert.assertNotNull(obj73);
// flaky:         org.junit.Assert.assertEquals(obj73.toString(), "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=false, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.service=hi!, com.atomikos.icatch.threaded_2pc=true, com.atomikos.icatch.tm_unique_name=hi!, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
// flaky:         org.junit.Assert.assertEquals(java.lang.String.valueOf(obj73), "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=false, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.service=hi!, com.atomikos.icatch.threaded_2pc=true, com.atomikos.icatch.tm_unique_name=hi!, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
// flaky:         org.junit.Assert.assertEquals(java.util.Objects.toString(obj73), "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=false, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.service=hi!, com.atomikos.icatch.threaded_2pc=true, com.atomikos.icatch.tm_unique_name=hi!, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
        org.junit.Assert.assertNull(str81);
        org.junit.Assert.assertTrue("'" + long84 + "' != '" + 35L + "'", long84 == 35L);
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + false + "'", boolean89 == false);
        org.junit.Assert.assertNull(str92);
    }

    @Test
    public void test7729() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7729");
        java.util.Properties properties0 = new java.util.Properties();
        java.util.Collection<java.lang.Object> objCollection1 = properties0.values();
        java.util.Properties properties2 = new java.util.Properties();
        java.lang.Object obj4 = properties2.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet5 = properties2.stringPropertyNames();
        java.util.Properties properties6 = new java.util.Properties();
        java.util.Properties properties7 = new java.util.Properties();
        java.lang.Object obj9 = properties7.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet10 = properties7.stringPropertyNames();
        boolean boolean11 = properties6.containsValue((java.lang.Object) properties7);
        java.util.Collection<java.lang.Object> objCollection12 = properties6.values();
        java.util.Enumeration<?> wildcardEnumeration13 = properties6.propertyNames();
        java.lang.Object obj15 = properties2.put((java.lang.Object) wildcardEnumeration13, (java.lang.Object) 10.0d);
        boolean boolean16 = properties0.equals((java.lang.Object) 10.0d);
        boolean boolean18 = properties0.containsKey((java.lang.Object) 35);
        java.util.Properties properties19 = new java.util.Properties();
        java.lang.Object obj21 = properties19.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration22 = properties19.elements();
        boolean boolean23 = properties19.isEmpty();
        java.util.Set<java.lang.Object> objSet24 = properties19.keySet();
        java.util.Enumeration<java.lang.Object> objEnumeration25 = properties19.keys();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet26 = properties19.entrySet();
        java.util.Properties properties27 = new java.util.Properties();
        java.lang.Object obj29 = properties27.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration30 = properties27.elements();
        boolean boolean31 = properties27.isEmpty();
        java.util.Set<java.lang.Object> objSet32 = properties27.keySet();
        java.util.Enumeration<java.lang.Object> objEnumeration33 = properties27.keys();
        java.lang.String str35 = properties27.getProperty("hi!");
        java.lang.String str37 = properties27.getProperty("");
        java.lang.Object obj39 = properties19.putIfAbsent((java.lang.Object) "", (java.lang.Object) 100.0d);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties40 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties40.setSerialJtaTransactions(false);
        atomikosProperties40.setThreadedTwoPhaseCommit(true);
        atomikosProperties40.setMaxTimeout((long) '#');
        boolean boolean47 = atomikosProperties40.isEnableLogging();
        atomikosProperties40.setCheckpointInterval((long) (byte) -1);
        atomikosProperties40.setMaxActives((int) (byte) 100);
        atomikosProperties40.setForceShutdownOnVmExit(false);
        java.util.Properties properties54 = new java.util.Properties();
        java.lang.Object obj56 = properties54.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet57 = properties54.stringPropertyNames();
        java.lang.String str58 = properties54.toString();
        java.lang.String str59 = properties54.toString();
        java.util.Set<java.lang.Object> objSet60 = properties54.keySet();
        boolean boolean61 = properties19.remove((java.lang.Object) false, (java.lang.Object) objSet60);
        java.lang.Object obj62 = properties19.clone();
        boolean boolean63 = properties0.containsKey((java.lang.Object) properties19);
        java.util.Enumeration<java.lang.Object> objEnumeration64 = properties19.elements();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties65 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties65.setSerialJtaTransactions(false);
        atomikosProperties65.setThreadedTwoPhaseCommit(true);
        atomikosProperties65.setMaxTimeout((long) '#');
        boolean boolean72 = atomikosProperties65.isEnableLogging();
        atomikosProperties65.setMaxActives((int) '#');
        atomikosProperties65.setSerialJtaTransactions(true);
        java.lang.String str77 = atomikosProperties65.getTransactionManagerUniqueName();
        atomikosProperties65.setForceShutdownOnVmExit(false);
        boolean boolean80 = properties19.containsKey((java.lang.Object) atomikosProperties65);
        boolean boolean81 = atomikosProperties65.isForceShutdownOnVmExit();
        org.junit.Assert.assertNotNull(objCollection1);
        org.junit.Assert.assertNull(obj4);
        org.junit.Assert.assertNotNull(strSet5);
        org.junit.Assert.assertNull(obj9);
        org.junit.Assert.assertNotNull(strSet10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(objCollection12);
        org.junit.Assert.assertNotNull(wildcardEnumeration13);
        org.junit.Assert.assertNull(obj15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNull(obj21);
        org.junit.Assert.assertNotNull(objEnumeration22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNotNull(objSet24);
        org.junit.Assert.assertNotNull(objEnumeration25);
        org.junit.Assert.assertNotNull(objEntrySet26);
        org.junit.Assert.assertNull(obj29);
        org.junit.Assert.assertNotNull(objEnumeration30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNotNull(objSet32);
        org.junit.Assert.assertNotNull(objEnumeration33);
        org.junit.Assert.assertNull(str35);
        org.junit.Assert.assertNull(str37);
        org.junit.Assert.assertNull(obj39);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertNull(obj56);
        org.junit.Assert.assertNotNull(strSet57);
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "{}" + "'", str58, "{}");
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "{}" + "'", str59, "{}");
        org.junit.Assert.assertNotNull(objSet60);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertNotNull(obj62);
        org.junit.Assert.assertEquals(obj62.toString(), "{=100.0}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj62), "{=100.0}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj62), "{=100.0}");
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertNotNull(objEnumeration64);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + true + "'", boolean72 == true);
        org.junit.Assert.assertNull(str77);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", boolean80 == false);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + false + "'", boolean81 == false);
    }

    @Test
    public void test7730() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7730");
        java.util.Properties properties0 = new java.util.Properties();
        java.util.Properties properties1 = new java.util.Properties();
        java.util.Collection<java.lang.Object> objCollection2 = properties1.values();
        java.util.Enumeration<java.lang.Object> objEnumeration3 = properties1.keys();
        properties1.clear();
        java.lang.String str5 = properties1.toString();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties6 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties6.setSerialJtaTransactions(false);
        atomikosProperties6.setThreadedTwoPhaseCommit(true);
        atomikosProperties6.setMaxTimeout((long) '#');
        boolean boolean13 = atomikosProperties6.isEnableLogging();
        atomikosProperties6.setCheckpointInterval((long) (byte) -1);
        atomikosProperties6.setCheckpointInterval(0L);
        java.lang.String str18 = atomikosProperties6.getService();
        boolean boolean19 = atomikosProperties6.isForceShutdownOnVmExit();
        java.util.Properties properties20 = new java.util.Properties();
        java.lang.Object obj22 = properties20.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration23 = properties20.elements();
        boolean boolean24 = properties20.isEmpty();
        java.util.Set<java.lang.Object> objSet25 = properties20.keySet();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties26 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties26.setSerialJtaTransactions(false);
        atomikosProperties26.setThreadedTwoPhaseCommit(true);
        atomikosProperties26.setThreadedTwoPhaseCommit(true);
        java.util.Properties properties33 = atomikosProperties26.asProperties();
        int int34 = atomikosProperties26.getMaxActives();
        java.util.Properties properties35 = new java.util.Properties();
        java.lang.Object obj37 = properties35.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration38 = properties35.elements();
        boolean boolean39 = properties35.isEmpty();
        java.util.Set<java.lang.Object> objSet40 = properties35.keySet();
        boolean boolean42 = properties35.containsKey((java.lang.Object) (-1.0f));
        java.lang.Object obj43 = properties20.put((java.lang.Object) atomikosProperties26, (java.lang.Object) properties35);
        boolean boolean44 = properties1.remove((java.lang.Object) atomikosProperties6, (java.lang.Object) atomikosProperties26);
        java.util.Properties properties45 = new java.util.Properties();
        boolean boolean47 = properties45.contains((java.lang.Object) 100.0d);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties48 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties48.setSerialJtaTransactions(false);
        atomikosProperties48.setThreadedTwoPhaseCommit(true);
        atomikosProperties48.setSerialJtaTransactions(false);
        java.lang.String str55 = atomikosProperties48.getService();
        boolean boolean56 = properties45.containsKey((java.lang.Object) atomikosProperties48);
        java.lang.String str57 = atomikosProperties48.getService();
        java.lang.Object obj58 = properties0.getOrDefault((java.lang.Object) properties1, (java.lang.Object) str57);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties59 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties59.setSerialJtaTransactions(false);
        boolean boolean62 = atomikosProperties59.isSerialJtaTransactions();
        java.lang.String str63 = atomikosProperties59.getService();
        boolean boolean64 = atomikosProperties59.isEnableLogging();
        java.util.Properties properties65 = atomikosProperties59.asProperties();
        atomikosProperties59.setForceShutdownOnVmExit(true);
        atomikosProperties59.setMaxActives((int) (short) -1);
        atomikosProperties59.setMaxTimeout((long) ' ');
        atomikosProperties59.setEnableLogging(false);
        atomikosProperties59.setService("{{}={}}");
        atomikosProperties59.setLogBaseName("{{}={}}");
        atomikosProperties59.setLogBaseDir("{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=false, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=true, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
        boolean boolean80 = properties1.equals((java.lang.Object) atomikosProperties59);
        atomikosProperties59.setMaxActives((int) '#');
        atomikosProperties59.setEnableLogging(false);
        org.junit.Assert.assertNotNull(objCollection2);
        org.junit.Assert.assertNotNull(objEnumeration3);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "{}" + "'", str5, "{}");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNull(str18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNull(obj22);
        org.junit.Assert.assertNotNull(objEnumeration23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNotNull(objSet25);
        org.junit.Assert.assertNotNull(properties33);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 50 + "'", int34 == 50);
        org.junit.Assert.assertNull(obj37);
        org.junit.Assert.assertNotNull(objEnumeration38);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNotNull(objSet40);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNull(obj43);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNull(str55);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertNull(str57);
        org.junit.Assert.assertNull(obj58);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertNull(str63);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64 == true);
        org.junit.Assert.assertNotNull(properties65);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", boolean80 == false);
    }

    @Test
    public void test7731() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7731");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setSerialJtaTransactions(false);
        atomikosProperties0.setThreadedTwoPhaseCommit(true);
        boolean boolean5 = atomikosProperties0.isForceShutdownOnVmExit();
        java.lang.String str6 = atomikosProperties0.getTransactionManagerUniqueName();
        atomikosProperties0.setSerialJtaTransactions(true);
        atomikosProperties0.setMaxTimeout((long) (byte) 100);
        boolean boolean11 = atomikosProperties0.isEnableLogging();
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
    }

    @Test
    public void test7732() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7732");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setSerialJtaTransactions(false);
        boolean boolean3 = atomikosProperties0.isSerialJtaTransactions();
        java.lang.String str4 = atomikosProperties0.getService();
        boolean boolean5 = atomikosProperties0.isEnableLogging();
        java.util.Properties properties6 = atomikosProperties0.asProperties();
        atomikosProperties0.setForceShutdownOnVmExit(true);
        atomikosProperties0.setMaxActives((int) (short) -1);
        atomikosProperties0.setMaxTimeout((long) ' ');
        atomikosProperties0.setMaxTimeout((long) (short) 100);
        atomikosProperties0.setDefaultJtaTimeout((long) 35);
        atomikosProperties0.setMaxTimeout((-1L));
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNotNull(properties6);
    }

    @Test
    public void test7733() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7733");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration3 = properties0.elements();
        boolean boolean4 = properties0.isEmpty();
        java.util.Enumeration<java.lang.Object> objEnumeration5 = properties0.elements();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet6 = properties0.entrySet();
        java.util.Set<java.lang.String> strSet7 = properties0.stringPropertyNames();
        java.lang.Object obj10 = properties0.setProperty("{}", "tmlog");
        java.util.Properties properties11 = new java.util.Properties();
        java.lang.Object obj13 = properties11.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration14 = properties11.elements();
        int int15 = properties11.size();
        java.util.Properties properties16 = new java.util.Properties();
        java.lang.Object obj18 = properties16.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration19 = properties16.elements();
        java.util.Enumeration<java.lang.Object> objEnumeration20 = properties16.keys();
        java.lang.Object obj21 = properties0.getOrDefault((java.lang.Object) properties11, (java.lang.Object) objEnumeration20);
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet22 = properties11.entrySet();
        java.lang.String str24 = properties11.getProperty("{tmlog=}");
        java.io.Reader reader25 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties11.load(reader25);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(objEnumeration3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(objEnumeration5);
        org.junit.Assert.assertNotNull(objEntrySet6);
        org.junit.Assert.assertNotNull(strSet7);
        org.junit.Assert.assertNull(obj10);
        org.junit.Assert.assertNull(obj13);
        org.junit.Assert.assertNotNull(objEnumeration14);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0);
        org.junit.Assert.assertNull(obj18);
        org.junit.Assert.assertNotNull(objEnumeration19);
        org.junit.Assert.assertNotNull(objEnumeration20);
        org.junit.Assert.assertNotNull(obj21);
        org.junit.Assert.assertNotNull(objEntrySet22);
        org.junit.Assert.assertNull(str24);
    }

    @Test
    public void test7734() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7734");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration3 = properties0.elements();
        boolean boolean4 = properties0.isEmpty();
        java.util.Enumeration<java.lang.Object> objEnumeration5 = properties0.elements();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet6 = properties0.entrySet();
        java.util.Set<java.lang.String> strSet7 = properties0.stringPropertyNames();
        java.util.Properties properties8 = new java.util.Properties();
        java.lang.Object obj10 = properties8.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration11 = properties8.elements();
        boolean boolean12 = properties8.isEmpty();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet13 = properties8.entrySet();
        boolean boolean14 = properties0.contains((java.lang.Object) properties8);
        java.util.Collection<java.lang.Object> objCollection15 = properties8.values();
        java.util.Set<java.lang.String> strSet16 = properties8.stringPropertyNames();
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(objEnumeration3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(objEnumeration5);
        org.junit.Assert.assertNotNull(objEntrySet6);
        org.junit.Assert.assertNotNull(strSet7);
        org.junit.Assert.assertNull(obj10);
        org.junit.Assert.assertNotNull(objEnumeration11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(objEntrySet13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(objCollection15);
        org.junit.Assert.assertNotNull(strSet16);
    }

    @Test
    public void test7735() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7735");
        java.util.Properties properties0 = new java.util.Properties();
        boolean boolean2 = properties0.contains((java.lang.Object) 100.0d);
        java.util.Properties properties3 = new java.util.Properties();
        java.lang.Object obj5 = properties3.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration6 = properties3.elements();
        boolean boolean7 = properties3.isEmpty();
        java.util.Set<java.lang.Object> objSet8 = properties3.keySet();
        boolean boolean9 = properties3.isEmpty();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet10 = properties3.entrySet();
        java.util.Properties properties11 = new java.util.Properties();
        java.lang.Object obj13 = properties11.remove((java.lang.Object) 0.0d);
        boolean boolean14 = properties11.isEmpty();
        java.lang.Object obj17 = properties11.setProperty("", "hi!");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties18 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties18.setSerialJtaTransactions(false);
        boolean boolean21 = properties3.remove((java.lang.Object) properties11, (java.lang.Object) atomikosProperties18);
        boolean boolean22 = properties0.equals((java.lang.Object) properties3);
        java.util.Enumeration<java.lang.Object> objEnumeration23 = properties0.elements();
        java.util.Collection<java.lang.Object> objCollection24 = properties0.values();
        java.util.Enumeration<?> wildcardEnumeration25 = properties0.propertyNames();
        java.util.Set<java.lang.Object> objSet26 = properties0.keySet();
        java.util.Properties properties27 = new java.util.Properties();
        java.lang.Object obj29 = properties27.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration30 = properties27.elements();
        boolean boolean31 = properties27.isEmpty();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet32 = properties27.entrySet();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties34 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties34.setSerialJtaTransactions(false);
        atomikosProperties34.setThreadedTwoPhaseCommit(true);
        atomikosProperties34.setMaxTimeout((long) '#');
        boolean boolean41 = atomikosProperties34.isForceShutdownOnVmExit();
        java.lang.Object obj42 = properties27.put((java.lang.Object) (short) 1, (java.lang.Object) atomikosProperties34);
        int int43 = atomikosProperties34.getMaxActives();
        java.util.Properties properties44 = new java.util.Properties();
        java.lang.Object obj46 = properties44.remove((java.lang.Object) 0.0d);
        boolean boolean48 = properties44.containsValue((java.lang.Object) "hi!");
        java.lang.Object obj51 = properties44.put((java.lang.Object) (byte) -1, (java.lang.Object) 100L);
        java.util.Properties properties52 = new java.util.Properties();
        java.util.Properties properties53 = new java.util.Properties();
        java.lang.Object obj55 = properties53.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet56 = properties53.stringPropertyNames();
        boolean boolean57 = properties52.containsValue((java.lang.Object) properties53);
        java.util.Collection<java.lang.Object> objCollection58 = properties52.values();
        java.util.Properties properties60 = new java.util.Properties();
        java.lang.Object obj62 = properties60.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration63 = properties60.elements();
        boolean boolean64 = properties60.isEmpty();
        java.util.Set<java.lang.Object> objSet65 = properties60.keySet();
        java.lang.Object obj66 = properties52.putIfAbsent((java.lang.Object) "hi!", (java.lang.Object) objSet65);
        java.util.Set<java.lang.Object> objSet67 = properties52.keySet();
        boolean boolean68 = properties44.containsKey((java.lang.Object) properties52);
        java.util.Set<java.lang.String> strSet69 = properties52.stringPropertyNames();
        java.lang.String str70 = properties52.toString();
        boolean boolean71 = properties0.remove((java.lang.Object) atomikosProperties34, (java.lang.Object) properties52);
        java.util.Properties properties72 = atomikosProperties34.asProperties();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNull(obj5);
        org.junit.Assert.assertNotNull(objEnumeration6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(objSet8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertNotNull(objEntrySet10);
        org.junit.Assert.assertNull(obj13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNull(obj17);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNotNull(objEnumeration23);
        org.junit.Assert.assertNotNull(objCollection24);
        org.junit.Assert.assertNotNull(wildcardEnumeration25);
        org.junit.Assert.assertNotNull(objSet26);
        org.junit.Assert.assertNull(obj29);
        org.junit.Assert.assertNotNull(objEnumeration30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNotNull(objEntrySet32);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNull(obj42);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 50 + "'", int43 == 50);
        org.junit.Assert.assertNull(obj46);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNull(obj51);
        org.junit.Assert.assertNull(obj55);
        org.junit.Assert.assertNotNull(strSet56);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertNotNull(objCollection58);
        org.junit.Assert.assertNull(obj62);
        org.junit.Assert.assertNotNull(objEnumeration63);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64 == true);
        org.junit.Assert.assertNotNull(objSet65);
        org.junit.Assert.assertNull(obj66);
        org.junit.Assert.assertNotNull(objSet67);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertNotNull(strSet69);
        org.junit.Assert.assertEquals("'" + str70 + "' != '" + "{hi!=[]}" + "'", str70, "{hi!=[]}");
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertNotNull(properties72);
    }

    @Test
    public void test7736() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7736");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration3 = properties0.elements();
        boolean boolean4 = properties0.isEmpty();
        java.util.Set<java.lang.Object> objSet5 = properties0.keySet();
        boolean boolean6 = properties0.isEmpty();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet7 = properties0.entrySet();
        java.util.Properties properties8 = new java.util.Properties();
        java.lang.Object obj10 = properties8.remove((java.lang.Object) 0.0d);
        boolean boolean11 = properties8.isEmpty();
        java.lang.Object obj14 = properties8.setProperty("", "hi!");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties15 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties15.setSerialJtaTransactions(false);
        boolean boolean18 = properties0.remove((java.lang.Object) properties8, (java.lang.Object) atomikosProperties15);
        java.util.Properties properties19 = new java.util.Properties(properties8);
        properties19.clear();
        java.util.Properties properties21 = new java.util.Properties();
        boolean boolean23 = properties21.contains((java.lang.Object) 100.0d);
        java.lang.Object obj24 = null;
        boolean boolean25 = properties21.equals(obj24);
        java.util.Properties properties26 = new java.util.Properties(properties21);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties27 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties27.setSerialJtaTransactions(false);
        boolean boolean30 = atomikosProperties27.isSerialJtaTransactions();
        java.lang.String str31 = atomikosProperties27.getService();
        boolean boolean32 = atomikosProperties27.isEnableLogging();
        java.util.Properties properties33 = atomikosProperties27.asProperties();
        java.util.Set<java.lang.String> strSet34 = properties33.stringPropertyNames();
        boolean boolean35 = properties33.isEmpty();
        boolean boolean36 = properties33.isEmpty();
        java.util.Properties properties37 = new java.util.Properties();
        java.lang.Object obj39 = properties37.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<?> wildcardEnumeration40 = properties37.propertyNames();
        boolean boolean41 = properties33.containsValue((java.lang.Object) wildcardEnumeration40);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties42 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties42.setSerialJtaTransactions(false);
        boolean boolean45 = atomikosProperties42.isSerialJtaTransactions();
        java.lang.String str46 = atomikosProperties42.getService();
        atomikosProperties42.setEnableLogging(false);
        java.util.Properties properties49 = atomikosProperties42.asProperties();
        atomikosProperties42.setCheckpointInterval((long) 1);
        java.util.Properties properties52 = atomikosProperties42.asProperties();
        java.lang.Object obj53 = properties26.putIfAbsent((java.lang.Object) properties33, (java.lang.Object) properties52);
        properties19.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties26);
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet55 = properties26.entrySet();
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(objEnumeration3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(objSet5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(objEntrySet7);
        org.junit.Assert.assertNull(obj10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNull(obj14);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNull(str31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertNotNull(properties33);
        org.junit.Assert.assertNotNull(strSet34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNull(obj39);
        org.junit.Assert.assertNotNull(wildcardEnumeration40);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNull(str46);
        org.junit.Assert.assertNotNull(properties49);
        org.junit.Assert.assertNotNull(properties52);
        org.junit.Assert.assertNull(obj53);
        org.junit.Assert.assertNotNull(objEntrySet55);
    }

    @Test
    public void test7737() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7737");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setSerialJtaTransactions(false);
        atomikosProperties0.setThreadedTwoPhaseCommit(true);
        atomikosProperties0.setMaxTimeout((long) '#');
        long long7 = atomikosProperties0.getCheckpointInterval();
        java.lang.String str8 = atomikosProperties0.getTransactionManagerUniqueName();
        atomikosProperties0.setDefaultJtaTimeout((long) 0);
        java.util.Properties properties11 = atomikosProperties0.asProperties();
        java.util.Properties properties12 = new java.util.Properties();
        java.lang.Object obj14 = properties12.remove((java.lang.Object) 0.0d);
        java.util.Properties properties15 = new java.util.Properties();
        java.util.Collection<java.lang.Object> objCollection16 = properties15.values();
        java.util.Enumeration<java.lang.Object> objEnumeration17 = properties15.keys();
        java.util.Properties properties18 = new java.util.Properties();
        java.lang.Object obj20 = properties18.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration21 = properties18.elements();
        boolean boolean22 = properties18.isEmpty();
        java.util.Set<java.lang.Object> objSet23 = properties18.keySet();
        java.util.Enumeration<java.lang.Object> objEnumeration24 = properties18.keys();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet25 = properties18.entrySet();
        java.lang.Object obj26 = properties12.put((java.lang.Object) properties15, (java.lang.Object) properties18);
        java.lang.Object obj27 = properties15.clone();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties28 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties28.setSerialJtaTransactions(false);
        atomikosProperties28.setThreadedTwoPhaseCommit(true);
        atomikosProperties28.setMaxTimeout((long) '#');
        boolean boolean35 = atomikosProperties28.isEnableLogging();
        atomikosProperties28.setCheckpointInterval((long) 100);
        atomikosProperties28.setSerialJtaTransactions(true);
        boolean boolean40 = properties15.equals((java.lang.Object) atomikosProperties28);
        java.util.Properties properties41 = new java.util.Properties();
        java.lang.Object obj43 = properties41.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration44 = properties41.elements();
        boolean boolean45 = properties41.isEmpty();
        java.util.Enumeration<java.lang.Object> objEnumeration46 = properties41.elements();
        boolean boolean47 = properties15.containsKey((java.lang.Object) properties41);
        java.util.Properties properties48 = new java.util.Properties();
        java.lang.Object obj50 = properties48.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration51 = properties48.elements();
        boolean boolean52 = properties48.isEmpty();
        java.util.Set<java.lang.Object> objSet53 = properties48.keySet();
        boolean boolean54 = properties48.isEmpty();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet55 = properties48.entrySet();
        java.util.Properties properties56 = new java.util.Properties();
        java.lang.Object obj58 = properties56.remove((java.lang.Object) 0.0d);
        boolean boolean59 = properties56.isEmpty();
        java.lang.Object obj62 = properties56.setProperty("", "hi!");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties63 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties63.setSerialJtaTransactions(false);
        boolean boolean66 = properties48.remove((java.lang.Object) properties56, (java.lang.Object) atomikosProperties63);
        java.util.Properties properties67 = new java.util.Properties(properties56);
        java.util.Enumeration<java.lang.Object> objEnumeration68 = properties67.elements();
        java.lang.Object obj69 = properties67.clone();
        java.lang.Object obj70 = properties11.getOrDefault((java.lang.Object) properties41, (java.lang.Object) properties67);
        java.util.Set<java.lang.String> strSet71 = properties41.stringPropertyNames();
        java.util.Properties properties72 = new java.util.Properties(properties41);
        boolean boolean73 = properties41.isEmpty();
        java.io.OutputStream outputStream74 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties41.storeToXML(outputStream74, "{hi!=[], {}={}}");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + 500L + "'", long7 == 500L);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNotNull(properties11);
        org.junit.Assert.assertNull(obj14);
        org.junit.Assert.assertNotNull(objCollection16);
        org.junit.Assert.assertNotNull(objEnumeration17);
        org.junit.Assert.assertNull(obj20);
        org.junit.Assert.assertNotNull(objEnumeration21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNotNull(objSet23);
        org.junit.Assert.assertNotNull(objEnumeration24);
        org.junit.Assert.assertNotNull(objEntrySet25);
        org.junit.Assert.assertNull(obj26);
        org.junit.Assert.assertNotNull(obj27);
        org.junit.Assert.assertEquals(obj27.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj27), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj27), "{}");
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNull(obj43);
        org.junit.Assert.assertNotNull(objEnumeration44);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertNotNull(objEnumeration46);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNull(obj50);
        org.junit.Assert.assertNotNull(objEnumeration51);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertNotNull(objSet53);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertNotNull(objEntrySet55);
        org.junit.Assert.assertNull(obj58);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertNull(obj62);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertNotNull(objEnumeration68);
        org.junit.Assert.assertNotNull(obj69);
        org.junit.Assert.assertEquals(obj69.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj69), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj69), "{}");
        org.junit.Assert.assertNotNull(obj70);
        org.junit.Assert.assertEquals(obj70.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj70), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj70), "{}");
        org.junit.Assert.assertNotNull(strSet71);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + true + "'", boolean73 == true);
    }

    @Test
    public void test7738() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7738");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration3 = properties0.elements();
        boolean boolean4 = properties0.isEmpty();
        java.util.Enumeration<java.lang.Object> objEnumeration5 = properties0.elements();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet6 = properties0.entrySet();
        java.util.Set<java.lang.String> strSet7 = properties0.stringPropertyNames();
        boolean boolean8 = properties0.isEmpty();
        java.lang.String str10 = properties0.getProperty("");
        java.util.Properties properties11 = new java.util.Properties(properties0);
        java.util.Properties properties12 = new java.util.Properties();
        boolean boolean14 = properties12.contains((java.lang.Object) 100.0d);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties15 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties15.setSerialJtaTransactions(false);
        atomikosProperties15.setThreadedTwoPhaseCommit(true);
        atomikosProperties15.setSerialJtaTransactions(false);
        java.lang.String str22 = atomikosProperties15.getService();
        boolean boolean23 = properties12.containsKey((java.lang.Object) atomikosProperties15);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties24 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties24.setSerialJtaTransactions(false);
        atomikosProperties24.setThreadedTwoPhaseCommit(true);
        atomikosProperties24.setMaxTimeout((long) '#');
        boolean boolean31 = atomikosProperties24.isEnableLogging();
        atomikosProperties24.setCheckpointInterval((long) 100);
        atomikosProperties24.setForceShutdownOnVmExit(false);
        boolean boolean36 = properties12.containsValue((java.lang.Object) atomikosProperties24);
        atomikosProperties24.setService("{=hi!}");
        atomikosProperties24.setDefaultJtaTimeout(0L);
        atomikosProperties24.setLogBaseName("");
        java.lang.String str43 = atomikosProperties24.getLogBaseName();
        boolean boolean44 = properties0.containsValue((java.lang.Object) str43);
        int int45 = properties0.size();
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(objEnumeration3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(objEnumeration5);
        org.junit.Assert.assertNotNull(objEntrySet6);
        org.junit.Assert.assertNotNull(strSet7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNull(str22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "" + "'", str43, "");
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 0 + "'", int45 == 0);
    }

    @Test
    public void test7739() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7739");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setSerialJtaTransactions(false);
        atomikosProperties0.setThreadedTwoPhaseCommit(true);
        atomikosProperties0.setEnableLogging(false);
        boolean boolean7 = atomikosProperties0.isSerialJtaTransactions();
        int int8 = atomikosProperties0.getMaxActives();
        boolean boolean9 = atomikosProperties0.isEnableLogging();
        java.lang.String str10 = atomikosProperties0.getLogBaseDir();
        boolean boolean11 = atomikosProperties0.isSerialJtaTransactions();
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 50 + "'", int8 == 50);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
    }

    @Test
    public void test7740() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7740");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration3 = properties0.elements();
        boolean boolean4 = properties0.isEmpty();
        java.util.Set<java.lang.Object> objSet5 = properties0.keySet();
        boolean boolean7 = properties0.containsKey((java.lang.Object) (-1.0f));
        java.util.Collection<java.lang.Object> objCollection8 = properties0.values();
        java.lang.Object obj9 = properties0.clone();
        java.util.Collection<java.lang.Object> objCollection10 = properties0.values();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet11 = properties0.entrySet();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet12 = properties0.entrySet();
        java.util.Collection<java.lang.Object> objCollection13 = properties0.values();
        java.lang.String str16 = properties0.getProperty("hi!", "");
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(objEnumeration3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(objSet5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(objCollection8);
        org.junit.Assert.assertNotNull(obj9);
        org.junit.Assert.assertEquals(obj9.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj9), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj9), "{}");
        org.junit.Assert.assertNotNull(objCollection10);
        org.junit.Assert.assertNotNull(objEntrySet11);
        org.junit.Assert.assertNotNull(objEntrySet12);
        org.junit.Assert.assertNotNull(objCollection13);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "" + "'", str16, "");
    }

    @Test
    public void test7741() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7741");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration3 = properties0.elements();
        int int4 = properties0.size();
        java.util.Properties properties5 = new java.util.Properties();
        java.lang.Object obj7 = properties5.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration8 = properties5.elements();
        boolean boolean9 = properties5.isEmpty();
        java.util.Set<java.lang.Object> objSet10 = properties5.keySet();
        boolean boolean11 = properties0.containsKey((java.lang.Object) objSet10);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties12 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties12.setSerialJtaTransactions(false);
        atomikosProperties12.setThreadedTwoPhaseCommit(true);
        atomikosProperties12.setEnableLogging(false);
        boolean boolean19 = atomikosProperties12.isSerialJtaTransactions();
        int int20 = atomikosProperties12.getMaxActives();
        java.util.Properties properties21 = new java.util.Properties();
        java.lang.Object obj23 = properties21.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet24 = properties21.stringPropertyNames();
        java.util.Properties properties25 = new java.util.Properties();
        java.util.Properties properties26 = new java.util.Properties();
        java.lang.Object obj28 = properties26.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet29 = properties26.stringPropertyNames();
        boolean boolean30 = properties25.containsValue((java.lang.Object) properties26);
        java.util.Collection<java.lang.Object> objCollection31 = properties25.values();
        java.util.Enumeration<?> wildcardEnumeration32 = properties25.propertyNames();
        java.lang.Object obj34 = properties21.put((java.lang.Object) wildcardEnumeration32, (java.lang.Object) 10.0d);
        java.lang.String str36 = properties21.getProperty("{=hi!}");
        java.lang.Object obj37 = properties0.put((java.lang.Object) atomikosProperties12, (java.lang.Object) "{=hi!}");
        boolean boolean38 = atomikosProperties12.isForceShutdownOnVmExit();
        boolean boolean39 = atomikosProperties12.isSerialJtaTransactions();
        atomikosProperties12.setService("{{}={}}");
        atomikosProperties12.setService("{{}=tmlog}");
        atomikosProperties12.setService("{{{}={}}={}, =hi!}");
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(objEnumeration3);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNull(obj7);
        org.junit.Assert.assertNotNull(objEnumeration8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertNotNull(objSet10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 50 + "'", int20 == 50);
        org.junit.Assert.assertNull(obj23);
        org.junit.Assert.assertNotNull(strSet24);
        org.junit.Assert.assertNull(obj28);
        org.junit.Assert.assertNotNull(strSet29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(objCollection31);
        org.junit.Assert.assertNotNull(wildcardEnumeration32);
        org.junit.Assert.assertNull(obj34);
        org.junit.Assert.assertNull(str36);
        org.junit.Assert.assertNull(obj37);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
    }

    @Test
    public void test7742() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7742");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration3 = properties0.elements();
        boolean boolean4 = properties0.isEmpty();
        java.util.Set<java.lang.Object> objSet5 = properties0.keySet();
        java.util.Enumeration<java.lang.Object> objEnumeration6 = properties0.keys();
        java.lang.String str8 = properties0.getProperty("hi!");
        java.util.Properties properties10 = new java.util.Properties();
        java.lang.Object obj12 = properties10.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration13 = properties10.elements();
        int int14 = properties10.size();
        java.util.Properties properties15 = new java.util.Properties(properties10);
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet16 = properties10.entrySet();
        java.util.Properties properties17 = new java.util.Properties();
        java.util.Properties properties18 = new java.util.Properties();
        java.lang.Object obj20 = properties18.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet21 = properties18.stringPropertyNames();
        boolean boolean22 = properties17.containsValue((java.lang.Object) properties18);
        java.util.Collection<java.lang.Object> objCollection23 = properties17.values();
        java.util.Properties properties25 = new java.util.Properties();
        java.lang.Object obj27 = properties25.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration28 = properties25.elements();
        boolean boolean29 = properties25.isEmpty();
        java.util.Set<java.lang.Object> objSet30 = properties25.keySet();
        java.lang.Object obj31 = properties17.putIfAbsent((java.lang.Object) "hi!", (java.lang.Object) objSet30);
        boolean boolean32 = properties0.replace((java.lang.Object) "hi!", (java.lang.Object) properties10, (java.lang.Object) "hi!");
        java.util.Set<java.lang.String> strSet33 = properties10.stringPropertyNames();
        java.util.Properties properties34 = new java.util.Properties();
        java.lang.Object obj36 = properties34.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration37 = properties34.elements();
        int int38 = properties34.size();
        java.util.Properties properties39 = new java.util.Properties(properties34);
        java.util.Set<java.lang.String> strSet40 = properties34.stringPropertyNames();
        java.util.Set<java.lang.String> strSet41 = properties34.stringPropertyNames();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties42 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties42.setSerialJtaTransactions(false);
        atomikosProperties42.setThreadedTwoPhaseCommit(true);
        atomikosProperties42.setMaxTimeout((long) '#');
        boolean boolean49 = atomikosProperties42.isEnableLogging();
        atomikosProperties42.setCheckpointInterval((long) (byte) -1);
        atomikosProperties42.setEnableLogging(true);
        atomikosProperties42.setLogBaseName("{}");
        long long56 = atomikosProperties42.getDefaultJtaTimeout();
        java.lang.Object obj57 = properties10.putIfAbsent((java.lang.Object) properties34, (java.lang.Object) atomikosProperties42);
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet58 = properties10.entrySet();
        java.util.Properties properties59 = new java.util.Properties();
        java.lang.Object obj61 = properties59.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet62 = properties59.stringPropertyNames();
        java.util.Properties properties63 = new java.util.Properties();
        java.util.Properties properties64 = new java.util.Properties();
        java.lang.Object obj66 = properties64.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet67 = properties64.stringPropertyNames();
        boolean boolean68 = properties63.containsValue((java.lang.Object) properties64);
        java.util.Collection<java.lang.Object> objCollection69 = properties63.values();
        java.util.Enumeration<?> wildcardEnumeration70 = properties63.propertyNames();
        java.lang.Object obj72 = properties59.put((java.lang.Object) wildcardEnumeration70, (java.lang.Object) 10.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration73 = properties59.elements();
        java.util.Properties properties75 = new java.util.Properties();
        java.lang.Object obj77 = properties75.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration78 = properties75.elements();
        boolean boolean79 = properties75.isEmpty();
        java.util.Set<java.lang.Object> objSet80 = properties75.keySet();
        java.util.Enumeration<java.lang.Object> objEnumeration81 = properties75.keys();
        boolean boolean83 = properties75.equals((java.lang.Object) "");
        java.lang.String str84 = properties75.toString();
        java.lang.Object obj85 = properties59.put((java.lang.Object) 'a', (java.lang.Object) properties75);
        boolean boolean86 = properties10.contains((java.lang.Object) properties59);
        java.lang.Object obj87 = properties10.clone();
        java.io.OutputStream outputStream88 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties10.store(outputStream88, "{tmlog=}");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(objEnumeration3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(objSet5);
        org.junit.Assert.assertNotNull(objEnumeration6);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNull(obj12);
        org.junit.Assert.assertNotNull(objEnumeration13);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertNotNull(objEntrySet16);
        org.junit.Assert.assertNull(obj20);
        org.junit.Assert.assertNotNull(strSet21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(objCollection23);
        org.junit.Assert.assertNull(obj27);
        org.junit.Assert.assertNotNull(objEnumeration28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNotNull(objSet30);
        org.junit.Assert.assertNull(obj31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(strSet33);
        org.junit.Assert.assertNull(obj36);
        org.junit.Assert.assertNotNull(objEnumeration37);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 0 + "'", int38 == 0);
        org.junit.Assert.assertNotNull(strSet40);
        org.junit.Assert.assertNotNull(strSet41);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertTrue("'" + long56 + "' != '" + 10000L + "'", long56 == 10000L);
        org.junit.Assert.assertNull(obj57);
        org.junit.Assert.assertNotNull(objEntrySet58);
        org.junit.Assert.assertNull(obj61);
        org.junit.Assert.assertNotNull(strSet62);
        org.junit.Assert.assertNull(obj66);
        org.junit.Assert.assertNotNull(strSet67);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertNotNull(objCollection69);
        org.junit.Assert.assertNotNull(wildcardEnumeration70);
        org.junit.Assert.assertNull(obj72);
        org.junit.Assert.assertNotNull(objEnumeration73);
        org.junit.Assert.assertNull(obj77);
        org.junit.Assert.assertNotNull(objEnumeration78);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + true + "'", boolean79 == true);
        org.junit.Assert.assertNotNull(objSet80);
        org.junit.Assert.assertNotNull(objEnumeration81);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + false + "'", boolean83 == false);
        org.junit.Assert.assertEquals("'" + str84 + "' != '" + "{}" + "'", str84, "{}");
        org.junit.Assert.assertNull(obj85);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + false + "'", boolean86 == false);
        org.junit.Assert.assertNotNull(obj87);
    }

    @Test
    public void test7743() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7743");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setSerialJtaTransactions(false);
        boolean boolean3 = atomikosProperties0.isSerialJtaTransactions();
        java.lang.String str4 = atomikosProperties0.getService();
        boolean boolean5 = atomikosProperties0.isEnableLogging();
        atomikosProperties0.setCheckpointInterval((long) (byte) 100);
        atomikosProperties0.setLogBaseDir("tmlog");
        long long10 = atomikosProperties0.getDefaultJtaTimeout();
        atomikosProperties0.setCheckpointInterval((long) 2);
        atomikosProperties0.setEnableLogging(false);
        atomikosProperties0.setSerialJtaTransactions(false);
        long long17 = atomikosProperties0.getDefaultJtaTimeout();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertTrue("'" + long10 + "' != '" + 10000L + "'", long10 == 10000L);
        org.junit.Assert.assertTrue("'" + long17 + "' != '" + 10000L + "'", long17 == 10000L);
    }

    @Test
    public void test7744() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7744");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet3 = properties0.stringPropertyNames();
        java.util.Properties properties4 = new java.util.Properties();
        java.util.Properties properties5 = new java.util.Properties();
        java.lang.Object obj7 = properties5.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet8 = properties5.stringPropertyNames();
        boolean boolean9 = properties4.containsValue((java.lang.Object) properties5);
        java.util.Collection<java.lang.Object> objCollection10 = properties4.values();
        java.util.Enumeration<?> wildcardEnumeration11 = properties4.propertyNames();
        java.lang.Object obj13 = properties0.put((java.lang.Object) wildcardEnumeration11, (java.lang.Object) 10.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration14 = properties0.elements();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties15 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties15.setSerialJtaTransactions(false);
        boolean boolean18 = atomikosProperties15.isSerialJtaTransactions();
        java.lang.String str19 = atomikosProperties15.getService();
        boolean boolean20 = atomikosProperties15.isEnableLogging();
        java.lang.String str21 = atomikosProperties15.getTransactionManagerUniqueName();
        java.util.Properties properties22 = new java.util.Properties();
        java.lang.Object obj24 = properties22.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration25 = properties22.elements();
        int int26 = properties22.size();
        java.util.Properties properties27 = new java.util.Properties();
        java.lang.Object obj29 = properties27.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration30 = properties27.elements();
        boolean boolean31 = properties27.isEmpty();
        java.util.Set<java.lang.Object> objSet32 = properties27.keySet();
        boolean boolean33 = properties22.containsKey((java.lang.Object) objSet32);
        java.util.Enumeration<java.lang.Object> objEnumeration34 = properties22.keys();
        java.util.Properties properties35 = new java.util.Properties();
        java.lang.Object obj37 = properties35.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration38 = properties35.elements();
        boolean boolean39 = properties35.isEmpty();
        java.util.Set<java.lang.Object> objSet40 = properties35.keySet();
        java.util.Enumeration<java.lang.Object> objEnumeration41 = properties35.keys();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet42 = properties35.entrySet();
        boolean boolean44 = properties22.remove((java.lang.Object) properties35, (java.lang.Object) 1.0f);
        boolean boolean45 = properties35.isEmpty();
        java.lang.Object obj46 = properties0.put((java.lang.Object) atomikosProperties15, (java.lang.Object) properties35);
        java.util.Properties properties47 = new java.util.Properties();
        java.lang.Object obj49 = properties47.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration50 = properties47.elements();
        boolean boolean51 = properties47.isEmpty();
        java.util.Set<java.lang.Object> objSet52 = properties47.keySet();
        boolean boolean53 = properties47.isEmpty();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet54 = properties47.entrySet();
        java.util.Properties properties55 = new java.util.Properties();
        java.lang.Object obj57 = properties55.remove((java.lang.Object) 0.0d);
        boolean boolean58 = properties55.isEmpty();
        java.lang.Object obj61 = properties55.setProperty("", "hi!");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties62 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties62.setSerialJtaTransactions(false);
        boolean boolean65 = properties47.remove((java.lang.Object) properties55, (java.lang.Object) atomikosProperties62);
        atomikosProperties62.setSerialJtaTransactions(false);
        boolean boolean68 = properties35.contains((java.lang.Object) atomikosProperties62);
        java.lang.String str69 = properties35.toString();
        java.io.InputStream inputStream70 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties35.load(inputStream70);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(strSet3);
        org.junit.Assert.assertNull(obj7);
        org.junit.Assert.assertNotNull(strSet8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(objCollection10);
        org.junit.Assert.assertNotNull(wildcardEnumeration11);
        org.junit.Assert.assertNull(obj13);
        org.junit.Assert.assertNotNull(objEnumeration14);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNull(str19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNull(str21);
        org.junit.Assert.assertNull(obj24);
        org.junit.Assert.assertNotNull(objEnumeration25);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 0 + "'", int26 == 0);
        org.junit.Assert.assertNull(obj29);
        org.junit.Assert.assertNotNull(objEnumeration30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNotNull(objSet32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(objEnumeration34);
        org.junit.Assert.assertNull(obj37);
        org.junit.Assert.assertNotNull(objEnumeration38);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNotNull(objSet40);
        org.junit.Assert.assertNotNull(objEnumeration41);
        org.junit.Assert.assertNotNull(objEntrySet42);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertNull(obj46);
        org.junit.Assert.assertNull(obj49);
        org.junit.Assert.assertNotNull(objEnumeration50);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertNotNull(objSet52);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertNotNull(objEntrySet54);
        org.junit.Assert.assertNull(obj57);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertNull(obj61);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertEquals("'" + str69 + "' != '" + "{}" + "'", str69, "{}");
    }

    @Test
    public void test7745() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7745");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setSerialJtaTransactions(false);
        atomikosProperties0.setThreadedTwoPhaseCommit(true);
        atomikosProperties0.setThreadedTwoPhaseCommit(true);
        java.util.Properties properties7 = atomikosProperties0.asProperties();
        int int8 = atomikosProperties0.getMaxActives();
        atomikosProperties0.setService("hi!");
        atomikosProperties0.setMaxTimeout((long) (byte) 10);
        atomikosProperties0.setDefaultJtaTimeout((long) 50);
        atomikosProperties0.setThreadedTwoPhaseCommit(false);
        boolean boolean17 = atomikosProperties0.isThreadedTwoPhaseCommit();
        org.junit.Assert.assertNotNull(properties7);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 50 + "'", int8 == 50);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
    }

    @Test
    public void test7746() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7746");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setSerialJtaTransactions(false);
        atomikosProperties0.setThreadedTwoPhaseCommit(true);
        atomikosProperties0.setEnableLogging(false);
        atomikosProperties0.setForceShutdownOnVmExit(true);
        boolean boolean9 = atomikosProperties0.isSerialJtaTransactions();
        java.util.Properties properties10 = atomikosProperties0.asProperties();
        java.util.Properties properties11 = new java.util.Properties();
        java.lang.Object obj13 = properties11.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration14 = properties11.elements();
        boolean boolean15 = properties11.isEmpty();
        java.util.Set<java.lang.Object> objSet16 = properties11.keySet();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties17 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties17.setSerialJtaTransactions(false);
        atomikosProperties17.setThreadedTwoPhaseCommit(true);
        atomikosProperties17.setThreadedTwoPhaseCommit(true);
        java.util.Properties properties24 = atomikosProperties17.asProperties();
        int int25 = atomikosProperties17.getMaxActives();
        java.util.Properties properties26 = new java.util.Properties();
        java.lang.Object obj28 = properties26.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration29 = properties26.elements();
        boolean boolean30 = properties26.isEmpty();
        java.util.Set<java.lang.Object> objSet31 = properties26.keySet();
        boolean boolean33 = properties26.containsKey((java.lang.Object) (-1.0f));
        java.lang.Object obj34 = properties11.put((java.lang.Object) atomikosProperties17, (java.lang.Object) properties26);
        java.lang.String str35 = properties11.toString();
        java.util.Properties properties36 = new java.util.Properties();
        java.lang.Object obj38 = properties36.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration39 = properties36.elements();
        boolean boolean40 = properties36.isEmpty();
        java.util.Set<java.lang.Object> objSet41 = properties36.keySet();
        java.util.Enumeration<java.lang.Object> objEnumeration42 = properties36.keys();
        java.util.Enumeration<java.lang.Object> objEnumeration43 = properties36.elements();
        java.util.Properties properties44 = new java.util.Properties();
        java.lang.Object obj46 = properties44.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration47 = properties44.elements();
        boolean boolean48 = properties44.isEmpty();
        java.util.Set<java.lang.Object> objSet49 = properties44.keySet();
        java.util.Enumeration<java.lang.Object> objEnumeration50 = properties44.keys();
        java.lang.String str52 = properties44.getProperty("hi!");
        java.lang.String str54 = properties44.getProperty("");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties55 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties55.setSerialJtaTransactions(false);
        atomikosProperties55.setThreadedTwoPhaseCommit(true);
        atomikosProperties55.setEnableLogging(false);
        boolean boolean62 = properties44.containsKey((java.lang.Object) atomikosProperties55);
        boolean boolean63 = properties36.containsKey((java.lang.Object) boolean62);
        java.util.Properties properties64 = new java.util.Properties();
        java.lang.Object obj66 = properties64.remove((java.lang.Object) 0.0d);
        boolean boolean67 = properties64.isEmpty();
        java.lang.Object obj70 = properties64.setProperty("", "hi!");
        int int71 = properties64.size();
        java.lang.Object obj72 = properties11.replace((java.lang.Object) properties36, (java.lang.Object) properties64);
        java.util.Properties properties73 = new java.util.Properties(properties11);
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet74 = properties73.entrySet();
        boolean boolean75 = properties10.containsValue((java.lang.Object) objEntrySet74);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties76 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties76.setSerialJtaTransactions(false);
        boolean boolean79 = atomikosProperties76.isSerialJtaTransactions();
        java.lang.String str80 = atomikosProperties76.getService();
        boolean boolean81 = atomikosProperties76.isEnableLogging();
        atomikosProperties76.setThreadedTwoPhaseCommit(false);
        long long84 = atomikosProperties76.getCheckpointInterval();
        java.util.Properties properties85 = atomikosProperties76.asProperties();
        java.lang.Object obj86 = properties10.get((java.lang.Object) properties85);
        boolean boolean87 = properties85.isEmpty();
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(properties10);
        org.junit.Assert.assertNull(obj13);
        org.junit.Assert.assertNotNull(objEnumeration14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(objSet16);
        org.junit.Assert.assertNotNull(properties24);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 50 + "'", int25 == 50);
        org.junit.Assert.assertNull(obj28);
        org.junit.Assert.assertNotNull(objEnumeration29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNotNull(objSet31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNull(obj34);
        org.junit.Assert.assertNull(obj38);
        org.junit.Assert.assertNotNull(objEnumeration39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNotNull(objSet41);
        org.junit.Assert.assertNotNull(objEnumeration42);
        org.junit.Assert.assertNotNull(objEnumeration43);
        org.junit.Assert.assertNull(obj46);
        org.junit.Assert.assertNotNull(objEnumeration47);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertNotNull(objSet49);
        org.junit.Assert.assertNotNull(objEnumeration50);
        org.junit.Assert.assertNull(str52);
        org.junit.Assert.assertNull(str54);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertNull(obj66);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + true + "'", boolean67 == true);
        org.junit.Assert.assertNull(obj70);
        org.junit.Assert.assertTrue("'" + int71 + "' != '" + 1 + "'", int71 == 1);
        org.junit.Assert.assertNull(obj72);
        org.junit.Assert.assertNotNull(objEntrySet74);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + false + "'", boolean79 == false);
        org.junit.Assert.assertNull(str80);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + true + "'", boolean81 == true);
        org.junit.Assert.assertTrue("'" + long84 + "' != '" + 500L + "'", long84 == 500L);
        org.junit.Assert.assertNotNull(properties85);
        org.junit.Assert.assertNull(obj86);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + false + "'", boolean87 == false);
    }

    @Test
    public void test7747() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7747");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setSerialJtaTransactions(false);
        atomikosProperties0.setThreadedTwoPhaseCommit(true);
        atomikosProperties0.setMaxTimeout((long) '#');
        boolean boolean7 = atomikosProperties0.isEnableLogging();
        atomikosProperties0.setCheckpointInterval((long) (byte) -1);
        atomikosProperties0.setEnableLogging(true);
        atomikosProperties0.setLogBaseDir("");
        long long14 = atomikosProperties0.getMaxTimeout();
        atomikosProperties0.setService("{hi!=[]}");
        java.lang.String str17 = atomikosProperties0.getLogBaseName();
        atomikosProperties0.setTransactionManagerUniqueName("hi!");
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertTrue("'" + long14 + "' != '" + 35L + "'", long14 == 35L);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "tmlog" + "'", str17, "tmlog");
    }

    @Test
    public void test7748() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7748");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration3 = properties0.elements();
        boolean boolean4 = properties0.isEmpty();
        java.util.Set<java.lang.Object> objSet5 = properties0.keySet();
        boolean boolean6 = properties0.isEmpty();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet7 = properties0.entrySet();
        java.util.Properties properties8 = new java.util.Properties();
        java.lang.Object obj10 = properties8.remove((java.lang.Object) 0.0d);
        boolean boolean11 = properties8.isEmpty();
        java.lang.Object obj14 = properties8.setProperty("", "hi!");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties15 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties15.setSerialJtaTransactions(false);
        boolean boolean18 = properties0.remove((java.lang.Object) properties8, (java.lang.Object) atomikosProperties15);
        java.util.Properties properties19 = new java.util.Properties();
        java.lang.Object obj21 = properties19.remove((java.lang.Object) 0.0d);
        java.util.Properties properties22 = new java.util.Properties();
        java.util.Collection<java.lang.Object> objCollection23 = properties22.values();
        java.util.Enumeration<java.lang.Object> objEnumeration24 = properties22.keys();
        java.util.Properties properties25 = new java.util.Properties();
        java.lang.Object obj27 = properties25.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration28 = properties25.elements();
        boolean boolean29 = properties25.isEmpty();
        java.util.Set<java.lang.Object> objSet30 = properties25.keySet();
        java.util.Enumeration<java.lang.Object> objEnumeration31 = properties25.keys();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet32 = properties25.entrySet();
        java.lang.Object obj33 = properties19.put((java.lang.Object) properties22, (java.lang.Object) properties25);
        java.util.Properties properties34 = new java.util.Properties();
        java.lang.Object obj36 = properties34.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration37 = properties34.elements();
        boolean boolean38 = properties34.isEmpty();
        java.util.Set<java.lang.Object> objSet39 = properties34.keySet();
        boolean boolean40 = properties34.isEmpty();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet41 = properties34.entrySet();
        java.util.Properties properties42 = new java.util.Properties();
        java.lang.Object obj44 = properties42.remove((java.lang.Object) 0.0d);
        boolean boolean45 = properties42.isEmpty();
        java.lang.Object obj48 = properties42.setProperty("", "hi!");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties49 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties49.setSerialJtaTransactions(false);
        boolean boolean52 = properties34.remove((java.lang.Object) properties42, (java.lang.Object) atomikosProperties49);
        boolean boolean53 = properties19.containsKey((java.lang.Object) boolean52);
        boolean boolean54 = properties0.containsValue((java.lang.Object) boolean52);
        java.io.InputStream inputStream55 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties0.load(inputStream55);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(objEnumeration3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(objSet5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(objEntrySet7);
        org.junit.Assert.assertNull(obj10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNull(obj14);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNull(obj21);
        org.junit.Assert.assertNotNull(objCollection23);
        org.junit.Assert.assertNotNull(objEnumeration24);
        org.junit.Assert.assertNull(obj27);
        org.junit.Assert.assertNotNull(objEnumeration28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNotNull(objSet30);
        org.junit.Assert.assertNotNull(objEnumeration31);
        org.junit.Assert.assertNotNull(objEntrySet32);
        org.junit.Assert.assertNull(obj33);
        org.junit.Assert.assertNull(obj36);
        org.junit.Assert.assertNotNull(objEnumeration37);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertNotNull(objSet39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNotNull(objEntrySet41);
        org.junit.Assert.assertNull(obj44);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertNull(obj48);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
    }

    @Test
    public void test7749() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7749");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        boolean boolean4 = properties0.containsValue((java.lang.Object) "hi!");
        java.lang.String str6 = properties0.getProperty("hi!");
        java.util.Enumeration<?> wildcardEnumeration7 = properties0.propertyNames();
        java.lang.String str9 = properties0.getProperty("{{}={}}");
        java.lang.String str10 = properties0.toString();
        java.util.Properties properties11 = new java.util.Properties();
        java.lang.Object obj13 = properties11.remove((java.lang.Object) 0.0d);
        boolean boolean14 = properties11.isEmpty();
        java.util.Enumeration<java.lang.Object> objEnumeration15 = properties11.elements();
        java.util.Enumeration<java.lang.Object> objEnumeration16 = properties11.elements();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties17 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties17.setSerialJtaTransactions(false);
        atomikosProperties17.setThreadedTwoPhaseCommit(true);
        atomikosProperties17.setMaxTimeout((long) '#');
        boolean boolean24 = atomikosProperties17.isForceShutdownOnVmExit();
        int int25 = atomikosProperties17.getMaxActives();
        java.lang.Object obj26 = properties11.remove((java.lang.Object) int25);
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet27 = properties11.entrySet();
        java.util.Properties properties28 = new java.util.Properties();
        java.lang.Object obj30 = properties28.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet31 = properties28.stringPropertyNames();
        java.util.Properties properties32 = new java.util.Properties();
        java.util.Properties properties33 = new java.util.Properties();
        java.lang.Object obj35 = properties33.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet36 = properties33.stringPropertyNames();
        boolean boolean37 = properties32.containsValue((java.lang.Object) properties33);
        java.util.Collection<java.lang.Object> objCollection38 = properties32.values();
        java.util.Enumeration<?> wildcardEnumeration39 = properties32.propertyNames();
        java.lang.Object obj41 = properties28.put((java.lang.Object) wildcardEnumeration39, (java.lang.Object) 10.0d);
        java.lang.Object obj42 = properties0.put((java.lang.Object) objEntrySet27, (java.lang.Object) properties28);
        java.util.Properties properties43 = new java.util.Properties();
        java.lang.Object obj45 = properties43.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration46 = properties43.elements();
        boolean boolean47 = properties43.isEmpty();
        java.util.Set<java.lang.Object> objSet48 = properties43.keySet();
        boolean boolean49 = properties43.isEmpty();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet50 = properties43.entrySet();
        java.util.Properties properties51 = new java.util.Properties();
        java.lang.Object obj53 = properties51.remove((java.lang.Object) 0.0d);
        boolean boolean54 = properties51.isEmpty();
        java.lang.Object obj57 = properties51.setProperty("", "hi!");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties58 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties58.setSerialJtaTransactions(false);
        boolean boolean61 = properties43.remove((java.lang.Object) properties51, (java.lang.Object) atomikosProperties58);
        java.util.Properties properties62 = new java.util.Properties(properties51);
        int int63 = properties62.size();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties65 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties65.setSerialJtaTransactions(false);
        boolean boolean68 = atomikosProperties65.isSerialJtaTransactions();
        java.lang.String str69 = atomikosProperties65.getService();
        boolean boolean70 = atomikosProperties65.isEnableLogging();
        java.lang.String str71 = atomikosProperties65.getTransactionManagerUniqueName();
        boolean boolean72 = properties62.remove((java.lang.Object) (byte) 1, (java.lang.Object) atomikosProperties65);
        atomikosProperties65.setMaxActives((int) (short) -1);
        boolean boolean75 = atomikosProperties65.isForceShutdownOnVmExit();
        boolean boolean76 = atomikosProperties65.isEnableLogging();
        long long77 = atomikosProperties65.getDefaultJtaTimeout();
        java.lang.Object obj78 = properties0.remove((java.lang.Object) long77);
        java.io.InputStream inputStream79 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties0.load(inputStream79);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertNotNull(wildcardEnumeration7);
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "{}" + "'", str10, "{}");
        org.junit.Assert.assertNull(obj13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(objEnumeration15);
        org.junit.Assert.assertNotNull(objEnumeration16);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 50 + "'", int25 == 50);
        org.junit.Assert.assertNull(obj26);
        org.junit.Assert.assertNotNull(objEntrySet27);
        org.junit.Assert.assertNull(obj30);
        org.junit.Assert.assertNotNull(strSet31);
        org.junit.Assert.assertNull(obj35);
        org.junit.Assert.assertNotNull(strSet36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(objCollection38);
        org.junit.Assert.assertNotNull(wildcardEnumeration39);
        org.junit.Assert.assertNull(obj41);
        org.junit.Assert.assertNull(obj42);
        org.junit.Assert.assertNull(obj45);
        org.junit.Assert.assertNotNull(objEnumeration46);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertNotNull(objSet48);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertNotNull(objEntrySet50);
        org.junit.Assert.assertNull(obj53);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertNull(obj57);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertTrue("'" + int63 + "' != '" + 0 + "'", int63 == 0);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertNull(str69);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + true + "'", boolean70 == true);
        org.junit.Assert.assertNull(str71);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + true + "'", boolean76 == true);
        org.junit.Assert.assertTrue("'" + long77 + "' != '" + 10000L + "'", long77 == 10000L);
        org.junit.Assert.assertNull(obj78);
    }

    @Test
    public void test7750() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7750");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setSerialJtaTransactions(false);
        atomikosProperties0.setThreadedTwoPhaseCommit(true);
        atomikosProperties0.setMaxTimeout((long) '#');
        java.lang.String str7 = atomikosProperties0.getLogBaseDir();
        atomikosProperties0.setMaxActives(1);
        atomikosProperties0.setService("hi!");
        atomikosProperties0.setTransactionManagerUniqueName("{tmlog=}");
        java.util.Properties properties14 = atomikosProperties0.asProperties();
        java.util.Properties properties15 = new java.util.Properties();
        java.lang.Object obj17 = properties15.remove((java.lang.Object) 0.0d);
        boolean boolean18 = properties15.isEmpty();
        java.lang.Object obj21 = properties15.setProperty("", "hi!");
        java.util.Properties properties22 = new java.util.Properties();
        java.lang.Object obj24 = properties22.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration25 = properties22.elements();
        boolean boolean26 = properties22.isEmpty();
        java.util.Set<java.lang.Object> objSet27 = properties22.keySet();
        boolean boolean28 = properties22.isEmpty();
        java.util.Properties properties29 = new java.util.Properties();
        java.util.Collection<java.lang.Object> objCollection30 = properties29.values();
        java.util.Enumeration<java.lang.Object> objEnumeration31 = properties29.keys();
        java.lang.Object obj32 = properties22.remove((java.lang.Object) properties29);
        java.lang.Object obj33 = properties15.get((java.lang.Object) properties29);
        properties14.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties15);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties35 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties35.setSerialJtaTransactions(false);
        atomikosProperties35.setThreadedTwoPhaseCommit(true);
        atomikosProperties35.setEnableLogging(false);
        boolean boolean42 = atomikosProperties35.isSerialJtaTransactions();
        int int43 = atomikosProperties35.getMaxActives();
        boolean boolean44 = atomikosProperties35.isEnableLogging();
        long long45 = atomikosProperties35.getCheckpointInterval();
        long long46 = atomikosProperties35.getDefaultJtaTimeout();
        atomikosProperties35.setMaxActives((-1));
        java.lang.String str49 = atomikosProperties35.getService();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj50 = properties14.get((java.lang.Object) str49);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNotNull(properties14);
        org.junit.Assert.assertNull(obj17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNull(obj21);
        org.junit.Assert.assertNull(obj24);
        org.junit.Assert.assertNotNull(objEnumeration25);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertNotNull(objSet27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNotNull(objCollection30);
        org.junit.Assert.assertNotNull(objEnumeration31);
        org.junit.Assert.assertNull(obj32);
        org.junit.Assert.assertNull(obj33);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 50 + "'", int43 == 50);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertTrue("'" + long45 + "' != '" + 500L + "'", long45 == 500L);
        org.junit.Assert.assertTrue("'" + long46 + "' != '" + 10000L + "'", long46 == 10000L);
        org.junit.Assert.assertNull(str49);
    }

    @Test
    public void test7751() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7751");
        java.util.Properties properties0 = new java.util.Properties();
        java.util.Collection<java.lang.Object> objCollection1 = properties0.values();
        java.util.Enumeration<java.lang.Object> objEnumeration2 = properties0.keys();
        java.util.Properties properties3 = new java.util.Properties();
        java.lang.Object obj5 = properties3.remove((java.lang.Object) 0.0d);
        java.util.Properties properties6 = new java.util.Properties();
        java.util.Collection<java.lang.Object> objCollection7 = properties6.values();
        java.util.Enumeration<java.lang.Object> objEnumeration8 = properties6.keys();
        java.util.Properties properties9 = new java.util.Properties();
        java.lang.Object obj11 = properties9.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration12 = properties9.elements();
        boolean boolean13 = properties9.isEmpty();
        java.util.Set<java.lang.Object> objSet14 = properties9.keySet();
        java.util.Enumeration<java.lang.Object> objEnumeration15 = properties9.keys();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet16 = properties9.entrySet();
        java.lang.Object obj17 = properties3.put((java.lang.Object) properties6, (java.lang.Object) properties9);
        java.lang.String str19 = properties6.getProperty("{=hi!}");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties20 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties20.setSerialJtaTransactions(false);
        atomikosProperties20.setThreadedTwoPhaseCommit(true);
        atomikosProperties20.setThreadedTwoPhaseCommit(true);
        long long27 = atomikosProperties20.getMaxTimeout();
        boolean boolean28 = properties6.containsValue((java.lang.Object) atomikosProperties20);
        java.util.Enumeration<java.lang.Object> objEnumeration29 = properties6.elements();
        java.util.Set<java.lang.String> strSet30 = properties6.stringPropertyNames();
        java.lang.Object obj31 = properties0.get((java.lang.Object) properties6);
        java.util.Properties properties32 = new java.util.Properties();
        java.lang.Object obj34 = properties32.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration35 = properties32.elements();
        int int36 = properties32.size();
        java.util.Properties properties37 = new java.util.Properties(properties32);
        boolean boolean38 = properties37.isEmpty();
        java.util.Properties properties39 = new java.util.Properties();
        java.lang.Object obj41 = properties39.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration42 = properties39.elements();
        int int43 = properties39.size();
        java.util.Properties properties44 = new java.util.Properties();
        java.lang.Object obj46 = properties44.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration47 = properties44.elements();
        boolean boolean48 = properties44.isEmpty();
        java.util.Set<java.lang.Object> objSet49 = properties44.keySet();
        boolean boolean50 = properties39.containsKey((java.lang.Object) objSet49);
        java.util.Enumeration<java.lang.Object> objEnumeration51 = properties39.keys();
        java.util.Properties properties52 = new java.util.Properties();
        java.lang.Object obj54 = properties52.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration55 = properties52.elements();
        boolean boolean56 = properties52.isEmpty();
        java.util.Set<java.lang.Object> objSet57 = properties52.keySet();
        java.util.Enumeration<java.lang.Object> objEnumeration58 = properties52.keys();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet59 = properties52.entrySet();
        boolean boolean61 = properties39.remove((java.lang.Object) properties52, (java.lang.Object) 1.0f);
        boolean boolean62 = properties37.contains((java.lang.Object) properties52);
        java.util.Properties properties63 = new java.util.Properties(properties52);
        boolean boolean64 = properties6.equals((java.lang.Object) properties63);
        java.io.OutputStream outputStream65 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties63.store(outputStream65, "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=false, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.tm_unique_name=tmlog, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(objCollection1);
        org.junit.Assert.assertNotNull(objEnumeration2);
        org.junit.Assert.assertNull(obj5);
        org.junit.Assert.assertNotNull(objCollection7);
        org.junit.Assert.assertNotNull(objEnumeration8);
        org.junit.Assert.assertNull(obj11);
        org.junit.Assert.assertNotNull(objEnumeration12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(objSet14);
        org.junit.Assert.assertNotNull(objEnumeration15);
        org.junit.Assert.assertNotNull(objEntrySet16);
        org.junit.Assert.assertNull(obj17);
        org.junit.Assert.assertNull(str19);
        org.junit.Assert.assertTrue("'" + long27 + "' != '" + 300000L + "'", long27 == 300000L);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(objEnumeration29);
        org.junit.Assert.assertNotNull(strSet30);
        org.junit.Assert.assertNull(obj31);
        org.junit.Assert.assertNull(obj34);
        org.junit.Assert.assertNotNull(objEnumeration35);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 0 + "'", int36 == 0);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertNull(obj41);
        org.junit.Assert.assertNotNull(objEnumeration42);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 0 + "'", int43 == 0);
        org.junit.Assert.assertNull(obj46);
        org.junit.Assert.assertNotNull(objEnumeration47);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertNotNull(objSet49);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertNotNull(objEnumeration51);
        org.junit.Assert.assertNull(obj54);
        org.junit.Assert.assertNotNull(objEnumeration55);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertNotNull(objSet57);
        org.junit.Assert.assertNotNull(objEnumeration58);
        org.junit.Assert.assertNotNull(objEntrySet59);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64 == true);
    }

    @Test
    public void test7752() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7752");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration3 = properties0.elements();
        int int4 = properties0.size();
        java.util.Properties properties5 = new java.util.Properties(properties0);
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet6 = properties0.entrySet();
        java.lang.Object obj9 = properties0.setProperty("", "{}");
        java.util.Properties properties10 = new java.util.Properties();
        java.lang.Object obj12 = properties10.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration13 = properties10.elements();
        boolean boolean14 = properties10.isEmpty();
        java.util.Set<java.lang.Object> objSet15 = properties10.keySet();
        boolean boolean16 = properties10.isEmpty();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet17 = properties10.entrySet();
        java.util.Properties properties18 = new java.util.Properties();
        java.lang.Object obj20 = properties18.remove((java.lang.Object) 0.0d);
        boolean boolean21 = properties18.isEmpty();
        java.lang.Object obj24 = properties18.setProperty("", "hi!");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties25 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties25.setSerialJtaTransactions(false);
        boolean boolean28 = properties10.remove((java.lang.Object) properties18, (java.lang.Object) atomikosProperties25);
        java.util.Properties properties29 = new java.util.Properties(properties18);
        int int30 = properties29.size();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties32 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties32.setSerialJtaTransactions(false);
        boolean boolean35 = atomikosProperties32.isSerialJtaTransactions();
        java.lang.String str36 = atomikosProperties32.getService();
        boolean boolean37 = atomikosProperties32.isEnableLogging();
        java.lang.String str38 = atomikosProperties32.getTransactionManagerUniqueName();
        boolean boolean39 = properties29.remove((java.lang.Object) (byte) 1, (java.lang.Object) atomikosProperties32);
        java.util.Properties properties40 = new java.util.Properties();
        java.lang.Object obj42 = properties40.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration43 = properties40.elements();
        boolean boolean44 = properties40.isEmpty();
        java.util.Enumeration<java.lang.Object> objEnumeration45 = properties40.elements();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet46 = properties40.entrySet();
        java.lang.Object obj47 = properties29.remove((java.lang.Object) objEntrySet46);
        boolean boolean48 = properties29.isEmpty();
        java.util.Properties properties49 = new java.util.Properties();
        java.lang.Object obj51 = properties49.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration52 = properties49.elements();
        boolean boolean53 = properties49.isEmpty();
        java.util.Set<java.lang.Object> objSet54 = properties49.keySet();
        java.util.Enumeration<java.lang.Object> objEnumeration55 = properties49.keys();
        java.lang.String str57 = properties49.getProperty("hi!");
        java.lang.String str59 = properties49.getProperty("");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties60 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties60.setSerialJtaTransactions(false);
        atomikosProperties60.setThreadedTwoPhaseCommit(true);
        atomikosProperties60.setEnableLogging(false);
        boolean boolean67 = properties49.containsKey((java.lang.Object) atomikosProperties60);
        atomikosProperties60.setTransactionManagerUniqueName("tmlog");
        boolean boolean70 = atomikosProperties60.isForceShutdownOnVmExit();
        java.lang.Object obj71 = properties0.put((java.lang.Object) boolean48, (java.lang.Object) atomikosProperties60);
        atomikosProperties60.setLogBaseName("");
        atomikosProperties60.setDefaultJtaTimeout((long) (short) 100);
        atomikosProperties60.setLogBaseName("{}");
        long long78 = atomikosProperties60.getDefaultJtaTimeout();
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(objEnumeration3);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNotNull(objEntrySet6);
        org.junit.Assert.assertNull(obj9);
        org.junit.Assert.assertNull(obj12);
        org.junit.Assert.assertNotNull(objEnumeration13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(objSet15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(objEntrySet17);
        org.junit.Assert.assertNull(obj20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNull(obj24);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 0 + "'", int30 == 0);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNull(str36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertNull(str38);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNull(obj42);
        org.junit.Assert.assertNotNull(objEnumeration43);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertNotNull(objEnumeration45);
        org.junit.Assert.assertNotNull(objEntrySet46);
        org.junit.Assert.assertNull(obj47);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertNull(obj51);
        org.junit.Assert.assertNotNull(objEnumeration52);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertNotNull(objSet54);
        org.junit.Assert.assertNotNull(objEnumeration55);
        org.junit.Assert.assertNull(str57);
        org.junit.Assert.assertNull(str59);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertNull(obj71);
        org.junit.Assert.assertTrue("'" + long78 + "' != '" + 100L + "'", long78 == 100L);
    }

    @Test
    public void test7753() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7753");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration3 = properties0.elements();
        boolean boolean4 = properties0.isEmpty();
        java.util.Set<java.lang.Object> objSet5 = properties0.keySet();
        java.util.Enumeration<java.lang.Object> objEnumeration6 = properties0.keys();
        boolean boolean8 = properties0.equals((java.lang.Object) "");
        java.lang.String str9 = properties0.toString();
        boolean boolean10 = properties0.isEmpty();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties11 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties11.setSerialJtaTransactions(false);
        boolean boolean14 = atomikosProperties11.isSerialJtaTransactions();
        boolean boolean15 = atomikosProperties11.isEnableLogging();
        long long16 = atomikosProperties11.getMaxTimeout();
        atomikosProperties11.setLogBaseName("{=hi!}");
        java.lang.Object obj19 = properties0.get((java.lang.Object) atomikosProperties11);
        java.lang.String str20 = properties0.toString();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties21 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties21.setSerialJtaTransactions(false);
        atomikosProperties21.setThreadedTwoPhaseCommit(true);
        atomikosProperties21.setMaxTimeout((long) '#');
        long long28 = atomikosProperties21.getCheckpointInterval();
        java.lang.String str29 = atomikosProperties21.getTransactionManagerUniqueName();
        atomikosProperties21.setDefaultJtaTimeout((long) 0);
        java.util.Properties properties32 = atomikosProperties21.asProperties();
        java.util.Set<java.lang.String> strSet33 = properties32.stringPropertyNames();
        boolean boolean34 = properties0.containsKey((java.lang.Object) properties32);
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet35 = properties0.entrySet();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties36 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties36.setSerialJtaTransactions(false);
        boolean boolean39 = atomikosProperties36.isSerialJtaTransactions();
        atomikosProperties36.setMaxActives(0);
        java.lang.String str42 = atomikosProperties36.getTransactionManagerUniqueName();
        atomikosProperties36.setTransactionManagerUniqueName("{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=false, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
        atomikosProperties36.setMaxActives((int) '#');
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties47 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties47.setSerialJtaTransactions(false);
        boolean boolean50 = atomikosProperties47.isSerialJtaTransactions();
        atomikosProperties47.setTransactionManagerUniqueName("tmlog");
        java.util.Properties properties53 = atomikosProperties47.asProperties();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties54 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties54.setSerialJtaTransactions(false);
        boolean boolean57 = atomikosProperties54.isSerialJtaTransactions();
        atomikosProperties54.setTransactionManagerUniqueName("hi!");
        boolean boolean60 = atomikosProperties54.isEnableLogging();
        java.lang.String str61 = atomikosProperties54.getTransactionManagerUniqueName();
        atomikosProperties54.setCheckpointInterval(1L);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties64 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties64.setSerialJtaTransactions(false);
        atomikosProperties64.setThreadedTwoPhaseCommit(true);
        atomikosProperties64.setThreadedTwoPhaseCommit(true);
        java.util.Properties properties71 = atomikosProperties64.asProperties();
        int int72 = atomikosProperties64.getMaxActives();
        atomikosProperties64.setService("hi!");
        long long75 = atomikosProperties64.getMaxTimeout();
        atomikosProperties64.setTransactionManagerUniqueName("hi!");
        java.util.Properties properties78 = atomikosProperties64.asProperties();
        java.lang.Object obj79 = properties53.getOrDefault((java.lang.Object) atomikosProperties54, (java.lang.Object) properties78);
        boolean boolean80 = properties0.remove((java.lang.Object) atomikosProperties36, (java.lang.Object) properties78);
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet81 = properties78.entrySet();
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(objEnumeration3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(objSet5);
        org.junit.Assert.assertNotNull(objEnumeration6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "{}" + "'", str9, "{}");
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertTrue("'" + long16 + "' != '" + 300000L + "'", long16 == 300000L);
        org.junit.Assert.assertNull(obj19);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "{}" + "'", str20, "{}");
        org.junit.Assert.assertTrue("'" + long28 + "' != '" + 500L + "'", long28 == 500L);
        org.junit.Assert.assertNull(str29);
        org.junit.Assert.assertNotNull(properties32);
        org.junit.Assert.assertNotNull(strSet33);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(objEntrySet35);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNull(str42);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertNotNull(properties53);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "hi!" + "'", str61, "hi!");
        org.junit.Assert.assertNotNull(properties71);
        org.junit.Assert.assertTrue("'" + int72 + "' != '" + 50 + "'", int72 == 50);
        org.junit.Assert.assertTrue("'" + long75 + "' != '" + 300000L + "'", long75 == 300000L);
        org.junit.Assert.assertNotNull(properties78);
        org.junit.Assert.assertNotNull(obj79);
// flaky:         org.junit.Assert.assertEquals(obj79.toString(), "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=false, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.service=hi!, com.atomikos.icatch.threaded_2pc=true, com.atomikos.icatch.tm_unique_name=hi!, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
// flaky:         org.junit.Assert.assertEquals(java.lang.String.valueOf(obj79), "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=false, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.service=hi!, com.atomikos.icatch.threaded_2pc=true, com.atomikos.icatch.tm_unique_name=hi!, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
// flaky:         org.junit.Assert.assertEquals(java.util.Objects.toString(obj79), "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=false, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.service=hi!, com.atomikos.icatch.threaded_2pc=true, com.atomikos.icatch.tm_unique_name=hi!, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", boolean80 == false);
        org.junit.Assert.assertNotNull(objEntrySet81);
    }

    @Test
    public void test7754() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7754");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration3 = properties0.elements();
        int int4 = properties0.size();
        java.util.Properties properties5 = new java.util.Properties();
        java.lang.Object obj7 = properties5.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration8 = properties5.elements();
        boolean boolean9 = properties5.isEmpty();
        java.util.Set<java.lang.Object> objSet10 = properties5.keySet();
        boolean boolean11 = properties0.containsKey((java.lang.Object) objSet10);
        java.util.Enumeration<java.lang.Object> objEnumeration12 = properties0.keys();
        java.util.Properties properties13 = new java.util.Properties();
        java.lang.Object obj15 = properties13.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration16 = properties13.elements();
        boolean boolean17 = properties13.isEmpty();
        java.util.Set<java.lang.Object> objSet18 = properties13.keySet();
        java.util.Enumeration<java.lang.Object> objEnumeration19 = properties13.keys();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet20 = properties13.entrySet();
        boolean boolean22 = properties0.remove((java.lang.Object) properties13, (java.lang.Object) 1.0f);
        java.lang.Object obj23 = properties13.clone();
        java.util.Properties properties24 = new java.util.Properties();
        java.lang.Object obj26 = properties24.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration27 = properties24.elements();
        boolean boolean28 = properties24.isEmpty();
        java.lang.Object obj31 = properties24.setProperty("tmlog", "");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties32 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties32.setSerialJtaTransactions(false);
        boolean boolean35 = atomikosProperties32.isSerialJtaTransactions();
        atomikosProperties32.setTransactionManagerUniqueName("hi!");
        atomikosProperties32.setForceShutdownOnVmExit(false);
        atomikosProperties32.setDefaultJtaTimeout((long) (byte) 10);
        java.lang.String str42 = atomikosProperties32.getTransactionManagerUniqueName();
        java.util.Properties properties43 = new java.util.Properties();
        java.util.Properties properties44 = new java.util.Properties();
        java.lang.Object obj46 = properties44.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet47 = properties44.stringPropertyNames();
        boolean boolean48 = properties43.containsValue((java.lang.Object) properties44);
        java.util.Collection<java.lang.Object> objCollection49 = properties43.values();
        java.util.Properties properties51 = new java.util.Properties();
        java.lang.Object obj53 = properties51.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration54 = properties51.elements();
        boolean boolean55 = properties51.isEmpty();
        java.util.Set<java.lang.Object> objSet56 = properties51.keySet();
        java.lang.Object obj57 = properties43.putIfAbsent((java.lang.Object) "hi!", (java.lang.Object) objSet56);
        java.util.Set<java.lang.Object> objSet58 = properties43.keySet();
        java.util.Set<java.lang.Object> objSet59 = properties43.keySet();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet60 = properties43.entrySet();
        java.util.Set<java.lang.Object> objSet61 = properties43.keySet();
        java.lang.Object obj62 = properties24.replace((java.lang.Object) atomikosProperties32, (java.lang.Object) properties43);
        boolean boolean63 = properties13.containsKey((java.lang.Object) properties43);
        java.util.Enumeration<?> wildcardEnumeration64 = properties43.propertyNames();
        java.util.Enumeration<java.lang.Object> objEnumeration65 = properties43.elements();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties66 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties66.setSerialJtaTransactions(false);
        boolean boolean69 = atomikosProperties66.isSerialJtaTransactions();
        java.util.Properties properties70 = atomikosProperties66.asProperties();
        int int71 = atomikosProperties66.getMaxActives();
        atomikosProperties66.setForceShutdownOnVmExit(false);
        atomikosProperties66.setForceShutdownOnVmExit(false);
        boolean boolean76 = atomikosProperties66.isThreadedTwoPhaseCommit();
        java.lang.Object obj77 = properties43.get((java.lang.Object) atomikosProperties66);
        java.lang.Object obj80 = properties43.setProperty("{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=100, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=35, com.atomikos.icatch.threaded_2pc=true, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}", "{hi!=[]}");
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(objEnumeration3);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNull(obj7);
        org.junit.Assert.assertNotNull(objEnumeration8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertNotNull(objSet10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(objEnumeration12);
        org.junit.Assert.assertNull(obj15);
        org.junit.Assert.assertNotNull(objEnumeration16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(objSet18);
        org.junit.Assert.assertNotNull(objEnumeration19);
        org.junit.Assert.assertNotNull(objEntrySet20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(obj23);
        org.junit.Assert.assertEquals(obj23.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj23), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj23), "{}");
        org.junit.Assert.assertNull(obj26);
        org.junit.Assert.assertNotNull(objEnumeration27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNull(obj31);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "hi!" + "'", str42, "hi!");
        org.junit.Assert.assertNull(obj46);
        org.junit.Assert.assertNotNull(strSet47);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNotNull(objCollection49);
        org.junit.Assert.assertNull(obj53);
        org.junit.Assert.assertNotNull(objEnumeration54);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertNotNull(objSet56);
        org.junit.Assert.assertNull(obj57);
        org.junit.Assert.assertNotNull(objSet58);
        org.junit.Assert.assertNotNull(objSet59);
        org.junit.Assert.assertNotNull(objEntrySet60);
        org.junit.Assert.assertNotNull(objSet61);
        org.junit.Assert.assertNull(obj62);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertNotNull(wildcardEnumeration64);
        org.junit.Assert.assertNotNull(objEnumeration65);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertNotNull(properties70);
        org.junit.Assert.assertTrue("'" + int71 + "' != '" + 50 + "'", int71 == 50);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
        org.junit.Assert.assertNull(obj77);
        org.junit.Assert.assertNull(obj80);
    }

    @Test
    public void test7755() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7755");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        boolean boolean4 = properties0.containsValue((java.lang.Object) "hi!");
        java.lang.Object obj7 = properties0.put((java.lang.Object) (byte) -1, (java.lang.Object) 100L);
        java.util.Properties properties8 = new java.util.Properties();
        java.util.Properties properties9 = new java.util.Properties();
        java.lang.Object obj11 = properties9.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet12 = properties9.stringPropertyNames();
        boolean boolean13 = properties8.containsValue((java.lang.Object) properties9);
        java.util.Collection<java.lang.Object> objCollection14 = properties8.values();
        java.util.Properties properties16 = new java.util.Properties();
        java.lang.Object obj18 = properties16.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration19 = properties16.elements();
        boolean boolean20 = properties16.isEmpty();
        java.util.Set<java.lang.Object> objSet21 = properties16.keySet();
        java.lang.Object obj22 = properties8.putIfAbsent((java.lang.Object) "hi!", (java.lang.Object) objSet21);
        java.util.Set<java.lang.Object> objSet23 = properties8.keySet();
        boolean boolean24 = properties0.containsKey((java.lang.Object) properties8);
        java.util.Enumeration<java.lang.Object> objEnumeration25 = properties8.elements();
        java.util.Properties properties26 = new java.util.Properties();
        java.lang.Object obj28 = properties26.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration29 = properties26.elements();
        boolean boolean30 = properties26.isEmpty();
        java.util.Set<java.lang.Object> objSet31 = properties26.keySet();
        boolean boolean32 = properties26.isEmpty();
        boolean boolean33 = properties8.contains((java.lang.Object) boolean32);
        java.util.Properties properties34 = new java.util.Properties();
        java.lang.Object obj36 = properties34.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration37 = properties34.elements();
        java.util.Properties properties39 = new java.util.Properties();
        java.lang.Object obj41 = properties39.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration42 = properties39.elements();
        boolean boolean43 = properties39.isEmpty();
        java.util.Set<java.lang.Object> objSet44 = properties39.keySet();
        boolean boolean45 = properties39.isEmpty();
        java.lang.Object obj46 = properties34.getOrDefault((java.lang.Object) true, (java.lang.Object) boolean45);
        java.util.Properties properties47 = new java.util.Properties();
        java.lang.Object obj49 = properties47.remove((java.lang.Object) 0.0d);
        boolean boolean50 = properties47.isEmpty();
        java.util.Enumeration<java.lang.Object> objEnumeration51 = properties47.keys();
        java.util.Properties properties52 = new java.util.Properties();
        java.lang.Object obj54 = properties52.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet55 = properties52.stringPropertyNames();
        java.util.Properties properties56 = new java.util.Properties();
        java.util.Properties properties57 = new java.util.Properties();
        java.lang.Object obj59 = properties57.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet60 = properties57.stringPropertyNames();
        boolean boolean61 = properties56.containsValue((java.lang.Object) properties57);
        java.util.Collection<java.lang.Object> objCollection62 = properties56.values();
        java.util.Enumeration<?> wildcardEnumeration63 = properties56.propertyNames();
        java.lang.Object obj65 = properties52.put((java.lang.Object) wildcardEnumeration63, (java.lang.Object) 10.0d);
        java.util.Properties properties66 = new java.util.Properties();
        java.util.Properties properties67 = new java.util.Properties();
        java.lang.Object obj69 = properties67.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet70 = properties67.stringPropertyNames();
        boolean boolean71 = properties66.containsValue((java.lang.Object) properties67);
        java.util.Collection<java.lang.Object> objCollection72 = properties66.values();
        java.lang.Object obj73 = properties66.clone();
        boolean boolean74 = properties34.replace((java.lang.Object) properties47, (java.lang.Object) 10.0d, obj73);
        java.util.Collection<java.lang.Object> objCollection75 = properties47.values();
        boolean boolean76 = properties8.containsValue((java.lang.Object) properties47);
        java.util.Set<java.lang.Object> objSet77 = properties47.keySet();
        java.util.Collection<java.lang.Object> objCollection78 = properties47.values();
        java.lang.Class<?> wildcardClass79 = objCollection78.getClass();
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNull(obj7);
        org.junit.Assert.assertNull(obj11);
        org.junit.Assert.assertNotNull(strSet12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(objCollection14);
        org.junit.Assert.assertNull(obj18);
        org.junit.Assert.assertNotNull(objEnumeration19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNotNull(objSet21);
        org.junit.Assert.assertNull(obj22);
        org.junit.Assert.assertNotNull(objSet23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(objEnumeration25);
        org.junit.Assert.assertNull(obj28);
        org.junit.Assert.assertNotNull(objEnumeration29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNotNull(objSet31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNull(obj36);
        org.junit.Assert.assertNotNull(objEnumeration37);
        org.junit.Assert.assertNull(obj41);
        org.junit.Assert.assertNotNull(objEnumeration42);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNotNull(objSet44);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertEquals("'" + obj46 + "' != '" + true + "'", obj46, true);
        org.junit.Assert.assertNull(obj49);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertNotNull(objEnumeration51);
        org.junit.Assert.assertNull(obj54);
        org.junit.Assert.assertNotNull(strSet55);
        org.junit.Assert.assertNull(obj59);
        org.junit.Assert.assertNotNull(strSet60);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertNotNull(objCollection62);
        org.junit.Assert.assertNotNull(wildcardEnumeration63);
        org.junit.Assert.assertNull(obj65);
        org.junit.Assert.assertNull(obj69);
        org.junit.Assert.assertNotNull(strSet70);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertNotNull(objCollection72);
        org.junit.Assert.assertNotNull(obj73);
        org.junit.Assert.assertEquals(obj73.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj73), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj73), "{}");
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
        org.junit.Assert.assertNotNull(objCollection75);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
        org.junit.Assert.assertNotNull(objSet77);
        org.junit.Assert.assertNotNull(objCollection78);
        org.junit.Assert.assertNotNull(wildcardClass79);
    }

    @Test
    public void test7756() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7756");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setSerialJtaTransactions(false);
        atomikosProperties0.setThreadedTwoPhaseCommit(true);
        java.lang.String str5 = atomikosProperties0.getLogBaseName();
        atomikosProperties0.setCheckpointInterval((long) 0);
        boolean boolean8 = atomikosProperties0.isEnableLogging();
        java.util.Properties properties9 = atomikosProperties0.asProperties();
        atomikosProperties0.setEnableLogging(true);
        int int12 = atomikosProperties0.getMaxActives();
        atomikosProperties0.setService("{}");
        atomikosProperties0.setLogBaseName("");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "tmlog" + "'", str5, "tmlog");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(properties9);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 50 + "'", int12 == 50);
    }

    @Test
    public void test7757() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7757");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        java.util.Properties properties3 = new java.util.Properties();
        java.util.Collection<java.lang.Object> objCollection4 = properties3.values();
        java.util.Enumeration<java.lang.Object> objEnumeration5 = properties3.keys();
        java.util.Properties properties6 = new java.util.Properties();
        java.lang.Object obj8 = properties6.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration9 = properties6.elements();
        boolean boolean10 = properties6.isEmpty();
        java.util.Set<java.lang.Object> objSet11 = properties6.keySet();
        java.util.Enumeration<java.lang.Object> objEnumeration12 = properties6.keys();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet13 = properties6.entrySet();
        java.lang.Object obj14 = properties0.put((java.lang.Object) properties3, (java.lang.Object) properties6);
        java.util.Properties properties15 = new java.util.Properties();
        java.util.Properties properties16 = new java.util.Properties();
        java.lang.Object obj18 = properties16.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet19 = properties16.stringPropertyNames();
        boolean boolean20 = properties15.containsValue((java.lang.Object) properties16);
        java.util.Collection<java.lang.Object> objCollection21 = properties15.values();
        java.util.Properties properties23 = new java.util.Properties();
        java.lang.Object obj25 = properties23.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration26 = properties23.elements();
        boolean boolean27 = properties23.isEmpty();
        java.util.Set<java.lang.Object> objSet28 = properties23.keySet();
        java.lang.Object obj29 = properties15.putIfAbsent((java.lang.Object) "hi!", (java.lang.Object) objSet28);
        java.util.Set<java.lang.Object> objSet30 = properties15.keySet();
        java.util.Set<java.lang.Object> objSet31 = properties15.keySet();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet32 = properties15.entrySet();
        java.lang.Object obj33 = properties3.remove((java.lang.Object) objEntrySet32);
        java.lang.String str34 = properties3.toString();
        java.util.Properties properties35 = new java.util.Properties();
        java.lang.Object obj37 = properties35.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet38 = properties35.stringPropertyNames();
        java.lang.String str39 = properties35.toString();
        java.lang.String str40 = properties35.toString();
        java.util.Set<java.lang.Object> objSet41 = properties35.keySet();
        java.util.Properties properties42 = new java.util.Properties();
        java.lang.Object obj44 = properties42.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration45 = properties42.elements();
        boolean boolean46 = properties42.isEmpty();
        java.util.Set<java.lang.Object> objSet47 = properties42.keySet();
        boolean boolean48 = properties42.isEmpty();
        java.lang.Object obj49 = properties3.putIfAbsent((java.lang.Object) properties35, (java.lang.Object) boolean48);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties50 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties50.setSerialJtaTransactions(false);
        boolean boolean53 = atomikosProperties50.isSerialJtaTransactions();
        java.util.Properties properties54 = atomikosProperties50.asProperties();
        int int55 = atomikosProperties50.getMaxActives();
        boolean boolean57 = properties3.remove((java.lang.Object) int55, (java.lang.Object) 500L);
        java.util.Properties properties58 = new java.util.Properties();
        java.lang.Object obj60 = properties58.remove((java.lang.Object) 0.0d);
        boolean boolean61 = properties58.isEmpty();
        java.lang.Object obj64 = properties58.setProperty("", "hi!");
        java.util.Properties properties65 = new java.util.Properties();
        java.lang.Object obj67 = properties65.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration68 = properties65.elements();
        boolean boolean69 = properties65.isEmpty();
        java.util.Set<java.lang.Object> objSet70 = properties65.keySet();
        boolean boolean71 = properties65.isEmpty();
        java.util.Properties properties72 = new java.util.Properties();
        java.util.Collection<java.lang.Object> objCollection73 = properties72.values();
        java.util.Enumeration<java.lang.Object> objEnumeration74 = properties72.keys();
        java.lang.Object obj75 = properties65.remove((java.lang.Object) properties72);
        java.lang.Object obj76 = properties58.get((java.lang.Object) properties72);
        java.util.Enumeration<java.lang.Object> objEnumeration77 = properties72.keys();
        java.lang.Object obj79 = properties3.replace((java.lang.Object) properties72, (java.lang.Object) 1);
        int int80 = properties72.size();
        java.lang.String str81 = properties72.toString();
        java.io.Reader reader82 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties72.load(reader82);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(objCollection4);
        org.junit.Assert.assertNotNull(objEnumeration5);
        org.junit.Assert.assertNull(obj8);
        org.junit.Assert.assertNotNull(objEnumeration9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(objSet11);
        org.junit.Assert.assertNotNull(objEnumeration12);
        org.junit.Assert.assertNotNull(objEntrySet13);
        org.junit.Assert.assertNull(obj14);
        org.junit.Assert.assertNull(obj18);
        org.junit.Assert.assertNotNull(strSet19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(objCollection21);
        org.junit.Assert.assertNull(obj25);
        org.junit.Assert.assertNotNull(objEnumeration26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNotNull(objSet28);
        org.junit.Assert.assertNull(obj29);
        org.junit.Assert.assertNotNull(objSet30);
        org.junit.Assert.assertNotNull(objSet31);
        org.junit.Assert.assertNotNull(objEntrySet32);
        org.junit.Assert.assertNull(obj33);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "{}" + "'", str34, "{}");
        org.junit.Assert.assertNull(obj37);
        org.junit.Assert.assertNotNull(strSet38);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "{}" + "'", str39, "{}");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "{}" + "'", str40, "{}");
        org.junit.Assert.assertNotNull(objSet41);
        org.junit.Assert.assertNull(obj44);
        org.junit.Assert.assertNotNull(objEnumeration45);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertNotNull(objSet47);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertNull(obj49);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertNotNull(properties54);
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + 50 + "'", int55 == 50);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertNull(obj60);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertNull(obj64);
        org.junit.Assert.assertNull(obj67);
        org.junit.Assert.assertNotNull(objEnumeration68);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + true + "'", boolean69 == true);
        org.junit.Assert.assertNotNull(objSet70);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + true + "'", boolean71 == true);
        org.junit.Assert.assertNotNull(objCollection73);
        org.junit.Assert.assertNotNull(objEnumeration74);
        org.junit.Assert.assertNull(obj75);
        org.junit.Assert.assertNull(obj76);
        org.junit.Assert.assertNotNull(objEnumeration77);
        org.junit.Assert.assertEquals("'" + obj79 + "' != '" + true + "'", obj79, true);
        org.junit.Assert.assertTrue("'" + int80 + "' != '" + 0 + "'", int80 == 0);
        org.junit.Assert.assertEquals("'" + str81 + "' != '" + "{}" + "'", str81, "{}");
    }

    @Test
    public void test7758() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7758");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration3 = properties0.elements();
        boolean boolean4 = properties0.isEmpty();
        java.util.Set<java.lang.Object> objSet5 = properties0.keySet();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties6 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties6.setSerialJtaTransactions(false);
        atomikosProperties6.setThreadedTwoPhaseCommit(true);
        atomikosProperties6.setThreadedTwoPhaseCommit(true);
        java.util.Properties properties13 = atomikosProperties6.asProperties();
        int int14 = atomikosProperties6.getMaxActives();
        java.util.Properties properties15 = new java.util.Properties();
        java.lang.Object obj17 = properties15.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration18 = properties15.elements();
        boolean boolean19 = properties15.isEmpty();
        java.util.Set<java.lang.Object> objSet20 = properties15.keySet();
        boolean boolean22 = properties15.containsKey((java.lang.Object) (-1.0f));
        java.lang.Object obj23 = properties0.put((java.lang.Object) atomikosProperties6, (java.lang.Object) properties15);
        atomikosProperties6.setLogBaseDir("hi!");
        atomikosProperties6.setEnableLogging(false);
        atomikosProperties6.setLogBaseName("hi!");
        atomikosProperties6.setCheckpointInterval((long) 50);
        atomikosProperties6.setLogBaseName("{com.atomikos.icatch.enable_logging=false, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=1, com.atomikos.icatch.serial_jta_transactions=false, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
        atomikosProperties6.setService("{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=100, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=35, com.atomikos.icatch.threaded_2pc=true, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(objEnumeration3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(objSet5);
        org.junit.Assert.assertNotNull(properties13);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 50 + "'", int14 == 50);
        org.junit.Assert.assertNull(obj17);
        org.junit.Assert.assertNotNull(objEnumeration18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(objSet20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNull(obj23);
    }

    @Test
    public void test7759() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7759");
        java.util.Properties properties0 = new java.util.Properties();
        boolean boolean2 = properties0.contains((java.lang.Object) 100.0d);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties3 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties3.setSerialJtaTransactions(false);
        atomikosProperties3.setThreadedTwoPhaseCommit(true);
        atomikosProperties3.setSerialJtaTransactions(false);
        java.lang.String str10 = atomikosProperties3.getService();
        boolean boolean11 = properties0.containsKey((java.lang.Object) atomikosProperties3);
        java.lang.String str12 = atomikosProperties3.getService();
        java.util.Properties properties13 = atomikosProperties3.asProperties();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties14 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties14.setSerialJtaTransactions(false);
        atomikosProperties14.setThreadedTwoPhaseCommit(true);
        atomikosProperties14.setThreadedTwoPhaseCommit(true);
        java.util.Properties properties21 = atomikosProperties14.asProperties();
        int int22 = atomikosProperties14.getMaxActives();
        atomikosProperties14.setService("hi!");
        long long25 = atomikosProperties14.getMaxTimeout();
        atomikosProperties14.setLogBaseDir("hi!");
        boolean boolean28 = atomikosProperties14.isForceShutdownOnVmExit();
        boolean boolean29 = properties13.equals((java.lang.Object) atomikosProperties14);
        java.lang.String str30 = atomikosProperties14.getLogBaseName();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNotNull(properties13);
        org.junit.Assert.assertNotNull(properties21);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 50 + "'", int22 == 50);
        org.junit.Assert.assertTrue("'" + long25 + "' != '" + 300000L + "'", long25 == 300000L);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "tmlog" + "'", str30, "tmlog");
    }

    @Test
    public void test7760() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7760");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        boolean boolean4 = properties0.containsValue((java.lang.Object) "hi!");
        java.lang.Object obj7 = properties0.put((java.lang.Object) (byte) -1, (java.lang.Object) 100L);
        java.util.Properties properties8 = new java.util.Properties();
        java.util.Properties properties9 = new java.util.Properties();
        java.lang.Object obj11 = properties9.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet12 = properties9.stringPropertyNames();
        boolean boolean13 = properties8.containsValue((java.lang.Object) properties9);
        java.util.Collection<java.lang.Object> objCollection14 = properties8.values();
        java.util.Properties properties16 = new java.util.Properties();
        java.lang.Object obj18 = properties16.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration19 = properties16.elements();
        boolean boolean20 = properties16.isEmpty();
        java.util.Set<java.lang.Object> objSet21 = properties16.keySet();
        java.lang.Object obj22 = properties8.putIfAbsent((java.lang.Object) "hi!", (java.lang.Object) objSet21);
        java.util.Set<java.lang.Object> objSet23 = properties8.keySet();
        boolean boolean24 = properties0.containsKey((java.lang.Object) properties8);
        java.util.Enumeration<?> wildcardEnumeration25 = properties8.propertyNames();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties26 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties26.setSerialJtaTransactions(false);
        atomikosProperties26.setThreadedTwoPhaseCommit(true);
        atomikosProperties26.setEnableLogging(false);
        boolean boolean33 = atomikosProperties26.isSerialJtaTransactions();
        int int34 = atomikosProperties26.getMaxActives();
        boolean boolean35 = atomikosProperties26.isEnableLogging();
        atomikosProperties26.setDefaultJtaTimeout(10000L);
        java.util.Properties properties38 = atomikosProperties26.asProperties();
        java.lang.Object obj39 = properties8.get((java.lang.Object) atomikosProperties26);
        java.lang.String str40 = atomikosProperties26.getLogBaseName();
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNull(obj7);
        org.junit.Assert.assertNull(obj11);
        org.junit.Assert.assertNotNull(strSet12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(objCollection14);
        org.junit.Assert.assertNull(obj18);
        org.junit.Assert.assertNotNull(objEnumeration19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNotNull(objSet21);
        org.junit.Assert.assertNull(obj22);
        org.junit.Assert.assertNotNull(objSet23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(wildcardEnumeration25);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 50 + "'", int34 == 50);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(properties38);
        org.junit.Assert.assertNull(obj39);
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "tmlog" + "'", str40, "tmlog");
    }

    @Test
    public void test7761() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7761");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration3 = properties0.elements();
        boolean boolean4 = properties0.isEmpty();
        java.util.Set<java.lang.Object> objSet5 = properties0.keySet();
        boolean boolean6 = properties0.isEmpty();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet7 = properties0.entrySet();
        java.util.Set<java.lang.Object> objSet8 = properties0.keySet();
        boolean boolean9 = properties0.isEmpty();
        java.util.Enumeration<java.lang.Object> objEnumeration10 = properties0.keys();
        java.lang.Object obj13 = properties0.setProperty("", "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=false, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, hi!=, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
        java.lang.Object obj16 = properties0.setProperty("", "{[com.atomikos.icatch.enable_logging, com.atomikos.icatch.force_shutdown_on_vm_exit, com.atomikos.icatch.checkpoint_interval, com.atomikos.icatch.serial_jta_transactions, com.atomikos.icatch.default_jta_timeout, com.atomikos.icatch.max_timeout, com.atomikos.icatch.threaded_2pc, com.atomikos.icatch.max_actives, com.atomikos.icatch.log_base_name]=false}");
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(objEnumeration3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(objSet5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(objEntrySet7);
        org.junit.Assert.assertNotNull(objSet8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertNotNull(objEnumeration10);
        org.junit.Assert.assertNull(obj13);
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=false, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, hi!=, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}" + "'", obj16, "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=false, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, hi!=, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
    }

    @Test
    public void test7762() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7762");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setSerialJtaTransactions(false);
        boolean boolean3 = atomikosProperties0.isSerialJtaTransactions();
        java.lang.String str4 = atomikosProperties0.getService();
        atomikosProperties0.setEnableLogging(false);
        java.util.Properties properties7 = atomikosProperties0.asProperties();
        int int8 = atomikosProperties0.getMaxActives();
        atomikosProperties0.setTransactionManagerUniqueName("{true=true}");
        atomikosProperties0.setForceShutdownOnVmExit(false);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertNotNull(properties7);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 50 + "'", int8 == 50);
    }

    @Test
    public void test7763() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7763");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        java.lang.String str4 = properties0.getProperty("");
        java.util.Properties properties5 = new java.util.Properties();
        java.lang.Object obj7 = properties5.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration8 = properties5.elements();
        boolean boolean9 = properties5.isEmpty();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet10 = properties5.entrySet();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties12 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties12.setSerialJtaTransactions(false);
        atomikosProperties12.setThreadedTwoPhaseCommit(true);
        atomikosProperties12.setMaxTimeout((long) '#');
        boolean boolean19 = atomikosProperties12.isForceShutdownOnVmExit();
        java.lang.Object obj20 = properties5.put((java.lang.Object) (short) 1, (java.lang.Object) atomikosProperties12);
        atomikosProperties12.setForceShutdownOnVmExit(true);
        long long23 = atomikosProperties12.getDefaultJtaTimeout();
        atomikosProperties12.setThreadedTwoPhaseCommit(false);
        java.lang.Object obj26 = properties0.get((java.lang.Object) atomikosProperties12);
        java.util.Enumeration<?> wildcardEnumeration27 = properties0.propertyNames();
        properties0.clear();
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertNull(obj7);
        org.junit.Assert.assertNotNull(objEnumeration8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertNotNull(objEntrySet10);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNull(obj20);
        org.junit.Assert.assertTrue("'" + long23 + "' != '" + 10000L + "'", long23 == 10000L);
        org.junit.Assert.assertNull(obj26);
        org.junit.Assert.assertNotNull(wildcardEnumeration27);
    }

    @Test
    public void test7764() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7764");
        java.util.Properties properties0 = new java.util.Properties();
        java.util.Properties properties1 = new java.util.Properties();
        java.lang.Object obj3 = properties1.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet4 = properties1.stringPropertyNames();
        boolean boolean5 = properties0.containsValue((java.lang.Object) properties1);
        java.util.Enumeration<?> wildcardEnumeration6 = properties1.propertyNames();
        java.util.Properties properties7 = new java.util.Properties();
        java.lang.Object obj9 = properties7.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration10 = properties7.elements();
        boolean boolean11 = properties7.isEmpty();
        java.util.Set<java.lang.Object> objSet12 = properties7.keySet();
        java.util.Enumeration<java.lang.Object> objEnumeration13 = properties7.keys();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet14 = properties7.entrySet();
        boolean boolean15 = properties1.containsValue((java.lang.Object) objEntrySet14);
        java.util.Properties properties16 = new java.util.Properties();
        java.util.Properties properties17 = new java.util.Properties();
        java.lang.Object obj19 = properties17.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet20 = properties17.stringPropertyNames();
        boolean boolean21 = properties16.containsValue((java.lang.Object) properties17);
        java.util.Collection<java.lang.Object> objCollection22 = properties16.values();
        java.util.Properties properties24 = new java.util.Properties();
        java.lang.Object obj26 = properties24.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration27 = properties24.elements();
        boolean boolean28 = properties24.isEmpty();
        java.util.Set<java.lang.Object> objSet29 = properties24.keySet();
        java.lang.Object obj30 = properties16.putIfAbsent((java.lang.Object) "hi!", (java.lang.Object) objSet29);
        java.util.Set<java.lang.Object> objSet31 = properties16.keySet();
        java.util.Set<java.lang.Object> objSet32 = properties16.keySet();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet33 = properties16.entrySet();
        java.util.Set<java.lang.Object> objSet34 = properties16.keySet();
        boolean boolean35 = properties1.equals((java.lang.Object) objSet34);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties36 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties36.setSerialJtaTransactions(false);
        boolean boolean39 = atomikosProperties36.isSerialJtaTransactions();
        boolean boolean40 = atomikosProperties36.isEnableLogging();
        atomikosProperties36.setService("");
        boolean boolean43 = properties1.equals((java.lang.Object) atomikosProperties36);
        java.util.Collection<java.lang.Object> objCollection44 = properties1.values();
        properties1.clear();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties46 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties46.setSerialJtaTransactions(false);
        atomikosProperties46.setThreadedTwoPhaseCommit(true);
        atomikosProperties46.setEnableLogging(false);
        boolean boolean53 = atomikosProperties46.isSerialJtaTransactions();
        int int54 = atomikosProperties46.getMaxActives();
        boolean boolean55 = atomikosProperties46.isEnableLogging();
        long long56 = atomikosProperties46.getCheckpointInterval();
        java.util.Properties properties57 = atomikosProperties46.asProperties();
        atomikosProperties46.setLogBaseName("");
        int int60 = atomikosProperties46.getMaxActives();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties61 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties61.setSerialJtaTransactions(false);
        boolean boolean64 = atomikosProperties61.isSerialJtaTransactions();
        java.util.Properties properties65 = atomikosProperties61.asProperties();
        java.lang.Object obj68 = properties65.setProperty("hi!", "");
        java.util.Properties properties69 = new java.util.Properties(properties65);
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet70 = properties65.entrySet();
        java.lang.Object obj71 = properties65.clone();
        java.util.Enumeration<java.lang.Object> objEnumeration72 = properties65.keys();
        java.lang.Class<?> wildcardClass73 = objEnumeration72.getClass();
        java.lang.Object obj74 = properties1.getOrDefault((java.lang.Object) int60, (java.lang.Object) wildcardClass73);
        java.io.Reader reader75 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties1.load(reader75);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(obj3);
        org.junit.Assert.assertNotNull(strSet4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(wildcardEnumeration6);
        org.junit.Assert.assertNull(obj9);
        org.junit.Assert.assertNotNull(objEnumeration10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNotNull(objSet12);
        org.junit.Assert.assertNotNull(objEnumeration13);
        org.junit.Assert.assertNotNull(objEntrySet14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNull(obj19);
        org.junit.Assert.assertNotNull(strSet20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(objCollection22);
        org.junit.Assert.assertNull(obj26);
        org.junit.Assert.assertNotNull(objEnumeration27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNotNull(objSet29);
        org.junit.Assert.assertNull(obj30);
        org.junit.Assert.assertNotNull(objSet31);
        org.junit.Assert.assertNotNull(objSet32);
        org.junit.Assert.assertNotNull(objEntrySet33);
        org.junit.Assert.assertNotNull(objSet34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(objCollection44);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + 50 + "'", int54 == 50);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertTrue("'" + long56 + "' != '" + 500L + "'", long56 == 500L);
        org.junit.Assert.assertNotNull(properties57);
        org.junit.Assert.assertTrue("'" + int60 + "' != '" + 50 + "'", int60 == 50);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertNotNull(properties65);
        org.junit.Assert.assertNull(obj68);
        org.junit.Assert.assertNotNull(objEntrySet70);
        org.junit.Assert.assertNotNull(obj71);
// flaky:         org.junit.Assert.assertEquals(obj71.toString(), "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=false, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, hi!=, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
// flaky:         org.junit.Assert.assertEquals(java.lang.String.valueOf(obj71), "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=false, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, hi!=, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
// flaky:         org.junit.Assert.assertEquals(java.util.Objects.toString(obj71), "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=false, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, hi!=, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
        org.junit.Assert.assertNotNull(objEnumeration72);
        org.junit.Assert.assertNotNull(wildcardClass73);
        org.junit.Assert.assertNotNull(obj74);
// flaky:         org.junit.Assert.assertEquals(obj74.toString(), "class java.util.Hashtable$Enumerator");
// flaky:         org.junit.Assert.assertEquals(java.lang.String.valueOf(obj74), "class java.util.Hashtable$Enumerator");
// flaky:         org.junit.Assert.assertEquals(java.util.Objects.toString(obj74), "class java.util.Hashtable$Enumerator");
    }

    @Test
    public void test7765() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7765");
        java.util.Properties properties0 = new java.util.Properties();
        boolean boolean2 = properties0.contains((java.lang.Object) 100.0d);
        java.util.Properties properties3 = new java.util.Properties();
        java.lang.Object obj5 = properties3.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration6 = properties3.elements();
        boolean boolean7 = properties3.isEmpty();
        java.util.Set<java.lang.Object> objSet8 = properties3.keySet();
        boolean boolean9 = properties3.isEmpty();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet10 = properties3.entrySet();
        java.util.Properties properties11 = new java.util.Properties();
        java.lang.Object obj13 = properties11.remove((java.lang.Object) 0.0d);
        boolean boolean14 = properties11.isEmpty();
        java.lang.Object obj17 = properties11.setProperty("", "hi!");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties18 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties18.setSerialJtaTransactions(false);
        boolean boolean21 = properties3.remove((java.lang.Object) properties11, (java.lang.Object) atomikosProperties18);
        boolean boolean22 = properties0.equals((java.lang.Object) properties3);
        java.util.Enumeration<java.lang.Object> objEnumeration23 = properties0.elements();
        java.lang.String str25 = properties0.getProperty("{tmlog=}");
        properties0.clear();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties27 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties27.setSerialJtaTransactions(false);
        atomikosProperties27.setThreadedTwoPhaseCommit(true);
        atomikosProperties27.setSerialJtaTransactions(false);
        atomikosProperties27.setService("{=hi!}");
        atomikosProperties27.setLogBaseDir("");
        boolean boolean38 = properties0.contains((java.lang.Object) atomikosProperties27);
        java.io.OutputStream outputStream39 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties0.storeToXML(outputStream39, "{{}={}}");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNull(obj5);
        org.junit.Assert.assertNotNull(objEnumeration6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(objSet8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertNotNull(objEntrySet10);
        org.junit.Assert.assertNull(obj13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNull(obj17);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNotNull(objEnumeration23);
        org.junit.Assert.assertNull(str25);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
    }

    @Test
    public void test7766() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7766");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        boolean boolean3 = properties0.isEmpty();
        java.lang.Object obj6 = properties0.setProperty("", "hi!");
        int int7 = properties0.size();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties8 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties8.setSerialJtaTransactions(false);
        boolean boolean11 = atomikosProperties8.isSerialJtaTransactions();
        java.lang.String str12 = atomikosProperties8.getService();
        atomikosProperties8.setEnableLogging(false);
        java.util.Properties properties15 = atomikosProperties8.asProperties();
        java.util.Properties properties16 = new java.util.Properties();
        java.lang.Object obj18 = properties16.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet19 = properties16.stringPropertyNames();
        java.util.Properties properties20 = new java.util.Properties();
        java.util.Properties properties21 = new java.util.Properties();
        java.lang.Object obj23 = properties21.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet24 = properties21.stringPropertyNames();
        boolean boolean25 = properties20.containsValue((java.lang.Object) properties21);
        java.util.Collection<java.lang.Object> objCollection26 = properties20.values();
        java.util.Enumeration<?> wildcardEnumeration27 = properties20.propertyNames();
        java.lang.Object obj29 = properties16.put((java.lang.Object) wildcardEnumeration27, (java.lang.Object) 10.0d);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties30 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties30.setSerialJtaTransactions(false);
        atomikosProperties30.setThreadedTwoPhaseCommit(true);
        atomikosProperties30.setMaxTimeout((long) '#');
        boolean boolean37 = atomikosProperties30.isForceShutdownOnVmExit();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties38 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties38.setSerialJtaTransactions(false);
        atomikosProperties38.setThreadedTwoPhaseCommit(true);
        atomikosProperties38.setThreadedTwoPhaseCommit(true);
        java.lang.Object obj45 = properties16.getOrDefault((java.lang.Object) boolean37, (java.lang.Object) atomikosProperties38);
        java.lang.Object obj46 = properties0.putIfAbsent((java.lang.Object) atomikosProperties8, (java.lang.Object) atomikosProperties38);
        java.lang.String str47 = atomikosProperties8.getTransactionManagerUniqueName();
        java.util.Properties properties48 = atomikosProperties8.asProperties();
        java.util.Properties properties49 = new java.util.Properties();
        java.lang.Object obj51 = properties49.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration52 = properties49.elements();
        int int53 = properties49.size();
        java.util.Properties properties54 = new java.util.Properties();
        java.lang.Object obj56 = properties54.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration57 = properties54.elements();
        boolean boolean58 = properties54.isEmpty();
        java.util.Set<java.lang.Object> objSet59 = properties54.keySet();
        boolean boolean60 = properties49.containsKey((java.lang.Object) objSet59);
        java.util.Enumeration<java.lang.Object> objEnumeration61 = properties49.keys();
        java.util.Properties properties62 = new java.util.Properties();
        java.lang.Object obj64 = properties62.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration65 = properties62.elements();
        boolean boolean66 = properties62.isEmpty();
        java.util.Set<java.lang.Object> objSet67 = properties62.keySet();
        java.util.Enumeration<java.lang.Object> objEnumeration68 = properties62.keys();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet69 = properties62.entrySet();
        boolean boolean71 = properties49.remove((java.lang.Object) properties62, (java.lang.Object) 1.0f);
        java.lang.Object obj72 = properties62.clone();
        java.util.Collection<java.lang.Object> objCollection73 = properties62.values();
        java.util.Properties properties74 = new java.util.Properties(properties62);
        java.util.Enumeration<java.lang.Object> objEnumeration75 = properties62.keys();
        boolean boolean76 = properties48.equals((java.lang.Object) properties62);
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNull(obj6);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 1 + "'", int7 == 1);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNotNull(properties15);
        org.junit.Assert.assertNull(obj18);
        org.junit.Assert.assertNotNull(strSet19);
        org.junit.Assert.assertNull(obj23);
        org.junit.Assert.assertNotNull(strSet24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(objCollection26);
        org.junit.Assert.assertNotNull(wildcardEnumeration27);
        org.junit.Assert.assertNull(obj29);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(obj45);
        org.junit.Assert.assertNull(obj46);
        org.junit.Assert.assertNull(str47);
        org.junit.Assert.assertNotNull(properties48);
        org.junit.Assert.assertNull(obj51);
        org.junit.Assert.assertNotNull(objEnumeration52);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 0 + "'", int53 == 0);
        org.junit.Assert.assertNull(obj56);
        org.junit.Assert.assertNotNull(objEnumeration57);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertNotNull(objSet59);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertNotNull(objEnumeration61);
        org.junit.Assert.assertNull(obj64);
        org.junit.Assert.assertNotNull(objEnumeration65);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66 == true);
        org.junit.Assert.assertNotNull(objSet67);
        org.junit.Assert.assertNotNull(objEnumeration68);
        org.junit.Assert.assertNotNull(objEntrySet69);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertNotNull(obj72);
        org.junit.Assert.assertEquals(obj72.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj72), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj72), "{}");
        org.junit.Assert.assertNotNull(objCollection73);
        org.junit.Assert.assertNotNull(objEnumeration75);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
    }

    @Test
    public void test7767() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7767");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        java.util.Properties properties3 = new java.util.Properties();
        java.util.Collection<java.lang.Object> objCollection4 = properties3.values();
        java.util.Enumeration<java.lang.Object> objEnumeration5 = properties3.keys();
        java.util.Properties properties6 = new java.util.Properties();
        java.lang.Object obj8 = properties6.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration9 = properties6.elements();
        boolean boolean10 = properties6.isEmpty();
        java.util.Set<java.lang.Object> objSet11 = properties6.keySet();
        java.util.Enumeration<java.lang.Object> objEnumeration12 = properties6.keys();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet13 = properties6.entrySet();
        java.lang.Object obj14 = properties0.put((java.lang.Object) properties3, (java.lang.Object) properties6);
        java.util.Properties properties15 = new java.util.Properties();
        java.util.Properties properties16 = new java.util.Properties();
        java.lang.Object obj18 = properties16.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet19 = properties16.stringPropertyNames();
        boolean boolean20 = properties15.containsValue((java.lang.Object) properties16);
        java.util.Collection<java.lang.Object> objCollection21 = properties15.values();
        java.util.Properties properties23 = new java.util.Properties();
        java.lang.Object obj25 = properties23.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration26 = properties23.elements();
        boolean boolean27 = properties23.isEmpty();
        java.util.Set<java.lang.Object> objSet28 = properties23.keySet();
        java.lang.Object obj29 = properties15.putIfAbsent((java.lang.Object) "hi!", (java.lang.Object) objSet28);
        java.util.Set<java.lang.Object> objSet30 = properties15.keySet();
        java.util.Set<java.lang.Object> objSet31 = properties15.keySet();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet32 = properties15.entrySet();
        java.lang.Object obj33 = properties3.remove((java.lang.Object) objEntrySet32);
        java.lang.String str34 = properties3.toString();
        java.util.Properties properties35 = new java.util.Properties();
        java.lang.Object obj37 = properties35.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet38 = properties35.stringPropertyNames();
        java.lang.String str39 = properties35.toString();
        java.lang.String str40 = properties35.toString();
        java.util.Set<java.lang.Object> objSet41 = properties35.keySet();
        java.util.Properties properties42 = new java.util.Properties();
        java.lang.Object obj44 = properties42.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration45 = properties42.elements();
        boolean boolean46 = properties42.isEmpty();
        java.util.Set<java.lang.Object> objSet47 = properties42.keySet();
        boolean boolean48 = properties42.isEmpty();
        java.lang.Object obj49 = properties3.putIfAbsent((java.lang.Object) properties35, (java.lang.Object) boolean48);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties50 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties50.setSerialJtaTransactions(false);
        boolean boolean53 = atomikosProperties50.isSerialJtaTransactions();
        java.util.Properties properties54 = atomikosProperties50.asProperties();
        int int55 = atomikosProperties50.getMaxActives();
        boolean boolean57 = properties3.remove((java.lang.Object) int55, (java.lang.Object) 500L);
        java.util.Properties properties58 = new java.util.Properties();
        java.lang.Object obj60 = properties58.remove((java.lang.Object) 0.0d);
        boolean boolean61 = properties58.isEmpty();
        java.lang.Object obj64 = properties58.setProperty("", "hi!");
        java.util.Properties properties65 = new java.util.Properties();
        java.lang.Object obj67 = properties65.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration68 = properties65.elements();
        boolean boolean69 = properties65.isEmpty();
        java.util.Set<java.lang.Object> objSet70 = properties65.keySet();
        boolean boolean71 = properties65.isEmpty();
        java.util.Properties properties72 = new java.util.Properties();
        java.util.Collection<java.lang.Object> objCollection73 = properties72.values();
        java.util.Enumeration<java.lang.Object> objEnumeration74 = properties72.keys();
        java.lang.Object obj75 = properties65.remove((java.lang.Object) properties72);
        java.lang.Object obj76 = properties58.get((java.lang.Object) properties72);
        java.util.Enumeration<java.lang.Object> objEnumeration77 = properties72.keys();
        java.lang.Object obj79 = properties3.replace((java.lang.Object) properties72, (java.lang.Object) 1);
        java.util.Properties properties80 = new java.util.Properties();
        java.util.Properties properties81 = new java.util.Properties();
        java.lang.Object obj83 = properties81.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet84 = properties81.stringPropertyNames();
        boolean boolean85 = properties80.containsValue((java.lang.Object) properties81);
        boolean boolean86 = properties81.isEmpty();
        java.util.Properties properties87 = new java.util.Properties(properties81);
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet88 = properties87.entrySet();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet89 = properties87.entrySet();
        java.lang.Object obj90 = properties72.get((java.lang.Object) objEntrySet89);
        boolean boolean91 = properties72.isEmpty();
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(objCollection4);
        org.junit.Assert.assertNotNull(objEnumeration5);
        org.junit.Assert.assertNull(obj8);
        org.junit.Assert.assertNotNull(objEnumeration9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(objSet11);
        org.junit.Assert.assertNotNull(objEnumeration12);
        org.junit.Assert.assertNotNull(objEntrySet13);
        org.junit.Assert.assertNull(obj14);
        org.junit.Assert.assertNull(obj18);
        org.junit.Assert.assertNotNull(strSet19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(objCollection21);
        org.junit.Assert.assertNull(obj25);
        org.junit.Assert.assertNotNull(objEnumeration26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNotNull(objSet28);
        org.junit.Assert.assertNull(obj29);
        org.junit.Assert.assertNotNull(objSet30);
        org.junit.Assert.assertNotNull(objSet31);
        org.junit.Assert.assertNotNull(objEntrySet32);
        org.junit.Assert.assertNull(obj33);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "{}" + "'", str34, "{}");
        org.junit.Assert.assertNull(obj37);
        org.junit.Assert.assertNotNull(strSet38);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "{}" + "'", str39, "{}");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "{}" + "'", str40, "{}");
        org.junit.Assert.assertNotNull(objSet41);
        org.junit.Assert.assertNull(obj44);
        org.junit.Assert.assertNotNull(objEnumeration45);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertNotNull(objSet47);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertNull(obj49);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertNotNull(properties54);
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + 50 + "'", int55 == 50);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertNull(obj60);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertNull(obj64);
        org.junit.Assert.assertNull(obj67);
        org.junit.Assert.assertNotNull(objEnumeration68);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + true + "'", boolean69 == true);
        org.junit.Assert.assertNotNull(objSet70);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + true + "'", boolean71 == true);
        org.junit.Assert.assertNotNull(objCollection73);
        org.junit.Assert.assertNotNull(objEnumeration74);
        org.junit.Assert.assertNull(obj75);
        org.junit.Assert.assertNull(obj76);
        org.junit.Assert.assertNotNull(objEnumeration77);
        org.junit.Assert.assertEquals("'" + obj79 + "' != '" + true + "'", obj79, true);
        org.junit.Assert.assertNull(obj83);
        org.junit.Assert.assertNotNull(strSet84);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + false + "'", boolean85 == false);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + true + "'", boolean86 == true);
        org.junit.Assert.assertNotNull(objEntrySet88);
        org.junit.Assert.assertNotNull(objEntrySet89);
        org.junit.Assert.assertNull(obj90);
        org.junit.Assert.assertTrue("'" + boolean91 + "' != '" + true + "'", boolean91 == true);
    }

    @Test
    public void test7768() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7768");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setSerialJtaTransactions(false);
        atomikosProperties0.setThreadedTwoPhaseCommit(true);
        atomikosProperties0.setEnableLogging(false);
        boolean boolean7 = atomikosProperties0.isSerialJtaTransactions();
        int int8 = atomikosProperties0.getMaxActives();
        boolean boolean9 = atomikosProperties0.isEnableLogging();
        long long10 = atomikosProperties0.getCheckpointInterval();
        long long11 = atomikosProperties0.getDefaultJtaTimeout();
        atomikosProperties0.setMaxActives((-1));
        java.lang.String str14 = atomikosProperties0.getService();
        java.util.Properties properties15 = atomikosProperties0.asProperties();
        java.util.Properties properties16 = new java.util.Properties();
        java.lang.Object obj18 = properties16.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration19 = properties16.elements();
        boolean boolean20 = properties16.isEmpty();
        java.util.Enumeration<java.lang.Object> objEnumeration21 = properties16.elements();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet22 = properties16.entrySet();
        java.util.Set<java.lang.String> strSet23 = properties16.stringPropertyNames();
        java.util.Properties properties24 = new java.util.Properties();
        java.lang.Object obj26 = properties24.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration27 = properties24.elements();
        boolean boolean28 = properties24.isEmpty();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet29 = properties24.entrySet();
        boolean boolean30 = properties16.contains((java.lang.Object) properties24);
        java.util.Properties properties31 = new java.util.Properties();
        java.lang.Object obj33 = properties31.remove((java.lang.Object) 0.0d);
        java.util.Properties properties34 = new java.util.Properties();
        java.util.Collection<java.lang.Object> objCollection35 = properties34.values();
        java.util.Enumeration<java.lang.Object> objEnumeration36 = properties34.keys();
        java.util.Properties properties37 = new java.util.Properties();
        java.lang.Object obj39 = properties37.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration40 = properties37.elements();
        boolean boolean41 = properties37.isEmpty();
        java.util.Set<java.lang.Object> objSet42 = properties37.keySet();
        java.util.Enumeration<java.lang.Object> objEnumeration43 = properties37.keys();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet44 = properties37.entrySet();
        java.lang.Object obj45 = properties31.put((java.lang.Object) properties34, (java.lang.Object) properties37);
        java.lang.Object obj46 = properties34.clone();
        boolean boolean47 = properties16.containsKey((java.lang.Object) properties34);
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet48 = properties34.entrySet();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties49 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties49.setSerialJtaTransactions(false);
        boolean boolean52 = atomikosProperties49.isSerialJtaTransactions();
        java.lang.String str53 = atomikosProperties49.getService();
        atomikosProperties49.setMaxActives((int) (byte) 100);
        java.lang.Object obj56 = properties15.replace((java.lang.Object) properties34, (java.lang.Object) atomikosProperties49);
        java.util.Enumeration<java.lang.Object> objEnumeration57 = properties34.keys();
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 50 + "'", int8 == 50);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + long10 + "' != '" + 500L + "'", long10 == 500L);
        org.junit.Assert.assertTrue("'" + long11 + "' != '" + 10000L + "'", long11 == 10000L);
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertNotNull(properties15);
        org.junit.Assert.assertNull(obj18);
        org.junit.Assert.assertNotNull(objEnumeration19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNotNull(objEnumeration21);
        org.junit.Assert.assertNotNull(objEntrySet22);
        org.junit.Assert.assertNotNull(strSet23);
        org.junit.Assert.assertNull(obj26);
        org.junit.Assert.assertNotNull(objEnumeration27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNotNull(objEntrySet29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNull(obj33);
        org.junit.Assert.assertNotNull(objCollection35);
        org.junit.Assert.assertNotNull(objEnumeration36);
        org.junit.Assert.assertNull(obj39);
        org.junit.Assert.assertNotNull(objEnumeration40);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertNotNull(objSet42);
        org.junit.Assert.assertNotNull(objEnumeration43);
        org.junit.Assert.assertNotNull(objEntrySet44);
        org.junit.Assert.assertNull(obj45);
        org.junit.Assert.assertNotNull(obj46);
        org.junit.Assert.assertEquals(obj46.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj46), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj46), "{}");
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNotNull(objEntrySet48);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNull(str53);
        org.junit.Assert.assertNull(obj56);
        org.junit.Assert.assertNotNull(objEnumeration57);
    }

    @Test
    public void test7769() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7769");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration3 = properties0.elements();
        boolean boolean4 = properties0.isEmpty();
        java.lang.Object obj7 = properties0.setProperty("tmlog", "");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties8 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties8.setSerialJtaTransactions(false);
        boolean boolean11 = atomikosProperties8.isSerialJtaTransactions();
        atomikosProperties8.setTransactionManagerUniqueName("hi!");
        atomikosProperties8.setForceShutdownOnVmExit(false);
        atomikosProperties8.setDefaultJtaTimeout((long) (byte) 10);
        java.lang.String str18 = atomikosProperties8.getTransactionManagerUniqueName();
        java.util.Properties properties19 = new java.util.Properties();
        java.util.Properties properties20 = new java.util.Properties();
        java.lang.Object obj22 = properties20.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet23 = properties20.stringPropertyNames();
        boolean boolean24 = properties19.containsValue((java.lang.Object) properties20);
        java.util.Collection<java.lang.Object> objCollection25 = properties19.values();
        java.util.Properties properties27 = new java.util.Properties();
        java.lang.Object obj29 = properties27.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration30 = properties27.elements();
        boolean boolean31 = properties27.isEmpty();
        java.util.Set<java.lang.Object> objSet32 = properties27.keySet();
        java.lang.Object obj33 = properties19.putIfAbsent((java.lang.Object) "hi!", (java.lang.Object) objSet32);
        java.util.Set<java.lang.Object> objSet34 = properties19.keySet();
        java.util.Set<java.lang.Object> objSet35 = properties19.keySet();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet36 = properties19.entrySet();
        java.util.Set<java.lang.Object> objSet37 = properties19.keySet();
        java.lang.Object obj38 = properties0.replace((java.lang.Object) atomikosProperties8, (java.lang.Object) properties19);
        java.util.Enumeration<java.lang.Object> objEnumeration39 = properties0.keys();
        java.util.Properties properties40 = new java.util.Properties();
        java.lang.Object obj42 = properties40.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet43 = properties40.stringPropertyNames();
        java.util.Properties properties44 = new java.util.Properties();
        java.lang.Object obj46 = properties44.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet47 = properties44.stringPropertyNames();
        java.lang.Object obj49 = properties40.put((java.lang.Object) strSet47, (java.lang.Object) 0.0d);
        boolean boolean50 = properties0.equals((java.lang.Object) 0.0d);
        int int51 = properties0.size();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties52 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties52.setSerialJtaTransactions(false);
        atomikosProperties52.setThreadedTwoPhaseCommit(true);
        atomikosProperties52.setMaxTimeout((long) '#');
        long long59 = atomikosProperties52.getCheckpointInterval();
        atomikosProperties52.setMaxTimeout((long) (byte) 100);
        atomikosProperties52.setDefaultJtaTimeout((long) (byte) 1);
        atomikosProperties52.setSerialJtaTransactions(true);
        atomikosProperties52.setThreadedTwoPhaseCommit(true);
        java.lang.Object obj68 = properties0.remove((java.lang.Object) true);
        java.io.InputStream inputStream69 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties0.loadFromXML(inputStream69);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(objEnumeration3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNull(obj7);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "hi!" + "'", str18, "hi!");
        org.junit.Assert.assertNull(obj22);
        org.junit.Assert.assertNotNull(strSet23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(objCollection25);
        org.junit.Assert.assertNull(obj29);
        org.junit.Assert.assertNotNull(objEnumeration30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNotNull(objSet32);
        org.junit.Assert.assertNull(obj33);
        org.junit.Assert.assertNotNull(objSet34);
        org.junit.Assert.assertNotNull(objSet35);
        org.junit.Assert.assertNotNull(objEntrySet36);
        org.junit.Assert.assertNotNull(objSet37);
        org.junit.Assert.assertNull(obj38);
        org.junit.Assert.assertNotNull(objEnumeration39);
        org.junit.Assert.assertNull(obj42);
        org.junit.Assert.assertNotNull(strSet43);
        org.junit.Assert.assertNull(obj46);
        org.junit.Assert.assertNotNull(strSet47);
        org.junit.Assert.assertNull(obj49);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + 1 + "'", int51 == 1);
        org.junit.Assert.assertTrue("'" + long59 + "' != '" + 500L + "'", long59 == 500L);
        org.junit.Assert.assertNull(obj68);
    }

    @Test
    public void test7770() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7770");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet3 = properties0.stringPropertyNames();
        java.util.Properties properties4 = new java.util.Properties();
        java.util.Properties properties5 = new java.util.Properties();
        java.lang.Object obj7 = properties5.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet8 = properties5.stringPropertyNames();
        boolean boolean9 = properties4.containsValue((java.lang.Object) properties5);
        java.util.Collection<java.lang.Object> objCollection10 = properties4.values();
        java.util.Enumeration<?> wildcardEnumeration11 = properties4.propertyNames();
        java.lang.Object obj13 = properties0.put((java.lang.Object) wildcardEnumeration11, (java.lang.Object) 10.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration14 = properties0.elements();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties15 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties15.setSerialJtaTransactions(false);
        boolean boolean18 = atomikosProperties15.isSerialJtaTransactions();
        java.lang.String str19 = atomikosProperties15.getService();
        boolean boolean20 = atomikosProperties15.isEnableLogging();
        java.lang.String str21 = atomikosProperties15.getTransactionManagerUniqueName();
        java.util.Properties properties22 = new java.util.Properties();
        java.lang.Object obj24 = properties22.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration25 = properties22.elements();
        int int26 = properties22.size();
        java.util.Properties properties27 = new java.util.Properties();
        java.lang.Object obj29 = properties27.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration30 = properties27.elements();
        boolean boolean31 = properties27.isEmpty();
        java.util.Set<java.lang.Object> objSet32 = properties27.keySet();
        boolean boolean33 = properties22.containsKey((java.lang.Object) objSet32);
        java.util.Enumeration<java.lang.Object> objEnumeration34 = properties22.keys();
        java.util.Properties properties35 = new java.util.Properties();
        java.lang.Object obj37 = properties35.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration38 = properties35.elements();
        boolean boolean39 = properties35.isEmpty();
        java.util.Set<java.lang.Object> objSet40 = properties35.keySet();
        java.util.Enumeration<java.lang.Object> objEnumeration41 = properties35.keys();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet42 = properties35.entrySet();
        boolean boolean44 = properties22.remove((java.lang.Object) properties35, (java.lang.Object) 1.0f);
        boolean boolean45 = properties35.isEmpty();
        java.lang.Object obj46 = properties0.put((java.lang.Object) atomikosProperties15, (java.lang.Object) properties35);
        java.util.Properties properties47 = new java.util.Properties();
        java.util.Properties properties48 = new java.util.Properties();
        java.lang.Object obj50 = properties48.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet51 = properties48.stringPropertyNames();
        boolean boolean52 = properties47.containsValue((java.lang.Object) properties48);
        java.util.Collection<java.lang.Object> objCollection53 = properties47.values();
        java.util.Properties properties55 = new java.util.Properties();
        java.lang.Object obj57 = properties55.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration58 = properties55.elements();
        boolean boolean59 = properties55.isEmpty();
        java.util.Set<java.lang.Object> objSet60 = properties55.keySet();
        java.lang.Object obj61 = properties47.putIfAbsent((java.lang.Object) "hi!", (java.lang.Object) objSet60);
        java.util.Set<java.lang.Object> objSet62 = properties47.keySet();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties63 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties63.setSerialJtaTransactions(false);
        atomikosProperties63.setThreadedTwoPhaseCommit(true);
        atomikosProperties63.setMaxTimeout((long) '#');
        boolean boolean70 = atomikosProperties63.isEnableLogging();
        atomikosProperties63.setCheckpointInterval((long) (byte) -1);
        atomikosProperties63.setEnableLogging(true);
        java.util.Properties properties75 = new java.util.Properties();
        java.lang.Object obj77 = properties75.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration78 = properties75.elements();
        boolean boolean79 = properties75.isEmpty();
        java.util.Enumeration<java.lang.Object> objEnumeration80 = properties75.elements();
        java.lang.Object obj81 = properties47.replace((java.lang.Object) true, (java.lang.Object) properties75);
        java.util.Properties properties82 = new java.util.Properties();
        java.lang.Object obj84 = properties82.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration85 = properties82.elements();
        int int86 = properties82.size();
        java.util.Properties properties87 = new java.util.Properties(properties82);
        java.util.Set<java.lang.String> strSet88 = properties82.stringPropertyNames();
        boolean boolean89 = properties47.contains((java.lang.Object) strSet88);
        java.util.Collection<java.lang.Object> objCollection90 = properties47.values();
        properties47.clear();
        properties35.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties47);
        java.lang.Object obj93 = properties47.clone();
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(strSet3);
        org.junit.Assert.assertNull(obj7);
        org.junit.Assert.assertNotNull(strSet8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(objCollection10);
        org.junit.Assert.assertNotNull(wildcardEnumeration11);
        org.junit.Assert.assertNull(obj13);
        org.junit.Assert.assertNotNull(objEnumeration14);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNull(str19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNull(str21);
        org.junit.Assert.assertNull(obj24);
        org.junit.Assert.assertNotNull(objEnumeration25);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 0 + "'", int26 == 0);
        org.junit.Assert.assertNull(obj29);
        org.junit.Assert.assertNotNull(objEnumeration30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNotNull(objSet32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(objEnumeration34);
        org.junit.Assert.assertNull(obj37);
        org.junit.Assert.assertNotNull(objEnumeration38);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNotNull(objSet40);
        org.junit.Assert.assertNotNull(objEnumeration41);
        org.junit.Assert.assertNotNull(objEntrySet42);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertNull(obj46);
        org.junit.Assert.assertNull(obj50);
        org.junit.Assert.assertNotNull(strSet51);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNotNull(objCollection53);
        org.junit.Assert.assertNull(obj57);
        org.junit.Assert.assertNotNull(objEnumeration58);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertNotNull(objSet60);
        org.junit.Assert.assertNull(obj61);
        org.junit.Assert.assertNotNull(objSet62);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + true + "'", boolean70 == true);
        org.junit.Assert.assertNull(obj77);
        org.junit.Assert.assertNotNull(objEnumeration78);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + true + "'", boolean79 == true);
        org.junit.Assert.assertNotNull(objEnumeration80);
        org.junit.Assert.assertNull(obj81);
        org.junit.Assert.assertNull(obj84);
        org.junit.Assert.assertNotNull(objEnumeration85);
        org.junit.Assert.assertTrue("'" + int86 + "' != '" + 0 + "'", int86 == 0);
        org.junit.Assert.assertNotNull(strSet88);
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + true + "'", boolean89 == true);
        org.junit.Assert.assertNotNull(objCollection90);
        org.junit.Assert.assertNotNull(obj93);
        org.junit.Assert.assertEquals(obj93.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj93), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj93), "{}");
    }

    @Test
    public void test7771() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7771");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration3 = properties0.elements();
        boolean boolean4 = properties0.isEmpty();
        java.util.Set<java.lang.Object> objSet5 = properties0.keySet();
        boolean boolean6 = properties0.isEmpty();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet7 = properties0.entrySet();
        java.util.Properties properties8 = new java.util.Properties();
        java.lang.Object obj10 = properties8.remove((java.lang.Object) 0.0d);
        boolean boolean11 = properties8.isEmpty();
        java.lang.Object obj14 = properties8.setProperty("", "hi!");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties15 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties15.setSerialJtaTransactions(false);
        boolean boolean18 = properties0.remove((java.lang.Object) properties8, (java.lang.Object) atomikosProperties15);
        java.util.Properties properties19 = new java.util.Properties(properties8);
        int int20 = properties19.size();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties22 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties22.setSerialJtaTransactions(false);
        boolean boolean25 = atomikosProperties22.isSerialJtaTransactions();
        java.lang.String str26 = atomikosProperties22.getService();
        boolean boolean27 = atomikosProperties22.isEnableLogging();
        java.lang.String str28 = atomikosProperties22.getTransactionManagerUniqueName();
        boolean boolean29 = properties19.remove((java.lang.Object) (byte) 1, (java.lang.Object) atomikosProperties22);
        java.util.Properties properties30 = new java.util.Properties();
        java.lang.Object obj32 = properties30.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration33 = properties30.elements();
        boolean boolean34 = properties30.isEmpty();
        java.util.Enumeration<java.lang.Object> objEnumeration35 = properties30.elements();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet36 = properties30.entrySet();
        java.lang.Object obj37 = properties19.remove((java.lang.Object) objEntrySet36);
        java.lang.Object obj38 = properties19.clone();
        java.util.Enumeration<java.lang.Object> objEnumeration39 = properties19.keys();
        java.util.Properties properties40 = new java.util.Properties();
        java.lang.Object obj42 = properties40.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration43 = properties40.elements();
        boolean boolean44 = properties40.isEmpty();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet45 = properties40.entrySet();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties47 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties47.setSerialJtaTransactions(false);
        atomikosProperties47.setThreadedTwoPhaseCommit(true);
        atomikosProperties47.setMaxTimeout((long) '#');
        boolean boolean54 = atomikosProperties47.isForceShutdownOnVmExit();
        java.lang.Object obj55 = properties40.put((java.lang.Object) (short) 1, (java.lang.Object) atomikosProperties47);
        atomikosProperties47.setForceShutdownOnVmExit(false);
        long long58 = atomikosProperties47.getDefaultJtaTimeout();
        atomikosProperties47.setThreadedTwoPhaseCommit(true);
        java.util.Properties properties61 = atomikosProperties47.asProperties();
        java.util.Properties properties62 = new java.util.Properties(properties61);
        boolean boolean63 = properties19.contains((java.lang.Object) properties61);
        java.util.Collection<java.lang.Object> objCollection64 = properties61.values();
        java.lang.String str66 = properties61.getProperty("{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=100, com.atomikos.icatch.serial_jta_transactions=false, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=35, com.atomikos.icatch.service={=hi!}, com.atomikos.icatch.threaded_2pc=true, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(objEnumeration3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(objSet5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(objEntrySet7);
        org.junit.Assert.assertNull(obj10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNull(obj14);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 0 + "'", int20 == 0);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNull(str26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNull(str28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNull(obj32);
        org.junit.Assert.assertNotNull(objEnumeration33);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertNotNull(objEnumeration35);
        org.junit.Assert.assertNotNull(objEntrySet36);
        org.junit.Assert.assertNull(obj37);
        org.junit.Assert.assertNotNull(obj38);
        org.junit.Assert.assertEquals(obj38.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj38), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj38), "{}");
        org.junit.Assert.assertNotNull(objEnumeration39);
        org.junit.Assert.assertNull(obj42);
        org.junit.Assert.assertNotNull(objEnumeration43);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertNotNull(objEntrySet45);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertNull(obj55);
        org.junit.Assert.assertTrue("'" + long58 + "' != '" + 10000L + "'", long58 == 10000L);
        org.junit.Assert.assertNotNull(properties61);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertNotNull(objCollection64);
        org.junit.Assert.assertNull(str66);
    }

    @Test
    public void test7772() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7772");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setSerialJtaTransactions(false);
        atomikosProperties0.setThreadedTwoPhaseCommit(true);
        atomikosProperties0.setMaxTimeout((long) '#');
        long long7 = atomikosProperties0.getCheckpointInterval();
        java.lang.String str8 = atomikosProperties0.getTransactionManagerUniqueName();
        atomikosProperties0.setDefaultJtaTimeout((long) 0);
        java.util.Properties properties11 = atomikosProperties0.asProperties();
        java.util.Properties properties12 = new java.util.Properties();
        java.lang.Object obj14 = properties12.remove((java.lang.Object) 0.0d);
        java.util.Properties properties15 = new java.util.Properties();
        java.util.Collection<java.lang.Object> objCollection16 = properties15.values();
        java.util.Enumeration<java.lang.Object> objEnumeration17 = properties15.keys();
        java.util.Properties properties18 = new java.util.Properties();
        java.lang.Object obj20 = properties18.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration21 = properties18.elements();
        boolean boolean22 = properties18.isEmpty();
        java.util.Set<java.lang.Object> objSet23 = properties18.keySet();
        java.util.Enumeration<java.lang.Object> objEnumeration24 = properties18.keys();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet25 = properties18.entrySet();
        java.lang.Object obj26 = properties12.put((java.lang.Object) properties15, (java.lang.Object) properties18);
        java.lang.Object obj27 = properties15.clone();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties28 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties28.setSerialJtaTransactions(false);
        atomikosProperties28.setThreadedTwoPhaseCommit(true);
        atomikosProperties28.setMaxTimeout((long) '#');
        boolean boolean35 = atomikosProperties28.isEnableLogging();
        atomikosProperties28.setCheckpointInterval((long) 100);
        atomikosProperties28.setSerialJtaTransactions(true);
        boolean boolean40 = properties15.equals((java.lang.Object) atomikosProperties28);
        java.util.Properties properties41 = new java.util.Properties();
        java.lang.Object obj43 = properties41.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration44 = properties41.elements();
        boolean boolean45 = properties41.isEmpty();
        java.util.Enumeration<java.lang.Object> objEnumeration46 = properties41.elements();
        boolean boolean47 = properties15.containsKey((java.lang.Object) properties41);
        java.util.Properties properties48 = new java.util.Properties();
        java.lang.Object obj50 = properties48.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration51 = properties48.elements();
        boolean boolean52 = properties48.isEmpty();
        java.util.Set<java.lang.Object> objSet53 = properties48.keySet();
        boolean boolean54 = properties48.isEmpty();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet55 = properties48.entrySet();
        java.util.Properties properties56 = new java.util.Properties();
        java.lang.Object obj58 = properties56.remove((java.lang.Object) 0.0d);
        boolean boolean59 = properties56.isEmpty();
        java.lang.Object obj62 = properties56.setProperty("", "hi!");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties63 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties63.setSerialJtaTransactions(false);
        boolean boolean66 = properties48.remove((java.lang.Object) properties56, (java.lang.Object) atomikosProperties63);
        java.util.Properties properties67 = new java.util.Properties(properties56);
        java.util.Enumeration<java.lang.Object> objEnumeration68 = properties67.elements();
        java.lang.Object obj69 = properties67.clone();
        java.lang.Object obj70 = properties11.getOrDefault((java.lang.Object) properties41, (java.lang.Object) properties67);
        java.util.Set<java.lang.String> strSet71 = properties41.stringPropertyNames();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties72 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties72.setSerialJtaTransactions(false);
        atomikosProperties72.setThreadedTwoPhaseCommit(true);
        atomikosProperties72.setThreadedTwoPhaseCommit(true);
        java.util.Properties properties79 = atomikosProperties72.asProperties();
        int int80 = atomikosProperties72.getMaxActives();
        atomikosProperties72.setService("hi!");
        long long83 = atomikosProperties72.getMaxTimeout();
        atomikosProperties72.setLogBaseName("{}");
        atomikosProperties72.setThreadedTwoPhaseCommit(false);
        java.lang.String str88 = atomikosProperties72.getService();
        java.lang.Class<?> wildcardClass89 = atomikosProperties72.getClass();
        boolean boolean90 = properties41.containsValue((java.lang.Object) wildcardClass89);
        java.lang.Object obj91 = properties41.clone();
        java.lang.Object obj92 = properties41.clone();
        java.util.Properties properties93 = new java.util.Properties(properties41);
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + 500L + "'", long7 == 500L);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNotNull(properties11);
        org.junit.Assert.assertNull(obj14);
        org.junit.Assert.assertNotNull(objCollection16);
        org.junit.Assert.assertNotNull(objEnumeration17);
        org.junit.Assert.assertNull(obj20);
        org.junit.Assert.assertNotNull(objEnumeration21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNotNull(objSet23);
        org.junit.Assert.assertNotNull(objEnumeration24);
        org.junit.Assert.assertNotNull(objEntrySet25);
        org.junit.Assert.assertNull(obj26);
        org.junit.Assert.assertNotNull(obj27);
        org.junit.Assert.assertEquals(obj27.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj27), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj27), "{}");
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNull(obj43);
        org.junit.Assert.assertNotNull(objEnumeration44);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertNotNull(objEnumeration46);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNull(obj50);
        org.junit.Assert.assertNotNull(objEnumeration51);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertNotNull(objSet53);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertNotNull(objEntrySet55);
        org.junit.Assert.assertNull(obj58);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertNull(obj62);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertNotNull(objEnumeration68);
        org.junit.Assert.assertNotNull(obj69);
        org.junit.Assert.assertEquals(obj69.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj69), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj69), "{}");
        org.junit.Assert.assertNotNull(obj70);
        org.junit.Assert.assertEquals(obj70.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj70), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj70), "{}");
        org.junit.Assert.assertNotNull(strSet71);
        org.junit.Assert.assertNotNull(properties79);
        org.junit.Assert.assertTrue("'" + int80 + "' != '" + 50 + "'", int80 == 50);
        org.junit.Assert.assertTrue("'" + long83 + "' != '" + 300000L + "'", long83 == 300000L);
        org.junit.Assert.assertEquals("'" + str88 + "' != '" + "hi!" + "'", str88, "hi!");
        org.junit.Assert.assertNotNull(wildcardClass89);
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + false + "'", boolean90 == false);
        org.junit.Assert.assertNotNull(obj91);
        org.junit.Assert.assertEquals(obj91.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj91), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj91), "{}");
        org.junit.Assert.assertNotNull(obj92);
        org.junit.Assert.assertEquals(obj92.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj92), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj92), "{}");
    }

    @Test
    public void test7773() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7773");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setSerialJtaTransactions(false);
        atomikosProperties0.setThreadedTwoPhaseCommit(true);
        atomikosProperties0.setMaxTimeout((long) '#');
        boolean boolean7 = atomikosProperties0.isEnableLogging();
        int int8 = atomikosProperties0.getMaxActives();
        atomikosProperties0.setDefaultJtaTimeout((long) (short) 0);
        java.util.Properties properties11 = atomikosProperties0.asProperties();
        java.util.Enumeration<java.lang.Object> objEnumeration12 = properties11.elements();
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 50 + "'", int8 == 50);
        org.junit.Assert.assertNotNull(properties11);
        org.junit.Assert.assertNotNull(objEnumeration12);
    }

    @Test
    public void test7774() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7774");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setSerialJtaTransactions(false);
        atomikosProperties0.setThreadedTwoPhaseCommit(true);
        boolean boolean5 = atomikosProperties0.isForceShutdownOnVmExit();
        java.lang.String str6 = atomikosProperties0.getTransactionManagerUniqueName();
        java.lang.String str7 = atomikosProperties0.getService();
        atomikosProperties0.setCheckpointInterval(0L);
        boolean boolean10 = atomikosProperties0.isThreadedTwoPhaseCommit();
        java.lang.String str11 = atomikosProperties0.getTransactionManagerUniqueName();
        atomikosProperties0.setSerialJtaTransactions(false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNull(str11);
    }

    @Test
    public void test7775() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7775");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        java.util.Properties properties3 = new java.util.Properties();
        java.util.Collection<java.lang.Object> objCollection4 = properties3.values();
        java.util.Enumeration<java.lang.Object> objEnumeration5 = properties3.keys();
        java.util.Properties properties6 = new java.util.Properties();
        java.lang.Object obj8 = properties6.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration9 = properties6.elements();
        boolean boolean10 = properties6.isEmpty();
        java.util.Set<java.lang.Object> objSet11 = properties6.keySet();
        java.util.Enumeration<java.lang.Object> objEnumeration12 = properties6.keys();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet13 = properties6.entrySet();
        java.lang.Object obj14 = properties0.put((java.lang.Object) properties3, (java.lang.Object) properties6);
        java.lang.String str16 = properties3.getProperty("{=hi!}");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties17 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties17.setSerialJtaTransactions(false);
        atomikosProperties17.setThreadedTwoPhaseCommit(true);
        atomikosProperties17.setThreadedTwoPhaseCommit(true);
        long long24 = atomikosProperties17.getMaxTimeout();
        boolean boolean25 = properties3.containsValue((java.lang.Object) atomikosProperties17);
        java.lang.String str26 = properties3.toString();
        java.lang.String str29 = properties3.getProperty("{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=false, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.tm_unique_name=tmlog, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}", "{com.atomikos.icatch.enable_logging=false, com.atomikos.icatch.force_shutdown_on_vm_exit=true, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=false, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=32, com.atomikos.icatch.service={{}={}}, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.max_actives=-1, com.atomikos.icatch.log_base_name=tmlog}");
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(objCollection4);
        org.junit.Assert.assertNotNull(objEnumeration5);
        org.junit.Assert.assertNull(obj8);
        org.junit.Assert.assertNotNull(objEnumeration9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(objSet11);
        org.junit.Assert.assertNotNull(objEnumeration12);
        org.junit.Assert.assertNotNull(objEntrySet13);
        org.junit.Assert.assertNull(obj14);
        org.junit.Assert.assertNull(str16);
        org.junit.Assert.assertTrue("'" + long24 + "' != '" + 300000L + "'", long24 == 300000L);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "{}" + "'", str26, "{}");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "{com.atomikos.icatch.enable_logging=false, com.atomikos.icatch.force_shutdown_on_vm_exit=true, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=false, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=32, com.atomikos.icatch.service={{}={}}, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.max_actives=-1, com.atomikos.icatch.log_base_name=tmlog}" + "'", str29, "{com.atomikos.icatch.enable_logging=false, com.atomikos.icatch.force_shutdown_on_vm_exit=true, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=false, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=32, com.atomikos.icatch.service={{}={}}, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.max_actives=-1, com.atomikos.icatch.log_base_name=tmlog}");
    }

    @Test
    public void test7776() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7776");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setSerialJtaTransactions(false);
        atomikosProperties0.setThreadedTwoPhaseCommit(true);
        atomikosProperties0.setMaxTimeout((long) '#');
        boolean boolean7 = atomikosProperties0.isEnableLogging();
        atomikosProperties0.setMaxActives((int) '#');
        atomikosProperties0.setSerialJtaTransactions(true);
        java.lang.String str12 = atomikosProperties0.getLogBaseName();
        atomikosProperties0.setMaxTimeout((long) '4');
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "tmlog" + "'", str12, "tmlog");
    }

    @Test
    public void test7777() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7777");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration3 = properties0.elements();
        java.util.Properties properties5 = new java.util.Properties();
        java.lang.Object obj7 = properties5.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration8 = properties5.elements();
        boolean boolean9 = properties5.isEmpty();
        java.util.Set<java.lang.Object> objSet10 = properties5.keySet();
        boolean boolean11 = properties5.isEmpty();
        java.lang.Object obj12 = properties0.getOrDefault((java.lang.Object) true, (java.lang.Object) boolean11);
        java.util.Properties properties13 = new java.util.Properties();
        java.lang.Object obj15 = properties13.remove((java.lang.Object) 0.0d);
        boolean boolean16 = properties13.isEmpty();
        java.util.Enumeration<java.lang.Object> objEnumeration17 = properties13.keys();
        java.util.Properties properties18 = new java.util.Properties();
        java.lang.Object obj20 = properties18.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet21 = properties18.stringPropertyNames();
        java.util.Properties properties22 = new java.util.Properties();
        java.util.Properties properties23 = new java.util.Properties();
        java.lang.Object obj25 = properties23.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet26 = properties23.stringPropertyNames();
        boolean boolean27 = properties22.containsValue((java.lang.Object) properties23);
        java.util.Collection<java.lang.Object> objCollection28 = properties22.values();
        java.util.Enumeration<?> wildcardEnumeration29 = properties22.propertyNames();
        java.lang.Object obj31 = properties18.put((java.lang.Object) wildcardEnumeration29, (java.lang.Object) 10.0d);
        java.util.Properties properties32 = new java.util.Properties();
        java.util.Properties properties33 = new java.util.Properties();
        java.lang.Object obj35 = properties33.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet36 = properties33.stringPropertyNames();
        boolean boolean37 = properties32.containsValue((java.lang.Object) properties33);
        java.util.Collection<java.lang.Object> objCollection38 = properties32.values();
        java.lang.Object obj39 = properties32.clone();
        boolean boolean40 = properties0.replace((java.lang.Object) properties13, (java.lang.Object) 10.0d, obj39);
        java.util.Collection<java.lang.Object> objCollection41 = properties13.values();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties42 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties42.setSerialJtaTransactions(false);
        atomikosProperties42.setThreadedTwoPhaseCommit(true);
        atomikosProperties42.setEnableLogging(false);
        boolean boolean49 = atomikosProperties42.isSerialJtaTransactions();
        int int50 = atomikosProperties42.getMaxActives();
        boolean boolean51 = atomikosProperties42.isEnableLogging();
        long long52 = atomikosProperties42.getCheckpointInterval();
        java.util.Properties properties53 = atomikosProperties42.asProperties();
        java.util.Enumeration<java.lang.Object> objEnumeration54 = properties53.elements();
        boolean boolean55 = properties13.containsValue((java.lang.Object) properties53);
        boolean boolean56 = properties13.isEmpty();
        int int57 = properties13.size();
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(objEnumeration3);
        org.junit.Assert.assertNull(obj7);
        org.junit.Assert.assertNotNull(objEnumeration8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertNotNull(objSet10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertEquals("'" + obj12 + "' != '" + true + "'", obj12, true);
        org.junit.Assert.assertNull(obj15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(objEnumeration17);
        org.junit.Assert.assertNull(obj20);
        org.junit.Assert.assertNotNull(strSet21);
        org.junit.Assert.assertNull(obj25);
        org.junit.Assert.assertNotNull(strSet26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(objCollection28);
        org.junit.Assert.assertNotNull(wildcardEnumeration29);
        org.junit.Assert.assertNull(obj31);
        org.junit.Assert.assertNull(obj35);
        org.junit.Assert.assertNotNull(strSet36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(objCollection38);
        org.junit.Assert.assertNotNull(obj39);
        org.junit.Assert.assertEquals(obj39.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj39), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj39), "{}");
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(objCollection41);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + 50 + "'", int50 == 50);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertTrue("'" + long52 + "' != '" + 500L + "'", long52 == 500L);
        org.junit.Assert.assertNotNull(properties53);
        org.junit.Assert.assertNotNull(objEnumeration54);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + 0 + "'", int57 == 0);
    }

    @Test
    public void test7778() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7778");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration3 = properties0.elements();
        boolean boolean4 = properties0.isEmpty();
        java.util.Set<java.lang.Object> objSet5 = properties0.keySet();
        java.util.Enumeration<java.lang.Object> objEnumeration6 = properties0.keys();
        java.lang.String str8 = properties0.getProperty("hi!");
        java.util.Enumeration<?> wildcardEnumeration9 = properties0.propertyNames();
        int int10 = properties0.size();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties11 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties11.setSerialJtaTransactions(false);
        atomikosProperties11.setThreadedTwoPhaseCommit(true);
        java.lang.String str16 = atomikosProperties11.getLogBaseName();
        long long17 = atomikosProperties11.getMaxTimeout();
        boolean boolean18 = atomikosProperties11.isThreadedTwoPhaseCommit();
        atomikosProperties11.setLogBaseName("{hi!=[], {}={}}");
        boolean boolean21 = atomikosProperties11.isSerialJtaTransactions();
        long long22 = atomikosProperties11.getDefaultJtaTimeout();
        java.util.Properties properties23 = new java.util.Properties();
        java.lang.Object obj25 = properties23.remove((java.lang.Object) 0.0d);
        boolean boolean27 = properties23.containsValue((java.lang.Object) "hi!");
        java.lang.Object obj30 = properties23.put((java.lang.Object) (byte) -1, (java.lang.Object) 100L);
        java.util.Properties properties31 = new java.util.Properties();
        java.util.Properties properties32 = new java.util.Properties();
        java.lang.Object obj34 = properties32.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet35 = properties32.stringPropertyNames();
        boolean boolean36 = properties31.containsValue((java.lang.Object) properties32);
        java.util.Collection<java.lang.Object> objCollection37 = properties31.values();
        java.util.Properties properties39 = new java.util.Properties();
        java.lang.Object obj41 = properties39.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration42 = properties39.elements();
        boolean boolean43 = properties39.isEmpty();
        java.util.Set<java.lang.Object> objSet44 = properties39.keySet();
        java.lang.Object obj45 = properties31.putIfAbsent((java.lang.Object) "hi!", (java.lang.Object) objSet44);
        java.util.Set<java.lang.Object> objSet46 = properties31.keySet();
        boolean boolean47 = properties23.containsKey((java.lang.Object) properties31);
        java.util.Enumeration<?> wildcardEnumeration48 = properties31.propertyNames();
        java.lang.Object obj49 = properties0.getOrDefault((java.lang.Object) long22, (java.lang.Object) wildcardEnumeration48);
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(objEnumeration3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(objSet5);
        org.junit.Assert.assertNotNull(objEnumeration6);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNotNull(wildcardEnumeration9);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "tmlog" + "'", str16, "tmlog");
        org.junit.Assert.assertTrue("'" + long17 + "' != '" + 300000L + "'", long17 == 300000L);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + long22 + "' != '" + 10000L + "'", long22 == 10000L);
        org.junit.Assert.assertNull(obj25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNull(obj30);
        org.junit.Assert.assertNull(obj34);
        org.junit.Assert.assertNotNull(strSet35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(objCollection37);
        org.junit.Assert.assertNull(obj41);
        org.junit.Assert.assertNotNull(objEnumeration42);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNotNull(objSet44);
        org.junit.Assert.assertNull(obj45);
        org.junit.Assert.assertNotNull(objSet46);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNotNull(wildcardEnumeration48);
        org.junit.Assert.assertNotNull(obj49);
    }

    @Test
    public void test7779() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7779");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setSerialJtaTransactions(false);
        atomikosProperties0.setThreadedTwoPhaseCommit(true);
        atomikosProperties0.setMaxTimeout((long) '#');
        boolean boolean7 = atomikosProperties0.isEnableLogging();
        atomikosProperties0.setCheckpointInterval((long) 100);
        java.lang.String str10 = atomikosProperties0.getTransactionManagerUniqueName();
        atomikosProperties0.setEnableLogging(false);
        atomikosProperties0.setForceShutdownOnVmExit(true);
        atomikosProperties0.setSerialJtaTransactions(true);
        long long17 = atomikosProperties0.getMaxTimeout();
        atomikosProperties0.setMaxTimeout(300000L);
        atomikosProperties0.setMaxTimeout(0L);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertTrue("'" + long17 + "' != '" + 35L + "'", long17 == 35L);
    }

    @Test
    public void test7780() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7780");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setSerialJtaTransactions(false);
        atomikosProperties0.setThreadedTwoPhaseCommit(true);
        atomikosProperties0.setEnableLogging(false);
        boolean boolean7 = atomikosProperties0.isSerialJtaTransactions();
        int int8 = atomikosProperties0.getMaxActives();
        boolean boolean9 = atomikosProperties0.isEnableLogging();
        long long10 = atomikosProperties0.getCheckpointInterval();
        java.util.Properties properties11 = atomikosProperties0.asProperties();
        atomikosProperties0.setSerialJtaTransactions(false);
        atomikosProperties0.setThreadedTwoPhaseCommit(true);
        long long16 = atomikosProperties0.getDefaultJtaTimeout();
        atomikosProperties0.setDefaultJtaTimeout(97L);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 50 + "'", int8 == 50);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + long10 + "' != '" + 500L + "'", long10 == 500L);
        org.junit.Assert.assertNotNull(properties11);
        org.junit.Assert.assertTrue("'" + long16 + "' != '" + 10000L + "'", long16 == 10000L);
    }

    @Test
    public void test7781() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7781");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setSerialJtaTransactions(false);
        boolean boolean3 = atomikosProperties0.isThreadedTwoPhaseCommit();
        atomikosProperties0.setThreadedTwoPhaseCommit(false);
        atomikosProperties0.setForceShutdownOnVmExit(false);
        java.util.Properties properties8 = atomikosProperties0.asProperties();
        long long9 = atomikosProperties0.getCheckpointInterval();
        boolean boolean10 = atomikosProperties0.isEnableLogging();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(properties8);
        org.junit.Assert.assertTrue("'" + long9 + "' != '" + 500L + "'", long9 == 500L);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
    }

    @Test
    public void test7782() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7782");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration3 = properties0.elements();
        java.util.Enumeration<java.lang.Object> objEnumeration4 = properties0.elements();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties5 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties5.setSerialJtaTransactions(false);
        atomikosProperties5.setThreadedTwoPhaseCommit(true);
        atomikosProperties5.setMaxTimeout((long) '#');
        boolean boolean12 = atomikosProperties5.isEnableLogging();
        atomikosProperties5.setCheckpointInterval((long) (byte) -1);
        atomikosProperties5.setLogBaseName("{=hi!}");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties17 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties17.setSerialJtaTransactions(false);
        atomikosProperties17.setThreadedTwoPhaseCommit(true);
        atomikosProperties17.setThreadedTwoPhaseCommit(true);
        java.util.Properties properties24 = atomikosProperties17.asProperties();
        int int25 = atomikosProperties17.getMaxActives();
        atomikosProperties17.setService("hi!");
        long long28 = atomikosProperties17.getMaxTimeout();
        boolean boolean29 = properties0.remove((java.lang.Object) atomikosProperties5, (java.lang.Object) long28);
        java.util.Set<java.lang.Object> objSet30 = properties0.keySet();
        java.util.Properties properties31 = new java.util.Properties();
        java.lang.Object obj33 = properties31.remove((java.lang.Object) 0.0d);
        boolean boolean34 = properties31.isEmpty();
        java.util.Set<java.lang.String> strSet35 = properties31.stringPropertyNames();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties36 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties36.setSerialJtaTransactions(false);
        boolean boolean39 = atomikosProperties36.isSerialJtaTransactions();
        java.lang.String str40 = atomikosProperties36.getService();
        atomikosProperties36.setEnableLogging(false);
        java.util.Properties properties43 = atomikosProperties36.asProperties();
        atomikosProperties36.setCheckpointInterval((long) 1);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties46 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties46.setSerialJtaTransactions(false);
        boolean boolean49 = atomikosProperties46.isSerialJtaTransactions();
        java.lang.String str50 = atomikosProperties46.getService();
        boolean boolean51 = atomikosProperties46.isEnableLogging();
        atomikosProperties46.setCheckpointInterval((long) (byte) 100);
        java.lang.Class<?> wildcardClass54 = atomikosProperties46.getClass();
        java.lang.Object obj55 = properties31.getOrDefault((java.lang.Object) atomikosProperties36, (java.lang.Object) wildcardClass54);
        boolean boolean56 = atomikosProperties36.isEnableLogging();
        java.util.Properties properties57 = new java.util.Properties();
        java.lang.Object obj59 = properties57.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration60 = properties57.elements();
        boolean boolean61 = properties57.isEmpty();
        java.util.Enumeration<java.lang.Object> objEnumeration62 = properties57.elements();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet63 = properties57.entrySet();
        java.util.Set<java.lang.String> strSet64 = properties57.stringPropertyNames();
        java.lang.Object obj67 = properties57.setProperty("{}", "tmlog");
        java.util.Properties properties68 = new java.util.Properties();
        java.lang.Object obj70 = properties68.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration71 = properties68.elements();
        int int72 = properties68.size();
        java.util.Properties properties73 = new java.util.Properties();
        java.lang.Object obj75 = properties73.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration76 = properties73.elements();
        java.util.Enumeration<java.lang.Object> objEnumeration77 = properties73.keys();
        java.lang.Object obj78 = properties57.getOrDefault((java.lang.Object) properties68, (java.lang.Object) objEnumeration77);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties79 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties79.setSerialJtaTransactions(false);
        boolean boolean82 = atomikosProperties79.isSerialJtaTransactions();
        atomikosProperties79.setTransactionManagerUniqueName("hi!");
        java.lang.String str85 = atomikosProperties79.getLogBaseName();
        java.lang.String str86 = atomikosProperties79.getLogBaseName();
        boolean boolean87 = atomikosProperties79.isSerialJtaTransactions();
        long long88 = atomikosProperties79.getMaxTimeout();
        java.lang.String str89 = atomikosProperties79.getLogBaseName();
        int int90 = atomikosProperties79.getMaxActives();
        atomikosProperties79.setForceShutdownOnVmExit(false);
        boolean boolean93 = properties57.contains((java.lang.Object) false);
        java.lang.String str94 = properties57.toString();
        java.lang.Object obj95 = properties0.getOrDefault((java.lang.Object) atomikosProperties36, (java.lang.Object) properties57);
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(objEnumeration3);
        org.junit.Assert.assertNotNull(objEnumeration4);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(properties24);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 50 + "'", int25 == 50);
        org.junit.Assert.assertTrue("'" + long28 + "' != '" + 300000L + "'", long28 == 300000L);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(objSet30);
        org.junit.Assert.assertNull(obj33);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertNotNull(strSet35);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNull(str40);
        org.junit.Assert.assertNotNull(properties43);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNull(str50);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertNotNull(wildcardClass54);
        org.junit.Assert.assertNotNull(obj55);
        org.junit.Assert.assertEquals(obj55.toString(), "class org.springframework.boot.jta.atomikos.AtomikosProperties");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj55), "class org.springframework.boot.jta.atomikos.AtomikosProperties");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj55), "class org.springframework.boot.jta.atomikos.AtomikosProperties");
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertNull(obj59);
        org.junit.Assert.assertNotNull(objEnumeration60);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertNotNull(objEnumeration62);
        org.junit.Assert.assertNotNull(objEntrySet63);
        org.junit.Assert.assertNotNull(strSet64);
        org.junit.Assert.assertNull(obj67);
        org.junit.Assert.assertNull(obj70);
        org.junit.Assert.assertNotNull(objEnumeration71);
        org.junit.Assert.assertTrue("'" + int72 + "' != '" + 0 + "'", int72 == 0);
        org.junit.Assert.assertNull(obj75);
        org.junit.Assert.assertNotNull(objEnumeration76);
        org.junit.Assert.assertNotNull(objEnumeration77);
        org.junit.Assert.assertNotNull(obj78);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + false + "'", boolean82 == false);
        org.junit.Assert.assertEquals("'" + str85 + "' != '" + "tmlog" + "'", str85, "tmlog");
        org.junit.Assert.assertEquals("'" + str86 + "' != '" + "tmlog" + "'", str86, "tmlog");
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + false + "'", boolean87 == false);
        org.junit.Assert.assertTrue("'" + long88 + "' != '" + 300000L + "'", long88 == 300000L);
        org.junit.Assert.assertEquals("'" + str89 + "' != '" + "tmlog" + "'", str89, "tmlog");
        org.junit.Assert.assertTrue("'" + int90 + "' != '" + 50 + "'", int90 == 50);
        org.junit.Assert.assertTrue("'" + boolean93 + "' != '" + false + "'", boolean93 == false);
        org.junit.Assert.assertEquals("'" + str94 + "' != '" + "{{}=tmlog}" + "'", str94, "{{}=tmlog}");
        org.junit.Assert.assertNotNull(obj95);
        org.junit.Assert.assertEquals(obj95.toString(), "{{}=tmlog}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj95), "{{}=tmlog}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj95), "{{}=tmlog}");
    }

    @Test
    public void test7783() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7783");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration3 = properties0.elements();
        int int4 = properties0.size();
        java.util.Properties properties5 = new java.util.Properties();
        java.lang.Object obj7 = properties5.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration8 = properties5.elements();
        boolean boolean9 = properties5.isEmpty();
        java.util.Set<java.lang.Object> objSet10 = properties5.keySet();
        boolean boolean11 = properties0.containsKey((java.lang.Object) objSet10);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties12 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties12.setSerialJtaTransactions(false);
        atomikosProperties12.setThreadedTwoPhaseCommit(true);
        atomikosProperties12.setEnableLogging(false);
        boolean boolean19 = atomikosProperties12.isSerialJtaTransactions();
        int int20 = atomikosProperties12.getMaxActives();
        java.util.Properties properties21 = new java.util.Properties();
        java.lang.Object obj23 = properties21.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet24 = properties21.stringPropertyNames();
        java.util.Properties properties25 = new java.util.Properties();
        java.util.Properties properties26 = new java.util.Properties();
        java.lang.Object obj28 = properties26.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet29 = properties26.stringPropertyNames();
        boolean boolean30 = properties25.containsValue((java.lang.Object) properties26);
        java.util.Collection<java.lang.Object> objCollection31 = properties25.values();
        java.util.Enumeration<?> wildcardEnumeration32 = properties25.propertyNames();
        java.lang.Object obj34 = properties21.put((java.lang.Object) wildcardEnumeration32, (java.lang.Object) 10.0d);
        java.lang.String str36 = properties21.getProperty("{=hi!}");
        java.lang.Object obj37 = properties0.put((java.lang.Object) atomikosProperties12, (java.lang.Object) "{=hi!}");
        int int38 = properties0.size();
        java.lang.Object obj41 = properties0.setProperty("", "hi!");
        java.lang.Object obj44 = properties0.setProperty("tmlog", "{true=true}");
        boolean boolean45 = properties0.isEmpty();
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(objEnumeration3);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNull(obj7);
        org.junit.Assert.assertNotNull(objEnumeration8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertNotNull(objSet10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 50 + "'", int20 == 50);
        org.junit.Assert.assertNull(obj23);
        org.junit.Assert.assertNotNull(strSet24);
        org.junit.Assert.assertNull(obj28);
        org.junit.Assert.assertNotNull(strSet29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(objCollection31);
        org.junit.Assert.assertNotNull(wildcardEnumeration32);
        org.junit.Assert.assertNull(obj34);
        org.junit.Assert.assertNull(str36);
        org.junit.Assert.assertNull(obj37);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 1 + "'", int38 == 1);
        org.junit.Assert.assertNull(obj41);
        org.junit.Assert.assertNull(obj44);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
    }

    @Test
    public void test7784() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7784");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration3 = properties0.elements();
        boolean boolean4 = properties0.isEmpty();
        java.util.Set<java.lang.Object> objSet5 = properties0.keySet();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties6 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties6.setSerialJtaTransactions(false);
        atomikosProperties6.setThreadedTwoPhaseCommit(true);
        atomikosProperties6.setThreadedTwoPhaseCommit(true);
        java.util.Properties properties13 = atomikosProperties6.asProperties();
        int int14 = atomikosProperties6.getMaxActives();
        java.util.Properties properties15 = new java.util.Properties();
        java.lang.Object obj17 = properties15.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration18 = properties15.elements();
        boolean boolean19 = properties15.isEmpty();
        java.util.Set<java.lang.Object> objSet20 = properties15.keySet();
        boolean boolean22 = properties15.containsKey((java.lang.Object) (-1.0f));
        java.lang.Object obj23 = properties0.put((java.lang.Object) atomikosProperties6, (java.lang.Object) properties15);
        java.lang.String str24 = properties0.toString();
        java.util.Enumeration<java.lang.Object> objEnumeration25 = properties0.keys();
        java.util.Properties properties26 = new java.util.Properties();
        java.lang.Object obj28 = properties26.remove((java.lang.Object) 0.0d);
        java.util.Properties properties29 = new java.util.Properties();
        java.util.Collection<java.lang.Object> objCollection30 = properties29.values();
        java.util.Enumeration<java.lang.Object> objEnumeration31 = properties29.keys();
        java.util.Properties properties32 = new java.util.Properties();
        java.lang.Object obj34 = properties32.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration35 = properties32.elements();
        boolean boolean36 = properties32.isEmpty();
        java.util.Set<java.lang.Object> objSet37 = properties32.keySet();
        java.util.Enumeration<java.lang.Object> objEnumeration38 = properties32.keys();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet39 = properties32.entrySet();
        java.lang.Object obj40 = properties26.put((java.lang.Object) properties29, (java.lang.Object) properties32);
        java.util.Properties properties41 = new java.util.Properties();
        java.util.Properties properties42 = new java.util.Properties();
        java.lang.Object obj44 = properties42.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet45 = properties42.stringPropertyNames();
        boolean boolean46 = properties41.containsValue((java.lang.Object) properties42);
        java.util.Enumeration<?> wildcardEnumeration47 = properties42.propertyNames();
        java.util.Properties properties48 = new java.util.Properties();
        java.lang.Object obj50 = properties48.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration51 = properties48.elements();
        boolean boolean52 = properties48.isEmpty();
        java.util.Set<java.lang.Object> objSet53 = properties48.keySet();
        java.util.Enumeration<java.lang.Object> objEnumeration54 = properties48.keys();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet55 = properties48.entrySet();
        boolean boolean56 = properties42.containsValue((java.lang.Object) objEntrySet55);
        boolean boolean57 = properties0.remove((java.lang.Object) properties29, (java.lang.Object) boolean56);
        java.lang.Object obj59 = properties0.remove((java.lang.Object) (-1L));
        java.util.Properties properties60 = new java.util.Properties();
        java.util.Collection<java.lang.Object> objCollection61 = properties60.values();
        java.util.Collection<java.lang.Object> objCollection62 = properties60.values();
        java.util.Properties properties63 = new java.util.Properties(properties60);
        int int64 = properties60.size();
        java.util.Properties properties65 = new java.util.Properties(properties60);
        int int66 = properties65.size();
        boolean boolean67 = properties65.isEmpty();
        java.util.Properties properties68 = new java.util.Properties(properties65);
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet69 = properties65.entrySet();
        boolean boolean70 = properties0.containsValue((java.lang.Object) properties65);
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(objEnumeration3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(objSet5);
        org.junit.Assert.assertNotNull(properties13);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 50 + "'", int14 == 50);
        org.junit.Assert.assertNull(obj17);
        org.junit.Assert.assertNotNull(objEnumeration18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(objSet20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNull(obj23);
        org.junit.Assert.assertNotNull(objEnumeration25);
        org.junit.Assert.assertNull(obj28);
        org.junit.Assert.assertNotNull(objCollection30);
        org.junit.Assert.assertNotNull(objEnumeration31);
        org.junit.Assert.assertNull(obj34);
        org.junit.Assert.assertNotNull(objEnumeration35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNotNull(objSet37);
        org.junit.Assert.assertNotNull(objEnumeration38);
        org.junit.Assert.assertNotNull(objEntrySet39);
        org.junit.Assert.assertNull(obj40);
        org.junit.Assert.assertNull(obj44);
        org.junit.Assert.assertNotNull(strSet45);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(wildcardEnumeration47);
        org.junit.Assert.assertNull(obj50);
        org.junit.Assert.assertNotNull(objEnumeration51);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertNotNull(objSet53);
        org.junit.Assert.assertNotNull(objEnumeration54);
        org.junit.Assert.assertNotNull(objEntrySet55);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertNull(obj59);
        org.junit.Assert.assertNotNull(objCollection61);
        org.junit.Assert.assertNotNull(objCollection62);
        org.junit.Assert.assertTrue("'" + int64 + "' != '" + 0 + "'", int64 == 0);
        org.junit.Assert.assertTrue("'" + int66 + "' != '" + 0 + "'", int66 == 0);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + true + "'", boolean67 == true);
        org.junit.Assert.assertNotNull(objEntrySet69);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + true + "'", boolean70 == true);
    }

    @Test
    public void test7785() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7785");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration3 = properties0.elements();
        boolean boolean4 = properties0.isEmpty();
        java.util.Set<java.lang.Object> objSet5 = properties0.keySet();
        java.util.Enumeration<java.lang.Object> objEnumeration6 = properties0.keys();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet7 = properties0.entrySet();
        java.util.Properties properties8 = new java.util.Properties(properties0);
        java.util.Enumeration<java.lang.Object> objEnumeration9 = properties8.keys();
        properties8.clear();
        java.util.Properties properties11 = new java.util.Properties();
        java.lang.Object obj13 = properties11.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration14 = properties11.elements();
        boolean boolean15 = properties11.isEmpty();
        java.util.Set<java.lang.Object> objSet16 = properties11.keySet();
        boolean boolean17 = properties11.isEmpty();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet18 = properties11.entrySet();
        java.util.Properties properties19 = new java.util.Properties();
        java.lang.Object obj21 = properties19.remove((java.lang.Object) 0.0d);
        boolean boolean22 = properties19.isEmpty();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties23 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        boolean boolean24 = properties19.containsValue((java.lang.Object) atomikosProperties23);
        java.util.Properties properties25 = new java.util.Properties();
        java.lang.Object obj27 = properties25.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration28 = properties25.elements();
        int int29 = properties25.size();
        java.util.Properties properties30 = new java.util.Properties(properties25);
        java.util.Set<java.lang.String> strSet31 = properties25.stringPropertyNames();
        java.util.Set<java.lang.String> strSet32 = properties25.stringPropertyNames();
        java.lang.Object obj33 = properties11.getOrDefault((java.lang.Object) properties19, (java.lang.Object) properties25);
        boolean boolean34 = properties11.isEmpty();
        java.util.Properties properties35 = new java.util.Properties();
        java.lang.Object obj37 = properties35.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration38 = properties35.elements();
        boolean boolean39 = properties35.isEmpty();
        java.util.Set<java.lang.Object> objSet40 = properties35.keySet();
        java.util.Enumeration<java.lang.Object> objEnumeration41 = properties35.keys();
        java.lang.String str43 = properties35.getProperty("hi!");
        java.lang.String str45 = properties35.getProperty("");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties46 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties46.setSerialJtaTransactions(false);
        atomikosProperties46.setThreadedTwoPhaseCommit(true);
        atomikosProperties46.setEnableLogging(false);
        boolean boolean53 = properties35.containsKey((java.lang.Object) atomikosProperties46);
        atomikosProperties46.setService("tmlog");
        boolean boolean56 = properties11.contains((java.lang.Object) atomikosProperties46);
        properties8.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties11);
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(objEnumeration3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(objSet5);
        org.junit.Assert.assertNotNull(objEnumeration6);
        org.junit.Assert.assertNotNull(objEntrySet7);
        org.junit.Assert.assertNotNull(objEnumeration9);
        org.junit.Assert.assertNull(obj13);
        org.junit.Assert.assertNotNull(objEnumeration14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(objSet16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(objEntrySet18);
        org.junit.Assert.assertNull(obj21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNull(obj27);
        org.junit.Assert.assertNotNull(objEnumeration28);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 0 + "'", int29 == 0);
        org.junit.Assert.assertNotNull(strSet31);
        org.junit.Assert.assertNotNull(strSet32);
        org.junit.Assert.assertNotNull(obj33);
        org.junit.Assert.assertEquals(obj33.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj33), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj33), "{}");
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertNull(obj37);
        org.junit.Assert.assertNotNull(objEnumeration38);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNotNull(objSet40);
        org.junit.Assert.assertNotNull(objEnumeration41);
        org.junit.Assert.assertNull(str43);
        org.junit.Assert.assertNull(str45);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
    }

    @Test
    public void test7786() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7786");
        java.util.Properties properties0 = new java.util.Properties();
        java.util.Collection<java.lang.Object> objCollection1 = properties0.values();
        java.util.Enumeration<java.lang.Object> objEnumeration2 = properties0.keys();
        properties0.clear();
        java.lang.String str4 = properties0.toString();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties5 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties5.setSerialJtaTransactions(false);
        atomikosProperties5.setThreadedTwoPhaseCommit(true);
        atomikosProperties5.setMaxTimeout((long) '#');
        boolean boolean12 = atomikosProperties5.isEnableLogging();
        atomikosProperties5.setCheckpointInterval((long) (byte) -1);
        atomikosProperties5.setCheckpointInterval(0L);
        java.lang.String str17 = atomikosProperties5.getService();
        boolean boolean18 = atomikosProperties5.isForceShutdownOnVmExit();
        java.util.Properties properties19 = new java.util.Properties();
        java.lang.Object obj21 = properties19.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration22 = properties19.elements();
        boolean boolean23 = properties19.isEmpty();
        java.util.Set<java.lang.Object> objSet24 = properties19.keySet();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties25 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties25.setSerialJtaTransactions(false);
        atomikosProperties25.setThreadedTwoPhaseCommit(true);
        atomikosProperties25.setThreadedTwoPhaseCommit(true);
        java.util.Properties properties32 = atomikosProperties25.asProperties();
        int int33 = atomikosProperties25.getMaxActives();
        java.util.Properties properties34 = new java.util.Properties();
        java.lang.Object obj36 = properties34.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration37 = properties34.elements();
        boolean boolean38 = properties34.isEmpty();
        java.util.Set<java.lang.Object> objSet39 = properties34.keySet();
        boolean boolean41 = properties34.containsKey((java.lang.Object) (-1.0f));
        java.lang.Object obj42 = properties19.put((java.lang.Object) atomikosProperties25, (java.lang.Object) properties34);
        boolean boolean43 = properties0.remove((java.lang.Object) atomikosProperties5, (java.lang.Object) atomikosProperties25);
        atomikosProperties25.setLogBaseDir("{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=100, com.atomikos.icatch.serial_jta_transactions=false, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=35, com.atomikos.icatch.service={=hi!}, com.atomikos.icatch.threaded_2pc=true, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
        org.junit.Assert.assertNotNull(objCollection1);
        org.junit.Assert.assertNotNull(objEnumeration2);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "{}" + "'", str4, "{}");
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNull(str17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNull(obj21);
        org.junit.Assert.assertNotNull(objEnumeration22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNotNull(objSet24);
        org.junit.Assert.assertNotNull(properties32);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 50 + "'", int33 == 50);
        org.junit.Assert.assertNull(obj36);
        org.junit.Assert.assertNotNull(objEnumeration37);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertNotNull(objSet39);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNull(obj42);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
    }

    @Test
    public void test7787() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7787");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration3 = properties0.elements();
        boolean boolean4 = properties0.isEmpty();
        java.util.Set<java.lang.Object> objSet5 = properties0.keySet();
        java.util.Enumeration<java.lang.Object> objEnumeration6 = properties0.keys();
        java.lang.String str8 = properties0.getProperty("hi!");
        java.lang.String str10 = properties0.getProperty("");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties11 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties11.setSerialJtaTransactions(false);
        atomikosProperties11.setThreadedTwoPhaseCommit(true);
        atomikosProperties11.setEnableLogging(false);
        boolean boolean18 = properties0.containsKey((java.lang.Object) atomikosProperties11);
        int int19 = properties0.size();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties20 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties20.setSerialJtaTransactions(false);
        atomikosProperties20.setThreadedTwoPhaseCommit(true);
        atomikosProperties20.setMaxTimeout((long) '#');
        boolean boolean27 = atomikosProperties20.isForceShutdownOnVmExit();
        long long28 = atomikosProperties20.getDefaultJtaTimeout();
        boolean boolean29 = atomikosProperties20.isSerialJtaTransactions();
        java.lang.String str30 = atomikosProperties20.getService();
        java.lang.Object obj31 = properties0.get((java.lang.Object) atomikosProperties20);
        atomikosProperties20.setForceShutdownOnVmExit(false);
        atomikosProperties20.setSerialJtaTransactions(true);
        atomikosProperties20.setLogBaseDir("{[com.atomikos.icatch.enable_logging, com.atomikos.icatch.force_shutdown_on_vm_exit, com.atomikos.icatch.checkpoint_interval, com.atomikos.icatch.serial_jta_transactions, com.atomikos.icatch.default_jta_timeout, com.atomikos.icatch.max_timeout, com.atomikos.icatch.threaded_2pc, com.atomikos.icatch.max_actives, com.atomikos.icatch.log_base_name]=false}");
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(objEnumeration3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(objSet5);
        org.junit.Assert.assertNotNull(objEnumeration6);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 0 + "'", int19 == 0);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertTrue("'" + long28 + "' != '" + 10000L + "'", long28 == 10000L);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNull(str30);
        org.junit.Assert.assertNull(obj31);
    }

    @Test
    public void test7788() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7788");
        java.util.Properties properties0 = new java.util.Properties();
        boolean boolean2 = properties0.contains((java.lang.Object) 100.0d);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties3 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties3.setSerialJtaTransactions(false);
        atomikosProperties3.setThreadedTwoPhaseCommit(true);
        atomikosProperties3.setSerialJtaTransactions(false);
        java.lang.String str10 = atomikosProperties3.getService();
        boolean boolean11 = properties0.containsKey((java.lang.Object) atomikosProperties3);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties12 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties12.setSerialJtaTransactions(false);
        atomikosProperties12.setThreadedTwoPhaseCommit(true);
        atomikosProperties12.setMaxTimeout((long) '#');
        boolean boolean19 = atomikosProperties12.isEnableLogging();
        atomikosProperties12.setCheckpointInterval((long) 100);
        atomikosProperties12.setForceShutdownOnVmExit(false);
        boolean boolean24 = properties0.containsValue((java.lang.Object) atomikosProperties12);
        atomikosProperties12.setService("{=hi!}");
        atomikosProperties12.setDefaultJtaTimeout(0L);
        atomikosProperties12.setLogBaseName("");
        java.lang.String str31 = atomikosProperties12.getLogBaseName();
        atomikosProperties12.setDefaultJtaTimeout((long) (byte) 10);
        long long34 = atomikosProperties12.getDefaultJtaTimeout();
        atomikosProperties12.setMaxTimeout((long) (byte) 0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "" + "'", str31, "");
        org.junit.Assert.assertTrue("'" + long34 + "' != '" + 10L + "'", long34 == 10L);
    }

    @Test
    public void test7789() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7789");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setSerialJtaTransactions(false);
        atomikosProperties0.setThreadedTwoPhaseCommit(true);
        atomikosProperties0.setThreadedTwoPhaseCommit(true);
        java.util.Properties properties7 = atomikosProperties0.asProperties();
        int int8 = atomikosProperties0.getMaxActives();
        atomikosProperties0.setService("hi!");
        long long11 = atomikosProperties0.getMaxTimeout();
        atomikosProperties0.setTransactionManagerUniqueName("hi!");
        atomikosProperties0.setEnableLogging(false);
        java.lang.String str16 = atomikosProperties0.getLogBaseDir();
        java.util.Properties properties17 = atomikosProperties0.asProperties();
        java.lang.String str18 = atomikosProperties0.getService();
        org.junit.Assert.assertNotNull(properties7);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 50 + "'", int8 == 50);
        org.junit.Assert.assertTrue("'" + long11 + "' != '" + 300000L + "'", long11 == 300000L);
        org.junit.Assert.assertNull(str16);
        org.junit.Assert.assertNotNull(properties17);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "hi!" + "'", str18, "hi!");
    }

    @Test
    public void test7790() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7790");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        boolean boolean4 = properties0.containsValue((java.lang.Object) "hi!");
        java.lang.Object obj7 = properties0.put((java.lang.Object) (byte) -1, (java.lang.Object) 100L);
        java.util.Enumeration<java.lang.Object> objEnumeration8 = properties0.keys();
        java.util.Enumeration<java.lang.Object> objEnumeration9 = properties0.elements();
        java.lang.Object obj10 = properties0.clone();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties11 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties11.setSerialJtaTransactions(false);
        atomikosProperties11.setThreadedTwoPhaseCommit(true);
        atomikosProperties11.setMaxTimeout((long) '#');
        boolean boolean18 = atomikosProperties11.isEnableLogging();
        atomikosProperties11.setMaxActives((int) '#');
        boolean boolean21 = atomikosProperties11.isForceShutdownOnVmExit();
        atomikosProperties11.setEnableLogging(true);
        atomikosProperties11.setCheckpointInterval((long) 'a');
        atomikosProperties11.setTransactionManagerUniqueName("{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=false, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=true, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
        long long28 = atomikosProperties11.getMaxTimeout();
        boolean boolean29 = atomikosProperties11.isEnableLogging();
        boolean boolean30 = properties0.contains((java.lang.Object) boolean29);
        boolean boolean31 = properties0.isEmpty();
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNull(obj7);
        org.junit.Assert.assertNotNull(objEnumeration8);
        org.junit.Assert.assertNotNull(objEnumeration9);
        org.junit.Assert.assertNotNull(obj10);
        org.junit.Assert.assertEquals(obj10.toString(), "{-1=100}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj10), "{-1=100}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj10), "{-1=100}");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + long28 + "' != '" + 35L + "'", long28 == 35L);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
    }

    @Test
    public void test7791() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7791");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        boolean boolean3 = properties0.isEmpty();
        java.util.Enumeration<java.lang.Object> objEnumeration4 = properties0.elements();
        java.lang.Object obj7 = properties0.replace((java.lang.Object) 1, (java.lang.Object) 1);
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet8 = properties0.entrySet();
        java.util.Enumeration<?> wildcardEnumeration9 = properties0.propertyNames();
        java.lang.Object obj10 = new java.lang.Object();
        java.lang.Class<?> wildcardClass11 = obj10.getClass();
        java.util.Properties properties12 = new java.util.Properties();
        java.util.Collection<java.lang.Object> objCollection13 = properties12.values();
        java.util.Enumeration<java.lang.Object> objEnumeration14 = properties12.keys();
        java.lang.Object obj17 = properties12.setProperty("{}", "{}");
        java.util.Set<java.lang.String> strSet18 = properties12.stringPropertyNames();
        java.util.Properties properties19 = new java.util.Properties();
        boolean boolean21 = properties19.contains((java.lang.Object) 100.0d);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties22 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties22.setSerialJtaTransactions(false);
        atomikosProperties22.setThreadedTwoPhaseCommit(true);
        atomikosProperties22.setSerialJtaTransactions(false);
        java.lang.String str29 = atomikosProperties22.getService();
        boolean boolean30 = properties19.containsKey((java.lang.Object) atomikosProperties22);
        boolean boolean31 = properties12.containsKey((java.lang.Object) properties19);
        java.lang.String str33 = properties12.getProperty("");
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet34 = properties12.entrySet();
        java.lang.Object obj35 = properties0.putIfAbsent(obj10, (java.lang.Object) objEntrySet34);
        java.util.Properties properties36 = new java.util.Properties();
        java.lang.Object obj38 = properties36.remove((java.lang.Object) 0.0d);
        boolean boolean39 = properties36.isEmpty();
        java.util.Enumeration<java.lang.Object> objEnumeration40 = properties36.elements();
        java.util.Enumeration<java.lang.Object> objEnumeration41 = properties36.elements();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties42 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties42.setSerialJtaTransactions(false);
        atomikosProperties42.setThreadedTwoPhaseCommit(true);
        atomikosProperties42.setMaxTimeout((long) '#');
        boolean boolean49 = atomikosProperties42.isForceShutdownOnVmExit();
        int int50 = atomikosProperties42.getMaxActives();
        java.lang.Object obj51 = properties36.remove((java.lang.Object) int50);
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet52 = properties36.entrySet();
        java.util.Properties properties53 = new java.util.Properties(properties36);
        boolean boolean54 = properties0.containsKey((java.lang.Object) properties53);
        java.lang.String str55 = properties0.toString();
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(objEnumeration4);
        org.junit.Assert.assertNull(obj7);
        org.junit.Assert.assertNotNull(objEntrySet8);
        org.junit.Assert.assertNotNull(wildcardEnumeration9);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertNotNull(objCollection13);
        org.junit.Assert.assertNotNull(objEnumeration14);
        org.junit.Assert.assertNull(obj17);
        org.junit.Assert.assertNotNull(strSet18);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNull(str29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNull(str33);
        org.junit.Assert.assertNotNull(objEntrySet34);
        org.junit.Assert.assertNull(obj35);
        org.junit.Assert.assertNull(obj38);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNotNull(objEnumeration40);
        org.junit.Assert.assertNotNull(objEnumeration41);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + 50 + "'", int50 == 50);
        org.junit.Assert.assertNull(obj51);
        org.junit.Assert.assertNotNull(objEntrySet52);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
    }

    @Test
    public void test7792() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7792");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setSerialJtaTransactions(false);
        atomikosProperties0.setThreadedTwoPhaseCommit(true);
        atomikosProperties0.setEnableLogging(false);
        boolean boolean7 = atomikosProperties0.isSerialJtaTransactions();
        int int8 = atomikosProperties0.getMaxActives();
        boolean boolean9 = atomikosProperties0.isSerialJtaTransactions();
        java.lang.String str10 = atomikosProperties0.getService();
        atomikosProperties0.setLogBaseDir("{}");
        java.lang.String str13 = atomikosProperties0.getLogBaseName();
        atomikosProperties0.setMaxActives((int) (short) 0);
        long long16 = atomikosProperties0.getDefaultJtaTimeout();
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 50 + "'", int8 == 50);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "tmlog" + "'", str13, "tmlog");
        org.junit.Assert.assertTrue("'" + long16 + "' != '" + 10000L + "'", long16 == 10000L);
    }

    @Test
    public void test7793() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7793");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration3 = properties0.elements();
        boolean boolean4 = properties0.isEmpty();
        java.util.Enumeration<java.lang.Object> objEnumeration5 = properties0.elements();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet6 = properties0.entrySet();
        java.util.Set<java.lang.String> strSet7 = properties0.stringPropertyNames();
        java.util.Properties properties8 = new java.util.Properties(properties0);
        java.util.Properties properties9 = new java.util.Properties();
        java.lang.Object obj11 = properties9.remove((java.lang.Object) 0.0d);
        boolean boolean12 = properties9.isEmpty();
        java.util.Enumeration<java.lang.Object> objEnumeration13 = properties9.elements();
        java.lang.Object obj16 = properties9.replace((java.lang.Object) 1, (java.lang.Object) 1);
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet17 = properties9.entrySet();
        boolean boolean18 = properties8.contains((java.lang.Object) objEntrySet17);
        properties8.clear();
        java.util.Properties properties20 = new java.util.Properties();
        java.util.Collection<java.lang.Object> objCollection21 = properties20.values();
        java.util.Properties properties22 = new java.util.Properties();
        java.lang.Object obj24 = properties22.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet25 = properties22.stringPropertyNames();
        java.util.Properties properties26 = new java.util.Properties();
        java.util.Properties properties27 = new java.util.Properties();
        java.lang.Object obj29 = properties27.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet30 = properties27.stringPropertyNames();
        boolean boolean31 = properties26.containsValue((java.lang.Object) properties27);
        java.util.Collection<java.lang.Object> objCollection32 = properties26.values();
        java.util.Enumeration<?> wildcardEnumeration33 = properties26.propertyNames();
        java.lang.Object obj35 = properties22.put((java.lang.Object) wildcardEnumeration33, (java.lang.Object) 10.0d);
        boolean boolean36 = properties20.equals((java.lang.Object) 10.0d);
        boolean boolean38 = properties20.containsKey((java.lang.Object) 35);
        java.util.Properties properties39 = new java.util.Properties();
        java.lang.Object obj41 = properties39.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration42 = properties39.elements();
        boolean boolean43 = properties39.isEmpty();
        java.util.Set<java.lang.Object> objSet44 = properties39.keySet();
        java.util.Enumeration<java.lang.Object> objEnumeration45 = properties39.keys();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet46 = properties39.entrySet();
        java.util.Properties properties47 = new java.util.Properties();
        java.lang.Object obj49 = properties47.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration50 = properties47.elements();
        boolean boolean51 = properties47.isEmpty();
        java.util.Set<java.lang.Object> objSet52 = properties47.keySet();
        java.util.Enumeration<java.lang.Object> objEnumeration53 = properties47.keys();
        java.lang.String str55 = properties47.getProperty("hi!");
        java.lang.String str57 = properties47.getProperty("");
        java.lang.Object obj59 = properties39.putIfAbsent((java.lang.Object) "", (java.lang.Object) 100.0d);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties60 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties60.setSerialJtaTransactions(false);
        atomikosProperties60.setThreadedTwoPhaseCommit(true);
        atomikosProperties60.setMaxTimeout((long) '#');
        boolean boolean67 = atomikosProperties60.isEnableLogging();
        atomikosProperties60.setCheckpointInterval((long) (byte) -1);
        atomikosProperties60.setMaxActives((int) (byte) 100);
        atomikosProperties60.setForceShutdownOnVmExit(false);
        java.util.Properties properties74 = new java.util.Properties();
        java.lang.Object obj76 = properties74.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet77 = properties74.stringPropertyNames();
        java.lang.String str78 = properties74.toString();
        java.lang.String str79 = properties74.toString();
        java.util.Set<java.lang.Object> objSet80 = properties74.keySet();
        boolean boolean81 = properties39.remove((java.lang.Object) false, (java.lang.Object) objSet80);
        java.lang.Object obj82 = properties39.clone();
        boolean boolean83 = properties20.containsKey((java.lang.Object) properties39);
        properties8.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties20);
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(objEnumeration3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(objEnumeration5);
        org.junit.Assert.assertNotNull(objEntrySet6);
        org.junit.Assert.assertNotNull(strSet7);
        org.junit.Assert.assertNull(obj11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(objEnumeration13);
        org.junit.Assert.assertNull(obj16);
        org.junit.Assert.assertNotNull(objEntrySet17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(objCollection21);
        org.junit.Assert.assertNull(obj24);
        org.junit.Assert.assertNotNull(strSet25);
        org.junit.Assert.assertNull(obj29);
        org.junit.Assert.assertNotNull(strSet30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(objCollection32);
        org.junit.Assert.assertNotNull(wildcardEnumeration33);
        org.junit.Assert.assertNull(obj35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNull(obj41);
        org.junit.Assert.assertNotNull(objEnumeration42);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNotNull(objSet44);
        org.junit.Assert.assertNotNull(objEnumeration45);
        org.junit.Assert.assertNotNull(objEntrySet46);
        org.junit.Assert.assertNull(obj49);
        org.junit.Assert.assertNotNull(objEnumeration50);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertNotNull(objSet52);
        org.junit.Assert.assertNotNull(objEnumeration53);
        org.junit.Assert.assertNull(str55);
        org.junit.Assert.assertNull(str57);
        org.junit.Assert.assertNull(obj59);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + true + "'", boolean67 == true);
        org.junit.Assert.assertNull(obj76);
        org.junit.Assert.assertNotNull(strSet77);
        org.junit.Assert.assertEquals("'" + str78 + "' != '" + "{}" + "'", str78, "{}");
        org.junit.Assert.assertEquals("'" + str79 + "' != '" + "{}" + "'", str79, "{}");
        org.junit.Assert.assertNotNull(objSet80);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + false + "'", boolean81 == false);
        org.junit.Assert.assertNotNull(obj82);
        org.junit.Assert.assertEquals(obj82.toString(), "{=100.0}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj82), "{=100.0}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj82), "{=100.0}");
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + false + "'", boolean83 == false);
    }

    @Test
    public void test7794() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7794");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setSerialJtaTransactions(false);
        atomikosProperties0.setThreadedTwoPhaseCommit(true);
        atomikosProperties0.setThreadedTwoPhaseCommit(true);
        java.util.Properties properties7 = atomikosProperties0.asProperties();
        int int8 = atomikosProperties0.getMaxActives();
        atomikosProperties0.setService("hi!");
        long long11 = atomikosProperties0.getMaxTimeout();
        boolean boolean12 = atomikosProperties0.isForceShutdownOnVmExit();
        atomikosProperties0.setTransactionManagerUniqueName("{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=false, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.service={{}={}}, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.tm_unique_name=hi!, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
        org.junit.Assert.assertNotNull(properties7);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 50 + "'", int8 == 50);
        org.junit.Assert.assertTrue("'" + long11 + "' != '" + 300000L + "'", long11 == 300000L);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
    }

    @Test
    public void test7795() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7795");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setSerialJtaTransactions(false);
        atomikosProperties0.setThreadedTwoPhaseCommit(true);
        atomikosProperties0.setThreadedTwoPhaseCommit(true);
        java.util.Properties properties7 = atomikosProperties0.asProperties();
        atomikosProperties0.setLogBaseName("hi!");
        long long10 = atomikosProperties0.getDefaultJtaTimeout();
        boolean boolean11 = atomikosProperties0.isSerialJtaTransactions();
        atomikosProperties0.setMaxTimeout((long) (byte) 100);
        atomikosProperties0.setDefaultJtaTimeout(52L);
        java.util.Properties properties16 = atomikosProperties0.asProperties();
        org.junit.Assert.assertNotNull(properties7);
        org.junit.Assert.assertTrue("'" + long10 + "' != '" + 10000L + "'", long10 == 10000L);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(properties16);
    }

    @Test
    public void test7796() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7796");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setSerialJtaTransactions(false);
        boolean boolean3 = atomikosProperties0.isSerialJtaTransactions();
        java.lang.String str4 = atomikosProperties0.getService();
        boolean boolean5 = atomikosProperties0.isEnableLogging();
        atomikosProperties0.setCheckpointInterval((long) (byte) 100);
        atomikosProperties0.setTransactionManagerUniqueName("{=hi!}");
        atomikosProperties0.setCheckpointInterval((long) ' ');
        java.util.Properties properties12 = atomikosProperties0.asProperties();
        java.util.Enumeration<java.lang.Object> objEnumeration13 = properties12.elements();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNotNull(properties12);
        org.junit.Assert.assertNotNull(objEnumeration13);
    }

    @Test
    public void test7797() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7797");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setSerialJtaTransactions(false);
        boolean boolean3 = atomikosProperties0.isSerialJtaTransactions();
        java.lang.String str4 = atomikosProperties0.getService();
        boolean boolean5 = atomikosProperties0.isEnableLogging();
        atomikosProperties0.setCheckpointInterval((long) (byte) 100);
        atomikosProperties0.setTransactionManagerUniqueName("{=hi!}");
        atomikosProperties0.setMaxTimeout(10000L);
        atomikosProperties0.setEnableLogging(false);
        long long14 = atomikosProperties0.getDefaultJtaTimeout();
        atomikosProperties0.setLogBaseName("hi!");
        boolean boolean17 = atomikosProperties0.isThreadedTwoPhaseCommit();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertTrue("'" + long14 + "' != '" + 10000L + "'", long14 == 10000L);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
    }

    @Test
    public void test7798() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7798");
        java.util.Properties properties0 = new java.util.Properties();
        java.util.Properties properties1 = new java.util.Properties();
        java.lang.Object obj3 = properties1.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet4 = properties1.stringPropertyNames();
        boolean boolean5 = properties0.containsValue((java.lang.Object) properties1);
        java.util.Collection<java.lang.Object> objCollection6 = properties0.values();
        java.util.Properties properties8 = new java.util.Properties();
        java.lang.Object obj10 = properties8.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration11 = properties8.elements();
        boolean boolean12 = properties8.isEmpty();
        java.util.Set<java.lang.Object> objSet13 = properties8.keySet();
        java.lang.Object obj14 = properties0.putIfAbsent((java.lang.Object) "hi!", (java.lang.Object) objSet13);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties15 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties15.setSerialJtaTransactions(false);
        boolean boolean18 = atomikosProperties15.isSerialJtaTransactions();
        java.util.Properties properties19 = atomikosProperties15.asProperties();
        java.lang.Object obj22 = properties19.setProperty("hi!", "");
        java.util.Properties properties23 = new java.util.Properties(properties19);
        java.util.Properties properties24 = new java.util.Properties();
        java.lang.Object obj26 = properties24.remove((java.lang.Object) 0.0d);
        java.util.Properties properties27 = new java.util.Properties();
        java.util.Collection<java.lang.Object> objCollection28 = properties27.values();
        java.util.Enumeration<java.lang.Object> objEnumeration29 = properties27.keys();
        java.util.Properties properties30 = new java.util.Properties();
        java.lang.Object obj32 = properties30.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration33 = properties30.elements();
        boolean boolean34 = properties30.isEmpty();
        java.util.Set<java.lang.Object> objSet35 = properties30.keySet();
        java.util.Enumeration<java.lang.Object> objEnumeration36 = properties30.keys();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet37 = properties30.entrySet();
        java.lang.Object obj38 = properties24.put((java.lang.Object) properties27, (java.lang.Object) properties30);
        java.lang.Object obj39 = properties0.putIfAbsent((java.lang.Object) properties23, (java.lang.Object) properties30);
        java.util.Properties properties40 = new java.util.Properties();
        java.lang.Object obj42 = properties40.remove((java.lang.Object) 0.0d);
        java.util.Properties properties43 = new java.util.Properties();
        java.util.Collection<java.lang.Object> objCollection44 = properties43.values();
        java.util.Enumeration<java.lang.Object> objEnumeration45 = properties43.keys();
        java.util.Properties properties46 = new java.util.Properties();
        java.lang.Object obj48 = properties46.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration49 = properties46.elements();
        boolean boolean50 = properties46.isEmpty();
        java.util.Set<java.lang.Object> objSet51 = properties46.keySet();
        java.util.Enumeration<java.lang.Object> objEnumeration52 = properties46.keys();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet53 = properties46.entrySet();
        java.lang.Object obj54 = properties40.put((java.lang.Object) properties43, (java.lang.Object) properties46);
        java.lang.String str56 = properties43.getProperty("{=hi!}");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties57 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties57.setSerialJtaTransactions(false);
        atomikosProperties57.setThreadedTwoPhaseCommit(true);
        atomikosProperties57.setThreadedTwoPhaseCommit(true);
        long long64 = atomikosProperties57.getMaxTimeout();
        boolean boolean65 = properties43.containsValue((java.lang.Object) atomikosProperties57);
        java.util.Enumeration<java.lang.Object> objEnumeration66 = properties43.elements();
        java.util.Set<java.lang.String> strSet67 = properties43.stringPropertyNames();
        java.util.Properties properties68 = new java.util.Properties();
        java.lang.Object obj70 = properties68.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration71 = properties68.elements();
        boolean boolean72 = properties68.isEmpty();
        java.util.Set<java.lang.Object> objSet73 = properties68.keySet();
        java.util.Enumeration<java.lang.Object> objEnumeration74 = properties68.keys();
        java.util.Enumeration<java.lang.Object> objEnumeration75 = properties68.elements();
        java.lang.Object obj76 = properties0.putIfAbsent((java.lang.Object) properties43, (java.lang.Object) objEnumeration75);
        java.util.Set<java.lang.Object> objSet77 = properties43.keySet();
        java.util.Enumeration<java.lang.Object> objEnumeration78 = properties43.keys();
        java.lang.Object obj79 = properties43.clone();
        java.util.Collection<java.lang.Object> objCollection80 = properties43.values();
        org.junit.Assert.assertNull(obj3);
        org.junit.Assert.assertNotNull(strSet4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(objCollection6);
        org.junit.Assert.assertNull(obj10);
        org.junit.Assert.assertNotNull(objEnumeration11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(objSet13);
        org.junit.Assert.assertNull(obj14);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(properties19);
        org.junit.Assert.assertNull(obj22);
        org.junit.Assert.assertNull(obj26);
        org.junit.Assert.assertNotNull(objCollection28);
        org.junit.Assert.assertNotNull(objEnumeration29);
        org.junit.Assert.assertNull(obj32);
        org.junit.Assert.assertNotNull(objEnumeration33);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertNotNull(objSet35);
        org.junit.Assert.assertNotNull(objEnumeration36);
        org.junit.Assert.assertNotNull(objEntrySet37);
        org.junit.Assert.assertNull(obj38);
        org.junit.Assert.assertNull(obj39);
        org.junit.Assert.assertNull(obj42);
        org.junit.Assert.assertNotNull(objCollection44);
        org.junit.Assert.assertNotNull(objEnumeration45);
        org.junit.Assert.assertNull(obj48);
        org.junit.Assert.assertNotNull(objEnumeration49);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertNotNull(objSet51);
        org.junit.Assert.assertNotNull(objEnumeration52);
        org.junit.Assert.assertNotNull(objEntrySet53);
        org.junit.Assert.assertNull(obj54);
        org.junit.Assert.assertNull(str56);
        org.junit.Assert.assertTrue("'" + long64 + "' != '" + 300000L + "'", long64 == 300000L);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertNotNull(objEnumeration66);
        org.junit.Assert.assertNotNull(strSet67);
        org.junit.Assert.assertNull(obj70);
        org.junit.Assert.assertNotNull(objEnumeration71);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + true + "'", boolean72 == true);
        org.junit.Assert.assertNotNull(objSet73);
        org.junit.Assert.assertNotNull(objEnumeration74);
        org.junit.Assert.assertNotNull(objEnumeration75);
        org.junit.Assert.assertNotNull(obj76);
        org.junit.Assert.assertEquals(obj76.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj76), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj76), "{}");
        org.junit.Assert.assertNotNull(objSet77);
        org.junit.Assert.assertNotNull(objEnumeration78);
        org.junit.Assert.assertNotNull(obj79);
        org.junit.Assert.assertEquals(obj79.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj79), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj79), "{}");
        org.junit.Assert.assertNotNull(objCollection80);
    }

    @Test
    public void test7799() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7799");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration3 = properties0.elements();
        int int4 = properties0.size();
        java.util.Properties properties5 = new java.util.Properties();
        java.lang.Object obj7 = properties5.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration8 = properties5.elements();
        boolean boolean9 = properties5.isEmpty();
        java.util.Set<java.lang.Object> objSet10 = properties5.keySet();
        boolean boolean11 = properties0.containsKey((java.lang.Object) objSet10);
        java.util.Properties properties12 = new java.util.Properties();
        java.lang.Object obj14 = properties12.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration15 = properties12.elements();
        boolean boolean16 = properties12.isEmpty();
        java.util.Set<java.lang.Object> objSet17 = properties12.keySet();
        boolean boolean18 = properties12.isEmpty();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet19 = properties12.entrySet();
        java.util.Properties properties20 = new java.util.Properties();
        java.lang.Object obj22 = properties20.remove((java.lang.Object) 0.0d);
        boolean boolean23 = properties20.isEmpty();
        java.lang.Object obj26 = properties20.setProperty("", "hi!");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties27 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties27.setSerialJtaTransactions(false);
        boolean boolean30 = properties12.remove((java.lang.Object) properties20, (java.lang.Object) atomikosProperties27);
        java.util.Properties properties31 = new java.util.Properties(properties20);
        int int32 = properties31.size();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties34 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties34.setSerialJtaTransactions(false);
        boolean boolean37 = atomikosProperties34.isSerialJtaTransactions();
        java.lang.String str38 = atomikosProperties34.getService();
        boolean boolean39 = atomikosProperties34.isEnableLogging();
        java.lang.String str40 = atomikosProperties34.getTransactionManagerUniqueName();
        boolean boolean41 = properties31.remove((java.lang.Object) (byte) 1, (java.lang.Object) atomikosProperties34);
        atomikosProperties34.setEnableLogging(false);
        boolean boolean44 = atomikosProperties34.isThreadedTwoPhaseCommit();
        java.lang.Object obj45 = properties0.get((java.lang.Object) atomikosProperties34);
        java.lang.String str46 = atomikosProperties34.getTransactionManagerUniqueName();
        boolean boolean47 = atomikosProperties34.isSerialJtaTransactions();
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(objEnumeration3);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNull(obj7);
        org.junit.Assert.assertNotNull(objEnumeration8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertNotNull(objSet10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNull(obj14);
        org.junit.Assert.assertNotNull(objEnumeration15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(objSet17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(objEntrySet19);
        org.junit.Assert.assertNull(obj22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNull(obj26);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 0 + "'", int32 == 0);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNull(str38);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNull(str40);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNull(obj45);
        org.junit.Assert.assertNull(str46);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
    }

    @Test
    public void test7800() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7800");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setSerialJtaTransactions(false);
        boolean boolean3 = atomikosProperties0.isSerialJtaTransactions();
        java.lang.String str4 = atomikosProperties0.getService();
        boolean boolean5 = atomikosProperties0.isEnableLogging();
        java.util.Properties properties6 = atomikosProperties0.asProperties();
        java.util.Enumeration<java.lang.Object> objEnumeration7 = properties6.elements();
        java.io.OutputStream outputStream8 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties6.storeToXML(outputStream8, "{com.atomikos.icatch.enable_logging=false, com.atomikos.icatch.force_shutdown_on_vm_exit=true, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=false, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=32, com.atomikos.icatch.service={{}={}}, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.max_actives=-1, com.atomikos.icatch.log_base_name=tmlog}", "hi!");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNotNull(properties6);
        org.junit.Assert.assertNotNull(objEnumeration7);
    }

    @Test
    public void test7801() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7801");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setSerialJtaTransactions(false);
        atomikosProperties0.setThreadedTwoPhaseCommit(true);
        atomikosProperties0.setEnableLogging(false);
        atomikosProperties0.setForceShutdownOnVmExit(true);
        long long9 = atomikosProperties0.getDefaultJtaTimeout();
        atomikosProperties0.setLogBaseName("tmlog");
        atomikosProperties0.setForceShutdownOnVmExit(true);
        java.lang.String str14 = atomikosProperties0.getService();
        atomikosProperties0.setEnableLogging(true);
        boolean boolean17 = atomikosProperties0.isEnableLogging();
        atomikosProperties0.setMaxTimeout((long) (byte) 1);
        atomikosProperties0.setService("{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=false, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.service={{}={}}, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.tm_unique_name=hi!, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
        atomikosProperties0.setEnableLogging(false);
        boolean boolean24 = atomikosProperties0.isThreadedTwoPhaseCommit();
        atomikosProperties0.setSerialJtaTransactions(false);
        org.junit.Assert.assertTrue("'" + long9 + "' != '" + 10000L + "'", long9 == 10000L);
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
    }

    @Test
    public void test7802() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7802");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setSerialJtaTransactions(false);
        boolean boolean3 = atomikosProperties0.isSerialJtaTransactions();
        boolean boolean4 = atomikosProperties0.isEnableLogging();
        long long5 = atomikosProperties0.getMaxTimeout();
        atomikosProperties0.setMaxTimeout((long) 1);
        atomikosProperties0.setEnableLogging(true);
        java.lang.String str10 = atomikosProperties0.getLogBaseDir();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue("'" + long5 + "' != '" + 300000L + "'", long5 == 300000L);
        org.junit.Assert.assertNull(str10);
    }

    @Test
    public void test7803() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7803");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setSerialJtaTransactions(false);
        atomikosProperties0.setThreadedTwoPhaseCommit(true);
        atomikosProperties0.setMaxTimeout((long) '#');
        boolean boolean7 = atomikosProperties0.isEnableLogging();
        int int8 = atomikosProperties0.getMaxActives();
        atomikosProperties0.setCheckpointInterval(10000L);
        atomikosProperties0.setMaxTimeout((long) 35);
        atomikosProperties0.setTransactionManagerUniqueName("hi!");
        atomikosProperties0.setMaxActives((int) 'a');
        java.lang.String str17 = atomikosProperties0.getTransactionManagerUniqueName();
        atomikosProperties0.setLogBaseDir("{hi!=[]}");
        java.lang.String str20 = atomikosProperties0.getLogBaseDir();
        atomikosProperties0.setTransactionManagerUniqueName("{true={com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=100, com.atomikos.icatch.serial_jta_transactions=false, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=35, com.atomikos.icatch.threaded_2pc=true, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}}");
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 50 + "'", int8 == 50);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "hi!" + "'", str17, "hi!");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "{hi!=[]}" + "'", str20, "{hi!=[]}");
    }

    @Test
    public void test7804() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7804");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setSerialJtaTransactions(false);
        atomikosProperties0.setThreadedTwoPhaseCommit(true);
        atomikosProperties0.setEnableLogging(false);
        boolean boolean7 = atomikosProperties0.isSerialJtaTransactions();
        int int8 = atomikosProperties0.getMaxActives();
        boolean boolean9 = atomikosProperties0.isEnableLogging();
        long long10 = atomikosProperties0.getCheckpointInterval();
        long long11 = atomikosProperties0.getDefaultJtaTimeout();
        atomikosProperties0.setMaxActives((-1));
        java.lang.String str14 = atomikosProperties0.getService();
        java.util.Properties properties15 = atomikosProperties0.asProperties();
        java.util.Enumeration<?> wildcardEnumeration16 = properties15.propertyNames();
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 50 + "'", int8 == 50);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + long10 + "' != '" + 500L + "'", long10 == 500L);
        org.junit.Assert.assertTrue("'" + long11 + "' != '" + 10000L + "'", long11 == 10000L);
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertNotNull(properties15);
        org.junit.Assert.assertNotNull(wildcardEnumeration16);
    }

    @Test
    public void test7805() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7805");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet3 = properties0.stringPropertyNames();
        java.util.Properties properties4 = new java.util.Properties();
        java.util.Properties properties5 = new java.util.Properties();
        java.lang.Object obj7 = properties5.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet8 = properties5.stringPropertyNames();
        boolean boolean9 = properties4.containsValue((java.lang.Object) properties5);
        java.util.Collection<java.lang.Object> objCollection10 = properties4.values();
        java.util.Enumeration<?> wildcardEnumeration11 = properties4.propertyNames();
        java.lang.Object obj13 = properties0.put((java.lang.Object) wildcardEnumeration11, (java.lang.Object) 10.0d);
        java.util.Properties properties14 = new java.util.Properties();
        java.lang.Object obj16 = properties14.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration17 = properties14.elements();
        boolean boolean18 = properties14.isEmpty();
        java.util.Set<java.lang.Object> objSet19 = properties14.keySet();
        boolean boolean20 = properties14.isEmpty();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet21 = properties14.entrySet();
        java.util.Properties properties22 = new java.util.Properties();
        java.lang.Object obj24 = properties22.remove((java.lang.Object) 0.0d);
        boolean boolean25 = properties22.isEmpty();
        java.lang.Object obj28 = properties22.setProperty("", "hi!");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties29 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties29.setSerialJtaTransactions(false);
        boolean boolean32 = properties14.remove((java.lang.Object) properties22, (java.lang.Object) atomikosProperties29);
        java.util.Properties properties33 = new java.util.Properties(properties22);
        int int34 = properties33.size();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties36 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties36.setSerialJtaTransactions(false);
        boolean boolean39 = atomikosProperties36.isSerialJtaTransactions();
        java.lang.String str40 = atomikosProperties36.getService();
        boolean boolean41 = atomikosProperties36.isEnableLogging();
        java.lang.String str42 = atomikosProperties36.getTransactionManagerUniqueName();
        boolean boolean43 = properties33.remove((java.lang.Object) (byte) 1, (java.lang.Object) atomikosProperties36);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties44 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties44.setSerialJtaTransactions(false);
        atomikosProperties44.setThreadedTwoPhaseCommit(true);
        atomikosProperties44.setEnableLogging(false);
        boolean boolean51 = atomikosProperties44.isSerialJtaTransactions();
        int int52 = atomikosProperties44.getMaxActives();
        boolean boolean53 = atomikosProperties44.isSerialJtaTransactions();
        boolean boolean54 = properties0.remove((java.lang.Object) properties33, (java.lang.Object) boolean53);
        java.lang.String str55 = properties33.toString();
        java.util.Properties properties56 = new java.util.Properties();
        java.lang.Object obj58 = properties56.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration59 = properties56.elements();
        boolean boolean60 = properties56.isEmpty();
        java.util.Set<java.lang.Object> objSet61 = properties56.keySet();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties62 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties62.setSerialJtaTransactions(false);
        atomikosProperties62.setThreadedTwoPhaseCommit(true);
        atomikosProperties62.setThreadedTwoPhaseCommit(true);
        java.util.Properties properties69 = atomikosProperties62.asProperties();
        int int70 = atomikosProperties62.getMaxActives();
        java.util.Properties properties71 = new java.util.Properties();
        java.lang.Object obj73 = properties71.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration74 = properties71.elements();
        boolean boolean75 = properties71.isEmpty();
        java.util.Set<java.lang.Object> objSet76 = properties71.keySet();
        boolean boolean78 = properties71.containsKey((java.lang.Object) (-1.0f));
        java.lang.Object obj79 = properties56.put((java.lang.Object) atomikosProperties62, (java.lang.Object) properties71);
        properties56.clear();
        java.lang.Object obj81 = properties33.remove((java.lang.Object) properties56);
        java.util.Enumeration<java.lang.Object> objEnumeration82 = properties33.keys();
        int int83 = properties33.size();
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(strSet3);
        org.junit.Assert.assertNull(obj7);
        org.junit.Assert.assertNotNull(strSet8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(objCollection10);
        org.junit.Assert.assertNotNull(wildcardEnumeration11);
        org.junit.Assert.assertNull(obj13);
        org.junit.Assert.assertNull(obj16);
        org.junit.Assert.assertNotNull(objEnumeration17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(objSet19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNotNull(objEntrySet21);
        org.junit.Assert.assertNull(obj24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNull(obj28);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 0 + "'", int34 == 0);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNull(str40);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertNull(str42);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + 50 + "'", int52 == 50);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "{}" + "'", str55, "{}");
        org.junit.Assert.assertNull(obj58);
        org.junit.Assert.assertNotNull(objEnumeration59);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertNotNull(objSet61);
        org.junit.Assert.assertNotNull(properties69);
        org.junit.Assert.assertTrue("'" + int70 + "' != '" + 50 + "'", int70 == 50);
        org.junit.Assert.assertNull(obj73);
        org.junit.Assert.assertNotNull(objEnumeration74);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + true + "'", boolean75 == true);
        org.junit.Assert.assertNotNull(objSet76);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + false + "'", boolean78 == false);
        org.junit.Assert.assertNull(obj79);
        org.junit.Assert.assertNull(obj81);
        org.junit.Assert.assertNotNull(objEnumeration82);
        org.junit.Assert.assertTrue("'" + int83 + "' != '" + 0 + "'", int83 == 0);
    }

    @Test
    public void test7806() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7806");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration3 = properties0.elements();
        boolean boolean4 = properties0.isEmpty();
        java.util.Set<java.lang.Object> objSet5 = properties0.keySet();
        java.util.Enumeration<java.lang.Object> objEnumeration6 = properties0.keys();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet7 = properties0.entrySet();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties8 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties8.setSerialJtaTransactions(false);
        boolean boolean11 = atomikosProperties8.isThreadedTwoPhaseCommit();
        java.util.Properties properties12 = new java.util.Properties();
        java.lang.Object obj14 = properties12.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration15 = properties12.elements();
        int int16 = properties12.size();
        java.util.Properties properties17 = new java.util.Properties();
        java.lang.Object obj19 = properties17.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration20 = properties17.elements();
        boolean boolean21 = properties17.isEmpty();
        java.util.Set<java.lang.Object> objSet22 = properties17.keySet();
        boolean boolean23 = properties12.containsKey((java.lang.Object) objSet22);
        java.util.Enumeration<java.lang.Object> objEnumeration24 = properties12.keys();
        java.util.Properties properties25 = new java.util.Properties();
        java.lang.Object obj27 = properties25.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration28 = properties25.elements();
        boolean boolean29 = properties25.isEmpty();
        java.util.Set<java.lang.Object> objSet30 = properties25.keySet();
        java.util.Enumeration<java.lang.Object> objEnumeration31 = properties25.keys();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet32 = properties25.entrySet();
        boolean boolean34 = properties12.remove((java.lang.Object) properties25, (java.lang.Object) 1.0f);
        java.util.Enumeration<?> wildcardEnumeration35 = properties25.propertyNames();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties36 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties36.setSerialJtaTransactions(false);
        atomikosProperties36.setThreadedTwoPhaseCommit(true);
        atomikosProperties36.setThreadedTwoPhaseCommit(true);
        java.util.Properties properties43 = atomikosProperties36.asProperties();
        java.util.Set<java.lang.String> strSet44 = properties43.stringPropertyNames();
        java.util.Set<java.lang.Object> objSet45 = properties43.keySet();
        java.util.Properties properties46 = new java.util.Properties();
        java.lang.Object obj48 = properties46.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration49 = properties46.elements();
        boolean boolean50 = properties46.isEmpty();
        java.util.Set<java.lang.Object> objSet51 = properties46.keySet();
        boolean boolean52 = properties46.isEmpty();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet53 = properties46.entrySet();
        java.util.Properties properties54 = new java.util.Properties();
        java.lang.Object obj56 = properties54.remove((java.lang.Object) 0.0d);
        boolean boolean57 = properties54.isEmpty();
        java.lang.Object obj60 = properties54.setProperty("", "hi!");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties61 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties61.setSerialJtaTransactions(false);
        boolean boolean64 = properties46.remove((java.lang.Object) properties54, (java.lang.Object) atomikosProperties61);
        atomikosProperties61.setSerialJtaTransactions(false);
        java.lang.Object obj67 = properties25.put((java.lang.Object) objSet45, (java.lang.Object) false);
        java.lang.Object obj68 = properties0.replace((java.lang.Object) atomikosProperties8, (java.lang.Object) properties25);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties69 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties69.setSerialJtaTransactions(false);
        boolean boolean72 = atomikosProperties69.isSerialJtaTransactions();
        atomikosProperties69.setTransactionManagerUniqueName("hi!");
        java.lang.String str75 = atomikosProperties69.getLogBaseName();
        long long76 = atomikosProperties69.getMaxTimeout();
        boolean boolean77 = properties0.containsValue((java.lang.Object) atomikosProperties69);
        java.util.Properties properties78 = new java.util.Properties(properties0);
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(objEnumeration3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(objSet5);
        org.junit.Assert.assertNotNull(objEnumeration6);
        org.junit.Assert.assertNotNull(objEntrySet7);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNull(obj14);
        org.junit.Assert.assertNotNull(objEnumeration15);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0);
        org.junit.Assert.assertNull(obj19);
        org.junit.Assert.assertNotNull(objEnumeration20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(objSet22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(objEnumeration24);
        org.junit.Assert.assertNull(obj27);
        org.junit.Assert.assertNotNull(objEnumeration28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNotNull(objSet30);
        org.junit.Assert.assertNotNull(objEnumeration31);
        org.junit.Assert.assertNotNull(objEntrySet32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(wildcardEnumeration35);
        org.junit.Assert.assertNotNull(properties43);
        org.junit.Assert.assertNotNull(strSet44);
        org.junit.Assert.assertNotNull(objSet45);
        org.junit.Assert.assertNull(obj48);
        org.junit.Assert.assertNotNull(objEnumeration49);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertNotNull(objSet51);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertNotNull(objEntrySet53);
        org.junit.Assert.assertNull(obj56);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertNull(obj60);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertNull(obj67);
        org.junit.Assert.assertNull(obj68);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertEquals("'" + str75 + "' != '" + "tmlog" + "'", str75, "tmlog");
        org.junit.Assert.assertTrue("'" + long76 + "' != '" + 300000L + "'", long76 == 300000L);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + false + "'", boolean77 == false);
    }

    @Test
    public void test7807() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7807");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setSerialJtaTransactions(false);
        atomikosProperties0.setThreadedTwoPhaseCommit(true);
        atomikosProperties0.setEnableLogging(false);
        atomikosProperties0.setForceShutdownOnVmExit(true);
        atomikosProperties0.setService("{{}={}}");
        atomikosProperties0.setLogBaseDir("");
        atomikosProperties0.setEnableLogging(false);
        java.util.Properties properties15 = atomikosProperties0.asProperties();
        java.util.Enumeration<?> wildcardEnumeration16 = properties15.propertyNames();
        boolean boolean17 = properties15.isEmpty();
        java.lang.Object obj20 = properties15.setProperty("{[com.atomikos.icatch.enable_logging, com.atomikos.icatch.force_shutdown_on_vm_exit, com.atomikos.icatch.checkpoint_interval, com.atomikos.icatch.serial_jta_transactions, com.atomikos.icatch.default_jta_timeout, com.atomikos.icatch.max_timeout, com.atomikos.icatch.threaded_2pc, com.atomikos.icatch.max_actives, com.atomikos.icatch.log_base_name]=false}", "");
        org.junit.Assert.assertNotNull(properties15);
        org.junit.Assert.assertNotNull(wildcardEnumeration16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNull(obj20);
    }

    @Test
    public void test7808() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7808");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setSerialJtaTransactions(false);
        atomikosProperties0.setThreadedTwoPhaseCommit(true);
        atomikosProperties0.setThreadedTwoPhaseCommit(true);
        java.util.Properties properties7 = atomikosProperties0.asProperties();
        int int8 = atomikosProperties0.getMaxActives();
        atomikosProperties0.setService("hi!");
        long long11 = atomikosProperties0.getMaxTimeout();
        atomikosProperties0.setLogBaseName("{}");
        boolean boolean14 = atomikosProperties0.isSerialJtaTransactions();
        atomikosProperties0.setForceShutdownOnVmExit(false);
        atomikosProperties0.setMaxTimeout((long) (byte) 0);
        atomikosProperties0.setCheckpointInterval((long) (byte) 10);
        atomikosProperties0.setLogBaseDir("{hi!=[], {=hi!}={com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=false, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.tm_unique_name=tmlog, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}}");
        org.junit.Assert.assertNotNull(properties7);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 50 + "'", int8 == 50);
        org.junit.Assert.assertTrue("'" + long11 + "' != '" + 300000L + "'", long11 == 300000L);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
    }

    @Test
    public void test7809() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7809");
        java.util.Properties properties0 = new java.util.Properties();
        boolean boolean2 = properties0.contains((java.lang.Object) 100.0d);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties3 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties3.setSerialJtaTransactions(false);
        atomikosProperties3.setThreadedTwoPhaseCommit(true);
        atomikosProperties3.setSerialJtaTransactions(false);
        java.lang.String str10 = atomikosProperties3.getService();
        boolean boolean11 = properties0.containsKey((java.lang.Object) atomikosProperties3);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties12 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties12.setSerialJtaTransactions(false);
        atomikosProperties12.setThreadedTwoPhaseCommit(true);
        atomikosProperties12.setMaxTimeout((long) '#');
        boolean boolean19 = atomikosProperties12.isEnableLogging();
        atomikosProperties12.setCheckpointInterval((long) 100);
        atomikosProperties12.setForceShutdownOnVmExit(false);
        boolean boolean24 = properties0.containsValue((java.lang.Object) atomikosProperties12);
        atomikosProperties12.setService("{=hi!}");
        atomikosProperties12.setDefaultJtaTimeout(0L);
        atomikosProperties12.setThreadedTwoPhaseCommit(true);
        boolean boolean31 = atomikosProperties12.isThreadedTwoPhaseCommit();
        java.util.Properties properties32 = atomikosProperties12.asProperties();
        atomikosProperties12.setLogBaseName("{{}={}}");
        atomikosProperties12.setSerialJtaTransactions(false);
        atomikosProperties12.setSerialJtaTransactions(true);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNotNull(properties32);
    }

    @Test
    public void test7810() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7810");
        java.util.Properties properties0 = new java.util.Properties();
        java.util.Properties properties1 = new java.util.Properties();
        java.lang.Object obj3 = properties1.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet4 = properties1.stringPropertyNames();
        boolean boolean5 = properties0.containsValue((java.lang.Object) properties1);
        java.util.Collection<java.lang.Object> objCollection6 = properties0.values();
        java.util.Properties properties8 = new java.util.Properties();
        java.lang.Object obj10 = properties8.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration11 = properties8.elements();
        boolean boolean12 = properties8.isEmpty();
        java.util.Set<java.lang.Object> objSet13 = properties8.keySet();
        java.lang.Object obj14 = properties0.putIfAbsent((java.lang.Object) "hi!", (java.lang.Object) objSet13);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties15 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties15.setSerialJtaTransactions(false);
        boolean boolean18 = atomikosProperties15.isSerialJtaTransactions();
        java.util.Properties properties19 = atomikosProperties15.asProperties();
        java.lang.Object obj22 = properties19.setProperty("hi!", "");
        java.util.Properties properties23 = new java.util.Properties(properties19);
        java.util.Properties properties24 = new java.util.Properties();
        java.lang.Object obj26 = properties24.remove((java.lang.Object) 0.0d);
        java.util.Properties properties27 = new java.util.Properties();
        java.util.Collection<java.lang.Object> objCollection28 = properties27.values();
        java.util.Enumeration<java.lang.Object> objEnumeration29 = properties27.keys();
        java.util.Properties properties30 = new java.util.Properties();
        java.lang.Object obj32 = properties30.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration33 = properties30.elements();
        boolean boolean34 = properties30.isEmpty();
        java.util.Set<java.lang.Object> objSet35 = properties30.keySet();
        java.util.Enumeration<java.lang.Object> objEnumeration36 = properties30.keys();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet37 = properties30.entrySet();
        java.lang.Object obj38 = properties24.put((java.lang.Object) properties27, (java.lang.Object) properties30);
        java.lang.Object obj39 = properties0.putIfAbsent((java.lang.Object) properties23, (java.lang.Object) properties30);
        properties30.clear();
        java.util.Enumeration<java.lang.Object> objEnumeration41 = properties30.elements();
        java.util.Collection<java.lang.Object> objCollection42 = properties30.values();
        java.lang.String str44 = properties30.getProperty("{{}=true}");
        org.junit.Assert.assertNull(obj3);
        org.junit.Assert.assertNotNull(strSet4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(objCollection6);
        org.junit.Assert.assertNull(obj10);
        org.junit.Assert.assertNotNull(objEnumeration11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(objSet13);
        org.junit.Assert.assertNull(obj14);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(properties19);
        org.junit.Assert.assertNull(obj22);
        org.junit.Assert.assertNull(obj26);
        org.junit.Assert.assertNotNull(objCollection28);
        org.junit.Assert.assertNotNull(objEnumeration29);
        org.junit.Assert.assertNull(obj32);
        org.junit.Assert.assertNotNull(objEnumeration33);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertNotNull(objSet35);
        org.junit.Assert.assertNotNull(objEnumeration36);
        org.junit.Assert.assertNotNull(objEntrySet37);
        org.junit.Assert.assertNull(obj38);
        org.junit.Assert.assertNull(obj39);
        org.junit.Assert.assertNotNull(objEnumeration41);
        org.junit.Assert.assertNotNull(objCollection42);
        org.junit.Assert.assertNull(str44);
    }

    @Test
    public void test7811() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7811");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration3 = properties0.elements();
        boolean boolean4 = properties0.isEmpty();
        java.util.Set<java.lang.Object> objSet5 = properties0.keySet();
        boolean boolean6 = properties0.isEmpty();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet7 = properties0.entrySet();
        java.util.Properties properties8 = new java.util.Properties();
        java.lang.Object obj10 = properties8.remove((java.lang.Object) 0.0d);
        boolean boolean11 = properties8.isEmpty();
        java.lang.Object obj14 = properties8.setProperty("", "hi!");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties15 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties15.setSerialJtaTransactions(false);
        boolean boolean18 = properties0.remove((java.lang.Object) properties8, (java.lang.Object) atomikosProperties15);
        java.util.Properties properties19 = new java.util.Properties(properties8);
        int int20 = properties19.size();
        java.util.Enumeration<java.lang.Object> objEnumeration21 = properties19.elements();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties22 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties22.setSerialJtaTransactions(false);
        boolean boolean25 = atomikosProperties22.isSerialJtaTransactions();
        java.lang.String str26 = atomikosProperties22.getService();
        atomikosProperties22.setEnableLogging(false);
        java.util.Properties properties29 = atomikosProperties22.asProperties();
        atomikosProperties22.setCheckpointInterval((long) 1);
        boolean boolean32 = properties19.containsValue((java.lang.Object) atomikosProperties22);
        long long33 = atomikosProperties22.getMaxTimeout();
        boolean boolean34 = atomikosProperties22.isEnableLogging();
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(objEnumeration3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(objSet5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(objEntrySet7);
        org.junit.Assert.assertNull(obj10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNull(obj14);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 0 + "'", int20 == 0);
        org.junit.Assert.assertNotNull(objEnumeration21);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNull(str26);
        org.junit.Assert.assertNotNull(properties29);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue("'" + long33 + "' != '" + 300000L + "'", long33 == 300000L);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
    }

    @Test
    public void test7812() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7812");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        boolean boolean4 = properties0.containsValue((java.lang.Object) "hi!");
        java.lang.String str6 = properties0.getProperty("hi!");
        java.util.Enumeration<?> wildcardEnumeration7 = properties0.propertyNames();
        java.lang.String str9 = properties0.getProperty("{{}={}}");
        java.lang.String str10 = properties0.toString();
        java.util.Properties properties11 = new java.util.Properties();
        java.util.Collection<java.lang.Object> objCollection12 = properties11.values();
        java.util.Enumeration<java.lang.Object> objEnumeration13 = properties11.keys();
        java.lang.Object obj16 = properties11.setProperty("{}", "{}");
        java.util.Set<java.lang.String> strSet17 = properties11.stringPropertyNames();
        java.util.Properties properties18 = new java.util.Properties();
        boolean boolean20 = properties18.contains((java.lang.Object) 100.0d);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties21 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties21.setSerialJtaTransactions(false);
        atomikosProperties21.setThreadedTwoPhaseCommit(true);
        atomikosProperties21.setSerialJtaTransactions(false);
        java.lang.String str28 = atomikosProperties21.getService();
        boolean boolean29 = properties18.containsKey((java.lang.Object) atomikosProperties21);
        boolean boolean30 = properties11.containsKey((java.lang.Object) properties18);
        java.lang.String str32 = properties11.getProperty("");
        java.util.Enumeration<java.lang.Object> objEnumeration33 = properties11.elements();
        boolean boolean34 = properties0.equals((java.lang.Object) objEnumeration33);
        java.io.PrintWriter printWriter35 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties0.list(printWriter35);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertNotNull(wildcardEnumeration7);
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "{}" + "'", str10, "{}");
        org.junit.Assert.assertNotNull(objCollection12);
        org.junit.Assert.assertNotNull(objEnumeration13);
        org.junit.Assert.assertNull(obj16);
        org.junit.Assert.assertNotNull(strSet17);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNull(str28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNull(str32);
        org.junit.Assert.assertNotNull(objEnumeration33);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
    }

    @Test
    public void test7813() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7813");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        boolean boolean4 = properties0.containsValue((java.lang.Object) "hi!");
        java.lang.String str6 = properties0.getProperty("hi!");
        java.util.Enumeration<?> wildcardEnumeration7 = properties0.propertyNames();
        java.lang.String str9 = properties0.getProperty("{{}={}}");
        java.lang.String str10 = properties0.toString();
        java.util.Properties properties11 = new java.util.Properties();
        boolean boolean13 = properties11.contains((java.lang.Object) 100.0d);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties14 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties14.setSerialJtaTransactions(false);
        atomikosProperties14.setThreadedTwoPhaseCommit(true);
        atomikosProperties14.setSerialJtaTransactions(false);
        java.lang.String str21 = atomikosProperties14.getService();
        boolean boolean22 = properties11.containsKey((java.lang.Object) atomikosProperties14);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties23 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties23.setSerialJtaTransactions(false);
        atomikosProperties23.setThreadedTwoPhaseCommit(true);
        atomikosProperties23.setMaxTimeout((long) '#');
        boolean boolean30 = atomikosProperties23.isEnableLogging();
        atomikosProperties23.setCheckpointInterval((long) 100);
        atomikosProperties23.setForceShutdownOnVmExit(false);
        boolean boolean35 = properties11.containsValue((java.lang.Object) atomikosProperties23);
        atomikosProperties23.setService("{=hi!}");
        java.util.Properties properties38 = atomikosProperties23.asProperties();
        java.lang.Object obj39 = properties0.get((java.lang.Object) atomikosProperties23);
        java.util.Set<java.lang.Object> objSet40 = properties0.keySet();
        java.lang.Object obj41 = properties0.clone();
        java.util.Set<java.lang.Object> objSet42 = properties0.keySet();
        java.io.PrintStream printStream43 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties0.list(printStream43);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertNotNull(wildcardEnumeration7);
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "{}" + "'", str10, "{}");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNull(str21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(properties38);
        org.junit.Assert.assertNull(obj39);
        org.junit.Assert.assertNotNull(objSet40);
        org.junit.Assert.assertNotNull(obj41);
        org.junit.Assert.assertEquals(obj41.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj41), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj41), "{}");
        org.junit.Assert.assertNotNull(objSet42);
    }

    @Test
    public void test7814() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7814");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration3 = properties0.elements();
        boolean boolean4 = properties0.isEmpty();
        java.util.Set<java.lang.Object> objSet5 = properties0.keySet();
        boolean boolean6 = properties0.isEmpty();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet7 = properties0.entrySet();
        java.util.Properties properties8 = new java.util.Properties();
        java.lang.Object obj10 = properties8.remove((java.lang.Object) 0.0d);
        boolean boolean11 = properties8.isEmpty();
        java.lang.Object obj14 = properties8.setProperty("", "hi!");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties15 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties15.setSerialJtaTransactions(false);
        boolean boolean18 = properties0.remove((java.lang.Object) properties8, (java.lang.Object) atomikosProperties15);
        java.util.Properties properties19 = new java.util.Properties(properties8);
        int int20 = properties19.size();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties22 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties22.setSerialJtaTransactions(false);
        boolean boolean25 = atomikosProperties22.isSerialJtaTransactions();
        java.lang.String str26 = atomikosProperties22.getService();
        boolean boolean27 = atomikosProperties22.isEnableLogging();
        java.lang.String str28 = atomikosProperties22.getTransactionManagerUniqueName();
        boolean boolean29 = properties19.remove((java.lang.Object) (byte) 1, (java.lang.Object) atomikosProperties22);
        atomikosProperties22.setMaxActives((int) (short) -1);
        boolean boolean32 = atomikosProperties22.isThreadedTwoPhaseCommit();
        atomikosProperties22.setDefaultJtaTimeout((long) 100);
        boolean boolean35 = atomikosProperties22.isThreadedTwoPhaseCommit();
        atomikosProperties22.setDefaultJtaTimeout((long) '#');
        java.util.Properties properties38 = atomikosProperties22.asProperties();
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(objEnumeration3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(objSet5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(objEntrySet7);
        org.junit.Assert.assertNull(obj10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNull(obj14);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 0 + "'", int20 == 0);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNull(str26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNull(str28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(properties38);
    }

    @Test
    public void test7815() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7815");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setSerialJtaTransactions(false);
        atomikosProperties0.setThreadedTwoPhaseCommit(true);
        atomikosProperties0.setMaxTimeout((long) '#');
        boolean boolean7 = atomikosProperties0.isEnableLogging();
        atomikosProperties0.setCheckpointInterval((long) (byte) -1);
        atomikosProperties0.setEnableLogging(true);
        java.lang.String str12 = atomikosProperties0.getService();
        boolean boolean13 = atomikosProperties0.isThreadedTwoPhaseCommit();
        atomikosProperties0.setThreadedTwoPhaseCommit(true);
        atomikosProperties0.setTransactionManagerUniqueName("{tmlog=}");
        boolean boolean18 = atomikosProperties0.isSerialJtaTransactions();
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
    }

    @Test
    public void test7816() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7816");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration3 = properties0.elements();
        boolean boolean4 = properties0.isEmpty();
        java.util.Set<java.lang.Object> objSet5 = properties0.keySet();
        java.util.Enumeration<java.lang.Object> objEnumeration6 = properties0.keys();
        java.util.Enumeration<java.lang.Object> objEnumeration7 = properties0.elements();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties8 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties8.setSerialJtaTransactions(false);
        boolean boolean11 = atomikosProperties8.isSerialJtaTransactions();
        java.lang.String str12 = atomikosProperties8.getService();
        boolean boolean13 = atomikosProperties8.isEnableLogging();
        atomikosProperties8.setCheckpointInterval((long) (byte) 100);
        java.lang.String str16 = atomikosProperties8.getLogBaseName();
        boolean boolean17 = properties0.contains((java.lang.Object) atomikosProperties8);
        java.lang.Object obj18 = properties0.clone();
        java.lang.String str20 = properties0.getProperty("{=hi!}");
        java.util.Properties properties21 = new java.util.Properties();
        java.lang.Object obj23 = properties21.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<?> wildcardEnumeration24 = properties21.propertyNames();
        java.util.Properties properties25 = new java.util.Properties();
        java.lang.Object obj27 = properties25.remove((java.lang.Object) 0.0d);
        boolean boolean28 = properties25.isEmpty();
        java.util.Enumeration<java.lang.Object> objEnumeration29 = properties25.elements();
        java.util.Enumeration<java.lang.Object> objEnumeration30 = properties25.elements();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties31 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties31.setSerialJtaTransactions(false);
        atomikosProperties31.setThreadedTwoPhaseCommit(true);
        atomikosProperties31.setMaxTimeout((long) '#');
        boolean boolean38 = atomikosProperties31.isForceShutdownOnVmExit();
        int int39 = atomikosProperties31.getMaxActives();
        java.lang.Object obj40 = properties25.remove((java.lang.Object) int39);
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet41 = properties25.entrySet();
        java.util.Properties properties42 = new java.util.Properties();
        java.lang.Object obj44 = properties42.remove((java.lang.Object) 0.0d);
        java.lang.String str46 = properties42.getProperty("");
        java.lang.Object obj47 = properties21.getOrDefault((java.lang.Object) properties25, (java.lang.Object) str46);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties48 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties48.setSerialJtaTransactions(false);
        atomikosProperties48.setThreadedTwoPhaseCommit(true);
        atomikosProperties48.setMaxTimeout((long) '#');
        boolean boolean55 = atomikosProperties48.isEnableLogging();
        atomikosProperties48.setCheckpointInterval((long) 100);
        atomikosProperties48.setForceShutdownOnVmExit(false);
        boolean boolean60 = properties21.equals((java.lang.Object) atomikosProperties48);
        java.lang.Object obj61 = properties0.remove((java.lang.Object) properties21);
        java.util.Enumeration<java.lang.Object> objEnumeration62 = properties21.keys();
        boolean boolean63 = properties21.isEmpty();
        java.lang.Object obj64 = properties21.clone();
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(objEnumeration3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(objSet5);
        org.junit.Assert.assertNotNull(objEnumeration6);
        org.junit.Assert.assertNotNull(objEnumeration7);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "tmlog" + "'", str16, "tmlog");
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(obj18);
        org.junit.Assert.assertEquals(obj18.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj18), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj18), "{}");
        org.junit.Assert.assertNull(str20);
        org.junit.Assert.assertNull(obj23);
        org.junit.Assert.assertNotNull(wildcardEnumeration24);
        org.junit.Assert.assertNull(obj27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNotNull(objEnumeration29);
        org.junit.Assert.assertNotNull(objEnumeration30);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 50 + "'", int39 == 50);
        org.junit.Assert.assertNull(obj40);
        org.junit.Assert.assertNotNull(objEntrySet41);
        org.junit.Assert.assertNull(obj44);
        org.junit.Assert.assertNull(str46);
        org.junit.Assert.assertNull(obj47);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertNull(obj61);
        org.junit.Assert.assertNotNull(objEnumeration62);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertNotNull(obj64);
        org.junit.Assert.assertEquals(obj64.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj64), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj64), "{}");
    }

    @Test
    public void test7817() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7817");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration3 = properties0.elements();
        int int4 = properties0.size();
        java.util.Properties properties5 = new java.util.Properties();
        java.lang.Object obj7 = properties5.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration8 = properties5.elements();
        boolean boolean9 = properties5.isEmpty();
        java.util.Set<java.lang.Object> objSet10 = properties5.keySet();
        boolean boolean11 = properties0.containsKey((java.lang.Object) objSet10);
        java.util.Enumeration<java.lang.Object> objEnumeration12 = properties0.keys();
        java.util.Properties properties13 = new java.util.Properties();
        java.lang.Object obj15 = properties13.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration16 = properties13.elements();
        boolean boolean17 = properties13.isEmpty();
        java.util.Set<java.lang.Object> objSet18 = properties13.keySet();
        java.util.Enumeration<java.lang.Object> objEnumeration19 = properties13.keys();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet20 = properties13.entrySet();
        boolean boolean22 = properties0.remove((java.lang.Object) properties13, (java.lang.Object) 1.0f);
        java.lang.Object obj23 = properties13.clone();
        java.util.Collection<java.lang.Object> objCollection24 = properties13.values();
        java.util.Collection<java.lang.Object> objCollection25 = properties13.values();
        java.lang.String str26 = properties13.toString();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties27 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties27.setSerialJtaTransactions(false);
        atomikosProperties27.setThreadedTwoPhaseCommit(true);
        atomikosProperties27.setMaxTimeout((long) '#');
        boolean boolean34 = atomikosProperties27.isEnableLogging();
        atomikosProperties27.setMaxActives((int) '#');
        atomikosProperties27.setSerialJtaTransactions(true);
        atomikosProperties27.setThreadedTwoPhaseCommit(true);
        java.lang.Class<?> wildcardClass41 = atomikosProperties27.getClass();
        boolean boolean42 = properties13.contains((java.lang.Object) atomikosProperties27);
        boolean boolean43 = properties13.isEmpty();
        java.lang.String str45 = properties13.getProperty("{{hi!=[]}={hi!=[], {}={}}}");
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(objEnumeration3);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNull(obj7);
        org.junit.Assert.assertNotNull(objEnumeration8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertNotNull(objSet10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(objEnumeration12);
        org.junit.Assert.assertNull(obj15);
        org.junit.Assert.assertNotNull(objEnumeration16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(objSet18);
        org.junit.Assert.assertNotNull(objEnumeration19);
        org.junit.Assert.assertNotNull(objEntrySet20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(obj23);
        org.junit.Assert.assertEquals(obj23.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj23), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj23), "{}");
        org.junit.Assert.assertNotNull(objCollection24);
        org.junit.Assert.assertNotNull(objCollection25);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "{}" + "'", str26, "{}");
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertNotNull(wildcardClass41);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNull(str45);
    }

    @Test
    public void test7818() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7818");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        java.util.Properties properties3 = new java.util.Properties();
        java.util.Collection<java.lang.Object> objCollection4 = properties3.values();
        java.util.Enumeration<java.lang.Object> objEnumeration5 = properties3.keys();
        java.util.Properties properties6 = new java.util.Properties();
        java.lang.Object obj8 = properties6.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration9 = properties6.elements();
        boolean boolean10 = properties6.isEmpty();
        java.util.Set<java.lang.Object> objSet11 = properties6.keySet();
        java.util.Enumeration<java.lang.Object> objEnumeration12 = properties6.keys();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet13 = properties6.entrySet();
        java.lang.Object obj14 = properties0.put((java.lang.Object) properties3, (java.lang.Object) properties6);
        java.util.Properties properties15 = new java.util.Properties();
        java.util.Properties properties16 = new java.util.Properties();
        java.lang.Object obj18 = properties16.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet19 = properties16.stringPropertyNames();
        boolean boolean20 = properties15.containsValue((java.lang.Object) properties16);
        java.util.Collection<java.lang.Object> objCollection21 = properties15.values();
        java.util.Properties properties23 = new java.util.Properties();
        java.lang.Object obj25 = properties23.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration26 = properties23.elements();
        boolean boolean27 = properties23.isEmpty();
        java.util.Set<java.lang.Object> objSet28 = properties23.keySet();
        java.lang.Object obj29 = properties15.putIfAbsent((java.lang.Object) "hi!", (java.lang.Object) objSet28);
        java.util.Set<java.lang.Object> objSet30 = properties15.keySet();
        java.util.Set<java.lang.Object> objSet31 = properties15.keySet();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet32 = properties15.entrySet();
        java.lang.Object obj33 = properties3.remove((java.lang.Object) objEntrySet32);
        java.lang.String str34 = properties3.toString();
        java.util.Properties properties35 = new java.util.Properties();
        java.lang.Object obj37 = properties35.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet38 = properties35.stringPropertyNames();
        java.lang.String str39 = properties35.toString();
        java.lang.String str40 = properties35.toString();
        java.util.Set<java.lang.Object> objSet41 = properties35.keySet();
        java.util.Properties properties42 = new java.util.Properties();
        java.lang.Object obj44 = properties42.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration45 = properties42.elements();
        boolean boolean46 = properties42.isEmpty();
        java.util.Set<java.lang.Object> objSet47 = properties42.keySet();
        boolean boolean48 = properties42.isEmpty();
        java.lang.Object obj49 = properties3.putIfAbsent((java.lang.Object) properties35, (java.lang.Object) boolean48);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties50 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties50.setSerialJtaTransactions(false);
        boolean boolean53 = atomikosProperties50.isSerialJtaTransactions();
        java.util.Properties properties54 = atomikosProperties50.asProperties();
        int int55 = atomikosProperties50.getMaxActives();
        boolean boolean57 = properties3.remove((java.lang.Object) int55, (java.lang.Object) 500L);
        java.util.Properties properties58 = new java.util.Properties();
        java.lang.Object obj60 = properties58.remove((java.lang.Object) 0.0d);
        boolean boolean61 = properties58.isEmpty();
        java.lang.Object obj64 = properties58.setProperty("", "hi!");
        java.util.Properties properties65 = new java.util.Properties();
        java.lang.Object obj67 = properties65.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration68 = properties65.elements();
        boolean boolean69 = properties65.isEmpty();
        java.util.Set<java.lang.Object> objSet70 = properties65.keySet();
        boolean boolean71 = properties65.isEmpty();
        java.util.Properties properties72 = new java.util.Properties();
        java.util.Collection<java.lang.Object> objCollection73 = properties72.values();
        java.util.Enumeration<java.lang.Object> objEnumeration74 = properties72.keys();
        java.lang.Object obj75 = properties65.remove((java.lang.Object) properties72);
        java.lang.Object obj76 = properties58.get((java.lang.Object) properties72);
        java.util.Enumeration<java.lang.Object> objEnumeration77 = properties72.keys();
        java.lang.Object obj79 = properties3.replace((java.lang.Object) properties72, (java.lang.Object) 1);
        java.util.Properties properties80 = new java.util.Properties();
        java.util.Properties properties81 = new java.util.Properties();
        java.lang.Object obj83 = properties81.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet84 = properties81.stringPropertyNames();
        boolean boolean85 = properties80.containsValue((java.lang.Object) properties81);
        boolean boolean86 = properties81.isEmpty();
        java.util.Properties properties87 = new java.util.Properties(properties81);
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet88 = properties87.entrySet();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet89 = properties87.entrySet();
        java.lang.Object obj90 = properties72.get((java.lang.Object) objEntrySet89);
        java.lang.String str93 = properties72.getProperty("{{{}={}}={}, =hi!}", "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=false, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(objCollection4);
        org.junit.Assert.assertNotNull(objEnumeration5);
        org.junit.Assert.assertNull(obj8);
        org.junit.Assert.assertNotNull(objEnumeration9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(objSet11);
        org.junit.Assert.assertNotNull(objEnumeration12);
        org.junit.Assert.assertNotNull(objEntrySet13);
        org.junit.Assert.assertNull(obj14);
        org.junit.Assert.assertNull(obj18);
        org.junit.Assert.assertNotNull(strSet19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(objCollection21);
        org.junit.Assert.assertNull(obj25);
        org.junit.Assert.assertNotNull(objEnumeration26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNotNull(objSet28);
        org.junit.Assert.assertNull(obj29);
        org.junit.Assert.assertNotNull(objSet30);
        org.junit.Assert.assertNotNull(objSet31);
        org.junit.Assert.assertNotNull(objEntrySet32);
        org.junit.Assert.assertNull(obj33);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "{}" + "'", str34, "{}");
        org.junit.Assert.assertNull(obj37);
        org.junit.Assert.assertNotNull(strSet38);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "{}" + "'", str39, "{}");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "{}" + "'", str40, "{}");
        org.junit.Assert.assertNotNull(objSet41);
        org.junit.Assert.assertNull(obj44);
        org.junit.Assert.assertNotNull(objEnumeration45);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertNotNull(objSet47);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertNull(obj49);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertNotNull(properties54);
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + 50 + "'", int55 == 50);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertNull(obj60);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertNull(obj64);
        org.junit.Assert.assertNull(obj67);
        org.junit.Assert.assertNotNull(objEnumeration68);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + true + "'", boolean69 == true);
        org.junit.Assert.assertNotNull(objSet70);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + true + "'", boolean71 == true);
        org.junit.Assert.assertNotNull(objCollection73);
        org.junit.Assert.assertNotNull(objEnumeration74);
        org.junit.Assert.assertNull(obj75);
        org.junit.Assert.assertNull(obj76);
        org.junit.Assert.assertNotNull(objEnumeration77);
        org.junit.Assert.assertEquals("'" + obj79 + "' != '" + true + "'", obj79, true);
        org.junit.Assert.assertNull(obj83);
        org.junit.Assert.assertNotNull(strSet84);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + false + "'", boolean85 == false);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + true + "'", boolean86 == true);
        org.junit.Assert.assertNotNull(objEntrySet88);
        org.junit.Assert.assertNotNull(objEntrySet89);
        org.junit.Assert.assertNull(obj90);
        org.junit.Assert.assertEquals("'" + str93 + "' != '" + "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=false, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}" + "'", str93, "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=false, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
    }

    @Test
    public void test7819() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7819");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        boolean boolean3 = properties0.isEmpty();
        java.util.Enumeration<java.lang.Object> objEnumeration4 = properties0.elements();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet5 = properties0.entrySet();
        java.util.Enumeration<java.lang.Object> objEnumeration6 = properties0.keys();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties7 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties7.setSerialJtaTransactions(false);
        atomikosProperties7.setThreadedTwoPhaseCommit(true);
        atomikosProperties7.setThreadedTwoPhaseCommit(true);
        java.util.Properties properties14 = atomikosProperties7.asProperties();
        java.util.Set<java.lang.String> strSet15 = properties14.stringPropertyNames();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties16 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties16.setSerialJtaTransactions(false);
        atomikosProperties16.setThreadedTwoPhaseCommit(true);
        atomikosProperties16.setMaxTimeout((long) '#');
        boolean boolean23 = atomikosProperties16.isEnableLogging();
        int int24 = atomikosProperties16.getMaxActives();
        java.util.Properties properties25 = new java.util.Properties();
        java.lang.Object obj27 = properties25.remove((java.lang.Object) 0.0d);
        boolean boolean28 = properties25.isEmpty();
        java.lang.Object obj31 = properties25.setProperty("", "hi!");
        java.util.Set<java.lang.String> strSet32 = properties25.stringPropertyNames();
        java.lang.Object obj33 = properties14.putIfAbsent((java.lang.Object) atomikosProperties16, (java.lang.Object) strSet32);
        java.lang.Object obj34 = properties0.get((java.lang.Object) properties14);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties35 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties35.setSerialJtaTransactions(false);
        atomikosProperties35.setThreadedTwoPhaseCommit(true);
        atomikosProperties35.setEnableLogging(false);
        boolean boolean42 = atomikosProperties35.isSerialJtaTransactions();
        int int43 = atomikosProperties35.getMaxActives();
        boolean boolean44 = atomikosProperties35.isEnableLogging();
        long long45 = atomikosProperties35.getCheckpointInterval();
        java.lang.String str46 = atomikosProperties35.getService();
        boolean boolean47 = atomikosProperties35.isSerialJtaTransactions();
        atomikosProperties35.setLogBaseDir("{com.atomikos.icatch.enable_logging=false, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=1, com.atomikos.icatch.serial_jta_transactions=false, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
        atomikosProperties35.setLogBaseDir("");
        atomikosProperties35.setForceShutdownOnVmExit(true);
        java.lang.Object obj54 = properties0.remove((java.lang.Object) atomikosProperties35);
        java.lang.String str57 = properties0.getProperty("{hi!=[]}", "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=false, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.max_actives=2, com.atomikos.icatch.log_base_name=tmlog}");
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(objEnumeration4);
        org.junit.Assert.assertNotNull(objEntrySet5);
        org.junit.Assert.assertNotNull(objEnumeration6);
        org.junit.Assert.assertNotNull(properties14);
        org.junit.Assert.assertNotNull(strSet15);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 50 + "'", int24 == 50);
        org.junit.Assert.assertNull(obj27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNull(obj31);
        org.junit.Assert.assertNotNull(strSet32);
        org.junit.Assert.assertNull(obj33);
        org.junit.Assert.assertNull(obj34);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 50 + "'", int43 == 50);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertTrue("'" + long45 + "' != '" + 500L + "'", long45 == 500L);
        org.junit.Assert.assertNull(str46);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNull(obj54);
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=false, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.max_actives=2, com.atomikos.icatch.log_base_name=tmlog}" + "'", str57, "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=false, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.max_actives=2, com.atomikos.icatch.log_base_name=tmlog}");
    }

    @Test
    public void test7820() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7820");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        boolean boolean3 = properties0.isEmpty();
        java.util.Enumeration<java.lang.Object> objEnumeration4 = properties0.elements();
        java.util.Enumeration<java.lang.Object> objEnumeration5 = properties0.elements();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties6 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties6.setSerialJtaTransactions(false);
        atomikosProperties6.setThreadedTwoPhaseCommit(true);
        atomikosProperties6.setMaxTimeout((long) '#');
        boolean boolean13 = atomikosProperties6.isForceShutdownOnVmExit();
        int int14 = atomikosProperties6.getMaxActives();
        java.lang.Object obj15 = properties0.remove((java.lang.Object) int14);
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet16 = properties0.entrySet();
        java.util.Properties properties17 = new java.util.Properties(properties0);
        java.util.Properties properties18 = new java.util.Properties();
        java.lang.Object obj20 = properties18.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration21 = properties18.elements();
        boolean boolean22 = properties18.isEmpty();
        java.util.Set<java.lang.Object> objSet23 = properties18.keySet();
        boolean boolean24 = properties18.isEmpty();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet25 = properties18.entrySet();
        java.util.Properties properties26 = new java.util.Properties();
        java.lang.Object obj28 = properties26.remove((java.lang.Object) 0.0d);
        boolean boolean29 = properties26.isEmpty();
        java.lang.Object obj32 = properties26.setProperty("", "hi!");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties33 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties33.setSerialJtaTransactions(false);
        boolean boolean36 = properties18.remove((java.lang.Object) properties26, (java.lang.Object) atomikosProperties33);
        java.util.Properties properties37 = new java.util.Properties(properties26);
        int int38 = properties37.size();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties40 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties40.setSerialJtaTransactions(false);
        boolean boolean43 = atomikosProperties40.isSerialJtaTransactions();
        java.lang.String str44 = atomikosProperties40.getService();
        boolean boolean45 = atomikosProperties40.isEnableLogging();
        java.lang.String str46 = atomikosProperties40.getTransactionManagerUniqueName();
        boolean boolean47 = properties37.remove((java.lang.Object) (byte) 1, (java.lang.Object) atomikosProperties40);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties48 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties48.setSerialJtaTransactions(false);
        atomikosProperties48.setThreadedTwoPhaseCommit(true);
        atomikosProperties48.setMaxTimeout((long) '#');
        java.lang.String str55 = atomikosProperties48.getLogBaseDir();
        boolean boolean56 = atomikosProperties48.isThreadedTwoPhaseCommit();
        java.lang.Object obj57 = properties37.get((java.lang.Object) boolean56);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties58 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties58.setSerialJtaTransactions(false);
        atomikosProperties58.setThreadedTwoPhaseCommit(true);
        atomikosProperties58.setMaxTimeout((long) '#');
        long long65 = atomikosProperties58.getCheckpointInterval();
        java.lang.String str66 = atomikosProperties58.getTransactionManagerUniqueName();
        java.lang.Object obj67 = properties0.getOrDefault((java.lang.Object) properties37, (java.lang.Object) str66);
        java.util.Collection<java.lang.Object> objCollection68 = properties37.values();
        java.lang.String str71 = properties37.getProperty("{[]=0.0}", "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=false, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, hi!=, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(objEnumeration4);
        org.junit.Assert.assertNotNull(objEnumeration5);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 50 + "'", int14 == 50);
        org.junit.Assert.assertNull(obj15);
        org.junit.Assert.assertNotNull(objEntrySet16);
        org.junit.Assert.assertNull(obj20);
        org.junit.Assert.assertNotNull(objEnumeration21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNotNull(objSet23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNotNull(objEntrySet25);
        org.junit.Assert.assertNull(obj28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNull(obj32);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 0 + "'", int38 == 0);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNull(str44);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertNull(str46);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNull(str55);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertNull(obj57);
        org.junit.Assert.assertTrue("'" + long65 + "' != '" + 500L + "'", long65 == 500L);
        org.junit.Assert.assertNull(str66);
        org.junit.Assert.assertNull(obj67);
        org.junit.Assert.assertNotNull(objCollection68);
        org.junit.Assert.assertEquals("'" + str71 + "' != '" + "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=false, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, hi!=, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}" + "'", str71, "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=false, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, hi!=, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
    }

    @Test
    public void test7821() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7821");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setSerialJtaTransactions(false);
        boolean boolean3 = atomikosProperties0.isSerialJtaTransactions();
        java.lang.String str4 = atomikosProperties0.getService();
        boolean boolean5 = atomikosProperties0.isEnableLogging();
        java.util.Properties properties6 = atomikosProperties0.asProperties();
        atomikosProperties0.setForceShutdownOnVmExit(true);
        atomikosProperties0.setDefaultJtaTimeout((long) (short) -1);
        java.lang.String str11 = atomikosProperties0.getLogBaseDir();
        long long12 = atomikosProperties0.getMaxTimeout();
        atomikosProperties0.setService("{{}={}}");
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNotNull(properties6);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertTrue("'" + long12 + "' != '" + 300000L + "'", long12 == 300000L);
    }

    @Test
    public void test7822() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7822");
        java.util.Properties properties0 = new java.util.Properties();
        java.util.Collection<java.lang.Object> objCollection1 = properties0.values();
        java.util.Enumeration<java.lang.Object> objEnumeration2 = properties0.keys();
        properties0.clear();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties4 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties4.setSerialJtaTransactions(false);
        boolean boolean7 = atomikosProperties4.isSerialJtaTransactions();
        boolean boolean8 = atomikosProperties4.isEnableLogging();
        atomikosProperties4.setService("");
        java.util.Properties properties11 = atomikosProperties4.asProperties();
        boolean boolean12 = properties0.containsValue((java.lang.Object) properties11);
        java.io.OutputStream outputStream13 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties11.storeToXML(outputStream13, "{}");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(objCollection1);
        org.junit.Assert.assertNotNull(objEnumeration2);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(properties11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
    }

    @Test
    public void test7823() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7823");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setSerialJtaTransactions(false);
        atomikosProperties0.setThreadedTwoPhaseCommit(true);
        atomikosProperties0.setThreadedTwoPhaseCommit(true);
        java.util.Properties properties7 = atomikosProperties0.asProperties();
        int int8 = atomikosProperties0.getMaxActives();
        atomikosProperties0.setService("hi!");
        atomikosProperties0.setMaxTimeout((long) (byte) 10);
        java.lang.String str13 = atomikosProperties0.getService();
        java.lang.String str14 = atomikosProperties0.getTransactionManagerUniqueName();
        long long15 = atomikosProperties0.getCheckpointInterval();
        atomikosProperties0.setLogBaseName("{[]=0.0}");
        org.junit.Assert.assertNotNull(properties7);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 50 + "'", int8 == 50);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "hi!" + "'", str13, "hi!");
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertTrue("'" + long15 + "' != '" + 500L + "'", long15 == 500L);
    }

    @Test
    public void test7824() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7824");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet3 = properties0.stringPropertyNames();
        java.util.Properties properties4 = new java.util.Properties();
        java.lang.Object obj6 = properties4.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet7 = properties4.stringPropertyNames();
        java.lang.Object obj9 = properties0.put((java.lang.Object) strSet7, (java.lang.Object) 0.0d);
        java.util.Properties properties10 = new java.util.Properties();
        java.util.Properties properties11 = new java.util.Properties();
        java.lang.Object obj13 = properties11.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet14 = properties11.stringPropertyNames();
        boolean boolean15 = properties10.containsValue((java.lang.Object) properties11);
        java.util.Collection<java.lang.Object> objCollection16 = properties10.values();
        java.util.Properties properties18 = new java.util.Properties();
        java.lang.Object obj20 = properties18.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration21 = properties18.elements();
        boolean boolean22 = properties18.isEmpty();
        java.util.Set<java.lang.Object> objSet23 = properties18.keySet();
        java.lang.Object obj24 = properties10.putIfAbsent((java.lang.Object) "hi!", (java.lang.Object) objSet23);
        java.util.Set<java.lang.Object> objSet25 = properties10.keySet();
        java.lang.Object obj27 = properties0.putIfAbsent((java.lang.Object) properties10, (java.lang.Object) (short) 10);
        java.util.Set<java.lang.Object> objSet28 = properties0.keySet();
        java.util.Properties properties29 = new java.util.Properties();
        java.util.Properties properties30 = new java.util.Properties();
        java.lang.Object obj32 = properties30.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet33 = properties30.stringPropertyNames();
        boolean boolean34 = properties29.containsValue((java.lang.Object) properties30);
        java.util.Collection<java.lang.Object> objCollection35 = properties29.values();
        java.util.Enumeration<?> wildcardEnumeration36 = properties29.propertyNames();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet37 = properties29.entrySet();
        java.util.Properties properties38 = new java.util.Properties();
        java.lang.Object obj40 = properties38.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration41 = properties38.elements();
        boolean boolean42 = properties38.isEmpty();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet43 = properties38.entrySet();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties45 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties45.setSerialJtaTransactions(false);
        atomikosProperties45.setThreadedTwoPhaseCommit(true);
        atomikosProperties45.setMaxTimeout((long) '#');
        boolean boolean52 = atomikosProperties45.isForceShutdownOnVmExit();
        java.lang.Object obj53 = properties38.put((java.lang.Object) (short) 1, (java.lang.Object) atomikosProperties45);
        atomikosProperties45.setForceShutdownOnVmExit(true);
        java.util.Properties properties56 = atomikosProperties45.asProperties();
        boolean boolean57 = properties29.containsValue((java.lang.Object) atomikosProperties45);
        java.lang.String str58 = atomikosProperties45.getLogBaseName();
        atomikosProperties45.setMaxActives((int) (short) 0);
        atomikosProperties45.setSerialJtaTransactions(false);
        boolean boolean63 = properties0.contains((java.lang.Object) atomikosProperties45);
        java.io.PrintStream printStream64 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties0.list(printStream64);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(strSet3);
        org.junit.Assert.assertNull(obj6);
        org.junit.Assert.assertNotNull(strSet7);
        org.junit.Assert.assertNull(obj9);
        org.junit.Assert.assertNull(obj13);
        org.junit.Assert.assertNotNull(strSet14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(objCollection16);
        org.junit.Assert.assertNull(obj20);
        org.junit.Assert.assertNotNull(objEnumeration21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNotNull(objSet23);
        org.junit.Assert.assertNull(obj24);
        org.junit.Assert.assertNotNull(objSet25);
        org.junit.Assert.assertNull(obj27);
        org.junit.Assert.assertNotNull(objSet28);
        org.junit.Assert.assertNull(obj32);
        org.junit.Assert.assertNotNull(strSet33);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(objCollection35);
        org.junit.Assert.assertNotNull(wildcardEnumeration36);
        org.junit.Assert.assertNotNull(objEntrySet37);
        org.junit.Assert.assertNull(obj40);
        org.junit.Assert.assertNotNull(objEnumeration41);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertNotNull(objEntrySet43);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNull(obj53);
        org.junit.Assert.assertNotNull(properties56);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "tmlog" + "'", str58, "tmlog");
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
    }

    @Test
    public void test7825() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7825");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        boolean boolean3 = properties0.isEmpty();
        java.util.Enumeration<java.lang.Object> objEnumeration4 = properties0.keys();
        java.util.Properties properties5 = new java.util.Properties();
        java.lang.Object obj7 = properties5.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration8 = properties5.elements();
        int int9 = properties5.size();
        java.util.Properties properties10 = new java.util.Properties();
        java.lang.Object obj12 = properties10.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration13 = properties10.elements();
        boolean boolean14 = properties10.isEmpty();
        java.util.Set<java.lang.Object> objSet15 = properties10.keySet();
        boolean boolean16 = properties5.containsKey((java.lang.Object) objSet15);
        java.util.Enumeration<java.lang.Object> objEnumeration17 = properties5.keys();
        java.util.Properties properties18 = new java.util.Properties();
        java.lang.Object obj20 = properties18.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration21 = properties18.elements();
        boolean boolean22 = properties18.isEmpty();
        java.util.Set<java.lang.Object> objSet23 = properties18.keySet();
        java.util.Enumeration<java.lang.Object> objEnumeration24 = properties18.keys();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet25 = properties18.entrySet();
        boolean boolean27 = properties5.remove((java.lang.Object) properties18, (java.lang.Object) 1.0f);
        boolean boolean28 = properties18.isEmpty();
        boolean boolean30 = properties0.remove((java.lang.Object) properties18, (java.lang.Object) 100);
        java.util.Enumeration<java.lang.Object> objEnumeration31 = properties18.elements();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties32 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties32.setSerialJtaTransactions(false);
        boolean boolean35 = atomikosProperties32.isSerialJtaTransactions();
        java.lang.String str36 = atomikosProperties32.getService();
        boolean boolean37 = atomikosProperties32.isEnableLogging();
        java.util.Properties properties38 = atomikosProperties32.asProperties();
        java.util.Set<java.lang.String> strSet39 = properties38.stringPropertyNames();
        boolean boolean40 = properties38.isEmpty();
        java.lang.Object obj41 = properties18.remove((java.lang.Object) boolean40);
        int int42 = properties18.size();
        java.lang.String str44 = properties18.getProperty("{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=false, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.tm_unique_name=tmlog, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
        java.io.Writer writer45 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties18.store(writer45, "{{}=true}");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(objEnumeration4);
        org.junit.Assert.assertNull(obj7);
        org.junit.Assert.assertNotNull(objEnumeration8);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertNull(obj12);
        org.junit.Assert.assertNotNull(objEnumeration13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(objSet15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(objEnumeration17);
        org.junit.Assert.assertNull(obj20);
        org.junit.Assert.assertNotNull(objEnumeration21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNotNull(objSet23);
        org.junit.Assert.assertNotNull(objEnumeration24);
        org.junit.Assert.assertNotNull(objEntrySet25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(objEnumeration31);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNull(str36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertNotNull(properties38);
        org.junit.Assert.assertNotNull(strSet39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNull(obj41);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 0 + "'", int42 == 0);
        org.junit.Assert.assertNull(str44);
    }

    @Test
    public void test7826() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7826");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration3 = properties0.elements();
        boolean boolean4 = properties0.isEmpty();
        java.util.Set<java.lang.Object> objSet5 = properties0.keySet();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties6 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties6.setSerialJtaTransactions(false);
        atomikosProperties6.setThreadedTwoPhaseCommit(true);
        atomikosProperties6.setThreadedTwoPhaseCommit(true);
        java.util.Properties properties13 = atomikosProperties6.asProperties();
        int int14 = atomikosProperties6.getMaxActives();
        java.util.Properties properties15 = new java.util.Properties();
        java.lang.Object obj17 = properties15.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration18 = properties15.elements();
        boolean boolean19 = properties15.isEmpty();
        java.util.Set<java.lang.Object> objSet20 = properties15.keySet();
        boolean boolean22 = properties15.containsKey((java.lang.Object) (-1.0f));
        java.lang.Object obj23 = properties0.put((java.lang.Object) atomikosProperties6, (java.lang.Object) properties15);
        java.lang.String str24 = properties0.toString();
        java.util.Enumeration<java.lang.Object> objEnumeration25 = properties0.keys();
        java.lang.String str26 = properties0.toString();
        java.io.OutputStream outputStream27 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties0.storeToXML(outputStream27, "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=false, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=true, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}", "");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(objEnumeration3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(objSet5);
        org.junit.Assert.assertNotNull(properties13);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 50 + "'", int14 == 50);
        org.junit.Assert.assertNull(obj17);
        org.junit.Assert.assertNotNull(objEnumeration18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(objSet20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNull(obj23);
        org.junit.Assert.assertNotNull(objEnumeration25);
    }

    @Test
    public void test7827() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7827");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration3 = properties0.elements();
        boolean boolean4 = properties0.isEmpty();
        java.util.Set<java.lang.Object> objSet5 = properties0.keySet();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties6 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties6.setSerialJtaTransactions(false);
        atomikosProperties6.setThreadedTwoPhaseCommit(true);
        atomikosProperties6.setThreadedTwoPhaseCommit(true);
        java.util.Properties properties13 = atomikosProperties6.asProperties();
        int int14 = atomikosProperties6.getMaxActives();
        java.util.Properties properties15 = new java.util.Properties();
        java.lang.Object obj17 = properties15.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration18 = properties15.elements();
        boolean boolean19 = properties15.isEmpty();
        java.util.Set<java.lang.Object> objSet20 = properties15.keySet();
        boolean boolean22 = properties15.containsKey((java.lang.Object) (-1.0f));
        java.lang.Object obj23 = properties0.put((java.lang.Object) atomikosProperties6, (java.lang.Object) properties15);
        java.util.Properties properties24 = new java.util.Properties();
        java.lang.Object obj26 = properties24.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet27 = properties24.stringPropertyNames();
        java.util.Properties properties28 = new java.util.Properties();
        java.lang.Object obj30 = properties28.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet31 = properties28.stringPropertyNames();
        java.lang.Object obj33 = properties24.put((java.lang.Object) strSet31, (java.lang.Object) 0.0d);
        java.util.Properties properties34 = new java.util.Properties();
        java.util.Properties properties35 = new java.util.Properties();
        java.lang.Object obj37 = properties35.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet38 = properties35.stringPropertyNames();
        boolean boolean39 = properties34.containsValue((java.lang.Object) properties35);
        java.util.Collection<java.lang.Object> objCollection40 = properties34.values();
        java.util.Properties properties42 = new java.util.Properties();
        java.lang.Object obj44 = properties42.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration45 = properties42.elements();
        boolean boolean46 = properties42.isEmpty();
        java.util.Set<java.lang.Object> objSet47 = properties42.keySet();
        java.lang.Object obj48 = properties34.putIfAbsent((java.lang.Object) "hi!", (java.lang.Object) objSet47);
        java.util.Set<java.lang.Object> objSet49 = properties34.keySet();
        java.lang.Object obj51 = properties24.putIfAbsent((java.lang.Object) properties34, (java.lang.Object) (short) 10);
        java.util.Enumeration<?> wildcardEnumeration52 = properties34.propertyNames();
        properties0.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties34);
        java.util.Collection<java.lang.Object> objCollection54 = properties0.values();
        java.util.Properties properties55 = new java.util.Properties();
        java.lang.Object obj57 = properties55.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration58 = properties55.elements();
        boolean boolean59 = properties55.isEmpty();
        java.util.Set<java.lang.Object> objSet60 = properties55.keySet();
        java.util.Enumeration<java.lang.Object> objEnumeration61 = properties55.keys();
        java.lang.String str63 = properties55.getProperty("hi!");
        java.lang.String str65 = properties55.getProperty("");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties66 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties66.setSerialJtaTransactions(false);
        atomikosProperties66.setThreadedTwoPhaseCommit(true);
        atomikosProperties66.setEnableLogging(false);
        boolean boolean73 = properties55.containsKey((java.lang.Object) atomikosProperties66);
        java.lang.Object obj76 = properties55.setProperty("hi!", "");
        properties0.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties55);
        java.util.Set<java.lang.Object> objSet78 = properties55.keySet();
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(objEnumeration3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(objSet5);
        org.junit.Assert.assertNotNull(properties13);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 50 + "'", int14 == 50);
        org.junit.Assert.assertNull(obj17);
        org.junit.Assert.assertNotNull(objEnumeration18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(objSet20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNull(obj23);
        org.junit.Assert.assertNull(obj26);
        org.junit.Assert.assertNotNull(strSet27);
        org.junit.Assert.assertNull(obj30);
        org.junit.Assert.assertNotNull(strSet31);
        org.junit.Assert.assertNull(obj33);
        org.junit.Assert.assertNull(obj37);
        org.junit.Assert.assertNotNull(strSet38);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(objCollection40);
        org.junit.Assert.assertNull(obj44);
        org.junit.Assert.assertNotNull(objEnumeration45);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertNotNull(objSet47);
        org.junit.Assert.assertNull(obj48);
        org.junit.Assert.assertNotNull(objSet49);
        org.junit.Assert.assertNull(obj51);
        org.junit.Assert.assertNotNull(wildcardEnumeration52);
        org.junit.Assert.assertNotNull(objCollection54);
        org.junit.Assert.assertNull(obj57);
        org.junit.Assert.assertNotNull(objEnumeration58);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertNotNull(objSet60);
        org.junit.Assert.assertNotNull(objEnumeration61);
        org.junit.Assert.assertNull(str63);
        org.junit.Assert.assertNull(str65);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertNull(obj76);
        org.junit.Assert.assertNotNull(objSet78);
    }

    @Test
    public void test7828() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7828");
        java.util.Properties properties0 = new java.util.Properties();
        boolean boolean2 = properties0.contains((java.lang.Object) 100.0d);
        java.util.Properties properties3 = new java.util.Properties();
        java.lang.Object obj5 = properties3.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration6 = properties3.elements();
        boolean boolean7 = properties3.isEmpty();
        java.util.Set<java.lang.Object> objSet8 = properties3.keySet();
        boolean boolean9 = properties3.isEmpty();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet10 = properties3.entrySet();
        java.util.Properties properties11 = new java.util.Properties();
        java.lang.Object obj13 = properties11.remove((java.lang.Object) 0.0d);
        boolean boolean14 = properties11.isEmpty();
        java.lang.Object obj17 = properties11.setProperty("", "hi!");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties18 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties18.setSerialJtaTransactions(false);
        boolean boolean21 = properties3.remove((java.lang.Object) properties11, (java.lang.Object) atomikosProperties18);
        boolean boolean22 = properties0.equals((java.lang.Object) properties3);
        java.util.Enumeration<java.lang.Object> objEnumeration23 = properties0.elements();
        java.lang.String str25 = properties0.getProperty("{tmlog=}");
        java.lang.Object obj26 = properties0.clone();
        java.util.Properties properties27 = new java.util.Properties(properties0);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties28 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties28.setSerialJtaTransactions(false);
        atomikosProperties28.setThreadedTwoPhaseCommit(true);
        atomikosProperties28.setThreadedTwoPhaseCommit(true);
        java.util.Properties properties35 = atomikosProperties28.asProperties();
        java.util.Set<java.lang.String> strSet36 = properties35.stringPropertyNames();
        java.util.Properties properties37 = new java.util.Properties();
        java.lang.Object obj39 = properties37.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration40 = properties37.elements();
        boolean boolean41 = properties37.isEmpty();
        java.util.Set<java.lang.Object> objSet42 = properties37.keySet();
        java.util.Enumeration<java.lang.Object> objEnumeration43 = properties37.keys();
        java.lang.String str45 = properties37.getProperty("hi!");
        java.util.Enumeration<?> wildcardEnumeration46 = properties37.propertyNames();
        java.util.Properties properties47 = new java.util.Properties();
        java.lang.Object obj49 = properties47.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration50 = properties47.elements();
        boolean boolean51 = properties47.isEmpty();
        java.util.Enumeration<java.lang.Object> objEnumeration52 = properties47.elements();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet53 = properties47.entrySet();
        java.util.Set<java.lang.String> strSet54 = properties47.stringPropertyNames();
        boolean boolean55 = properties47.isEmpty();
        properties37.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties47);
        boolean boolean57 = properties35.containsKey((java.lang.Object) properties37);
        java.lang.String str58 = properties35.toString();
        properties0.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties35);
        java.util.Properties properties60 = new java.util.Properties(properties0);
        java.lang.String str63 = properties60.getProperty("{hi!=[], {}={}}", "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=false, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=true, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNull(obj5);
        org.junit.Assert.assertNotNull(objEnumeration6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(objSet8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertNotNull(objEntrySet10);
        org.junit.Assert.assertNull(obj13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNull(obj17);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNotNull(objEnumeration23);
        org.junit.Assert.assertNull(str25);
        org.junit.Assert.assertNotNull(obj26);
        org.junit.Assert.assertEquals(obj26.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj26), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj26), "{}");
        org.junit.Assert.assertNotNull(properties35);
        org.junit.Assert.assertNotNull(strSet36);
        org.junit.Assert.assertNull(obj39);
        org.junit.Assert.assertNotNull(objEnumeration40);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertNotNull(objSet42);
        org.junit.Assert.assertNotNull(objEnumeration43);
        org.junit.Assert.assertNull(str45);
        org.junit.Assert.assertNotNull(wildcardEnumeration46);
        org.junit.Assert.assertNull(obj49);
        org.junit.Assert.assertNotNull(objEnumeration50);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertNotNull(objEnumeration52);
        org.junit.Assert.assertNotNull(objEntrySet53);
        org.junit.Assert.assertNotNull(strSet54);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
// flaky:         org.junit.Assert.assertEquals("'" + str58 + "' != '" + "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=false, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=true, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}" + "'", str58, "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=false, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=true, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=false, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=true, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}" + "'", str63, "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=false, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=true, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
    }

    @Test
    public void test7829() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7829");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration3 = properties0.elements();
        boolean boolean4 = properties0.isEmpty();
        java.util.Set<java.lang.Object> objSet5 = properties0.keySet();
        java.util.Enumeration<java.lang.Object> objEnumeration6 = properties0.keys();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet7 = properties0.entrySet();
        java.lang.Object obj8 = properties0.clone();
        java.util.Collection<java.lang.Object> objCollection9 = properties0.values();
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(objEnumeration3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(objSet5);
        org.junit.Assert.assertNotNull(objEnumeration6);
        org.junit.Assert.assertNotNull(objEntrySet7);
        org.junit.Assert.assertNotNull(obj8);
        org.junit.Assert.assertEquals(obj8.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj8), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj8), "{}");
        org.junit.Assert.assertNotNull(objCollection9);
    }

    @Test
    public void test7830() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7830");
        java.util.Properties properties0 = new java.util.Properties();
        boolean boolean2 = properties0.contains((java.lang.Object) 100.0d);
        java.util.Properties properties3 = new java.util.Properties();
        java.lang.Object obj5 = properties3.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration6 = properties3.elements();
        boolean boolean7 = properties3.isEmpty();
        java.util.Set<java.lang.Object> objSet8 = properties3.keySet();
        boolean boolean9 = properties3.isEmpty();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet10 = properties3.entrySet();
        java.util.Properties properties11 = new java.util.Properties();
        java.lang.Object obj13 = properties11.remove((java.lang.Object) 0.0d);
        boolean boolean14 = properties11.isEmpty();
        java.lang.Object obj17 = properties11.setProperty("", "hi!");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties18 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties18.setSerialJtaTransactions(false);
        boolean boolean21 = properties3.remove((java.lang.Object) properties11, (java.lang.Object) atomikosProperties18);
        boolean boolean22 = properties0.equals((java.lang.Object) properties3);
        java.util.Properties properties23 = new java.util.Properties();
        java.util.Properties properties24 = new java.util.Properties();
        java.lang.Object obj26 = properties24.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet27 = properties24.stringPropertyNames();
        boolean boolean28 = properties23.containsValue((java.lang.Object) properties24);
        java.util.Collection<java.lang.Object> objCollection29 = properties23.values();
        java.util.Properties properties31 = new java.util.Properties();
        java.lang.Object obj33 = properties31.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration34 = properties31.elements();
        boolean boolean35 = properties31.isEmpty();
        java.util.Set<java.lang.Object> objSet36 = properties31.keySet();
        java.lang.Object obj37 = properties23.putIfAbsent((java.lang.Object) "hi!", (java.lang.Object) objSet36);
        java.util.Set<java.lang.Object> objSet38 = properties23.keySet();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties39 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties39.setSerialJtaTransactions(false);
        atomikosProperties39.setThreadedTwoPhaseCommit(true);
        atomikosProperties39.setMaxTimeout((long) '#');
        boolean boolean46 = atomikosProperties39.isEnableLogging();
        atomikosProperties39.setCheckpointInterval((long) (byte) -1);
        atomikosProperties39.setEnableLogging(true);
        java.util.Properties properties51 = new java.util.Properties();
        java.lang.Object obj53 = properties51.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration54 = properties51.elements();
        boolean boolean55 = properties51.isEmpty();
        java.util.Enumeration<java.lang.Object> objEnumeration56 = properties51.elements();
        java.lang.Object obj57 = properties23.replace((java.lang.Object) true, (java.lang.Object) properties51);
        java.util.Enumeration<java.lang.Object> objEnumeration58 = properties23.keys();
        java.util.Properties properties59 = new java.util.Properties();
        boolean boolean61 = properties59.contains((java.lang.Object) 100.0d);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties62 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties62.setSerialJtaTransactions(false);
        atomikosProperties62.setThreadedTwoPhaseCommit(true);
        atomikosProperties62.setSerialJtaTransactions(false);
        java.lang.String str69 = atomikosProperties62.getService();
        boolean boolean70 = properties59.containsKey((java.lang.Object) atomikosProperties62);
        long long71 = atomikosProperties62.getMaxTimeout();
        java.lang.String str72 = atomikosProperties62.getService();
        int int73 = atomikosProperties62.getMaxActives();
        java.util.Properties properties74 = atomikosProperties62.asProperties();
        java.lang.Object obj75 = properties0.getOrDefault((java.lang.Object) objEnumeration58, (java.lang.Object) properties74);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNull(obj5);
        org.junit.Assert.assertNotNull(objEnumeration6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(objSet8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertNotNull(objEntrySet10);
        org.junit.Assert.assertNull(obj13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNull(obj17);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNull(obj26);
        org.junit.Assert.assertNotNull(strSet27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(objCollection29);
        org.junit.Assert.assertNull(obj33);
        org.junit.Assert.assertNotNull(objEnumeration34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertNotNull(objSet36);
        org.junit.Assert.assertNull(obj37);
        org.junit.Assert.assertNotNull(objSet38);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertNull(obj53);
        org.junit.Assert.assertNotNull(objEnumeration54);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertNotNull(objEnumeration56);
        org.junit.Assert.assertNull(obj57);
        org.junit.Assert.assertNotNull(objEnumeration58);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertNull(str69);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertTrue("'" + long71 + "' != '" + 300000L + "'", long71 == 300000L);
        org.junit.Assert.assertNull(str72);
        org.junit.Assert.assertTrue("'" + int73 + "' != '" + 50 + "'", int73 == 50);
        org.junit.Assert.assertNotNull(properties74);
        org.junit.Assert.assertNotNull(obj75);
// flaky:         org.junit.Assert.assertEquals(obj75.toString(), "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=false, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=true, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
// flaky:         org.junit.Assert.assertEquals(java.lang.String.valueOf(obj75), "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=false, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=true, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
// flaky:         org.junit.Assert.assertEquals(java.util.Objects.toString(obj75), "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=false, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=true, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
    }

    @Test
    public void test7831() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7831");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setSerialJtaTransactions(false);
        atomikosProperties0.setThreadedTwoPhaseCommit(true);
        atomikosProperties0.setThreadedTwoPhaseCommit(true);
        java.util.Properties properties7 = atomikosProperties0.asProperties();
        int int8 = atomikosProperties0.getMaxActives();
        atomikosProperties0.setService("hi!");
        atomikosProperties0.setMaxTimeout((long) (byte) 10);
        java.lang.String str13 = atomikosProperties0.getService();
        java.lang.String str14 = atomikosProperties0.getTransactionManagerUniqueName();
        atomikosProperties0.setCheckpointInterval((long) 35);
        long long17 = atomikosProperties0.getDefaultJtaTimeout();
        org.junit.Assert.assertNotNull(properties7);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 50 + "'", int8 == 50);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "hi!" + "'", str13, "hi!");
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertTrue("'" + long17 + "' != '" + 10000L + "'", long17 == 10000L);
    }

    @Test
    public void test7832() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7832");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration3 = properties0.elements();
        int int4 = properties0.size();
        java.util.Properties properties5 = new java.util.Properties();
        java.lang.Object obj7 = properties5.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration8 = properties5.elements();
        boolean boolean9 = properties5.isEmpty();
        java.util.Set<java.lang.Object> objSet10 = properties5.keySet();
        boolean boolean11 = properties0.containsKey((java.lang.Object) objSet10);
        java.util.Properties properties12 = new java.util.Properties();
        java.lang.Object obj14 = properties12.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration15 = properties12.elements();
        boolean boolean16 = properties12.isEmpty();
        java.util.Set<java.lang.Object> objSet17 = properties12.keySet();
        boolean boolean18 = properties12.isEmpty();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet19 = properties12.entrySet();
        java.util.Properties properties20 = new java.util.Properties();
        java.lang.Object obj22 = properties20.remove((java.lang.Object) 0.0d);
        boolean boolean23 = properties20.isEmpty();
        java.lang.Object obj26 = properties20.setProperty("", "hi!");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties27 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties27.setSerialJtaTransactions(false);
        boolean boolean30 = properties12.remove((java.lang.Object) properties20, (java.lang.Object) atomikosProperties27);
        java.util.Properties properties31 = new java.util.Properties(properties20);
        int int32 = properties31.size();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties34 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties34.setSerialJtaTransactions(false);
        boolean boolean37 = atomikosProperties34.isSerialJtaTransactions();
        java.lang.String str38 = atomikosProperties34.getService();
        boolean boolean39 = atomikosProperties34.isEnableLogging();
        java.lang.String str40 = atomikosProperties34.getTransactionManagerUniqueName();
        boolean boolean41 = properties31.remove((java.lang.Object) (byte) 1, (java.lang.Object) atomikosProperties34);
        atomikosProperties34.setEnableLogging(false);
        boolean boolean44 = atomikosProperties34.isThreadedTwoPhaseCommit();
        java.lang.Object obj45 = properties0.get((java.lang.Object) atomikosProperties34);
        java.lang.String str46 = atomikosProperties34.getTransactionManagerUniqueName();
        boolean boolean47 = atomikosProperties34.isThreadedTwoPhaseCommit();
        atomikosProperties34.setService("");
        atomikosProperties34.setMaxTimeout((long) (byte) 100);
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(objEnumeration3);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNull(obj7);
        org.junit.Assert.assertNotNull(objEnumeration8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertNotNull(objSet10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNull(obj14);
        org.junit.Assert.assertNotNull(objEnumeration15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(objSet17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(objEntrySet19);
        org.junit.Assert.assertNull(obj22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNull(obj26);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 0 + "'", int32 == 0);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNull(str38);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNull(str40);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNull(obj45);
        org.junit.Assert.assertNull(str46);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
    }

    @Test
    public void test7833() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7833");
        java.util.Properties properties0 = new java.util.Properties();
        java.util.Collection<java.lang.Object> objCollection1 = properties0.values();
        int int2 = properties0.size();
        java.util.Properties properties3 = new java.util.Properties();
        java.lang.Object obj5 = properties3.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration6 = properties3.elements();
        boolean boolean7 = properties3.isEmpty();
        java.util.Set<java.lang.Object> objSet8 = properties3.keySet();
        java.util.Enumeration<java.lang.Object> objEnumeration9 = properties3.keys();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet10 = properties3.entrySet();
        java.util.Properties properties12 = new java.util.Properties();
        java.lang.Object obj14 = properties12.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration15 = properties12.elements();
        boolean boolean16 = properties12.isEmpty();
        java.util.Set<java.lang.Object> objSet17 = properties12.keySet();
        boolean boolean18 = properties12.isEmpty();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties19 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties19.setSerialJtaTransactions(false);
        atomikosProperties19.setThreadedTwoPhaseCommit(true);
        atomikosProperties19.setMaxTimeout((long) '#');
        boolean boolean26 = atomikosProperties19.isEnableLogging();
        atomikosProperties19.setCheckpointInterval((long) (byte) -1);
        java.util.Properties properties29 = new java.util.Properties();
        java.util.Properties properties30 = new java.util.Properties();
        java.lang.Object obj32 = properties30.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet33 = properties30.stringPropertyNames();
        boolean boolean34 = properties29.containsValue((java.lang.Object) properties30);
        java.util.Collection<java.lang.Object> objCollection35 = properties29.values();
        java.lang.Object obj36 = properties12.replace((java.lang.Object) atomikosProperties19, (java.lang.Object) objCollection35);
        boolean boolean38 = properties3.replace((java.lang.Object) 100.0d, (java.lang.Object) objCollection35, (java.lang.Object) 10.0d);
        boolean boolean39 = properties0.equals((java.lang.Object) properties3);
        java.util.Properties properties40 = new java.util.Properties();
        java.lang.Object obj42 = properties40.remove((java.lang.Object) 0.0d);
        boolean boolean43 = properties40.isEmpty();
        java.util.Enumeration<java.lang.Object> objEnumeration44 = properties40.elements();
        java.util.Enumeration<java.lang.Object> objEnumeration45 = properties40.elements();
        java.lang.Object obj46 = properties0.remove((java.lang.Object) properties40);
        java.util.Enumeration<java.lang.Object> objEnumeration47 = properties0.keys();
        java.util.Set<java.lang.Object> objSet48 = properties0.keySet();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties49 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties49.setSerialJtaTransactions(false);
        atomikosProperties49.setThreadedTwoPhaseCommit(true);
        atomikosProperties49.setMaxTimeout((long) '#');
        boolean boolean56 = atomikosProperties49.isEnableLogging();
        long long57 = atomikosProperties49.getCheckpointInterval();
        atomikosProperties49.setMaxTimeout(35L);
        boolean boolean60 = properties0.containsValue((java.lang.Object) atomikosProperties49);
        org.junit.Assert.assertNotNull(objCollection1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertNull(obj5);
        org.junit.Assert.assertNotNull(objEnumeration6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(objSet8);
        org.junit.Assert.assertNotNull(objEnumeration9);
        org.junit.Assert.assertNotNull(objEntrySet10);
        org.junit.Assert.assertNull(obj14);
        org.junit.Assert.assertNotNull(objEnumeration15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(objSet17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertNull(obj32);
        org.junit.Assert.assertNotNull(strSet33);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(objCollection35);
        org.junit.Assert.assertNull(obj36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNull(obj42);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNotNull(objEnumeration44);
        org.junit.Assert.assertNotNull(objEnumeration45);
        org.junit.Assert.assertNull(obj46);
        org.junit.Assert.assertNotNull(objEnumeration47);
        org.junit.Assert.assertNotNull(objSet48);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertTrue("'" + long57 + "' != '" + 500L + "'", long57 == 500L);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
    }

    @Test
    public void test7834() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7834");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration3 = properties0.elements();
        boolean boolean4 = properties0.isEmpty();
        java.lang.Object obj7 = properties0.setProperty("tmlog", "");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties8 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties8.setSerialJtaTransactions(false);
        boolean boolean11 = atomikosProperties8.isSerialJtaTransactions();
        atomikosProperties8.setTransactionManagerUniqueName("hi!");
        atomikosProperties8.setForceShutdownOnVmExit(false);
        atomikosProperties8.setDefaultJtaTimeout((long) (byte) 10);
        java.lang.String str18 = atomikosProperties8.getTransactionManagerUniqueName();
        java.util.Properties properties19 = new java.util.Properties();
        java.util.Properties properties20 = new java.util.Properties();
        java.lang.Object obj22 = properties20.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet23 = properties20.stringPropertyNames();
        boolean boolean24 = properties19.containsValue((java.lang.Object) properties20);
        java.util.Collection<java.lang.Object> objCollection25 = properties19.values();
        java.util.Properties properties27 = new java.util.Properties();
        java.lang.Object obj29 = properties27.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration30 = properties27.elements();
        boolean boolean31 = properties27.isEmpty();
        java.util.Set<java.lang.Object> objSet32 = properties27.keySet();
        java.lang.Object obj33 = properties19.putIfAbsent((java.lang.Object) "hi!", (java.lang.Object) objSet32);
        java.util.Set<java.lang.Object> objSet34 = properties19.keySet();
        java.util.Set<java.lang.Object> objSet35 = properties19.keySet();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet36 = properties19.entrySet();
        java.util.Set<java.lang.Object> objSet37 = properties19.keySet();
        java.lang.Object obj38 = properties0.replace((java.lang.Object) atomikosProperties8, (java.lang.Object) properties19);
        java.util.Enumeration<java.lang.Object> objEnumeration39 = properties0.keys();
        java.util.Properties properties40 = new java.util.Properties();
        java.lang.Object obj42 = properties40.remove((java.lang.Object) 0.0d);
        boolean boolean43 = properties40.isEmpty();
        java.util.Enumeration<java.lang.Object> objEnumeration44 = properties40.elements();
        java.util.Enumeration<java.lang.Object> objEnumeration45 = properties40.elements();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties46 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties46.setSerialJtaTransactions(false);
        atomikosProperties46.setThreadedTwoPhaseCommit(true);
        atomikosProperties46.setMaxTimeout((long) '#');
        boolean boolean53 = atomikosProperties46.isForceShutdownOnVmExit();
        int int54 = atomikosProperties46.getMaxActives();
        java.lang.Object obj55 = properties40.remove((java.lang.Object) int54);
        java.util.Properties properties56 = new java.util.Properties();
        java.lang.Object obj58 = properties56.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration59 = properties56.elements();
        boolean boolean60 = properties56.isEmpty();
        java.util.Set<java.lang.Object> objSet61 = properties56.keySet();
        boolean boolean62 = properties56.isEmpty();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet63 = properties56.entrySet();
        java.util.Properties properties64 = new java.util.Properties();
        java.lang.Object obj66 = properties64.remove((java.lang.Object) 0.0d);
        boolean boolean67 = properties64.isEmpty();
        java.lang.Object obj70 = properties64.setProperty("", "hi!");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties71 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties71.setSerialJtaTransactions(false);
        boolean boolean74 = properties56.remove((java.lang.Object) properties64, (java.lang.Object) atomikosProperties71);
        java.util.Properties properties75 = new java.util.Properties(properties64);
        int int76 = properties75.size();
        int int77 = properties75.size();
        java.util.Properties properties78 = new java.util.Properties();
        java.lang.Object obj79 = properties75.get((java.lang.Object) properties78);
        boolean boolean80 = properties40.containsValue((java.lang.Object) properties78);
        boolean boolean81 = properties0.containsValue((java.lang.Object) properties40);
        java.util.Set<java.lang.String> strSet82 = properties40.stringPropertyNames();
        java.util.Properties properties83 = new java.util.Properties(properties40);
        java.io.OutputStream outputStream84 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties83.storeToXML(outputStream84, "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=false, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, hi!=, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(objEnumeration3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNull(obj7);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "hi!" + "'", str18, "hi!");
        org.junit.Assert.assertNull(obj22);
        org.junit.Assert.assertNotNull(strSet23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(objCollection25);
        org.junit.Assert.assertNull(obj29);
        org.junit.Assert.assertNotNull(objEnumeration30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNotNull(objSet32);
        org.junit.Assert.assertNull(obj33);
        org.junit.Assert.assertNotNull(objSet34);
        org.junit.Assert.assertNotNull(objSet35);
        org.junit.Assert.assertNotNull(objEntrySet36);
        org.junit.Assert.assertNotNull(objSet37);
        org.junit.Assert.assertNull(obj38);
        org.junit.Assert.assertNotNull(objEnumeration39);
        org.junit.Assert.assertNull(obj42);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNotNull(objEnumeration44);
        org.junit.Assert.assertNotNull(objEnumeration45);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + 50 + "'", int54 == 50);
        org.junit.Assert.assertNull(obj55);
        org.junit.Assert.assertNull(obj58);
        org.junit.Assert.assertNotNull(objEnumeration59);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertNotNull(objSet61);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + true + "'", boolean62 == true);
        org.junit.Assert.assertNotNull(objEntrySet63);
        org.junit.Assert.assertNull(obj66);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + true + "'", boolean67 == true);
        org.junit.Assert.assertNull(obj70);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
        org.junit.Assert.assertTrue("'" + int76 + "' != '" + 0 + "'", int76 == 0);
        org.junit.Assert.assertTrue("'" + int77 + "' != '" + 0 + "'", int77 == 0);
        org.junit.Assert.assertNull(obj79);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", boolean80 == false);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + false + "'", boolean81 == false);
        org.junit.Assert.assertNotNull(strSet82);
    }

    @Test
    public void test7835() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7835");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet3 = properties0.stringPropertyNames();
        java.util.Properties properties4 = new java.util.Properties();
        java.util.Properties properties5 = new java.util.Properties();
        java.lang.Object obj7 = properties5.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet8 = properties5.stringPropertyNames();
        boolean boolean9 = properties4.containsValue((java.lang.Object) properties5);
        java.util.Collection<java.lang.Object> objCollection10 = properties4.values();
        java.util.Enumeration<?> wildcardEnumeration11 = properties4.propertyNames();
        java.lang.Object obj13 = properties0.put((java.lang.Object) wildcardEnumeration11, (java.lang.Object) 10.0d);
        java.util.Properties properties14 = new java.util.Properties();
        java.lang.Object obj16 = properties14.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration17 = properties14.elements();
        boolean boolean18 = properties14.isEmpty();
        java.util.Set<java.lang.Object> objSet19 = properties14.keySet();
        boolean boolean20 = properties14.isEmpty();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet21 = properties14.entrySet();
        java.util.Properties properties22 = new java.util.Properties();
        java.lang.Object obj24 = properties22.remove((java.lang.Object) 0.0d);
        boolean boolean25 = properties22.isEmpty();
        java.lang.Object obj28 = properties22.setProperty("", "hi!");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties29 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties29.setSerialJtaTransactions(false);
        boolean boolean32 = properties14.remove((java.lang.Object) properties22, (java.lang.Object) atomikosProperties29);
        java.util.Properties properties33 = new java.util.Properties(properties22);
        int int34 = properties33.size();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties36 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties36.setSerialJtaTransactions(false);
        boolean boolean39 = atomikosProperties36.isSerialJtaTransactions();
        java.lang.String str40 = atomikosProperties36.getService();
        boolean boolean41 = atomikosProperties36.isEnableLogging();
        java.lang.String str42 = atomikosProperties36.getTransactionManagerUniqueName();
        boolean boolean43 = properties33.remove((java.lang.Object) (byte) 1, (java.lang.Object) atomikosProperties36);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties44 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties44.setSerialJtaTransactions(false);
        atomikosProperties44.setThreadedTwoPhaseCommit(true);
        atomikosProperties44.setEnableLogging(false);
        boolean boolean51 = atomikosProperties44.isSerialJtaTransactions();
        int int52 = atomikosProperties44.getMaxActives();
        boolean boolean53 = atomikosProperties44.isSerialJtaTransactions();
        boolean boolean54 = properties0.remove((java.lang.Object) properties33, (java.lang.Object) boolean53);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties55 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties55.setSerialJtaTransactions(false);
        atomikosProperties55.setThreadedTwoPhaseCommit(true);
        atomikosProperties55.setMaxTimeout((long) '#');
        boolean boolean62 = atomikosProperties55.isEnableLogging();
        atomikosProperties55.setCheckpointInterval((long) 100);
        java.lang.String str65 = atomikosProperties55.getTransactionManagerUniqueName();
        boolean boolean66 = properties33.contains((java.lang.Object) atomikosProperties55);
        java.util.Properties properties67 = new java.util.Properties();
        java.lang.Object obj69 = properties67.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration70 = properties67.elements();
        boolean boolean71 = properties67.isEmpty();
        java.util.Enumeration<java.lang.Object> objEnumeration72 = properties67.elements();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet73 = properties67.entrySet();
        java.util.Set<java.lang.String> strSet74 = properties67.stringPropertyNames();
        boolean boolean75 = properties67.isEmpty();
        boolean boolean76 = properties33.equals((java.lang.Object) boolean75);
        boolean boolean77 = properties33.isEmpty();
        java.lang.Object obj78 = properties33.clone();
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(strSet3);
        org.junit.Assert.assertNull(obj7);
        org.junit.Assert.assertNotNull(strSet8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(objCollection10);
        org.junit.Assert.assertNotNull(wildcardEnumeration11);
        org.junit.Assert.assertNull(obj13);
        org.junit.Assert.assertNull(obj16);
        org.junit.Assert.assertNotNull(objEnumeration17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(objSet19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNotNull(objEntrySet21);
        org.junit.Assert.assertNull(obj24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNull(obj28);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 0 + "'", int34 == 0);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNull(str40);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertNull(str42);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + 50 + "'", int52 == 50);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + true + "'", boolean62 == true);
        org.junit.Assert.assertNull(str65);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertNull(obj69);
        org.junit.Assert.assertNotNull(objEnumeration70);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + true + "'", boolean71 == true);
        org.junit.Assert.assertNotNull(objEnumeration72);
        org.junit.Assert.assertNotNull(objEntrySet73);
        org.junit.Assert.assertNotNull(strSet74);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + true + "'", boolean75 == true);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + true + "'", boolean77 == true);
        org.junit.Assert.assertNotNull(obj78);
        org.junit.Assert.assertEquals(obj78.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj78), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj78), "{}");
    }

    @Test
    public void test7836() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7836");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        boolean boolean3 = properties0.isEmpty();
        java.lang.Object obj6 = properties0.setProperty("", "hi!");
        int int7 = properties0.size();
        java.util.Properties properties8 = new java.util.Properties(properties0);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties9 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties9.setSerialJtaTransactions(false);
        boolean boolean12 = atomikosProperties9.isSerialJtaTransactions();
        atomikosProperties9.setTransactionManagerUniqueName("hi!");
        java.lang.String str15 = atomikosProperties9.getLogBaseName();
        java.lang.String str16 = atomikosProperties9.getLogBaseName();
        atomikosProperties9.setService("{{}={}}");
        java.util.Properties properties19 = new java.util.Properties();
        java.lang.Object obj21 = properties19.remove((java.lang.Object) 0.0d);
        boolean boolean22 = properties19.isEmpty();
        java.util.Set<java.lang.String> strSet23 = properties19.stringPropertyNames();
        java.util.Properties properties24 = new java.util.Properties();
        java.lang.Object obj26 = properties24.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet27 = properties24.stringPropertyNames();
        java.lang.String str28 = properties24.toString();
        java.util.Properties properties29 = new java.util.Properties();
        java.lang.Object obj31 = properties29.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration32 = properties29.elements();
        boolean boolean33 = properties29.isEmpty();
        java.lang.Object obj36 = properties29.setProperty("tmlog", "");
        properties24.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties29);
        java.lang.Object obj38 = properties29.clone();
        java.util.Properties properties39 = new java.util.Properties();
        java.lang.Object obj41 = properties39.remove((java.lang.Object) 0.0d);
        boolean boolean42 = properties39.isEmpty();
        java.util.Enumeration<java.lang.Object> objEnumeration43 = properties39.elements();
        java.util.Enumeration<java.lang.Object> objEnumeration44 = properties39.elements();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties45 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties45.setSerialJtaTransactions(false);
        atomikosProperties45.setThreadedTwoPhaseCommit(true);
        atomikosProperties45.setMaxTimeout((long) '#');
        boolean boolean52 = atomikosProperties45.isForceShutdownOnVmExit();
        int int53 = atomikosProperties45.getMaxActives();
        java.lang.Object obj54 = properties39.remove((java.lang.Object) int53);
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet55 = properties39.entrySet();
        boolean boolean56 = properties29.containsKey((java.lang.Object) objEntrySet55);
        java.lang.Object obj57 = properties19.get((java.lang.Object) objEntrySet55);
        java.util.Enumeration<?> wildcardEnumeration58 = properties19.propertyNames();
        java.util.Set<java.lang.String> strSet59 = properties19.stringPropertyNames();
        boolean boolean60 = properties0.remove((java.lang.Object) atomikosProperties9, (java.lang.Object) strSet59);
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNull(obj6);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 1 + "'", int7 == 1);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "tmlog" + "'", str15, "tmlog");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "tmlog" + "'", str16, "tmlog");
        org.junit.Assert.assertNull(obj21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNotNull(strSet23);
        org.junit.Assert.assertNull(obj26);
        org.junit.Assert.assertNotNull(strSet27);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "{}" + "'", str28, "{}");
        org.junit.Assert.assertNull(obj31);
        org.junit.Assert.assertNotNull(objEnumeration32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNull(obj36);
        org.junit.Assert.assertNotNull(obj38);
        org.junit.Assert.assertEquals(obj38.toString(), "{tmlog=}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj38), "{tmlog=}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj38), "{tmlog=}");
        org.junit.Assert.assertNull(obj41);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertNotNull(objEnumeration43);
        org.junit.Assert.assertNotNull(objEnumeration44);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 50 + "'", int53 == 50);
        org.junit.Assert.assertNull(obj54);
        org.junit.Assert.assertNotNull(objEntrySet55);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertNull(obj57);
        org.junit.Assert.assertNotNull(wildcardEnumeration58);
        org.junit.Assert.assertNotNull(strSet59);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
    }

    @Test
    public void test7837() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7837");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setSerialJtaTransactions(false);
        atomikosProperties0.setThreadedTwoPhaseCommit(true);
        atomikosProperties0.setMaxTimeout((long) '#');
        boolean boolean7 = atomikosProperties0.isEnableLogging();
        atomikosProperties0.setMaxActives((int) '#');
        int int10 = atomikosProperties0.getMaxActives();
        java.lang.String str11 = atomikosProperties0.getTransactionManagerUniqueName();
        atomikosProperties0.setLogBaseDir("tmlog");
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 35 + "'", int10 == 35);
        org.junit.Assert.assertNull(str11);
    }

    @Test
    public void test7838() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7838");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration3 = properties0.elements();
        boolean boolean4 = properties0.isEmpty();
        java.util.Set<java.lang.Object> objSet5 = properties0.keySet();
        boolean boolean6 = properties0.isEmpty();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet7 = properties0.entrySet();
        java.util.Properties properties8 = new java.util.Properties();
        java.lang.Object obj10 = properties8.remove((java.lang.Object) 0.0d);
        boolean boolean11 = properties8.isEmpty();
        java.lang.Object obj14 = properties8.setProperty("", "hi!");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties15 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties15.setSerialJtaTransactions(false);
        boolean boolean18 = properties0.remove((java.lang.Object) properties8, (java.lang.Object) atomikosProperties15);
        java.util.Properties properties19 = new java.util.Properties(properties8);
        int int20 = properties19.size();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties22 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties22.setSerialJtaTransactions(false);
        boolean boolean25 = atomikosProperties22.isSerialJtaTransactions();
        java.lang.String str26 = atomikosProperties22.getService();
        boolean boolean27 = atomikosProperties22.isEnableLogging();
        java.lang.String str28 = atomikosProperties22.getTransactionManagerUniqueName();
        boolean boolean29 = properties19.remove((java.lang.Object) (byte) 1, (java.lang.Object) atomikosProperties22);
        java.util.Properties properties30 = new java.util.Properties();
        java.lang.Object obj32 = properties30.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration33 = properties30.elements();
        boolean boolean34 = properties30.isEmpty();
        java.util.Enumeration<java.lang.Object> objEnumeration35 = properties30.elements();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet36 = properties30.entrySet();
        java.lang.Object obj37 = properties19.remove((java.lang.Object) objEntrySet36);
        java.lang.Object obj38 = properties19.clone();
        java.util.Enumeration<java.lang.Object> objEnumeration39 = properties19.keys();
        java.lang.String str41 = properties19.getProperty("{=hi!}");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties42 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties42.setSerialJtaTransactions(false);
        atomikosProperties42.setThreadedTwoPhaseCommit(true);
        atomikosProperties42.setEnableLogging(false);
        atomikosProperties42.setForceShutdownOnVmExit(true);
        long long51 = atomikosProperties42.getDefaultJtaTimeout();
        atomikosProperties42.setLogBaseName("tmlog");
        atomikosProperties42.setForceShutdownOnVmExit(true);
        atomikosProperties42.setDefaultJtaTimeout((long) (byte) 0);
        java.lang.Class<?> wildcardClass58 = atomikosProperties42.getClass();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties59 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties59.setSerialJtaTransactions(false);
        boolean boolean62 = atomikosProperties59.isSerialJtaTransactions();
        java.lang.String str63 = atomikosProperties59.getService();
        long long64 = atomikosProperties59.getMaxTimeout();
        atomikosProperties59.setMaxTimeout((long) (byte) -1);
        java.lang.Object obj67 = properties19.putIfAbsent((java.lang.Object) atomikosProperties42, (java.lang.Object) atomikosProperties59);
        atomikosProperties59.setTransactionManagerUniqueName("{{}={}}");
        boolean boolean70 = atomikosProperties59.isSerialJtaTransactions();
        boolean boolean71 = atomikosProperties59.isThreadedTwoPhaseCommit();
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(objEnumeration3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(objSet5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(objEntrySet7);
        org.junit.Assert.assertNull(obj10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNull(obj14);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 0 + "'", int20 == 0);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNull(str26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNull(str28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNull(obj32);
        org.junit.Assert.assertNotNull(objEnumeration33);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertNotNull(objEnumeration35);
        org.junit.Assert.assertNotNull(objEntrySet36);
        org.junit.Assert.assertNull(obj37);
        org.junit.Assert.assertNotNull(obj38);
        org.junit.Assert.assertEquals(obj38.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj38), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj38), "{}");
        org.junit.Assert.assertNotNull(objEnumeration39);
        org.junit.Assert.assertNull(str41);
        org.junit.Assert.assertTrue("'" + long51 + "' != '" + 10000L + "'", long51 == 10000L);
        org.junit.Assert.assertNotNull(wildcardClass58);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertNull(str63);
        org.junit.Assert.assertTrue("'" + long64 + "' != '" + 300000L + "'", long64 == 300000L);
        org.junit.Assert.assertNull(obj67);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
    }

    @Test
    public void test7839() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7839");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        boolean boolean4 = properties0.containsValue((java.lang.Object) "hi!");
        java.lang.Object obj7 = properties0.put((java.lang.Object) (byte) -1, (java.lang.Object) 100L);
        java.util.Enumeration<java.lang.Object> objEnumeration8 = properties0.keys();
        java.util.Properties properties9 = new java.util.Properties();
        java.lang.Object obj11 = properties9.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration12 = properties9.elements();
        boolean boolean13 = properties9.isEmpty();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet14 = properties9.entrySet();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties16 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties16.setSerialJtaTransactions(false);
        atomikosProperties16.setThreadedTwoPhaseCommit(true);
        atomikosProperties16.setMaxTimeout((long) '#');
        boolean boolean23 = atomikosProperties16.isForceShutdownOnVmExit();
        java.lang.Object obj24 = properties9.put((java.lang.Object) (short) 1, (java.lang.Object) atomikosProperties16);
        long long25 = atomikosProperties16.getDefaultJtaTimeout();
        java.lang.String str26 = atomikosProperties16.getLogBaseDir();
        java.util.Properties properties27 = new java.util.Properties();
        java.lang.Object obj29 = properties27.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration30 = properties27.elements();
        boolean boolean31 = properties27.isEmpty();
        java.lang.Object obj34 = properties27.setProperty("tmlog", "");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties35 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties35.setSerialJtaTransactions(false);
        boolean boolean38 = atomikosProperties35.isSerialJtaTransactions();
        atomikosProperties35.setTransactionManagerUniqueName("hi!");
        atomikosProperties35.setForceShutdownOnVmExit(false);
        atomikosProperties35.setDefaultJtaTimeout((long) (byte) 10);
        java.lang.String str45 = atomikosProperties35.getTransactionManagerUniqueName();
        java.util.Properties properties46 = new java.util.Properties();
        java.util.Properties properties47 = new java.util.Properties();
        java.lang.Object obj49 = properties47.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet50 = properties47.stringPropertyNames();
        boolean boolean51 = properties46.containsValue((java.lang.Object) properties47);
        java.util.Collection<java.lang.Object> objCollection52 = properties46.values();
        java.util.Properties properties54 = new java.util.Properties();
        java.lang.Object obj56 = properties54.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration57 = properties54.elements();
        boolean boolean58 = properties54.isEmpty();
        java.util.Set<java.lang.Object> objSet59 = properties54.keySet();
        java.lang.Object obj60 = properties46.putIfAbsent((java.lang.Object) "hi!", (java.lang.Object) objSet59);
        java.util.Set<java.lang.Object> objSet61 = properties46.keySet();
        java.util.Set<java.lang.Object> objSet62 = properties46.keySet();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet63 = properties46.entrySet();
        java.util.Set<java.lang.Object> objSet64 = properties46.keySet();
        java.lang.Object obj65 = properties27.replace((java.lang.Object) atomikosProperties35, (java.lang.Object) properties46);
        java.util.Properties properties66 = atomikosProperties35.asProperties();
        boolean boolean67 = atomikosProperties35.isSerialJtaTransactions();
        java.lang.Object obj68 = properties0.putIfAbsent((java.lang.Object) atomikosProperties16, (java.lang.Object) boolean67);
        int int69 = properties0.size();
        java.util.Enumeration<java.lang.Object> objEnumeration70 = properties0.keys();
        java.io.OutputStream outputStream71 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties0.storeToXML(outputStream71, "{{}=true}", "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=100, com.atomikos.icatch.serial_jta_transactions=false, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=35, com.atomikos.icatch.service={=hi!}, com.atomikos.icatch.threaded_2pc=true, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNull(obj7);
        org.junit.Assert.assertNotNull(objEnumeration8);
        org.junit.Assert.assertNull(obj11);
        org.junit.Assert.assertNotNull(objEnumeration12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(objEntrySet14);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNull(obj24);
        org.junit.Assert.assertTrue("'" + long25 + "' != '" + 10000L + "'", long25 == 10000L);
        org.junit.Assert.assertNull(str26);
        org.junit.Assert.assertNull(obj29);
        org.junit.Assert.assertNotNull(objEnumeration30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNull(obj34);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "hi!" + "'", str45, "hi!");
        org.junit.Assert.assertNull(obj49);
        org.junit.Assert.assertNotNull(strSet50);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertNotNull(objCollection52);
        org.junit.Assert.assertNull(obj56);
        org.junit.Assert.assertNotNull(objEnumeration57);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertNotNull(objSet59);
        org.junit.Assert.assertNull(obj60);
        org.junit.Assert.assertNotNull(objSet61);
        org.junit.Assert.assertNotNull(objSet62);
        org.junit.Assert.assertNotNull(objEntrySet63);
        org.junit.Assert.assertNotNull(objSet64);
        org.junit.Assert.assertNull(obj65);
        org.junit.Assert.assertNotNull(properties66);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertNull(obj68);
        org.junit.Assert.assertTrue("'" + int69 + "' != '" + 2 + "'", int69 == 2);
        org.junit.Assert.assertNotNull(objEnumeration70);
    }

    @Test
    public void test7840() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7840");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        java.util.Properties properties3 = new java.util.Properties();
        java.util.Collection<java.lang.Object> objCollection4 = properties3.values();
        java.util.Enumeration<java.lang.Object> objEnumeration5 = properties3.keys();
        java.util.Properties properties6 = new java.util.Properties();
        java.lang.Object obj8 = properties6.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration9 = properties6.elements();
        boolean boolean10 = properties6.isEmpty();
        java.util.Set<java.lang.Object> objSet11 = properties6.keySet();
        java.util.Enumeration<java.lang.Object> objEnumeration12 = properties6.keys();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet13 = properties6.entrySet();
        java.lang.Object obj14 = properties0.put((java.lang.Object) properties3, (java.lang.Object) properties6);
        java.util.Properties properties15 = new java.util.Properties();
        java.lang.Object obj17 = properties15.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration18 = properties15.elements();
        boolean boolean19 = properties15.isEmpty();
        java.util.Set<java.lang.Object> objSet20 = properties15.keySet();
        java.util.Enumeration<java.lang.Object> objEnumeration21 = properties15.keys();
        boolean boolean23 = properties15.equals((java.lang.Object) "");
        java.lang.String str24 = properties15.toString();
        boolean boolean25 = properties15.isEmpty();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties26 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties26.setSerialJtaTransactions(false);
        boolean boolean29 = atomikosProperties26.isSerialJtaTransactions();
        boolean boolean30 = atomikosProperties26.isEnableLogging();
        long long31 = atomikosProperties26.getMaxTimeout();
        atomikosProperties26.setLogBaseName("{=hi!}");
        java.lang.Object obj34 = properties15.get((java.lang.Object) atomikosProperties26);
        atomikosProperties26.setTransactionManagerUniqueName("{=hi!}");
        boolean boolean37 = properties6.contains((java.lang.Object) "{=hi!}");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties38 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties38.setSerialJtaTransactions(false);
        boolean boolean41 = atomikosProperties38.isSerialJtaTransactions();
        atomikosProperties38.setTransactionManagerUniqueName("hi!");
        java.lang.String str44 = atomikosProperties38.getLogBaseName();
        java.lang.String str45 = atomikosProperties38.getLogBaseName();
        boolean boolean46 = atomikosProperties38.isForceShutdownOnVmExit();
        long long47 = atomikosProperties38.getCheckpointInterval();
        boolean boolean48 = atomikosProperties38.isThreadedTwoPhaseCommit();
        boolean boolean49 = atomikosProperties38.isThreadedTwoPhaseCommit();
        atomikosProperties38.setMaxTimeout((long) (short) 0);
        boolean boolean52 = properties6.containsValue((java.lang.Object) atomikosProperties38);
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(objCollection4);
        org.junit.Assert.assertNotNull(objEnumeration5);
        org.junit.Assert.assertNull(obj8);
        org.junit.Assert.assertNotNull(objEnumeration9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(objSet11);
        org.junit.Assert.assertNotNull(objEnumeration12);
        org.junit.Assert.assertNotNull(objEntrySet13);
        org.junit.Assert.assertNull(obj14);
        org.junit.Assert.assertNull(obj17);
        org.junit.Assert.assertNotNull(objEnumeration18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(objSet20);
        org.junit.Assert.assertNotNull(objEnumeration21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "{}" + "'", str24, "{}");
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertTrue("'" + long31 + "' != '" + 300000L + "'", long31 == 300000L);
        org.junit.Assert.assertNull(obj34);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "tmlog" + "'", str44, "tmlog");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "tmlog" + "'", str45, "tmlog");
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertTrue("'" + long47 + "' != '" + 500L + "'", long47 == 500L);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
    }

    @Test
    public void test7841() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7841");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setSerialJtaTransactions(false);
        atomikosProperties0.setThreadedTwoPhaseCommit(true);
        atomikosProperties0.setMaxTimeout((long) '#');
        boolean boolean7 = atomikosProperties0.isEnableLogging();
        atomikosProperties0.setTransactionManagerUniqueName("hi!");
        atomikosProperties0.setForceShutdownOnVmExit(false);
        java.util.Properties properties12 = atomikosProperties0.asProperties();
        java.lang.Object obj15 = properties12.setProperty("{hi!=[], {hi!=[]}=}", "{{{}={}}={}, =hi!}");
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(properties12);
        org.junit.Assert.assertNull(obj15);
    }

    @Test
    public void test7842() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7842");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setSerialJtaTransactions(false);
        atomikosProperties0.setThreadedTwoPhaseCommit(true);
        atomikosProperties0.setMaxTimeout((long) '#');
        long long7 = atomikosProperties0.getCheckpointInterval();
        atomikosProperties0.setMaxTimeout((long) (byte) 100);
        atomikosProperties0.setThreadedTwoPhaseCommit(false);
        atomikosProperties0.setMaxTimeout((long) '4');
        atomikosProperties0.setEnableLogging(true);
        atomikosProperties0.setLogBaseDir("");
        java.lang.String str18 = atomikosProperties0.getLogBaseDir();
        atomikosProperties0.setService("{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=false, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.tm_unique_name=tmlog, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
        atomikosProperties0.setTransactionManagerUniqueName("{{}={}}");
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + 500L + "'", long7 == 500L);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "" + "'", str18, "");
    }

    @Test
    public void test7843() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7843");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setSerialJtaTransactions(false);
        atomikosProperties0.setThreadedTwoPhaseCommit(true);
        atomikosProperties0.setMaxTimeout((long) '#');
        long long7 = atomikosProperties0.getCheckpointInterval();
        java.lang.String str8 = atomikosProperties0.getTransactionManagerUniqueName();
        atomikosProperties0.setTransactionManagerUniqueName("{=hi!}");
        atomikosProperties0.setLogBaseName("hi!");
        java.lang.String str13 = atomikosProperties0.getLogBaseName();
        java.lang.String str14 = atomikosProperties0.getLogBaseDir();
        boolean boolean15 = atomikosProperties0.isSerialJtaTransactions();
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + 500L + "'", long7 == 500L);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "hi!" + "'", str13, "hi!");
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
    }

    @Test
    public void test7844() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7844");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration3 = properties0.elements();
        boolean boolean4 = properties0.isEmpty();
        java.util.Set<java.lang.Object> objSet5 = properties0.keySet();
        java.util.Enumeration<java.lang.Object> objEnumeration6 = properties0.keys();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet7 = properties0.entrySet();
        java.util.Properties properties8 = new java.util.Properties();
        java.lang.Object obj10 = properties8.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration11 = properties8.elements();
        boolean boolean12 = properties8.isEmpty();
        java.util.Set<java.lang.Object> objSet13 = properties8.keySet();
        java.util.Enumeration<java.lang.Object> objEnumeration14 = properties8.keys();
        java.lang.String str16 = properties8.getProperty("hi!");
        java.lang.String str18 = properties8.getProperty("");
        java.lang.Object obj20 = properties0.putIfAbsent((java.lang.Object) "", (java.lang.Object) 100.0d);
        java.lang.Object obj21 = properties0.clone();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties22 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties22.setSerialJtaTransactions(false);
        boolean boolean25 = atomikosProperties22.isSerialJtaTransactions();
        atomikosProperties22.setTransactionManagerUniqueName("hi!");
        java.lang.String str28 = atomikosProperties22.getLogBaseName();
        java.lang.String str29 = atomikosProperties22.getLogBaseName();
        boolean boolean30 = atomikosProperties22.isSerialJtaTransactions();
        long long31 = atomikosProperties22.getMaxTimeout();
        boolean boolean32 = properties0.contains((java.lang.Object) long31);
        java.util.Properties properties33 = new java.util.Properties();
        java.lang.Object obj35 = properties33.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration36 = properties33.elements();
        boolean boolean37 = properties33.isEmpty();
        java.util.Set<java.lang.Object> objSet38 = properties33.keySet();
        java.util.Enumeration<java.lang.Object> objEnumeration39 = properties33.keys();
        java.lang.String str41 = properties33.getProperty("hi!");
        java.lang.String str43 = properties33.getProperty("");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties44 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties44.setSerialJtaTransactions(false);
        atomikosProperties44.setThreadedTwoPhaseCommit(true);
        atomikosProperties44.setEnableLogging(false);
        boolean boolean51 = properties33.containsKey((java.lang.Object) atomikosProperties44);
        atomikosProperties44.setService("tmlog");
        atomikosProperties44.setSerialJtaTransactions(true);
        long long56 = atomikosProperties44.getDefaultJtaTimeout();
        java.lang.String str57 = atomikosProperties44.getTransactionManagerUniqueName();
        atomikosProperties44.setCheckpointInterval(32L);
        atomikosProperties44.setMaxTimeout(10L);
        java.lang.Object obj62 = properties0.get((java.lang.Object) 10L);
        java.lang.Object obj63 = properties0.clone();
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(objEnumeration3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(objSet5);
        org.junit.Assert.assertNotNull(objEnumeration6);
        org.junit.Assert.assertNotNull(objEntrySet7);
        org.junit.Assert.assertNull(obj10);
        org.junit.Assert.assertNotNull(objEnumeration11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(objSet13);
        org.junit.Assert.assertNotNull(objEnumeration14);
        org.junit.Assert.assertNull(str16);
        org.junit.Assert.assertNull(str18);
        org.junit.Assert.assertNull(obj20);
        org.junit.Assert.assertNotNull(obj21);
        org.junit.Assert.assertEquals(obj21.toString(), "{=100.0}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj21), "{=100.0}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj21), "{=100.0}");
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "tmlog" + "'", str28, "tmlog");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "tmlog" + "'", str29, "tmlog");
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue("'" + long31 + "' != '" + 300000L + "'", long31 == 300000L);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNull(obj35);
        org.junit.Assert.assertNotNull(objEnumeration36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertNotNull(objSet38);
        org.junit.Assert.assertNotNull(objEnumeration39);
        org.junit.Assert.assertNull(str41);
        org.junit.Assert.assertNull(str43);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertTrue("'" + long56 + "' != '" + 10000L + "'", long56 == 10000L);
        org.junit.Assert.assertNull(str57);
        org.junit.Assert.assertNull(obj62);
        org.junit.Assert.assertNotNull(obj63);
        org.junit.Assert.assertEquals(obj63.toString(), "{=100.0}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj63), "{=100.0}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj63), "{=100.0}");
    }

    @Test
    public void test7845() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7845");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration3 = properties0.elements();
        boolean boolean4 = properties0.isEmpty();
        java.util.Set<java.lang.Object> objSet5 = properties0.keySet();
        boolean boolean6 = properties0.isEmpty();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet7 = properties0.entrySet();
        java.util.Properties properties8 = new java.util.Properties();
        java.lang.Object obj10 = properties8.remove((java.lang.Object) 0.0d);
        boolean boolean11 = properties8.isEmpty();
        java.lang.Object obj14 = properties8.setProperty("", "hi!");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties15 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties15.setSerialJtaTransactions(false);
        boolean boolean18 = properties0.remove((java.lang.Object) properties8, (java.lang.Object) atomikosProperties15);
        java.util.Properties properties19 = new java.util.Properties();
        boolean boolean21 = properties19.contains((java.lang.Object) 100.0d);
        java.util.Properties properties22 = new java.util.Properties();
        java.lang.Object obj24 = properties22.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration25 = properties22.elements();
        boolean boolean26 = properties22.isEmpty();
        java.util.Set<java.lang.Object> objSet27 = properties22.keySet();
        boolean boolean28 = properties22.isEmpty();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet29 = properties22.entrySet();
        java.util.Properties properties30 = new java.util.Properties();
        java.lang.Object obj32 = properties30.remove((java.lang.Object) 0.0d);
        boolean boolean33 = properties30.isEmpty();
        java.lang.Object obj36 = properties30.setProperty("", "hi!");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties37 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties37.setSerialJtaTransactions(false);
        boolean boolean40 = properties22.remove((java.lang.Object) properties30, (java.lang.Object) atomikosProperties37);
        boolean boolean41 = properties19.equals((java.lang.Object) properties22);
        java.util.Enumeration<java.lang.Object> objEnumeration42 = properties19.elements();
        java.util.Collection<java.lang.Object> objCollection43 = properties19.values();
        java.util.Enumeration<?> wildcardEnumeration44 = properties19.propertyNames();
        boolean boolean45 = properties0.containsValue((java.lang.Object) wildcardEnumeration44);
        properties0.clear();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties47 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties47.setSerialJtaTransactions(false);
        atomikosProperties47.setThreadedTwoPhaseCommit(true);
        atomikosProperties47.setLogBaseName("{=hi!}");
        java.lang.String str54 = atomikosProperties47.getTransactionManagerUniqueName();
        java.util.Properties properties55 = atomikosProperties47.asProperties();
        java.util.Properties properties56 = new java.util.Properties();
        java.lang.Object obj58 = properties56.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration59 = properties56.elements();
        boolean boolean60 = properties56.isEmpty();
        java.util.Set<java.lang.Object> objSet61 = properties56.keySet();
        boolean boolean63 = properties56.containsKey((java.lang.Object) (-1.0f));
        java.util.Collection<java.lang.Object> objCollection64 = properties56.values();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet65 = properties56.entrySet();
        java.lang.Object obj66 = properties55.remove((java.lang.Object) objEntrySet65);
        java.util.Collection<java.lang.Object> objCollection67 = properties55.values();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties68 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties68.setSerialJtaTransactions(false);
        boolean boolean71 = atomikosProperties68.isSerialJtaTransactions();
        atomikosProperties68.setCheckpointInterval((long) 10);
        atomikosProperties68.setForceShutdownOnVmExit(true);
        atomikosProperties68.setService("{{}={}}");
        atomikosProperties68.setForceShutdownOnVmExit(false);
        boolean boolean80 = properties0.remove((java.lang.Object) properties55, (java.lang.Object) atomikosProperties68);
        java.util.Collection<java.lang.Object> objCollection81 = properties0.values();
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(objEnumeration3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(objSet5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(objEntrySet7);
        org.junit.Assert.assertNull(obj10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNull(obj14);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNull(obj24);
        org.junit.Assert.assertNotNull(objEnumeration25);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertNotNull(objSet27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNotNull(objEntrySet29);
        org.junit.Assert.assertNull(obj32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNull(obj36);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertNotNull(objEnumeration42);
        org.junit.Assert.assertNotNull(objCollection43);
        org.junit.Assert.assertNotNull(wildcardEnumeration44);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNull(str54);
        org.junit.Assert.assertNotNull(properties55);
        org.junit.Assert.assertNull(obj58);
        org.junit.Assert.assertNotNull(objEnumeration59);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertNotNull(objSet61);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertNotNull(objCollection64);
        org.junit.Assert.assertNotNull(objEntrySet65);
        org.junit.Assert.assertNull(obj66);
        org.junit.Assert.assertNotNull(objCollection67);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", boolean80 == false);
        org.junit.Assert.assertNotNull(objCollection81);
    }

    @Test
    public void test7846() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7846");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration3 = properties0.elements();
        boolean boolean4 = properties0.isEmpty();
        java.util.Set<java.lang.Object> objSet5 = properties0.keySet();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties6 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties6.setSerialJtaTransactions(false);
        atomikosProperties6.setThreadedTwoPhaseCommit(true);
        atomikosProperties6.setThreadedTwoPhaseCommit(true);
        java.util.Properties properties13 = atomikosProperties6.asProperties();
        int int14 = atomikosProperties6.getMaxActives();
        java.util.Properties properties15 = new java.util.Properties();
        java.lang.Object obj17 = properties15.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration18 = properties15.elements();
        boolean boolean19 = properties15.isEmpty();
        java.util.Set<java.lang.Object> objSet20 = properties15.keySet();
        boolean boolean22 = properties15.containsKey((java.lang.Object) (-1.0f));
        java.lang.Object obj23 = properties0.put((java.lang.Object) atomikosProperties6, (java.lang.Object) properties15);
        atomikosProperties6.setForceShutdownOnVmExit(true);
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(objEnumeration3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(objSet5);
        org.junit.Assert.assertNotNull(properties13);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 50 + "'", int14 == 50);
        org.junit.Assert.assertNull(obj17);
        org.junit.Assert.assertNotNull(objEnumeration18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(objSet20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNull(obj23);
    }

    @Test
    public void test7847() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7847");
        java.util.Properties properties0 = new java.util.Properties();
        boolean boolean2 = properties0.contains((java.lang.Object) 100.0d);
        java.util.Properties properties3 = new java.util.Properties();
        java.lang.Object obj5 = properties3.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration6 = properties3.elements();
        boolean boolean7 = properties3.isEmpty();
        java.util.Set<java.lang.Object> objSet8 = properties3.keySet();
        boolean boolean9 = properties3.isEmpty();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet10 = properties3.entrySet();
        java.util.Properties properties11 = new java.util.Properties();
        java.lang.Object obj13 = properties11.remove((java.lang.Object) 0.0d);
        boolean boolean14 = properties11.isEmpty();
        java.lang.Object obj17 = properties11.setProperty("", "hi!");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties18 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties18.setSerialJtaTransactions(false);
        boolean boolean21 = properties3.remove((java.lang.Object) properties11, (java.lang.Object) atomikosProperties18);
        boolean boolean22 = properties0.equals((java.lang.Object) properties3);
        boolean boolean23 = properties3.isEmpty();
        java.util.Properties properties24 = new java.util.Properties(properties3);
        boolean boolean25 = properties3.isEmpty();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNull(obj5);
        org.junit.Assert.assertNotNull(objEnumeration6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(objSet8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertNotNull(objEntrySet10);
        org.junit.Assert.assertNull(obj13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNull(obj17);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
    }

    @Test
    public void test7848() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7848");
        java.util.Properties properties0 = new java.util.Properties();
        java.util.Properties properties1 = new java.util.Properties();
        java.lang.Object obj3 = properties1.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet4 = properties1.stringPropertyNames();
        boolean boolean5 = properties0.containsValue((java.lang.Object) properties1);
        java.util.Collection<java.lang.Object> objCollection6 = properties0.values();
        java.util.Properties properties8 = new java.util.Properties();
        java.lang.Object obj10 = properties8.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration11 = properties8.elements();
        boolean boolean12 = properties8.isEmpty();
        java.util.Set<java.lang.Object> objSet13 = properties8.keySet();
        java.lang.Object obj14 = properties0.putIfAbsent((java.lang.Object) "hi!", (java.lang.Object) objSet13);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties15 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties15.setSerialJtaTransactions(false);
        boolean boolean18 = atomikosProperties15.isSerialJtaTransactions();
        java.util.Properties properties19 = atomikosProperties15.asProperties();
        java.lang.Object obj22 = properties19.setProperty("hi!", "");
        java.util.Properties properties23 = new java.util.Properties(properties19);
        java.util.Properties properties24 = new java.util.Properties();
        java.lang.Object obj26 = properties24.remove((java.lang.Object) 0.0d);
        java.util.Properties properties27 = new java.util.Properties();
        java.util.Collection<java.lang.Object> objCollection28 = properties27.values();
        java.util.Enumeration<java.lang.Object> objEnumeration29 = properties27.keys();
        java.util.Properties properties30 = new java.util.Properties();
        java.lang.Object obj32 = properties30.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration33 = properties30.elements();
        boolean boolean34 = properties30.isEmpty();
        java.util.Set<java.lang.Object> objSet35 = properties30.keySet();
        java.util.Enumeration<java.lang.Object> objEnumeration36 = properties30.keys();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet37 = properties30.entrySet();
        java.lang.Object obj38 = properties24.put((java.lang.Object) properties27, (java.lang.Object) properties30);
        java.lang.Object obj39 = properties0.putIfAbsent((java.lang.Object) properties23, (java.lang.Object) properties30);
        properties30.clear();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties41 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties41.setSerialJtaTransactions(false);
        atomikosProperties41.setThreadedTwoPhaseCommit(true);
        atomikosProperties41.setMaxTimeout((long) '#');
        boolean boolean48 = atomikosProperties41.isEnableLogging();
        atomikosProperties41.setCheckpointInterval((long) (byte) -1);
        atomikosProperties41.setEnableLogging(true);
        atomikosProperties41.setLogBaseDir("");
        java.util.Properties properties55 = new java.util.Properties();
        java.lang.Object obj57 = properties55.remove((java.lang.Object) 0.0d);
        boolean boolean58 = properties55.isEmpty();
        java.util.Enumeration<java.lang.Object> objEnumeration59 = properties55.elements();
        java.lang.Object obj62 = properties55.replace((java.lang.Object) 1, (java.lang.Object) 1);
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet63 = properties55.entrySet();
        java.lang.Object obj64 = properties30.getOrDefault((java.lang.Object) "", (java.lang.Object) properties55);
        properties30.clear();
        java.io.Reader reader66 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties30.load(reader66);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(obj3);
        org.junit.Assert.assertNotNull(strSet4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(objCollection6);
        org.junit.Assert.assertNull(obj10);
        org.junit.Assert.assertNotNull(objEnumeration11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(objSet13);
        org.junit.Assert.assertNull(obj14);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(properties19);
        org.junit.Assert.assertNull(obj22);
        org.junit.Assert.assertNull(obj26);
        org.junit.Assert.assertNotNull(objCollection28);
        org.junit.Assert.assertNotNull(objEnumeration29);
        org.junit.Assert.assertNull(obj32);
        org.junit.Assert.assertNotNull(objEnumeration33);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertNotNull(objSet35);
        org.junit.Assert.assertNotNull(objEnumeration36);
        org.junit.Assert.assertNotNull(objEntrySet37);
        org.junit.Assert.assertNull(obj38);
        org.junit.Assert.assertNull(obj39);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertNull(obj57);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertNotNull(objEnumeration59);
        org.junit.Assert.assertNull(obj62);
        org.junit.Assert.assertNotNull(objEntrySet63);
        org.junit.Assert.assertNotNull(obj64);
        org.junit.Assert.assertEquals(obj64.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj64), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj64), "{}");
    }

    @Test
    public void test7849() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7849");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setSerialJtaTransactions(false);
        atomikosProperties0.setThreadedTwoPhaseCommit(true);
        atomikosProperties0.setThreadedTwoPhaseCommit(true);
        java.util.Properties properties7 = atomikosProperties0.asProperties();
        java.util.Set<java.lang.String> strSet8 = properties7.stringPropertyNames();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties9 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties9.setSerialJtaTransactions(false);
        atomikosProperties9.setThreadedTwoPhaseCommit(true);
        atomikosProperties9.setMaxTimeout((long) '#');
        boolean boolean16 = atomikosProperties9.isEnableLogging();
        int int17 = atomikosProperties9.getMaxActives();
        java.util.Properties properties18 = new java.util.Properties();
        java.lang.Object obj20 = properties18.remove((java.lang.Object) 0.0d);
        boolean boolean21 = properties18.isEmpty();
        java.lang.Object obj24 = properties18.setProperty("", "hi!");
        java.util.Set<java.lang.String> strSet25 = properties18.stringPropertyNames();
        java.lang.Object obj26 = properties7.putIfAbsent((java.lang.Object) atomikosProperties9, (java.lang.Object) strSet25);
        long long27 = atomikosProperties9.getDefaultJtaTimeout();
        atomikosProperties9.setForceShutdownOnVmExit(true);
        org.junit.Assert.assertNotNull(properties7);
        org.junit.Assert.assertNotNull(strSet8);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 50 + "'", int17 == 50);
        org.junit.Assert.assertNull(obj20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNull(obj24);
        org.junit.Assert.assertNotNull(strSet25);
        org.junit.Assert.assertNull(obj26);
        org.junit.Assert.assertTrue("'" + long27 + "' != '" + 10000L + "'", long27 == 10000L);
    }

    @Test
    public void test7850() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7850");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration3 = properties0.elements();
        boolean boolean4 = properties0.isEmpty();
        java.util.Set<java.lang.Object> objSet5 = properties0.keySet();
        java.util.Enumeration<java.lang.Object> objEnumeration6 = properties0.keys();
        java.util.Enumeration<java.lang.Object> objEnumeration7 = properties0.elements();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties8 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties8.setSerialJtaTransactions(false);
        boolean boolean11 = atomikosProperties8.isThreadedTwoPhaseCommit();
        atomikosProperties8.setTransactionManagerUniqueName("hi!");
        java.util.Properties properties14 = new java.util.Properties();
        java.lang.Object obj16 = properties14.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet17 = properties14.stringPropertyNames();
        java.util.Properties properties18 = new java.util.Properties();
        java.util.Properties properties19 = new java.util.Properties();
        java.lang.Object obj21 = properties19.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet22 = properties19.stringPropertyNames();
        boolean boolean23 = properties18.containsValue((java.lang.Object) properties19);
        java.util.Collection<java.lang.Object> objCollection24 = properties18.values();
        java.util.Enumeration<?> wildcardEnumeration25 = properties18.propertyNames();
        java.lang.Object obj27 = properties14.put((java.lang.Object) wildcardEnumeration25, (java.lang.Object) 10.0d);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties28 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties28.setSerialJtaTransactions(false);
        atomikosProperties28.setThreadedTwoPhaseCommit(true);
        atomikosProperties28.setMaxTimeout((long) '#');
        boolean boolean35 = atomikosProperties28.isForceShutdownOnVmExit();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties36 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties36.setSerialJtaTransactions(false);
        atomikosProperties36.setThreadedTwoPhaseCommit(true);
        atomikosProperties36.setThreadedTwoPhaseCommit(true);
        java.lang.Object obj43 = properties14.getOrDefault((java.lang.Object) boolean35, (java.lang.Object) atomikosProperties36);
        boolean boolean44 = properties0.remove((java.lang.Object) atomikosProperties8, obj43);
        atomikosProperties8.setService("{{{}={}}={}}");
        boolean boolean47 = atomikosProperties8.isForceShutdownOnVmExit();
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(objEnumeration3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(objSet5);
        org.junit.Assert.assertNotNull(objEnumeration6);
        org.junit.Assert.assertNotNull(objEnumeration7);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNull(obj16);
        org.junit.Assert.assertNotNull(strSet17);
        org.junit.Assert.assertNull(obj21);
        org.junit.Assert.assertNotNull(strSet22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(objCollection24);
        org.junit.Assert.assertNotNull(wildcardEnumeration25);
        org.junit.Assert.assertNull(obj27);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(obj43);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
    }

    @Test
    public void test7851() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7851");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration3 = properties0.elements();
        boolean boolean4 = properties0.isEmpty();
        java.util.Set<java.lang.Object> objSet5 = properties0.keySet();
        boolean boolean6 = properties0.isEmpty();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet7 = properties0.entrySet();
        java.util.Properties properties8 = new java.util.Properties();
        java.lang.Object obj10 = properties8.remove((java.lang.Object) 0.0d);
        boolean boolean11 = properties8.isEmpty();
        java.lang.Object obj14 = properties8.setProperty("", "hi!");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties15 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties15.setSerialJtaTransactions(false);
        boolean boolean18 = properties0.remove((java.lang.Object) properties8, (java.lang.Object) atomikosProperties15);
        java.util.Properties properties19 = new java.util.Properties(properties8);
        int int20 = properties19.size();
        int int21 = properties19.size();
        java.util.Properties properties22 = new java.util.Properties();
        java.util.Properties properties23 = new java.util.Properties();
        java.lang.Object obj25 = properties23.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet26 = properties23.stringPropertyNames();
        boolean boolean27 = properties22.containsValue((java.lang.Object) properties23);
        java.util.Enumeration<?> wildcardEnumeration28 = properties23.propertyNames();
        java.util.Properties properties29 = new java.util.Properties();
        java.lang.Object obj31 = properties29.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration32 = properties29.elements();
        boolean boolean33 = properties29.isEmpty();
        java.util.Set<java.lang.Object> objSet34 = properties29.keySet();
        java.util.Enumeration<java.lang.Object> objEnumeration35 = properties29.keys();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet36 = properties29.entrySet();
        boolean boolean37 = properties23.containsValue((java.lang.Object) objEntrySet36);
        java.util.Properties properties38 = new java.util.Properties();
        java.util.Properties properties39 = new java.util.Properties();
        java.lang.Object obj41 = properties39.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet42 = properties39.stringPropertyNames();
        boolean boolean43 = properties38.containsValue((java.lang.Object) properties39);
        java.util.Collection<java.lang.Object> objCollection44 = properties38.values();
        java.util.Properties properties46 = new java.util.Properties();
        java.lang.Object obj48 = properties46.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration49 = properties46.elements();
        boolean boolean50 = properties46.isEmpty();
        java.util.Set<java.lang.Object> objSet51 = properties46.keySet();
        java.lang.Object obj52 = properties38.putIfAbsent((java.lang.Object) "hi!", (java.lang.Object) objSet51);
        java.util.Set<java.lang.Object> objSet53 = properties38.keySet();
        java.util.Set<java.lang.Object> objSet54 = properties38.keySet();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet55 = properties38.entrySet();
        java.util.Set<java.lang.Object> objSet56 = properties38.keySet();
        boolean boolean57 = properties23.equals((java.lang.Object) objSet56);
        boolean boolean58 = properties19.containsKey((java.lang.Object) objSet56);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties59 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties59.setSerialJtaTransactions(false);
        boolean boolean62 = atomikosProperties59.isSerialJtaTransactions();
        java.lang.String str63 = atomikosProperties59.getService();
        atomikosProperties59.setEnableLogging(false);
        java.util.Properties properties66 = atomikosProperties59.asProperties();
        atomikosProperties59.setCheckpointInterval((long) 1);
        java.util.Properties properties69 = atomikosProperties59.asProperties();
        java.util.Collection<java.lang.Object> objCollection70 = properties69.values();
        java.lang.Object obj71 = properties19.get((java.lang.Object) objCollection70);
        java.util.Properties properties72 = new java.util.Properties(properties19);
        java.util.Properties properties73 = new java.util.Properties(properties72);
        java.io.InputStream inputStream74 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties72.loadFromXML(inputStream74);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(objEnumeration3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(objSet5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(objEntrySet7);
        org.junit.Assert.assertNull(obj10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNull(obj14);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 0 + "'", int20 == 0);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 0 + "'", int21 == 0);
        org.junit.Assert.assertNull(obj25);
        org.junit.Assert.assertNotNull(strSet26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(wildcardEnumeration28);
        org.junit.Assert.assertNull(obj31);
        org.junit.Assert.assertNotNull(objEnumeration32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNotNull(objSet34);
        org.junit.Assert.assertNotNull(objEnumeration35);
        org.junit.Assert.assertNotNull(objEntrySet36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNull(obj41);
        org.junit.Assert.assertNotNull(strSet42);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(objCollection44);
        org.junit.Assert.assertNull(obj48);
        org.junit.Assert.assertNotNull(objEnumeration49);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertNotNull(objSet51);
        org.junit.Assert.assertNull(obj52);
        org.junit.Assert.assertNotNull(objSet53);
        org.junit.Assert.assertNotNull(objSet54);
        org.junit.Assert.assertNotNull(objEntrySet55);
        org.junit.Assert.assertNotNull(objSet56);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertNull(str63);
        org.junit.Assert.assertNotNull(properties66);
        org.junit.Assert.assertNotNull(properties69);
        org.junit.Assert.assertNotNull(objCollection70);
        org.junit.Assert.assertNull(obj71);
    }

    @Test
    public void test7852() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7852");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setSerialJtaTransactions(false);
        atomikosProperties0.setThreadedTwoPhaseCommit(true);
        atomikosProperties0.setMaxTimeout((long) '#');
        boolean boolean7 = atomikosProperties0.isEnableLogging();
        atomikosProperties0.setCheckpointInterval((long) (byte) -1);
        atomikosProperties0.setEnableLogging(true);
        java.lang.String str12 = atomikosProperties0.getTransactionManagerUniqueName();
        atomikosProperties0.setCheckpointInterval((long) (byte) -1);
        java.lang.String str15 = atomikosProperties0.getService();
        boolean boolean16 = atomikosProperties0.isThreadedTwoPhaseCommit();
        java.lang.String str17 = atomikosProperties0.getLogBaseDir();
        boolean boolean18 = atomikosProperties0.isSerialJtaTransactions();
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNull(str15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNull(str17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
    }

    @Test
    public void test7853() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7853");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration3 = properties0.elements();
        boolean boolean4 = properties0.isEmpty();
        java.util.Set<java.lang.Object> objSet5 = properties0.keySet();
        boolean boolean6 = properties0.isEmpty();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet7 = properties0.entrySet();
        java.util.Properties properties8 = new java.util.Properties();
        java.lang.Object obj10 = properties8.remove((java.lang.Object) 0.0d);
        boolean boolean11 = properties8.isEmpty();
        java.lang.Object obj14 = properties8.setProperty("", "hi!");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties15 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties15.setSerialJtaTransactions(false);
        boolean boolean18 = properties0.remove((java.lang.Object) properties8, (java.lang.Object) atomikosProperties15);
        long long19 = atomikosProperties15.getMaxTimeout();
        atomikosProperties15.setDefaultJtaTimeout((long) (short) 1);
        long long22 = atomikosProperties15.getMaxTimeout();
        java.lang.String str23 = atomikosProperties15.getService();
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(objEnumeration3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(objSet5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(objEntrySet7);
        org.junit.Assert.assertNull(obj10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNull(obj14);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + long19 + "' != '" + 300000L + "'", long19 == 300000L);
        org.junit.Assert.assertTrue("'" + long22 + "' != '" + 300000L + "'", long22 == 300000L);
        org.junit.Assert.assertNull(str23);
    }

    @Test
    public void test7854() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7854");
        java.util.Properties properties0 = new java.util.Properties();
        java.util.Collection<java.lang.Object> objCollection1 = properties0.values();
        java.util.Enumeration<java.lang.Object> objEnumeration2 = properties0.keys();
        java.util.Properties properties3 = new java.util.Properties();
        java.lang.Object obj5 = properties3.remove((java.lang.Object) 0.0d);
        java.util.Properties properties6 = new java.util.Properties();
        java.util.Collection<java.lang.Object> objCollection7 = properties6.values();
        java.util.Enumeration<java.lang.Object> objEnumeration8 = properties6.keys();
        java.util.Properties properties9 = new java.util.Properties();
        java.lang.Object obj11 = properties9.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration12 = properties9.elements();
        boolean boolean13 = properties9.isEmpty();
        java.util.Set<java.lang.Object> objSet14 = properties9.keySet();
        java.util.Enumeration<java.lang.Object> objEnumeration15 = properties9.keys();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet16 = properties9.entrySet();
        java.lang.Object obj17 = properties3.put((java.lang.Object) properties6, (java.lang.Object) properties9);
        java.lang.String str19 = properties6.getProperty("{=hi!}");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties20 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties20.setSerialJtaTransactions(false);
        atomikosProperties20.setThreadedTwoPhaseCommit(true);
        atomikosProperties20.setThreadedTwoPhaseCommit(true);
        long long27 = atomikosProperties20.getMaxTimeout();
        boolean boolean28 = properties6.containsValue((java.lang.Object) atomikosProperties20);
        java.util.Enumeration<java.lang.Object> objEnumeration29 = properties6.elements();
        java.util.Set<java.lang.String> strSet30 = properties6.stringPropertyNames();
        java.lang.Object obj31 = properties0.get((java.lang.Object) properties6);
        java.lang.String str32 = properties0.toString();
        boolean boolean33 = properties0.isEmpty();
        org.junit.Assert.assertNotNull(objCollection1);
        org.junit.Assert.assertNotNull(objEnumeration2);
        org.junit.Assert.assertNull(obj5);
        org.junit.Assert.assertNotNull(objCollection7);
        org.junit.Assert.assertNotNull(objEnumeration8);
        org.junit.Assert.assertNull(obj11);
        org.junit.Assert.assertNotNull(objEnumeration12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(objSet14);
        org.junit.Assert.assertNotNull(objEnumeration15);
        org.junit.Assert.assertNotNull(objEntrySet16);
        org.junit.Assert.assertNull(obj17);
        org.junit.Assert.assertNull(str19);
        org.junit.Assert.assertTrue("'" + long27 + "' != '" + 300000L + "'", long27 == 300000L);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(objEnumeration29);
        org.junit.Assert.assertNotNull(strSet30);
        org.junit.Assert.assertNull(obj31);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "{}" + "'", str32, "{}");
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
    }

    @Test
    public void test7855() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7855");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration3 = properties0.elements();
        boolean boolean4 = properties0.isEmpty();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet5 = properties0.entrySet();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties7 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties7.setSerialJtaTransactions(false);
        atomikosProperties7.setThreadedTwoPhaseCommit(true);
        atomikosProperties7.setMaxTimeout((long) '#');
        boolean boolean14 = atomikosProperties7.isForceShutdownOnVmExit();
        java.lang.Object obj15 = properties0.put((java.lang.Object) (short) 1, (java.lang.Object) atomikosProperties7);
        long long16 = atomikosProperties7.getDefaultJtaTimeout();
        atomikosProperties7.setMaxActives((int) (short) 1);
        atomikosProperties7.setDefaultJtaTimeout(10L);
        atomikosProperties7.setLogBaseDir("{{}={}}");
        atomikosProperties7.setForceShutdownOnVmExit(true);
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(objEnumeration3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(objEntrySet5);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNull(obj15);
        org.junit.Assert.assertTrue("'" + long16 + "' != '" + 10000L + "'", long16 == 10000L);
    }

    @Test
    public void test7856() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7856");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration3 = properties0.elements();
        java.util.Properties properties5 = new java.util.Properties();
        java.lang.Object obj7 = properties5.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration8 = properties5.elements();
        boolean boolean9 = properties5.isEmpty();
        java.util.Set<java.lang.Object> objSet10 = properties5.keySet();
        boolean boolean11 = properties5.isEmpty();
        java.lang.Object obj12 = properties0.getOrDefault((java.lang.Object) true, (java.lang.Object) boolean11);
        java.util.Enumeration<java.lang.Object> objEnumeration13 = properties0.elements();
        java.lang.Object obj16 = properties0.setProperty("{hi!=[], {}={}}", "{[]=0.0}");
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(objEnumeration3);
        org.junit.Assert.assertNull(obj7);
        org.junit.Assert.assertNotNull(objEnumeration8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertNotNull(objSet10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertEquals("'" + obj12 + "' != '" + true + "'", obj12, true);
        org.junit.Assert.assertNotNull(objEnumeration13);
        org.junit.Assert.assertNull(obj16);
    }

    @Test
    public void test7857() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7857");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setSerialJtaTransactions(false);
        atomikosProperties0.setThreadedTwoPhaseCommit(true);
        atomikosProperties0.setMaxTimeout((long) '#');
        boolean boolean7 = atomikosProperties0.isEnableLogging();
        atomikosProperties0.setCheckpointInterval((long) (byte) -1);
        atomikosProperties0.setCheckpointInterval(0L);
        atomikosProperties0.setTransactionManagerUniqueName("{}");
        atomikosProperties0.setMaxTimeout((long) (short) 10);
        boolean boolean16 = atomikosProperties0.isEnableLogging();
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
    }

    @Test
    public void test7858() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7858");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setSerialJtaTransactions(false);
        atomikosProperties0.setThreadedTwoPhaseCommit(true);
        atomikosProperties0.setMaxTimeout((long) '#');
        boolean boolean7 = atomikosProperties0.isEnableLogging();
        atomikosProperties0.setCheckpointInterval((long) (byte) -1);
        atomikosProperties0.setLogBaseName("{=hi!}");
        long long12 = atomikosProperties0.getMaxTimeout();
        atomikosProperties0.setEnableLogging(true);
        java.lang.String str15 = atomikosProperties0.getTransactionManagerUniqueName();
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertTrue("'" + long12 + "' != '" + 35L + "'", long12 == 35L);
        org.junit.Assert.assertNull(str15);
    }

    @Test
    public void test7859() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7859");
        java.util.Properties properties0 = new java.util.Properties();
        java.util.Collection<java.lang.Object> objCollection1 = properties0.values();
        java.util.Enumeration<java.lang.Object> objEnumeration2 = properties0.keys();
        properties0.clear();
        java.util.Enumeration<java.lang.Object> objEnumeration4 = properties0.keys();
        java.util.Properties properties5 = new java.util.Properties();
        java.lang.Object obj7 = properties5.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration8 = properties5.elements();
        boolean boolean9 = properties5.isEmpty();
        java.util.Set<java.lang.Object> objSet10 = properties5.keySet();
        boolean boolean11 = properties5.isEmpty();
        java.util.Properties properties12 = new java.util.Properties();
        java.util.Properties properties13 = new java.util.Properties();
        java.lang.Object obj15 = properties13.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet16 = properties13.stringPropertyNames();
        boolean boolean17 = properties12.containsValue((java.lang.Object) properties13);
        java.util.Collection<java.lang.Object> objCollection18 = properties12.values();
        java.util.Properties properties20 = new java.util.Properties();
        java.lang.Object obj22 = properties20.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration23 = properties20.elements();
        boolean boolean24 = properties20.isEmpty();
        java.util.Set<java.lang.Object> objSet25 = properties20.keySet();
        java.lang.Object obj26 = properties12.putIfAbsent((java.lang.Object) "hi!", (java.lang.Object) objSet25);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties27 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties27.setSerialJtaTransactions(false);
        boolean boolean30 = atomikosProperties27.isSerialJtaTransactions();
        java.util.Properties properties31 = atomikosProperties27.asProperties();
        java.lang.Object obj34 = properties31.setProperty("hi!", "");
        java.util.Properties properties35 = new java.util.Properties(properties31);
        java.util.Properties properties36 = new java.util.Properties();
        java.lang.Object obj38 = properties36.remove((java.lang.Object) 0.0d);
        java.util.Properties properties39 = new java.util.Properties();
        java.util.Collection<java.lang.Object> objCollection40 = properties39.values();
        java.util.Enumeration<java.lang.Object> objEnumeration41 = properties39.keys();
        java.util.Properties properties42 = new java.util.Properties();
        java.lang.Object obj44 = properties42.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration45 = properties42.elements();
        boolean boolean46 = properties42.isEmpty();
        java.util.Set<java.lang.Object> objSet47 = properties42.keySet();
        java.util.Enumeration<java.lang.Object> objEnumeration48 = properties42.keys();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet49 = properties42.entrySet();
        java.lang.Object obj50 = properties36.put((java.lang.Object) properties39, (java.lang.Object) properties42);
        java.lang.Object obj51 = properties12.putIfAbsent((java.lang.Object) properties35, (java.lang.Object) properties42);
        boolean boolean52 = properties0.remove((java.lang.Object) boolean11, (java.lang.Object) properties12);
        // The following exception was thrown during execution in test generation
        try {
            java.util.Enumeration<?> wildcardEnumeration53 = properties12.propertyNames();
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: java.util.Properties cannot be cast to java.lang.String");
        } catch (java.lang.ClassCastException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(objCollection1);
        org.junit.Assert.assertNotNull(objEnumeration2);
        org.junit.Assert.assertNotNull(objEnumeration4);
        org.junit.Assert.assertNull(obj7);
        org.junit.Assert.assertNotNull(objEnumeration8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertNotNull(objSet10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNull(obj15);
        org.junit.Assert.assertNotNull(strSet16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(objCollection18);
        org.junit.Assert.assertNull(obj22);
        org.junit.Assert.assertNotNull(objEnumeration23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNotNull(objSet25);
        org.junit.Assert.assertNull(obj26);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(properties31);
        org.junit.Assert.assertNull(obj34);
        org.junit.Assert.assertNull(obj38);
        org.junit.Assert.assertNotNull(objCollection40);
        org.junit.Assert.assertNotNull(objEnumeration41);
        org.junit.Assert.assertNull(obj44);
        org.junit.Assert.assertNotNull(objEnumeration45);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertNotNull(objSet47);
        org.junit.Assert.assertNotNull(objEnumeration48);
        org.junit.Assert.assertNotNull(objEntrySet49);
        org.junit.Assert.assertNull(obj50);
        org.junit.Assert.assertNull(obj51);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
    }

    @Test
    public void test7860() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7860");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration3 = properties0.elements();
        int int4 = properties0.size();
        java.util.Properties properties5 = new java.util.Properties();
        java.lang.Object obj7 = properties5.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration8 = properties5.elements();
        boolean boolean9 = properties5.isEmpty();
        java.util.Set<java.lang.Object> objSet10 = properties5.keySet();
        boolean boolean11 = properties0.containsKey((java.lang.Object) objSet10);
        java.util.Enumeration<java.lang.Object> objEnumeration12 = properties0.keys();
        java.util.Properties properties13 = new java.util.Properties();
        java.lang.Object obj15 = properties13.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration16 = properties13.elements();
        boolean boolean17 = properties13.isEmpty();
        java.util.Set<java.lang.Object> objSet18 = properties13.keySet();
        java.util.Enumeration<java.lang.Object> objEnumeration19 = properties13.keys();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet20 = properties13.entrySet();
        boolean boolean22 = properties0.remove((java.lang.Object) properties13, (java.lang.Object) 1.0f);
        java.lang.Object obj23 = properties13.clone();
        java.util.Properties properties24 = new java.util.Properties();
        java.lang.Object obj26 = properties24.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration27 = properties24.elements();
        boolean boolean28 = properties24.isEmpty();
        java.lang.Object obj31 = properties24.setProperty("tmlog", "");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties32 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties32.setSerialJtaTransactions(false);
        boolean boolean35 = atomikosProperties32.isSerialJtaTransactions();
        atomikosProperties32.setTransactionManagerUniqueName("hi!");
        atomikosProperties32.setForceShutdownOnVmExit(false);
        atomikosProperties32.setDefaultJtaTimeout((long) (byte) 10);
        java.lang.String str42 = atomikosProperties32.getTransactionManagerUniqueName();
        java.util.Properties properties43 = new java.util.Properties();
        java.util.Properties properties44 = new java.util.Properties();
        java.lang.Object obj46 = properties44.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet47 = properties44.stringPropertyNames();
        boolean boolean48 = properties43.containsValue((java.lang.Object) properties44);
        java.util.Collection<java.lang.Object> objCollection49 = properties43.values();
        java.util.Properties properties51 = new java.util.Properties();
        java.lang.Object obj53 = properties51.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration54 = properties51.elements();
        boolean boolean55 = properties51.isEmpty();
        java.util.Set<java.lang.Object> objSet56 = properties51.keySet();
        java.lang.Object obj57 = properties43.putIfAbsent((java.lang.Object) "hi!", (java.lang.Object) objSet56);
        java.util.Set<java.lang.Object> objSet58 = properties43.keySet();
        java.util.Set<java.lang.Object> objSet59 = properties43.keySet();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet60 = properties43.entrySet();
        java.util.Set<java.lang.Object> objSet61 = properties43.keySet();
        java.lang.Object obj62 = properties24.replace((java.lang.Object) atomikosProperties32, (java.lang.Object) properties43);
        boolean boolean63 = properties13.containsKey((java.lang.Object) properties43);
        java.util.Properties properties64 = new java.util.Properties();
        java.lang.Object obj66 = properties64.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration67 = properties64.elements();
        boolean boolean68 = properties64.isEmpty();
        java.util.Set<java.lang.Object> objSet69 = properties64.keySet();
        boolean boolean70 = properties64.isEmpty();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet71 = properties64.entrySet();
        java.util.Properties properties72 = new java.util.Properties();
        java.lang.Object obj74 = properties72.remove((java.lang.Object) 0.0d);
        boolean boolean75 = properties72.isEmpty();
        java.lang.Object obj78 = properties72.setProperty("", "hi!");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties79 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties79.setSerialJtaTransactions(false);
        boolean boolean82 = properties64.remove((java.lang.Object) properties72, (java.lang.Object) atomikosProperties79);
        java.util.Properties properties83 = new java.util.Properties(properties72);
        int int84 = properties83.size();
        java.util.Enumeration<?> wildcardEnumeration85 = properties83.propertyNames();
        java.lang.Object obj86 = properties83.clone();
        java.util.Properties properties87 = new java.util.Properties();
        java.lang.Object obj89 = properties87.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration90 = properties87.elements();
        boolean boolean91 = properties87.isEmpty();
        java.util.Set<java.lang.Object> objSet92 = properties87.keySet();
        java.util.Enumeration<java.lang.Object> objEnumeration93 = properties87.keys();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet94 = properties87.entrySet();
        java.util.Properties properties95 = new java.util.Properties();
        java.util.Collection<java.lang.Object> objCollection96 = properties95.values();
        boolean boolean97 = properties13.replace(obj86, (java.lang.Object) properties87, (java.lang.Object) properties95);
        java.util.Set<java.lang.Object> objSet98 = properties13.keySet();
        properties13.clear();
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(objEnumeration3);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNull(obj7);
        org.junit.Assert.assertNotNull(objEnumeration8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertNotNull(objSet10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(objEnumeration12);
        org.junit.Assert.assertNull(obj15);
        org.junit.Assert.assertNotNull(objEnumeration16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(objSet18);
        org.junit.Assert.assertNotNull(objEnumeration19);
        org.junit.Assert.assertNotNull(objEntrySet20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(obj23);
        org.junit.Assert.assertEquals(obj23.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj23), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj23), "{}");
        org.junit.Assert.assertNull(obj26);
        org.junit.Assert.assertNotNull(objEnumeration27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNull(obj31);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "hi!" + "'", str42, "hi!");
        org.junit.Assert.assertNull(obj46);
        org.junit.Assert.assertNotNull(strSet47);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNotNull(objCollection49);
        org.junit.Assert.assertNull(obj53);
        org.junit.Assert.assertNotNull(objEnumeration54);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertNotNull(objSet56);
        org.junit.Assert.assertNull(obj57);
        org.junit.Assert.assertNotNull(objSet58);
        org.junit.Assert.assertNotNull(objSet59);
        org.junit.Assert.assertNotNull(objEntrySet60);
        org.junit.Assert.assertNotNull(objSet61);
        org.junit.Assert.assertNull(obj62);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertNull(obj66);
        org.junit.Assert.assertNotNull(objEnumeration67);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + true + "'", boolean68 == true);
        org.junit.Assert.assertNotNull(objSet69);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + true + "'", boolean70 == true);
        org.junit.Assert.assertNotNull(objEntrySet71);
        org.junit.Assert.assertNull(obj74);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + true + "'", boolean75 == true);
        org.junit.Assert.assertNull(obj78);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + false + "'", boolean82 == false);
        org.junit.Assert.assertTrue("'" + int84 + "' != '" + 0 + "'", int84 == 0);
        org.junit.Assert.assertNotNull(wildcardEnumeration85);
        org.junit.Assert.assertNotNull(obj86);
        org.junit.Assert.assertEquals(obj86.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj86), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj86), "{}");
        org.junit.Assert.assertNull(obj89);
        org.junit.Assert.assertNotNull(objEnumeration90);
        org.junit.Assert.assertTrue("'" + boolean91 + "' != '" + true + "'", boolean91 == true);
        org.junit.Assert.assertNotNull(objSet92);
        org.junit.Assert.assertNotNull(objEnumeration93);
        org.junit.Assert.assertNotNull(objEntrySet94);
        org.junit.Assert.assertNotNull(objCollection96);
        org.junit.Assert.assertTrue("'" + boolean97 + "' != '" + false + "'", boolean97 == false);
        org.junit.Assert.assertNotNull(objSet98);
    }

    @Test
    public void test7861() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7861");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<?> wildcardEnumeration3 = properties0.propertyNames();
        java.lang.Object obj6 = properties0.setProperty("{}", "hi!");
        properties0.clear();
        java.util.Set<java.lang.String> strSet8 = properties0.stringPropertyNames();
        java.util.Collection<java.lang.Object> objCollection9 = properties0.values();
        properties0.clear();
        java.util.Properties properties11 = new java.util.Properties();
        java.lang.Object obj13 = properties11.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration14 = properties11.elements();
        boolean boolean15 = properties11.isEmpty();
        java.util.Set<java.lang.Object> objSet16 = properties11.keySet();
        java.util.Enumeration<java.lang.Object> objEnumeration17 = properties11.keys();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet18 = properties11.entrySet();
        java.util.Properties properties19 = new java.util.Properties();
        java.lang.Object obj21 = properties19.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration22 = properties19.elements();
        boolean boolean23 = properties19.isEmpty();
        java.util.Set<java.lang.Object> objSet24 = properties19.keySet();
        java.util.Enumeration<java.lang.Object> objEnumeration25 = properties19.keys();
        java.lang.String str27 = properties19.getProperty("hi!");
        java.lang.String str29 = properties19.getProperty("");
        java.lang.Object obj31 = properties11.putIfAbsent((java.lang.Object) "", (java.lang.Object) 100.0d);
        java.util.Properties properties32 = new java.util.Properties();
        java.lang.Object obj34 = properties32.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration35 = properties32.elements();
        int int36 = properties32.size();
        java.util.Properties properties37 = new java.util.Properties(properties32);
        java.util.Set<java.lang.String> strSet38 = properties32.stringPropertyNames();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties39 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties39.setSerialJtaTransactions(false);
        boolean boolean42 = atomikosProperties39.isSerialJtaTransactions();
        atomikosProperties39.setCheckpointInterval((long) 10);
        atomikosProperties39.setSerialJtaTransactions(true);
        java.util.Properties properties47 = new java.util.Properties();
        java.lang.Object obj49 = properties47.remove((java.lang.Object) 0.0d);
        boolean boolean50 = properties47.isEmpty();
        java.util.Enumeration<java.lang.Object> objEnumeration51 = properties47.elements();
        java.util.Enumeration<java.lang.Object> objEnumeration52 = properties47.elements();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties53 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties53.setSerialJtaTransactions(false);
        atomikosProperties53.setThreadedTwoPhaseCommit(true);
        atomikosProperties53.setMaxTimeout((long) '#');
        boolean boolean60 = atomikosProperties53.isForceShutdownOnVmExit();
        int int61 = atomikosProperties53.getMaxActives();
        java.lang.Object obj62 = properties47.remove((java.lang.Object) int61);
        boolean boolean63 = properties11.replace((java.lang.Object) strSet38, (java.lang.Object) true, (java.lang.Object) properties47);
        java.lang.String str64 = properties47.toString();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties65 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties65.setSerialJtaTransactions(false);
        atomikosProperties65.setThreadedTwoPhaseCommit(true);
        atomikosProperties65.setThreadedTwoPhaseCommit(true);
        java.util.Properties properties72 = atomikosProperties65.asProperties();
        int int73 = atomikosProperties65.getMaxActives();
        atomikosProperties65.setService("hi!");
        long long76 = atomikosProperties65.getMaxTimeout();
        atomikosProperties65.setTransactionManagerUniqueName("hi!");
        atomikosProperties65.setEnableLogging(false);
        atomikosProperties65.setMaxActives((int) 'a');
        atomikosProperties65.setLogBaseName("{=hi!}");
        boolean boolean85 = atomikosProperties65.isForceShutdownOnVmExit();
        java.lang.Object obj86 = properties47.get((java.lang.Object) atomikosProperties65);
        java.util.Set<java.lang.Object> objSet87 = properties47.keySet();
        java.lang.Object obj88 = properties0.get((java.lang.Object) objSet87);
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(wildcardEnumeration3);
        org.junit.Assert.assertNull(obj6);
        org.junit.Assert.assertNotNull(strSet8);
        org.junit.Assert.assertNotNull(objCollection9);
        org.junit.Assert.assertNull(obj13);
        org.junit.Assert.assertNotNull(objEnumeration14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(objSet16);
        org.junit.Assert.assertNotNull(objEnumeration17);
        org.junit.Assert.assertNotNull(objEntrySet18);
        org.junit.Assert.assertNull(obj21);
        org.junit.Assert.assertNotNull(objEnumeration22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNotNull(objSet24);
        org.junit.Assert.assertNotNull(objEnumeration25);
        org.junit.Assert.assertNull(str27);
        org.junit.Assert.assertNull(str29);
        org.junit.Assert.assertNull(obj31);
        org.junit.Assert.assertNull(obj34);
        org.junit.Assert.assertNotNull(objEnumeration35);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 0 + "'", int36 == 0);
        org.junit.Assert.assertNotNull(strSet38);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNull(obj49);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertNotNull(objEnumeration51);
        org.junit.Assert.assertNotNull(objEnumeration52);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertTrue("'" + int61 + "' != '" + 50 + "'", int61 == 50);
        org.junit.Assert.assertNull(obj62);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "{}" + "'", str64, "{}");
        org.junit.Assert.assertNotNull(properties72);
        org.junit.Assert.assertTrue("'" + int73 + "' != '" + 50 + "'", int73 == 50);
        org.junit.Assert.assertTrue("'" + long76 + "' != '" + 300000L + "'", long76 == 300000L);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + false + "'", boolean85 == false);
        org.junit.Assert.assertNull(obj86);
        org.junit.Assert.assertNotNull(objSet87);
        org.junit.Assert.assertNull(obj88);
    }

    @Test
    public void test7862() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7862");
        java.util.Properties properties0 = new java.util.Properties();
        boolean boolean2 = properties0.contains((java.lang.Object) 100.0d);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties3 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties3.setSerialJtaTransactions(false);
        atomikosProperties3.setThreadedTwoPhaseCommit(true);
        atomikosProperties3.setSerialJtaTransactions(false);
        java.lang.String str10 = atomikosProperties3.getService();
        boolean boolean11 = properties0.containsKey((java.lang.Object) atomikosProperties3);
        java.lang.String str12 = atomikosProperties3.getService();
        atomikosProperties3.setThreadedTwoPhaseCommit(true);
        int int15 = atomikosProperties3.getMaxActives();
        atomikosProperties3.setMaxActives(1);
        java.lang.String str18 = atomikosProperties3.getLogBaseDir();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 50 + "'", int15 == 50);
        org.junit.Assert.assertNull(str18);
    }

    @Test
    public void test7863() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7863");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setSerialJtaTransactions(false);
        atomikosProperties0.setThreadedTwoPhaseCommit(true);
        atomikosProperties0.setMaxTimeout((long) '#');
        boolean boolean7 = atomikosProperties0.isEnableLogging();
        atomikosProperties0.setCheckpointInterval((long) (byte) -1);
        atomikosProperties0.setMaxActives((int) (byte) 100);
        atomikosProperties0.setForceShutdownOnVmExit(false);
        boolean boolean14 = atomikosProperties0.isThreadedTwoPhaseCommit();
        boolean boolean15 = atomikosProperties0.isForceShutdownOnVmExit();
        boolean boolean16 = atomikosProperties0.isSerialJtaTransactions();
        atomikosProperties0.setThreadedTwoPhaseCommit(false);
        atomikosProperties0.setEnableLogging(true);
        atomikosProperties0.setForceShutdownOnVmExit(false);
        java.util.Properties properties23 = atomikosProperties0.asProperties();
        java.io.PrintWriter printWriter24 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties23.list(printWriter24);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(properties23);
    }

    @Test
    public void test7864() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7864");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet3 = properties0.stringPropertyNames();
        java.util.Properties properties4 = new java.util.Properties();
        java.util.Properties properties5 = new java.util.Properties();
        java.lang.Object obj7 = properties5.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet8 = properties5.stringPropertyNames();
        boolean boolean9 = properties4.containsValue((java.lang.Object) properties5);
        java.util.Collection<java.lang.Object> objCollection10 = properties4.values();
        java.util.Enumeration<?> wildcardEnumeration11 = properties4.propertyNames();
        java.lang.Object obj13 = properties0.put((java.lang.Object) wildcardEnumeration11, (java.lang.Object) 10.0d);
        java.util.Properties properties14 = new java.util.Properties();
        java.lang.Object obj16 = properties14.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration17 = properties14.elements();
        boolean boolean18 = properties14.isEmpty();
        java.util.Set<java.lang.Object> objSet19 = properties14.keySet();
        boolean boolean20 = properties14.isEmpty();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet21 = properties14.entrySet();
        java.util.Properties properties22 = new java.util.Properties();
        java.lang.Object obj24 = properties22.remove((java.lang.Object) 0.0d);
        boolean boolean25 = properties22.isEmpty();
        java.lang.Object obj28 = properties22.setProperty("", "hi!");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties29 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties29.setSerialJtaTransactions(false);
        boolean boolean32 = properties14.remove((java.lang.Object) properties22, (java.lang.Object) atomikosProperties29);
        java.util.Properties properties33 = new java.util.Properties(properties22);
        int int34 = properties33.size();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties36 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties36.setSerialJtaTransactions(false);
        boolean boolean39 = atomikosProperties36.isSerialJtaTransactions();
        java.lang.String str40 = atomikosProperties36.getService();
        boolean boolean41 = atomikosProperties36.isEnableLogging();
        java.lang.String str42 = atomikosProperties36.getTransactionManagerUniqueName();
        boolean boolean43 = properties33.remove((java.lang.Object) (byte) 1, (java.lang.Object) atomikosProperties36);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties44 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties44.setSerialJtaTransactions(false);
        atomikosProperties44.setThreadedTwoPhaseCommit(true);
        atomikosProperties44.setEnableLogging(false);
        boolean boolean51 = atomikosProperties44.isSerialJtaTransactions();
        int int52 = atomikosProperties44.getMaxActives();
        boolean boolean53 = atomikosProperties44.isSerialJtaTransactions();
        boolean boolean54 = properties0.remove((java.lang.Object) properties33, (java.lang.Object) boolean53);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties55 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties55.setSerialJtaTransactions(false);
        atomikosProperties55.setThreadedTwoPhaseCommit(true);
        atomikosProperties55.setMaxTimeout((long) '#');
        boolean boolean62 = atomikosProperties55.isEnableLogging();
        atomikosProperties55.setCheckpointInterval((long) 100);
        java.lang.String str65 = atomikosProperties55.getTransactionManagerUniqueName();
        boolean boolean66 = properties33.contains((java.lang.Object) atomikosProperties55);
        long long67 = atomikosProperties55.getMaxTimeout();
        atomikosProperties55.setMaxActives(1);
        long long70 = atomikosProperties55.getDefaultJtaTimeout();
        atomikosProperties55.setDefaultJtaTimeout((long) 11);
        boolean boolean73 = atomikosProperties55.isSerialJtaTransactions();
        long long74 = atomikosProperties55.getCheckpointInterval();
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(strSet3);
        org.junit.Assert.assertNull(obj7);
        org.junit.Assert.assertNotNull(strSet8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(objCollection10);
        org.junit.Assert.assertNotNull(wildcardEnumeration11);
        org.junit.Assert.assertNull(obj13);
        org.junit.Assert.assertNull(obj16);
        org.junit.Assert.assertNotNull(objEnumeration17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(objSet19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNotNull(objEntrySet21);
        org.junit.Assert.assertNull(obj24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNull(obj28);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 0 + "'", int34 == 0);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNull(str40);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertNull(str42);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + 50 + "'", int52 == 50);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + true + "'", boolean62 == true);
        org.junit.Assert.assertNull(str65);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertTrue("'" + long67 + "' != '" + 35L + "'", long67 == 35L);
        org.junit.Assert.assertTrue("'" + long70 + "' != '" + 10000L + "'", long70 == 10000L);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertTrue("'" + long74 + "' != '" + 100L + "'", long74 == 100L);
    }

    @Test
    public void test7865() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7865");
        java.util.Properties properties0 = new java.util.Properties();
        java.util.Collection<java.lang.Object> objCollection1 = properties0.values();
        java.util.Properties properties2 = new java.util.Properties();
        java.lang.Object obj4 = properties2.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet5 = properties2.stringPropertyNames();
        java.util.Properties properties6 = new java.util.Properties();
        java.util.Properties properties7 = new java.util.Properties();
        java.lang.Object obj9 = properties7.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet10 = properties7.stringPropertyNames();
        boolean boolean11 = properties6.containsValue((java.lang.Object) properties7);
        java.util.Collection<java.lang.Object> objCollection12 = properties6.values();
        java.util.Enumeration<?> wildcardEnumeration13 = properties6.propertyNames();
        java.lang.Object obj15 = properties2.put((java.lang.Object) wildcardEnumeration13, (java.lang.Object) 10.0d);
        boolean boolean16 = properties0.equals((java.lang.Object) 10.0d);
        java.lang.String str18 = properties0.getProperty("{}");
        java.util.Properties properties19 = new java.util.Properties();
        java.util.Properties properties20 = new java.util.Properties();
        java.lang.Object obj22 = properties20.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet23 = properties20.stringPropertyNames();
        boolean boolean24 = properties19.containsValue((java.lang.Object) properties20);
        java.util.Collection<java.lang.Object> objCollection25 = properties19.values();
        java.util.Properties properties27 = new java.util.Properties();
        java.lang.Object obj29 = properties27.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration30 = properties27.elements();
        boolean boolean31 = properties27.isEmpty();
        java.util.Set<java.lang.Object> objSet32 = properties27.keySet();
        java.lang.Object obj33 = properties19.putIfAbsent((java.lang.Object) "hi!", (java.lang.Object) objSet32);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties34 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties34.setSerialJtaTransactions(false);
        boolean boolean37 = atomikosProperties34.isSerialJtaTransactions();
        java.util.Properties properties38 = atomikosProperties34.asProperties();
        java.lang.Object obj41 = properties38.setProperty("hi!", "");
        java.util.Properties properties42 = new java.util.Properties(properties38);
        java.util.Properties properties43 = new java.util.Properties();
        java.lang.Object obj45 = properties43.remove((java.lang.Object) 0.0d);
        java.util.Properties properties46 = new java.util.Properties();
        java.util.Collection<java.lang.Object> objCollection47 = properties46.values();
        java.util.Enumeration<java.lang.Object> objEnumeration48 = properties46.keys();
        java.util.Properties properties49 = new java.util.Properties();
        java.lang.Object obj51 = properties49.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration52 = properties49.elements();
        boolean boolean53 = properties49.isEmpty();
        java.util.Set<java.lang.Object> objSet54 = properties49.keySet();
        java.util.Enumeration<java.lang.Object> objEnumeration55 = properties49.keys();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet56 = properties49.entrySet();
        java.lang.Object obj57 = properties43.put((java.lang.Object) properties46, (java.lang.Object) properties49);
        java.lang.Object obj58 = properties19.putIfAbsent((java.lang.Object) properties42, (java.lang.Object) properties49);
        properties49.clear();
        java.lang.Object obj60 = properties0.get((java.lang.Object) properties49);
        java.util.Enumeration<java.lang.Object> objEnumeration61 = properties49.keys();
        java.util.Properties properties62 = new java.util.Properties(properties49);
        java.lang.Object obj63 = properties49.clone();
        java.lang.String str65 = properties49.getProperty("{true=class org.springframework.boot.jta.atomikos.AtomikosProperties}");
        org.junit.Assert.assertNotNull(objCollection1);
        org.junit.Assert.assertNull(obj4);
        org.junit.Assert.assertNotNull(strSet5);
        org.junit.Assert.assertNull(obj9);
        org.junit.Assert.assertNotNull(strSet10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(objCollection12);
        org.junit.Assert.assertNotNull(wildcardEnumeration13);
        org.junit.Assert.assertNull(obj15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNull(str18);
        org.junit.Assert.assertNull(obj22);
        org.junit.Assert.assertNotNull(strSet23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(objCollection25);
        org.junit.Assert.assertNull(obj29);
        org.junit.Assert.assertNotNull(objEnumeration30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNotNull(objSet32);
        org.junit.Assert.assertNull(obj33);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(properties38);
        org.junit.Assert.assertNull(obj41);
        org.junit.Assert.assertNull(obj45);
        org.junit.Assert.assertNotNull(objCollection47);
        org.junit.Assert.assertNotNull(objEnumeration48);
        org.junit.Assert.assertNull(obj51);
        org.junit.Assert.assertNotNull(objEnumeration52);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertNotNull(objSet54);
        org.junit.Assert.assertNotNull(objEnumeration55);
        org.junit.Assert.assertNotNull(objEntrySet56);
        org.junit.Assert.assertNull(obj57);
        org.junit.Assert.assertNull(obj58);
        org.junit.Assert.assertNull(obj60);
        org.junit.Assert.assertNotNull(objEnumeration61);
        org.junit.Assert.assertNotNull(obj63);
        org.junit.Assert.assertEquals(obj63.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj63), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj63), "{}");
        org.junit.Assert.assertNull(str65);
    }

    @Test
    public void test7866() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7866");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setSerialJtaTransactions(false);
        atomikosProperties0.setThreadedTwoPhaseCommit(true);
        atomikosProperties0.setMaxTimeout((long) '#');
        long long7 = atomikosProperties0.getCheckpointInterval();
        java.lang.String str8 = atomikosProperties0.getTransactionManagerUniqueName();
        atomikosProperties0.setDefaultJtaTimeout((long) 0);
        java.util.Properties properties11 = atomikosProperties0.asProperties();
        java.util.Set<java.lang.String> strSet12 = properties11.stringPropertyNames();
        java.lang.Object obj13 = properties11.clone();
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + 500L + "'", long7 == 500L);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNotNull(properties11);
        org.junit.Assert.assertNotNull(strSet12);
        org.junit.Assert.assertNotNull(obj13);
// flaky:         org.junit.Assert.assertEquals(obj13.toString(), "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=false, com.atomikos.icatch.default_jta_timeout=0, com.atomikos.icatch.max_timeout=35, com.atomikos.icatch.threaded_2pc=true, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
// flaky:         org.junit.Assert.assertEquals(java.lang.String.valueOf(obj13), "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=false, com.atomikos.icatch.default_jta_timeout=0, com.atomikos.icatch.max_timeout=35, com.atomikos.icatch.threaded_2pc=true, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
// flaky:         org.junit.Assert.assertEquals(java.util.Objects.toString(obj13), "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=false, com.atomikos.icatch.default_jta_timeout=0, com.atomikos.icatch.max_timeout=35, com.atomikos.icatch.threaded_2pc=true, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
    }

    @Test
    public void test7867() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7867");
        java.util.Properties properties0 = new java.util.Properties();
        java.util.Properties properties1 = new java.util.Properties();
        java.lang.Object obj3 = properties1.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet4 = properties1.stringPropertyNames();
        boolean boolean5 = properties0.containsValue((java.lang.Object) properties1);
        java.util.Enumeration<?> wildcardEnumeration6 = properties0.propertyNames();
        java.lang.String str7 = properties0.toString();
        java.lang.String str9 = properties0.getProperty("{tmlog=}");
        java.util.Enumeration<java.lang.Object> objEnumeration10 = properties0.elements();
        org.junit.Assert.assertNull(obj3);
        org.junit.Assert.assertNotNull(strSet4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(wildcardEnumeration6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "{}" + "'", str7, "{}");
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertNotNull(objEnumeration10);
    }

    @Test
    public void test7868() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7868");
        java.util.Properties properties0 = new java.util.Properties();
        java.util.Collection<java.lang.Object> objCollection1 = properties0.values();
        java.util.Enumeration<java.lang.Object> objEnumeration2 = properties0.keys();
        java.util.Collection<java.lang.Object> objCollection3 = properties0.values();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties4 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties4.setSerialJtaTransactions(false);
        atomikosProperties4.setThreadedTwoPhaseCommit(true);
        atomikosProperties4.setThreadedTwoPhaseCommit(true);
        java.util.Properties properties11 = atomikosProperties4.asProperties();
        int int12 = atomikosProperties4.getMaxActives();
        atomikosProperties4.setTransactionManagerUniqueName("hi!");
        atomikosProperties4.setMaxTimeout(500L);
        java.util.Properties properties17 = atomikosProperties4.asProperties();
        java.util.Properties properties18 = new java.util.Properties();
        java.lang.Object obj20 = properties18.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration21 = properties18.elements();
        boolean boolean22 = properties18.isEmpty();
        java.util.Set<java.lang.Object> objSet23 = properties18.keySet();
        boolean boolean25 = properties18.containsKey((java.lang.Object) (-1.0f));
        java.util.Collection<java.lang.Object> objCollection26 = properties18.values();
        java.lang.Object obj27 = properties18.clone();
        java.util.Properties properties28 = new java.util.Properties();
        java.lang.Object obj30 = properties28.remove((java.lang.Object) 0.0d);
        boolean boolean31 = properties28.isEmpty();
        java.util.Enumeration<java.lang.Object> objEnumeration32 = properties28.elements();
        java.lang.Object obj35 = properties28.replace((java.lang.Object) 1, (java.lang.Object) 1);
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet36 = properties28.entrySet();
        boolean boolean37 = properties18.contains((java.lang.Object) properties28);
        java.lang.Object obj38 = properties28.clone();
        java.util.Properties properties39 = new java.util.Properties();
        java.lang.Object obj41 = properties39.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration42 = properties39.elements();
        boolean boolean43 = properties39.isEmpty();
        java.util.Set<java.lang.Object> objSet44 = properties39.keySet();
        boolean boolean45 = properties39.isEmpty();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet46 = properties39.entrySet();
        java.util.Properties properties47 = new java.util.Properties();
        java.lang.Object obj49 = properties47.remove((java.lang.Object) 0.0d);
        boolean boolean50 = properties47.isEmpty();
        java.lang.Object obj53 = properties47.setProperty("", "hi!");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties54 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties54.setSerialJtaTransactions(false);
        boolean boolean57 = properties39.remove((java.lang.Object) properties47, (java.lang.Object) atomikosProperties54);
        java.util.Properties properties58 = new java.util.Properties();
        java.lang.Object obj60 = properties58.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration61 = properties58.elements();
        boolean boolean62 = properties58.isEmpty();
        java.util.Set<java.lang.Object> objSet63 = properties58.keySet();
        boolean boolean65 = properties58.containsKey((java.lang.Object) (-1.0f));
        java.util.Collection<java.lang.Object> objCollection66 = properties58.values();
        java.lang.Object obj67 = properties28.replace((java.lang.Object) boolean57, (java.lang.Object) objCollection66);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties68 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties68.setSerialJtaTransactions(false);
        boolean boolean71 = atomikosProperties68.isSerialJtaTransactions();
        boolean boolean72 = atomikosProperties68.isEnableLogging();
        atomikosProperties68.setService("");
        java.util.Properties properties75 = atomikosProperties68.asProperties();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties76 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties76.setSerialJtaTransactions(false);
        java.lang.Object obj79 = properties75.remove((java.lang.Object) atomikosProperties76);
        boolean boolean80 = atomikosProperties76.isSerialJtaTransactions();
        atomikosProperties76.setService("{{}={}}");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties83 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties83.setSerialJtaTransactions(false);
        atomikosProperties83.setThreadedTwoPhaseCommit(true);
        atomikosProperties83.setSerialJtaTransactions(false);
        boolean boolean90 = atomikosProperties83.isSerialJtaTransactions();
        java.lang.Object obj91 = properties28.getOrDefault((java.lang.Object) "{{}={}}", (java.lang.Object) boolean90);
        java.lang.Object obj92 = properties0.putIfAbsent((java.lang.Object) properties17, (java.lang.Object) "{{}={}}");
        java.lang.Object obj95 = properties0.setProperty("{{}=tmlog}", "{true={com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=100, com.atomikos.icatch.serial_jta_transactions=false, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=35, com.atomikos.icatch.threaded_2pc=true, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}}");
        org.junit.Assert.assertNotNull(objCollection1);
        org.junit.Assert.assertNotNull(objEnumeration2);
        org.junit.Assert.assertNotNull(objCollection3);
        org.junit.Assert.assertNotNull(properties11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 50 + "'", int12 == 50);
        org.junit.Assert.assertNotNull(properties17);
        org.junit.Assert.assertNull(obj20);
        org.junit.Assert.assertNotNull(objEnumeration21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNotNull(objSet23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(objCollection26);
        org.junit.Assert.assertNotNull(obj27);
        org.junit.Assert.assertEquals(obj27.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj27), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj27), "{}");
        org.junit.Assert.assertNull(obj30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNotNull(objEnumeration32);
        org.junit.Assert.assertNull(obj35);
        org.junit.Assert.assertNotNull(objEntrySet36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(obj38);
        org.junit.Assert.assertEquals(obj38.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj38), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj38), "{}");
        org.junit.Assert.assertNull(obj41);
        org.junit.Assert.assertNotNull(objEnumeration42);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNotNull(objSet44);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertNotNull(objEntrySet46);
        org.junit.Assert.assertNull(obj49);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertNull(obj53);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertNull(obj60);
        org.junit.Assert.assertNotNull(objEnumeration61);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + true + "'", boolean62 == true);
        org.junit.Assert.assertNotNull(objSet63);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertNotNull(objCollection66);
        org.junit.Assert.assertNull(obj67);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + true + "'", boolean72 == true);
        org.junit.Assert.assertNotNull(properties75);
        org.junit.Assert.assertNull(obj79);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", boolean80 == false);
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + false + "'", boolean90 == false);
        org.junit.Assert.assertEquals("'" + obj91 + "' != '" + false + "'", obj91, false);
        org.junit.Assert.assertNull(obj92);
        org.junit.Assert.assertNull(obj95);
    }

    @Test
    public void test7869() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7869");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setSerialJtaTransactions(false);
        atomikosProperties0.setThreadedTwoPhaseCommit(true);
        atomikosProperties0.setMaxTimeout((long) '#');
        boolean boolean7 = atomikosProperties0.isEnableLogging();
        atomikosProperties0.setCheckpointInterval((long) (byte) -1);
        atomikosProperties0.setMaxActives((int) (byte) 100);
        atomikosProperties0.setForceShutdownOnVmExit(false);
        atomikosProperties0.setMaxActives((int) '#');
        java.lang.String str16 = atomikosProperties0.getService();
        atomikosProperties0.setCheckpointInterval((long) '4');
        boolean boolean19 = atomikosProperties0.isEnableLogging();
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNull(str16);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
    }

    @Test
    public void test7870() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7870");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setSerialJtaTransactions(false);
        atomikosProperties0.setThreadedTwoPhaseCommit(true);
        atomikosProperties0.setEnableLogging(false);
        atomikosProperties0.setForceShutdownOnVmExit(true);
        boolean boolean9 = atomikosProperties0.isSerialJtaTransactions();
        java.util.Properties properties10 = atomikosProperties0.asProperties();
        java.util.Enumeration<java.lang.Object> objEnumeration11 = properties10.keys();
        java.util.Properties properties12 = new java.util.Properties();
        boolean boolean14 = properties12.contains((java.lang.Object) 100.0d);
        java.util.Properties properties15 = new java.util.Properties();
        java.lang.Object obj17 = properties15.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration18 = properties15.elements();
        boolean boolean19 = properties15.isEmpty();
        java.util.Set<java.lang.Object> objSet20 = properties15.keySet();
        boolean boolean21 = properties15.isEmpty();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet22 = properties15.entrySet();
        java.util.Properties properties23 = new java.util.Properties();
        java.lang.Object obj25 = properties23.remove((java.lang.Object) 0.0d);
        boolean boolean26 = properties23.isEmpty();
        java.lang.Object obj29 = properties23.setProperty("", "hi!");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties30 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties30.setSerialJtaTransactions(false);
        boolean boolean33 = properties15.remove((java.lang.Object) properties23, (java.lang.Object) atomikosProperties30);
        boolean boolean34 = properties12.equals((java.lang.Object) properties15);
        java.util.Enumeration<java.lang.Object> objEnumeration35 = properties12.elements();
        java.util.Collection<java.lang.Object> objCollection36 = properties12.values();
        java.util.Enumeration<?> wildcardEnumeration37 = properties12.propertyNames();
        java.util.Set<java.lang.Object> objSet38 = properties12.keySet();
        java.util.Properties properties39 = new java.util.Properties();
        java.lang.Object obj41 = properties39.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration42 = properties39.elements();
        boolean boolean43 = properties39.isEmpty();
        java.util.Set<java.lang.Object> objSet44 = properties39.keySet();
        boolean boolean46 = properties39.containsKey((java.lang.Object) (-1.0f));
        java.util.Collection<java.lang.Object> objCollection47 = properties39.values();
        java.lang.Object obj48 = properties39.clone();
        java.util.Collection<java.lang.Object> objCollection49 = properties39.values();
        java.util.Properties properties50 = new java.util.Properties();
        java.lang.Object obj52 = properties50.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet53 = properties50.stringPropertyNames();
        java.util.Collection<java.lang.Object> objCollection54 = properties50.values();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties55 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties55.setSerialJtaTransactions(false);
        boolean boolean58 = atomikosProperties55.isSerialJtaTransactions();
        atomikosProperties55.setTransactionManagerUniqueName("hi!");
        boolean boolean61 = atomikosProperties55.isEnableLogging();
        atomikosProperties55.setSerialJtaTransactions(true);
        boolean boolean64 = properties39.remove((java.lang.Object) objCollection54, (java.lang.Object) atomikosProperties55);
        java.lang.Object obj65 = properties10.getOrDefault((java.lang.Object) objSet38, (java.lang.Object) atomikosProperties55);
        java.lang.String str66 = properties10.toString();
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(properties10);
        org.junit.Assert.assertNotNull(objEnumeration11);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNull(obj17);
        org.junit.Assert.assertNotNull(objEnumeration18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(objSet20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(objEntrySet22);
        org.junit.Assert.assertNull(obj25);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertNull(obj29);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertNotNull(objEnumeration35);
        org.junit.Assert.assertNotNull(objCollection36);
        org.junit.Assert.assertNotNull(wildcardEnumeration37);
        org.junit.Assert.assertNotNull(objSet38);
        org.junit.Assert.assertNull(obj41);
        org.junit.Assert.assertNotNull(objEnumeration42);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNotNull(objSet44);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(objCollection47);
        org.junit.Assert.assertNotNull(obj48);
        org.junit.Assert.assertEquals(obj48.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj48), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj48), "{}");
        org.junit.Assert.assertNotNull(objCollection49);
        org.junit.Assert.assertNull(obj52);
        org.junit.Assert.assertNotNull(strSet53);
        org.junit.Assert.assertNotNull(objCollection54);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertNotNull(obj65);
// flaky:         org.junit.Assert.assertEquals("'" + str66 + "' != '" + "{com.atomikos.icatch.enable_logging=false, com.atomikos.icatch.force_shutdown_on_vm_exit=true, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=false, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=true, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}" + "'", str66, "{com.atomikos.icatch.enable_logging=false, com.atomikos.icatch.force_shutdown_on_vm_exit=true, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=false, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=true, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
    }

    @Test
    public void test7871() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7871");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration3 = properties0.elements();
        boolean boolean4 = properties0.isEmpty();
        java.util.Set<java.lang.Object> objSet5 = properties0.keySet();
        boolean boolean7 = properties0.containsKey((java.lang.Object) (-1.0f));
        java.util.Collection<java.lang.Object> objCollection8 = properties0.values();
        java.lang.Object obj9 = properties0.clone();
        java.util.Properties properties10 = new java.util.Properties();
        java.lang.Object obj12 = properties10.remove((java.lang.Object) 0.0d);
        boolean boolean13 = properties10.isEmpty();
        java.lang.Object obj16 = properties10.setProperty("", "hi!");
        java.util.Properties properties17 = new java.util.Properties();
        java.lang.Object obj19 = properties17.remove((java.lang.Object) 0.0d);
        java.util.Properties properties20 = new java.util.Properties();
        java.util.Collection<java.lang.Object> objCollection21 = properties20.values();
        java.util.Enumeration<java.lang.Object> objEnumeration22 = properties20.keys();
        java.util.Properties properties23 = new java.util.Properties();
        java.lang.Object obj25 = properties23.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration26 = properties23.elements();
        boolean boolean27 = properties23.isEmpty();
        java.util.Set<java.lang.Object> objSet28 = properties23.keySet();
        java.util.Enumeration<java.lang.Object> objEnumeration29 = properties23.keys();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet30 = properties23.entrySet();
        java.lang.Object obj31 = properties17.put((java.lang.Object) properties20, (java.lang.Object) properties23);
        java.lang.String str33 = properties20.getProperty("{=hi!}");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties34 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties34.setSerialJtaTransactions(false);
        atomikosProperties34.setThreadedTwoPhaseCommit(true);
        atomikosProperties34.setThreadedTwoPhaseCommit(true);
        long long41 = atomikosProperties34.getMaxTimeout();
        boolean boolean42 = properties20.containsValue((java.lang.Object) atomikosProperties34);
        java.util.Enumeration<java.lang.Object> objEnumeration43 = properties20.elements();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties44 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties44.setSerialJtaTransactions(false);
        boolean boolean47 = atomikosProperties44.isThreadedTwoPhaseCommit();
        atomikosProperties44.setThreadedTwoPhaseCommit(false);
        java.lang.Object obj50 = properties10.putIfAbsent((java.lang.Object) properties20, (java.lang.Object) atomikosProperties44);
        boolean boolean51 = properties0.contains((java.lang.Object) properties20);
        java.util.Enumeration<java.lang.Object> objEnumeration52 = properties0.keys();
        java.util.Properties properties53 = new java.util.Properties();
        java.lang.Object obj55 = properties53.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration56 = properties53.elements();
        boolean boolean57 = properties53.isEmpty();
        java.util.Enumeration<java.lang.Object> objEnumeration58 = properties53.elements();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet59 = properties53.entrySet();
        java.util.Set<java.lang.String> strSet60 = properties53.stringPropertyNames();
        java.util.Properties properties61 = new java.util.Properties();
        java.lang.Object obj63 = properties61.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration64 = properties61.elements();
        boolean boolean65 = properties61.isEmpty();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet66 = properties61.entrySet();
        boolean boolean67 = properties53.contains((java.lang.Object) properties61);
        java.util.Properties properties68 = new java.util.Properties();
        java.lang.Object obj70 = properties68.remove((java.lang.Object) 0.0d);
        java.util.Properties properties71 = new java.util.Properties();
        java.util.Collection<java.lang.Object> objCollection72 = properties71.values();
        java.util.Enumeration<java.lang.Object> objEnumeration73 = properties71.keys();
        java.util.Properties properties74 = new java.util.Properties();
        java.lang.Object obj76 = properties74.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration77 = properties74.elements();
        boolean boolean78 = properties74.isEmpty();
        java.util.Set<java.lang.Object> objSet79 = properties74.keySet();
        java.util.Enumeration<java.lang.Object> objEnumeration80 = properties74.keys();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet81 = properties74.entrySet();
        java.lang.Object obj82 = properties68.put((java.lang.Object) properties71, (java.lang.Object) properties74);
        java.lang.Object obj83 = properties71.clone();
        boolean boolean84 = properties53.containsKey((java.lang.Object) properties71);
        java.util.Enumeration<java.lang.Object> objEnumeration85 = properties71.keys();
        java.lang.String str87 = properties71.getProperty("");
        java.util.Properties properties88 = new java.util.Properties(properties71);
        java.lang.Object obj89 = properties0.remove((java.lang.Object) properties88);
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(objEnumeration3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(objSet5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(objCollection8);
        org.junit.Assert.assertNotNull(obj9);
        org.junit.Assert.assertEquals(obj9.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj9), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj9), "{}");
        org.junit.Assert.assertNull(obj12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNull(obj16);
        org.junit.Assert.assertNull(obj19);
        org.junit.Assert.assertNotNull(objCollection21);
        org.junit.Assert.assertNotNull(objEnumeration22);
        org.junit.Assert.assertNull(obj25);
        org.junit.Assert.assertNotNull(objEnumeration26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNotNull(objSet28);
        org.junit.Assert.assertNotNull(objEnumeration29);
        org.junit.Assert.assertNotNull(objEntrySet30);
        org.junit.Assert.assertNull(obj31);
        org.junit.Assert.assertNull(str33);
        org.junit.Assert.assertTrue("'" + long41 + "' != '" + 300000L + "'", long41 == 300000L);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(objEnumeration43);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNull(obj50);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertNotNull(objEnumeration52);
        org.junit.Assert.assertNull(obj55);
        org.junit.Assert.assertNotNull(objEnumeration56);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertNotNull(objEnumeration58);
        org.junit.Assert.assertNotNull(objEntrySet59);
        org.junit.Assert.assertNotNull(strSet60);
        org.junit.Assert.assertNull(obj63);
        org.junit.Assert.assertNotNull(objEnumeration64);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65 == true);
        org.junit.Assert.assertNotNull(objEntrySet66);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertNull(obj70);
        org.junit.Assert.assertNotNull(objCollection72);
        org.junit.Assert.assertNotNull(objEnumeration73);
        org.junit.Assert.assertNull(obj76);
        org.junit.Assert.assertNotNull(objEnumeration77);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + true + "'", boolean78 == true);
        org.junit.Assert.assertNotNull(objSet79);
        org.junit.Assert.assertNotNull(objEnumeration80);
        org.junit.Assert.assertNotNull(objEntrySet81);
        org.junit.Assert.assertNull(obj82);
        org.junit.Assert.assertNotNull(obj83);
        org.junit.Assert.assertEquals(obj83.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj83), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj83), "{}");
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + false + "'", boolean84 == false);
        org.junit.Assert.assertNotNull(objEnumeration85);
        org.junit.Assert.assertNull(str87);
        org.junit.Assert.assertNull(obj89);
    }

    @Test
    public void test7872() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7872");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet3 = properties0.stringPropertyNames();
        java.util.Properties properties4 = new java.util.Properties();
        java.util.Properties properties5 = new java.util.Properties();
        java.lang.Object obj7 = properties5.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet8 = properties5.stringPropertyNames();
        boolean boolean9 = properties4.containsValue((java.lang.Object) properties5);
        java.util.Collection<java.lang.Object> objCollection10 = properties4.values();
        java.util.Enumeration<?> wildcardEnumeration11 = properties4.propertyNames();
        java.lang.Object obj13 = properties0.put((java.lang.Object) wildcardEnumeration11, (java.lang.Object) 10.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration14 = properties0.elements();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties15 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties15.setSerialJtaTransactions(false);
        boolean boolean18 = atomikosProperties15.isSerialJtaTransactions();
        java.lang.String str19 = atomikosProperties15.getService();
        boolean boolean20 = atomikosProperties15.isEnableLogging();
        java.lang.String str21 = atomikosProperties15.getTransactionManagerUniqueName();
        java.util.Properties properties22 = new java.util.Properties();
        java.lang.Object obj24 = properties22.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration25 = properties22.elements();
        int int26 = properties22.size();
        java.util.Properties properties27 = new java.util.Properties();
        java.lang.Object obj29 = properties27.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration30 = properties27.elements();
        boolean boolean31 = properties27.isEmpty();
        java.util.Set<java.lang.Object> objSet32 = properties27.keySet();
        boolean boolean33 = properties22.containsKey((java.lang.Object) objSet32);
        java.util.Enumeration<java.lang.Object> objEnumeration34 = properties22.keys();
        java.util.Properties properties35 = new java.util.Properties();
        java.lang.Object obj37 = properties35.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration38 = properties35.elements();
        boolean boolean39 = properties35.isEmpty();
        java.util.Set<java.lang.Object> objSet40 = properties35.keySet();
        java.util.Enumeration<java.lang.Object> objEnumeration41 = properties35.keys();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet42 = properties35.entrySet();
        boolean boolean44 = properties22.remove((java.lang.Object) properties35, (java.lang.Object) 1.0f);
        boolean boolean45 = properties35.isEmpty();
        java.lang.Object obj46 = properties0.put((java.lang.Object) atomikosProperties15, (java.lang.Object) properties35);
        java.util.Properties properties47 = new java.util.Properties();
        boolean boolean49 = properties47.contains((java.lang.Object) 100.0d);
        java.util.Properties properties50 = new java.util.Properties();
        java.lang.Object obj52 = properties50.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration53 = properties50.elements();
        boolean boolean54 = properties50.isEmpty();
        java.util.Set<java.lang.Object> objSet55 = properties50.keySet();
        boolean boolean56 = properties50.isEmpty();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet57 = properties50.entrySet();
        java.util.Properties properties58 = new java.util.Properties();
        java.lang.Object obj60 = properties58.remove((java.lang.Object) 0.0d);
        boolean boolean61 = properties58.isEmpty();
        java.lang.Object obj64 = properties58.setProperty("", "hi!");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties65 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties65.setSerialJtaTransactions(false);
        boolean boolean68 = properties50.remove((java.lang.Object) properties58, (java.lang.Object) atomikosProperties65);
        boolean boolean69 = properties47.equals((java.lang.Object) properties50);
        java.util.Enumeration<java.lang.Object> objEnumeration70 = properties47.elements();
        java.util.Collection<java.lang.Object> objCollection71 = properties47.values();
        java.util.Enumeration<?> wildcardEnumeration72 = properties47.propertyNames();
        java.util.Collection<java.lang.Object> objCollection73 = properties47.values();
        boolean boolean74 = properties35.equals((java.lang.Object) objCollection73);
        java.lang.String str76 = properties35.getProperty("hi!");
        java.util.Set<java.lang.Object> objSet77 = properties35.keySet();
        java.io.OutputStream outputStream78 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties35.store(outputStream78, "{true=true}");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(strSet3);
        org.junit.Assert.assertNull(obj7);
        org.junit.Assert.assertNotNull(strSet8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(objCollection10);
        org.junit.Assert.assertNotNull(wildcardEnumeration11);
        org.junit.Assert.assertNull(obj13);
        org.junit.Assert.assertNotNull(objEnumeration14);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNull(str19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNull(str21);
        org.junit.Assert.assertNull(obj24);
        org.junit.Assert.assertNotNull(objEnumeration25);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 0 + "'", int26 == 0);
        org.junit.Assert.assertNull(obj29);
        org.junit.Assert.assertNotNull(objEnumeration30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNotNull(objSet32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(objEnumeration34);
        org.junit.Assert.assertNull(obj37);
        org.junit.Assert.assertNotNull(objEnumeration38);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNotNull(objSet40);
        org.junit.Assert.assertNotNull(objEnumeration41);
        org.junit.Assert.assertNotNull(objEntrySet42);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertNull(obj46);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNull(obj52);
        org.junit.Assert.assertNotNull(objEnumeration53);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertNotNull(objSet55);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertNotNull(objEntrySet57);
        org.junit.Assert.assertNull(obj60);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertNull(obj64);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + true + "'", boolean69 == true);
        org.junit.Assert.assertNotNull(objEnumeration70);
        org.junit.Assert.assertNotNull(objCollection71);
        org.junit.Assert.assertNotNull(wildcardEnumeration72);
        org.junit.Assert.assertNotNull(objCollection73);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
        org.junit.Assert.assertNull(str76);
        org.junit.Assert.assertNotNull(objSet77);
    }

    @Test
    public void test7873() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7873");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration3 = properties0.elements();
        int int4 = properties0.size();
        java.util.Properties properties5 = new java.util.Properties();
        java.lang.Object obj7 = properties5.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration8 = properties5.elements();
        boolean boolean9 = properties5.isEmpty();
        java.util.Set<java.lang.Object> objSet10 = properties5.keySet();
        boolean boolean11 = properties0.containsKey((java.lang.Object) objSet10);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties12 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties12.setSerialJtaTransactions(false);
        atomikosProperties12.setThreadedTwoPhaseCommit(true);
        atomikosProperties12.setEnableLogging(false);
        boolean boolean19 = atomikosProperties12.isSerialJtaTransactions();
        int int20 = atomikosProperties12.getMaxActives();
        java.util.Properties properties21 = new java.util.Properties();
        java.lang.Object obj23 = properties21.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet24 = properties21.stringPropertyNames();
        java.util.Properties properties25 = new java.util.Properties();
        java.util.Properties properties26 = new java.util.Properties();
        java.lang.Object obj28 = properties26.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet29 = properties26.stringPropertyNames();
        boolean boolean30 = properties25.containsValue((java.lang.Object) properties26);
        java.util.Collection<java.lang.Object> objCollection31 = properties25.values();
        java.util.Enumeration<?> wildcardEnumeration32 = properties25.propertyNames();
        java.lang.Object obj34 = properties21.put((java.lang.Object) wildcardEnumeration32, (java.lang.Object) 10.0d);
        java.lang.String str36 = properties21.getProperty("{=hi!}");
        java.lang.Object obj37 = properties0.put((java.lang.Object) atomikosProperties12, (java.lang.Object) "{=hi!}");
        atomikosProperties12.setMaxActives(100);
        java.util.Properties properties40 = atomikosProperties12.asProperties();
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(objEnumeration3);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNull(obj7);
        org.junit.Assert.assertNotNull(objEnumeration8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertNotNull(objSet10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 50 + "'", int20 == 50);
        org.junit.Assert.assertNull(obj23);
        org.junit.Assert.assertNotNull(strSet24);
        org.junit.Assert.assertNull(obj28);
        org.junit.Assert.assertNotNull(strSet29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(objCollection31);
        org.junit.Assert.assertNotNull(wildcardEnumeration32);
        org.junit.Assert.assertNull(obj34);
        org.junit.Assert.assertNull(str36);
        org.junit.Assert.assertNull(obj37);
        org.junit.Assert.assertNotNull(properties40);
    }

    @Test
    public void test7874() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7874");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration3 = properties0.elements();
        boolean boolean4 = properties0.isEmpty();
        java.util.Set<java.lang.Object> objSet5 = properties0.keySet();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties6 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties6.setSerialJtaTransactions(false);
        atomikosProperties6.setThreadedTwoPhaseCommit(true);
        atomikosProperties6.setThreadedTwoPhaseCommit(true);
        java.util.Properties properties13 = atomikosProperties6.asProperties();
        int int14 = atomikosProperties6.getMaxActives();
        java.util.Properties properties15 = new java.util.Properties();
        java.lang.Object obj17 = properties15.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration18 = properties15.elements();
        boolean boolean19 = properties15.isEmpty();
        java.util.Set<java.lang.Object> objSet20 = properties15.keySet();
        boolean boolean22 = properties15.containsKey((java.lang.Object) (-1.0f));
        java.lang.Object obj23 = properties0.put((java.lang.Object) atomikosProperties6, (java.lang.Object) properties15);
        java.util.Properties properties24 = new java.util.Properties();
        java.lang.Object obj26 = properties24.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet27 = properties24.stringPropertyNames();
        java.util.Properties properties28 = new java.util.Properties();
        java.lang.Object obj30 = properties28.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet31 = properties28.stringPropertyNames();
        java.lang.Object obj33 = properties24.put((java.lang.Object) strSet31, (java.lang.Object) 0.0d);
        java.util.Properties properties34 = new java.util.Properties();
        java.util.Properties properties35 = new java.util.Properties();
        java.lang.Object obj37 = properties35.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet38 = properties35.stringPropertyNames();
        boolean boolean39 = properties34.containsValue((java.lang.Object) properties35);
        java.util.Collection<java.lang.Object> objCollection40 = properties34.values();
        java.util.Properties properties42 = new java.util.Properties();
        java.lang.Object obj44 = properties42.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration45 = properties42.elements();
        boolean boolean46 = properties42.isEmpty();
        java.util.Set<java.lang.Object> objSet47 = properties42.keySet();
        java.lang.Object obj48 = properties34.putIfAbsent((java.lang.Object) "hi!", (java.lang.Object) objSet47);
        java.util.Set<java.lang.Object> objSet49 = properties34.keySet();
        java.lang.Object obj51 = properties24.putIfAbsent((java.lang.Object) properties34, (java.lang.Object) (short) 10);
        java.util.Enumeration<?> wildcardEnumeration52 = properties34.propertyNames();
        properties0.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties34);
        java.util.Collection<java.lang.Object> objCollection54 = properties0.values();
        java.util.Set<java.lang.Object> objSet55 = properties0.keySet();
        java.util.Enumeration<java.lang.Object> objEnumeration56 = properties0.elements();
        int int57 = properties0.size();
        java.lang.String str59 = properties0.getProperty("");
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(objEnumeration3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(objSet5);
        org.junit.Assert.assertNotNull(properties13);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 50 + "'", int14 == 50);
        org.junit.Assert.assertNull(obj17);
        org.junit.Assert.assertNotNull(objEnumeration18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(objSet20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNull(obj23);
        org.junit.Assert.assertNull(obj26);
        org.junit.Assert.assertNotNull(strSet27);
        org.junit.Assert.assertNull(obj30);
        org.junit.Assert.assertNotNull(strSet31);
        org.junit.Assert.assertNull(obj33);
        org.junit.Assert.assertNull(obj37);
        org.junit.Assert.assertNotNull(strSet38);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(objCollection40);
        org.junit.Assert.assertNull(obj44);
        org.junit.Assert.assertNotNull(objEnumeration45);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertNotNull(objSet47);
        org.junit.Assert.assertNull(obj48);
        org.junit.Assert.assertNotNull(objSet49);
        org.junit.Assert.assertNull(obj51);
        org.junit.Assert.assertNotNull(wildcardEnumeration52);
        org.junit.Assert.assertNotNull(objCollection54);
        org.junit.Assert.assertNotNull(objSet55);
        org.junit.Assert.assertNotNull(objEnumeration56);
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + 2 + "'", int57 == 2);
        org.junit.Assert.assertNull(str59);
    }

    @Test
    public void test7875() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7875");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setSerialJtaTransactions(false);
        boolean boolean3 = atomikosProperties0.isSerialJtaTransactions();
        java.lang.String str4 = atomikosProperties0.getService();
        boolean boolean5 = atomikosProperties0.isEnableLogging();
        atomikosProperties0.setCheckpointInterval((long) (byte) 100);
        java.lang.String str8 = atomikosProperties0.getLogBaseName();
        atomikosProperties0.setTransactionManagerUniqueName("tmlog");
        atomikosProperties0.setSerialJtaTransactions(false);
        boolean boolean13 = atomikosProperties0.isForceShutdownOnVmExit();
        atomikosProperties0.setMaxActives(100);
        atomikosProperties0.setEnableLogging(true);
        java.util.Properties properties18 = atomikosProperties0.asProperties();
        atomikosProperties0.setLogBaseName("{[]=0.0}");
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "tmlog" + "'", str8, "tmlog");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(properties18);
    }

    @Test
    public void test7876() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7876");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        java.util.Properties properties3 = new java.util.Properties();
        java.lang.Object obj5 = properties3.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration6 = properties3.elements();
        boolean boolean7 = properties3.isEmpty();
        java.util.Set<java.lang.Object> objSet8 = properties3.keySet();
        java.util.Enumeration<java.lang.Object> objEnumeration9 = properties3.keys();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet10 = properties3.entrySet();
        java.util.Properties properties12 = new java.util.Properties();
        java.lang.Object obj14 = properties12.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration15 = properties12.elements();
        boolean boolean16 = properties12.isEmpty();
        java.util.Set<java.lang.Object> objSet17 = properties12.keySet();
        boolean boolean18 = properties12.isEmpty();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties19 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties19.setSerialJtaTransactions(false);
        atomikosProperties19.setThreadedTwoPhaseCommit(true);
        atomikosProperties19.setMaxTimeout((long) '#');
        boolean boolean26 = atomikosProperties19.isEnableLogging();
        atomikosProperties19.setCheckpointInterval((long) (byte) -1);
        java.util.Properties properties29 = new java.util.Properties();
        java.util.Properties properties30 = new java.util.Properties();
        java.lang.Object obj32 = properties30.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet33 = properties30.stringPropertyNames();
        boolean boolean34 = properties29.containsValue((java.lang.Object) properties30);
        java.util.Collection<java.lang.Object> objCollection35 = properties29.values();
        java.lang.Object obj36 = properties12.replace((java.lang.Object) atomikosProperties19, (java.lang.Object) objCollection35);
        boolean boolean38 = properties3.replace((java.lang.Object) 100.0d, (java.lang.Object) objCollection35, (java.lang.Object) 10.0d);
        java.util.Properties properties39 = new java.util.Properties();
        java.lang.Object obj41 = properties39.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration42 = properties39.elements();
        int int43 = properties39.size();
        java.util.Properties properties44 = new java.util.Properties(properties39);
        java.util.Set<java.lang.String> strSet45 = properties39.stringPropertyNames();
        java.util.Properties properties46 = new java.util.Properties();
        java.lang.Object obj48 = properties46.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration49 = properties46.elements();
        boolean boolean50 = properties46.isEmpty();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet51 = properties46.entrySet();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties53 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties53.setSerialJtaTransactions(false);
        atomikosProperties53.setThreadedTwoPhaseCommit(true);
        atomikosProperties53.setMaxTimeout((long) '#');
        boolean boolean60 = atomikosProperties53.isForceShutdownOnVmExit();
        java.lang.Object obj61 = properties46.put((java.lang.Object) (short) 1, (java.lang.Object) atomikosProperties53);
        boolean boolean62 = atomikosProperties53.isSerialJtaTransactions();
        java.lang.Object obj63 = properties3.replace((java.lang.Object) properties39, (java.lang.Object) boolean62);
        java.lang.Object obj64 = properties0.remove((java.lang.Object) properties39);
        java.lang.String str66 = properties0.getProperty("{=hi!}");
        java.util.Properties properties67 = new java.util.Properties(properties0);
        java.lang.String str68 = properties67.toString();
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNull(obj5);
        org.junit.Assert.assertNotNull(objEnumeration6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(objSet8);
        org.junit.Assert.assertNotNull(objEnumeration9);
        org.junit.Assert.assertNotNull(objEntrySet10);
        org.junit.Assert.assertNull(obj14);
        org.junit.Assert.assertNotNull(objEnumeration15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(objSet17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertNull(obj32);
        org.junit.Assert.assertNotNull(strSet33);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(objCollection35);
        org.junit.Assert.assertNull(obj36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNull(obj41);
        org.junit.Assert.assertNotNull(objEnumeration42);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 0 + "'", int43 == 0);
        org.junit.Assert.assertNotNull(strSet45);
        org.junit.Assert.assertNull(obj48);
        org.junit.Assert.assertNotNull(objEnumeration49);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertNotNull(objEntrySet51);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertNull(obj61);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertNull(obj63);
        org.junit.Assert.assertNull(obj64);
        org.junit.Assert.assertNull(str66);
        org.junit.Assert.assertEquals("'" + str68 + "' != '" + "{}" + "'", str68, "{}");
    }

    @Test
    public void test7877() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7877");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setSerialJtaTransactions(false);
        atomikosProperties0.setThreadedTwoPhaseCommit(true);
        atomikosProperties0.setEnableLogging(false);
        boolean boolean7 = atomikosProperties0.isSerialJtaTransactions();
        int int8 = atomikosProperties0.getMaxActives();
        boolean boolean9 = atomikosProperties0.isEnableLogging();
        long long10 = atomikosProperties0.getCheckpointInterval();
        java.util.Properties properties11 = atomikosProperties0.asProperties();
        java.util.Enumeration<java.lang.Object> objEnumeration12 = properties11.elements();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet13 = properties11.entrySet();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties14 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties14.setSerialJtaTransactions(false);
        atomikosProperties14.setThreadedTwoPhaseCommit(true);
        atomikosProperties14.setSerialJtaTransactions(false);
        atomikosProperties14.setService("{=hi!}");
        atomikosProperties14.setLogBaseDir("");
        atomikosProperties14.setEnableLogging(true);
        atomikosProperties14.setForceShutdownOnVmExit(true);
        boolean boolean29 = atomikosProperties14.isForceShutdownOnVmExit();
        boolean boolean30 = properties11.containsKey((java.lang.Object) boolean29);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 50 + "'", int8 == 50);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + long10 + "' != '" + 500L + "'", long10 == 500L);
        org.junit.Assert.assertNotNull(properties11);
        org.junit.Assert.assertNotNull(objEnumeration12);
        org.junit.Assert.assertNotNull(objEntrySet13);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
    }

    @Test
    public void test7878() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7878");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setSerialJtaTransactions(false);
        atomikosProperties0.setThreadedTwoPhaseCommit(true);
        atomikosProperties0.setThreadedTwoPhaseCommit(true);
        java.util.Properties properties7 = atomikosProperties0.asProperties();
        java.util.Set<java.lang.String> strSet8 = properties7.stringPropertyNames();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties9 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties9.setSerialJtaTransactions(false);
        atomikosProperties9.setThreadedTwoPhaseCommit(true);
        atomikosProperties9.setMaxTimeout((long) '#');
        boolean boolean16 = atomikosProperties9.isEnableLogging();
        int int17 = atomikosProperties9.getMaxActives();
        java.util.Properties properties18 = new java.util.Properties();
        java.lang.Object obj20 = properties18.remove((java.lang.Object) 0.0d);
        boolean boolean21 = properties18.isEmpty();
        java.lang.Object obj24 = properties18.setProperty("", "hi!");
        java.util.Set<java.lang.String> strSet25 = properties18.stringPropertyNames();
        java.lang.Object obj26 = properties7.putIfAbsent((java.lang.Object) atomikosProperties9, (java.lang.Object) strSet25);
        boolean boolean28 = properties7.containsKey((java.lang.Object) 35);
        java.lang.Object obj29 = properties7.clone();
        java.lang.Object obj32 = properties7.setProperty("{}", "{{}={}}");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties33 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties33.setSerialJtaTransactions(false);
        boolean boolean36 = atomikosProperties33.isSerialJtaTransactions();
        atomikosProperties33.setTransactionManagerUniqueName("tmlog");
        java.util.Properties properties39 = atomikosProperties33.asProperties();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties40 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties40.setSerialJtaTransactions(false);
        boolean boolean43 = atomikosProperties40.isSerialJtaTransactions();
        atomikosProperties40.setTransactionManagerUniqueName("hi!");
        boolean boolean46 = atomikosProperties40.isEnableLogging();
        java.lang.String str47 = atomikosProperties40.getTransactionManagerUniqueName();
        atomikosProperties40.setCheckpointInterval(1L);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties50 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties50.setSerialJtaTransactions(false);
        atomikosProperties50.setThreadedTwoPhaseCommit(true);
        atomikosProperties50.setThreadedTwoPhaseCommit(true);
        java.util.Properties properties57 = atomikosProperties50.asProperties();
        int int58 = atomikosProperties50.getMaxActives();
        atomikosProperties50.setService("hi!");
        long long61 = atomikosProperties50.getMaxTimeout();
        atomikosProperties50.setTransactionManagerUniqueName("hi!");
        java.util.Properties properties64 = atomikosProperties50.asProperties();
        java.lang.Object obj65 = properties39.getOrDefault((java.lang.Object) atomikosProperties40, (java.lang.Object) properties64);
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet66 = properties39.entrySet();
        java.util.Enumeration<java.lang.Object> objEnumeration67 = properties39.keys();
        java.lang.Object obj68 = properties7.get((java.lang.Object) objEnumeration67);
        java.io.OutputStream outputStream69 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties7.store(outputStream69, "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=false, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.max_actives=2, com.atomikos.icatch.log_base_name=tmlog}");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(properties7);
        org.junit.Assert.assertNotNull(strSet8);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 50 + "'", int17 == 50);
        org.junit.Assert.assertNull(obj20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNull(obj24);
        org.junit.Assert.assertNotNull(strSet25);
        org.junit.Assert.assertNull(obj26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(obj29);
        org.junit.Assert.assertNull(obj32);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(properties39);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "hi!" + "'", str47, "hi!");
        org.junit.Assert.assertNotNull(properties57);
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + 50 + "'", int58 == 50);
        org.junit.Assert.assertTrue("'" + long61 + "' != '" + 300000L + "'", long61 == 300000L);
        org.junit.Assert.assertNotNull(properties64);
        org.junit.Assert.assertNotNull(obj65);
// flaky:         org.junit.Assert.assertEquals(obj65.toString(), "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=false, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.service=hi!, com.atomikos.icatch.threaded_2pc=true, com.atomikos.icatch.tm_unique_name=hi!, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
// flaky:         org.junit.Assert.assertEquals(java.lang.String.valueOf(obj65), "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=false, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.service=hi!, com.atomikos.icatch.threaded_2pc=true, com.atomikos.icatch.tm_unique_name=hi!, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
// flaky:         org.junit.Assert.assertEquals(java.util.Objects.toString(obj65), "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=false, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.service=hi!, com.atomikos.icatch.threaded_2pc=true, com.atomikos.icatch.tm_unique_name=hi!, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
        org.junit.Assert.assertNotNull(objEntrySet66);
        org.junit.Assert.assertNotNull(objEnumeration67);
        org.junit.Assert.assertNull(obj68);
    }

    @Test
    public void test7879() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7879");
        java.util.Properties properties0 = new java.util.Properties();
        boolean boolean2 = properties0.contains((java.lang.Object) 100.0d);
        java.util.Properties properties3 = new java.util.Properties();
        java.lang.Object obj5 = properties3.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration6 = properties3.elements();
        boolean boolean7 = properties3.isEmpty();
        java.util.Set<java.lang.Object> objSet8 = properties3.keySet();
        boolean boolean9 = properties3.isEmpty();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet10 = properties3.entrySet();
        java.util.Properties properties11 = new java.util.Properties();
        java.lang.Object obj13 = properties11.remove((java.lang.Object) 0.0d);
        boolean boolean14 = properties11.isEmpty();
        java.lang.Object obj17 = properties11.setProperty("", "hi!");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties18 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties18.setSerialJtaTransactions(false);
        boolean boolean21 = properties3.remove((java.lang.Object) properties11, (java.lang.Object) atomikosProperties18);
        boolean boolean22 = properties0.equals((java.lang.Object) properties3);
        boolean boolean23 = properties0.isEmpty();
        java.lang.Class<?> wildcardClass24 = properties0.getClass();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNull(obj5);
        org.junit.Assert.assertNotNull(objEnumeration6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(objSet8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertNotNull(objEntrySet10);
        org.junit.Assert.assertNull(obj13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNull(obj17);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNotNull(wildcardClass24);
    }

    @Test
    public void test7880() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7880");
        java.util.Properties properties0 = new java.util.Properties();
        java.util.Collection<java.lang.Object> objCollection1 = properties0.values();
        java.util.Enumeration<java.lang.Object> objEnumeration2 = properties0.keys();
        java.util.Properties properties3 = new java.util.Properties();
        java.lang.Object obj5 = properties3.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration6 = properties3.elements();
        boolean boolean7 = properties3.isEmpty();
        java.util.Enumeration<java.lang.Object> objEnumeration8 = properties3.elements();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet9 = properties3.entrySet();
        java.util.Set<java.lang.String> strSet10 = properties3.stringPropertyNames();
        java.lang.Object obj13 = properties3.setProperty("{}", "tmlog");
        java.util.Properties properties14 = new java.util.Properties();
        java.lang.Object obj16 = properties14.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration17 = properties14.elements();
        int int18 = properties14.size();
        java.util.Properties properties19 = new java.util.Properties();
        java.lang.Object obj21 = properties19.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration22 = properties19.elements();
        java.util.Enumeration<java.lang.Object> objEnumeration23 = properties19.keys();
        java.lang.Object obj24 = properties3.getOrDefault((java.lang.Object) properties14, (java.lang.Object) objEnumeration23);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties25 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties25.setSerialJtaTransactions(false);
        boolean boolean28 = atomikosProperties25.isSerialJtaTransactions();
        atomikosProperties25.setTransactionManagerUniqueName("hi!");
        java.lang.String str31 = atomikosProperties25.getLogBaseName();
        java.lang.String str32 = atomikosProperties25.getLogBaseName();
        boolean boolean33 = atomikosProperties25.isSerialJtaTransactions();
        long long34 = atomikosProperties25.getMaxTimeout();
        java.lang.String str35 = atomikosProperties25.getLogBaseName();
        int int36 = atomikosProperties25.getMaxActives();
        atomikosProperties25.setForceShutdownOnVmExit(false);
        boolean boolean39 = properties3.contains((java.lang.Object) false);
        int int40 = properties3.size();
        java.lang.Object obj41 = properties3.clone();
        java.lang.Object obj42 = properties0.remove(obj41);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties43 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties43.setSerialJtaTransactions(false);
        boolean boolean46 = atomikosProperties43.isSerialJtaTransactions();
        atomikosProperties43.setCheckpointInterval((long) 10);
        atomikosProperties43.setForceShutdownOnVmExit(true);
        java.lang.String str51 = atomikosProperties43.getTransactionManagerUniqueName();
        atomikosProperties43.setMaxActives(0);
        java.lang.String str54 = atomikosProperties43.getLogBaseName();
        boolean boolean55 = properties0.containsValue((java.lang.Object) str54);
        org.junit.Assert.assertNotNull(objCollection1);
        org.junit.Assert.assertNotNull(objEnumeration2);
        org.junit.Assert.assertNull(obj5);
        org.junit.Assert.assertNotNull(objEnumeration6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(objEnumeration8);
        org.junit.Assert.assertNotNull(objEntrySet9);
        org.junit.Assert.assertNotNull(strSet10);
        org.junit.Assert.assertNull(obj13);
        org.junit.Assert.assertNull(obj16);
        org.junit.Assert.assertNotNull(objEnumeration17);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 0 + "'", int18 == 0);
        org.junit.Assert.assertNull(obj21);
        org.junit.Assert.assertNotNull(objEnumeration22);
        org.junit.Assert.assertNotNull(objEnumeration23);
        org.junit.Assert.assertNotNull(obj24);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "tmlog" + "'", str31, "tmlog");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "tmlog" + "'", str32, "tmlog");
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertTrue("'" + long34 + "' != '" + 300000L + "'", long34 == 300000L);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "tmlog" + "'", str35, "tmlog");
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 50 + "'", int36 == 50);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 1 + "'", int40 == 1);
        org.junit.Assert.assertNotNull(obj41);
        org.junit.Assert.assertEquals(obj41.toString(), "{{}=tmlog}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj41), "{{}=tmlog}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj41), "{{}=tmlog}");
        org.junit.Assert.assertNull(obj42);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNull(str51);
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "tmlog" + "'", str54, "tmlog");
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
    }

    @Test
    public void test7881() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7881");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setSerialJtaTransactions(false);
        atomikosProperties0.setThreadedTwoPhaseCommit(true);
        atomikosProperties0.setMaxTimeout((long) '#');
        boolean boolean7 = atomikosProperties0.isEnableLogging();
        atomikosProperties0.setForceShutdownOnVmExit(true);
        atomikosProperties0.setForceShutdownOnVmExit(true);
        atomikosProperties0.setEnableLogging(false);
        boolean boolean14 = atomikosProperties0.isForceShutdownOnVmExit();
        atomikosProperties0.setService("{hi!=[], {=hi!}={com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=false, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.tm_unique_name=tmlog, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}}");
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
    }

    @Test
    public void test7882() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7882");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet3 = properties0.stringPropertyNames();
        java.util.Properties properties4 = new java.util.Properties();
        java.lang.Object obj6 = properties4.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet7 = properties4.stringPropertyNames();
        java.lang.Object obj9 = properties0.put((java.lang.Object) strSet7, (java.lang.Object) 0.0d);
        java.util.Properties properties10 = new java.util.Properties();
        java.util.Properties properties11 = new java.util.Properties();
        java.lang.Object obj13 = properties11.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet14 = properties11.stringPropertyNames();
        boolean boolean15 = properties10.containsValue((java.lang.Object) properties11);
        java.util.Collection<java.lang.Object> objCollection16 = properties10.values();
        java.util.Properties properties18 = new java.util.Properties();
        java.lang.Object obj20 = properties18.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration21 = properties18.elements();
        boolean boolean22 = properties18.isEmpty();
        java.util.Set<java.lang.Object> objSet23 = properties18.keySet();
        java.lang.Object obj24 = properties10.putIfAbsent((java.lang.Object) "hi!", (java.lang.Object) objSet23);
        java.util.Set<java.lang.Object> objSet25 = properties10.keySet();
        java.lang.Object obj27 = properties0.putIfAbsent((java.lang.Object) properties10, (java.lang.Object) (short) 10);
        java.util.Collection<java.lang.Object> objCollection28 = properties0.values();
        int int29 = properties0.size();
        java.util.Properties properties30 = new java.util.Properties();
        boolean boolean32 = properties30.contains((java.lang.Object) 100.0d);
        java.util.Properties properties33 = new java.util.Properties();
        java.lang.Object obj35 = properties33.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration36 = properties33.elements();
        boolean boolean37 = properties33.isEmpty();
        java.util.Set<java.lang.Object> objSet38 = properties33.keySet();
        boolean boolean39 = properties33.isEmpty();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet40 = properties33.entrySet();
        java.util.Properties properties41 = new java.util.Properties();
        java.lang.Object obj43 = properties41.remove((java.lang.Object) 0.0d);
        boolean boolean44 = properties41.isEmpty();
        java.lang.Object obj47 = properties41.setProperty("", "hi!");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties48 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties48.setSerialJtaTransactions(false);
        boolean boolean51 = properties33.remove((java.lang.Object) properties41, (java.lang.Object) atomikosProperties48);
        boolean boolean52 = properties30.equals((java.lang.Object) properties33);
        java.util.Enumeration<java.lang.Object> objEnumeration53 = properties30.elements();
        java.util.Collection<java.lang.Object> objCollection54 = properties30.values();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties55 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties55.setSerialJtaTransactions(false);
        atomikosProperties55.setThreadedTwoPhaseCommit(true);
        atomikosProperties55.setMaxTimeout((long) '#');
        boolean boolean62 = atomikosProperties55.isEnableLogging();
        atomikosProperties55.setCheckpointInterval((long) (byte) -1);
        atomikosProperties55.setEnableLogging(true);
        java.lang.String str67 = atomikosProperties55.getTransactionManagerUniqueName();
        atomikosProperties55.setCheckpointInterval((long) (byte) -1);
        java.lang.String str70 = atomikosProperties55.getService();
        java.lang.Object obj71 = properties0.replace((java.lang.Object) properties30, (java.lang.Object) atomikosProperties55);
        java.util.Set<java.lang.String> strSet72 = properties30.stringPropertyNames();
        java.lang.String str73 = properties30.toString();
        java.util.Set<java.lang.String> strSet74 = properties30.stringPropertyNames();
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(strSet3);
        org.junit.Assert.assertNull(obj6);
        org.junit.Assert.assertNotNull(strSet7);
        org.junit.Assert.assertNull(obj9);
        org.junit.Assert.assertNull(obj13);
        org.junit.Assert.assertNotNull(strSet14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(objCollection16);
        org.junit.Assert.assertNull(obj20);
        org.junit.Assert.assertNotNull(objEnumeration21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNotNull(objSet23);
        org.junit.Assert.assertNull(obj24);
        org.junit.Assert.assertNotNull(objSet25);
        org.junit.Assert.assertNull(obj27);
        org.junit.Assert.assertNotNull(objCollection28);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 2 + "'", int29 == 2);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNull(obj35);
        org.junit.Assert.assertNotNull(objEnumeration36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertNotNull(objSet38);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNotNull(objEntrySet40);
        org.junit.Assert.assertNull(obj43);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertNull(obj47);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertNotNull(objEnumeration53);
        org.junit.Assert.assertNotNull(objCollection54);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + true + "'", boolean62 == true);
        org.junit.Assert.assertNull(str67);
        org.junit.Assert.assertNull(str70);
        org.junit.Assert.assertNull(obj71);
        org.junit.Assert.assertNotNull(strSet72);
        org.junit.Assert.assertEquals("'" + str73 + "' != '" + "{}" + "'", str73, "{}");
        org.junit.Assert.assertNotNull(strSet74);
    }

    @Test
    public void test7883() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7883");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        boolean boolean3 = properties0.isEmpty();
        java.util.Enumeration<java.lang.Object> objEnumeration4 = properties0.elements();
        java.lang.Object obj7 = properties0.setProperty("hi!", "{=hi!}");
        java.lang.String str9 = properties0.getProperty("{{}={}}");
        int int10 = properties0.size();
        java.util.Properties properties11 = new java.util.Properties();
        java.lang.Object obj13 = properties11.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration14 = properties11.elements();
        int int15 = properties11.size();
        java.util.Properties properties16 = new java.util.Properties(properties11);
        java.util.Enumeration<java.lang.Object> objEnumeration17 = properties16.keys();
        properties16.clear();
        java.lang.String str20 = properties16.getProperty("{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=100, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=35, com.atomikos.icatch.threaded_2pc=true, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
        java.lang.Object obj21 = properties0.remove((java.lang.Object) "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=100, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=35, com.atomikos.icatch.threaded_2pc=true, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(objEnumeration4);
        org.junit.Assert.assertNull(obj7);
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 1 + "'", int10 == 1);
        org.junit.Assert.assertNull(obj13);
        org.junit.Assert.assertNotNull(objEnumeration14);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0);
        org.junit.Assert.assertNotNull(objEnumeration17);
        org.junit.Assert.assertNull(str20);
        org.junit.Assert.assertNull(obj21);
    }

    @Test
    public void test7884() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7884");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setSerialJtaTransactions(false);
        boolean boolean3 = atomikosProperties0.isSerialJtaTransactions();
        java.lang.String str4 = atomikosProperties0.getService();
        boolean boolean5 = atomikosProperties0.isEnableLogging();
        java.util.Properties properties6 = atomikosProperties0.asProperties();
        atomikosProperties0.setForceShutdownOnVmExit(true);
        atomikosProperties0.setMaxActives((int) (short) -1);
        atomikosProperties0.setMaxTimeout((long) ' ');
        atomikosProperties0.setEnableLogging(false);
        atomikosProperties0.setService("{{}={}}");
        java.lang.String str17 = atomikosProperties0.getTransactionManagerUniqueName();
        java.util.Properties properties18 = atomikosProperties0.asProperties();
        java.lang.String str19 = properties18.toString();
        java.io.OutputStream outputStream20 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties18.store(outputStream20, "{{hi!=[]}={hi!=[], {}={}}}");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNotNull(properties6);
        org.junit.Assert.assertNull(str17);
        org.junit.Assert.assertNotNull(properties18);
// flaky:         org.junit.Assert.assertEquals("'" + str19 + "' != '" + "{com.atomikos.icatch.enable_logging=false, com.atomikos.icatch.force_shutdown_on_vm_exit=true, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=false, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=32, com.atomikos.icatch.service={{}={}}, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.max_actives=-1, com.atomikos.icatch.log_base_name=tmlog}" + "'", str19, "{com.atomikos.icatch.enable_logging=false, com.atomikos.icatch.force_shutdown_on_vm_exit=true, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=false, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=32, com.atomikos.icatch.service={{}={}}, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.max_actives=-1, com.atomikos.icatch.log_base_name=tmlog}");
    }

    @Test
    public void test7885() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7885");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration3 = properties0.elements();
        boolean boolean4 = properties0.isEmpty();
        java.util.Set<java.lang.Object> objSet5 = properties0.keySet();
        java.util.Properties properties6 = new java.util.Properties();
        java.lang.Object obj8 = properties6.remove((java.lang.Object) 0.0d);
        java.util.Properties properties9 = new java.util.Properties();
        java.util.Collection<java.lang.Object> objCollection10 = properties9.values();
        java.util.Enumeration<java.lang.Object> objEnumeration11 = properties9.keys();
        java.util.Properties properties12 = new java.util.Properties();
        java.lang.Object obj14 = properties12.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration15 = properties12.elements();
        boolean boolean16 = properties12.isEmpty();
        java.util.Set<java.lang.Object> objSet17 = properties12.keySet();
        java.util.Enumeration<java.lang.Object> objEnumeration18 = properties12.keys();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet19 = properties12.entrySet();
        java.lang.Object obj20 = properties6.put((java.lang.Object) properties9, (java.lang.Object) properties12);
        java.lang.String str22 = properties9.getProperty("{=hi!}");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties23 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties23.setSerialJtaTransactions(false);
        atomikosProperties23.setThreadedTwoPhaseCommit(true);
        atomikosProperties23.setThreadedTwoPhaseCommit(true);
        long long30 = atomikosProperties23.getMaxTimeout();
        boolean boolean31 = properties9.containsValue((java.lang.Object) atomikosProperties23);
        java.util.Enumeration<java.lang.Object> objEnumeration32 = properties9.elements();
        java.util.Set<java.lang.String> strSet33 = properties9.stringPropertyNames();
        boolean boolean34 = properties0.contains((java.lang.Object) properties9);
        java.util.Properties properties35 = new java.util.Properties();
        java.lang.Object obj37 = properties35.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration38 = properties35.elements();
        int int39 = properties35.size();
        java.util.Properties properties40 = new java.util.Properties(properties35);
        java.lang.Object obj41 = properties9.remove((java.lang.Object) properties40);
        java.util.Properties properties42 = new java.util.Properties();
        java.lang.Object obj44 = properties42.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration45 = properties42.elements();
        boolean boolean46 = properties42.isEmpty();
        java.util.Set<java.lang.Object> objSet47 = properties42.keySet();
        java.util.Enumeration<java.lang.Object> objEnumeration48 = properties42.keys();
        java.lang.String str50 = properties42.getProperty("hi!");
        java.lang.String str52 = properties42.getProperty("");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties53 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties53.setSerialJtaTransactions(false);
        atomikosProperties53.setThreadedTwoPhaseCommit(true);
        atomikosProperties53.setEnableLogging(false);
        boolean boolean60 = properties42.containsKey((java.lang.Object) atomikosProperties53);
        atomikosProperties53.setService("tmlog");
        atomikosProperties53.setSerialJtaTransactions(true);
        atomikosProperties53.setTransactionManagerUniqueName("{hi!=[]}");
        atomikosProperties53.setService("{hi!=[]}");
        boolean boolean69 = properties9.containsKey((java.lang.Object) "{hi!=[]}");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties70 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties70.setSerialJtaTransactions(false);
        boolean boolean73 = atomikosProperties70.isSerialJtaTransactions();
        atomikosProperties70.setTransactionManagerUniqueName("tmlog");
        atomikosProperties70.setDefaultJtaTimeout((long) '4');
        atomikosProperties70.setForceShutdownOnVmExit(true);
        java.lang.String str80 = atomikosProperties70.getLogBaseName();
        atomikosProperties70.setLogBaseDir("");
        java.util.Properties properties83 = atomikosProperties70.asProperties();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet84 = properties83.entrySet();
        java.lang.Object obj85 = properties9.remove((java.lang.Object) properties83);
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(objEnumeration3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(objSet5);
        org.junit.Assert.assertNull(obj8);
        org.junit.Assert.assertNotNull(objCollection10);
        org.junit.Assert.assertNotNull(objEnumeration11);
        org.junit.Assert.assertNull(obj14);
        org.junit.Assert.assertNotNull(objEnumeration15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(objSet17);
        org.junit.Assert.assertNotNull(objEnumeration18);
        org.junit.Assert.assertNotNull(objEntrySet19);
        org.junit.Assert.assertNull(obj20);
        org.junit.Assert.assertNull(str22);
        org.junit.Assert.assertTrue("'" + long30 + "' != '" + 300000L + "'", long30 == 300000L);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(objEnumeration32);
        org.junit.Assert.assertNotNull(strSet33);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNull(obj37);
        org.junit.Assert.assertNotNull(objEnumeration38);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 0 + "'", int39 == 0);
        org.junit.Assert.assertNull(obj41);
        org.junit.Assert.assertNull(obj44);
        org.junit.Assert.assertNotNull(objEnumeration45);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertNotNull(objSet47);
        org.junit.Assert.assertNotNull(objEnumeration48);
        org.junit.Assert.assertNull(str50);
        org.junit.Assert.assertNull(str52);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertEquals("'" + str80 + "' != '" + "tmlog" + "'", str80, "tmlog");
        org.junit.Assert.assertNotNull(properties83);
        org.junit.Assert.assertNotNull(objEntrySet84);
        org.junit.Assert.assertNull(obj85);
    }

    @Test
    public void test7886() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7886");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration3 = properties0.elements();
        boolean boolean4 = properties0.isEmpty();
        java.util.Set<java.lang.Object> objSet5 = properties0.keySet();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties6 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties6.setSerialJtaTransactions(false);
        atomikosProperties6.setThreadedTwoPhaseCommit(true);
        atomikosProperties6.setThreadedTwoPhaseCommit(true);
        java.util.Properties properties13 = atomikosProperties6.asProperties();
        int int14 = atomikosProperties6.getMaxActives();
        java.util.Properties properties15 = new java.util.Properties();
        java.lang.Object obj17 = properties15.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration18 = properties15.elements();
        boolean boolean19 = properties15.isEmpty();
        java.util.Set<java.lang.Object> objSet20 = properties15.keySet();
        boolean boolean22 = properties15.containsKey((java.lang.Object) (-1.0f));
        java.lang.Object obj23 = properties0.put((java.lang.Object) atomikosProperties6, (java.lang.Object) properties15);
        java.lang.String str24 = properties0.toString();
        java.util.Enumeration<java.lang.Object> objEnumeration25 = properties0.keys();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties26 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties26.setSerialJtaTransactions(false);
        atomikosProperties26.setThreadedTwoPhaseCommit(true);
        atomikosProperties26.setSerialJtaTransactions(false);
        java.lang.String str33 = atomikosProperties26.getService();
        atomikosProperties26.setMaxTimeout(1L);
        java.lang.String str36 = atomikosProperties26.getTransactionManagerUniqueName();
        atomikosProperties26.setTransactionManagerUniqueName("{=hi!}");
        java.util.Properties properties39 = new java.util.Properties();
        java.util.Properties properties40 = new java.util.Properties();
        java.lang.Object obj42 = properties40.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet43 = properties40.stringPropertyNames();
        boolean boolean44 = properties39.containsValue((java.lang.Object) properties40);
        java.util.Collection<java.lang.Object> objCollection45 = properties39.values();
        java.util.Enumeration<?> wildcardEnumeration46 = properties39.propertyNames();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet47 = properties39.entrySet();
        java.lang.Object obj48 = properties0.getOrDefault((java.lang.Object) atomikosProperties26, (java.lang.Object) objEntrySet47);
        java.util.Properties properties49 = new java.util.Properties();
        java.util.Properties properties50 = new java.util.Properties();
        java.lang.Object obj52 = properties50.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet53 = properties50.stringPropertyNames();
        boolean boolean54 = properties49.containsValue((java.lang.Object) properties50);
        java.util.Collection<java.lang.Object> objCollection55 = properties49.values();
        java.util.Properties properties57 = new java.util.Properties();
        java.lang.Object obj59 = properties57.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration60 = properties57.elements();
        boolean boolean61 = properties57.isEmpty();
        java.util.Set<java.lang.Object> objSet62 = properties57.keySet();
        java.lang.Object obj63 = properties49.putIfAbsent((java.lang.Object) "hi!", (java.lang.Object) objSet62);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties64 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties64.setSerialJtaTransactions(false);
        boolean boolean67 = atomikosProperties64.isSerialJtaTransactions();
        java.util.Properties properties68 = atomikosProperties64.asProperties();
        java.lang.Object obj71 = properties68.setProperty("hi!", "");
        java.util.Properties properties72 = new java.util.Properties(properties68);
        java.util.Properties properties73 = new java.util.Properties();
        java.lang.Object obj75 = properties73.remove((java.lang.Object) 0.0d);
        java.util.Properties properties76 = new java.util.Properties();
        java.util.Collection<java.lang.Object> objCollection77 = properties76.values();
        java.util.Enumeration<java.lang.Object> objEnumeration78 = properties76.keys();
        java.util.Properties properties79 = new java.util.Properties();
        java.lang.Object obj81 = properties79.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration82 = properties79.elements();
        boolean boolean83 = properties79.isEmpty();
        java.util.Set<java.lang.Object> objSet84 = properties79.keySet();
        java.util.Enumeration<java.lang.Object> objEnumeration85 = properties79.keys();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet86 = properties79.entrySet();
        java.lang.Object obj87 = properties73.put((java.lang.Object) properties76, (java.lang.Object) properties79);
        java.lang.Object obj88 = properties49.putIfAbsent((java.lang.Object) properties72, (java.lang.Object) properties79);
        properties79.clear();
        boolean boolean90 = properties79.isEmpty();
        java.util.Set<java.lang.Object> objSet91 = properties79.keySet();
        java.lang.Object obj92 = properties79.clone();
        properties0.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties79);
        java.io.OutputStream outputStream94 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties79.store(outputStream94, "{com.atomikos.icatch.enable_logging=false, com.atomikos.icatch.force_shutdown_on_vm_exit=true, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=false, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=32, com.atomikos.icatch.service={{}={}}, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.max_actives=-1, com.atomikos.icatch.log_base_name=tmlog}");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(objEnumeration3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(objSet5);
        org.junit.Assert.assertNotNull(properties13);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 50 + "'", int14 == 50);
        org.junit.Assert.assertNull(obj17);
        org.junit.Assert.assertNotNull(objEnumeration18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(objSet20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNull(obj23);
        org.junit.Assert.assertNotNull(objEnumeration25);
        org.junit.Assert.assertNull(str33);
        org.junit.Assert.assertNull(str36);
        org.junit.Assert.assertNull(obj42);
        org.junit.Assert.assertNotNull(strSet43);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(objCollection45);
        org.junit.Assert.assertNotNull(wildcardEnumeration46);
        org.junit.Assert.assertNotNull(objEntrySet47);
        org.junit.Assert.assertNotNull(obj48);
// flaky:         org.junit.Assert.assertEquals(obj48.toString(), "[]");
// flaky:         org.junit.Assert.assertEquals(java.lang.String.valueOf(obj48), "[]");
// flaky:         org.junit.Assert.assertEquals(java.util.Objects.toString(obj48), "[]");
        org.junit.Assert.assertNull(obj52);
        org.junit.Assert.assertNotNull(strSet53);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertNotNull(objCollection55);
        org.junit.Assert.assertNull(obj59);
        org.junit.Assert.assertNotNull(objEnumeration60);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertNotNull(objSet62);
        org.junit.Assert.assertNull(obj63);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertNotNull(properties68);
        org.junit.Assert.assertNull(obj71);
        org.junit.Assert.assertNull(obj75);
        org.junit.Assert.assertNotNull(objCollection77);
        org.junit.Assert.assertNotNull(objEnumeration78);
        org.junit.Assert.assertNull(obj81);
        org.junit.Assert.assertNotNull(objEnumeration82);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + true + "'", boolean83 == true);
        org.junit.Assert.assertNotNull(objSet84);
        org.junit.Assert.assertNotNull(objEnumeration85);
        org.junit.Assert.assertNotNull(objEntrySet86);
        org.junit.Assert.assertNull(obj87);
        org.junit.Assert.assertNull(obj88);
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + true + "'", boolean90 == true);
        org.junit.Assert.assertNotNull(objSet91);
        org.junit.Assert.assertNotNull(obj92);
        org.junit.Assert.assertEquals(obj92.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj92), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj92), "{}");
    }

    @Test
    public void test7887() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7887");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration3 = properties0.elements();
        int int4 = properties0.size();
        java.util.Properties properties5 = new java.util.Properties(properties0);
        boolean boolean6 = properties5.isEmpty();
        java.util.Properties properties7 = new java.util.Properties();
        java.lang.Object obj9 = properties7.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration10 = properties7.elements();
        int int11 = properties7.size();
        java.util.Properties properties12 = new java.util.Properties();
        java.lang.Object obj14 = properties12.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration15 = properties12.elements();
        boolean boolean16 = properties12.isEmpty();
        java.util.Set<java.lang.Object> objSet17 = properties12.keySet();
        boolean boolean18 = properties7.containsKey((java.lang.Object) objSet17);
        java.util.Enumeration<java.lang.Object> objEnumeration19 = properties7.keys();
        java.util.Properties properties20 = new java.util.Properties();
        java.lang.Object obj22 = properties20.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration23 = properties20.elements();
        boolean boolean24 = properties20.isEmpty();
        java.util.Set<java.lang.Object> objSet25 = properties20.keySet();
        java.util.Enumeration<java.lang.Object> objEnumeration26 = properties20.keys();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet27 = properties20.entrySet();
        boolean boolean29 = properties7.remove((java.lang.Object) properties20, (java.lang.Object) 1.0f);
        boolean boolean30 = properties5.contains((java.lang.Object) properties20);
        java.util.Properties properties31 = new java.util.Properties(properties20);
        java.util.Properties properties32 = new java.util.Properties();
        java.lang.Object obj34 = properties32.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration35 = properties32.elements();
        boolean boolean36 = properties32.isEmpty();
        java.util.Set<java.lang.Object> objSet37 = properties32.keySet();
        boolean boolean38 = properties32.isEmpty();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet39 = properties32.entrySet();
        java.util.Properties properties40 = new java.util.Properties();
        java.lang.Object obj42 = properties40.remove((java.lang.Object) 0.0d);
        boolean boolean43 = properties40.isEmpty();
        java.lang.Object obj46 = properties40.setProperty("", "hi!");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties47 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties47.setSerialJtaTransactions(false);
        boolean boolean50 = properties32.remove((java.lang.Object) properties40, (java.lang.Object) atomikosProperties47);
        boolean boolean51 = properties31.contains((java.lang.Object) atomikosProperties47);
        java.util.Properties properties52 = new java.util.Properties();
        java.lang.Object obj54 = properties52.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration55 = properties52.elements();
        boolean boolean56 = properties52.isEmpty();
        java.util.Enumeration<java.lang.Object> objEnumeration57 = properties52.elements();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet58 = properties52.entrySet();
        java.util.Set<java.lang.String> strSet59 = properties52.stringPropertyNames();
        java.util.Properties properties60 = new java.util.Properties();
        java.lang.Object obj62 = properties60.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration63 = properties60.elements();
        boolean boolean64 = properties60.isEmpty();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet65 = properties60.entrySet();
        boolean boolean66 = properties52.contains((java.lang.Object) properties60);
        java.util.Properties properties67 = new java.util.Properties();
        java.lang.Object obj69 = properties67.remove((java.lang.Object) 0.0d);
        java.util.Properties properties70 = new java.util.Properties();
        java.util.Collection<java.lang.Object> objCollection71 = properties70.values();
        java.util.Enumeration<java.lang.Object> objEnumeration72 = properties70.keys();
        java.util.Properties properties73 = new java.util.Properties();
        java.lang.Object obj75 = properties73.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration76 = properties73.elements();
        boolean boolean77 = properties73.isEmpty();
        java.util.Set<java.lang.Object> objSet78 = properties73.keySet();
        java.util.Enumeration<java.lang.Object> objEnumeration79 = properties73.keys();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet80 = properties73.entrySet();
        java.lang.Object obj81 = properties67.put((java.lang.Object) properties70, (java.lang.Object) properties73);
        java.lang.Object obj82 = properties70.clone();
        boolean boolean83 = properties52.containsKey((java.lang.Object) properties70);
        boolean boolean84 = properties31.equals((java.lang.Object) boolean83);
        java.util.Set<java.lang.String> strSet85 = properties31.stringPropertyNames();
        java.util.Collection<java.lang.Object> objCollection86 = properties31.values();
        java.util.Properties properties87 = new java.util.Properties(properties31);
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet88 = properties31.entrySet();
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(objEnumeration3);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNull(obj9);
        org.junit.Assert.assertNotNull(objEnumeration10);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertNull(obj14);
        org.junit.Assert.assertNotNull(objEnumeration15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(objSet17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(objEnumeration19);
        org.junit.Assert.assertNull(obj22);
        org.junit.Assert.assertNotNull(objEnumeration23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNotNull(objSet25);
        org.junit.Assert.assertNotNull(objEnumeration26);
        org.junit.Assert.assertNotNull(objEntrySet27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNull(obj34);
        org.junit.Assert.assertNotNull(objEnumeration35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNotNull(objSet37);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertNotNull(objEntrySet39);
        org.junit.Assert.assertNull(obj42);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNull(obj46);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertNull(obj54);
        org.junit.Assert.assertNotNull(objEnumeration55);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertNotNull(objEnumeration57);
        org.junit.Assert.assertNotNull(objEntrySet58);
        org.junit.Assert.assertNotNull(strSet59);
        org.junit.Assert.assertNull(obj62);
        org.junit.Assert.assertNotNull(objEnumeration63);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64 == true);
        org.junit.Assert.assertNotNull(objEntrySet65);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertNull(obj69);
        org.junit.Assert.assertNotNull(objCollection71);
        org.junit.Assert.assertNotNull(objEnumeration72);
        org.junit.Assert.assertNull(obj75);
        org.junit.Assert.assertNotNull(objEnumeration76);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + true + "'", boolean77 == true);
        org.junit.Assert.assertNotNull(objSet78);
        org.junit.Assert.assertNotNull(objEnumeration79);
        org.junit.Assert.assertNotNull(objEntrySet80);
        org.junit.Assert.assertNull(obj81);
        org.junit.Assert.assertNotNull(obj82);
        org.junit.Assert.assertEquals(obj82.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj82), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj82), "{}");
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + false + "'", boolean83 == false);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + false + "'", boolean84 == false);
        org.junit.Assert.assertNotNull(strSet85);
        org.junit.Assert.assertNotNull(objCollection86);
        org.junit.Assert.assertNotNull(objEntrySet88);
    }

    @Test
    public void test7888() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7888");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration3 = properties0.elements();
        int int4 = properties0.size();
        java.util.Properties properties5 = new java.util.Properties();
        java.lang.Object obj7 = properties5.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration8 = properties5.elements();
        boolean boolean9 = properties5.isEmpty();
        java.util.Set<java.lang.Object> objSet10 = properties5.keySet();
        boolean boolean11 = properties0.containsKey((java.lang.Object) objSet10);
        java.util.Properties properties12 = new java.util.Properties();
        java.lang.Object obj14 = properties12.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration15 = properties12.elements();
        int int16 = properties12.size();
        java.util.Properties properties17 = new java.util.Properties(properties12);
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet18 = properties12.entrySet();
        java.util.Properties properties19 = new java.util.Properties();
        java.util.Properties properties20 = new java.util.Properties();
        java.lang.Object obj22 = properties20.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet23 = properties20.stringPropertyNames();
        boolean boolean24 = properties19.containsValue((java.lang.Object) properties20);
        java.util.Collection<java.lang.Object> objCollection25 = properties19.values();
        java.util.Properties properties27 = new java.util.Properties();
        java.lang.Object obj29 = properties27.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration30 = properties27.elements();
        boolean boolean31 = properties27.isEmpty();
        java.util.Set<java.lang.Object> objSet32 = properties27.keySet();
        java.lang.Object obj33 = properties19.putIfAbsent((java.lang.Object) "hi!", (java.lang.Object) objSet32);
        java.util.Set<java.lang.Object> objSet34 = properties19.keySet();
        java.util.Set<java.lang.Object> objSet35 = properties19.keySet();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet36 = properties19.entrySet();
        java.util.Properties properties37 = new java.util.Properties();
        java.util.Properties properties38 = new java.util.Properties();
        java.lang.Object obj40 = properties38.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet41 = properties38.stringPropertyNames();
        boolean boolean42 = properties37.containsValue((java.lang.Object) properties38);
        java.util.Collection<java.lang.Object> objCollection43 = properties37.values();
        boolean boolean44 = properties12.remove((java.lang.Object) objEntrySet36, (java.lang.Object) objCollection43);
        boolean boolean45 = properties0.equals((java.lang.Object) boolean44);
        java.util.Set<java.lang.String> strSet46 = properties0.stringPropertyNames();
        java.lang.Class<?> wildcardClass47 = strSet46.getClass();
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(objEnumeration3);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNull(obj7);
        org.junit.Assert.assertNotNull(objEnumeration8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertNotNull(objSet10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNull(obj14);
        org.junit.Assert.assertNotNull(objEnumeration15);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0);
        org.junit.Assert.assertNotNull(objEntrySet18);
        org.junit.Assert.assertNull(obj22);
        org.junit.Assert.assertNotNull(strSet23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(objCollection25);
        org.junit.Assert.assertNull(obj29);
        org.junit.Assert.assertNotNull(objEnumeration30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNotNull(objSet32);
        org.junit.Assert.assertNull(obj33);
        org.junit.Assert.assertNotNull(objSet34);
        org.junit.Assert.assertNotNull(objSet35);
        org.junit.Assert.assertNotNull(objEntrySet36);
        org.junit.Assert.assertNull(obj40);
        org.junit.Assert.assertNotNull(strSet41);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(objCollection43);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNotNull(strSet46);
        org.junit.Assert.assertNotNull(wildcardClass47);
    }

    @Test
    public void test7889() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7889");
        java.util.Properties properties0 = new java.util.Properties();
        boolean boolean2 = properties0.contains((java.lang.Object) 100.0d);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties3 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties3.setSerialJtaTransactions(false);
        atomikosProperties3.setThreadedTwoPhaseCommit(true);
        atomikosProperties3.setSerialJtaTransactions(false);
        java.lang.String str10 = atomikosProperties3.getService();
        boolean boolean11 = properties0.containsKey((java.lang.Object) atomikosProperties3);
        java.lang.String str12 = atomikosProperties3.getService();
        long long13 = atomikosProperties3.getCheckpointInterval();
        atomikosProperties3.setEnableLogging(true);
        atomikosProperties3.setLogBaseName("hi!");
        java.lang.String str18 = atomikosProperties3.getLogBaseName();
        long long19 = atomikosProperties3.getMaxTimeout();
        atomikosProperties3.setLogBaseName("");
        java.util.Properties properties22 = atomikosProperties3.asProperties();
        java.lang.String str23 = atomikosProperties3.getService();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertTrue("'" + long13 + "' != '" + 500L + "'", long13 == 500L);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "hi!" + "'", str18, "hi!");
        org.junit.Assert.assertTrue("'" + long19 + "' != '" + 300000L + "'", long19 == 300000L);
        org.junit.Assert.assertNotNull(properties22);
        org.junit.Assert.assertNull(str23);
    }

    @Test
    public void test7890() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7890");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet3 = properties0.stringPropertyNames();
        java.util.Collection<java.lang.Object> objCollection4 = properties0.values();
        int int5 = properties0.size();
        java.util.Set<java.lang.Object> objSet6 = properties0.keySet();
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(strSet3);
        org.junit.Assert.assertNotNull(objCollection4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertNotNull(objSet6);
    }

    @Test
    public void test7891() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7891");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration3 = properties0.elements();
        boolean boolean4 = properties0.isEmpty();
        java.util.Enumeration<java.lang.Object> objEnumeration5 = properties0.elements();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet6 = properties0.entrySet();
        java.util.Set<java.lang.String> strSet7 = properties0.stringPropertyNames();
        java.util.Properties properties8 = new java.util.Properties();
        java.lang.Object obj10 = properties8.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration11 = properties8.elements();
        boolean boolean12 = properties8.isEmpty();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet13 = properties8.entrySet();
        boolean boolean14 = properties0.contains((java.lang.Object) properties8);
        java.util.Properties properties15 = new java.util.Properties();
        java.lang.Object obj17 = properties15.remove((java.lang.Object) 0.0d);
        java.util.Properties properties18 = new java.util.Properties();
        java.util.Collection<java.lang.Object> objCollection19 = properties18.values();
        java.util.Enumeration<java.lang.Object> objEnumeration20 = properties18.keys();
        java.util.Properties properties21 = new java.util.Properties();
        java.lang.Object obj23 = properties21.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration24 = properties21.elements();
        boolean boolean25 = properties21.isEmpty();
        java.util.Set<java.lang.Object> objSet26 = properties21.keySet();
        java.util.Enumeration<java.lang.Object> objEnumeration27 = properties21.keys();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet28 = properties21.entrySet();
        java.lang.Object obj29 = properties15.put((java.lang.Object) properties18, (java.lang.Object) properties21);
        java.lang.Object obj30 = properties18.clone();
        boolean boolean31 = properties0.containsKey((java.lang.Object) properties18);
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet32 = properties18.entrySet();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties33 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties33.setSerialJtaTransactions(false);
        atomikosProperties33.setThreadedTwoPhaseCommit(true);
        atomikosProperties33.setThreadedTwoPhaseCommit(true);
        atomikosProperties33.setLogBaseName("{{}=tmlog}");
        boolean boolean42 = properties18.contains((java.lang.Object) atomikosProperties33);
        java.util.Set<java.lang.String> strSet43 = properties18.stringPropertyNames();
        java.util.Set<java.lang.Object> objSet44 = properties18.keySet();
        java.util.Properties properties45 = new java.util.Properties();
        java.lang.Object obj47 = properties45.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration48 = properties45.elements();
        boolean boolean49 = properties45.isEmpty();
        java.util.Set<java.lang.Object> objSet50 = properties45.keySet();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties51 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties51.setSerialJtaTransactions(false);
        atomikosProperties51.setThreadedTwoPhaseCommit(true);
        atomikosProperties51.setThreadedTwoPhaseCommit(true);
        java.util.Properties properties58 = atomikosProperties51.asProperties();
        int int59 = atomikosProperties51.getMaxActives();
        java.util.Properties properties60 = new java.util.Properties();
        java.lang.Object obj62 = properties60.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration63 = properties60.elements();
        boolean boolean64 = properties60.isEmpty();
        java.util.Set<java.lang.Object> objSet65 = properties60.keySet();
        boolean boolean67 = properties60.containsKey((java.lang.Object) (-1.0f));
        java.lang.Object obj68 = properties45.put((java.lang.Object) atomikosProperties51, (java.lang.Object) properties60);
        atomikosProperties51.setLogBaseName("{{}={}}");
        atomikosProperties51.setLogBaseDir("{hi!=[]}");
        boolean boolean73 = atomikosProperties51.isSerialJtaTransactions();
        atomikosProperties51.setLogBaseDir("tmlog");
        java.util.Properties properties76 = atomikosProperties51.asProperties();
        atomikosProperties51.setForceShutdownOnVmExit(false);
        boolean boolean79 = atomikosProperties51.isThreadedTwoPhaseCommit();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties80 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties80.setSerialJtaTransactions(false);
        atomikosProperties80.setThreadedTwoPhaseCommit(true);
        atomikosProperties80.setEnableLogging(false);
        atomikosProperties80.setSerialJtaTransactions(false);
        atomikosProperties80.setMaxTimeout(0L);
        long long91 = atomikosProperties80.getDefaultJtaTimeout();
        long long92 = atomikosProperties80.getMaxTimeout();
        atomikosProperties80.setDefaultJtaTimeout(0L);
        boolean boolean95 = atomikosProperties80.isThreadedTwoPhaseCommit();
        atomikosProperties80.setTransactionManagerUniqueName("{-1=100}");
        java.lang.Object obj98 = properties18.replace((java.lang.Object) boolean79, (java.lang.Object) "{-1=100}");
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(objEnumeration3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(objEnumeration5);
        org.junit.Assert.assertNotNull(objEntrySet6);
        org.junit.Assert.assertNotNull(strSet7);
        org.junit.Assert.assertNull(obj10);
        org.junit.Assert.assertNotNull(objEnumeration11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(objEntrySet13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNull(obj17);
        org.junit.Assert.assertNotNull(objCollection19);
        org.junit.Assert.assertNotNull(objEnumeration20);
        org.junit.Assert.assertNull(obj23);
        org.junit.Assert.assertNotNull(objEnumeration24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(objSet26);
        org.junit.Assert.assertNotNull(objEnumeration27);
        org.junit.Assert.assertNotNull(objEntrySet28);
        org.junit.Assert.assertNull(obj29);
        org.junit.Assert.assertNotNull(obj30);
        org.junit.Assert.assertEquals(obj30.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj30), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj30), "{}");
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(objEntrySet32);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(strSet43);
        org.junit.Assert.assertNotNull(objSet44);
        org.junit.Assert.assertNull(obj47);
        org.junit.Assert.assertNotNull(objEnumeration48);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertNotNull(objSet50);
        org.junit.Assert.assertNotNull(properties58);
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + 50 + "'", int59 == 50);
        org.junit.Assert.assertNull(obj62);
        org.junit.Assert.assertNotNull(objEnumeration63);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64 == true);
        org.junit.Assert.assertNotNull(objSet65);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertNull(obj68);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertNotNull(properties76);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + true + "'", boolean79 == true);
        org.junit.Assert.assertTrue("'" + long91 + "' != '" + 10000L + "'", long91 == 10000L);
        org.junit.Assert.assertTrue("'" + long92 + "' != '" + 0L + "'", long92 == 0L);
        org.junit.Assert.assertTrue("'" + boolean95 + "' != '" + true + "'", boolean95 == true);
        org.junit.Assert.assertNull(obj98);
    }

    @Test
    public void test7892() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7892");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration3 = properties0.elements();
        boolean boolean4 = properties0.isEmpty();
        java.util.Set<java.lang.Object> objSet5 = properties0.keySet();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties6 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties6.setSerialJtaTransactions(false);
        atomikosProperties6.setThreadedTwoPhaseCommit(true);
        atomikosProperties6.setThreadedTwoPhaseCommit(true);
        java.util.Properties properties13 = atomikosProperties6.asProperties();
        int int14 = atomikosProperties6.getMaxActives();
        java.util.Properties properties15 = new java.util.Properties();
        java.lang.Object obj17 = properties15.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration18 = properties15.elements();
        boolean boolean19 = properties15.isEmpty();
        java.util.Set<java.lang.Object> objSet20 = properties15.keySet();
        boolean boolean22 = properties15.containsKey((java.lang.Object) (-1.0f));
        java.lang.Object obj23 = properties0.put((java.lang.Object) atomikosProperties6, (java.lang.Object) properties15);
        java.lang.String str24 = properties0.toString();
        java.util.Properties properties25 = new java.util.Properties();
        java.lang.Object obj27 = properties25.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration28 = properties25.elements();
        boolean boolean29 = properties25.isEmpty();
        java.util.Set<java.lang.Object> objSet30 = properties25.keySet();
        java.util.Enumeration<java.lang.Object> objEnumeration31 = properties25.keys();
        java.util.Enumeration<java.lang.Object> objEnumeration32 = properties25.elements();
        java.util.Properties properties33 = new java.util.Properties();
        java.lang.Object obj35 = properties33.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration36 = properties33.elements();
        boolean boolean37 = properties33.isEmpty();
        java.util.Set<java.lang.Object> objSet38 = properties33.keySet();
        java.util.Enumeration<java.lang.Object> objEnumeration39 = properties33.keys();
        java.lang.String str41 = properties33.getProperty("hi!");
        java.lang.String str43 = properties33.getProperty("");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties44 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties44.setSerialJtaTransactions(false);
        atomikosProperties44.setThreadedTwoPhaseCommit(true);
        atomikosProperties44.setEnableLogging(false);
        boolean boolean51 = properties33.containsKey((java.lang.Object) atomikosProperties44);
        boolean boolean52 = properties25.containsKey((java.lang.Object) boolean51);
        java.util.Properties properties53 = new java.util.Properties();
        java.lang.Object obj55 = properties53.remove((java.lang.Object) 0.0d);
        boolean boolean56 = properties53.isEmpty();
        java.lang.Object obj59 = properties53.setProperty("", "hi!");
        int int60 = properties53.size();
        java.lang.Object obj61 = properties0.replace((java.lang.Object) properties25, (java.lang.Object) properties53);
        java.util.Properties properties62 = new java.util.Properties(properties0);
        java.lang.Object obj63 = properties0.clone();
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(objEnumeration3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(objSet5);
        org.junit.Assert.assertNotNull(properties13);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 50 + "'", int14 == 50);
        org.junit.Assert.assertNull(obj17);
        org.junit.Assert.assertNotNull(objEnumeration18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(objSet20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNull(obj23);
        org.junit.Assert.assertNull(obj27);
        org.junit.Assert.assertNotNull(objEnumeration28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNotNull(objSet30);
        org.junit.Assert.assertNotNull(objEnumeration31);
        org.junit.Assert.assertNotNull(objEnumeration32);
        org.junit.Assert.assertNull(obj35);
        org.junit.Assert.assertNotNull(objEnumeration36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertNotNull(objSet38);
        org.junit.Assert.assertNotNull(objEnumeration39);
        org.junit.Assert.assertNull(str41);
        org.junit.Assert.assertNull(str43);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNull(obj55);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertNull(obj59);
        org.junit.Assert.assertTrue("'" + int60 + "' != '" + 1 + "'", int60 == 1);
        org.junit.Assert.assertNull(obj61);
        org.junit.Assert.assertNotNull(obj63);
    }

    @Test
    public void test7893() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7893");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        boolean boolean1 = atomikosProperties0.isForceShutdownOnVmExit();
        java.util.Properties properties2 = atomikosProperties0.asProperties();
        java.lang.String str5 = properties2.getProperty("{hi!=[], {hi!=[]}=}", "{hi!=[]}");
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertNotNull(properties2);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "{hi!=[]}" + "'", str5, "{hi!=[]}");
    }

    @Test
    public void test7894() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7894");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setSerialJtaTransactions(false);
        boolean boolean3 = atomikosProperties0.isSerialJtaTransactions();
        atomikosProperties0.setTransactionManagerUniqueName("hi!");
        atomikosProperties0.setForceShutdownOnVmExit(false);
        atomikosProperties0.setDefaultJtaTimeout((long) (byte) 10);
        java.lang.String str10 = atomikosProperties0.getTransactionManagerUniqueName();
        atomikosProperties0.setForceShutdownOnVmExit(false);
        long long13 = atomikosProperties0.getMaxTimeout();
        java.util.Properties properties14 = atomikosProperties0.asProperties();
        java.util.Set<java.lang.Object> objSet15 = properties14.keySet();
        java.util.Properties properties16 = new java.util.Properties(properties14);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "hi!" + "'", str10, "hi!");
        org.junit.Assert.assertTrue("'" + long13 + "' != '" + 300000L + "'", long13 == 300000L);
        org.junit.Assert.assertNotNull(properties14);
        org.junit.Assert.assertNotNull(objSet15);
    }

    @Test
    public void test7895() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7895");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration3 = properties0.elements();
        boolean boolean4 = properties0.isEmpty();
        java.util.Set<java.lang.Object> objSet5 = properties0.keySet();
        java.lang.Object obj6 = properties0.clone();
        java.util.Properties properties7 = new java.util.Properties();
        java.util.Properties properties8 = new java.util.Properties();
        java.lang.Object obj10 = properties8.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet11 = properties8.stringPropertyNames();
        boolean boolean12 = properties7.containsValue((java.lang.Object) properties8);
        java.util.Collection<java.lang.Object> objCollection13 = properties7.values();
        java.lang.Object obj14 = properties7.clone();
        java.util.Properties properties15 = new java.util.Properties();
        java.lang.Object obj17 = properties15.remove((java.lang.Object) 0.0d);
        boolean boolean19 = properties15.containsValue((java.lang.Object) "hi!");
        java.lang.Object obj22 = properties15.put((java.lang.Object) (byte) -1, (java.lang.Object) 100L);
        java.util.Properties properties23 = new java.util.Properties();
        java.util.Properties properties24 = new java.util.Properties();
        java.lang.Object obj26 = properties24.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet27 = properties24.stringPropertyNames();
        boolean boolean28 = properties23.containsValue((java.lang.Object) properties24);
        java.util.Collection<java.lang.Object> objCollection29 = properties23.values();
        java.util.Properties properties31 = new java.util.Properties();
        java.lang.Object obj33 = properties31.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration34 = properties31.elements();
        boolean boolean35 = properties31.isEmpty();
        java.util.Set<java.lang.Object> objSet36 = properties31.keySet();
        java.lang.Object obj37 = properties23.putIfAbsent((java.lang.Object) "hi!", (java.lang.Object) objSet36);
        java.util.Set<java.lang.Object> objSet38 = properties23.keySet();
        boolean boolean39 = properties15.containsKey((java.lang.Object) properties23);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties40 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties40.setSerialJtaTransactions(false);
        boolean boolean43 = atomikosProperties40.isSerialJtaTransactions();
        atomikosProperties40.setCheckpointInterval((long) 10);
        atomikosProperties40.setForceShutdownOnVmExit(true);
        boolean boolean48 = properties0.replace((java.lang.Object) properties7, (java.lang.Object) properties15, (java.lang.Object) true);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties49 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties49.setSerialJtaTransactions(false);
        atomikosProperties49.setThreadedTwoPhaseCommit(true);
        atomikosProperties49.setMaxTimeout((long) '#');
        boolean boolean56 = atomikosProperties49.isEnableLogging();
        atomikosProperties49.setMaxActives((int) '#');
        int int59 = atomikosProperties49.getMaxActives();
        java.lang.String str60 = atomikosProperties49.getTransactionManagerUniqueName();
        java.lang.String str61 = atomikosProperties49.getService();
        boolean boolean62 = atomikosProperties49.isForceShutdownOnVmExit();
        boolean boolean63 = properties15.containsValue((java.lang.Object) atomikosProperties49);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties64 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties64.setSerialJtaTransactions(false);
        atomikosProperties64.setThreadedTwoPhaseCommit(true);
        atomikosProperties64.setThreadedTwoPhaseCommit(true);
        java.util.Properties properties71 = atomikosProperties64.asProperties();
        boolean boolean72 = atomikosProperties64.isThreadedTwoPhaseCommit();
        atomikosProperties64.setMaxTimeout((long) 100);
        atomikosProperties64.setThreadedTwoPhaseCommit(true);
        java.lang.Object obj77 = properties15.remove((java.lang.Object) atomikosProperties64);
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(objEnumeration3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(objSet5);
        org.junit.Assert.assertNotNull(obj6);
        org.junit.Assert.assertEquals(obj6.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj6), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj6), "{}");
        org.junit.Assert.assertNull(obj10);
        org.junit.Assert.assertNotNull(strSet11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(objCollection13);
        org.junit.Assert.assertNotNull(obj14);
        org.junit.Assert.assertEquals(obj14.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj14), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj14), "{}");
        org.junit.Assert.assertNull(obj17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNull(obj22);
        org.junit.Assert.assertNull(obj26);
        org.junit.Assert.assertNotNull(strSet27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(objCollection29);
        org.junit.Assert.assertNull(obj33);
        org.junit.Assert.assertNotNull(objEnumeration34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertNotNull(objSet36);
        org.junit.Assert.assertNull(obj37);
        org.junit.Assert.assertNotNull(objSet38);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + 35 + "'", int59 == 35);
        org.junit.Assert.assertNull(str60);
        org.junit.Assert.assertNull(str61);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertNotNull(properties71);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + true + "'", boolean72 == true);
        org.junit.Assert.assertNull(obj77);
    }

    @Test
    public void test7896() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7896");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet3 = properties0.stringPropertyNames();
        java.lang.String str4 = properties0.toString();
        java.util.Properties properties5 = new java.util.Properties();
        java.lang.Object obj7 = properties5.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration8 = properties5.elements();
        boolean boolean9 = properties5.isEmpty();
        java.lang.Object obj12 = properties5.setProperty("tmlog", "");
        properties0.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties5);
        java.util.Collection<java.lang.Object> objCollection14 = properties0.values();
        java.util.Collection<java.lang.Object> objCollection15 = properties0.values();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet16 = properties0.entrySet();
        java.lang.String str18 = properties0.getProperty("{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=false, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=35, com.atomikos.icatch.threaded_2pc=true, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties19 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties19.setSerialJtaTransactions(false);
        atomikosProperties19.setThreadedTwoPhaseCommit(true);
        atomikosProperties19.setThreadedTwoPhaseCommit(true);
        int int26 = atomikosProperties19.getMaxActives();
        long long27 = atomikosProperties19.getMaxTimeout();
        boolean boolean28 = atomikosProperties19.isSerialJtaTransactions();
        java.lang.String str29 = atomikosProperties19.getTransactionManagerUniqueName();
        atomikosProperties19.setThreadedTwoPhaseCommit(true);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties32 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties32.setSerialJtaTransactions(false);
        boolean boolean35 = atomikosProperties32.isSerialJtaTransactions();
        atomikosProperties32.setTransactionManagerUniqueName("hi!");
        atomikosProperties32.setForceShutdownOnVmExit(false);
        boolean boolean40 = atomikosProperties32.isThreadedTwoPhaseCommit();
        java.lang.Object obj41 = properties0.put((java.lang.Object) atomikosProperties19, (java.lang.Object) boolean40);
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(strSet3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "{}" + "'", str4, "{}");
        org.junit.Assert.assertNull(obj7);
        org.junit.Assert.assertNotNull(objEnumeration8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertNull(obj12);
        org.junit.Assert.assertNotNull(objCollection14);
        org.junit.Assert.assertNotNull(objCollection15);
        org.junit.Assert.assertNotNull(objEntrySet16);
        org.junit.Assert.assertNull(str18);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 50 + "'", int26 == 50);
        org.junit.Assert.assertTrue("'" + long27 + "' != '" + 300000L + "'", long27 == 300000L);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNull(str29);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNull(obj41);
    }

    @Test
    public void test7897() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7897");
        java.util.Properties properties0 = new java.util.Properties();
        boolean boolean2 = properties0.contains((java.lang.Object) 100.0d);
        java.util.Properties properties3 = new java.util.Properties();
        java.lang.Object obj5 = properties3.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration6 = properties3.elements();
        boolean boolean7 = properties3.isEmpty();
        java.util.Set<java.lang.Object> objSet8 = properties3.keySet();
        boolean boolean9 = properties3.isEmpty();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet10 = properties3.entrySet();
        java.util.Properties properties11 = new java.util.Properties();
        java.lang.Object obj13 = properties11.remove((java.lang.Object) 0.0d);
        boolean boolean14 = properties11.isEmpty();
        java.lang.Object obj17 = properties11.setProperty("", "hi!");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties18 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties18.setSerialJtaTransactions(false);
        boolean boolean21 = properties3.remove((java.lang.Object) properties11, (java.lang.Object) atomikosProperties18);
        boolean boolean22 = properties0.equals((java.lang.Object) properties3);
        java.util.Enumeration<java.lang.Object> objEnumeration23 = properties0.elements();
        java.util.Collection<java.lang.Object> objCollection24 = properties0.values();
        java.util.Enumeration<?> wildcardEnumeration25 = properties0.propertyNames();
        java.util.Set<java.lang.Object> objSet26 = properties0.keySet();
        java.util.Properties properties27 = new java.util.Properties();
        java.lang.Object obj29 = properties27.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration30 = properties27.elements();
        boolean boolean31 = properties27.isEmpty();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet32 = properties27.entrySet();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties34 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties34.setSerialJtaTransactions(false);
        atomikosProperties34.setThreadedTwoPhaseCommit(true);
        atomikosProperties34.setMaxTimeout((long) '#');
        boolean boolean41 = atomikosProperties34.isForceShutdownOnVmExit();
        java.lang.Object obj42 = properties27.put((java.lang.Object) (short) 1, (java.lang.Object) atomikosProperties34);
        int int43 = atomikosProperties34.getMaxActives();
        java.util.Properties properties44 = new java.util.Properties();
        java.lang.Object obj46 = properties44.remove((java.lang.Object) 0.0d);
        boolean boolean48 = properties44.containsValue((java.lang.Object) "hi!");
        java.lang.Object obj51 = properties44.put((java.lang.Object) (byte) -1, (java.lang.Object) 100L);
        java.util.Properties properties52 = new java.util.Properties();
        java.util.Properties properties53 = new java.util.Properties();
        java.lang.Object obj55 = properties53.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet56 = properties53.stringPropertyNames();
        boolean boolean57 = properties52.containsValue((java.lang.Object) properties53);
        java.util.Collection<java.lang.Object> objCollection58 = properties52.values();
        java.util.Properties properties60 = new java.util.Properties();
        java.lang.Object obj62 = properties60.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration63 = properties60.elements();
        boolean boolean64 = properties60.isEmpty();
        java.util.Set<java.lang.Object> objSet65 = properties60.keySet();
        java.lang.Object obj66 = properties52.putIfAbsent((java.lang.Object) "hi!", (java.lang.Object) objSet65);
        java.util.Set<java.lang.Object> objSet67 = properties52.keySet();
        boolean boolean68 = properties44.containsKey((java.lang.Object) properties52);
        java.util.Set<java.lang.String> strSet69 = properties52.stringPropertyNames();
        java.lang.String str70 = properties52.toString();
        boolean boolean71 = properties0.remove((java.lang.Object) atomikosProperties34, (java.lang.Object) properties52);
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet72 = properties52.entrySet();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties73 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties73.setSerialJtaTransactions(false);
        boolean boolean76 = atomikosProperties73.isSerialJtaTransactions();
        boolean boolean77 = atomikosProperties73.isEnableLogging();
        atomikosProperties73.setSerialJtaTransactions(true);
        java.lang.String str80 = atomikosProperties73.getService();
        java.lang.Object obj81 = properties52.remove((java.lang.Object) atomikosProperties73);
        atomikosProperties73.setThreadedTwoPhaseCommit(true);
        atomikosProperties73.setLogBaseName("");
        atomikosProperties73.setForceShutdownOnVmExit(false);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNull(obj5);
        org.junit.Assert.assertNotNull(objEnumeration6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(objSet8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertNotNull(objEntrySet10);
        org.junit.Assert.assertNull(obj13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNull(obj17);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNotNull(objEnumeration23);
        org.junit.Assert.assertNotNull(objCollection24);
        org.junit.Assert.assertNotNull(wildcardEnumeration25);
        org.junit.Assert.assertNotNull(objSet26);
        org.junit.Assert.assertNull(obj29);
        org.junit.Assert.assertNotNull(objEnumeration30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNotNull(objEntrySet32);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNull(obj42);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 50 + "'", int43 == 50);
        org.junit.Assert.assertNull(obj46);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNull(obj51);
        org.junit.Assert.assertNull(obj55);
        org.junit.Assert.assertNotNull(strSet56);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertNotNull(objCollection58);
        org.junit.Assert.assertNull(obj62);
        org.junit.Assert.assertNotNull(objEnumeration63);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64 == true);
        org.junit.Assert.assertNotNull(objSet65);
        org.junit.Assert.assertNull(obj66);
        org.junit.Assert.assertNotNull(objSet67);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertNotNull(strSet69);
        org.junit.Assert.assertEquals("'" + str70 + "' != '" + "{hi!=[]}" + "'", str70, "{hi!=[]}");
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertNotNull(objEntrySet72);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + true + "'", boolean77 == true);
        org.junit.Assert.assertNull(str80);
        org.junit.Assert.assertNull(obj81);
    }

    @Test
    public void test7898() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7898");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setSerialJtaTransactions(false);
        boolean boolean3 = atomikosProperties0.isSerialJtaTransactions();
        atomikosProperties0.setTransactionManagerUniqueName("hi!");
        java.lang.String str6 = atomikosProperties0.getLogBaseName();
        java.lang.String str7 = atomikosProperties0.getLogBaseName();
        long long8 = atomikosProperties0.getDefaultJtaTimeout();
        long long9 = atomikosProperties0.getMaxTimeout();
        java.lang.String str10 = atomikosProperties0.getService();
        atomikosProperties0.setSerialJtaTransactions(false);
        long long13 = atomikosProperties0.getCheckpointInterval();
        long long14 = atomikosProperties0.getCheckpointInterval();
        long long15 = atomikosProperties0.getCheckpointInterval();
        atomikosProperties0.setTransactionManagerUniqueName("{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=false, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.tm_unique_name=tmlog, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
        atomikosProperties0.setDefaultJtaTimeout((long) (short) -1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "tmlog" + "'", str6, "tmlog");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "tmlog" + "'", str7, "tmlog");
        org.junit.Assert.assertTrue("'" + long8 + "' != '" + 10000L + "'", long8 == 10000L);
        org.junit.Assert.assertTrue("'" + long9 + "' != '" + 300000L + "'", long9 == 300000L);
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertTrue("'" + long13 + "' != '" + 500L + "'", long13 == 500L);
        org.junit.Assert.assertTrue("'" + long14 + "' != '" + 500L + "'", long14 == 500L);
        org.junit.Assert.assertTrue("'" + long15 + "' != '" + 500L + "'", long15 == 500L);
    }

    @Test
    public void test7899() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7899");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setSerialJtaTransactions(false);
        atomikosProperties0.setThreadedTwoPhaseCommit(true);
        atomikosProperties0.setMaxTimeout((long) '#');
        boolean boolean7 = atomikosProperties0.isEnableLogging();
        atomikosProperties0.setForceShutdownOnVmExit(true);
        atomikosProperties0.setForceShutdownOnVmExit(true);
        atomikosProperties0.setLogBaseDir("{=hi!}");
        java.util.Properties properties14 = atomikosProperties0.asProperties();
        atomikosProperties0.setLogBaseDir("{true=class org.springframework.boot.jta.atomikos.AtomikosProperties}");
        atomikosProperties0.setEnableLogging(false);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(properties14);
    }

    @Test
    public void test7900() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7900");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setSerialJtaTransactions(false);
        atomikosProperties0.setThreadedTwoPhaseCommit(true);
        atomikosProperties0.setThreadedTwoPhaseCommit(true);
        java.util.Properties properties7 = atomikosProperties0.asProperties();
        int int8 = atomikosProperties0.getMaxActives();
        atomikosProperties0.setService("hi!");
        long long11 = atomikosProperties0.getMaxTimeout();
        boolean boolean12 = atomikosProperties0.isForceShutdownOnVmExit();
        boolean boolean13 = atomikosProperties0.isThreadedTwoPhaseCommit();
        boolean boolean14 = atomikosProperties0.isForceShutdownOnVmExit();
        java.util.Properties properties15 = atomikosProperties0.asProperties();
        java.util.Properties properties16 = atomikosProperties0.asProperties();
        org.junit.Assert.assertNotNull(properties7);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 50 + "'", int8 == 50);
        org.junit.Assert.assertTrue("'" + long11 + "' != '" + 300000L + "'", long11 == 300000L);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(properties15);
        org.junit.Assert.assertNotNull(properties16);
    }

    @Test
    public void test7901() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7901");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration3 = properties0.elements();
        boolean boolean4 = properties0.isEmpty();
        java.util.Set<java.lang.Object> objSet5 = properties0.keySet();
        java.util.Enumeration<java.lang.Object> objEnumeration6 = properties0.keys();
        java.lang.String str8 = properties0.getProperty("hi!");
        java.lang.String str10 = properties0.getProperty("");
        java.lang.Object obj13 = properties0.setProperty("{{}={}}", "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=false, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=true, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet14 = properties0.entrySet();
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(objEnumeration3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(objSet5);
        org.junit.Assert.assertNotNull(objEnumeration6);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertNull(obj13);
        org.junit.Assert.assertNotNull(objEntrySet14);
    }

    @Test
    public void test7902() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7902");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setSerialJtaTransactions(false);
        atomikosProperties0.setThreadedTwoPhaseCommit(true);
        atomikosProperties0.setMaxTimeout((long) '#');
        java.lang.String str7 = atomikosProperties0.getLogBaseDir();
        atomikosProperties0.setForceShutdownOnVmExit(false);
        long long10 = atomikosProperties0.getMaxTimeout();
        atomikosProperties0.setLogBaseName("tmlog");
        long long13 = atomikosProperties0.getMaxTimeout();
        boolean boolean14 = atomikosProperties0.isSerialJtaTransactions();
        long long15 = atomikosProperties0.getCheckpointInterval();
        atomikosProperties0.setLogBaseName("{true=true}");
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertTrue("'" + long10 + "' != '" + 35L + "'", long10 == 35L);
        org.junit.Assert.assertTrue("'" + long13 + "' != '" + 35L + "'", long13 == 35L);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + long15 + "' != '" + 500L + "'", long15 == 500L);
    }

    @Test
    public void test7903() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7903");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration3 = properties0.elements();
        boolean boolean4 = properties0.isEmpty();
        java.util.Set<java.lang.Object> objSet5 = properties0.keySet();
        boolean boolean6 = properties0.isEmpty();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet7 = properties0.entrySet();
        java.util.Properties properties8 = new java.util.Properties();
        java.lang.Object obj10 = properties8.remove((java.lang.Object) 0.0d);
        boolean boolean11 = properties8.isEmpty();
        java.lang.Object obj14 = properties8.setProperty("", "hi!");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties15 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties15.setSerialJtaTransactions(false);
        boolean boolean18 = properties0.remove((java.lang.Object) properties8, (java.lang.Object) atomikosProperties15);
        java.util.Properties properties19 = new java.util.Properties(properties8);
        int int20 = properties19.size();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties22 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties22.setSerialJtaTransactions(false);
        boolean boolean25 = atomikosProperties22.isSerialJtaTransactions();
        java.lang.String str26 = atomikosProperties22.getService();
        boolean boolean27 = atomikosProperties22.isEnableLogging();
        java.lang.String str28 = atomikosProperties22.getTransactionManagerUniqueName();
        boolean boolean29 = properties19.remove((java.lang.Object) (byte) 1, (java.lang.Object) atomikosProperties22);
        atomikosProperties22.setMaxActives((int) (short) -1);
        java.util.Properties properties32 = atomikosProperties22.asProperties();
        atomikosProperties22.setThreadedTwoPhaseCommit(false);
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(objEnumeration3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(objSet5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(objEntrySet7);
        org.junit.Assert.assertNull(obj10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNull(obj14);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 0 + "'", int20 == 0);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNull(str26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNull(str28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(properties32);
    }

    @Test
    public void test7904() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7904");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration3 = properties0.elements();
        int int4 = properties0.size();
        java.util.Properties properties5 = new java.util.Properties(properties0);
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet6 = properties5.entrySet();
        java.util.Properties properties7 = new java.util.Properties();
        java.lang.Object obj9 = properties7.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration10 = properties7.elements();
        boolean boolean11 = properties7.isEmpty();
        java.util.Set<java.lang.Object> objSet12 = properties7.keySet();
        boolean boolean13 = properties7.isEmpty();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet14 = properties7.entrySet();
        java.util.Properties properties15 = new java.util.Properties();
        java.lang.Object obj17 = properties15.remove((java.lang.Object) 0.0d);
        boolean boolean18 = properties15.isEmpty();
        java.lang.Object obj21 = properties15.setProperty("", "hi!");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties22 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties22.setSerialJtaTransactions(false);
        boolean boolean25 = properties7.remove((java.lang.Object) properties15, (java.lang.Object) atomikosProperties22);
        java.util.Properties properties26 = new java.util.Properties(properties15);
        int int27 = properties26.size();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties29 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties29.setSerialJtaTransactions(false);
        boolean boolean32 = atomikosProperties29.isSerialJtaTransactions();
        java.lang.String str33 = atomikosProperties29.getService();
        boolean boolean34 = atomikosProperties29.isEnableLogging();
        java.lang.String str35 = atomikosProperties29.getTransactionManagerUniqueName();
        boolean boolean36 = properties26.remove((java.lang.Object) (byte) 1, (java.lang.Object) atomikosProperties29);
        java.util.Properties properties37 = new java.util.Properties();
        java.lang.Object obj39 = properties37.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration40 = properties37.elements();
        boolean boolean41 = properties37.isEmpty();
        java.util.Enumeration<java.lang.Object> objEnumeration42 = properties37.elements();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet43 = properties37.entrySet();
        java.lang.Object obj44 = properties26.remove((java.lang.Object) objEntrySet43);
        java.lang.Object obj45 = properties26.clone();
        java.util.Set<java.lang.Object> objSet46 = properties26.keySet();
        java.util.Properties properties47 = new java.util.Properties();
        java.lang.Object obj49 = properties47.remove((java.lang.Object) 0.0d);
        boolean boolean50 = properties47.isEmpty();
        java.lang.Object obj53 = properties47.setProperty("", "hi!");
        java.util.Properties properties54 = new java.util.Properties();
        java.lang.Object obj56 = properties54.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration57 = properties54.elements();
        boolean boolean58 = properties54.isEmpty();
        java.util.Set<java.lang.Object> objSet59 = properties54.keySet();
        boolean boolean60 = properties54.isEmpty();
        java.util.Properties properties61 = new java.util.Properties();
        java.util.Collection<java.lang.Object> objCollection62 = properties61.values();
        java.util.Enumeration<java.lang.Object> objEnumeration63 = properties61.keys();
        java.lang.Object obj64 = properties54.remove((java.lang.Object) properties61);
        java.lang.Object obj65 = properties47.get((java.lang.Object) properties61);
        java.util.Properties properties66 = new java.util.Properties();
        java.lang.Object obj68 = properties66.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration69 = properties66.elements();
        boolean boolean70 = properties66.isEmpty();
        java.util.Set<java.lang.Object> objSet71 = properties66.keySet();
        boolean boolean72 = properties66.isEmpty();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet73 = properties66.entrySet();
        java.util.Properties properties74 = new java.util.Properties();
        java.lang.Object obj76 = properties74.remove((java.lang.Object) 0.0d);
        boolean boolean77 = properties74.isEmpty();
        java.lang.Object obj80 = properties74.setProperty("", "hi!");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties81 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties81.setSerialJtaTransactions(false);
        boolean boolean84 = properties66.remove((java.lang.Object) properties74, (java.lang.Object) atomikosProperties81);
        properties61.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties66);
        java.util.Set<java.lang.Object> objSet86 = properties66.keySet();
        java.lang.Object obj87 = properties66.clone();
        boolean boolean88 = properties26.containsKey(obj87);
        properties5.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties26);
        java.util.Properties properties90 = new java.util.Properties(properties26);
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(objEnumeration3);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNotNull(objEntrySet6);
        org.junit.Assert.assertNull(obj9);
        org.junit.Assert.assertNotNull(objEnumeration10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNotNull(objSet12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(objEntrySet14);
        org.junit.Assert.assertNull(obj17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNull(obj21);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 0 + "'", int27 == 0);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNull(str33);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertNull(str35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNull(obj39);
        org.junit.Assert.assertNotNull(objEnumeration40);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertNotNull(objEnumeration42);
        org.junit.Assert.assertNotNull(objEntrySet43);
        org.junit.Assert.assertNull(obj44);
        org.junit.Assert.assertNotNull(obj45);
        org.junit.Assert.assertEquals(obj45.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj45), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj45), "{}");
        org.junit.Assert.assertNotNull(objSet46);
        org.junit.Assert.assertNull(obj49);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertNull(obj53);
        org.junit.Assert.assertNull(obj56);
        org.junit.Assert.assertNotNull(objEnumeration57);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertNotNull(objSet59);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertNotNull(objCollection62);
        org.junit.Assert.assertNotNull(objEnumeration63);
        org.junit.Assert.assertNull(obj64);
        org.junit.Assert.assertNull(obj65);
        org.junit.Assert.assertNull(obj68);
        org.junit.Assert.assertNotNull(objEnumeration69);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + true + "'", boolean70 == true);
        org.junit.Assert.assertNotNull(objSet71);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + true + "'", boolean72 == true);
        org.junit.Assert.assertNotNull(objEntrySet73);
        org.junit.Assert.assertNull(obj76);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + true + "'", boolean77 == true);
        org.junit.Assert.assertNull(obj80);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + false + "'", boolean84 == false);
        org.junit.Assert.assertNotNull(objSet86);
        org.junit.Assert.assertNotNull(obj87);
        org.junit.Assert.assertEquals(obj87.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj87), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj87), "{}");
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + false + "'", boolean88 == false);
    }

    @Test
    public void test7905() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7905");
        java.util.Properties properties0 = new java.util.Properties();
        boolean boolean2 = properties0.contains((java.lang.Object) 100.0d);
        java.util.Properties properties3 = new java.util.Properties();
        java.lang.Object obj5 = properties3.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration6 = properties3.elements();
        boolean boolean7 = properties3.isEmpty();
        java.util.Set<java.lang.Object> objSet8 = properties3.keySet();
        boolean boolean9 = properties3.isEmpty();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet10 = properties3.entrySet();
        java.util.Properties properties11 = new java.util.Properties();
        java.lang.Object obj13 = properties11.remove((java.lang.Object) 0.0d);
        boolean boolean14 = properties11.isEmpty();
        java.lang.Object obj17 = properties11.setProperty("", "hi!");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties18 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties18.setSerialJtaTransactions(false);
        boolean boolean21 = properties3.remove((java.lang.Object) properties11, (java.lang.Object) atomikosProperties18);
        boolean boolean22 = properties0.equals((java.lang.Object) properties3);
        java.util.Enumeration<java.lang.Object> objEnumeration23 = properties0.elements();
        java.util.Collection<java.lang.Object> objCollection24 = properties0.values();
        java.util.Properties properties25 = new java.util.Properties();
        java.util.Collection<java.lang.Object> objCollection26 = properties25.values();
        java.util.Enumeration<java.lang.Object> objEnumeration27 = properties25.keys();
        java.lang.Object obj30 = properties25.setProperty("{}", "{}");
        java.util.Set<java.lang.String> strSet31 = properties25.stringPropertyNames();
        java.util.Properties properties32 = new java.util.Properties();
        java.lang.Object obj34 = properties32.remove((java.lang.Object) 0.0d);
        boolean boolean35 = properties32.isEmpty();
        java.util.Set<java.lang.String> strSet36 = properties32.stringPropertyNames();
        boolean boolean37 = properties25.containsKey((java.lang.Object) properties32);
        java.util.Enumeration<java.lang.Object> objEnumeration38 = properties32.keys();
        properties0.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties32);
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet40 = properties0.entrySet();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNull(obj5);
        org.junit.Assert.assertNotNull(objEnumeration6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(objSet8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertNotNull(objEntrySet10);
        org.junit.Assert.assertNull(obj13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNull(obj17);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNotNull(objEnumeration23);
        org.junit.Assert.assertNotNull(objCollection24);
        org.junit.Assert.assertNotNull(objCollection26);
        org.junit.Assert.assertNotNull(objEnumeration27);
        org.junit.Assert.assertNull(obj30);
        org.junit.Assert.assertNotNull(strSet31);
        org.junit.Assert.assertNull(obj34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertNotNull(strSet36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(objEnumeration38);
        org.junit.Assert.assertNotNull(objEntrySet40);
    }

    @Test
    public void test7906() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7906");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        java.util.Properties properties3 = new java.util.Properties();
        java.util.Collection<java.lang.Object> objCollection4 = properties3.values();
        java.util.Enumeration<java.lang.Object> objEnumeration5 = properties3.keys();
        java.util.Properties properties6 = new java.util.Properties();
        java.lang.Object obj8 = properties6.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration9 = properties6.elements();
        boolean boolean10 = properties6.isEmpty();
        java.util.Set<java.lang.Object> objSet11 = properties6.keySet();
        java.util.Enumeration<java.lang.Object> objEnumeration12 = properties6.keys();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet13 = properties6.entrySet();
        java.lang.Object obj14 = properties0.put((java.lang.Object) properties3, (java.lang.Object) properties6);
        java.lang.Object obj15 = properties3.clone();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties16 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties16.setSerialJtaTransactions(false);
        atomikosProperties16.setThreadedTwoPhaseCommit(true);
        atomikosProperties16.setMaxTimeout((long) '#');
        boolean boolean23 = atomikosProperties16.isEnableLogging();
        atomikosProperties16.setCheckpointInterval((long) 100);
        atomikosProperties16.setSerialJtaTransactions(true);
        boolean boolean28 = properties3.equals((java.lang.Object) atomikosProperties16);
        java.util.Enumeration<?> wildcardEnumeration29 = properties3.propertyNames();
        java.lang.String str32 = properties3.getProperty("{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=false, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.max_actives=2, com.atomikos.icatch.log_base_name=tmlog}", "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=false, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.service=, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(objCollection4);
        org.junit.Assert.assertNotNull(objEnumeration5);
        org.junit.Assert.assertNull(obj8);
        org.junit.Assert.assertNotNull(objEnumeration9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(objSet11);
        org.junit.Assert.assertNotNull(objEnumeration12);
        org.junit.Assert.assertNotNull(objEntrySet13);
        org.junit.Assert.assertNull(obj14);
        org.junit.Assert.assertNotNull(obj15);
        org.junit.Assert.assertEquals(obj15.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj15), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj15), "{}");
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(wildcardEnumeration29);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=false, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.service=, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}" + "'", str32, "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=false, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.service=, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
    }

    @Test
    public void test7907() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7907");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration3 = properties0.elements();
        boolean boolean4 = properties0.isEmpty();
        java.util.Set<java.lang.Object> objSet5 = properties0.keySet();
        boolean boolean7 = properties0.containsKey((java.lang.Object) (-1.0f));
        java.util.Collection<java.lang.Object> objCollection8 = properties0.values();
        java.util.Properties properties9 = new java.util.Properties();
        java.lang.Object obj11 = properties9.remove((java.lang.Object) 0.0d);
        boolean boolean12 = properties9.isEmpty();
        java.lang.Object obj15 = properties9.setProperty("", "hi!");
        java.util.Properties properties16 = new java.util.Properties();
        java.lang.Object obj18 = properties16.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration19 = properties16.elements();
        boolean boolean20 = properties16.isEmpty();
        java.util.Set<java.lang.Object> objSet21 = properties16.keySet();
        boolean boolean22 = properties16.isEmpty();
        java.util.Properties properties23 = new java.util.Properties();
        java.util.Collection<java.lang.Object> objCollection24 = properties23.values();
        java.util.Enumeration<java.lang.Object> objEnumeration25 = properties23.keys();
        java.lang.Object obj26 = properties16.remove((java.lang.Object) properties23);
        java.lang.Object obj27 = properties9.get((java.lang.Object) properties23);
        java.util.Enumeration<java.lang.Object> objEnumeration28 = properties23.keys();
        java.lang.Object obj29 = properties0.get((java.lang.Object) properties23);
        java.lang.String str30 = properties23.toString();
        java.util.Properties properties31 = new java.util.Properties();
        java.util.Collection<java.lang.Object> objCollection32 = properties31.values();
        int int33 = properties31.size();
        java.util.Properties properties34 = new java.util.Properties();
        java.lang.Object obj36 = properties34.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration37 = properties34.elements();
        boolean boolean38 = properties34.isEmpty();
        java.util.Set<java.lang.Object> objSet39 = properties34.keySet();
        java.util.Enumeration<java.lang.Object> objEnumeration40 = properties34.keys();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet41 = properties34.entrySet();
        java.util.Properties properties43 = new java.util.Properties();
        java.lang.Object obj45 = properties43.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration46 = properties43.elements();
        boolean boolean47 = properties43.isEmpty();
        java.util.Set<java.lang.Object> objSet48 = properties43.keySet();
        boolean boolean49 = properties43.isEmpty();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties50 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties50.setSerialJtaTransactions(false);
        atomikosProperties50.setThreadedTwoPhaseCommit(true);
        atomikosProperties50.setMaxTimeout((long) '#');
        boolean boolean57 = atomikosProperties50.isEnableLogging();
        atomikosProperties50.setCheckpointInterval((long) (byte) -1);
        java.util.Properties properties60 = new java.util.Properties();
        java.util.Properties properties61 = new java.util.Properties();
        java.lang.Object obj63 = properties61.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet64 = properties61.stringPropertyNames();
        boolean boolean65 = properties60.containsValue((java.lang.Object) properties61);
        java.util.Collection<java.lang.Object> objCollection66 = properties60.values();
        java.lang.Object obj67 = properties43.replace((java.lang.Object) atomikosProperties50, (java.lang.Object) objCollection66);
        boolean boolean69 = properties34.replace((java.lang.Object) 100.0d, (java.lang.Object) objCollection66, (java.lang.Object) 10.0d);
        boolean boolean70 = properties31.equals((java.lang.Object) properties34);
        java.util.Properties properties71 = new java.util.Properties();
        java.lang.Object obj73 = properties71.remove((java.lang.Object) 0.0d);
        boolean boolean74 = properties71.isEmpty();
        java.util.Enumeration<java.lang.Object> objEnumeration75 = properties71.elements();
        java.util.Enumeration<java.lang.Object> objEnumeration76 = properties71.elements();
        java.lang.Object obj77 = properties31.remove((java.lang.Object) properties71);
        java.util.Enumeration<java.lang.Object> objEnumeration78 = properties31.keys();
        java.util.Collection<java.lang.Object> objCollection79 = properties31.values();
        java.lang.Object obj80 = properties23.remove((java.lang.Object) properties31);
        java.util.Set<java.lang.Object> objSet81 = properties31.keySet();
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(objEnumeration3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(objSet5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(objCollection8);
        org.junit.Assert.assertNull(obj11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNull(obj15);
        org.junit.Assert.assertNull(obj18);
        org.junit.Assert.assertNotNull(objEnumeration19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNotNull(objSet21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNotNull(objCollection24);
        org.junit.Assert.assertNotNull(objEnumeration25);
        org.junit.Assert.assertNull(obj26);
        org.junit.Assert.assertNull(obj27);
        org.junit.Assert.assertNotNull(objEnumeration28);
        org.junit.Assert.assertNull(obj29);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "{}" + "'", str30, "{}");
        org.junit.Assert.assertNotNull(objCollection32);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 0 + "'", int33 == 0);
        org.junit.Assert.assertNull(obj36);
        org.junit.Assert.assertNotNull(objEnumeration37);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertNotNull(objSet39);
        org.junit.Assert.assertNotNull(objEnumeration40);
        org.junit.Assert.assertNotNull(objEntrySet41);
        org.junit.Assert.assertNull(obj45);
        org.junit.Assert.assertNotNull(objEnumeration46);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertNotNull(objSet48);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertNull(obj63);
        org.junit.Assert.assertNotNull(strSet64);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertNotNull(objCollection66);
        org.junit.Assert.assertNull(obj67);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + true + "'", boolean70 == true);
        org.junit.Assert.assertNull(obj73);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + true + "'", boolean74 == true);
        org.junit.Assert.assertNotNull(objEnumeration75);
        org.junit.Assert.assertNotNull(objEnumeration76);
        org.junit.Assert.assertNull(obj77);
        org.junit.Assert.assertNotNull(objEnumeration78);
        org.junit.Assert.assertNotNull(objCollection79);
        org.junit.Assert.assertNull(obj80);
        org.junit.Assert.assertNotNull(objSet81);
    }

    @Test
    public void test7908() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7908");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration3 = properties0.elements();
        boolean boolean4 = properties0.isEmpty();
        java.util.Set<java.lang.Object> objSet5 = properties0.keySet();
        boolean boolean6 = properties0.isEmpty();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet7 = properties0.entrySet();
        java.util.Properties properties8 = new java.util.Properties();
        java.lang.Object obj10 = properties8.remove((java.lang.Object) 0.0d);
        boolean boolean11 = properties8.isEmpty();
        java.lang.Object obj14 = properties8.setProperty("", "hi!");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties15 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties15.setSerialJtaTransactions(false);
        boolean boolean18 = properties0.remove((java.lang.Object) properties8, (java.lang.Object) atomikosProperties15);
        java.util.Properties properties19 = new java.util.Properties();
        boolean boolean21 = properties19.contains((java.lang.Object) 100.0d);
        java.util.Properties properties22 = new java.util.Properties();
        java.lang.Object obj24 = properties22.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration25 = properties22.elements();
        boolean boolean26 = properties22.isEmpty();
        java.util.Set<java.lang.Object> objSet27 = properties22.keySet();
        boolean boolean28 = properties22.isEmpty();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet29 = properties22.entrySet();
        java.util.Properties properties30 = new java.util.Properties();
        java.lang.Object obj32 = properties30.remove((java.lang.Object) 0.0d);
        boolean boolean33 = properties30.isEmpty();
        java.lang.Object obj36 = properties30.setProperty("", "hi!");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties37 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties37.setSerialJtaTransactions(false);
        boolean boolean40 = properties22.remove((java.lang.Object) properties30, (java.lang.Object) atomikosProperties37);
        boolean boolean41 = properties19.equals((java.lang.Object) properties22);
        java.util.Enumeration<java.lang.Object> objEnumeration42 = properties19.elements();
        java.util.Collection<java.lang.Object> objCollection43 = properties19.values();
        java.util.Enumeration<?> wildcardEnumeration44 = properties19.propertyNames();
        boolean boolean45 = properties0.containsValue((java.lang.Object) wildcardEnumeration44);
        properties0.clear();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties47 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties47.setSerialJtaTransactions(false);
        atomikosProperties47.setThreadedTwoPhaseCommit(true);
        atomikosProperties47.setLogBaseName("{=hi!}");
        java.lang.String str54 = atomikosProperties47.getTransactionManagerUniqueName();
        java.util.Properties properties55 = atomikosProperties47.asProperties();
        java.util.Properties properties56 = new java.util.Properties();
        java.lang.Object obj58 = properties56.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration59 = properties56.elements();
        boolean boolean60 = properties56.isEmpty();
        java.util.Set<java.lang.Object> objSet61 = properties56.keySet();
        boolean boolean63 = properties56.containsKey((java.lang.Object) (-1.0f));
        java.util.Collection<java.lang.Object> objCollection64 = properties56.values();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet65 = properties56.entrySet();
        java.lang.Object obj66 = properties55.remove((java.lang.Object) objEntrySet65);
        java.util.Collection<java.lang.Object> objCollection67 = properties55.values();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties68 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties68.setSerialJtaTransactions(false);
        boolean boolean71 = atomikosProperties68.isSerialJtaTransactions();
        atomikosProperties68.setCheckpointInterval((long) 10);
        atomikosProperties68.setForceShutdownOnVmExit(true);
        atomikosProperties68.setService("{{}={}}");
        atomikosProperties68.setForceShutdownOnVmExit(false);
        boolean boolean80 = properties0.remove((java.lang.Object) properties55, (java.lang.Object) atomikosProperties68);
        java.lang.String str81 = atomikosProperties68.getLogBaseName();
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(objEnumeration3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(objSet5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(objEntrySet7);
        org.junit.Assert.assertNull(obj10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNull(obj14);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNull(obj24);
        org.junit.Assert.assertNotNull(objEnumeration25);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertNotNull(objSet27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNotNull(objEntrySet29);
        org.junit.Assert.assertNull(obj32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNull(obj36);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertNotNull(objEnumeration42);
        org.junit.Assert.assertNotNull(objCollection43);
        org.junit.Assert.assertNotNull(wildcardEnumeration44);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNull(str54);
        org.junit.Assert.assertNotNull(properties55);
        org.junit.Assert.assertNull(obj58);
        org.junit.Assert.assertNotNull(objEnumeration59);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertNotNull(objSet61);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertNotNull(objCollection64);
        org.junit.Assert.assertNotNull(objEntrySet65);
        org.junit.Assert.assertNull(obj66);
        org.junit.Assert.assertNotNull(objCollection67);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", boolean80 == false);
        org.junit.Assert.assertEquals("'" + str81 + "' != '" + "tmlog" + "'", str81, "tmlog");
    }

    @Test
    public void test7909() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7909");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration3 = properties0.elements();
        boolean boolean4 = properties0.isEmpty();
        java.util.Enumeration<java.lang.Object> objEnumeration5 = properties0.elements();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet6 = properties0.entrySet();
        java.util.Set<java.lang.String> strSet7 = properties0.stringPropertyNames();
        java.util.Properties properties8 = new java.util.Properties();
        java.lang.Object obj10 = properties8.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration11 = properties8.elements();
        boolean boolean12 = properties8.isEmpty();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet13 = properties8.entrySet();
        boolean boolean14 = properties0.contains((java.lang.Object) properties8);
        java.util.Properties properties15 = new java.util.Properties();
        java.lang.Object obj17 = properties15.remove((java.lang.Object) 0.0d);
        java.util.Properties properties18 = new java.util.Properties();
        java.util.Collection<java.lang.Object> objCollection19 = properties18.values();
        java.util.Enumeration<java.lang.Object> objEnumeration20 = properties18.keys();
        java.util.Properties properties21 = new java.util.Properties();
        java.lang.Object obj23 = properties21.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration24 = properties21.elements();
        boolean boolean25 = properties21.isEmpty();
        java.util.Set<java.lang.Object> objSet26 = properties21.keySet();
        java.util.Enumeration<java.lang.Object> objEnumeration27 = properties21.keys();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet28 = properties21.entrySet();
        java.lang.Object obj29 = properties15.put((java.lang.Object) properties18, (java.lang.Object) properties21);
        java.lang.Object obj30 = properties18.clone();
        boolean boolean31 = properties0.containsKey((java.lang.Object) properties18);
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet32 = properties18.entrySet();
        java.util.Enumeration<java.lang.Object> objEnumeration33 = properties18.elements();
        java.io.OutputStream outputStream34 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties18.storeToXML(outputStream34, "{true=class org.springframework.boot.jta.atomikos.AtomikosProperties}");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(objEnumeration3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(objEnumeration5);
        org.junit.Assert.assertNotNull(objEntrySet6);
        org.junit.Assert.assertNotNull(strSet7);
        org.junit.Assert.assertNull(obj10);
        org.junit.Assert.assertNotNull(objEnumeration11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(objEntrySet13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNull(obj17);
        org.junit.Assert.assertNotNull(objCollection19);
        org.junit.Assert.assertNotNull(objEnumeration20);
        org.junit.Assert.assertNull(obj23);
        org.junit.Assert.assertNotNull(objEnumeration24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(objSet26);
        org.junit.Assert.assertNotNull(objEnumeration27);
        org.junit.Assert.assertNotNull(objEntrySet28);
        org.junit.Assert.assertNull(obj29);
        org.junit.Assert.assertNotNull(obj30);
        org.junit.Assert.assertEquals(obj30.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj30), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj30), "{}");
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(objEntrySet32);
        org.junit.Assert.assertNotNull(objEnumeration33);
    }

    @Test
    public void test7910() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7910");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setSerialJtaTransactions(false);
        boolean boolean3 = atomikosProperties0.isThreadedTwoPhaseCommit();
        boolean boolean4 = atomikosProperties0.isForceShutdownOnVmExit();
        long long5 = atomikosProperties0.getMaxTimeout();
        long long6 = atomikosProperties0.getDefaultJtaTimeout();
        java.lang.String str7 = atomikosProperties0.getLogBaseDir();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + long5 + "' != '" + 300000L + "'", long5 == 300000L);
        org.junit.Assert.assertTrue("'" + long6 + "' != '" + 10000L + "'", long6 == 10000L);
        org.junit.Assert.assertNull(str7);
    }

    @Test
    public void test7911() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7911");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration3 = properties0.elements();
        boolean boolean4 = properties0.isEmpty();
        java.util.Set<java.lang.Object> objSet5 = properties0.keySet();
        boolean boolean6 = properties0.isEmpty();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet7 = properties0.entrySet();
        java.util.Set<java.lang.Object> objSet8 = properties0.keySet();
        boolean boolean9 = properties0.isEmpty();
        java.util.Enumeration<java.lang.Object> objEnumeration10 = properties0.keys();
        java.io.InputStream inputStream11 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties0.load(inputStream11);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(objEnumeration3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(objSet5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(objEntrySet7);
        org.junit.Assert.assertNotNull(objSet8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertNotNull(objEnumeration10);
    }

    @Test
    public void test7912() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7912");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setSerialJtaTransactions(false);
        atomikosProperties0.setThreadedTwoPhaseCommit(true);
        atomikosProperties0.setEnableLogging(false);
        boolean boolean7 = atomikosProperties0.isSerialJtaTransactions();
        int int8 = atomikosProperties0.getMaxActives();
        boolean boolean9 = atomikosProperties0.isEnableLogging();
        java.lang.String str10 = atomikosProperties0.getService();
        boolean boolean11 = atomikosProperties0.isEnableLogging();
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 50 + "'", int8 == 50);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
    }

    @Test
    public void test7913() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7913");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.lang.String str2 = properties1.toString();
        java.util.Properties properties3 = new java.util.Properties();
        java.lang.Object obj5 = properties3.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration6 = properties3.elements();
        boolean boolean7 = properties3.isEmpty();
        java.util.Set<java.lang.Object> objSet8 = properties3.keySet();
        boolean boolean9 = properties3.isEmpty();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet10 = properties3.entrySet();
        java.util.Properties properties11 = new java.util.Properties();
        java.lang.Object obj13 = properties11.remove((java.lang.Object) 0.0d);
        boolean boolean14 = properties11.isEmpty();
        java.lang.Object obj17 = properties11.setProperty("", "hi!");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties18 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties18.setSerialJtaTransactions(false);
        boolean boolean21 = properties3.remove((java.lang.Object) properties11, (java.lang.Object) atomikosProperties18);
        java.util.Properties properties22 = new java.util.Properties(properties11);
        int int23 = properties22.size();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties25 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties25.setSerialJtaTransactions(false);
        boolean boolean28 = atomikosProperties25.isSerialJtaTransactions();
        java.lang.String str29 = atomikosProperties25.getService();
        boolean boolean30 = atomikosProperties25.isEnableLogging();
        java.lang.String str31 = atomikosProperties25.getTransactionManagerUniqueName();
        boolean boolean32 = properties22.remove((java.lang.Object) (byte) 1, (java.lang.Object) atomikosProperties25);
        atomikosProperties25.setMaxActives((int) (short) -1);
        boolean boolean35 = atomikosProperties25.isForceShutdownOnVmExit();
        boolean boolean36 = atomikosProperties25.isEnableLogging();
        java.lang.String str37 = atomikosProperties25.getService();
        java.lang.String str38 = atomikosProperties25.getService();
        java.lang.String str39 = atomikosProperties25.getService();
        atomikosProperties25.setSerialJtaTransactions(true);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties42 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties42.setSerialJtaTransactions(false);
        atomikosProperties42.setDefaultJtaTimeout((long) (short) -1);
        atomikosProperties42.setTransactionManagerUniqueName("{=hi!}");
        atomikosProperties42.setSerialJtaTransactions(false);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties51 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties51.setSerialJtaTransactions(false);
        boolean boolean54 = atomikosProperties51.isSerialJtaTransactions();
        java.util.Properties properties55 = atomikosProperties51.asProperties();
        java.lang.Object obj58 = properties55.setProperty("hi!", "");
        java.util.Enumeration<java.lang.Object> objEnumeration59 = properties55.elements();
        boolean boolean60 = properties1.replace((java.lang.Object) atomikosProperties25, (java.lang.Object) atomikosProperties42, (java.lang.Object) properties55);
        long long61 = atomikosProperties25.getDefaultJtaTimeout();
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "{}" + "'", str2, "{}");
        org.junit.Assert.assertNull(obj5);
        org.junit.Assert.assertNotNull(objEnumeration6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(objSet8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertNotNull(objEntrySet10);
        org.junit.Assert.assertNull(obj13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNull(obj17);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 0 + "'", int23 == 0);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNull(str29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNull(str31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNull(str37);
        org.junit.Assert.assertNull(str38);
        org.junit.Assert.assertNull(str39);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertNotNull(properties55);
        org.junit.Assert.assertNull(obj58);
        org.junit.Assert.assertNotNull(objEnumeration59);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertTrue("'" + long61 + "' != '" + 10000L + "'", long61 == 10000L);
    }

    @Test
    public void test7914() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7914");
        java.util.Properties properties0 = new java.util.Properties();
        java.util.Collection<java.lang.Object> objCollection1 = properties0.values();
        java.util.Enumeration<java.lang.Object> objEnumeration2 = properties0.keys();
        properties0.clear();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties4 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties4.setSerialJtaTransactions(false);
        boolean boolean7 = atomikosProperties4.isSerialJtaTransactions();
        boolean boolean8 = atomikosProperties4.isEnableLogging();
        atomikosProperties4.setService("");
        java.util.Properties properties11 = atomikosProperties4.asProperties();
        boolean boolean12 = properties0.containsValue((java.lang.Object) properties11);
        java.lang.String str15 = properties11.getProperty("{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=false, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=true, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}", "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=false, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=true, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
        org.junit.Assert.assertNotNull(objCollection1);
        org.junit.Assert.assertNotNull(objEnumeration2);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(properties11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=false, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=true, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}" + "'", str15, "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=false, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=true, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
    }

    @Test
    public void test7915() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7915");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration3 = properties0.elements();
        boolean boolean4 = properties0.isEmpty();
        java.util.Set<java.lang.Object> objSet5 = properties0.keySet();
        boolean boolean6 = properties0.isEmpty();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet7 = properties0.entrySet();
        java.util.Properties properties8 = new java.util.Properties();
        java.lang.Object obj10 = properties8.remove((java.lang.Object) 0.0d);
        boolean boolean11 = properties8.isEmpty();
        java.lang.Object obj14 = properties8.setProperty("", "hi!");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties15 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties15.setSerialJtaTransactions(false);
        boolean boolean18 = properties0.remove((java.lang.Object) properties8, (java.lang.Object) atomikosProperties15);
        java.util.Properties properties19 = new java.util.Properties(properties8);
        int int20 = properties19.size();
        java.util.Enumeration<java.lang.Object> objEnumeration21 = properties19.elements();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties22 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties22.setSerialJtaTransactions(false);
        boolean boolean25 = atomikosProperties22.isSerialJtaTransactions();
        java.lang.String str26 = atomikosProperties22.getService();
        atomikosProperties22.setEnableLogging(false);
        java.util.Properties properties29 = atomikosProperties22.asProperties();
        atomikosProperties22.setCheckpointInterval((long) 1);
        boolean boolean32 = properties19.containsValue((java.lang.Object) atomikosProperties22);
        java.lang.String str33 = properties19.toString();
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(objEnumeration3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(objSet5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(objEntrySet7);
        org.junit.Assert.assertNull(obj10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNull(obj14);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 0 + "'", int20 == 0);
        org.junit.Assert.assertNotNull(objEnumeration21);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNull(str26);
        org.junit.Assert.assertNotNull(properties29);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "{}" + "'", str33, "{}");
    }

    @Test
    public void test7916() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7916");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration3 = properties0.elements();
        boolean boolean4 = properties0.isEmpty();
        java.util.Set<java.lang.Object> objSet5 = properties0.keySet();
        boolean boolean6 = properties0.isEmpty();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet7 = properties0.entrySet();
        java.util.Enumeration<java.lang.Object> objEnumeration8 = properties0.keys();
        java.util.Properties properties9 = new java.util.Properties();
        java.lang.Object obj11 = properties9.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration12 = properties9.elements();
        boolean boolean13 = properties9.isEmpty();
        java.util.Set<java.lang.Object> objSet14 = properties9.keySet();
        boolean boolean15 = properties9.isEmpty();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet16 = properties9.entrySet();
        java.util.Properties properties17 = new java.util.Properties();
        java.lang.Object obj19 = properties17.remove((java.lang.Object) 0.0d);
        boolean boolean20 = properties17.isEmpty();
        java.lang.Object obj23 = properties17.setProperty("", "hi!");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties24 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties24.setSerialJtaTransactions(false);
        boolean boolean27 = properties9.remove((java.lang.Object) properties17, (java.lang.Object) atomikosProperties24);
        java.util.Properties properties28 = new java.util.Properties(properties17);
        int int29 = properties28.size();
        int int30 = properties28.size();
        java.util.Properties properties31 = new java.util.Properties();
        java.lang.Object obj32 = properties28.get((java.lang.Object) properties31);
        properties0.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties31);
        java.util.Properties properties34 = new java.util.Properties();
        java.lang.Object obj36 = properties34.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet37 = properties34.stringPropertyNames();
        java.lang.String str38 = properties34.toString();
        java.util.Properties properties39 = new java.util.Properties();
        java.lang.Object obj41 = properties39.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration42 = properties39.elements();
        boolean boolean43 = properties39.isEmpty();
        java.lang.Object obj46 = properties39.setProperty("tmlog", "");
        properties34.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties39);
        java.lang.Object obj48 = properties39.clone();
        java.util.Properties properties49 = new java.util.Properties();
        java.lang.Object obj51 = properties49.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration52 = properties49.elements();
        boolean boolean53 = properties49.isEmpty();
        java.util.Set<java.lang.Object> objSet54 = properties49.keySet();
        java.util.Enumeration<java.lang.Object> objEnumeration55 = properties49.keys();
        java.util.Enumeration<java.lang.Object> objEnumeration56 = properties49.elements();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties57 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties57.setSerialJtaTransactions(false);
        boolean boolean60 = atomikosProperties57.isSerialJtaTransactions();
        java.lang.String str61 = atomikosProperties57.getService();
        boolean boolean62 = atomikosProperties57.isEnableLogging();
        atomikosProperties57.setCheckpointInterval((long) (byte) 100);
        java.lang.String str65 = atomikosProperties57.getLogBaseName();
        boolean boolean66 = properties49.contains((java.lang.Object) atomikosProperties57);
        boolean boolean67 = properties39.containsValue((java.lang.Object) atomikosProperties57);
        boolean boolean68 = properties31.contains((java.lang.Object) boolean67);
        boolean boolean69 = properties31.isEmpty();
        java.util.Set<java.lang.String> strSet70 = properties31.stringPropertyNames();
        java.lang.Object obj73 = properties31.setProperty("{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=false, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.max_actives=2, com.atomikos.icatch.log_base_name=tmlog}", "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=false, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.tm_unique_name=tmlog, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(objEnumeration3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(objSet5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(objEntrySet7);
        org.junit.Assert.assertNotNull(objEnumeration8);
        org.junit.Assert.assertNull(obj11);
        org.junit.Assert.assertNotNull(objEnumeration12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(objSet14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(objEntrySet16);
        org.junit.Assert.assertNull(obj19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNull(obj23);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 0 + "'", int29 == 0);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 0 + "'", int30 == 0);
        org.junit.Assert.assertNull(obj32);
        org.junit.Assert.assertNull(obj36);
        org.junit.Assert.assertNotNull(strSet37);
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "{}" + "'", str38, "{}");
        org.junit.Assert.assertNull(obj41);
        org.junit.Assert.assertNotNull(objEnumeration42);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNull(obj46);
        org.junit.Assert.assertNotNull(obj48);
        org.junit.Assert.assertEquals(obj48.toString(), "{tmlog=}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj48), "{tmlog=}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj48), "{tmlog=}");
        org.junit.Assert.assertNull(obj51);
        org.junit.Assert.assertNotNull(objEnumeration52);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertNotNull(objSet54);
        org.junit.Assert.assertNotNull(objEnumeration55);
        org.junit.Assert.assertNotNull(objEnumeration56);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertNull(str61);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + true + "'", boolean62 == true);
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "tmlog" + "'", str65, "tmlog");
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + true + "'", boolean69 == true);
        org.junit.Assert.assertNotNull(strSet70);
        org.junit.Assert.assertNull(obj73);
    }

    @Test
    public void test7917() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7917");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setSerialJtaTransactions(false);
        boolean boolean3 = atomikosProperties0.isSerialJtaTransactions();
        java.lang.String str4 = atomikosProperties0.getService();
        boolean boolean5 = atomikosProperties0.isEnableLogging();
        java.util.Properties properties6 = atomikosProperties0.asProperties();
        atomikosProperties0.setForceShutdownOnVmExit(true);
        atomikosProperties0.setMaxActives((int) (short) -1);
        atomikosProperties0.setMaxTimeout((long) ' ');
        atomikosProperties0.setMaxActives(9);
        boolean boolean15 = atomikosProperties0.isEnableLogging();
        atomikosProperties0.setLogBaseDir("{true=true}");
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNotNull(properties6);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
    }

    @Test
    public void test7918() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7918");
        java.util.Properties properties0 = new java.util.Properties();
        java.util.Collection<java.lang.Object> objCollection1 = properties0.values();
        java.util.Enumeration<java.lang.Object> objEnumeration2 = properties0.keys();
        java.lang.Object obj5 = properties0.setProperty("{}", "{}");
        java.util.Set<java.lang.String> strSet6 = properties0.stringPropertyNames();
        java.util.Properties properties7 = new java.util.Properties();
        boolean boolean9 = properties7.contains((java.lang.Object) 100.0d);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties10 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties10.setSerialJtaTransactions(false);
        atomikosProperties10.setThreadedTwoPhaseCommit(true);
        atomikosProperties10.setSerialJtaTransactions(false);
        java.lang.String str17 = atomikosProperties10.getService();
        boolean boolean18 = properties7.containsKey((java.lang.Object) atomikosProperties10);
        boolean boolean19 = properties0.containsKey((java.lang.Object) properties7);
        java.lang.String str21 = properties0.getProperty("");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties22 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties22.setSerialJtaTransactions(false);
        atomikosProperties22.setThreadedTwoPhaseCommit(true);
        atomikosProperties22.setMaxTimeout((long) '#');
        boolean boolean29 = atomikosProperties22.isEnableLogging();
        atomikosProperties22.setCheckpointInterval((long) (byte) -1);
        atomikosProperties22.setMaxActives((int) (byte) 100);
        atomikosProperties22.setForceShutdownOnVmExit(false);
        boolean boolean36 = properties0.contains((java.lang.Object) false);
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet37 = properties0.entrySet();
        java.lang.Object obj40 = properties0.setProperty("hi!", "{hi!=[]}");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties41 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties41.setSerialJtaTransactions(false);
        boolean boolean44 = atomikosProperties41.isSerialJtaTransactions();
        atomikosProperties41.setTransactionManagerUniqueName("tmlog");
        java.util.Properties properties47 = atomikosProperties41.asProperties();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties48 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties48.setSerialJtaTransactions(false);
        boolean boolean51 = atomikosProperties48.isSerialJtaTransactions();
        atomikosProperties48.setTransactionManagerUniqueName("hi!");
        boolean boolean54 = atomikosProperties48.isEnableLogging();
        java.lang.String str55 = atomikosProperties48.getTransactionManagerUniqueName();
        atomikosProperties48.setCheckpointInterval(1L);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties58 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties58.setSerialJtaTransactions(false);
        atomikosProperties58.setThreadedTwoPhaseCommit(true);
        atomikosProperties58.setThreadedTwoPhaseCommit(true);
        java.util.Properties properties65 = atomikosProperties58.asProperties();
        int int66 = atomikosProperties58.getMaxActives();
        atomikosProperties58.setService("hi!");
        long long69 = atomikosProperties58.getMaxTimeout();
        atomikosProperties58.setTransactionManagerUniqueName("hi!");
        java.util.Properties properties72 = atomikosProperties58.asProperties();
        java.lang.Object obj73 = properties47.getOrDefault((java.lang.Object) atomikosProperties48, (java.lang.Object) properties72);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties74 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties74.setSerialJtaTransactions(false);
        atomikosProperties74.setThreadedTwoPhaseCommit(true);
        atomikosProperties74.setMaxTimeout((long) '#');
        java.lang.String str81 = atomikosProperties74.getLogBaseDir();
        atomikosProperties74.setForceShutdownOnVmExit(false);
        long long84 = atomikosProperties74.getMaxTimeout();
        atomikosProperties74.setLogBaseName("tmlog");
        atomikosProperties74.setService("{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=false, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=true, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
        boolean boolean89 = properties0.remove((java.lang.Object) atomikosProperties48, (java.lang.Object) atomikosProperties74);
        java.lang.String str90 = atomikosProperties74.getLogBaseName();
        org.junit.Assert.assertNotNull(objCollection1);
        org.junit.Assert.assertNotNull(objEnumeration2);
        org.junit.Assert.assertNull(obj5);
        org.junit.Assert.assertNotNull(strSet6);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNull(str17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNull(str21);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(objEntrySet37);
        org.junit.Assert.assertNull(obj40);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(properties47);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "hi!" + "'", str55, "hi!");
        org.junit.Assert.assertNotNull(properties65);
        org.junit.Assert.assertTrue("'" + int66 + "' != '" + 50 + "'", int66 == 50);
        org.junit.Assert.assertTrue("'" + long69 + "' != '" + 300000L + "'", long69 == 300000L);
        org.junit.Assert.assertNotNull(properties72);
        org.junit.Assert.assertNotNull(obj73);
// flaky:         org.junit.Assert.assertEquals(obj73.toString(), "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=false, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.service=hi!, com.atomikos.icatch.threaded_2pc=true, com.atomikos.icatch.tm_unique_name=hi!, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
// flaky:         org.junit.Assert.assertEquals(java.lang.String.valueOf(obj73), "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=false, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.service=hi!, com.atomikos.icatch.threaded_2pc=true, com.atomikos.icatch.tm_unique_name=hi!, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
// flaky:         org.junit.Assert.assertEquals(java.util.Objects.toString(obj73), "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=false, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.service=hi!, com.atomikos.icatch.threaded_2pc=true, com.atomikos.icatch.tm_unique_name=hi!, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
        org.junit.Assert.assertNull(str81);
        org.junit.Assert.assertTrue("'" + long84 + "' != '" + 35L + "'", long84 == 35L);
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + false + "'", boolean89 == false);
        org.junit.Assert.assertEquals("'" + str90 + "' != '" + "tmlog" + "'", str90, "tmlog");
    }

    @Test
    public void test7919() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7919");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration3 = properties0.elements();
        boolean boolean4 = properties0.isEmpty();
        java.util.Set<java.lang.Object> objSet5 = properties0.keySet();
        java.lang.Object obj6 = properties0.clone();
        java.util.Properties properties7 = new java.util.Properties();
        java.util.Properties properties8 = new java.util.Properties();
        java.lang.Object obj10 = properties8.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet11 = properties8.stringPropertyNames();
        boolean boolean12 = properties7.containsValue((java.lang.Object) properties8);
        java.util.Collection<java.lang.Object> objCollection13 = properties7.values();
        java.lang.Object obj14 = properties7.clone();
        java.util.Properties properties15 = new java.util.Properties();
        java.lang.Object obj17 = properties15.remove((java.lang.Object) 0.0d);
        boolean boolean19 = properties15.containsValue((java.lang.Object) "hi!");
        java.lang.Object obj22 = properties15.put((java.lang.Object) (byte) -1, (java.lang.Object) 100L);
        java.util.Properties properties23 = new java.util.Properties();
        java.util.Properties properties24 = new java.util.Properties();
        java.lang.Object obj26 = properties24.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet27 = properties24.stringPropertyNames();
        boolean boolean28 = properties23.containsValue((java.lang.Object) properties24);
        java.util.Collection<java.lang.Object> objCollection29 = properties23.values();
        java.util.Properties properties31 = new java.util.Properties();
        java.lang.Object obj33 = properties31.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration34 = properties31.elements();
        boolean boolean35 = properties31.isEmpty();
        java.util.Set<java.lang.Object> objSet36 = properties31.keySet();
        java.lang.Object obj37 = properties23.putIfAbsent((java.lang.Object) "hi!", (java.lang.Object) objSet36);
        java.util.Set<java.lang.Object> objSet38 = properties23.keySet();
        boolean boolean39 = properties15.containsKey((java.lang.Object) properties23);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties40 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties40.setSerialJtaTransactions(false);
        boolean boolean43 = atomikosProperties40.isSerialJtaTransactions();
        atomikosProperties40.setCheckpointInterval((long) 10);
        atomikosProperties40.setForceShutdownOnVmExit(true);
        boolean boolean48 = properties0.replace((java.lang.Object) properties7, (java.lang.Object) properties15, (java.lang.Object) true);
        java.lang.String str49 = properties7.toString();
        properties7.clear();
        java.lang.Object obj51 = properties7.clone();
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(objEnumeration3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(objSet5);
        org.junit.Assert.assertNotNull(obj6);
        org.junit.Assert.assertEquals(obj6.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj6), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj6), "{}");
        org.junit.Assert.assertNull(obj10);
        org.junit.Assert.assertNotNull(strSet11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(objCollection13);
        org.junit.Assert.assertNotNull(obj14);
        org.junit.Assert.assertEquals(obj14.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj14), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj14), "{}");
        org.junit.Assert.assertNull(obj17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNull(obj22);
        org.junit.Assert.assertNull(obj26);
        org.junit.Assert.assertNotNull(strSet27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(objCollection29);
        org.junit.Assert.assertNull(obj33);
        org.junit.Assert.assertNotNull(objEnumeration34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertNotNull(objSet36);
        org.junit.Assert.assertNull(obj37);
        org.junit.Assert.assertNotNull(objSet38);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "{}" + "'", str49, "{}");
        org.junit.Assert.assertNotNull(obj51);
        org.junit.Assert.assertEquals(obj51.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj51), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj51), "{}");
    }

    @Test
    public void test7920() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7920");
        java.util.Properties properties0 = new java.util.Properties();
        java.util.Properties properties1 = new java.util.Properties();
        java.lang.Object obj3 = properties1.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet4 = properties1.stringPropertyNames();
        boolean boolean5 = properties0.containsValue((java.lang.Object) properties1);
        boolean boolean6 = properties1.isEmpty();
        java.util.Properties properties7 = new java.util.Properties(properties1);
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet8 = properties7.entrySet();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet9 = properties7.entrySet();
        java.lang.Object obj10 = null;
        boolean boolean11 = properties7.equals(obj10);
        org.junit.Assert.assertNull(obj3);
        org.junit.Assert.assertNotNull(strSet4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(objEntrySet8);
        org.junit.Assert.assertNotNull(objEntrySet9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
    }

    @Test
    public void test7921() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7921");
        java.util.Properties properties0 = new java.util.Properties();
        boolean boolean2 = properties0.contains((java.lang.Object) 100.0d);
        java.util.Properties properties3 = new java.util.Properties();
        java.lang.Object obj5 = properties3.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration6 = properties3.elements();
        boolean boolean7 = properties3.isEmpty();
        java.util.Set<java.lang.Object> objSet8 = properties3.keySet();
        boolean boolean9 = properties3.isEmpty();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet10 = properties3.entrySet();
        java.util.Properties properties11 = new java.util.Properties();
        java.lang.Object obj13 = properties11.remove((java.lang.Object) 0.0d);
        boolean boolean14 = properties11.isEmpty();
        java.lang.Object obj17 = properties11.setProperty("", "hi!");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties18 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties18.setSerialJtaTransactions(false);
        boolean boolean21 = properties3.remove((java.lang.Object) properties11, (java.lang.Object) atomikosProperties18);
        boolean boolean22 = properties0.equals((java.lang.Object) properties3);
        java.util.Enumeration<?> wildcardEnumeration23 = properties3.propertyNames();
        java.lang.String str25 = properties3.getProperty("{=hi!}");
        java.lang.String str26 = properties3.toString();
        properties3.clear();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties28 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties28.setSerialJtaTransactions(false);
        atomikosProperties28.setThreadedTwoPhaseCommit(true);
        atomikosProperties28.setEnableLogging(false);
        boolean boolean35 = atomikosProperties28.isSerialJtaTransactions();
        int int36 = atomikosProperties28.getMaxActives();
        boolean boolean37 = atomikosProperties28.isEnableLogging();
        long long38 = atomikosProperties28.getCheckpointInterval();
        java.util.Properties properties39 = atomikosProperties28.asProperties();
        atomikosProperties28.setSerialJtaTransactions(false);
        int int42 = atomikosProperties28.getMaxActives();
        long long43 = atomikosProperties28.getMaxTimeout();
        java.util.Properties properties44 = atomikosProperties28.asProperties();
        int int45 = properties44.size();
        java.lang.Object obj46 = properties3.get((java.lang.Object) properties44);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNull(obj5);
        org.junit.Assert.assertNotNull(objEnumeration6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(objSet8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertNotNull(objEntrySet10);
        org.junit.Assert.assertNull(obj13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNull(obj17);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNotNull(wildcardEnumeration23);
        org.junit.Assert.assertNull(str25);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "{}" + "'", str26, "{}");
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 50 + "'", int36 == 50);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertTrue("'" + long38 + "' != '" + 500L + "'", long38 == 500L);
        org.junit.Assert.assertNotNull(properties39);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 50 + "'", int42 == 50);
        org.junit.Assert.assertTrue("'" + long43 + "' != '" + 300000L + "'", long43 == 300000L);
        org.junit.Assert.assertNotNull(properties44);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 9 + "'", int45 == 9);
        org.junit.Assert.assertNull(obj46);
    }

    @Test
    public void test7922() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7922");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setSerialJtaTransactions(false);
        atomikosProperties0.setThreadedTwoPhaseCommit(true);
        atomikosProperties0.setMaxTimeout((long) '#');
        long long7 = atomikosProperties0.getCheckpointInterval();
        atomikosProperties0.setMaxTimeout((long) (byte) 100);
        atomikosProperties0.setThreadedTwoPhaseCommit(false);
        java.lang.String str12 = atomikosProperties0.getLogBaseDir();
        java.lang.String str13 = atomikosProperties0.getLogBaseName();
        atomikosProperties0.setService("{tmlog=}");
        atomikosProperties0.setThreadedTwoPhaseCommit(false);
        atomikosProperties0.setTransactionManagerUniqueName("{true=class org.springframework.boot.jta.atomikos.AtomikosProperties}");
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + 500L + "'", long7 == 500L);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "tmlog" + "'", str13, "tmlog");
    }

    @Test
    public void test7923() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7923");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setSerialJtaTransactions(false);
        atomikosProperties0.setThreadedTwoPhaseCommit(true);
        atomikosProperties0.setEnableLogging(false);
        atomikosProperties0.setForceShutdownOnVmExit(true);
        atomikosProperties0.setService("{{}={}}");
        atomikosProperties0.setLogBaseDir("");
        atomikosProperties0.setEnableLogging(false);
        atomikosProperties0.setLogBaseName("{true=class org.springframework.boot.jta.atomikos.AtomikosProperties}");
        long long17 = atomikosProperties0.getDefaultJtaTimeout();
        java.lang.String str18 = atomikosProperties0.getLogBaseDir();
        org.junit.Assert.assertTrue("'" + long17 + "' != '" + 10000L + "'", long17 == 10000L);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "" + "'", str18, "");
    }

    @Test
    public void test7924() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7924");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setSerialJtaTransactions(false);
        atomikosProperties0.setThreadedTwoPhaseCommit(true);
        atomikosProperties0.setThreadedTwoPhaseCommit(true);
        long long7 = atomikosProperties0.getMaxTimeout();
        java.lang.String str8 = atomikosProperties0.getLogBaseName();
        long long9 = atomikosProperties0.getMaxTimeout();
        boolean boolean10 = atomikosProperties0.isEnableLogging();
        java.lang.String str11 = atomikosProperties0.getLogBaseName();
        long long12 = atomikosProperties0.getMaxTimeout();
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + 300000L + "'", long7 == 300000L);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "tmlog" + "'", str8, "tmlog");
        org.junit.Assert.assertTrue("'" + long9 + "' != '" + 300000L + "'", long9 == 300000L);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "tmlog" + "'", str11, "tmlog");
        org.junit.Assert.assertTrue("'" + long12 + "' != '" + 300000L + "'", long12 == 300000L);
    }

    @Test
    public void test7925() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7925");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setSerialJtaTransactions(false);
        atomikosProperties0.setThreadedTwoPhaseCommit(true);
        atomikosProperties0.setMaxTimeout((long) '#');
        boolean boolean7 = atomikosProperties0.isEnableLogging();
        atomikosProperties0.setMaxActives((int) '#');
        atomikosProperties0.setSerialJtaTransactions(true);
        atomikosProperties0.setThreadedTwoPhaseCommit(true);
        atomikosProperties0.setMaxActives((int) (byte) 10);
        atomikosProperties0.setService("");
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
    }

    @Test
    public void test7926() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7926");
        java.util.Properties properties0 = new java.util.Properties();
        java.util.Collection<java.lang.Object> objCollection1 = properties0.values();
        java.util.Enumeration<java.lang.Object> objEnumeration2 = properties0.keys();
        java.lang.Object obj5 = properties0.setProperty("{}", "{}");
        java.util.Set<java.lang.String> strSet6 = properties0.stringPropertyNames();
        java.util.Properties properties7 = new java.util.Properties();
        boolean boolean9 = properties7.contains((java.lang.Object) 100.0d);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties10 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties10.setSerialJtaTransactions(false);
        atomikosProperties10.setThreadedTwoPhaseCommit(true);
        atomikosProperties10.setSerialJtaTransactions(false);
        java.lang.String str17 = atomikosProperties10.getService();
        boolean boolean18 = properties7.containsKey((java.lang.Object) atomikosProperties10);
        boolean boolean19 = properties0.containsKey((java.lang.Object) properties7);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties20 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties20.setSerialJtaTransactions(false);
        boolean boolean23 = atomikosProperties20.isSerialJtaTransactions();
        atomikosProperties20.setTransactionManagerUniqueName("hi!");
        java.lang.String str26 = atomikosProperties20.getLogBaseName();
        java.lang.String str27 = atomikosProperties20.getLogBaseName();
        long long28 = atomikosProperties20.getDefaultJtaTimeout();
        java.util.Properties properties29 = new java.util.Properties();
        java.lang.Object obj31 = properties29.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration32 = properties29.elements();
        boolean boolean33 = properties29.isEmpty();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet34 = properties29.entrySet();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties36 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties36.setSerialJtaTransactions(false);
        atomikosProperties36.setThreadedTwoPhaseCommit(true);
        atomikosProperties36.setMaxTimeout((long) '#');
        boolean boolean43 = atomikosProperties36.isForceShutdownOnVmExit();
        java.lang.Object obj44 = properties29.put((java.lang.Object) (short) 1, (java.lang.Object) atomikosProperties36);
        atomikosProperties36.setForceShutdownOnVmExit(true);
        java.util.Properties properties47 = atomikosProperties36.asProperties();
        java.lang.Object obj48 = properties0.getOrDefault((java.lang.Object) atomikosProperties20, (java.lang.Object) properties47);
        atomikosProperties20.setThreadedTwoPhaseCommit(true);
        atomikosProperties20.setThreadedTwoPhaseCommit(false);
        java.util.Properties properties53 = atomikosProperties20.asProperties();
        boolean boolean54 = properties53.isEmpty();
        org.junit.Assert.assertNotNull(objCollection1);
        org.junit.Assert.assertNotNull(objEnumeration2);
        org.junit.Assert.assertNull(obj5);
        org.junit.Assert.assertNotNull(strSet6);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNull(str17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "tmlog" + "'", str26, "tmlog");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "tmlog" + "'", str27, "tmlog");
        org.junit.Assert.assertTrue("'" + long28 + "' != '" + 10000L + "'", long28 == 10000L);
        org.junit.Assert.assertNull(obj31);
        org.junit.Assert.assertNotNull(objEnumeration32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNotNull(objEntrySet34);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNull(obj44);
        org.junit.Assert.assertNotNull(properties47);
        org.junit.Assert.assertNotNull(obj48);
// flaky:         org.junit.Assert.assertEquals(obj48.toString(), "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=true, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=false, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=35, com.atomikos.icatch.threaded_2pc=true, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
// flaky:         org.junit.Assert.assertEquals(java.lang.String.valueOf(obj48), "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=true, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=false, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=35, com.atomikos.icatch.threaded_2pc=true, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
// flaky:         org.junit.Assert.assertEquals(java.util.Objects.toString(obj48), "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=true, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=false, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=35, com.atomikos.icatch.threaded_2pc=true, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
        org.junit.Assert.assertNotNull(properties53);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
    }

    @Test
    public void test7927() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7927");
        java.util.Properties properties0 = new java.util.Properties();
        java.util.Collection<java.lang.Object> objCollection1 = properties0.values();
        int int2 = properties0.size();
        java.util.Properties properties3 = new java.util.Properties(properties0);
        java.util.Collection<java.lang.Object> objCollection4 = properties3.values();
        java.util.Properties properties5 = new java.util.Properties();
        java.lang.Object obj7 = properties5.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration8 = properties5.elements();
        boolean boolean9 = properties5.isEmpty();
        java.util.Set<java.lang.Object> objSet10 = properties5.keySet();
        java.util.Enumeration<java.lang.Object> objEnumeration11 = properties5.keys();
        java.lang.String str13 = properties5.getProperty("hi!");
        java.util.Properties properties15 = new java.util.Properties();
        java.lang.Object obj17 = properties15.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration18 = properties15.elements();
        int int19 = properties15.size();
        java.util.Properties properties20 = new java.util.Properties(properties15);
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet21 = properties15.entrySet();
        java.util.Properties properties22 = new java.util.Properties();
        java.util.Properties properties23 = new java.util.Properties();
        java.lang.Object obj25 = properties23.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet26 = properties23.stringPropertyNames();
        boolean boolean27 = properties22.containsValue((java.lang.Object) properties23);
        java.util.Collection<java.lang.Object> objCollection28 = properties22.values();
        java.util.Properties properties30 = new java.util.Properties();
        java.lang.Object obj32 = properties30.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration33 = properties30.elements();
        boolean boolean34 = properties30.isEmpty();
        java.util.Set<java.lang.Object> objSet35 = properties30.keySet();
        java.lang.Object obj36 = properties22.putIfAbsent((java.lang.Object) "hi!", (java.lang.Object) objSet35);
        boolean boolean37 = properties5.replace((java.lang.Object) "hi!", (java.lang.Object) properties15, (java.lang.Object) "hi!");
        java.util.Set<java.lang.String> strSet38 = properties15.stringPropertyNames();
        java.util.Properties properties39 = new java.util.Properties();
        java.lang.Object obj41 = properties39.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration42 = properties39.elements();
        int int43 = properties39.size();
        java.util.Properties properties44 = new java.util.Properties(properties39);
        java.util.Set<java.lang.String> strSet45 = properties39.stringPropertyNames();
        java.util.Set<java.lang.String> strSet46 = properties39.stringPropertyNames();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties47 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties47.setSerialJtaTransactions(false);
        atomikosProperties47.setThreadedTwoPhaseCommit(true);
        atomikosProperties47.setMaxTimeout((long) '#');
        boolean boolean54 = atomikosProperties47.isEnableLogging();
        atomikosProperties47.setCheckpointInterval((long) (byte) -1);
        atomikosProperties47.setEnableLogging(true);
        atomikosProperties47.setLogBaseName("{}");
        long long61 = atomikosProperties47.getDefaultJtaTimeout();
        java.lang.Object obj62 = properties15.putIfAbsent((java.lang.Object) properties39, (java.lang.Object) atomikosProperties47);
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet63 = properties15.entrySet();
        java.util.Properties properties64 = new java.util.Properties();
        java.lang.Object obj66 = properties64.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet67 = properties64.stringPropertyNames();
        java.util.Properties properties68 = new java.util.Properties();
        java.util.Properties properties69 = new java.util.Properties();
        java.lang.Object obj71 = properties69.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet72 = properties69.stringPropertyNames();
        boolean boolean73 = properties68.containsValue((java.lang.Object) properties69);
        java.util.Collection<java.lang.Object> objCollection74 = properties68.values();
        java.util.Enumeration<?> wildcardEnumeration75 = properties68.propertyNames();
        java.lang.Object obj77 = properties64.put((java.lang.Object) wildcardEnumeration75, (java.lang.Object) 10.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration78 = properties64.elements();
        java.util.Properties properties80 = new java.util.Properties();
        java.lang.Object obj82 = properties80.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration83 = properties80.elements();
        boolean boolean84 = properties80.isEmpty();
        java.util.Set<java.lang.Object> objSet85 = properties80.keySet();
        java.util.Enumeration<java.lang.Object> objEnumeration86 = properties80.keys();
        boolean boolean88 = properties80.equals((java.lang.Object) "");
        java.lang.String str89 = properties80.toString();
        java.lang.Object obj90 = properties64.put((java.lang.Object) 'a', (java.lang.Object) properties80);
        boolean boolean91 = properties15.contains((java.lang.Object) properties64);
        properties3.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties15);
        int int93 = properties15.size();
        java.util.Enumeration<java.lang.Object> objEnumeration94 = properties15.elements();
        java.lang.Object obj95 = properties15.clone();
        java.io.InputStream inputStream96 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties15.loadFromXML(inputStream96);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(objCollection1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertNotNull(objCollection4);
        org.junit.Assert.assertNull(obj7);
        org.junit.Assert.assertNotNull(objEnumeration8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertNotNull(objSet10);
        org.junit.Assert.assertNotNull(objEnumeration11);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertNull(obj17);
        org.junit.Assert.assertNotNull(objEnumeration18);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 0 + "'", int19 == 0);
        org.junit.Assert.assertNotNull(objEntrySet21);
        org.junit.Assert.assertNull(obj25);
        org.junit.Assert.assertNotNull(strSet26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(objCollection28);
        org.junit.Assert.assertNull(obj32);
        org.junit.Assert.assertNotNull(objEnumeration33);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertNotNull(objSet35);
        org.junit.Assert.assertNull(obj36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(strSet38);
        org.junit.Assert.assertNull(obj41);
        org.junit.Assert.assertNotNull(objEnumeration42);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 0 + "'", int43 == 0);
        org.junit.Assert.assertNotNull(strSet45);
        org.junit.Assert.assertNotNull(strSet46);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertTrue("'" + long61 + "' != '" + 10000L + "'", long61 == 10000L);
        org.junit.Assert.assertNull(obj62);
        org.junit.Assert.assertNotNull(objEntrySet63);
        org.junit.Assert.assertNull(obj66);
        org.junit.Assert.assertNotNull(strSet67);
        org.junit.Assert.assertNull(obj71);
        org.junit.Assert.assertNotNull(strSet72);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertNotNull(objCollection74);
        org.junit.Assert.assertNotNull(wildcardEnumeration75);
        org.junit.Assert.assertNull(obj77);
        org.junit.Assert.assertNotNull(objEnumeration78);
        org.junit.Assert.assertNull(obj82);
        org.junit.Assert.assertNotNull(objEnumeration83);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + true + "'", boolean84 == true);
        org.junit.Assert.assertNotNull(objSet85);
        org.junit.Assert.assertNotNull(objEnumeration86);
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + false + "'", boolean88 == false);
        org.junit.Assert.assertEquals("'" + str89 + "' != '" + "{}" + "'", str89, "{}");
        org.junit.Assert.assertNull(obj90);
        org.junit.Assert.assertTrue("'" + boolean91 + "' != '" + false + "'", boolean91 == false);
        org.junit.Assert.assertTrue("'" + int93 + "' != '" + 1 + "'", int93 == 1);
        org.junit.Assert.assertNotNull(objEnumeration94);
        org.junit.Assert.assertNotNull(obj95);
    }

    @Test
    public void test7928() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7928");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setSerialJtaTransactions(false);
        boolean boolean3 = atomikosProperties0.isSerialJtaTransactions();
        java.lang.String str4 = atomikosProperties0.getService();
        java.lang.String str5 = atomikosProperties0.getLogBaseName();
        boolean boolean6 = atomikosProperties0.isEnableLogging();
        java.util.Properties properties7 = atomikosProperties0.asProperties();
        java.io.OutputStream outputStream8 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties7.store(outputStream8, "{tmlog=}");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "tmlog" + "'", str5, "tmlog");
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(properties7);
    }

    @Test
    public void test7929() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7929");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        boolean boolean4 = properties0.containsValue((java.lang.Object) "hi!");
        java.lang.Object obj7 = properties0.put((java.lang.Object) (byte) -1, (java.lang.Object) 100L);
        java.util.Collection<java.lang.Object> objCollection8 = properties0.values();
        java.util.Properties properties9 = new java.util.Properties();
        java.lang.Object obj11 = properties9.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration12 = properties9.elements();
        int int13 = properties9.size();
        java.util.Properties properties14 = new java.util.Properties(properties9);
        java.util.Set<java.lang.String> strSet15 = properties9.stringPropertyNames();
        java.util.Set<java.lang.String> strSet16 = properties9.stringPropertyNames();
        java.util.Properties properties17 = new java.util.Properties();
        java.lang.Object obj19 = properties17.remove((java.lang.Object) 0.0d);
        boolean boolean20 = properties17.isEmpty();
        java.util.Enumeration<java.lang.Object> objEnumeration21 = properties17.elements();
        java.util.Properties properties22 = new java.util.Properties();
        java.lang.Object obj24 = properties22.remove((java.lang.Object) 0.0d);
        boolean boolean25 = properties22.isEmpty();
        java.util.Enumeration<java.lang.Object> objEnumeration26 = properties22.elements();
        java.util.Enumeration<java.lang.Object> objEnumeration27 = properties22.elements();
        java.lang.Object obj28 = properties9.replace((java.lang.Object) objEnumeration21, (java.lang.Object) objEnumeration27);
        java.util.Enumeration<java.lang.Object> objEnumeration29 = properties9.keys();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties30 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties30.setSerialJtaTransactions(false);
        boolean boolean33 = atomikosProperties30.isSerialJtaTransactions();
        java.lang.String str34 = atomikosProperties30.getService();
        boolean boolean35 = atomikosProperties30.isEnableLogging();
        java.lang.String str36 = atomikosProperties30.getLogBaseName();
        boolean boolean37 = properties9.containsKey((java.lang.Object) atomikosProperties30);
        java.lang.Object obj38 = null;
        java.lang.Object obj39 = properties0.getOrDefault((java.lang.Object) atomikosProperties30, obj38);
        java.util.Properties properties40 = new java.util.Properties();
        java.lang.Object obj42 = properties40.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration43 = properties40.elements();
        boolean boolean44 = properties40.isEmpty();
        java.util.Set<java.lang.Object> objSet45 = properties40.keySet();
        java.util.Enumeration<java.lang.Object> objEnumeration46 = properties40.keys();
        java.util.Enumeration<java.lang.Object> objEnumeration47 = properties40.elements();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties48 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties48.setSerialJtaTransactions(false);
        boolean boolean51 = atomikosProperties48.isSerialJtaTransactions();
        java.lang.String str52 = atomikosProperties48.getService();
        boolean boolean53 = atomikosProperties48.isEnableLogging();
        atomikosProperties48.setCheckpointInterval((long) (byte) 100);
        java.lang.String str56 = atomikosProperties48.getLogBaseName();
        boolean boolean57 = properties40.contains((java.lang.Object) atomikosProperties48);
        java.lang.Object obj58 = properties40.clone();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties59 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties59.setSerialJtaTransactions(false);
        atomikosProperties59.setThreadedTwoPhaseCommit(true);
        atomikosProperties59.setThreadedTwoPhaseCommit(true);
        long long66 = atomikosProperties59.getMaxTimeout();
        java.lang.String str67 = atomikosProperties59.getLogBaseName();
        long long68 = atomikosProperties59.getMaxTimeout();
        java.util.Properties properties69 = new java.util.Properties();
        java.lang.Object obj71 = properties69.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration72 = properties69.elements();
        boolean boolean73 = properties69.isEmpty();
        java.util.Set<java.lang.Object> objSet74 = properties69.keySet();
        java.util.Enumeration<java.lang.Object> objEnumeration75 = properties69.keys();
        java.lang.String str77 = properties69.getProperty("hi!");
        java.lang.String str79 = properties69.getProperty("");
        properties69.clear();
        java.lang.Object obj81 = properties40.put((java.lang.Object) long68, (java.lang.Object) properties69);
        java.lang.Object obj84 = properties69.setProperty("", "{{}={}}");
        int int85 = properties69.size();
        java.util.Enumeration<java.lang.Object> objEnumeration86 = properties69.elements();
        boolean boolean87 = properties0.equals((java.lang.Object) objEnumeration86);
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNull(obj7);
        org.junit.Assert.assertNotNull(objCollection8);
        org.junit.Assert.assertNull(obj11);
        org.junit.Assert.assertNotNull(objEnumeration12);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertNotNull(strSet15);
        org.junit.Assert.assertNotNull(strSet16);
        org.junit.Assert.assertNull(obj19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNotNull(objEnumeration21);
        org.junit.Assert.assertNull(obj24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(objEnumeration26);
        org.junit.Assert.assertNotNull(objEnumeration27);
        org.junit.Assert.assertNull(obj28);
        org.junit.Assert.assertNotNull(objEnumeration29);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNull(str34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "tmlog" + "'", str36, "tmlog");
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNull(obj39);
        org.junit.Assert.assertNull(obj42);
        org.junit.Assert.assertNotNull(objEnumeration43);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertNotNull(objSet45);
        org.junit.Assert.assertNotNull(objEnumeration46);
        org.junit.Assert.assertNotNull(objEnumeration47);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertNull(str52);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "tmlog" + "'", str56, "tmlog");
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertNotNull(obj58);
        org.junit.Assert.assertEquals(obj58.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj58), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj58), "{}");
        org.junit.Assert.assertTrue("'" + long66 + "' != '" + 300000L + "'", long66 == 300000L);
        org.junit.Assert.assertEquals("'" + str67 + "' != '" + "tmlog" + "'", str67, "tmlog");
        org.junit.Assert.assertTrue("'" + long68 + "' != '" + 300000L + "'", long68 == 300000L);
        org.junit.Assert.assertNull(obj71);
        org.junit.Assert.assertNotNull(objEnumeration72);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + true + "'", boolean73 == true);
        org.junit.Assert.assertNotNull(objSet74);
        org.junit.Assert.assertNotNull(objEnumeration75);
        org.junit.Assert.assertNull(str77);
        org.junit.Assert.assertNull(str79);
        org.junit.Assert.assertNull(obj81);
        org.junit.Assert.assertNull(obj84);
        org.junit.Assert.assertTrue("'" + int85 + "' != '" + 1 + "'", int85 == 1);
        org.junit.Assert.assertNotNull(objEnumeration86);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + false + "'", boolean87 == false);
    }

    @Test
    public void test7930() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7930");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        boolean boolean3 = properties0.isEmpty();
        java.util.Enumeration<java.lang.Object> objEnumeration4 = properties0.elements();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet5 = properties0.entrySet();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties6 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties6.setSerialJtaTransactions(false);
        atomikosProperties6.setThreadedTwoPhaseCommit(true);
        atomikosProperties6.setMaxTimeout((long) '#');
        boolean boolean13 = atomikosProperties6.isEnableLogging();
        atomikosProperties6.setCheckpointInterval((long) (byte) -1);
        atomikosProperties6.setCheckpointInterval(0L);
        java.lang.String str18 = atomikosProperties6.getService();
        atomikosProperties6.setService("{com.atomikos.icatch.enable_logging=false, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=1, com.atomikos.icatch.serial_jta_transactions=false, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
        boolean boolean21 = atomikosProperties6.isThreadedTwoPhaseCommit();
        boolean boolean22 = properties0.containsKey((java.lang.Object) boolean21);
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet23 = properties0.entrySet();
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(objEnumeration4);
        org.junit.Assert.assertNotNull(objEntrySet5);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNull(str18);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(objEntrySet23);
    }

    @Test
    public void test7931() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7931");
        java.util.Properties properties0 = new java.util.Properties();
        boolean boolean2 = properties0.contains((java.lang.Object) 100.0d);
        java.util.Properties properties3 = new java.util.Properties();
        java.lang.Object obj5 = properties3.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration6 = properties3.elements();
        boolean boolean7 = properties3.isEmpty();
        java.util.Set<java.lang.Object> objSet8 = properties3.keySet();
        boolean boolean9 = properties3.isEmpty();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet10 = properties3.entrySet();
        java.util.Properties properties11 = new java.util.Properties();
        java.lang.Object obj13 = properties11.remove((java.lang.Object) 0.0d);
        boolean boolean14 = properties11.isEmpty();
        java.lang.Object obj17 = properties11.setProperty("", "hi!");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties18 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties18.setSerialJtaTransactions(false);
        boolean boolean21 = properties3.remove((java.lang.Object) properties11, (java.lang.Object) atomikosProperties18);
        boolean boolean22 = properties0.equals((java.lang.Object) properties3);
        java.util.Enumeration<?> wildcardEnumeration23 = properties3.propertyNames();
        java.lang.String str25 = properties3.getProperty("{=hi!}");
        java.lang.Object obj26 = properties3.clone();
        java.util.Set<java.lang.Object> objSet27 = properties3.keySet();
        java.lang.String str30 = properties3.getProperty("", "{}");
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNull(obj5);
        org.junit.Assert.assertNotNull(objEnumeration6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(objSet8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertNotNull(objEntrySet10);
        org.junit.Assert.assertNull(obj13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNull(obj17);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNotNull(wildcardEnumeration23);
        org.junit.Assert.assertNull(str25);
        org.junit.Assert.assertNotNull(obj26);
        org.junit.Assert.assertEquals(obj26.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj26), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj26), "{}");
        org.junit.Assert.assertNotNull(objSet27);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "{}" + "'", str30, "{}");
    }

    @Test
    public void test7932() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7932");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration3 = properties0.elements();
        int int4 = properties0.size();
        java.util.Properties properties5 = new java.util.Properties();
        java.lang.Object obj7 = properties5.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration8 = properties5.elements();
        boolean boolean9 = properties5.isEmpty();
        java.util.Set<java.lang.Object> objSet10 = properties5.keySet();
        boolean boolean11 = properties0.containsKey((java.lang.Object) objSet10);
        java.util.Enumeration<java.lang.Object> objEnumeration12 = properties0.keys();
        java.util.Properties properties13 = new java.util.Properties();
        java.lang.Object obj15 = properties13.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration16 = properties13.elements();
        boolean boolean17 = properties13.isEmpty();
        java.util.Set<java.lang.Object> objSet18 = properties13.keySet();
        java.util.Enumeration<java.lang.Object> objEnumeration19 = properties13.keys();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet20 = properties13.entrySet();
        boolean boolean22 = properties0.remove((java.lang.Object) properties13, (java.lang.Object) 1.0f);
        java.lang.Object obj23 = properties13.clone();
        java.util.Properties properties24 = new java.util.Properties();
        java.lang.Object obj26 = properties24.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration27 = properties24.elements();
        boolean boolean28 = properties24.isEmpty();
        java.lang.Object obj31 = properties24.setProperty("tmlog", "");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties32 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties32.setSerialJtaTransactions(false);
        boolean boolean35 = atomikosProperties32.isSerialJtaTransactions();
        atomikosProperties32.setTransactionManagerUniqueName("hi!");
        atomikosProperties32.setForceShutdownOnVmExit(false);
        atomikosProperties32.setDefaultJtaTimeout((long) (byte) 10);
        java.lang.String str42 = atomikosProperties32.getTransactionManagerUniqueName();
        java.util.Properties properties43 = new java.util.Properties();
        java.util.Properties properties44 = new java.util.Properties();
        java.lang.Object obj46 = properties44.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet47 = properties44.stringPropertyNames();
        boolean boolean48 = properties43.containsValue((java.lang.Object) properties44);
        java.util.Collection<java.lang.Object> objCollection49 = properties43.values();
        java.util.Properties properties51 = new java.util.Properties();
        java.lang.Object obj53 = properties51.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration54 = properties51.elements();
        boolean boolean55 = properties51.isEmpty();
        java.util.Set<java.lang.Object> objSet56 = properties51.keySet();
        java.lang.Object obj57 = properties43.putIfAbsent((java.lang.Object) "hi!", (java.lang.Object) objSet56);
        java.util.Set<java.lang.Object> objSet58 = properties43.keySet();
        java.util.Set<java.lang.Object> objSet59 = properties43.keySet();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet60 = properties43.entrySet();
        java.util.Set<java.lang.Object> objSet61 = properties43.keySet();
        java.lang.Object obj62 = properties24.replace((java.lang.Object) atomikosProperties32, (java.lang.Object) properties43);
        boolean boolean63 = properties13.containsKey((java.lang.Object) properties43);
        int int64 = properties13.size();
        java.lang.String str66 = properties13.getProperty("{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=false, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=true, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
        java.util.Properties properties67 = new java.util.Properties(properties13);
        java.io.PrintStream printStream68 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties13.list(printStream68);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(objEnumeration3);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNull(obj7);
        org.junit.Assert.assertNotNull(objEnumeration8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertNotNull(objSet10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(objEnumeration12);
        org.junit.Assert.assertNull(obj15);
        org.junit.Assert.assertNotNull(objEnumeration16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(objSet18);
        org.junit.Assert.assertNotNull(objEnumeration19);
        org.junit.Assert.assertNotNull(objEntrySet20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(obj23);
        org.junit.Assert.assertEquals(obj23.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj23), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj23), "{}");
        org.junit.Assert.assertNull(obj26);
        org.junit.Assert.assertNotNull(objEnumeration27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNull(obj31);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "hi!" + "'", str42, "hi!");
        org.junit.Assert.assertNull(obj46);
        org.junit.Assert.assertNotNull(strSet47);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNotNull(objCollection49);
        org.junit.Assert.assertNull(obj53);
        org.junit.Assert.assertNotNull(objEnumeration54);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertNotNull(objSet56);
        org.junit.Assert.assertNull(obj57);
        org.junit.Assert.assertNotNull(objSet58);
        org.junit.Assert.assertNotNull(objSet59);
        org.junit.Assert.assertNotNull(objEntrySet60);
        org.junit.Assert.assertNotNull(objSet61);
        org.junit.Assert.assertNull(obj62);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertTrue("'" + int64 + "' != '" + 0 + "'", int64 == 0);
        org.junit.Assert.assertNull(str66);
    }

    @Test
    public void test7933() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7933");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setSerialJtaTransactions(false);
        boolean boolean3 = atomikosProperties0.isSerialJtaTransactions();
        boolean boolean4 = atomikosProperties0.isEnableLogging();
        long long5 = atomikosProperties0.getMaxTimeout();
        atomikosProperties0.setLogBaseName("{=hi!}");
        atomikosProperties0.setMaxTimeout((long) (byte) 0);
        java.util.Properties properties10 = atomikosProperties0.asProperties();
        java.io.InputStream inputStream11 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties10.loadFromXML(inputStream11);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue("'" + long5 + "' != '" + 300000L + "'", long5 == 300000L);
        org.junit.Assert.assertNotNull(properties10);
    }

    @Test
    public void test7934() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7934");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration3 = properties0.elements();
        boolean boolean4 = properties0.isEmpty();
        java.util.Enumeration<java.lang.Object> objEnumeration5 = properties0.elements();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet6 = properties0.entrySet();
        java.util.Set<java.lang.String> strSet7 = properties0.stringPropertyNames();
        java.util.Properties properties8 = new java.util.Properties();
        java.lang.Object obj10 = properties8.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration11 = properties8.elements();
        boolean boolean12 = properties8.isEmpty();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet13 = properties8.entrySet();
        boolean boolean14 = properties0.contains((java.lang.Object) properties8);
        java.util.Properties properties15 = new java.util.Properties();
        java.lang.Object obj17 = properties15.remove((java.lang.Object) 0.0d);
        java.util.Properties properties18 = new java.util.Properties();
        java.util.Collection<java.lang.Object> objCollection19 = properties18.values();
        java.util.Enumeration<java.lang.Object> objEnumeration20 = properties18.keys();
        java.util.Properties properties21 = new java.util.Properties();
        java.lang.Object obj23 = properties21.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration24 = properties21.elements();
        boolean boolean25 = properties21.isEmpty();
        java.util.Set<java.lang.Object> objSet26 = properties21.keySet();
        java.util.Enumeration<java.lang.Object> objEnumeration27 = properties21.keys();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet28 = properties21.entrySet();
        java.lang.Object obj29 = properties15.put((java.lang.Object) properties18, (java.lang.Object) properties21);
        java.lang.Object obj30 = properties18.clone();
        boolean boolean31 = properties0.containsKey((java.lang.Object) properties18);
        java.lang.Object obj32 = properties18.clone();
        java.util.Set<java.lang.Object> objSet33 = properties18.keySet();
        java.util.Set<java.lang.Object> objSet34 = properties18.keySet();
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(objEnumeration3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(objEnumeration5);
        org.junit.Assert.assertNotNull(objEntrySet6);
        org.junit.Assert.assertNotNull(strSet7);
        org.junit.Assert.assertNull(obj10);
        org.junit.Assert.assertNotNull(objEnumeration11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(objEntrySet13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNull(obj17);
        org.junit.Assert.assertNotNull(objCollection19);
        org.junit.Assert.assertNotNull(objEnumeration20);
        org.junit.Assert.assertNull(obj23);
        org.junit.Assert.assertNotNull(objEnumeration24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(objSet26);
        org.junit.Assert.assertNotNull(objEnumeration27);
        org.junit.Assert.assertNotNull(objEntrySet28);
        org.junit.Assert.assertNull(obj29);
        org.junit.Assert.assertNotNull(obj30);
        org.junit.Assert.assertEquals(obj30.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj30), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj30), "{}");
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(obj32);
        org.junit.Assert.assertEquals(obj32.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj32), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj32), "{}");
        org.junit.Assert.assertNotNull(objSet33);
        org.junit.Assert.assertNotNull(objSet34);
    }

    @Test
    public void test7935() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7935");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setSerialJtaTransactions(false);
        boolean boolean3 = atomikosProperties0.isThreadedTwoPhaseCommit();
        atomikosProperties0.setThreadedTwoPhaseCommit(false);
        atomikosProperties0.setForceShutdownOnVmExit(false);
        java.util.Properties properties8 = atomikosProperties0.asProperties();
        java.util.Properties properties9 = atomikosProperties0.asProperties();
        java.util.Properties properties10 = new java.util.Properties();
        java.lang.Object obj12 = properties10.remove((java.lang.Object) 0.0d);
        java.util.Properties properties13 = new java.util.Properties();
        java.util.Collection<java.lang.Object> objCollection14 = properties13.values();
        java.util.Enumeration<java.lang.Object> objEnumeration15 = properties13.keys();
        java.util.Properties properties16 = new java.util.Properties();
        java.lang.Object obj18 = properties16.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration19 = properties16.elements();
        boolean boolean20 = properties16.isEmpty();
        java.util.Set<java.lang.Object> objSet21 = properties16.keySet();
        java.util.Enumeration<java.lang.Object> objEnumeration22 = properties16.keys();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet23 = properties16.entrySet();
        java.lang.Object obj24 = properties10.put((java.lang.Object) properties13, (java.lang.Object) properties16);
        java.lang.Object obj25 = properties13.clone();
        java.util.Properties properties26 = new java.util.Properties();
        java.lang.Object obj28 = properties26.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet29 = properties26.stringPropertyNames();
        java.util.Properties properties30 = new java.util.Properties();
        java.util.Properties properties31 = new java.util.Properties();
        java.lang.Object obj33 = properties31.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet34 = properties31.stringPropertyNames();
        boolean boolean35 = properties30.containsValue((java.lang.Object) properties31);
        java.util.Collection<java.lang.Object> objCollection36 = properties30.values();
        java.util.Enumeration<?> wildcardEnumeration37 = properties30.propertyNames();
        java.lang.Object obj39 = properties26.put((java.lang.Object) wildcardEnumeration37, (java.lang.Object) 10.0d);
        java.util.Properties properties40 = new java.util.Properties();
        java.lang.Object obj42 = properties40.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration43 = properties40.elements();
        boolean boolean44 = properties40.isEmpty();
        java.util.Set<java.lang.Object> objSet45 = properties40.keySet();
        boolean boolean46 = properties40.isEmpty();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet47 = properties40.entrySet();
        java.util.Properties properties48 = new java.util.Properties();
        java.lang.Object obj50 = properties48.remove((java.lang.Object) 0.0d);
        boolean boolean51 = properties48.isEmpty();
        java.lang.Object obj54 = properties48.setProperty("", "hi!");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties55 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties55.setSerialJtaTransactions(false);
        boolean boolean58 = properties40.remove((java.lang.Object) properties48, (java.lang.Object) atomikosProperties55);
        java.util.Properties properties59 = new java.util.Properties(properties48);
        int int60 = properties59.size();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties62 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties62.setSerialJtaTransactions(false);
        boolean boolean65 = atomikosProperties62.isSerialJtaTransactions();
        java.lang.String str66 = atomikosProperties62.getService();
        boolean boolean67 = atomikosProperties62.isEnableLogging();
        java.lang.String str68 = atomikosProperties62.getTransactionManagerUniqueName();
        boolean boolean69 = properties59.remove((java.lang.Object) (byte) 1, (java.lang.Object) atomikosProperties62);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties70 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties70.setSerialJtaTransactions(false);
        atomikosProperties70.setThreadedTwoPhaseCommit(true);
        atomikosProperties70.setEnableLogging(false);
        boolean boolean77 = atomikosProperties70.isSerialJtaTransactions();
        int int78 = atomikosProperties70.getMaxActives();
        boolean boolean79 = atomikosProperties70.isSerialJtaTransactions();
        boolean boolean80 = properties26.remove((java.lang.Object) properties59, (java.lang.Object) boolean79);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties81 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties81.setSerialJtaTransactions(false);
        atomikosProperties81.setThreadedTwoPhaseCommit(true);
        atomikosProperties81.setMaxTimeout((long) '#');
        boolean boolean88 = atomikosProperties81.isEnableLogging();
        atomikosProperties81.setCheckpointInterval((long) 100);
        java.lang.String str91 = atomikosProperties81.getTransactionManagerUniqueName();
        boolean boolean92 = properties59.contains((java.lang.Object) atomikosProperties81);
        java.lang.String str93 = properties59.toString();
        boolean boolean94 = properties13.containsValue((java.lang.Object) properties59);
        java.lang.Object obj95 = properties59.clone();
        java.lang.Object obj96 = properties9.get((java.lang.Object) properties59);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(properties8);
        org.junit.Assert.assertNotNull(properties9);
        org.junit.Assert.assertNull(obj12);
        org.junit.Assert.assertNotNull(objCollection14);
        org.junit.Assert.assertNotNull(objEnumeration15);
        org.junit.Assert.assertNull(obj18);
        org.junit.Assert.assertNotNull(objEnumeration19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNotNull(objSet21);
        org.junit.Assert.assertNotNull(objEnumeration22);
        org.junit.Assert.assertNotNull(objEntrySet23);
        org.junit.Assert.assertNull(obj24);
        org.junit.Assert.assertNotNull(obj25);
        org.junit.Assert.assertEquals(obj25.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj25), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj25), "{}");
        org.junit.Assert.assertNull(obj28);
        org.junit.Assert.assertNotNull(strSet29);
        org.junit.Assert.assertNull(obj33);
        org.junit.Assert.assertNotNull(strSet34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(objCollection36);
        org.junit.Assert.assertNotNull(wildcardEnumeration37);
        org.junit.Assert.assertNull(obj39);
        org.junit.Assert.assertNull(obj42);
        org.junit.Assert.assertNotNull(objEnumeration43);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertNotNull(objSet45);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertNotNull(objEntrySet47);
        org.junit.Assert.assertNull(obj50);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertNull(obj54);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertTrue("'" + int60 + "' != '" + 0 + "'", int60 == 0);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertNull(str66);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + true + "'", boolean67 == true);
        org.junit.Assert.assertNull(str68);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + false + "'", boolean77 == false);
        org.junit.Assert.assertTrue("'" + int78 + "' != '" + 50 + "'", int78 == 50);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + false + "'", boolean79 == false);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", boolean80 == false);
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + true + "'", boolean88 == true);
        org.junit.Assert.assertNull(str91);
        org.junit.Assert.assertTrue("'" + boolean92 + "' != '" + false + "'", boolean92 == false);
        org.junit.Assert.assertEquals("'" + str93 + "' != '" + "{}" + "'", str93, "{}");
        org.junit.Assert.assertTrue("'" + boolean94 + "' != '" + false + "'", boolean94 == false);
        org.junit.Assert.assertNotNull(obj95);
        org.junit.Assert.assertEquals(obj95.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj95), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj95), "{}");
        org.junit.Assert.assertNull(obj96);
    }

    @Test
    public void test7936() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7936");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setSerialJtaTransactions(false);
        atomikosProperties0.setThreadedTwoPhaseCommit(true);
        atomikosProperties0.setMaxTimeout((long) '#');
        long long7 = atomikosProperties0.getCheckpointInterval();
        java.lang.String str8 = atomikosProperties0.getTransactionManagerUniqueName();
        atomikosProperties0.setTransactionManagerUniqueName("{=hi!}");
        atomikosProperties0.setSerialJtaTransactions(false);
        java.util.Properties properties13 = atomikosProperties0.asProperties();
        int int14 = properties13.size();
        java.util.Properties properties15 = new java.util.Properties();
        java.lang.Object obj17 = properties15.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet18 = properties15.stringPropertyNames();
        java.util.Properties properties19 = new java.util.Properties();
        java.util.Properties properties20 = new java.util.Properties();
        java.lang.Object obj22 = properties20.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet23 = properties20.stringPropertyNames();
        boolean boolean24 = properties19.containsValue((java.lang.Object) properties20);
        java.util.Collection<java.lang.Object> objCollection25 = properties19.values();
        java.util.Enumeration<?> wildcardEnumeration26 = properties19.propertyNames();
        java.lang.Object obj28 = properties15.put((java.lang.Object) wildcardEnumeration26, (java.lang.Object) 10.0d);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties29 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties29.setSerialJtaTransactions(false);
        atomikosProperties29.setThreadedTwoPhaseCommit(true);
        atomikosProperties29.setMaxTimeout((long) '#');
        boolean boolean36 = atomikosProperties29.isForceShutdownOnVmExit();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties37 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties37.setSerialJtaTransactions(false);
        atomikosProperties37.setThreadedTwoPhaseCommit(true);
        atomikosProperties37.setThreadedTwoPhaseCommit(true);
        java.lang.Object obj44 = properties15.getOrDefault((java.lang.Object) boolean36, (java.lang.Object) atomikosProperties37);
        java.util.Properties properties45 = new java.util.Properties();
        java.lang.Object obj47 = properties45.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration48 = properties45.elements();
        boolean boolean49 = properties45.isEmpty();
        java.util.Set<java.lang.Object> objSet50 = properties45.keySet();
        java.util.Enumeration<java.lang.Object> objEnumeration51 = properties45.keys();
        java.lang.String str53 = properties45.getProperty("hi!");
        java.lang.String str55 = properties45.getProperty("");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties56 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties56.setSerialJtaTransactions(false);
        atomikosProperties56.setThreadedTwoPhaseCommit(true);
        atomikosProperties56.setEnableLogging(false);
        boolean boolean63 = properties45.containsKey((java.lang.Object) atomikosProperties56);
        boolean boolean64 = properties15.containsValue((java.lang.Object) properties45);
        java.util.Enumeration<java.lang.Object> objEnumeration65 = properties15.elements();
        boolean boolean66 = properties13.containsValue((java.lang.Object) properties15);
        properties13.clear();
        java.io.PrintWriter printWriter68 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties13.list(printWriter68);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + 500L + "'", long7 == 500L);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNotNull(properties13);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 10 + "'", int14 == 10);
        org.junit.Assert.assertNull(obj17);
        org.junit.Assert.assertNotNull(strSet18);
        org.junit.Assert.assertNull(obj22);
        org.junit.Assert.assertNotNull(strSet23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(objCollection25);
        org.junit.Assert.assertNotNull(wildcardEnumeration26);
        org.junit.Assert.assertNull(obj28);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(obj44);
        org.junit.Assert.assertNull(obj47);
        org.junit.Assert.assertNotNull(objEnumeration48);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertNotNull(objSet50);
        org.junit.Assert.assertNotNull(objEnumeration51);
        org.junit.Assert.assertNull(str53);
        org.junit.Assert.assertNull(str55);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertNotNull(objEnumeration65);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
    }

    @Test
    public void test7937() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7937");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        java.util.Properties properties3 = new java.util.Properties();
        java.util.Collection<java.lang.Object> objCollection4 = properties3.values();
        java.util.Enumeration<java.lang.Object> objEnumeration5 = properties3.keys();
        java.util.Properties properties6 = new java.util.Properties();
        java.lang.Object obj8 = properties6.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration9 = properties6.elements();
        boolean boolean10 = properties6.isEmpty();
        java.util.Set<java.lang.Object> objSet11 = properties6.keySet();
        java.util.Enumeration<java.lang.Object> objEnumeration12 = properties6.keys();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet13 = properties6.entrySet();
        java.lang.Object obj14 = properties0.put((java.lang.Object) properties3, (java.lang.Object) properties6);
        java.lang.Object obj15 = properties3.clone();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties16 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties16.setSerialJtaTransactions(false);
        atomikosProperties16.setThreadedTwoPhaseCommit(true);
        atomikosProperties16.setMaxTimeout((long) '#');
        boolean boolean23 = atomikosProperties16.isEnableLogging();
        atomikosProperties16.setCheckpointInterval((long) 100);
        atomikosProperties16.setSerialJtaTransactions(true);
        boolean boolean28 = properties3.equals((java.lang.Object) atomikosProperties16);
        java.util.Properties properties29 = new java.util.Properties();
        java.lang.Object obj31 = properties29.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration32 = properties29.elements();
        boolean boolean33 = properties29.isEmpty();
        java.util.Enumeration<java.lang.Object> objEnumeration34 = properties29.elements();
        boolean boolean35 = properties3.containsKey((java.lang.Object) properties29);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties36 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties36.setSerialJtaTransactions(false);
        atomikosProperties36.setThreadedTwoPhaseCommit(true);
        atomikosProperties36.setEnableLogging(false);
        boolean boolean43 = atomikosProperties36.isSerialJtaTransactions();
        int int44 = atomikosProperties36.getMaxActives();
        boolean boolean45 = atomikosProperties36.isSerialJtaTransactions();
        java.lang.String str46 = atomikosProperties36.getService();
        atomikosProperties36.setLogBaseDir("{}");
        java.lang.String str49 = atomikosProperties36.getLogBaseName();
        boolean boolean50 = atomikosProperties36.isForceShutdownOnVmExit();
        java.lang.Object obj51 = properties29.remove((java.lang.Object) atomikosProperties36);
        java.io.Reader reader52 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties29.load(reader52);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(objCollection4);
        org.junit.Assert.assertNotNull(objEnumeration5);
        org.junit.Assert.assertNull(obj8);
        org.junit.Assert.assertNotNull(objEnumeration9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(objSet11);
        org.junit.Assert.assertNotNull(objEnumeration12);
        org.junit.Assert.assertNotNull(objEntrySet13);
        org.junit.Assert.assertNull(obj14);
        org.junit.Assert.assertNotNull(obj15);
        org.junit.Assert.assertEquals(obj15.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj15), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj15), "{}");
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNull(obj31);
        org.junit.Assert.assertNotNull(objEnumeration32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNotNull(objEnumeration34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 50 + "'", int44 == 50);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNull(str46);
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "tmlog" + "'", str49, "tmlog");
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertNull(obj51);
    }

    @Test
    public void test7938() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7938");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration3 = properties0.elements();
        boolean boolean4 = properties0.isEmpty();
        java.util.Set<java.lang.Object> objSet5 = properties0.keySet();
        boolean boolean6 = properties0.isEmpty();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet7 = properties0.entrySet();
        java.util.Properties properties8 = new java.util.Properties();
        java.lang.Object obj10 = properties8.remove((java.lang.Object) 0.0d);
        boolean boolean11 = properties8.isEmpty();
        java.lang.Object obj14 = properties8.setProperty("", "hi!");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties15 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties15.setSerialJtaTransactions(false);
        boolean boolean18 = properties0.remove((java.lang.Object) properties8, (java.lang.Object) atomikosProperties15);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties19 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties19.setSerialJtaTransactions(false);
        boolean boolean22 = atomikosProperties19.isSerialJtaTransactions();
        atomikosProperties19.setTransactionManagerUniqueName("hi!");
        java.lang.String str25 = atomikosProperties19.getTransactionManagerUniqueName();
        java.util.Properties properties26 = new java.util.Properties();
        java.lang.Object obj28 = properties26.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration29 = properties26.elements();
        boolean boolean30 = properties26.isEmpty();
        java.util.Set<java.lang.Object> objSet31 = properties26.keySet();
        boolean boolean32 = properties26.isEmpty();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet33 = properties26.entrySet();
        java.util.Properties properties34 = new java.util.Properties();
        java.lang.Object obj36 = properties34.remove((java.lang.Object) 0.0d);
        boolean boolean37 = properties34.isEmpty();
        java.lang.Object obj40 = properties34.setProperty("", "hi!");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties41 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties41.setSerialJtaTransactions(false);
        boolean boolean44 = properties26.remove((java.lang.Object) properties34, (java.lang.Object) atomikosProperties41);
        java.util.Properties properties45 = new java.util.Properties(properties34);
        int int46 = properties45.size();
        int int47 = properties45.size();
        java.util.Properties properties48 = new java.util.Properties();
        java.lang.Object obj49 = properties45.get((java.lang.Object) properties48);
        java.lang.Object obj50 = properties0.getOrDefault((java.lang.Object) atomikosProperties19, (java.lang.Object) properties48);
        java.lang.Object obj51 = null;
        boolean boolean52 = properties48.equals(obj51);
        java.util.Set<java.lang.String> strSet53 = properties48.stringPropertyNames();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties54 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties54.setSerialJtaTransactions(false);
        atomikosProperties54.setThreadedTwoPhaseCommit(true);
        atomikosProperties54.setSerialJtaTransactions(false);
        atomikosProperties54.setLogBaseName("{{}={}}");
        boolean boolean63 = properties48.contains((java.lang.Object) atomikosProperties54);
        atomikosProperties54.setMaxActives(10);
        java.lang.String str66 = atomikosProperties54.getService();
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(objEnumeration3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(objSet5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(objEntrySet7);
        org.junit.Assert.assertNull(obj10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNull(obj14);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "hi!" + "'", str25, "hi!");
        org.junit.Assert.assertNull(obj28);
        org.junit.Assert.assertNotNull(objEnumeration29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNotNull(objSet31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertNotNull(objEntrySet33);
        org.junit.Assert.assertNull(obj36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertNull(obj40);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 0 + "'", int46 == 0);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 0 + "'", int47 == 0);
        org.junit.Assert.assertNull(obj49);
        org.junit.Assert.assertNotNull(obj50);
        org.junit.Assert.assertEquals(obj50.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj50), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj50), "{}");
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNotNull(strSet53);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertNull(str66);
    }

    @Test
    public void test7939() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7939");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setSerialJtaTransactions(false);
        atomikosProperties0.setThreadedTwoPhaseCommit(true);
        atomikosProperties0.setSerialJtaTransactions(false);
        java.lang.String str7 = atomikosProperties0.getService();
        java.util.Properties properties8 = atomikosProperties0.asProperties();
        boolean boolean9 = atomikosProperties0.isThreadedTwoPhaseCommit();
        boolean boolean10 = atomikosProperties0.isEnableLogging();
        boolean boolean11 = atomikosProperties0.isForceShutdownOnVmExit();
        boolean boolean12 = atomikosProperties0.isForceShutdownOnVmExit();
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNotNull(properties8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
    }

    @Test
    public void test7940() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7940");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setSerialJtaTransactions(false);
        atomikosProperties0.setThreadedTwoPhaseCommit(true);
        atomikosProperties0.setThreadedTwoPhaseCommit(true);
        java.util.Properties properties7 = atomikosProperties0.asProperties();
        int int8 = atomikosProperties0.getMaxActives();
        atomikosProperties0.setService("hi!");
        long long11 = atomikosProperties0.getMaxTimeout();
        atomikosProperties0.setTransactionManagerUniqueName("hi!");
        atomikosProperties0.setEnableLogging(false);
        atomikosProperties0.setMaxActives((int) 'a');
        boolean boolean18 = atomikosProperties0.isThreadedTwoPhaseCommit();
        java.lang.Class<?> wildcardClass19 = atomikosProperties0.getClass();
        org.junit.Assert.assertNotNull(properties7);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 50 + "'", int8 == 50);
        org.junit.Assert.assertTrue("'" + long11 + "' != '" + 300000L + "'", long11 == 300000L);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(wildcardClass19);
    }

    @Test
    public void test7941() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7941");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setSerialJtaTransactions(false);
        atomikosProperties0.setThreadedTwoPhaseCommit(true);
        atomikosProperties0.setMaxTimeout((long) '#');
        boolean boolean7 = atomikosProperties0.isForceShutdownOnVmExit();
        long long8 = atomikosProperties0.getCheckpointInterval();
        atomikosProperties0.setMaxActives((int) (byte) 0);
        atomikosProperties0.setLogBaseName("{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=false, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=35, com.atomikos.icatch.threaded_2pc=true, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
        atomikosProperties0.setForceShutdownOnVmExit(true);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + long8 + "' != '" + 500L + "'", long8 == 500L);
    }

    @Test
    public void test7942() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7942");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setSerialJtaTransactions(false);
        atomikosProperties0.setThreadedTwoPhaseCommit(true);
        atomikosProperties0.setMaxTimeout((long) '#');
        long long7 = atomikosProperties0.getCheckpointInterval();
        atomikosProperties0.setMaxTimeout((long) (byte) 100);
        atomikosProperties0.setThreadedTwoPhaseCommit(false);
        atomikosProperties0.setMaxTimeout((long) '4');
        java.util.Properties properties14 = atomikosProperties0.asProperties();
        atomikosProperties0.setLogBaseDir("{hi!=[], {}={}}");
        boolean boolean17 = atomikosProperties0.isSerialJtaTransactions();
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + 500L + "'", long7 == 500L);
        org.junit.Assert.assertNotNull(properties14);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
    }

    @Test
    public void test7943() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7943");
        java.util.Properties properties0 = new java.util.Properties();
        java.util.Properties properties1 = new java.util.Properties();
        java.lang.Object obj3 = properties1.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet4 = properties1.stringPropertyNames();
        boolean boolean5 = properties0.containsValue((java.lang.Object) properties1);
        java.util.Collection<java.lang.Object> objCollection6 = properties0.values();
        java.util.Properties properties8 = new java.util.Properties();
        java.lang.Object obj10 = properties8.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration11 = properties8.elements();
        boolean boolean12 = properties8.isEmpty();
        java.util.Set<java.lang.Object> objSet13 = properties8.keySet();
        java.lang.Object obj14 = properties0.putIfAbsent((java.lang.Object) "hi!", (java.lang.Object) objSet13);
        java.util.Set<java.lang.Object> objSet15 = properties0.keySet();
        java.util.Set<java.lang.Object> objSet16 = properties0.keySet();
        java.util.Set<java.lang.Object> objSet17 = properties0.keySet();
        java.util.Properties properties18 = new java.util.Properties();
        java.lang.Object obj20 = properties18.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration21 = properties18.elements();
        boolean boolean22 = properties18.isEmpty();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet23 = properties18.entrySet();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties25 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties25.setSerialJtaTransactions(false);
        atomikosProperties25.setThreadedTwoPhaseCommit(true);
        atomikosProperties25.setMaxTimeout((long) '#');
        boolean boolean32 = atomikosProperties25.isForceShutdownOnVmExit();
        java.lang.Object obj33 = properties18.put((java.lang.Object) (short) 1, (java.lang.Object) atomikosProperties25);
        long long34 = atomikosProperties25.getDefaultJtaTimeout();
        atomikosProperties25.setMaxActives((int) (short) 1);
        java.lang.Class<?> wildcardClass37 = atomikosProperties25.getClass();
        java.util.Properties properties38 = new java.util.Properties();
        java.lang.Object obj40 = properties38.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration41 = properties38.elements();
        boolean boolean42 = properties38.isEmpty();
        java.util.Set<java.lang.Object> objSet43 = properties38.keySet();
        boolean boolean44 = properties38.isEmpty();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet45 = properties38.entrySet();
        java.util.Properties properties46 = new java.util.Properties();
        java.lang.Object obj48 = properties46.remove((java.lang.Object) 0.0d);
        boolean boolean49 = properties46.isEmpty();
        java.lang.Object obj52 = properties46.setProperty("", "hi!");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties53 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties53.setSerialJtaTransactions(false);
        boolean boolean56 = properties38.remove((java.lang.Object) properties46, (java.lang.Object) atomikosProperties53);
        java.util.Properties properties57 = new java.util.Properties(properties46);
        int int58 = properties57.size();
        int int59 = properties57.size();
        java.util.Properties properties60 = new java.util.Properties();
        java.lang.Object obj61 = properties57.get((java.lang.Object) properties60);
        boolean boolean62 = properties0.remove((java.lang.Object) atomikosProperties25, (java.lang.Object) properties60);
        java.lang.Object obj65 = properties60.setProperty("{tmlog=}", "{}");
        java.util.Set<java.lang.Object> objSet66 = properties60.keySet();
        java.util.Properties properties67 = new java.util.Properties(properties60);
        java.util.Set<java.lang.String> strSet68 = properties67.stringPropertyNames();
        java.io.InputStream inputStream69 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties67.loadFromXML(inputStream69);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(obj3);
        org.junit.Assert.assertNotNull(strSet4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(objCollection6);
        org.junit.Assert.assertNull(obj10);
        org.junit.Assert.assertNotNull(objEnumeration11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(objSet13);
        org.junit.Assert.assertNull(obj14);
        org.junit.Assert.assertNotNull(objSet15);
        org.junit.Assert.assertNotNull(objSet16);
        org.junit.Assert.assertNotNull(objSet17);
        org.junit.Assert.assertNull(obj20);
        org.junit.Assert.assertNotNull(objEnumeration21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNotNull(objEntrySet23);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNull(obj33);
        org.junit.Assert.assertTrue("'" + long34 + "' != '" + 10000L + "'", long34 == 10000L);
        org.junit.Assert.assertNotNull(wildcardClass37);
        org.junit.Assert.assertNull(obj40);
        org.junit.Assert.assertNotNull(objEnumeration41);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertNotNull(objSet43);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertNotNull(objEntrySet45);
        org.junit.Assert.assertNull(obj48);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertNull(obj52);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + 0 + "'", int58 == 0);
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + 0 + "'", int59 == 0);
        org.junit.Assert.assertNull(obj61);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertNull(obj65);
        org.junit.Assert.assertNotNull(objSet66);
        org.junit.Assert.assertNotNull(strSet68);
    }

    @Test
    public void test7944() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7944");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setSerialJtaTransactions(false);
        atomikosProperties0.setThreadedTwoPhaseCommit(true);
        atomikosProperties0.setEnableLogging(false);
        boolean boolean7 = atomikosProperties0.isSerialJtaTransactions();
        int int8 = atomikosProperties0.getMaxActives();
        boolean boolean9 = atomikosProperties0.isEnableLogging();
        long long10 = atomikosProperties0.getCheckpointInterval();
        java.util.Properties properties11 = atomikosProperties0.asProperties();
        java.util.Enumeration<java.lang.Object> objEnumeration12 = properties11.elements();
        java.lang.String str14 = properties11.getProperty("{tmlog=}");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties15 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties15.setSerialJtaTransactions(false);
        atomikosProperties15.setThreadedTwoPhaseCommit(true);
        atomikosProperties15.setMaxTimeout((long) '#');
        boolean boolean22 = atomikosProperties15.isEnableLogging();
        atomikosProperties15.setForceShutdownOnVmExit(true);
        atomikosProperties15.setForceShutdownOnVmExit(true);
        atomikosProperties15.setLogBaseDir("{=hi!}");
        java.lang.Object obj29 = properties11.remove((java.lang.Object) "{=hi!}");
        java.util.Properties properties30 = new java.util.Properties(properties11);
        java.util.Properties properties31 = new java.util.Properties(properties11);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 50 + "'", int8 == 50);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + long10 + "' != '" + 500L + "'", long10 == 500L);
        org.junit.Assert.assertNotNull(properties11);
        org.junit.Assert.assertNotNull(objEnumeration12);
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNull(obj29);
    }

    @Test
    public void test7945() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7945");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        boolean boolean3 = properties0.isEmpty();
        java.util.Enumeration<java.lang.Object> objEnumeration4 = properties0.elements();
        java.util.Enumeration<java.lang.Object> objEnumeration5 = properties0.elements();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties6 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties6.setSerialJtaTransactions(false);
        atomikosProperties6.setThreadedTwoPhaseCommit(true);
        atomikosProperties6.setMaxTimeout((long) '#');
        boolean boolean13 = atomikosProperties6.isForceShutdownOnVmExit();
        int int14 = atomikosProperties6.getMaxActives();
        java.lang.Object obj15 = properties0.remove((java.lang.Object) int14);
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet16 = properties0.entrySet();
        java.util.Properties properties17 = new java.util.Properties(properties0);
        java.lang.String str19 = properties0.getProperty("{hi!=[], {}={}}");
        int int20 = properties0.size();
        java.lang.Object obj23 = properties0.setProperty("", "{{hi!=[]}={hi!=[], {}={}}}");
        java.io.PrintWriter printWriter24 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties0.list(printWriter24);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(objEnumeration4);
        org.junit.Assert.assertNotNull(objEnumeration5);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 50 + "'", int14 == 50);
        org.junit.Assert.assertNull(obj15);
        org.junit.Assert.assertNotNull(objEntrySet16);
        org.junit.Assert.assertNull(str19);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 0 + "'", int20 == 0);
        org.junit.Assert.assertNull(obj23);
    }

    @Test
    public void test7946() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7946");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setSerialJtaTransactions(false);
        atomikosProperties0.setThreadedTwoPhaseCommit(true);
        atomikosProperties0.setSerialJtaTransactions(false);
        atomikosProperties0.setThreadedTwoPhaseCommit(false);
        atomikosProperties0.setLogBaseName("hi!");
        boolean boolean11 = atomikosProperties0.isSerialJtaTransactions();
        long long12 = atomikosProperties0.getDefaultJtaTimeout();
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + long12 + "' != '" + 10000L + "'", long12 == 10000L);
    }

    @Test
    public void test7947() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7947");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration3 = properties0.elements();
        boolean boolean4 = properties0.isEmpty();
        java.util.Enumeration<java.lang.Object> objEnumeration5 = properties0.elements();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet6 = properties0.entrySet();
        java.util.Set<java.lang.String> strSet7 = properties0.stringPropertyNames();
        java.lang.Object obj10 = properties0.setProperty("{}", "tmlog");
        java.util.Properties properties11 = new java.util.Properties();
        java.lang.Object obj13 = properties11.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration14 = properties11.elements();
        int int15 = properties11.size();
        java.util.Properties properties16 = new java.util.Properties();
        java.lang.Object obj18 = properties16.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration19 = properties16.elements();
        java.util.Enumeration<java.lang.Object> objEnumeration20 = properties16.keys();
        java.lang.Object obj21 = properties0.getOrDefault((java.lang.Object) properties11, (java.lang.Object) objEnumeration20);
        java.util.Properties properties22 = new java.util.Properties(properties11);
        java.util.Enumeration<java.lang.Object> objEnumeration23 = properties11.keys();
        java.util.Set<java.lang.String> strSet24 = properties11.stringPropertyNames();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet25 = properties11.entrySet();
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(objEnumeration3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(objEnumeration5);
        org.junit.Assert.assertNotNull(objEntrySet6);
        org.junit.Assert.assertNotNull(strSet7);
        org.junit.Assert.assertNull(obj10);
        org.junit.Assert.assertNull(obj13);
        org.junit.Assert.assertNotNull(objEnumeration14);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0);
        org.junit.Assert.assertNull(obj18);
        org.junit.Assert.assertNotNull(objEnumeration19);
        org.junit.Assert.assertNotNull(objEnumeration20);
        org.junit.Assert.assertNotNull(obj21);
        org.junit.Assert.assertNotNull(objEnumeration23);
        org.junit.Assert.assertNotNull(strSet24);
        org.junit.Assert.assertNotNull(objEntrySet25);
    }

    @Test
    public void test7948() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7948");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration3 = properties0.elements();
        boolean boolean4 = properties0.isEmpty();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet5 = properties0.entrySet();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties7 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties7.setSerialJtaTransactions(false);
        atomikosProperties7.setThreadedTwoPhaseCommit(true);
        atomikosProperties7.setMaxTimeout((long) '#');
        boolean boolean14 = atomikosProperties7.isForceShutdownOnVmExit();
        java.lang.Object obj15 = properties0.put((java.lang.Object) (short) 1, (java.lang.Object) atomikosProperties7);
        atomikosProperties7.setForceShutdownOnVmExit(false);
        long long18 = atomikosProperties7.getDefaultJtaTimeout();
        java.lang.String str19 = atomikosProperties7.getLogBaseName();
        atomikosProperties7.setLogBaseName("{com.atomikos.icatch.enable_logging=false, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=false, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
        boolean boolean22 = atomikosProperties7.isThreadedTwoPhaseCommit();
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(objEnumeration3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(objEntrySet5);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNull(obj15);
        org.junit.Assert.assertTrue("'" + long18 + "' != '" + 10000L + "'", long18 == 10000L);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "tmlog" + "'", str19, "tmlog");
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
    }

    @Test
    public void test7949() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7949");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration3 = properties0.elements();
        int int4 = properties0.size();
        java.util.Properties properties5 = new java.util.Properties();
        java.lang.Object obj7 = properties5.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration8 = properties5.elements();
        boolean boolean9 = properties5.isEmpty();
        java.util.Set<java.lang.Object> objSet10 = properties5.keySet();
        boolean boolean11 = properties0.containsKey((java.lang.Object) objSet10);
        java.util.Enumeration<java.lang.Object> objEnumeration12 = properties0.keys();
        int int13 = properties0.size();
        java.util.Properties properties14 = new java.util.Properties();
        java.lang.Object obj16 = properties14.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration17 = properties14.elements();
        int int18 = properties14.size();
        java.util.Properties properties19 = new java.util.Properties(properties14);
        java.util.Set<java.lang.String> strSet20 = properties14.stringPropertyNames();
        java.util.Set<java.lang.String> strSet21 = properties14.stringPropertyNames();
        java.util.Properties properties22 = new java.util.Properties();
        java.lang.Object obj24 = properties22.remove((java.lang.Object) 0.0d);
        boolean boolean25 = properties22.isEmpty();
        java.util.Enumeration<java.lang.Object> objEnumeration26 = properties22.elements();
        java.util.Properties properties27 = new java.util.Properties();
        java.lang.Object obj29 = properties27.remove((java.lang.Object) 0.0d);
        boolean boolean30 = properties27.isEmpty();
        java.util.Enumeration<java.lang.Object> objEnumeration31 = properties27.elements();
        java.util.Enumeration<java.lang.Object> objEnumeration32 = properties27.elements();
        java.lang.Object obj33 = properties14.replace((java.lang.Object) objEnumeration26, (java.lang.Object) objEnumeration32);
        java.util.Enumeration<java.lang.Object> objEnumeration34 = properties14.keys();
        java.lang.Object obj35 = properties0.get((java.lang.Object) properties14);
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(objEnumeration3);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNull(obj7);
        org.junit.Assert.assertNotNull(objEnumeration8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertNotNull(objSet10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(objEnumeration12);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertNull(obj16);
        org.junit.Assert.assertNotNull(objEnumeration17);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 0 + "'", int18 == 0);
        org.junit.Assert.assertNotNull(strSet20);
        org.junit.Assert.assertNotNull(strSet21);
        org.junit.Assert.assertNull(obj24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(objEnumeration26);
        org.junit.Assert.assertNull(obj29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNotNull(objEnumeration31);
        org.junit.Assert.assertNotNull(objEnumeration32);
        org.junit.Assert.assertNull(obj33);
        org.junit.Assert.assertNotNull(objEnumeration34);
        org.junit.Assert.assertNull(obj35);
    }

    @Test
    public void test7950() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7950");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setSerialJtaTransactions(false);
        boolean boolean3 = atomikosProperties0.isThreadedTwoPhaseCommit();
        atomikosProperties0.setTransactionManagerUniqueName("hi!");
        java.lang.String str6 = atomikosProperties0.getLogBaseName();
        long long7 = atomikosProperties0.getMaxTimeout();
        atomikosProperties0.setService("{true=class org.springframework.boot.jta.atomikos.AtomikosProperties}");
        boolean boolean10 = atomikosProperties0.isEnableLogging();
        boolean boolean11 = atomikosProperties0.isForceShutdownOnVmExit();
        boolean boolean12 = atomikosProperties0.isThreadedTwoPhaseCommit();
        atomikosProperties0.setCheckpointInterval((long) 2);
        long long15 = atomikosProperties0.getDefaultJtaTimeout();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "tmlog" + "'", str6, "tmlog");
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + 300000L + "'", long7 == 300000L);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + long15 + "' != '" + 10000L + "'", long15 == 10000L);
    }

    @Test
    public void test7951() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7951");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        boolean boolean3 = properties0.isEmpty();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties4 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        boolean boolean5 = properties0.containsValue((java.lang.Object) atomikosProperties4);
        java.util.Properties properties6 = atomikosProperties4.asProperties();
        java.util.Properties properties7 = atomikosProperties4.asProperties();
        java.lang.String str9 = properties7.getProperty("{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=false, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, hi!=, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties10 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties10.setSerialJtaTransactions(false);
        atomikosProperties10.setThreadedTwoPhaseCommit(true);
        atomikosProperties10.setMaxTimeout((long) '#');
        boolean boolean17 = atomikosProperties10.isEnableLogging();
        atomikosProperties10.setCheckpointInterval((long) 100);
        java.lang.String str20 = atomikosProperties10.getTransactionManagerUniqueName();
        atomikosProperties10.setEnableLogging(false);
        boolean boolean23 = atomikosProperties10.isEnableLogging();
        boolean boolean24 = atomikosProperties10.isThreadedTwoPhaseCommit();
        java.util.Properties properties25 = atomikosProperties10.asProperties();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties26 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties26.setSerialJtaTransactions(false);
        atomikosProperties26.setThreadedTwoPhaseCommit(true);
        atomikosProperties26.setThreadedTwoPhaseCommit(true);
        java.util.Properties properties33 = atomikosProperties26.asProperties();
        int int34 = atomikosProperties26.getMaxActives();
        atomikosProperties26.setService("hi!");
        long long37 = atomikosProperties26.getMaxTimeout();
        atomikosProperties26.setTransactionManagerUniqueName("hi!");
        java.util.Properties properties40 = atomikosProperties26.asProperties();
        atomikosProperties26.setForceShutdownOnVmExit(true);
        atomikosProperties26.setMaxActives((int) ' ');
        java.util.Properties properties45 = atomikosProperties26.asProperties();
        java.lang.Object obj46 = properties7.put((java.lang.Object) atomikosProperties10, (java.lang.Object) properties45);
        atomikosProperties10.setLogBaseName("{true=class org.springframework.boot.jta.atomikos.AtomikosProperties}");
        atomikosProperties10.setEnableLogging(false);
        java.lang.Class<?> wildcardClass51 = atomikosProperties10.getClass();
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(properties6);
        org.junit.Assert.assertNotNull(properties7);
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNull(str20);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNotNull(properties25);
        org.junit.Assert.assertNotNull(properties33);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 50 + "'", int34 == 50);
        org.junit.Assert.assertTrue("'" + long37 + "' != '" + 300000L + "'", long37 == 300000L);
        org.junit.Assert.assertNotNull(properties40);
        org.junit.Assert.assertNotNull(properties45);
        org.junit.Assert.assertNull(obj46);
        org.junit.Assert.assertNotNull(wildcardClass51);
    }

    @Test
    public void test7952() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7952");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setSerialJtaTransactions(false);
        boolean boolean3 = atomikosProperties0.isSerialJtaTransactions();
        java.util.Properties properties4 = atomikosProperties0.asProperties();
        java.lang.String str5 = atomikosProperties0.getService();
        long long6 = atomikosProperties0.getDefaultJtaTimeout();
        atomikosProperties0.setLogBaseDir("{=hi!}");
        atomikosProperties0.setMaxTimeout(10L);
        java.util.Properties properties11 = atomikosProperties0.asProperties();
        atomikosProperties0.setService("{tmlog=}");
        boolean boolean14 = atomikosProperties0.isEnableLogging();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(properties4);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertTrue("'" + long6 + "' != '" + 10000L + "'", long6 == 10000L);
        org.junit.Assert.assertNotNull(properties11);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
    }

    @Test
    public void test7953() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7953");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        boolean boolean3 = properties0.isEmpty();
        java.util.Properties properties4 = new java.util.Properties();
        java.lang.Object obj6 = properties4.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration7 = properties4.elements();
        boolean boolean8 = properties4.isEmpty();
        java.util.Set<java.lang.Object> objSet9 = properties4.keySet();
        java.util.Enumeration<java.lang.Object> objEnumeration10 = properties4.keys();
        java.lang.String str12 = properties4.getProperty("hi!");
        java.util.Enumeration<?> wildcardEnumeration13 = properties4.propertyNames();
        java.util.Properties properties14 = new java.util.Properties();
        java.lang.Object obj16 = properties14.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration17 = properties14.elements();
        boolean boolean18 = properties14.isEmpty();
        java.util.Enumeration<java.lang.Object> objEnumeration19 = properties14.elements();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet20 = properties14.entrySet();
        java.util.Set<java.lang.String> strSet21 = properties14.stringPropertyNames();
        boolean boolean22 = properties14.isEmpty();
        properties4.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties14);
        java.util.Properties properties24 = new java.util.Properties();
        java.util.Collection<java.lang.Object> objCollection25 = properties24.values();
        int int26 = properties24.size();
        java.util.Properties properties27 = new java.util.Properties(properties24);
        java.lang.Object obj28 = properties0.put((java.lang.Object) properties4, (java.lang.Object) properties27);
        java.util.Enumeration<?> wildcardEnumeration29 = properties4.propertyNames();
        java.util.Enumeration<java.lang.Object> objEnumeration30 = properties4.elements();
        java.util.Properties properties31 = new java.util.Properties();
        java.util.Properties properties32 = new java.util.Properties();
        java.lang.Object obj34 = properties32.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet35 = properties32.stringPropertyNames();
        boolean boolean36 = properties31.containsValue((java.lang.Object) properties32);
        java.util.Collection<java.lang.Object> objCollection37 = properties31.values();
        java.util.Properties properties39 = new java.util.Properties();
        java.lang.Object obj41 = properties39.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration42 = properties39.elements();
        boolean boolean43 = properties39.isEmpty();
        java.util.Set<java.lang.Object> objSet44 = properties39.keySet();
        java.lang.Object obj45 = properties31.putIfAbsent((java.lang.Object) "hi!", (java.lang.Object) objSet44);
        java.util.Set<java.lang.Object> objSet46 = properties31.keySet();
        java.util.Set<java.lang.Object> objSet47 = properties31.keySet();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet48 = properties31.entrySet();
        java.util.Properties properties49 = new java.util.Properties();
        java.lang.Object obj51 = properties49.remove((java.lang.Object) 0.0d);
        boolean boolean52 = properties49.isEmpty();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties53 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties53.setSerialJtaTransactions(false);
        atomikosProperties53.setThreadedTwoPhaseCommit(true);
        atomikosProperties53.setThreadedTwoPhaseCommit(true);
        java.util.Properties properties60 = atomikosProperties53.asProperties();
        int int61 = atomikosProperties53.getMaxActives();
        atomikosProperties53.setService("hi!");
        java.lang.Object obj64 = properties49.get((java.lang.Object) atomikosProperties53);
        boolean boolean65 = properties31.containsValue((java.lang.Object) atomikosProperties53);
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet66 = properties31.entrySet();
        int int67 = properties31.size();
        java.util.Properties properties68 = new java.util.Properties();
        java.util.Properties properties69 = new java.util.Properties();
        java.lang.Object obj71 = properties69.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet72 = properties69.stringPropertyNames();
        boolean boolean73 = properties68.containsValue((java.lang.Object) properties69);
        java.util.Collection<java.lang.Object> objCollection74 = properties68.values();
        java.util.Enumeration<?> wildcardEnumeration75 = properties68.propertyNames();
        java.util.Set<java.lang.String> strSet76 = properties68.stringPropertyNames();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties77 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties77.setSerialJtaTransactions(false);
        boolean boolean80 = atomikosProperties77.isSerialJtaTransactions();
        java.lang.String str81 = atomikosProperties77.getService();
        atomikosProperties77.setEnableLogging(false);
        atomikosProperties77.setDefaultJtaTimeout((long) (byte) 100);
        atomikosProperties77.setCheckpointInterval((long) (byte) 10);
        java.lang.Object obj88 = properties31.replace((java.lang.Object) strSet76, (java.lang.Object) (byte) 10);
        java.lang.Object obj89 = properties4.get((java.lang.Object) strSet76);
        java.util.Properties properties90 = new java.util.Properties(properties4);
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNull(obj6);
        org.junit.Assert.assertNotNull(objEnumeration7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(objSet9);
        org.junit.Assert.assertNotNull(objEnumeration10);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNotNull(wildcardEnumeration13);
        org.junit.Assert.assertNull(obj16);
        org.junit.Assert.assertNotNull(objEnumeration17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(objEnumeration19);
        org.junit.Assert.assertNotNull(objEntrySet20);
        org.junit.Assert.assertNotNull(strSet21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNotNull(objCollection25);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 0 + "'", int26 == 0);
        org.junit.Assert.assertNull(obj28);
        org.junit.Assert.assertNotNull(wildcardEnumeration29);
        org.junit.Assert.assertNotNull(objEnumeration30);
        org.junit.Assert.assertNull(obj34);
        org.junit.Assert.assertNotNull(strSet35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(objCollection37);
        org.junit.Assert.assertNull(obj41);
        org.junit.Assert.assertNotNull(objEnumeration42);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNotNull(objSet44);
        org.junit.Assert.assertNull(obj45);
        org.junit.Assert.assertNotNull(objSet46);
        org.junit.Assert.assertNotNull(objSet47);
        org.junit.Assert.assertNotNull(objEntrySet48);
        org.junit.Assert.assertNull(obj51);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertNotNull(properties60);
        org.junit.Assert.assertTrue("'" + int61 + "' != '" + 50 + "'", int61 == 50);
        org.junit.Assert.assertNull(obj64);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertNotNull(objEntrySet66);
        org.junit.Assert.assertTrue("'" + int67 + "' != '" + 1 + "'", int67 == 1);
        org.junit.Assert.assertNull(obj71);
        org.junit.Assert.assertNotNull(strSet72);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertNotNull(objCollection74);
        org.junit.Assert.assertNotNull(wildcardEnumeration75);
        org.junit.Assert.assertNotNull(strSet76);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", boolean80 == false);
        org.junit.Assert.assertNull(str81);
        org.junit.Assert.assertNull(obj88);
        org.junit.Assert.assertNull(obj89);
    }

    @Test
    public void test7954() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7954");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setSerialJtaTransactions(false);
        boolean boolean3 = atomikosProperties0.isSerialJtaTransactions();
        java.lang.String str4 = atomikosProperties0.getService();
        boolean boolean5 = atomikosProperties0.isEnableLogging();
        java.util.Properties properties6 = atomikosProperties0.asProperties();
        atomikosProperties0.setForceShutdownOnVmExit(true);
        atomikosProperties0.setMaxActives((int) (short) -1);
        atomikosProperties0.setMaxTimeout((long) ' ');
        boolean boolean13 = atomikosProperties0.isSerialJtaTransactions();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNotNull(properties6);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
    }

    @Test
    public void test7955() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7955");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration3 = properties0.elements();
        boolean boolean4 = properties0.isEmpty();
        java.util.Set<java.lang.Object> objSet5 = properties0.keySet();
        java.util.Enumeration<java.lang.Object> objEnumeration6 = properties0.keys();
        java.util.Properties properties7 = new java.util.Properties();
        java.util.Properties properties8 = new java.util.Properties();
        java.lang.Object obj10 = properties8.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet11 = properties8.stringPropertyNames();
        boolean boolean12 = properties7.containsValue((java.lang.Object) properties8);
        java.util.Collection<java.lang.Object> objCollection13 = properties7.values();
        java.util.Properties properties15 = new java.util.Properties();
        java.lang.Object obj17 = properties15.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration18 = properties15.elements();
        boolean boolean19 = properties15.isEmpty();
        java.util.Set<java.lang.Object> objSet20 = properties15.keySet();
        java.lang.Object obj21 = properties7.putIfAbsent((java.lang.Object) "hi!", (java.lang.Object) objSet20);
        java.util.Set<java.lang.Object> objSet22 = properties7.keySet();
        boolean boolean24 = properties0.remove((java.lang.Object) properties7, (java.lang.Object) 10);
        java.util.Set<java.lang.String> strSet25 = properties0.stringPropertyNames();
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(objEnumeration3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(objSet5);
        org.junit.Assert.assertNotNull(objEnumeration6);
        org.junit.Assert.assertNull(obj10);
        org.junit.Assert.assertNotNull(strSet11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(objCollection13);
        org.junit.Assert.assertNull(obj17);
        org.junit.Assert.assertNotNull(objEnumeration18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(objSet20);
        org.junit.Assert.assertNull(obj21);
        org.junit.Assert.assertNotNull(objSet22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(strSet25);
    }

    @Test
    public void test7956() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7956");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setSerialJtaTransactions(false);
        atomikosProperties0.setThreadedTwoPhaseCommit(true);
        atomikosProperties0.setMaxTimeout((long) '#');
        long long7 = atomikosProperties0.getCheckpointInterval();
        java.lang.String str8 = atomikosProperties0.getTransactionManagerUniqueName();
        atomikosProperties0.setTransactionManagerUniqueName("{=hi!}");
        atomikosProperties0.setCheckpointInterval((long) (-1));
        atomikosProperties0.setForceShutdownOnVmExit(false);
        java.util.Properties properties15 = atomikosProperties0.asProperties();
        java.util.Enumeration<java.lang.Object> objEnumeration16 = properties15.keys();
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + 500L + "'", long7 == 500L);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNotNull(properties15);
        org.junit.Assert.assertNotNull(objEnumeration16);
    }

    @Test
    public void test7957() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7957");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration3 = properties0.elements();
        boolean boolean4 = properties0.isEmpty();
        java.util.Set<java.lang.Object> objSet5 = properties0.keySet();
        boolean boolean6 = properties0.isEmpty();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet7 = properties0.entrySet();
        java.util.Properties properties8 = new java.util.Properties();
        java.lang.Object obj10 = properties8.remove((java.lang.Object) 0.0d);
        boolean boolean11 = properties8.isEmpty();
        java.lang.Object obj14 = properties8.setProperty("", "hi!");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties15 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties15.setSerialJtaTransactions(false);
        boolean boolean18 = properties0.remove((java.lang.Object) properties8, (java.lang.Object) atomikosProperties15);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties19 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties19.setSerialJtaTransactions(false);
        boolean boolean22 = atomikosProperties19.isSerialJtaTransactions();
        atomikosProperties19.setTransactionManagerUniqueName("hi!");
        java.lang.String str25 = atomikosProperties19.getTransactionManagerUniqueName();
        java.util.Properties properties26 = new java.util.Properties();
        java.lang.Object obj28 = properties26.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration29 = properties26.elements();
        boolean boolean30 = properties26.isEmpty();
        java.util.Set<java.lang.Object> objSet31 = properties26.keySet();
        boolean boolean32 = properties26.isEmpty();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet33 = properties26.entrySet();
        java.util.Properties properties34 = new java.util.Properties();
        java.lang.Object obj36 = properties34.remove((java.lang.Object) 0.0d);
        boolean boolean37 = properties34.isEmpty();
        java.lang.Object obj40 = properties34.setProperty("", "hi!");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties41 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties41.setSerialJtaTransactions(false);
        boolean boolean44 = properties26.remove((java.lang.Object) properties34, (java.lang.Object) atomikosProperties41);
        java.util.Properties properties45 = new java.util.Properties(properties34);
        int int46 = properties45.size();
        int int47 = properties45.size();
        java.util.Properties properties48 = new java.util.Properties();
        java.lang.Object obj49 = properties45.get((java.lang.Object) properties48);
        java.lang.Object obj50 = properties0.getOrDefault((java.lang.Object) atomikosProperties19, (java.lang.Object) properties48);
        boolean boolean51 = atomikosProperties19.isSerialJtaTransactions();
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(objEnumeration3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(objSet5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(objEntrySet7);
        org.junit.Assert.assertNull(obj10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNull(obj14);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "hi!" + "'", str25, "hi!");
        org.junit.Assert.assertNull(obj28);
        org.junit.Assert.assertNotNull(objEnumeration29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNotNull(objSet31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertNotNull(objEntrySet33);
        org.junit.Assert.assertNull(obj36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertNull(obj40);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 0 + "'", int46 == 0);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 0 + "'", int47 == 0);
        org.junit.Assert.assertNull(obj49);
        org.junit.Assert.assertNotNull(obj50);
        org.junit.Assert.assertEquals(obj50.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj50), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj50), "{}");
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
    }

    @Test
    public void test7958() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7958");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setSerialJtaTransactions(false);
        atomikosProperties0.setThreadedTwoPhaseCommit(true);
        atomikosProperties0.setSerialJtaTransactions(false);
        java.lang.String str7 = atomikosProperties0.getService();
        java.util.Properties properties8 = atomikosProperties0.asProperties();
        java.util.Properties properties9 = atomikosProperties0.asProperties();
        java.util.Properties properties10 = new java.util.Properties(properties9);
        java.lang.Object obj11 = properties10.clone();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties12 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties12.setSerialJtaTransactions(false);
        boolean boolean15 = atomikosProperties12.isSerialJtaTransactions();
        java.lang.String str16 = atomikosProperties12.getService();
        atomikosProperties12.setEnableLogging(false);
        java.util.Properties properties19 = atomikosProperties12.asProperties();
        properties19.clear();
        java.util.Set<java.lang.Object> objSet21 = properties19.keySet();
        boolean boolean22 = properties10.equals((java.lang.Object) properties19);
        java.io.OutputStream outputStream23 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties10.storeToXML(outputStream23, "{{}={}}");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNotNull(properties8);
        org.junit.Assert.assertNotNull(properties9);
        org.junit.Assert.assertNotNull(obj11);
        org.junit.Assert.assertEquals(obj11.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj11), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj11), "{}");
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNull(str16);
        org.junit.Assert.assertNotNull(properties19);
        org.junit.Assert.assertNotNull(objSet21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
    }

    @Test
    public void test7959() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7959");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setSerialJtaTransactions(false);
        atomikosProperties0.setThreadedTwoPhaseCommit(true);
        atomikosProperties0.setThreadedTwoPhaseCommit(true);
        long long7 = atomikosProperties0.getMaxTimeout();
        java.lang.String str8 = atomikosProperties0.getLogBaseName();
        long long9 = atomikosProperties0.getMaxTimeout();
        atomikosProperties0.setMaxActives(0);
        boolean boolean12 = atomikosProperties0.isThreadedTwoPhaseCommit();
        boolean boolean13 = atomikosProperties0.isThreadedTwoPhaseCommit();
        boolean boolean14 = atomikosProperties0.isSerialJtaTransactions();
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + 300000L + "'", long7 == 300000L);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "tmlog" + "'", str8, "tmlog");
        org.junit.Assert.assertTrue("'" + long9 + "' != '" + 300000L + "'", long9 == 300000L);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
    }

    @Test
    public void test7960() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7960");
        java.util.Properties properties0 = new java.util.Properties();
        java.util.Properties properties1 = new java.util.Properties();
        java.lang.Object obj3 = properties1.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet4 = properties1.stringPropertyNames();
        boolean boolean5 = properties0.containsValue((java.lang.Object) properties1);
        java.util.Collection<java.lang.Object> objCollection6 = properties0.values();
        java.util.Properties properties8 = new java.util.Properties();
        java.lang.Object obj10 = properties8.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration11 = properties8.elements();
        boolean boolean12 = properties8.isEmpty();
        java.util.Set<java.lang.Object> objSet13 = properties8.keySet();
        java.lang.Object obj14 = properties0.putIfAbsent((java.lang.Object) "hi!", (java.lang.Object) objSet13);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties15 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties15.setSerialJtaTransactions(false);
        boolean boolean18 = atomikosProperties15.isSerialJtaTransactions();
        java.util.Properties properties19 = atomikosProperties15.asProperties();
        java.lang.Object obj22 = properties19.setProperty("hi!", "");
        java.util.Properties properties23 = new java.util.Properties(properties19);
        java.util.Properties properties24 = new java.util.Properties();
        java.lang.Object obj26 = properties24.remove((java.lang.Object) 0.0d);
        java.util.Properties properties27 = new java.util.Properties();
        java.util.Collection<java.lang.Object> objCollection28 = properties27.values();
        java.util.Enumeration<java.lang.Object> objEnumeration29 = properties27.keys();
        java.util.Properties properties30 = new java.util.Properties();
        java.lang.Object obj32 = properties30.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration33 = properties30.elements();
        boolean boolean34 = properties30.isEmpty();
        java.util.Set<java.lang.Object> objSet35 = properties30.keySet();
        java.util.Enumeration<java.lang.Object> objEnumeration36 = properties30.keys();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet37 = properties30.entrySet();
        java.lang.Object obj38 = properties24.put((java.lang.Object) properties27, (java.lang.Object) properties30);
        java.lang.Object obj39 = properties0.putIfAbsent((java.lang.Object) properties23, (java.lang.Object) properties30);
        java.util.Properties properties40 = new java.util.Properties();
        java.lang.Object obj42 = properties40.remove((java.lang.Object) 0.0d);
        java.util.Properties properties43 = new java.util.Properties();
        java.util.Collection<java.lang.Object> objCollection44 = properties43.values();
        java.util.Enumeration<java.lang.Object> objEnumeration45 = properties43.keys();
        java.util.Properties properties46 = new java.util.Properties();
        java.lang.Object obj48 = properties46.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration49 = properties46.elements();
        boolean boolean50 = properties46.isEmpty();
        java.util.Set<java.lang.Object> objSet51 = properties46.keySet();
        java.util.Enumeration<java.lang.Object> objEnumeration52 = properties46.keys();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet53 = properties46.entrySet();
        java.lang.Object obj54 = properties40.put((java.lang.Object) properties43, (java.lang.Object) properties46);
        java.lang.String str56 = properties43.getProperty("{=hi!}");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties57 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties57.setSerialJtaTransactions(false);
        atomikosProperties57.setThreadedTwoPhaseCommit(true);
        atomikosProperties57.setThreadedTwoPhaseCommit(true);
        long long64 = atomikosProperties57.getMaxTimeout();
        boolean boolean65 = properties43.containsValue((java.lang.Object) atomikosProperties57);
        java.util.Enumeration<java.lang.Object> objEnumeration66 = properties43.elements();
        java.util.Set<java.lang.String> strSet67 = properties43.stringPropertyNames();
        java.util.Properties properties68 = new java.util.Properties();
        java.lang.Object obj70 = properties68.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration71 = properties68.elements();
        boolean boolean72 = properties68.isEmpty();
        java.util.Set<java.lang.Object> objSet73 = properties68.keySet();
        java.util.Enumeration<java.lang.Object> objEnumeration74 = properties68.keys();
        java.util.Enumeration<java.lang.Object> objEnumeration75 = properties68.elements();
        java.lang.Object obj76 = properties0.putIfAbsent((java.lang.Object) properties43, (java.lang.Object) objEnumeration75);
        java.util.Set<java.lang.Object> objSet77 = properties43.keySet();
        java.util.Enumeration<java.lang.Object> objEnumeration78 = properties43.keys();
        java.lang.Object obj79 = properties43.clone();
        java.lang.String str81 = properties43.getProperty("");
        org.junit.Assert.assertNull(obj3);
        org.junit.Assert.assertNotNull(strSet4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(objCollection6);
        org.junit.Assert.assertNull(obj10);
        org.junit.Assert.assertNotNull(objEnumeration11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(objSet13);
        org.junit.Assert.assertNull(obj14);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(properties19);
        org.junit.Assert.assertNull(obj22);
        org.junit.Assert.assertNull(obj26);
        org.junit.Assert.assertNotNull(objCollection28);
        org.junit.Assert.assertNotNull(objEnumeration29);
        org.junit.Assert.assertNull(obj32);
        org.junit.Assert.assertNotNull(objEnumeration33);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertNotNull(objSet35);
        org.junit.Assert.assertNotNull(objEnumeration36);
        org.junit.Assert.assertNotNull(objEntrySet37);
        org.junit.Assert.assertNull(obj38);
        org.junit.Assert.assertNull(obj39);
        org.junit.Assert.assertNull(obj42);
        org.junit.Assert.assertNotNull(objCollection44);
        org.junit.Assert.assertNotNull(objEnumeration45);
        org.junit.Assert.assertNull(obj48);
        org.junit.Assert.assertNotNull(objEnumeration49);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertNotNull(objSet51);
        org.junit.Assert.assertNotNull(objEnumeration52);
        org.junit.Assert.assertNotNull(objEntrySet53);
        org.junit.Assert.assertNull(obj54);
        org.junit.Assert.assertNull(str56);
        org.junit.Assert.assertTrue("'" + long64 + "' != '" + 300000L + "'", long64 == 300000L);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertNotNull(objEnumeration66);
        org.junit.Assert.assertNotNull(strSet67);
        org.junit.Assert.assertNull(obj70);
        org.junit.Assert.assertNotNull(objEnumeration71);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + true + "'", boolean72 == true);
        org.junit.Assert.assertNotNull(objSet73);
        org.junit.Assert.assertNotNull(objEnumeration74);
        org.junit.Assert.assertNotNull(objEnumeration75);
        org.junit.Assert.assertNotNull(obj76);
        org.junit.Assert.assertEquals(obj76.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj76), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj76), "{}");
        org.junit.Assert.assertNotNull(objSet77);
        org.junit.Assert.assertNotNull(objEnumeration78);
        org.junit.Assert.assertNotNull(obj79);
        org.junit.Assert.assertEquals(obj79.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj79), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj79), "{}");
        org.junit.Assert.assertNull(str81);
    }

    @Test
    public void test7961() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7961");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet3 = properties0.stringPropertyNames();
        java.lang.String str4 = properties0.toString();
        java.util.Properties properties5 = new java.util.Properties();
        java.lang.Object obj7 = properties5.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration8 = properties5.elements();
        boolean boolean9 = properties5.isEmpty();
        java.lang.Object obj12 = properties5.setProperty("tmlog", "");
        properties0.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties5);
        java.util.Properties properties14 = new java.util.Properties();
        java.util.Properties properties15 = new java.util.Properties();
        java.lang.Object obj17 = properties15.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet18 = properties15.stringPropertyNames();
        boolean boolean19 = properties14.containsValue((java.lang.Object) properties15);
        java.util.Collection<java.lang.Object> objCollection20 = properties14.values();
        java.util.Properties properties22 = new java.util.Properties();
        java.lang.Object obj24 = properties22.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration25 = properties22.elements();
        boolean boolean26 = properties22.isEmpty();
        java.util.Set<java.lang.Object> objSet27 = properties22.keySet();
        java.lang.Object obj28 = properties14.putIfAbsent((java.lang.Object) "hi!", (java.lang.Object) objSet27);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties29 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties29.setSerialJtaTransactions(false);
        boolean boolean32 = atomikosProperties29.isSerialJtaTransactions();
        java.util.Properties properties33 = atomikosProperties29.asProperties();
        java.lang.Object obj36 = properties33.setProperty("hi!", "");
        java.util.Properties properties37 = new java.util.Properties(properties33);
        java.util.Properties properties38 = new java.util.Properties();
        java.lang.Object obj40 = properties38.remove((java.lang.Object) 0.0d);
        java.util.Properties properties41 = new java.util.Properties();
        java.util.Collection<java.lang.Object> objCollection42 = properties41.values();
        java.util.Enumeration<java.lang.Object> objEnumeration43 = properties41.keys();
        java.util.Properties properties44 = new java.util.Properties();
        java.lang.Object obj46 = properties44.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration47 = properties44.elements();
        boolean boolean48 = properties44.isEmpty();
        java.util.Set<java.lang.Object> objSet49 = properties44.keySet();
        java.util.Enumeration<java.lang.Object> objEnumeration50 = properties44.keys();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet51 = properties44.entrySet();
        java.lang.Object obj52 = properties38.put((java.lang.Object) properties41, (java.lang.Object) properties44);
        java.lang.Object obj53 = properties14.putIfAbsent((java.lang.Object) properties37, (java.lang.Object) properties44);
        java.util.Properties properties54 = new java.util.Properties();
        java.lang.Object obj56 = properties54.remove((java.lang.Object) 0.0d);
        java.util.Properties properties57 = new java.util.Properties();
        java.util.Collection<java.lang.Object> objCollection58 = properties57.values();
        java.util.Enumeration<java.lang.Object> objEnumeration59 = properties57.keys();
        java.util.Properties properties60 = new java.util.Properties();
        java.lang.Object obj62 = properties60.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration63 = properties60.elements();
        boolean boolean64 = properties60.isEmpty();
        java.util.Set<java.lang.Object> objSet65 = properties60.keySet();
        java.util.Enumeration<java.lang.Object> objEnumeration66 = properties60.keys();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet67 = properties60.entrySet();
        java.lang.Object obj68 = properties54.put((java.lang.Object) properties57, (java.lang.Object) properties60);
        java.lang.String str70 = properties57.getProperty("{=hi!}");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties71 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties71.setSerialJtaTransactions(false);
        atomikosProperties71.setThreadedTwoPhaseCommit(true);
        atomikosProperties71.setThreadedTwoPhaseCommit(true);
        long long78 = atomikosProperties71.getMaxTimeout();
        boolean boolean79 = properties57.containsValue((java.lang.Object) atomikosProperties71);
        java.util.Enumeration<java.lang.Object> objEnumeration80 = properties57.elements();
        java.util.Set<java.lang.String> strSet81 = properties57.stringPropertyNames();
        java.util.Properties properties82 = new java.util.Properties();
        java.lang.Object obj84 = properties82.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration85 = properties82.elements();
        boolean boolean86 = properties82.isEmpty();
        java.util.Set<java.lang.Object> objSet87 = properties82.keySet();
        java.util.Enumeration<java.lang.Object> objEnumeration88 = properties82.keys();
        java.util.Enumeration<java.lang.Object> objEnumeration89 = properties82.elements();
        java.lang.Object obj90 = properties14.putIfAbsent((java.lang.Object) properties57, (java.lang.Object) objEnumeration89);
        boolean boolean91 = properties0.containsValue((java.lang.Object) properties57);
        java.util.Collection<java.lang.Object> objCollection92 = properties0.values();
        java.io.Reader reader93 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties0.load(reader93);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(strSet3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "{}" + "'", str4, "{}");
        org.junit.Assert.assertNull(obj7);
        org.junit.Assert.assertNotNull(objEnumeration8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertNull(obj12);
        org.junit.Assert.assertNull(obj17);
        org.junit.Assert.assertNotNull(strSet18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(objCollection20);
        org.junit.Assert.assertNull(obj24);
        org.junit.Assert.assertNotNull(objEnumeration25);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertNotNull(objSet27);
        org.junit.Assert.assertNull(obj28);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(properties33);
        org.junit.Assert.assertNull(obj36);
        org.junit.Assert.assertNull(obj40);
        org.junit.Assert.assertNotNull(objCollection42);
        org.junit.Assert.assertNotNull(objEnumeration43);
        org.junit.Assert.assertNull(obj46);
        org.junit.Assert.assertNotNull(objEnumeration47);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertNotNull(objSet49);
        org.junit.Assert.assertNotNull(objEnumeration50);
        org.junit.Assert.assertNotNull(objEntrySet51);
        org.junit.Assert.assertNull(obj52);
        org.junit.Assert.assertNull(obj53);
        org.junit.Assert.assertNull(obj56);
        org.junit.Assert.assertNotNull(objCollection58);
        org.junit.Assert.assertNotNull(objEnumeration59);
        org.junit.Assert.assertNull(obj62);
        org.junit.Assert.assertNotNull(objEnumeration63);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64 == true);
        org.junit.Assert.assertNotNull(objSet65);
        org.junit.Assert.assertNotNull(objEnumeration66);
        org.junit.Assert.assertNotNull(objEntrySet67);
        org.junit.Assert.assertNull(obj68);
        org.junit.Assert.assertNull(str70);
        org.junit.Assert.assertTrue("'" + long78 + "' != '" + 300000L + "'", long78 == 300000L);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + false + "'", boolean79 == false);
        org.junit.Assert.assertNotNull(objEnumeration80);
        org.junit.Assert.assertNotNull(strSet81);
        org.junit.Assert.assertNull(obj84);
        org.junit.Assert.assertNotNull(objEnumeration85);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + true + "'", boolean86 == true);
        org.junit.Assert.assertNotNull(objSet87);
        org.junit.Assert.assertNotNull(objEnumeration88);
        org.junit.Assert.assertNotNull(objEnumeration89);
        org.junit.Assert.assertNotNull(obj90);
        org.junit.Assert.assertEquals(obj90.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj90), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj90), "{}");
        org.junit.Assert.assertTrue("'" + boolean91 + "' != '" + false + "'", boolean91 == false);
        org.junit.Assert.assertNotNull(objCollection92);
    }

    @Test
    public void test7962() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7962");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet3 = properties0.stringPropertyNames();
        java.util.Properties properties4 = new java.util.Properties();
        java.util.Properties properties5 = new java.util.Properties();
        java.lang.Object obj7 = properties5.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet8 = properties5.stringPropertyNames();
        boolean boolean9 = properties4.containsValue((java.lang.Object) properties5);
        java.util.Collection<java.lang.Object> objCollection10 = properties4.values();
        java.util.Enumeration<?> wildcardEnumeration11 = properties4.propertyNames();
        java.lang.Object obj13 = properties0.put((java.lang.Object) wildcardEnumeration11, (java.lang.Object) 10.0d);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties14 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties14.setSerialJtaTransactions(false);
        atomikosProperties14.setThreadedTwoPhaseCommit(true);
        atomikosProperties14.setMaxTimeout((long) '#');
        boolean boolean21 = atomikosProperties14.isForceShutdownOnVmExit();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties22 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties22.setSerialJtaTransactions(false);
        atomikosProperties22.setThreadedTwoPhaseCommit(true);
        atomikosProperties22.setThreadedTwoPhaseCommit(true);
        java.lang.Object obj29 = properties0.getOrDefault((java.lang.Object) boolean21, (java.lang.Object) atomikosProperties22);
        java.util.Set<java.lang.String> strSet30 = properties0.stringPropertyNames();
        java.util.Properties properties31 = new java.util.Properties(properties0);
        java.lang.Object obj32 = properties31.clone();
        java.util.Properties properties33 = new java.util.Properties();
        java.lang.Object obj35 = properties33.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet36 = properties33.stringPropertyNames();
        java.lang.String str37 = properties33.toString();
        java.lang.String str38 = properties33.toString();
        java.lang.String str39 = properties33.toString();
        java.util.Properties properties40 = new java.util.Properties();
        java.util.Properties properties41 = new java.util.Properties();
        java.lang.Object obj43 = properties41.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet44 = properties41.stringPropertyNames();
        boolean boolean45 = properties40.containsValue((java.lang.Object) properties41);
        java.util.Collection<java.lang.Object> objCollection46 = properties40.values();
        java.util.Enumeration<?> wildcardEnumeration47 = properties40.propertyNames();
        java.lang.String str49 = properties40.getProperty("{=hi!}");
        java.util.Properties properties50 = new java.util.Properties(properties40);
        java.util.Properties properties51 = new java.util.Properties();
        java.lang.Object obj53 = properties51.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration54 = properties51.elements();
        boolean boolean55 = properties51.isEmpty();
        java.util.Set<java.lang.Object> objSet56 = properties51.keySet();
        boolean boolean57 = properties51.isEmpty();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet58 = properties51.entrySet();
        java.util.Properties properties59 = new java.util.Properties();
        java.lang.Object obj61 = properties59.remove((java.lang.Object) 0.0d);
        boolean boolean62 = properties59.isEmpty();
        java.lang.Object obj65 = properties59.setProperty("", "hi!");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties66 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties66.setSerialJtaTransactions(false);
        boolean boolean69 = properties51.remove((java.lang.Object) properties59, (java.lang.Object) atomikosProperties66);
        java.util.Properties properties70 = new java.util.Properties(properties59);
        int int71 = properties70.size();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties73 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties73.setSerialJtaTransactions(false);
        boolean boolean76 = atomikosProperties73.isSerialJtaTransactions();
        java.lang.String str77 = atomikosProperties73.getService();
        boolean boolean78 = atomikosProperties73.isEnableLogging();
        java.lang.String str79 = atomikosProperties73.getTransactionManagerUniqueName();
        boolean boolean80 = properties70.remove((java.lang.Object) (byte) 1, (java.lang.Object) atomikosProperties73);
        atomikosProperties73.setThreadedTwoPhaseCommit(true);
        boolean boolean83 = properties40.equals((java.lang.Object) atomikosProperties73);
        boolean boolean84 = properties33.contains((java.lang.Object) properties40);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties85 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties85.setSerialJtaTransactions(false);
        boolean boolean88 = atomikosProperties85.isSerialJtaTransactions();
        java.lang.String str89 = atomikosProperties85.getService();
        atomikosProperties85.setMaxActives((int) (byte) 100);
        atomikosProperties85.setDefaultJtaTimeout((long) (-1));
        atomikosProperties85.setMaxTimeout((long) 1);
        java.lang.Object obj96 = properties31.putIfAbsent((java.lang.Object) properties40, (java.lang.Object) 1);
        java.util.Collection<java.lang.Object> objCollection97 = properties31.values();
        java.util.Collection<java.lang.Object> objCollection98 = properties31.values();
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(strSet3);
        org.junit.Assert.assertNull(obj7);
        org.junit.Assert.assertNotNull(strSet8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(objCollection10);
        org.junit.Assert.assertNotNull(wildcardEnumeration11);
        org.junit.Assert.assertNull(obj13);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(obj29);
        org.junit.Assert.assertNotNull(strSet30);
        org.junit.Assert.assertNotNull(obj32);
        org.junit.Assert.assertEquals(obj32.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj32), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj32), "{}");
        org.junit.Assert.assertNull(obj35);
        org.junit.Assert.assertNotNull(strSet36);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "{}" + "'", str37, "{}");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "{}" + "'", str38, "{}");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "{}" + "'", str39, "{}");
        org.junit.Assert.assertNull(obj43);
        org.junit.Assert.assertNotNull(strSet44);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNotNull(objCollection46);
        org.junit.Assert.assertNotNull(wildcardEnumeration47);
        org.junit.Assert.assertNull(str49);
        org.junit.Assert.assertNull(obj53);
        org.junit.Assert.assertNotNull(objEnumeration54);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertNotNull(objSet56);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertNotNull(objEntrySet58);
        org.junit.Assert.assertNull(obj61);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + true + "'", boolean62 == true);
        org.junit.Assert.assertNull(obj65);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertTrue("'" + int71 + "' != '" + 0 + "'", int71 == 0);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
        org.junit.Assert.assertNull(str77);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + true + "'", boolean78 == true);
        org.junit.Assert.assertNull(str79);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", boolean80 == false);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + false + "'", boolean83 == false);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + false + "'", boolean84 == false);
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + false + "'", boolean88 == false);
        org.junit.Assert.assertNull(str89);
        org.junit.Assert.assertNull(obj96);
        org.junit.Assert.assertNotNull(objCollection97);
        org.junit.Assert.assertNotNull(objCollection98);
    }

    @Test
    public void test7963() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7963");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setSerialJtaTransactions(false);
        boolean boolean3 = atomikosProperties0.isSerialJtaTransactions();
        java.lang.String str4 = atomikosProperties0.getService();
        long long5 = atomikosProperties0.getMaxTimeout();
        atomikosProperties0.setCheckpointInterval((long) (short) 10);
        boolean boolean8 = atomikosProperties0.isSerialJtaTransactions();
        boolean boolean9 = atomikosProperties0.isSerialJtaTransactions();
        atomikosProperties0.setSerialJtaTransactions(false);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertTrue("'" + long5 + "' != '" + 300000L + "'", long5 == 300000L);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
    }

    @Test
    public void test7964() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7964");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration3 = properties0.elements();
        boolean boolean4 = properties0.isEmpty();
        java.util.Set<java.lang.Object> objSet5 = properties0.keySet();
        boolean boolean6 = properties0.isEmpty();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet7 = properties0.entrySet();
        java.util.Properties properties8 = new java.util.Properties();
        java.lang.Object obj10 = properties8.remove((java.lang.Object) 0.0d);
        boolean boolean11 = properties8.isEmpty();
        java.lang.Object obj14 = properties8.setProperty("", "hi!");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties15 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties15.setSerialJtaTransactions(false);
        boolean boolean18 = properties0.remove((java.lang.Object) properties8, (java.lang.Object) atomikosProperties15);
        java.util.Properties properties19 = new java.util.Properties(properties8);
        int int20 = properties19.size();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties22 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties22.setSerialJtaTransactions(false);
        boolean boolean25 = atomikosProperties22.isSerialJtaTransactions();
        java.lang.String str26 = atomikosProperties22.getService();
        boolean boolean27 = atomikosProperties22.isEnableLogging();
        java.lang.String str28 = atomikosProperties22.getTransactionManagerUniqueName();
        boolean boolean29 = properties19.remove((java.lang.Object) (byte) 1, (java.lang.Object) atomikosProperties22);
        java.util.Properties properties30 = new java.util.Properties();
        java.lang.Object obj32 = properties30.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration33 = properties30.elements();
        boolean boolean34 = properties30.isEmpty();
        java.util.Enumeration<java.lang.Object> objEnumeration35 = properties30.elements();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet36 = properties30.entrySet();
        java.lang.Object obj37 = properties19.remove((java.lang.Object) objEntrySet36);
        java.lang.Object obj38 = properties19.clone();
        java.util.Properties properties39 = new java.util.Properties(properties19);
        java.util.Properties properties40 = new java.util.Properties();
        java.util.Collection<java.lang.Object> objCollection41 = properties40.values();
        java.util.Properties properties42 = new java.util.Properties();
        java.lang.Object obj44 = properties42.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet45 = properties42.stringPropertyNames();
        java.util.Properties properties46 = new java.util.Properties();
        java.util.Properties properties47 = new java.util.Properties();
        java.lang.Object obj49 = properties47.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet50 = properties47.stringPropertyNames();
        boolean boolean51 = properties46.containsValue((java.lang.Object) properties47);
        java.util.Collection<java.lang.Object> objCollection52 = properties46.values();
        java.util.Enumeration<?> wildcardEnumeration53 = properties46.propertyNames();
        java.lang.Object obj55 = properties42.put((java.lang.Object) wildcardEnumeration53, (java.lang.Object) 10.0d);
        boolean boolean56 = properties40.equals((java.lang.Object) 10.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration57 = properties40.keys();
        boolean boolean58 = properties39.equals((java.lang.Object) properties40);
        java.io.InputStream inputStream59 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties39.loadFromXML(inputStream59);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(objEnumeration3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(objSet5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(objEntrySet7);
        org.junit.Assert.assertNull(obj10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNull(obj14);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 0 + "'", int20 == 0);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNull(str26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNull(str28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNull(obj32);
        org.junit.Assert.assertNotNull(objEnumeration33);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertNotNull(objEnumeration35);
        org.junit.Assert.assertNotNull(objEntrySet36);
        org.junit.Assert.assertNull(obj37);
        org.junit.Assert.assertNotNull(obj38);
        org.junit.Assert.assertEquals(obj38.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj38), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj38), "{}");
        org.junit.Assert.assertNotNull(objCollection41);
        org.junit.Assert.assertNull(obj44);
        org.junit.Assert.assertNotNull(strSet45);
        org.junit.Assert.assertNull(obj49);
        org.junit.Assert.assertNotNull(strSet50);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertNotNull(objCollection52);
        org.junit.Assert.assertNotNull(wildcardEnumeration53);
        org.junit.Assert.assertNull(obj55);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertNotNull(objEnumeration57);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
    }

    @Test
    public void test7965() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7965");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration3 = properties0.elements();
        boolean boolean4 = properties0.isEmpty();
        java.util.Enumeration<java.lang.Object> objEnumeration5 = properties0.elements();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet6 = properties0.entrySet();
        java.util.Set<java.lang.String> strSet7 = properties0.stringPropertyNames();
        int int8 = properties0.size();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties9 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties9.setSerialJtaTransactions(false);
        atomikosProperties9.setThreadedTwoPhaseCommit(true);
        atomikosProperties9.setSerialJtaTransactions(false);
        java.lang.String str16 = atomikosProperties9.getService();
        java.util.Properties properties17 = atomikosProperties9.asProperties();
        int int18 = properties17.size();
        java.util.Properties properties19 = new java.util.Properties();
        java.util.Collection<java.lang.Object> objCollection20 = properties19.values();
        int int21 = properties19.size();
        java.util.Properties properties22 = new java.util.Properties();
        java.lang.Object obj24 = properties22.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration25 = properties22.elements();
        boolean boolean26 = properties22.isEmpty();
        java.util.Set<java.lang.Object> objSet27 = properties22.keySet();
        java.util.Enumeration<java.lang.Object> objEnumeration28 = properties22.keys();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet29 = properties22.entrySet();
        java.util.Properties properties31 = new java.util.Properties();
        java.lang.Object obj33 = properties31.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration34 = properties31.elements();
        boolean boolean35 = properties31.isEmpty();
        java.util.Set<java.lang.Object> objSet36 = properties31.keySet();
        boolean boolean37 = properties31.isEmpty();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties38 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties38.setSerialJtaTransactions(false);
        atomikosProperties38.setThreadedTwoPhaseCommit(true);
        atomikosProperties38.setMaxTimeout((long) '#');
        boolean boolean45 = atomikosProperties38.isEnableLogging();
        atomikosProperties38.setCheckpointInterval((long) (byte) -1);
        java.util.Properties properties48 = new java.util.Properties();
        java.util.Properties properties49 = new java.util.Properties();
        java.lang.Object obj51 = properties49.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet52 = properties49.stringPropertyNames();
        boolean boolean53 = properties48.containsValue((java.lang.Object) properties49);
        java.util.Collection<java.lang.Object> objCollection54 = properties48.values();
        java.lang.Object obj55 = properties31.replace((java.lang.Object) atomikosProperties38, (java.lang.Object) objCollection54);
        boolean boolean57 = properties22.replace((java.lang.Object) 100.0d, (java.lang.Object) objCollection54, (java.lang.Object) 10.0d);
        boolean boolean58 = properties19.equals((java.lang.Object) properties22);
        java.util.Properties properties59 = new java.util.Properties();
        java.lang.Object obj61 = properties59.remove((java.lang.Object) 0.0d);
        java.util.Collection<java.lang.Object> objCollection62 = properties59.values();
        java.util.Properties properties63 = new java.util.Properties(properties59);
        java.lang.Object obj64 = properties17.put((java.lang.Object) boolean58, (java.lang.Object) properties63);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties65 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties65.setSerialJtaTransactions(false);
        boolean boolean68 = atomikosProperties65.isThreadedTwoPhaseCommit();
        atomikosProperties65.setTransactionManagerUniqueName("hi!");
        long long71 = atomikosProperties65.getCheckpointInterval();
        java.lang.Object obj72 = properties0.putIfAbsent((java.lang.Object) boolean58, (java.lang.Object) long71);
        java.util.Enumeration<java.lang.Object> objEnumeration73 = properties0.elements();
        java.lang.String str75 = properties0.getProperty("{{}=tmlog}");
        java.util.Properties properties76 = new java.util.Properties();
        java.lang.Object obj78 = properties76.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration79 = properties76.elements();
        boolean boolean80 = properties76.isEmpty();
        java.util.Set<java.lang.Object> objSet81 = properties76.keySet();
        java.util.Enumeration<java.lang.Object> objEnumeration82 = properties76.keys();
        java.lang.String str84 = properties76.getProperty("hi!");
        java.lang.String str86 = properties76.getProperty("");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties87 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties87.setSerialJtaTransactions(false);
        atomikosProperties87.setThreadedTwoPhaseCommit(true);
        atomikosProperties87.setEnableLogging(false);
        boolean boolean94 = properties76.containsKey((java.lang.Object) atomikosProperties87);
        atomikosProperties87.setService("tmlog");
        java.lang.Class<?> wildcardClass97 = atomikosProperties87.getClass();
        java.lang.Object obj99 = properties0.putIfAbsent((java.lang.Object) atomikosProperties87, (java.lang.Object) (byte) 1);
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(objEnumeration3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(objEnumeration5);
        org.junit.Assert.assertNotNull(objEntrySet6);
        org.junit.Assert.assertNotNull(strSet7);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertNull(str16);
        org.junit.Assert.assertNotNull(properties17);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 9 + "'", int18 == 9);
        org.junit.Assert.assertNotNull(objCollection20);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 0 + "'", int21 == 0);
        org.junit.Assert.assertNull(obj24);
        org.junit.Assert.assertNotNull(objEnumeration25);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertNotNull(objSet27);
        org.junit.Assert.assertNotNull(objEnumeration28);
        org.junit.Assert.assertNotNull(objEntrySet29);
        org.junit.Assert.assertNull(obj33);
        org.junit.Assert.assertNotNull(objEnumeration34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertNotNull(objSet36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertNull(obj51);
        org.junit.Assert.assertNotNull(strSet52);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertNotNull(objCollection54);
        org.junit.Assert.assertNull(obj55);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertNull(obj61);
        org.junit.Assert.assertNotNull(objCollection62);
        org.junit.Assert.assertNull(obj64);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertTrue("'" + long71 + "' != '" + 500L + "'", long71 == 500L);
        org.junit.Assert.assertNull(obj72);
        org.junit.Assert.assertNotNull(objEnumeration73);
        org.junit.Assert.assertNull(str75);
        org.junit.Assert.assertNull(obj78);
        org.junit.Assert.assertNotNull(objEnumeration79);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + true + "'", boolean80 == true);
        org.junit.Assert.assertNotNull(objSet81);
        org.junit.Assert.assertNotNull(objEnumeration82);
        org.junit.Assert.assertNull(str84);
        org.junit.Assert.assertNull(str86);
        org.junit.Assert.assertTrue("'" + boolean94 + "' != '" + false + "'", boolean94 == false);
        org.junit.Assert.assertNotNull(wildcardClass97);
        org.junit.Assert.assertNull(obj99);
    }

    @Test
    public void test7966() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7966");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration3 = properties0.elements();
        boolean boolean4 = properties0.isEmpty();
        java.util.Set<java.lang.Object> objSet5 = properties0.keySet();
        boolean boolean6 = properties0.isEmpty();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties7 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties7.setSerialJtaTransactions(false);
        atomikosProperties7.setThreadedTwoPhaseCommit(true);
        atomikosProperties7.setMaxTimeout((long) '#');
        boolean boolean14 = atomikosProperties7.isEnableLogging();
        atomikosProperties7.setCheckpointInterval((long) (byte) -1);
        java.util.Properties properties17 = new java.util.Properties();
        java.util.Properties properties18 = new java.util.Properties();
        java.lang.Object obj20 = properties18.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet21 = properties18.stringPropertyNames();
        boolean boolean22 = properties17.containsValue((java.lang.Object) properties18);
        java.util.Collection<java.lang.Object> objCollection23 = properties17.values();
        java.lang.Object obj24 = properties0.replace((java.lang.Object) atomikosProperties7, (java.lang.Object) objCollection23);
        java.lang.String str25 = atomikosProperties7.getService();
        atomikosProperties7.setDefaultJtaTimeout((long) (byte) 1);
        atomikosProperties7.setService("{{}={}}");
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(objEnumeration3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(objSet5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNull(obj20);
        org.junit.Assert.assertNotNull(strSet21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(objCollection23);
        org.junit.Assert.assertNull(obj24);
        org.junit.Assert.assertNull(str25);
    }

    @Test
    public void test7967() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7967");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration3 = properties0.elements();
        java.util.Properties properties5 = new java.util.Properties();
        java.lang.Object obj7 = properties5.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration8 = properties5.elements();
        boolean boolean9 = properties5.isEmpty();
        java.util.Set<java.lang.Object> objSet10 = properties5.keySet();
        boolean boolean11 = properties5.isEmpty();
        java.lang.Object obj12 = properties0.getOrDefault((java.lang.Object) true, (java.lang.Object) boolean11);
        java.util.Properties properties13 = new java.util.Properties();
        java.lang.Object obj15 = properties13.remove((java.lang.Object) 0.0d);
        boolean boolean16 = properties13.isEmpty();
        java.util.Enumeration<java.lang.Object> objEnumeration17 = properties13.keys();
        java.util.Properties properties18 = new java.util.Properties();
        java.lang.Object obj20 = properties18.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet21 = properties18.stringPropertyNames();
        java.util.Properties properties22 = new java.util.Properties();
        java.util.Properties properties23 = new java.util.Properties();
        java.lang.Object obj25 = properties23.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet26 = properties23.stringPropertyNames();
        boolean boolean27 = properties22.containsValue((java.lang.Object) properties23);
        java.util.Collection<java.lang.Object> objCollection28 = properties22.values();
        java.util.Enumeration<?> wildcardEnumeration29 = properties22.propertyNames();
        java.lang.Object obj31 = properties18.put((java.lang.Object) wildcardEnumeration29, (java.lang.Object) 10.0d);
        java.util.Properties properties32 = new java.util.Properties();
        java.util.Properties properties33 = new java.util.Properties();
        java.lang.Object obj35 = properties33.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet36 = properties33.stringPropertyNames();
        boolean boolean37 = properties32.containsValue((java.lang.Object) properties33);
        java.util.Collection<java.lang.Object> objCollection38 = properties32.values();
        java.lang.Object obj39 = properties32.clone();
        boolean boolean40 = properties0.replace((java.lang.Object) properties13, (java.lang.Object) 10.0d, obj39);
        java.util.Collection<java.lang.Object> objCollection41 = properties13.values();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties42 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties42.setSerialJtaTransactions(false);
        atomikosProperties42.setThreadedTwoPhaseCommit(true);
        atomikosProperties42.setEnableLogging(false);
        boolean boolean49 = atomikosProperties42.isSerialJtaTransactions();
        int int50 = atomikosProperties42.getMaxActives();
        boolean boolean51 = atomikosProperties42.isEnableLogging();
        long long52 = atomikosProperties42.getCheckpointInterval();
        java.util.Properties properties53 = atomikosProperties42.asProperties();
        java.util.Enumeration<java.lang.Object> objEnumeration54 = properties53.elements();
        boolean boolean55 = properties13.containsValue((java.lang.Object) properties53);
        boolean boolean56 = properties13.isEmpty();
        java.util.Properties properties57 = new java.util.Properties(properties13);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties58 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties58.setSerialJtaTransactions(false);
        atomikosProperties58.setThreadedTwoPhaseCommit(true);
        atomikosProperties58.setEnableLogging(false);
        boolean boolean65 = atomikosProperties58.isSerialJtaTransactions();
        int int66 = atomikosProperties58.getMaxActives();
        boolean boolean67 = atomikosProperties58.isEnableLogging();
        long long68 = atomikosProperties58.getCheckpointInterval();
        java.util.Properties properties69 = atomikosProperties58.asProperties();
        java.util.Properties properties70 = atomikosProperties58.asProperties();
        boolean boolean71 = properties57.containsValue((java.lang.Object) atomikosProperties58);
        atomikosProperties58.setThreadedTwoPhaseCommit(false);
        java.util.Properties properties74 = atomikosProperties58.asProperties();
        java.util.Enumeration<java.lang.Object> objEnumeration75 = properties74.keys();
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(objEnumeration3);
        org.junit.Assert.assertNull(obj7);
        org.junit.Assert.assertNotNull(objEnumeration8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertNotNull(objSet10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertEquals("'" + obj12 + "' != '" + true + "'", obj12, true);
        org.junit.Assert.assertNull(obj15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(objEnumeration17);
        org.junit.Assert.assertNull(obj20);
        org.junit.Assert.assertNotNull(strSet21);
        org.junit.Assert.assertNull(obj25);
        org.junit.Assert.assertNotNull(strSet26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(objCollection28);
        org.junit.Assert.assertNotNull(wildcardEnumeration29);
        org.junit.Assert.assertNull(obj31);
        org.junit.Assert.assertNull(obj35);
        org.junit.Assert.assertNotNull(strSet36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(objCollection38);
        org.junit.Assert.assertNotNull(obj39);
        org.junit.Assert.assertEquals(obj39.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj39), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj39), "{}");
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(objCollection41);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + 50 + "'", int50 == 50);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertTrue("'" + long52 + "' != '" + 500L + "'", long52 == 500L);
        org.junit.Assert.assertNotNull(properties53);
        org.junit.Assert.assertNotNull(objEnumeration54);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertTrue("'" + int66 + "' != '" + 50 + "'", int66 == 50);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertTrue("'" + long68 + "' != '" + 500L + "'", long68 == 500L);
        org.junit.Assert.assertNotNull(properties69);
        org.junit.Assert.assertNotNull(properties70);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertNotNull(properties74);
        org.junit.Assert.assertNotNull(objEnumeration75);
    }

    @Test
    public void test7968() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7968");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setSerialJtaTransactions(false);
        atomikosProperties0.setThreadedTwoPhaseCommit(true);
        atomikosProperties0.setMaxTimeout((long) '#');
        java.lang.String str7 = atomikosProperties0.getLogBaseDir();
        boolean boolean8 = atomikosProperties0.isThreadedTwoPhaseCommit();
        atomikosProperties0.setLogBaseName("hi!");
        java.util.Properties properties11 = atomikosProperties0.asProperties();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties12 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties12.setSerialJtaTransactions(false);
        atomikosProperties12.setThreadedTwoPhaseCommit(true);
        atomikosProperties12.setThreadedTwoPhaseCommit(true);
        int int19 = atomikosProperties12.getMaxActives();
        atomikosProperties12.setTransactionManagerUniqueName("{=hi!}");
        boolean boolean22 = properties11.containsValue((java.lang.Object) "{=hi!}");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties23 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties23.setSerialJtaTransactions(false);
        atomikosProperties23.setThreadedTwoPhaseCommit(true);
        atomikosProperties23.setMaxTimeout((long) '#');
        boolean boolean30 = atomikosProperties23.isEnableLogging();
        atomikosProperties23.setCheckpointInterval((long) 100);
        java.lang.String str33 = atomikosProperties23.getTransactionManagerUniqueName();
        atomikosProperties23.setCheckpointInterval((long) (byte) 100);
        java.util.Properties properties36 = atomikosProperties23.asProperties();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties37 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties37.setSerialJtaTransactions(false);
        boolean boolean40 = atomikosProperties37.isSerialJtaTransactions();
        java.lang.String str41 = atomikosProperties37.getService();
        boolean boolean42 = atomikosProperties37.isEnableLogging();
        long long43 = atomikosProperties37.getMaxTimeout();
        java.util.Properties properties44 = atomikosProperties37.asProperties();
        boolean boolean45 = properties36.contains((java.lang.Object) properties44);
        java.util.Properties properties46 = new java.util.Properties();
        java.lang.Object obj48 = properties46.remove((java.lang.Object) 0.0d);
        java.util.Properties properties49 = new java.util.Properties();
        java.util.Collection<java.lang.Object> objCollection50 = properties49.values();
        java.util.Enumeration<java.lang.Object> objEnumeration51 = properties49.keys();
        java.util.Properties properties52 = new java.util.Properties();
        java.lang.Object obj54 = properties52.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration55 = properties52.elements();
        boolean boolean56 = properties52.isEmpty();
        java.util.Set<java.lang.Object> objSet57 = properties52.keySet();
        java.util.Enumeration<java.lang.Object> objEnumeration58 = properties52.keys();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet59 = properties52.entrySet();
        java.lang.Object obj60 = properties46.put((java.lang.Object) properties49, (java.lang.Object) properties52);
        java.lang.String str62 = properties49.getProperty("{=hi!}");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties63 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties63.setSerialJtaTransactions(false);
        atomikosProperties63.setThreadedTwoPhaseCommit(true);
        atomikosProperties63.setThreadedTwoPhaseCommit(true);
        long long70 = atomikosProperties63.getMaxTimeout();
        boolean boolean71 = properties49.containsValue((java.lang.Object) atomikosProperties63);
        java.util.Enumeration<java.lang.Object> objEnumeration72 = properties49.elements();
        java.util.Set<java.lang.String> strSet73 = properties49.stringPropertyNames();
        java.lang.Object obj74 = properties36.get((java.lang.Object) properties49);
        properties36.clear();
        properties11.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties36);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(properties11);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 50 + "'", int19 == 50);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNull(str33);
        org.junit.Assert.assertNotNull(properties36);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNull(str41);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertTrue("'" + long43 + "' != '" + 300000L + "'", long43 == 300000L);
        org.junit.Assert.assertNotNull(properties44);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNull(obj48);
        org.junit.Assert.assertNotNull(objCollection50);
        org.junit.Assert.assertNotNull(objEnumeration51);
        org.junit.Assert.assertNull(obj54);
        org.junit.Assert.assertNotNull(objEnumeration55);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertNotNull(objSet57);
        org.junit.Assert.assertNotNull(objEnumeration58);
        org.junit.Assert.assertNotNull(objEntrySet59);
        org.junit.Assert.assertNull(obj60);
        org.junit.Assert.assertNull(str62);
        org.junit.Assert.assertTrue("'" + long70 + "' != '" + 300000L + "'", long70 == 300000L);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertNotNull(objEnumeration72);
        org.junit.Assert.assertNotNull(strSet73);
        org.junit.Assert.assertNull(obj74);
    }

    @Test
    public void test7969() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7969");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration3 = properties0.elements();
        boolean boolean4 = properties0.isEmpty();
        java.util.Set<java.lang.Object> objSet5 = properties0.keySet();
        boolean boolean6 = properties0.isEmpty();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet7 = properties0.entrySet();
        java.util.Properties properties8 = new java.util.Properties();
        java.lang.Object obj10 = properties8.remove((java.lang.Object) 0.0d);
        boolean boolean11 = properties8.isEmpty();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties12 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        boolean boolean13 = properties8.containsValue((java.lang.Object) atomikosProperties12);
        java.util.Properties properties14 = new java.util.Properties();
        java.lang.Object obj16 = properties14.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration17 = properties14.elements();
        int int18 = properties14.size();
        java.util.Properties properties19 = new java.util.Properties(properties14);
        java.util.Set<java.lang.String> strSet20 = properties14.stringPropertyNames();
        java.util.Set<java.lang.String> strSet21 = properties14.stringPropertyNames();
        java.lang.Object obj22 = properties0.getOrDefault((java.lang.Object) properties8, (java.lang.Object) properties14);
        java.util.Properties properties23 = new java.util.Properties();
        java.util.Collection<java.lang.Object> objCollection24 = properties23.values();
        java.util.Collection<java.lang.Object> objCollection25 = properties23.values();
        boolean boolean26 = properties23.isEmpty();
        properties0.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties23);
        java.util.Properties properties28 = new java.util.Properties();
        java.lang.Object obj30 = properties28.remove((java.lang.Object) 0.0d);
        java.util.Properties properties31 = new java.util.Properties();
        java.util.Collection<java.lang.Object> objCollection32 = properties31.values();
        java.util.Enumeration<java.lang.Object> objEnumeration33 = properties31.keys();
        java.util.Properties properties34 = new java.util.Properties();
        java.lang.Object obj36 = properties34.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration37 = properties34.elements();
        boolean boolean38 = properties34.isEmpty();
        java.util.Set<java.lang.Object> objSet39 = properties34.keySet();
        java.util.Enumeration<java.lang.Object> objEnumeration40 = properties34.keys();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet41 = properties34.entrySet();
        java.lang.Object obj42 = properties28.put((java.lang.Object) properties31, (java.lang.Object) properties34);
        java.util.Enumeration<java.lang.Object> objEnumeration43 = properties28.keys();
        java.util.Set<java.lang.String> strSet44 = properties28.stringPropertyNames();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet45 = properties28.entrySet();
        boolean boolean46 = properties0.contains((java.lang.Object) properties28);
        java.lang.Object obj47 = null;
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties48 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties48.setSerialJtaTransactions(false);
        boolean boolean51 = atomikosProperties48.isSerialJtaTransactions();
        java.lang.String str52 = atomikosProperties48.getService();
        atomikosProperties48.setEnableLogging(false);
        atomikosProperties48.setLogBaseDir("{}");
        atomikosProperties48.setLogBaseDir("{{}={}}");
        atomikosProperties48.setLogBaseName("hi!");
        atomikosProperties48.setEnableLogging(false);
        atomikosProperties48.setCheckpointInterval(0L);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties65 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties65.setSerialJtaTransactions(false);
        atomikosProperties65.setThreadedTwoPhaseCommit(true);
        atomikosProperties65.setMaxTimeout((long) '#');
        boolean boolean72 = atomikosProperties65.isEnableLogging();
        atomikosProperties65.setMaxActives((int) '#');
        boolean boolean75 = atomikosProperties65.isForceShutdownOnVmExit();
        atomikosProperties65.setEnableLogging(true);
        atomikosProperties65.setCheckpointInterval((long) 'a');
        atomikosProperties65.setTransactionManagerUniqueName("{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=false, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=true, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
        long long82 = atomikosProperties65.getMaxTimeout();
        boolean boolean83 = atomikosProperties65.isEnableLogging();
        java.lang.String str84 = atomikosProperties65.getLogBaseDir();
        java.lang.String str85 = atomikosProperties65.getLogBaseDir();
        java.lang.String str86 = atomikosProperties65.getService();
        java.lang.Class<?> wildcardClass87 = atomikosProperties65.getClass();
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean88 = properties0.replace(obj47, (java.lang.Object) 0L, (java.lang.Object) atomikosProperties65);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(objEnumeration3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(objSet5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(objEntrySet7);
        org.junit.Assert.assertNull(obj10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNull(obj16);
        org.junit.Assert.assertNotNull(objEnumeration17);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 0 + "'", int18 == 0);
        org.junit.Assert.assertNotNull(strSet20);
        org.junit.Assert.assertNotNull(strSet21);
        org.junit.Assert.assertNotNull(obj22);
        org.junit.Assert.assertEquals(obj22.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj22), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj22), "{}");
        org.junit.Assert.assertNotNull(objCollection24);
        org.junit.Assert.assertNotNull(objCollection25);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertNull(obj30);
        org.junit.Assert.assertNotNull(objCollection32);
        org.junit.Assert.assertNotNull(objEnumeration33);
        org.junit.Assert.assertNull(obj36);
        org.junit.Assert.assertNotNull(objEnumeration37);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertNotNull(objSet39);
        org.junit.Assert.assertNotNull(objEnumeration40);
        org.junit.Assert.assertNotNull(objEntrySet41);
        org.junit.Assert.assertNull(obj42);
        org.junit.Assert.assertNotNull(objEnumeration43);
        org.junit.Assert.assertNotNull(strSet44);
        org.junit.Assert.assertNotNull(objEntrySet45);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertNull(str52);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + true + "'", boolean72 == true);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
        org.junit.Assert.assertTrue("'" + long82 + "' != '" + 35L + "'", long82 == 35L);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + true + "'", boolean83 == true);
        org.junit.Assert.assertNull(str84);
        org.junit.Assert.assertNull(str85);
        org.junit.Assert.assertNull(str86);
        org.junit.Assert.assertNotNull(wildcardClass87);
    }

    @Test
    public void test7970() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7970");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration3 = properties0.elements();
        boolean boolean4 = properties0.isEmpty();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet5 = properties0.entrySet();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties7 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties7.setSerialJtaTransactions(false);
        atomikosProperties7.setThreadedTwoPhaseCommit(true);
        atomikosProperties7.setMaxTimeout((long) '#');
        boolean boolean14 = atomikosProperties7.isForceShutdownOnVmExit();
        java.lang.Object obj15 = properties0.put((java.lang.Object) (short) 1, (java.lang.Object) atomikosProperties7);
        atomikosProperties7.setForceShutdownOnVmExit(false);
        long long18 = atomikosProperties7.getDefaultJtaTimeout();
        atomikosProperties7.setThreadedTwoPhaseCommit(true);
        java.util.Properties properties21 = atomikosProperties7.asProperties();
        atomikosProperties7.setLogBaseDir("{{}={}}");
        boolean boolean24 = atomikosProperties7.isSerialJtaTransactions();
        boolean boolean25 = atomikosProperties7.isForceShutdownOnVmExit();
        atomikosProperties7.setLogBaseName("{com.atomikos.icatch.enable_logging=false, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=1, com.atomikos.icatch.serial_jta_transactions=false, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(objEnumeration3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(objEntrySet5);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNull(obj15);
        org.junit.Assert.assertTrue("'" + long18 + "' != '" + 10000L + "'", long18 == 10000L);
        org.junit.Assert.assertNotNull(properties21);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
    }

    @Test
    public void test7971() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7971");
        java.util.Properties properties0 = new java.util.Properties();
        java.util.Collection<java.lang.Object> objCollection1 = properties0.values();
        java.util.Enumeration<java.lang.Object> objEnumeration2 = properties0.keys();
        java.lang.Object obj5 = properties0.setProperty("{}", "{}");
        java.util.Set<java.lang.String> strSet6 = properties0.stringPropertyNames();
        java.util.Properties properties7 = new java.util.Properties();
        boolean boolean9 = properties7.contains((java.lang.Object) 100.0d);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties10 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties10.setSerialJtaTransactions(false);
        atomikosProperties10.setThreadedTwoPhaseCommit(true);
        atomikosProperties10.setSerialJtaTransactions(false);
        java.lang.String str17 = atomikosProperties10.getService();
        boolean boolean18 = properties7.containsKey((java.lang.Object) atomikosProperties10);
        boolean boolean19 = properties0.containsKey((java.lang.Object) properties7);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties20 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties20.setSerialJtaTransactions(false);
        boolean boolean23 = atomikosProperties20.isSerialJtaTransactions();
        atomikosProperties20.setTransactionManagerUniqueName("hi!");
        java.lang.String str26 = atomikosProperties20.getLogBaseName();
        java.lang.String str27 = atomikosProperties20.getLogBaseName();
        long long28 = atomikosProperties20.getDefaultJtaTimeout();
        java.util.Properties properties29 = new java.util.Properties();
        java.lang.Object obj31 = properties29.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration32 = properties29.elements();
        boolean boolean33 = properties29.isEmpty();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet34 = properties29.entrySet();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties36 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties36.setSerialJtaTransactions(false);
        atomikosProperties36.setThreadedTwoPhaseCommit(true);
        atomikosProperties36.setMaxTimeout((long) '#');
        boolean boolean43 = atomikosProperties36.isForceShutdownOnVmExit();
        java.lang.Object obj44 = properties29.put((java.lang.Object) (short) 1, (java.lang.Object) atomikosProperties36);
        atomikosProperties36.setForceShutdownOnVmExit(true);
        java.util.Properties properties47 = atomikosProperties36.asProperties();
        java.lang.Object obj48 = properties0.getOrDefault((java.lang.Object) atomikosProperties20, (java.lang.Object) properties47);
        java.lang.String str49 = properties0.toString();
        org.junit.Assert.assertNotNull(objCollection1);
        org.junit.Assert.assertNotNull(objEnumeration2);
        org.junit.Assert.assertNull(obj5);
        org.junit.Assert.assertNotNull(strSet6);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNull(str17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "tmlog" + "'", str26, "tmlog");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "tmlog" + "'", str27, "tmlog");
        org.junit.Assert.assertTrue("'" + long28 + "' != '" + 10000L + "'", long28 == 10000L);
        org.junit.Assert.assertNull(obj31);
        org.junit.Assert.assertNotNull(objEnumeration32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNotNull(objEntrySet34);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNull(obj44);
        org.junit.Assert.assertNotNull(properties47);
        org.junit.Assert.assertNotNull(obj48);
// flaky:         org.junit.Assert.assertEquals(obj48.toString(), "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=true, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=false, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=35, com.atomikos.icatch.threaded_2pc=true, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
// flaky:         org.junit.Assert.assertEquals(java.lang.String.valueOf(obj48), "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=true, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=false, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=35, com.atomikos.icatch.threaded_2pc=true, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
// flaky:         org.junit.Assert.assertEquals(java.util.Objects.toString(obj48), "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=true, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=false, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=35, com.atomikos.icatch.threaded_2pc=true, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "{{}={}}" + "'", str49, "{{}={}}");
    }

    @Test
    public void test7972() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7972");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setSerialJtaTransactions(false);
        atomikosProperties0.setThreadedTwoPhaseCommit(true);
        atomikosProperties0.setMaxTimeout((long) '#');
        boolean boolean7 = atomikosProperties0.isForceShutdownOnVmExit();
        atomikosProperties0.setCheckpointInterval((long) '4');
        java.util.Properties properties10 = atomikosProperties0.asProperties();
        java.util.Properties properties11 = atomikosProperties0.asProperties();
        java.lang.String str12 = atomikosProperties0.getService();
        atomikosProperties0.setSerialJtaTransactions(false);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(properties10);
        org.junit.Assert.assertNotNull(properties11);
        org.junit.Assert.assertNull(str12);
    }

    @Test
    public void test7973() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7973");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration3 = properties0.elements();
        boolean boolean4 = properties0.isEmpty();
        java.util.Set<java.lang.Object> objSet5 = properties0.keySet();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties6 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties6.setSerialJtaTransactions(false);
        atomikosProperties6.setThreadedTwoPhaseCommit(true);
        atomikosProperties6.setThreadedTwoPhaseCommit(true);
        java.util.Properties properties13 = atomikosProperties6.asProperties();
        int int14 = atomikosProperties6.getMaxActives();
        java.util.Properties properties15 = new java.util.Properties();
        java.lang.Object obj17 = properties15.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration18 = properties15.elements();
        boolean boolean19 = properties15.isEmpty();
        java.util.Set<java.lang.Object> objSet20 = properties15.keySet();
        boolean boolean22 = properties15.containsKey((java.lang.Object) (-1.0f));
        java.lang.Object obj23 = properties0.put((java.lang.Object) atomikosProperties6, (java.lang.Object) properties15);
        properties0.clear();
        java.util.Enumeration<java.lang.Object> objEnumeration25 = properties0.elements();
        java.util.Properties properties26 = new java.util.Properties(properties0);
        java.util.Properties properties27 = new java.util.Properties();
        java.lang.Object obj29 = properties27.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration30 = properties27.elements();
        boolean boolean31 = properties27.isEmpty();
        java.util.Set<java.lang.Object> objSet32 = properties27.keySet();
        boolean boolean33 = properties27.isEmpty();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet34 = properties27.entrySet();
        java.util.Set<java.lang.String> strSet35 = properties27.stringPropertyNames();
        int int36 = properties27.size();
        java.util.Collection<java.lang.Object> objCollection37 = properties27.values();
        java.util.Set<java.lang.Object> objSet38 = properties27.keySet();
        java.util.Collection<java.lang.Object> objCollection39 = properties27.values();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties40 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties40.setSerialJtaTransactions(false);
        boolean boolean43 = atomikosProperties40.isSerialJtaTransactions();
        atomikosProperties40.setTransactionManagerUniqueName("tmlog");
        java.util.Properties properties46 = atomikosProperties40.asProperties();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties47 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties47.setSerialJtaTransactions(false);
        boolean boolean50 = atomikosProperties47.isSerialJtaTransactions();
        atomikosProperties47.setTransactionManagerUniqueName("hi!");
        boolean boolean53 = atomikosProperties47.isEnableLogging();
        java.lang.String str54 = atomikosProperties47.getTransactionManagerUniqueName();
        atomikosProperties47.setCheckpointInterval(1L);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties57 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties57.setSerialJtaTransactions(false);
        atomikosProperties57.setThreadedTwoPhaseCommit(true);
        atomikosProperties57.setThreadedTwoPhaseCommit(true);
        java.util.Properties properties64 = atomikosProperties57.asProperties();
        int int65 = atomikosProperties57.getMaxActives();
        atomikosProperties57.setService("hi!");
        long long68 = atomikosProperties57.getMaxTimeout();
        atomikosProperties57.setTransactionManagerUniqueName("hi!");
        java.util.Properties properties71 = atomikosProperties57.asProperties();
        java.lang.Object obj72 = properties46.getOrDefault((java.lang.Object) atomikosProperties47, (java.lang.Object) properties71);
        java.util.Collection<java.lang.Object> objCollection73 = properties46.values();
        java.lang.Object obj74 = properties0.putIfAbsent((java.lang.Object) properties27, (java.lang.Object) objCollection73);
        java.util.Properties properties75 = new java.util.Properties(properties0);
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(objEnumeration3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(objSet5);
        org.junit.Assert.assertNotNull(properties13);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 50 + "'", int14 == 50);
        org.junit.Assert.assertNull(obj17);
        org.junit.Assert.assertNotNull(objEnumeration18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(objSet20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNull(obj23);
        org.junit.Assert.assertNotNull(objEnumeration25);
        org.junit.Assert.assertNull(obj29);
        org.junit.Assert.assertNotNull(objEnumeration30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNotNull(objSet32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNotNull(objEntrySet34);
        org.junit.Assert.assertNotNull(strSet35);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 0 + "'", int36 == 0);
        org.junit.Assert.assertNotNull(objCollection37);
        org.junit.Assert.assertNotNull(objSet38);
        org.junit.Assert.assertNotNull(objCollection39);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(properties46);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "hi!" + "'", str54, "hi!");
        org.junit.Assert.assertNotNull(properties64);
        org.junit.Assert.assertTrue("'" + int65 + "' != '" + 50 + "'", int65 == 50);
        org.junit.Assert.assertTrue("'" + long68 + "' != '" + 300000L + "'", long68 == 300000L);
        org.junit.Assert.assertNotNull(properties71);
        org.junit.Assert.assertNotNull(obj72);
// flaky:         org.junit.Assert.assertEquals(obj72.toString(), "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=false, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.service=hi!, com.atomikos.icatch.threaded_2pc=true, com.atomikos.icatch.tm_unique_name=hi!, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
// flaky:         org.junit.Assert.assertEquals(java.lang.String.valueOf(obj72), "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=false, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.service=hi!, com.atomikos.icatch.threaded_2pc=true, com.atomikos.icatch.tm_unique_name=hi!, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
// flaky:         org.junit.Assert.assertEquals(java.util.Objects.toString(obj72), "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=false, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.service=hi!, com.atomikos.icatch.threaded_2pc=true, com.atomikos.icatch.tm_unique_name=hi!, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
        org.junit.Assert.assertNotNull(objCollection73);
        org.junit.Assert.assertNull(obj74);
    }

    @Test
    public void test7974() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7974");
        java.util.Properties properties0 = new java.util.Properties();
        java.util.Properties properties1 = new java.util.Properties();
        java.lang.Object obj3 = properties1.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet4 = properties1.stringPropertyNames();
        boolean boolean5 = properties0.containsValue((java.lang.Object) properties1);
        java.util.Collection<java.lang.Object> objCollection6 = properties0.values();
        java.util.Properties properties8 = new java.util.Properties();
        java.lang.Object obj10 = properties8.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration11 = properties8.elements();
        boolean boolean12 = properties8.isEmpty();
        java.util.Set<java.lang.Object> objSet13 = properties8.keySet();
        java.lang.Object obj14 = properties0.putIfAbsent((java.lang.Object) "hi!", (java.lang.Object) objSet13);
        java.util.Set<java.lang.Object> objSet15 = properties0.keySet();
        java.util.Set<java.lang.Object> objSet16 = properties0.keySet();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet17 = properties0.entrySet();
        java.util.Properties properties18 = new java.util.Properties();
        java.lang.Object obj20 = properties18.remove((java.lang.Object) 0.0d);
        boolean boolean21 = properties18.isEmpty();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties22 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        boolean boolean23 = properties18.containsValue((java.lang.Object) atomikosProperties22);
        java.lang.String str25 = properties18.getProperty("tmlog");
        properties0.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties18);
        int int27 = properties0.size();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties28 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties28.setSerialJtaTransactions(false);
        boolean boolean31 = atomikosProperties28.isSerialJtaTransactions();
        atomikosProperties28.setTransactionManagerUniqueName("hi!");
        java.lang.String str34 = atomikosProperties28.getLogBaseName();
        java.lang.String str35 = atomikosProperties28.getLogBaseName();
        boolean boolean36 = atomikosProperties28.isForceShutdownOnVmExit();
        long long37 = atomikosProperties28.getMaxTimeout();
        java.lang.String str38 = atomikosProperties28.getTransactionManagerUniqueName();
        java.lang.String str39 = atomikosProperties28.getLogBaseName();
        atomikosProperties28.setMaxActives((int) ' ');
        atomikosProperties28.setSerialJtaTransactions(false);
        java.lang.String str44 = atomikosProperties28.getLogBaseName();
        java.lang.Object obj45 = properties0.get((java.lang.Object) atomikosProperties28);
        org.junit.Assert.assertNull(obj3);
        org.junit.Assert.assertNotNull(strSet4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(objCollection6);
        org.junit.Assert.assertNull(obj10);
        org.junit.Assert.assertNotNull(objEnumeration11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(objSet13);
        org.junit.Assert.assertNull(obj14);
        org.junit.Assert.assertNotNull(objSet15);
        org.junit.Assert.assertNotNull(objSet16);
        org.junit.Assert.assertNotNull(objEntrySet17);
        org.junit.Assert.assertNull(obj20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNull(str25);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 1 + "'", int27 == 1);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "tmlog" + "'", str34, "tmlog");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "tmlog" + "'", str35, "tmlog");
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertTrue("'" + long37 + "' != '" + 300000L + "'", long37 == 300000L);
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "hi!" + "'", str38, "hi!");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "tmlog" + "'", str39, "tmlog");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "tmlog" + "'", str44, "tmlog");
        org.junit.Assert.assertNull(obj45);
    }

    @Test
    public void test7975() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7975");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        boolean boolean3 = properties0.isEmpty();
        java.util.Enumeration<java.lang.Object> objEnumeration4 = properties0.elements();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet5 = properties0.entrySet();
        java.util.Enumeration<java.lang.Object> objEnumeration6 = properties0.keys();
        java.util.Properties properties7 = new java.util.Properties();
        java.util.Collection<java.lang.Object> objCollection8 = properties7.values();
        java.util.Enumeration<java.lang.Object> objEnumeration9 = properties7.keys();
        properties7.clear();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties11 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties11.setSerialJtaTransactions(false);
        boolean boolean14 = atomikosProperties11.isSerialJtaTransactions();
        atomikosProperties11.setTransactionManagerUniqueName("hi!");
        java.lang.String str17 = atomikosProperties11.getLogBaseName();
        java.lang.String str18 = atomikosProperties11.getLogBaseName();
        java.lang.Object obj19 = properties7.get((java.lang.Object) str18);
        boolean boolean20 = properties0.contains((java.lang.Object) properties7);
        java.lang.Object obj21 = properties0.clone();
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(objEnumeration4);
        org.junit.Assert.assertNotNull(objEntrySet5);
        org.junit.Assert.assertNotNull(objEnumeration6);
        org.junit.Assert.assertNotNull(objCollection8);
        org.junit.Assert.assertNotNull(objEnumeration9);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "tmlog" + "'", str17, "tmlog");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "tmlog" + "'", str18, "tmlog");
        org.junit.Assert.assertNull(obj19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(obj21);
        org.junit.Assert.assertEquals(obj21.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj21), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj21), "{}");
    }

    @Test
    public void test7976() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7976");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setSerialJtaTransactions(false);
        atomikosProperties0.setThreadedTwoPhaseCommit(true);
        atomikosProperties0.setSerialJtaTransactions(false);
        java.lang.String str7 = atomikosProperties0.getService();
        java.lang.String str8 = atomikosProperties0.getLogBaseDir();
        atomikosProperties0.setService("{{}={}}");
        atomikosProperties0.setDefaultJtaTimeout((long) (short) 0);
        atomikosProperties0.setThreadedTwoPhaseCommit(true);
        java.lang.String str15 = atomikosProperties0.getLogBaseDir();
        atomikosProperties0.setMaxActives(0);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNull(str15);
    }

    @Test
    public void test7977() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7977");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration3 = properties0.elements();
        boolean boolean4 = properties0.isEmpty();
        java.util.Set<java.lang.Object> objSet5 = properties0.keySet();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties6 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties6.setSerialJtaTransactions(false);
        atomikosProperties6.setThreadedTwoPhaseCommit(true);
        atomikosProperties6.setThreadedTwoPhaseCommit(true);
        java.util.Properties properties13 = atomikosProperties6.asProperties();
        int int14 = atomikosProperties6.getMaxActives();
        java.util.Properties properties15 = new java.util.Properties();
        java.lang.Object obj17 = properties15.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration18 = properties15.elements();
        boolean boolean19 = properties15.isEmpty();
        java.util.Set<java.lang.Object> objSet20 = properties15.keySet();
        boolean boolean22 = properties15.containsKey((java.lang.Object) (-1.0f));
        java.lang.Object obj23 = properties0.put((java.lang.Object) atomikosProperties6, (java.lang.Object) properties15);
        java.util.Properties properties24 = new java.util.Properties();
        java.lang.Object obj26 = properties24.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet27 = properties24.stringPropertyNames();
        java.util.Properties properties28 = new java.util.Properties();
        java.lang.Object obj30 = properties28.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet31 = properties28.stringPropertyNames();
        java.lang.Object obj33 = properties24.put((java.lang.Object) strSet31, (java.lang.Object) 0.0d);
        java.util.Properties properties34 = new java.util.Properties();
        java.util.Properties properties35 = new java.util.Properties();
        java.lang.Object obj37 = properties35.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet38 = properties35.stringPropertyNames();
        boolean boolean39 = properties34.containsValue((java.lang.Object) properties35);
        java.util.Collection<java.lang.Object> objCollection40 = properties34.values();
        java.util.Properties properties42 = new java.util.Properties();
        java.lang.Object obj44 = properties42.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration45 = properties42.elements();
        boolean boolean46 = properties42.isEmpty();
        java.util.Set<java.lang.Object> objSet47 = properties42.keySet();
        java.lang.Object obj48 = properties34.putIfAbsent((java.lang.Object) "hi!", (java.lang.Object) objSet47);
        java.util.Set<java.lang.Object> objSet49 = properties34.keySet();
        java.lang.Object obj51 = properties24.putIfAbsent((java.lang.Object) properties34, (java.lang.Object) (short) 10);
        java.util.Enumeration<?> wildcardEnumeration52 = properties34.propertyNames();
        properties0.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties34);
        properties34.clear();
        java.lang.String str56 = properties34.getProperty("{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=false, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.tm_unique_name=tmlog, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
        java.io.Reader reader57 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties34.load(reader57);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(objEnumeration3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(objSet5);
        org.junit.Assert.assertNotNull(properties13);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 50 + "'", int14 == 50);
        org.junit.Assert.assertNull(obj17);
        org.junit.Assert.assertNotNull(objEnumeration18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(objSet20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNull(obj23);
        org.junit.Assert.assertNull(obj26);
        org.junit.Assert.assertNotNull(strSet27);
        org.junit.Assert.assertNull(obj30);
        org.junit.Assert.assertNotNull(strSet31);
        org.junit.Assert.assertNull(obj33);
        org.junit.Assert.assertNull(obj37);
        org.junit.Assert.assertNotNull(strSet38);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(objCollection40);
        org.junit.Assert.assertNull(obj44);
        org.junit.Assert.assertNotNull(objEnumeration45);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertNotNull(objSet47);
        org.junit.Assert.assertNull(obj48);
        org.junit.Assert.assertNotNull(objSet49);
        org.junit.Assert.assertNull(obj51);
        org.junit.Assert.assertNotNull(wildcardEnumeration52);
        org.junit.Assert.assertNull(str56);
    }

    @Test
    public void test7978() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7978");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setSerialJtaTransactions(false);
        atomikosProperties0.setThreadedTwoPhaseCommit(true);
        atomikosProperties0.setMaxTimeout((long) '#');
        boolean boolean7 = atomikosProperties0.isEnableLogging();
        int int8 = atomikosProperties0.getMaxActives();
        atomikosProperties0.setDefaultJtaTimeout((long) (short) 0);
        java.util.Properties properties11 = atomikosProperties0.asProperties();
        java.util.Properties properties12 = new java.util.Properties();
        java.lang.Object obj14 = properties12.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration15 = properties12.elements();
        boolean boolean16 = properties12.isEmpty();
        java.util.Set<java.lang.Object> objSet17 = properties12.keySet();
        java.util.Enumeration<java.lang.Object> objEnumeration18 = properties12.keys();
        java.lang.String str20 = properties12.getProperty("hi!");
        java.lang.String str22 = properties12.getProperty("");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties23 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties23.setSerialJtaTransactions(false);
        atomikosProperties23.setThreadedTwoPhaseCommit(true);
        atomikosProperties23.setEnableLogging(false);
        boolean boolean30 = properties12.containsKey((java.lang.Object) atomikosProperties23);
        java.lang.Object obj33 = properties12.setProperty("hi!", "");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties34 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties34.setSerialJtaTransactions(false);
        boolean boolean37 = atomikosProperties34.isThreadedTwoPhaseCommit();
        atomikosProperties34.setThreadedTwoPhaseCommit(false);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties40 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties40.setSerialJtaTransactions(false);
        atomikosProperties40.setThreadedTwoPhaseCommit(true);
        atomikosProperties40.setMaxTimeout((long) '#');
        boolean boolean47 = atomikosProperties40.isEnableLogging();
        java.lang.Object obj48 = properties12.put((java.lang.Object) false, (java.lang.Object) boolean47);
        java.lang.Object obj49 = properties12.clone();
        java.lang.Object obj50 = properties12.clone();
        properties11.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties12);
        java.lang.Object obj54 = properties12.setProperty("{{}=tmlog}", "{tmlog=}");
        java.util.Set<java.lang.Object> objSet55 = properties12.keySet();
        java.lang.Object obj56 = properties12.clone();
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 50 + "'", int8 == 50);
        org.junit.Assert.assertNotNull(properties11);
        org.junit.Assert.assertNull(obj14);
        org.junit.Assert.assertNotNull(objEnumeration15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(objSet17);
        org.junit.Assert.assertNotNull(objEnumeration18);
        org.junit.Assert.assertNull(str20);
        org.junit.Assert.assertNull(str22);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNull(obj33);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertNull(obj48);
        org.junit.Assert.assertNotNull(obj49);
        org.junit.Assert.assertEquals(obj49.toString(), "{hi!=, false=true}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj49), "{hi!=, false=true}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj49), "{hi!=, false=true}");
        org.junit.Assert.assertNotNull(obj50);
        org.junit.Assert.assertEquals(obj50.toString(), "{hi!=, false=true}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj50), "{hi!=, false=true}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj50), "{hi!=, false=true}");
        org.junit.Assert.assertNull(obj54);
        org.junit.Assert.assertNotNull(objSet55);
        org.junit.Assert.assertNotNull(obj56);
// flaky:         org.junit.Assert.assertEquals(obj56.toString(), "{hi!=, {{}=tmlog}={tmlog=}, false=true}");
// flaky:         org.junit.Assert.assertEquals(java.lang.String.valueOf(obj56), "{hi!=, {{}=tmlog}={tmlog=}, false=true}");
// flaky:         org.junit.Assert.assertEquals(java.util.Objects.toString(obj56), "{hi!=, {{}=tmlog}={tmlog=}, false=true}");
    }

    @Test
    public void test7979() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7979");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration3 = properties0.elements();
        boolean boolean4 = properties0.isEmpty();
        java.util.Set<java.lang.Object> objSet5 = properties0.keySet();
        java.util.Enumeration<java.lang.Object> objEnumeration6 = properties0.keys();
        java.lang.String str8 = properties0.getProperty("hi!");
        java.lang.String str10 = properties0.getProperty("");
        java.util.Enumeration<?> wildcardEnumeration11 = properties0.propertyNames();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet12 = properties0.entrySet();
        java.util.Properties properties13 = new java.util.Properties();
        java.lang.Object obj15 = properties13.remove((java.lang.Object) 0.0d);
        boolean boolean16 = properties13.isEmpty();
        java.lang.Object obj19 = properties13.setProperty("", "hi!");
        java.util.Set<java.lang.Object> objSet20 = properties13.keySet();
        java.util.Set<java.lang.Object> objSet21 = properties13.keySet();
        java.util.Properties properties22 = new java.util.Properties();
        java.lang.Object obj24 = properties22.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet25 = properties22.stringPropertyNames();
        java.lang.String str26 = properties22.toString();
        java.util.Properties properties27 = new java.util.Properties();
        java.lang.Object obj29 = properties27.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration30 = properties27.elements();
        boolean boolean31 = properties27.isEmpty();
        java.lang.Object obj34 = properties27.setProperty("tmlog", "");
        properties22.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties27);
        java.lang.Object obj36 = properties27.clone();
        java.util.Properties properties37 = new java.util.Properties();
        java.lang.Object obj39 = properties37.remove((java.lang.Object) 0.0d);
        boolean boolean40 = properties37.isEmpty();
        java.util.Enumeration<java.lang.Object> objEnumeration41 = properties37.elements();
        java.util.Enumeration<java.lang.Object> objEnumeration42 = properties37.elements();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties43 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties43.setSerialJtaTransactions(false);
        atomikosProperties43.setThreadedTwoPhaseCommit(true);
        atomikosProperties43.setMaxTimeout((long) '#');
        boolean boolean50 = atomikosProperties43.isForceShutdownOnVmExit();
        int int51 = atomikosProperties43.getMaxActives();
        java.lang.Object obj52 = properties37.remove((java.lang.Object) int51);
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet53 = properties37.entrySet();
        boolean boolean54 = properties27.containsKey((java.lang.Object) objEntrySet53);
        boolean boolean55 = properties0.remove((java.lang.Object) objSet21, (java.lang.Object) objEntrySet53);
        java.lang.Object obj56 = properties0.clone();
        boolean boolean57 = properties0.isEmpty();
        java.util.Enumeration<java.lang.Object> objEnumeration58 = properties0.keys();
        java.lang.Object obj61 = properties0.setProperty("{=hi!}", "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=false, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.tm_unique_name=tmlog, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
        java.io.InputStream inputStream62 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties0.load(inputStream62);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(objEnumeration3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(objSet5);
        org.junit.Assert.assertNotNull(objEnumeration6);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertNotNull(wildcardEnumeration11);
        org.junit.Assert.assertNotNull(objEntrySet12);
        org.junit.Assert.assertNull(obj15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNull(obj19);
        org.junit.Assert.assertNotNull(objSet20);
        org.junit.Assert.assertNotNull(objSet21);
        org.junit.Assert.assertNull(obj24);
        org.junit.Assert.assertNotNull(strSet25);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "{}" + "'", str26, "{}");
        org.junit.Assert.assertNull(obj29);
        org.junit.Assert.assertNotNull(objEnumeration30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNull(obj34);
        org.junit.Assert.assertNotNull(obj36);
        org.junit.Assert.assertEquals(obj36.toString(), "{tmlog=}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj36), "{tmlog=}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj36), "{tmlog=}");
        org.junit.Assert.assertNull(obj39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNotNull(objEnumeration41);
        org.junit.Assert.assertNotNull(objEnumeration42);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + 50 + "'", int51 == 50);
        org.junit.Assert.assertNull(obj52);
        org.junit.Assert.assertNotNull(objEntrySet53);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertNotNull(obj56);
        org.junit.Assert.assertEquals(obj56.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj56), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj56), "{}");
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertNotNull(objEnumeration58);
        org.junit.Assert.assertNull(obj61);
    }

    @Test
    public void test7980() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7980");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        boolean boolean3 = properties0.isEmpty();
        java.lang.Object obj6 = properties0.setProperty("", "hi!");
        java.util.Properties properties7 = new java.util.Properties();
        java.lang.Object obj9 = properties7.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration10 = properties7.elements();
        boolean boolean11 = properties7.isEmpty();
        java.util.Set<java.lang.Object> objSet12 = properties7.keySet();
        boolean boolean13 = properties7.isEmpty();
        java.util.Properties properties14 = new java.util.Properties();
        java.util.Collection<java.lang.Object> objCollection15 = properties14.values();
        java.util.Enumeration<java.lang.Object> objEnumeration16 = properties14.keys();
        java.lang.Object obj17 = properties7.remove((java.lang.Object) properties14);
        java.lang.Object obj18 = properties0.get((java.lang.Object) properties14);
        java.util.Enumeration<java.lang.Object> objEnumeration19 = properties14.keys();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties20 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties20.setSerialJtaTransactions(false);
        atomikosProperties20.setThreadedTwoPhaseCommit(true);
        atomikosProperties20.setMaxTimeout((long) '#');
        boolean boolean27 = atomikosProperties20.isForceShutdownOnVmExit();
        long long28 = atomikosProperties20.getCheckpointInterval();
        java.lang.Object obj29 = new java.lang.Object();
        boolean boolean31 = properties14.replace((java.lang.Object) long28, obj29, (java.lang.Object) "hi!");
        java.lang.String str32 = properties14.toString();
        java.util.Properties properties33 = new java.util.Properties(properties14);
        java.io.PrintStream printStream34 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties14.list(printStream34);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNull(obj6);
        org.junit.Assert.assertNull(obj9);
        org.junit.Assert.assertNotNull(objEnumeration10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNotNull(objSet12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(objCollection15);
        org.junit.Assert.assertNotNull(objEnumeration16);
        org.junit.Assert.assertNull(obj17);
        org.junit.Assert.assertNull(obj18);
        org.junit.Assert.assertNotNull(objEnumeration19);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertTrue("'" + long28 + "' != '" + 500L + "'", long28 == 500L);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "{}" + "'", str32, "{}");
    }

    @Test
    public void test7981() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7981");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setSerialJtaTransactions(false);
        boolean boolean3 = atomikosProperties0.isSerialJtaTransactions();
        java.lang.String str4 = atomikosProperties0.getService();
        boolean boolean5 = atomikosProperties0.isEnableLogging();
        java.lang.String str6 = atomikosProperties0.getTransactionManagerUniqueName();
        java.lang.String str7 = atomikosProperties0.getLogBaseName();
        java.lang.String str8 = atomikosProperties0.getLogBaseDir();
        atomikosProperties0.setEnableLogging(false);
        java.lang.String str11 = atomikosProperties0.getTransactionManagerUniqueName();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "tmlog" + "'", str7, "tmlog");
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNull(str11);
    }

    @Test
    public void test7982() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7982");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        boolean boolean3 = properties0.isEmpty();
        java.lang.Object obj6 = properties0.setProperty("", "hi!");
        java.util.Properties properties7 = new java.util.Properties();
        java.lang.Object obj9 = properties7.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration10 = properties7.elements();
        boolean boolean11 = properties7.isEmpty();
        java.util.Set<java.lang.Object> objSet12 = properties7.keySet();
        boolean boolean13 = properties7.isEmpty();
        java.util.Properties properties14 = new java.util.Properties();
        java.util.Collection<java.lang.Object> objCollection15 = properties14.values();
        java.util.Enumeration<java.lang.Object> objEnumeration16 = properties14.keys();
        java.lang.Object obj17 = properties7.remove((java.lang.Object) properties14);
        java.lang.Object obj18 = properties0.get((java.lang.Object) properties14);
        java.util.Enumeration<java.lang.Object> objEnumeration19 = properties14.keys();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties20 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties20.setSerialJtaTransactions(false);
        atomikosProperties20.setThreadedTwoPhaseCommit(true);
        atomikosProperties20.setMaxTimeout((long) '#');
        boolean boolean27 = atomikosProperties20.isForceShutdownOnVmExit();
        long long28 = atomikosProperties20.getCheckpointInterval();
        java.lang.Object obj29 = new java.lang.Object();
        boolean boolean31 = properties14.replace((java.lang.Object) long28, obj29, (java.lang.Object) "hi!");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties32 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties32.setSerialJtaTransactions(false);
        boolean boolean35 = atomikosProperties32.isSerialJtaTransactions();
        atomikosProperties32.setTransactionManagerUniqueName("hi!");
        java.lang.String str38 = atomikosProperties32.getLogBaseName();
        java.lang.String str39 = atomikosProperties32.getLogBaseName();
        boolean boolean40 = atomikosProperties32.isSerialJtaTransactions();
        java.util.Properties properties41 = new java.util.Properties();
        java.util.Properties properties42 = new java.util.Properties();
        java.lang.Object obj44 = properties42.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet45 = properties42.stringPropertyNames();
        boolean boolean46 = properties41.containsValue((java.lang.Object) properties42);
        java.util.Properties properties47 = new java.util.Properties();
        java.lang.Object obj49 = properties47.remove((java.lang.Object) 0.0d);
        boolean boolean51 = properties47.containsValue((java.lang.Object) "hi!");
        boolean boolean52 = properties42.contains((java.lang.Object) "hi!");
        boolean boolean53 = properties14.remove((java.lang.Object) atomikosProperties32, (java.lang.Object) boolean52);
        java.io.OutputStream outputStream54 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties14.storeToXML(outputStream54, "{{{}={}}={}, =hi!}");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNull(obj6);
        org.junit.Assert.assertNull(obj9);
        org.junit.Assert.assertNotNull(objEnumeration10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNotNull(objSet12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(objCollection15);
        org.junit.Assert.assertNotNull(objEnumeration16);
        org.junit.Assert.assertNull(obj17);
        org.junit.Assert.assertNull(obj18);
        org.junit.Assert.assertNotNull(objEnumeration19);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertTrue("'" + long28 + "' != '" + 500L + "'", long28 == 500L);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "tmlog" + "'", str38, "tmlog");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "tmlog" + "'", str39, "tmlog");
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNull(obj44);
        org.junit.Assert.assertNotNull(strSet45);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNull(obj49);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
    }

    @Test
    public void test7983() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7983");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        boolean boolean3 = properties0.isEmpty();
        java.util.Enumeration<java.lang.Object> objEnumeration4 = properties0.elements();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet5 = properties0.entrySet();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties6 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties6.setSerialJtaTransactions(false);
        atomikosProperties6.setThreadedTwoPhaseCommit(true);
        atomikosProperties6.setMaxTimeout((long) '#');
        boolean boolean13 = atomikosProperties6.isEnableLogging();
        atomikosProperties6.setCheckpointInterval((long) (byte) -1);
        atomikosProperties6.setCheckpointInterval(0L);
        java.lang.String str18 = atomikosProperties6.getService();
        atomikosProperties6.setService("{com.atomikos.icatch.enable_logging=false, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=1, com.atomikos.icatch.serial_jta_transactions=false, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
        boolean boolean21 = atomikosProperties6.isThreadedTwoPhaseCommit();
        boolean boolean22 = properties0.containsKey((java.lang.Object) boolean21);
        boolean boolean23 = properties0.isEmpty();
        boolean boolean24 = properties0.isEmpty();
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(objEnumeration4);
        org.junit.Assert.assertNotNull(objEntrySet5);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNull(str18);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
    }

    @Test
    public void test7984() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7984");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        java.util.Properties properties3 = new java.util.Properties();
        java.util.Collection<java.lang.Object> objCollection4 = properties3.values();
        java.util.Enumeration<java.lang.Object> objEnumeration5 = properties3.keys();
        java.util.Properties properties6 = new java.util.Properties();
        java.lang.Object obj8 = properties6.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration9 = properties6.elements();
        boolean boolean10 = properties6.isEmpty();
        java.util.Set<java.lang.Object> objSet11 = properties6.keySet();
        java.util.Enumeration<java.lang.Object> objEnumeration12 = properties6.keys();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet13 = properties6.entrySet();
        java.lang.Object obj14 = properties0.put((java.lang.Object) properties3, (java.lang.Object) properties6);
        java.io.InputStream inputStream15 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties6.loadFromXML(inputStream15);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(objCollection4);
        org.junit.Assert.assertNotNull(objEnumeration5);
        org.junit.Assert.assertNull(obj8);
        org.junit.Assert.assertNotNull(objEnumeration9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(objSet11);
        org.junit.Assert.assertNotNull(objEnumeration12);
        org.junit.Assert.assertNotNull(objEntrySet13);
        org.junit.Assert.assertNull(obj14);
    }

    @Test
    public void test7985() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7985");
        java.util.Properties properties0 = new java.util.Properties();
        java.util.Properties properties1 = new java.util.Properties();
        java.lang.Object obj3 = properties1.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet4 = properties1.stringPropertyNames();
        boolean boolean5 = properties0.containsValue((java.lang.Object) properties1);
        java.util.Collection<java.lang.Object> objCollection6 = properties0.values();
        java.util.Properties properties8 = new java.util.Properties();
        java.lang.Object obj10 = properties8.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration11 = properties8.elements();
        boolean boolean12 = properties8.isEmpty();
        java.util.Set<java.lang.Object> objSet13 = properties8.keySet();
        java.lang.Object obj14 = properties0.putIfAbsent((java.lang.Object) "hi!", (java.lang.Object) objSet13);
        java.util.Set<java.lang.Object> objSet15 = properties0.keySet();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties16 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties16.setSerialJtaTransactions(false);
        atomikosProperties16.setThreadedTwoPhaseCommit(true);
        atomikosProperties16.setMaxTimeout((long) '#');
        boolean boolean23 = atomikosProperties16.isEnableLogging();
        atomikosProperties16.setCheckpointInterval((long) (byte) -1);
        atomikosProperties16.setEnableLogging(true);
        java.util.Properties properties28 = new java.util.Properties();
        java.lang.Object obj30 = properties28.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration31 = properties28.elements();
        boolean boolean32 = properties28.isEmpty();
        java.util.Enumeration<java.lang.Object> objEnumeration33 = properties28.elements();
        java.lang.Object obj34 = properties0.replace((java.lang.Object) true, (java.lang.Object) properties28);
        java.util.Properties properties35 = new java.util.Properties();
        java.lang.Object obj37 = properties35.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration38 = properties35.elements();
        int int39 = properties35.size();
        java.util.Properties properties40 = new java.util.Properties(properties35);
        java.util.Set<java.lang.String> strSet41 = properties35.stringPropertyNames();
        boolean boolean42 = properties0.contains((java.lang.Object) strSet41);
        java.util.Collection<java.lang.Object> objCollection43 = properties0.values();
        java.util.Properties properties44 = new java.util.Properties(properties0);
        java.lang.String str46 = properties0.getProperty("");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties47 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties47.setSerialJtaTransactions(false);
        boolean boolean50 = atomikosProperties47.isSerialJtaTransactions();
        atomikosProperties47.setTransactionManagerUniqueName("hi!");
        atomikosProperties47.setForceShutdownOnVmExit(false);
        atomikosProperties47.setDefaultJtaTimeout((long) (byte) 10);
        java.lang.String str57 = atomikosProperties47.getTransactionManagerUniqueName();
        atomikosProperties47.setForceShutdownOnVmExit(false);
        long long60 = atomikosProperties47.getMaxTimeout();
        java.util.Properties properties61 = atomikosProperties47.asProperties();
        java.util.Properties properties62 = new java.util.Properties();
        java.lang.Object obj64 = properties62.remove((java.lang.Object) 0.0d);
        boolean boolean66 = properties62.containsValue((java.lang.Object) "hi!");
        java.lang.Object obj69 = properties62.put((java.lang.Object) (byte) -1, (java.lang.Object) 100L);
        java.util.Enumeration<java.lang.Object> objEnumeration70 = properties62.keys();
        java.util.Enumeration<java.lang.Object> objEnumeration71 = properties62.elements();
        java.lang.Object obj72 = properties62.clone();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties73 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties73.setSerialJtaTransactions(false);
        atomikosProperties73.setThreadedTwoPhaseCommit(true);
        atomikosProperties73.setMaxTimeout((long) '#');
        boolean boolean80 = atomikosProperties73.isEnableLogging();
        atomikosProperties73.setMaxActives((int) '#');
        boolean boolean83 = atomikosProperties73.isForceShutdownOnVmExit();
        atomikosProperties73.setEnableLogging(true);
        atomikosProperties73.setCheckpointInterval((long) 'a');
        atomikosProperties73.setTransactionManagerUniqueName("{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=false, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=true, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
        long long90 = atomikosProperties73.getMaxTimeout();
        boolean boolean91 = atomikosProperties73.isEnableLogging();
        boolean boolean92 = properties62.contains((java.lang.Object) boolean91);
        java.lang.Object obj93 = properties0.replace((java.lang.Object) properties61, (java.lang.Object) boolean92);
        java.io.OutputStream outputStream94 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties61.storeToXML(outputStream94, "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=false, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}", "{com.atomikos.icatch.enable_logging=false, com.atomikos.icatch.force_shutdown_on_vm_exit=true, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=false, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=32, com.atomikos.icatch.service={{}={}}, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.max_actives=-1, com.atomikos.icatch.log_base_name=tmlog}");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(obj3);
        org.junit.Assert.assertNotNull(strSet4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(objCollection6);
        org.junit.Assert.assertNull(obj10);
        org.junit.Assert.assertNotNull(objEnumeration11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(objSet13);
        org.junit.Assert.assertNull(obj14);
        org.junit.Assert.assertNotNull(objSet15);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNull(obj30);
        org.junit.Assert.assertNotNull(objEnumeration31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertNotNull(objEnumeration33);
        org.junit.Assert.assertNull(obj34);
        org.junit.Assert.assertNull(obj37);
        org.junit.Assert.assertNotNull(objEnumeration38);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 0 + "'", int39 == 0);
        org.junit.Assert.assertNotNull(strSet41);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertNotNull(objCollection43);
        org.junit.Assert.assertNull(str46);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "hi!" + "'", str57, "hi!");
        org.junit.Assert.assertTrue("'" + long60 + "' != '" + 300000L + "'", long60 == 300000L);
        org.junit.Assert.assertNotNull(properties61);
        org.junit.Assert.assertNull(obj64);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertNull(obj69);
        org.junit.Assert.assertNotNull(objEnumeration70);
        org.junit.Assert.assertNotNull(objEnumeration71);
        org.junit.Assert.assertNotNull(obj72);
        org.junit.Assert.assertEquals(obj72.toString(), "{-1=100}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj72), "{-1=100}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj72), "{-1=100}");
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + true + "'", boolean80 == true);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + false + "'", boolean83 == false);
        org.junit.Assert.assertTrue("'" + long90 + "' != '" + 35L + "'", long90 == 35L);
        org.junit.Assert.assertTrue("'" + boolean91 + "' != '" + true + "'", boolean91 == true);
        org.junit.Assert.assertTrue("'" + boolean92 + "' != '" + false + "'", boolean92 == false);
        org.junit.Assert.assertNull(obj93);
    }

    @Test
    public void test7986() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7986");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setSerialJtaTransactions(false);
        atomikosProperties0.setThreadedTwoPhaseCommit(true);
        atomikosProperties0.setThreadedTwoPhaseCommit(true);
        boolean boolean7 = atomikosProperties0.isSerialJtaTransactions();
        java.util.Properties properties8 = atomikosProperties0.asProperties();
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(properties8);
    }

    @Test
    public void test7987() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7987");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration3 = properties0.elements();
        boolean boolean4 = properties0.isEmpty();
        java.lang.Object obj7 = properties0.setProperty("tmlog", "");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties8 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties8.setSerialJtaTransactions(false);
        boolean boolean11 = atomikosProperties8.isSerialJtaTransactions();
        atomikosProperties8.setTransactionManagerUniqueName("hi!");
        atomikosProperties8.setForceShutdownOnVmExit(false);
        atomikosProperties8.setDefaultJtaTimeout((long) (byte) 10);
        java.lang.String str18 = atomikosProperties8.getTransactionManagerUniqueName();
        java.util.Properties properties19 = new java.util.Properties();
        java.util.Properties properties20 = new java.util.Properties();
        java.lang.Object obj22 = properties20.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet23 = properties20.stringPropertyNames();
        boolean boolean24 = properties19.containsValue((java.lang.Object) properties20);
        java.util.Collection<java.lang.Object> objCollection25 = properties19.values();
        java.util.Properties properties27 = new java.util.Properties();
        java.lang.Object obj29 = properties27.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration30 = properties27.elements();
        boolean boolean31 = properties27.isEmpty();
        java.util.Set<java.lang.Object> objSet32 = properties27.keySet();
        java.lang.Object obj33 = properties19.putIfAbsent((java.lang.Object) "hi!", (java.lang.Object) objSet32);
        java.util.Set<java.lang.Object> objSet34 = properties19.keySet();
        java.util.Set<java.lang.Object> objSet35 = properties19.keySet();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet36 = properties19.entrySet();
        java.util.Set<java.lang.Object> objSet37 = properties19.keySet();
        java.lang.Object obj38 = properties0.replace((java.lang.Object) atomikosProperties8, (java.lang.Object) properties19);
        java.util.Properties properties39 = atomikosProperties8.asProperties();
        boolean boolean40 = atomikosProperties8.isSerialJtaTransactions();
        java.lang.String str41 = atomikosProperties8.getLogBaseDir();
        java.lang.String str42 = atomikosProperties8.getService();
        boolean boolean43 = atomikosProperties8.isThreadedTwoPhaseCommit();
        atomikosProperties8.setEnableLogging(false);
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(objEnumeration3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNull(obj7);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "hi!" + "'", str18, "hi!");
        org.junit.Assert.assertNull(obj22);
        org.junit.Assert.assertNotNull(strSet23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(objCollection25);
        org.junit.Assert.assertNull(obj29);
        org.junit.Assert.assertNotNull(objEnumeration30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNotNull(objSet32);
        org.junit.Assert.assertNull(obj33);
        org.junit.Assert.assertNotNull(objSet34);
        org.junit.Assert.assertNotNull(objSet35);
        org.junit.Assert.assertNotNull(objEntrySet36);
        org.junit.Assert.assertNotNull(objSet37);
        org.junit.Assert.assertNull(obj38);
        org.junit.Assert.assertNotNull(properties39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNull(str41);
        org.junit.Assert.assertNull(str42);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
    }

    @Test
    public void test7988() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7988");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration3 = properties0.elements();
        boolean boolean4 = properties0.isEmpty();
        java.util.Set<java.lang.Object> objSet5 = properties0.keySet();
        boolean boolean6 = properties0.isEmpty();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet7 = properties0.entrySet();
        java.util.Properties properties8 = new java.util.Properties();
        java.lang.Object obj10 = properties8.remove((java.lang.Object) 0.0d);
        boolean boolean11 = properties8.isEmpty();
        java.lang.Object obj14 = properties8.setProperty("", "hi!");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties15 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties15.setSerialJtaTransactions(false);
        boolean boolean18 = properties0.remove((java.lang.Object) properties8, (java.lang.Object) atomikosProperties15);
        java.util.Properties properties19 = new java.util.Properties(properties8);
        java.util.Enumeration<java.lang.Object> objEnumeration20 = properties19.elements();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet21 = properties19.entrySet();
        java.util.Enumeration<java.lang.Object> objEnumeration22 = properties19.elements();
        java.util.Properties properties23 = new java.util.Properties();
        java.lang.Object obj25 = properties23.remove((java.lang.Object) 0.0d);
        java.util.Properties properties26 = new java.util.Properties();
        java.util.Collection<java.lang.Object> objCollection27 = properties26.values();
        java.util.Enumeration<java.lang.Object> objEnumeration28 = properties26.keys();
        java.util.Properties properties29 = new java.util.Properties();
        java.lang.Object obj31 = properties29.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration32 = properties29.elements();
        boolean boolean33 = properties29.isEmpty();
        java.util.Set<java.lang.Object> objSet34 = properties29.keySet();
        java.util.Enumeration<java.lang.Object> objEnumeration35 = properties29.keys();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet36 = properties29.entrySet();
        java.lang.Object obj37 = properties23.put((java.lang.Object) properties26, (java.lang.Object) properties29);
        java.lang.Object obj38 = properties26.clone();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties39 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties39.setSerialJtaTransactions(false);
        atomikosProperties39.setThreadedTwoPhaseCommit(true);
        atomikosProperties39.setMaxTimeout((long) '#');
        boolean boolean46 = atomikosProperties39.isEnableLogging();
        atomikosProperties39.setCheckpointInterval((long) 100);
        atomikosProperties39.setSerialJtaTransactions(true);
        boolean boolean51 = properties26.equals((java.lang.Object) atomikosProperties39);
        java.util.Properties properties52 = atomikosProperties39.asProperties();
        java.util.Properties properties53 = new java.util.Properties(properties52);
        java.util.Properties properties54 = new java.util.Properties();
        java.lang.Object obj56 = properties54.remove((java.lang.Object) 0.0d);
        boolean boolean57 = properties54.isEmpty();
        java.lang.Object obj60 = properties54.setProperty("", "hi!");
        java.util.Properties properties61 = new java.util.Properties();
        java.lang.Object obj63 = properties61.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration64 = properties61.elements();
        boolean boolean65 = properties61.isEmpty();
        java.util.Set<java.lang.Object> objSet66 = properties61.keySet();
        boolean boolean67 = properties61.isEmpty();
        java.util.Properties properties68 = new java.util.Properties();
        java.util.Collection<java.lang.Object> objCollection69 = properties68.values();
        java.util.Enumeration<java.lang.Object> objEnumeration70 = properties68.keys();
        java.lang.Object obj71 = properties61.remove((java.lang.Object) properties68);
        java.lang.Object obj72 = properties54.get((java.lang.Object) properties68);
        java.util.Properties properties73 = new java.util.Properties();
        java.lang.Object obj75 = properties73.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration76 = properties73.elements();
        boolean boolean77 = properties73.isEmpty();
        java.util.Set<java.lang.Object> objSet78 = properties73.keySet();
        boolean boolean79 = properties73.isEmpty();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet80 = properties73.entrySet();
        java.util.Properties properties81 = new java.util.Properties();
        java.lang.Object obj83 = properties81.remove((java.lang.Object) 0.0d);
        boolean boolean84 = properties81.isEmpty();
        java.lang.Object obj87 = properties81.setProperty("", "hi!");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties88 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties88.setSerialJtaTransactions(false);
        boolean boolean91 = properties73.remove((java.lang.Object) properties81, (java.lang.Object) atomikosProperties88);
        properties68.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties73);
        properties53.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties73);
        boolean boolean94 = properties19.containsKey((java.lang.Object) properties53);
        properties53.clear();
        properties53.clear();
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(objEnumeration3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(objSet5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(objEntrySet7);
        org.junit.Assert.assertNull(obj10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNull(obj14);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(objEnumeration20);
        org.junit.Assert.assertNotNull(objEntrySet21);
        org.junit.Assert.assertNotNull(objEnumeration22);
        org.junit.Assert.assertNull(obj25);
        org.junit.Assert.assertNotNull(objCollection27);
        org.junit.Assert.assertNotNull(objEnumeration28);
        org.junit.Assert.assertNull(obj31);
        org.junit.Assert.assertNotNull(objEnumeration32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNotNull(objSet34);
        org.junit.Assert.assertNotNull(objEnumeration35);
        org.junit.Assert.assertNotNull(objEntrySet36);
        org.junit.Assert.assertNull(obj37);
        org.junit.Assert.assertNotNull(obj38);
        org.junit.Assert.assertEquals(obj38.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj38), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj38), "{}");
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertNotNull(properties52);
        org.junit.Assert.assertNull(obj56);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertNull(obj60);
        org.junit.Assert.assertNull(obj63);
        org.junit.Assert.assertNotNull(objEnumeration64);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65 == true);
        org.junit.Assert.assertNotNull(objSet66);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + true + "'", boolean67 == true);
        org.junit.Assert.assertNotNull(objCollection69);
        org.junit.Assert.assertNotNull(objEnumeration70);
        org.junit.Assert.assertNull(obj71);
        org.junit.Assert.assertNull(obj72);
        org.junit.Assert.assertNull(obj75);
        org.junit.Assert.assertNotNull(objEnumeration76);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + true + "'", boolean77 == true);
        org.junit.Assert.assertNotNull(objSet78);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + true + "'", boolean79 == true);
        org.junit.Assert.assertNotNull(objEntrySet80);
        org.junit.Assert.assertNull(obj83);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + true + "'", boolean84 == true);
        org.junit.Assert.assertNull(obj87);
        org.junit.Assert.assertTrue("'" + boolean91 + "' != '" + false + "'", boolean91 == false);
        org.junit.Assert.assertTrue("'" + boolean94 + "' != '" + false + "'", boolean94 == false);
    }

    @Test
    public void test7989() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7989");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration3 = properties0.elements();
        boolean boolean4 = properties0.isEmpty();
        java.util.Set<java.lang.Object> objSet5 = properties0.keySet();
        boolean boolean6 = properties0.isEmpty();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet7 = properties0.entrySet();
        java.util.Set<java.lang.Object> objSet8 = properties0.keySet();
        boolean boolean9 = properties0.isEmpty();
        java.util.Collection<java.lang.Object> objCollection10 = properties0.values();
        java.util.Properties properties11 = new java.util.Properties();
        java.lang.Object obj13 = properties11.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration14 = properties11.elements();
        boolean boolean15 = properties11.isEmpty();
        java.util.Set<java.lang.Object> objSet16 = properties11.keySet();
        boolean boolean17 = properties11.isEmpty();
        java.lang.Object obj18 = properties0.remove((java.lang.Object) properties11);
        java.lang.Object obj19 = null;
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties20 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties20.setSerialJtaTransactions(false);
        atomikosProperties20.setThreadedTwoPhaseCommit(true);
        atomikosProperties20.setMaxTimeout((long) '#');
        boolean boolean27 = atomikosProperties20.isEnableLogging();
        atomikosProperties20.setCheckpointInterval((long) (byte) -1);
        atomikosProperties20.setCheckpointInterval(0L);
        java.lang.String str32 = atomikosProperties20.getService();
        java.util.Properties properties33 = atomikosProperties20.asProperties();
        atomikosProperties20.setThreadedTwoPhaseCommit(false);
        boolean boolean36 = atomikosProperties20.isEnableLogging();
        atomikosProperties20.setLogBaseName("{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=false, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.tm_unique_name=tmlog, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj39 = properties0.putIfAbsent(obj19, (java.lang.Object) "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=false, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.tm_unique_name=tmlog, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(objEnumeration3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(objSet5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(objEntrySet7);
        org.junit.Assert.assertNotNull(objSet8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertNotNull(objCollection10);
        org.junit.Assert.assertNull(obj13);
        org.junit.Assert.assertNotNull(objEnumeration14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(objSet16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNull(obj18);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNull(str32);
        org.junit.Assert.assertNotNull(properties33);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
    }

    @Test
    public void test7990() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7990");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration3 = properties0.elements();
        java.util.Enumeration<java.lang.Object> objEnumeration4 = properties0.keys();
        java.util.Set<java.lang.Object> objSet5 = properties0.keySet();
        java.util.Collection<java.lang.Object> objCollection6 = properties0.values();
        java.util.Properties properties7 = new java.util.Properties();
        java.lang.Object obj9 = properties7.remove((java.lang.Object) 0.0d);
        boolean boolean10 = properties7.isEmpty();
        java.util.Enumeration<java.lang.Object> objEnumeration11 = properties7.elements();
        java.lang.Object obj14 = properties7.replace((java.lang.Object) 1, (java.lang.Object) 1);
        java.lang.String str16 = properties7.getProperty("hi!");
        java.util.Properties properties17 = new java.util.Properties();
        java.lang.Object obj19 = properties17.remove((java.lang.Object) 0.0d);
        java.util.Collection<java.lang.Object> objCollection20 = properties17.values();
        boolean boolean21 = properties7.contains((java.lang.Object) properties17);
        properties17.clear();
        boolean boolean23 = properties0.contains((java.lang.Object) properties17);
        java.io.Writer writer24 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties0.store(writer24, "");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(objEnumeration3);
        org.junit.Assert.assertNotNull(objEnumeration4);
        org.junit.Assert.assertNotNull(objSet5);
        org.junit.Assert.assertNotNull(objCollection6);
        org.junit.Assert.assertNull(obj9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(objEnumeration11);
        org.junit.Assert.assertNull(obj14);
        org.junit.Assert.assertNull(str16);
        org.junit.Assert.assertNull(obj19);
        org.junit.Assert.assertNotNull(objCollection20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
    }

    @Test
    public void test7991() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7991");
        java.util.Properties properties0 = new java.util.Properties();
        boolean boolean2 = properties0.contains((java.lang.Object) 100.0d);
        java.util.Properties properties3 = new java.util.Properties();
        java.lang.Object obj5 = properties3.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration6 = properties3.elements();
        boolean boolean7 = properties3.isEmpty();
        java.util.Set<java.lang.Object> objSet8 = properties3.keySet();
        boolean boolean9 = properties3.isEmpty();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet10 = properties3.entrySet();
        java.util.Properties properties11 = new java.util.Properties();
        java.lang.Object obj13 = properties11.remove((java.lang.Object) 0.0d);
        boolean boolean14 = properties11.isEmpty();
        java.lang.Object obj17 = properties11.setProperty("", "hi!");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties18 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties18.setSerialJtaTransactions(false);
        boolean boolean21 = properties3.remove((java.lang.Object) properties11, (java.lang.Object) atomikosProperties18);
        boolean boolean22 = properties0.equals((java.lang.Object) properties3);
        java.util.Enumeration<java.lang.Object> objEnumeration23 = properties0.elements();
        java.lang.String str25 = properties0.getProperty("{tmlog=}");
        properties0.clear();
        java.util.Properties properties27 = new java.util.Properties();
        java.util.Collection<java.lang.Object> objCollection28 = properties27.values();
        java.util.Collection<java.lang.Object> objCollection29 = properties27.values();
        java.util.Properties properties30 = new java.util.Properties(properties27);
        java.util.Enumeration<?> wildcardEnumeration31 = properties30.propertyNames();
        java.lang.String str32 = properties30.toString();
        properties0.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties30);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNull(obj5);
        org.junit.Assert.assertNotNull(objEnumeration6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(objSet8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertNotNull(objEntrySet10);
        org.junit.Assert.assertNull(obj13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNull(obj17);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNotNull(objEnumeration23);
        org.junit.Assert.assertNull(str25);
        org.junit.Assert.assertNotNull(objCollection28);
        org.junit.Assert.assertNotNull(objCollection29);
        org.junit.Assert.assertNotNull(wildcardEnumeration31);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "{}" + "'", str32, "{}");
    }

    @Test
    public void test7992() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7992");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration3 = properties0.elements();
        boolean boolean4 = properties0.isEmpty();
        java.util.Set<java.lang.Object> objSet5 = properties0.keySet();
        java.util.Enumeration<java.lang.Object> objEnumeration6 = properties0.keys();
        boolean boolean8 = properties0.equals((java.lang.Object) "");
        java.lang.String str9 = properties0.toString();
        boolean boolean10 = properties0.isEmpty();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties11 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties11.setSerialJtaTransactions(false);
        boolean boolean14 = atomikosProperties11.isSerialJtaTransactions();
        boolean boolean15 = atomikosProperties11.isEnableLogging();
        long long16 = atomikosProperties11.getMaxTimeout();
        atomikosProperties11.setLogBaseName("{=hi!}");
        java.lang.Object obj19 = properties0.get((java.lang.Object) atomikosProperties11);
        atomikosProperties11.setForceShutdownOnVmExit(true);
        java.lang.String str22 = atomikosProperties11.getTransactionManagerUniqueName();
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(objEnumeration3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(objSet5);
        org.junit.Assert.assertNotNull(objEnumeration6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "{}" + "'", str9, "{}");
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertTrue("'" + long16 + "' != '" + 300000L + "'", long16 == 300000L);
        org.junit.Assert.assertNull(obj19);
        org.junit.Assert.assertNull(str22);
    }

    @Test
    public void test7993() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7993");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration3 = properties0.elements();
        java.util.Properties properties5 = new java.util.Properties();
        java.lang.Object obj7 = properties5.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration8 = properties5.elements();
        boolean boolean9 = properties5.isEmpty();
        java.util.Set<java.lang.Object> objSet10 = properties5.keySet();
        boolean boolean11 = properties5.isEmpty();
        java.lang.Object obj12 = properties0.getOrDefault((java.lang.Object) true, (java.lang.Object) boolean11);
        java.util.Properties properties13 = new java.util.Properties();
        java.lang.Object obj15 = properties13.remove((java.lang.Object) 0.0d);
        boolean boolean16 = properties13.isEmpty();
        java.util.Enumeration<java.lang.Object> objEnumeration17 = properties13.keys();
        java.util.Properties properties18 = new java.util.Properties();
        java.lang.Object obj20 = properties18.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet21 = properties18.stringPropertyNames();
        java.util.Properties properties22 = new java.util.Properties();
        java.util.Properties properties23 = new java.util.Properties();
        java.lang.Object obj25 = properties23.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet26 = properties23.stringPropertyNames();
        boolean boolean27 = properties22.containsValue((java.lang.Object) properties23);
        java.util.Collection<java.lang.Object> objCollection28 = properties22.values();
        java.util.Enumeration<?> wildcardEnumeration29 = properties22.propertyNames();
        java.lang.Object obj31 = properties18.put((java.lang.Object) wildcardEnumeration29, (java.lang.Object) 10.0d);
        java.util.Properties properties32 = new java.util.Properties();
        java.util.Properties properties33 = new java.util.Properties();
        java.lang.Object obj35 = properties33.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet36 = properties33.stringPropertyNames();
        boolean boolean37 = properties32.containsValue((java.lang.Object) properties33);
        java.util.Collection<java.lang.Object> objCollection38 = properties32.values();
        java.lang.Object obj39 = properties32.clone();
        boolean boolean40 = properties0.replace((java.lang.Object) properties13, (java.lang.Object) 10.0d, obj39);
        java.util.Properties properties41 = new java.util.Properties(properties13);
        int int42 = properties13.size();
        java.lang.Object obj43 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean44 = properties13.contains(obj43);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(objEnumeration3);
        org.junit.Assert.assertNull(obj7);
        org.junit.Assert.assertNotNull(objEnumeration8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertNotNull(objSet10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertEquals("'" + obj12 + "' != '" + true + "'", obj12, true);
        org.junit.Assert.assertNull(obj15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(objEnumeration17);
        org.junit.Assert.assertNull(obj20);
        org.junit.Assert.assertNotNull(strSet21);
        org.junit.Assert.assertNull(obj25);
        org.junit.Assert.assertNotNull(strSet26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(objCollection28);
        org.junit.Assert.assertNotNull(wildcardEnumeration29);
        org.junit.Assert.assertNull(obj31);
        org.junit.Assert.assertNull(obj35);
        org.junit.Assert.assertNotNull(strSet36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(objCollection38);
        org.junit.Assert.assertNotNull(obj39);
        org.junit.Assert.assertEquals(obj39.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj39), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj39), "{}");
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 0 + "'", int42 == 0);
    }

    @Test
    public void test7994() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7994");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration3 = properties0.elements();
        boolean boolean4 = properties0.isEmpty();
        java.util.Set<java.lang.Object> objSet5 = properties0.keySet();
        boolean boolean6 = properties0.isEmpty();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties7 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties7.setSerialJtaTransactions(false);
        atomikosProperties7.setThreadedTwoPhaseCommit(true);
        atomikosProperties7.setMaxTimeout((long) '#');
        boolean boolean14 = atomikosProperties7.isEnableLogging();
        atomikosProperties7.setCheckpointInterval((long) (byte) -1);
        java.util.Properties properties17 = new java.util.Properties();
        java.util.Properties properties18 = new java.util.Properties();
        java.lang.Object obj20 = properties18.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet21 = properties18.stringPropertyNames();
        boolean boolean22 = properties17.containsValue((java.lang.Object) properties18);
        java.util.Collection<java.lang.Object> objCollection23 = properties17.values();
        java.lang.Object obj24 = properties0.replace((java.lang.Object) atomikosProperties7, (java.lang.Object) objCollection23);
        int int25 = properties0.size();
        java.util.Properties properties26 = new java.util.Properties(properties0);
        java.util.Set<java.lang.String> strSet27 = properties0.stringPropertyNames();
        java.util.Enumeration<java.lang.Object> objEnumeration28 = properties0.keys();
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(objEnumeration3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(objSet5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNull(obj20);
        org.junit.Assert.assertNotNull(strSet21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(objCollection23);
        org.junit.Assert.assertNull(obj24);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 0 + "'", int25 == 0);
        org.junit.Assert.assertNotNull(strSet27);
        org.junit.Assert.assertNotNull(objEnumeration28);
    }

    @Test
    public void test7995() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7995");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration3 = properties0.elements();
        boolean boolean4 = properties0.isEmpty();
        java.util.Set<java.lang.Object> objSet5 = properties0.keySet();
        java.util.Enumeration<java.lang.Object> objEnumeration6 = properties0.keys();
        java.lang.String str8 = properties0.getProperty("hi!");
        java.util.Properties properties10 = new java.util.Properties();
        java.lang.Object obj12 = properties10.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration13 = properties10.elements();
        int int14 = properties10.size();
        java.util.Properties properties15 = new java.util.Properties(properties10);
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet16 = properties10.entrySet();
        java.util.Properties properties17 = new java.util.Properties();
        java.util.Properties properties18 = new java.util.Properties();
        java.lang.Object obj20 = properties18.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet21 = properties18.stringPropertyNames();
        boolean boolean22 = properties17.containsValue((java.lang.Object) properties18);
        java.util.Collection<java.lang.Object> objCollection23 = properties17.values();
        java.util.Properties properties25 = new java.util.Properties();
        java.lang.Object obj27 = properties25.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration28 = properties25.elements();
        boolean boolean29 = properties25.isEmpty();
        java.util.Set<java.lang.Object> objSet30 = properties25.keySet();
        java.lang.Object obj31 = properties17.putIfAbsent((java.lang.Object) "hi!", (java.lang.Object) objSet30);
        boolean boolean32 = properties0.replace((java.lang.Object) "hi!", (java.lang.Object) properties10, (java.lang.Object) "hi!");
        java.util.Set<java.lang.String> strSet33 = properties10.stringPropertyNames();
        java.util.Properties properties34 = new java.util.Properties();
        java.lang.Object obj36 = properties34.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration37 = properties34.elements();
        int int38 = properties34.size();
        java.util.Properties properties39 = new java.util.Properties(properties34);
        java.util.Set<java.lang.String> strSet40 = properties34.stringPropertyNames();
        java.util.Set<java.lang.String> strSet41 = properties34.stringPropertyNames();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties42 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties42.setSerialJtaTransactions(false);
        atomikosProperties42.setThreadedTwoPhaseCommit(true);
        atomikosProperties42.setMaxTimeout((long) '#');
        boolean boolean49 = atomikosProperties42.isEnableLogging();
        atomikosProperties42.setCheckpointInterval((long) (byte) -1);
        atomikosProperties42.setEnableLogging(true);
        atomikosProperties42.setLogBaseName("{}");
        long long56 = atomikosProperties42.getDefaultJtaTimeout();
        java.lang.Object obj57 = properties10.putIfAbsent((java.lang.Object) properties34, (java.lang.Object) atomikosProperties42);
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet58 = properties10.entrySet();
        java.util.Properties properties59 = new java.util.Properties();
        java.lang.Object obj61 = properties59.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet62 = properties59.stringPropertyNames();
        java.util.Properties properties63 = new java.util.Properties();
        java.util.Properties properties64 = new java.util.Properties();
        java.lang.Object obj66 = properties64.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet67 = properties64.stringPropertyNames();
        boolean boolean68 = properties63.containsValue((java.lang.Object) properties64);
        java.util.Collection<java.lang.Object> objCollection69 = properties63.values();
        java.util.Enumeration<?> wildcardEnumeration70 = properties63.propertyNames();
        java.lang.Object obj72 = properties59.put((java.lang.Object) wildcardEnumeration70, (java.lang.Object) 10.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration73 = properties59.elements();
        java.util.Properties properties75 = new java.util.Properties();
        java.lang.Object obj77 = properties75.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration78 = properties75.elements();
        boolean boolean79 = properties75.isEmpty();
        java.util.Set<java.lang.Object> objSet80 = properties75.keySet();
        java.util.Enumeration<java.lang.Object> objEnumeration81 = properties75.keys();
        boolean boolean83 = properties75.equals((java.lang.Object) "");
        java.lang.String str84 = properties75.toString();
        java.lang.Object obj85 = properties59.put((java.lang.Object) 'a', (java.lang.Object) properties75);
        boolean boolean86 = properties10.contains((java.lang.Object) properties59);
        java.lang.Object obj87 = properties10.clone();
        java.io.Writer writer88 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties10.store(writer88, "{hi!=[], {hi!=[]}=}");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(objEnumeration3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(objSet5);
        org.junit.Assert.assertNotNull(objEnumeration6);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNull(obj12);
        org.junit.Assert.assertNotNull(objEnumeration13);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertNotNull(objEntrySet16);
        org.junit.Assert.assertNull(obj20);
        org.junit.Assert.assertNotNull(strSet21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(objCollection23);
        org.junit.Assert.assertNull(obj27);
        org.junit.Assert.assertNotNull(objEnumeration28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNotNull(objSet30);
        org.junit.Assert.assertNull(obj31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(strSet33);
        org.junit.Assert.assertNull(obj36);
        org.junit.Assert.assertNotNull(objEnumeration37);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 0 + "'", int38 == 0);
        org.junit.Assert.assertNotNull(strSet40);
        org.junit.Assert.assertNotNull(strSet41);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertTrue("'" + long56 + "' != '" + 10000L + "'", long56 == 10000L);
        org.junit.Assert.assertNull(obj57);
        org.junit.Assert.assertNotNull(objEntrySet58);
        org.junit.Assert.assertNull(obj61);
        org.junit.Assert.assertNotNull(strSet62);
        org.junit.Assert.assertNull(obj66);
        org.junit.Assert.assertNotNull(strSet67);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertNotNull(objCollection69);
        org.junit.Assert.assertNotNull(wildcardEnumeration70);
        org.junit.Assert.assertNull(obj72);
        org.junit.Assert.assertNotNull(objEnumeration73);
        org.junit.Assert.assertNull(obj77);
        org.junit.Assert.assertNotNull(objEnumeration78);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + true + "'", boolean79 == true);
        org.junit.Assert.assertNotNull(objSet80);
        org.junit.Assert.assertNotNull(objEnumeration81);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + false + "'", boolean83 == false);
        org.junit.Assert.assertEquals("'" + str84 + "' != '" + "{}" + "'", str84, "{}");
        org.junit.Assert.assertNull(obj85);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + false + "'", boolean86 == false);
        org.junit.Assert.assertNotNull(obj87);
    }

    @Test
    public void test7996() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7996");
        java.util.Properties properties0 = new java.util.Properties();
        java.util.Collection<java.lang.Object> objCollection1 = properties0.values();
        java.util.Enumeration<java.lang.Object> objEnumeration2 = properties0.keys();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties4 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties4.setSerialJtaTransactions(false);
        atomikosProperties4.setThreadedTwoPhaseCommit(true);
        atomikosProperties4.setMaxTimeout((long) '#');
        boolean boolean11 = atomikosProperties4.isEnableLogging();
        atomikosProperties4.setCheckpointInterval((long) (byte) -1);
        atomikosProperties4.setEnableLogging(true);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties16 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties16.setSerialJtaTransactions(false);
        atomikosProperties16.setThreadedTwoPhaseCommit(true);
        atomikosProperties16.setMaxTimeout((long) '#');
        boolean boolean23 = atomikosProperties16.isEnableLogging();
        atomikosProperties16.setCheckpointInterval((long) (byte) -1);
        atomikosProperties16.setEnableLogging(true);
        atomikosProperties16.setLogBaseDir("");
        boolean boolean30 = properties0.replace((java.lang.Object) 10000L, (java.lang.Object) atomikosProperties4, (java.lang.Object) "");
        java.lang.String str32 = properties0.getProperty("");
        java.util.Properties properties33 = new java.util.Properties();
        java.util.Collection<java.lang.Object> objCollection34 = properties33.values();
        java.util.Collection<java.lang.Object> objCollection35 = properties33.values();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties36 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties36.setSerialJtaTransactions(false);
        boolean boolean39 = atomikosProperties36.isThreadedTwoPhaseCommit();
        atomikosProperties36.setThreadedTwoPhaseCommit(false);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties42 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties42.setSerialJtaTransactions(false);
        boolean boolean45 = atomikosProperties42.isSerialJtaTransactions();
        atomikosProperties42.setTransactionManagerUniqueName("hi!");
        java.lang.String str48 = atomikosProperties42.getLogBaseName();
        java.lang.String str49 = atomikosProperties42.getLogBaseName();
        boolean boolean50 = atomikosProperties42.isForceShutdownOnVmExit();
        long long51 = atomikosProperties42.getMaxTimeout();
        java.lang.String str52 = atomikosProperties42.getTransactionManagerUniqueName();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties53 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties53.setSerialJtaTransactions(false);
        atomikosProperties53.setThreadedTwoPhaseCommit(true);
        atomikosProperties53.setThreadedTwoPhaseCommit(true);
        boolean boolean60 = properties33.replace((java.lang.Object) atomikosProperties36, (java.lang.Object) str52, (java.lang.Object) true);
        java.util.Properties properties61 = atomikosProperties36.asProperties();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties62 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties62.setSerialJtaTransactions(false);
        atomikosProperties62.setThreadedTwoPhaseCommit(true);
        boolean boolean67 = atomikosProperties62.isForceShutdownOnVmExit();
        java.lang.String str68 = atomikosProperties62.getLogBaseDir();
        atomikosProperties62.setEnableLogging(false);
        java.lang.String str71 = atomikosProperties62.getLogBaseName();
        long long72 = atomikosProperties62.getDefaultJtaTimeout();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties73 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties73.setSerialJtaTransactions(false);
        boolean boolean76 = atomikosProperties73.isSerialJtaTransactions();
        java.lang.String str77 = atomikosProperties73.getService();
        boolean boolean78 = atomikosProperties73.isEnableLogging();
        java.util.Properties properties79 = atomikosProperties73.asProperties();
        atomikosProperties73.setForceShutdownOnVmExit(true);
        atomikosProperties73.setDefaultJtaTimeout((long) (short) -1);
        boolean boolean84 = properties0.replace((java.lang.Object) properties61, (java.lang.Object) atomikosProperties62, (java.lang.Object) atomikosProperties73);
        java.lang.Class<?> wildcardClass85 = properties61.getClass();
        org.junit.Assert.assertNotNull(objCollection1);
        org.junit.Assert.assertNotNull(objEnumeration2);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNull(str32);
        org.junit.Assert.assertNotNull(objCollection34);
        org.junit.Assert.assertNotNull(objCollection35);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "tmlog" + "'", str48, "tmlog");
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "tmlog" + "'", str49, "tmlog");
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertTrue("'" + long51 + "' != '" + 300000L + "'", long51 == 300000L);
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "hi!" + "'", str52, "hi!");
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertNotNull(properties61);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertNull(str68);
        org.junit.Assert.assertEquals("'" + str71 + "' != '" + "tmlog" + "'", str71, "tmlog");
        org.junit.Assert.assertTrue("'" + long72 + "' != '" + 10000L + "'", long72 == 10000L);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
        org.junit.Assert.assertNull(str77);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + true + "'", boolean78 == true);
        org.junit.Assert.assertNotNull(properties79);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + false + "'", boolean84 == false);
        org.junit.Assert.assertNotNull(wildcardClass85);
    }

    @Test
    public void test7997() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7997");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setSerialJtaTransactions(false);
        boolean boolean3 = atomikosProperties0.isSerialJtaTransactions();
        java.lang.String str4 = atomikosProperties0.getService();
        boolean boolean5 = atomikosProperties0.isEnableLogging();
        java.util.Properties properties6 = atomikosProperties0.asProperties();
        java.util.Set<java.lang.String> strSet7 = properties6.stringPropertyNames();
        boolean boolean8 = properties6.isEmpty();
        boolean boolean9 = properties6.isEmpty();
        java.util.Properties properties10 = new java.util.Properties();
        java.lang.Object obj12 = properties10.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<?> wildcardEnumeration13 = properties10.propertyNames();
        boolean boolean14 = properties6.containsValue((java.lang.Object) wildcardEnumeration13);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties15 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties15.setSerialJtaTransactions(false);
        boolean boolean18 = atomikosProperties15.isSerialJtaTransactions();
        java.lang.String str19 = atomikosProperties15.getService();
        boolean boolean20 = atomikosProperties15.isEnableLogging();
        java.util.Properties properties21 = atomikosProperties15.asProperties();
        atomikosProperties15.setForceShutdownOnVmExit(true);
        atomikosProperties15.setMaxActives((int) (short) -1);
        atomikosProperties15.setMaxTimeout((long) ' ');
        atomikosProperties15.setEnableLogging(false);
        atomikosProperties15.setService("{{}={}}");
        atomikosProperties15.setLogBaseName("{{}={}}");
        atomikosProperties15.setThreadedTwoPhaseCommit(true);
        long long36 = atomikosProperties15.getMaxTimeout();
        java.util.Properties properties37 = new java.util.Properties();
        java.lang.Object obj39 = properties37.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration40 = properties37.elements();
        boolean boolean41 = properties37.isEmpty();
        java.util.Set<java.lang.Object> objSet42 = properties37.keySet();
        java.util.Enumeration<java.lang.Object> objEnumeration43 = properties37.keys();
        java.lang.String str45 = properties37.getProperty("hi!");
        java.util.Set<java.lang.Object> objSet46 = properties37.keySet();
        java.lang.Object obj47 = properties6.replace((java.lang.Object) long36, (java.lang.Object) properties37);
        java.io.OutputStream outputStream48 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties6.save(outputStream48, "{com.atomikos.icatch.enable_logging=false, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=false, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNotNull(properties6);
        org.junit.Assert.assertNotNull(strSet7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNull(obj12);
        org.junit.Assert.assertNotNull(wildcardEnumeration13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNull(str19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNotNull(properties21);
        org.junit.Assert.assertTrue("'" + long36 + "' != '" + 32L + "'", long36 == 32L);
        org.junit.Assert.assertNull(obj39);
        org.junit.Assert.assertNotNull(objEnumeration40);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertNotNull(objSet42);
        org.junit.Assert.assertNotNull(objEnumeration43);
        org.junit.Assert.assertNull(str45);
        org.junit.Assert.assertNotNull(objSet46);
        org.junit.Assert.assertNull(obj47);
    }

    @Test
    public void test7998() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7998");
        java.util.Properties properties0 = new java.util.Properties();
        java.util.Collection<java.lang.Object> objCollection1 = properties0.values();
        java.util.Properties properties2 = new java.util.Properties();
        java.lang.Object obj4 = properties2.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet5 = properties2.stringPropertyNames();
        java.util.Properties properties6 = new java.util.Properties();
        java.util.Properties properties7 = new java.util.Properties();
        java.lang.Object obj9 = properties7.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet10 = properties7.stringPropertyNames();
        boolean boolean11 = properties6.containsValue((java.lang.Object) properties7);
        java.util.Collection<java.lang.Object> objCollection12 = properties6.values();
        java.util.Enumeration<?> wildcardEnumeration13 = properties6.propertyNames();
        java.lang.Object obj15 = properties2.put((java.lang.Object) wildcardEnumeration13, (java.lang.Object) 10.0d);
        boolean boolean16 = properties0.equals((java.lang.Object) 10.0d);
        java.util.Enumeration<?> wildcardEnumeration17 = properties0.propertyNames();
        java.util.Properties properties18 = new java.util.Properties();
        java.lang.Object obj20 = properties18.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration21 = properties18.elements();
        int int22 = properties18.size();
        java.util.Properties properties23 = new java.util.Properties(properties18);
        boolean boolean24 = properties23.isEmpty();
        java.util.Properties properties25 = new java.util.Properties();
        java.lang.Object obj27 = properties25.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration28 = properties25.elements();
        int int29 = properties25.size();
        java.util.Properties properties30 = new java.util.Properties();
        java.lang.Object obj32 = properties30.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration33 = properties30.elements();
        boolean boolean34 = properties30.isEmpty();
        java.util.Set<java.lang.Object> objSet35 = properties30.keySet();
        boolean boolean36 = properties25.containsKey((java.lang.Object) objSet35);
        java.util.Enumeration<java.lang.Object> objEnumeration37 = properties25.keys();
        java.util.Properties properties38 = new java.util.Properties();
        java.lang.Object obj40 = properties38.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration41 = properties38.elements();
        boolean boolean42 = properties38.isEmpty();
        java.util.Set<java.lang.Object> objSet43 = properties38.keySet();
        java.util.Enumeration<java.lang.Object> objEnumeration44 = properties38.keys();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet45 = properties38.entrySet();
        boolean boolean47 = properties25.remove((java.lang.Object) properties38, (java.lang.Object) 1.0f);
        boolean boolean48 = properties23.contains((java.lang.Object) properties38);
        boolean boolean49 = properties0.containsValue((java.lang.Object) properties38);
        java.util.Set<java.lang.Object> objSet50 = properties38.keySet();
        java.util.Set<java.lang.Object> objSet51 = properties38.keySet();
        org.junit.Assert.assertNotNull(objCollection1);
        org.junit.Assert.assertNull(obj4);
        org.junit.Assert.assertNotNull(strSet5);
        org.junit.Assert.assertNull(obj9);
        org.junit.Assert.assertNotNull(strSet10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(objCollection12);
        org.junit.Assert.assertNotNull(wildcardEnumeration13);
        org.junit.Assert.assertNull(obj15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(wildcardEnumeration17);
        org.junit.Assert.assertNull(obj20);
        org.junit.Assert.assertNotNull(objEnumeration21);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 0 + "'", int22 == 0);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNull(obj27);
        org.junit.Assert.assertNotNull(objEnumeration28);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 0 + "'", int29 == 0);
        org.junit.Assert.assertNull(obj32);
        org.junit.Assert.assertNotNull(objEnumeration33);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertNotNull(objSet35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(objEnumeration37);
        org.junit.Assert.assertNull(obj40);
        org.junit.Assert.assertNotNull(objEnumeration41);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertNotNull(objSet43);
        org.junit.Assert.assertNotNull(objEnumeration44);
        org.junit.Assert.assertNotNull(objEntrySet45);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNotNull(objSet50);
        org.junit.Assert.assertNotNull(objSet51);
    }

    @Test
    public void test7999() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7999");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        java.util.Properties properties3 = new java.util.Properties();
        java.util.Collection<java.lang.Object> objCollection4 = properties3.values();
        java.util.Enumeration<java.lang.Object> objEnumeration5 = properties3.keys();
        java.util.Properties properties6 = new java.util.Properties();
        java.lang.Object obj8 = properties6.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration9 = properties6.elements();
        boolean boolean10 = properties6.isEmpty();
        java.util.Set<java.lang.Object> objSet11 = properties6.keySet();
        java.util.Enumeration<java.lang.Object> objEnumeration12 = properties6.keys();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet13 = properties6.entrySet();
        java.lang.Object obj14 = properties0.put((java.lang.Object) properties3, (java.lang.Object) properties6);
        java.util.Enumeration<java.lang.Object> objEnumeration15 = properties0.keys();
        java.util.Properties properties16 = new java.util.Properties();
        java.lang.Object obj18 = properties16.remove((java.lang.Object) 0.0d);
        java.util.Properties properties19 = new java.util.Properties();
        java.util.Collection<java.lang.Object> objCollection20 = properties19.values();
        java.util.Enumeration<java.lang.Object> objEnumeration21 = properties19.keys();
        java.util.Properties properties22 = new java.util.Properties();
        java.lang.Object obj24 = properties22.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration25 = properties22.elements();
        boolean boolean26 = properties22.isEmpty();
        java.util.Set<java.lang.Object> objSet27 = properties22.keySet();
        java.util.Enumeration<java.lang.Object> objEnumeration28 = properties22.keys();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet29 = properties22.entrySet();
        java.lang.Object obj30 = properties16.put((java.lang.Object) properties19, (java.lang.Object) properties22);
        java.util.Enumeration<java.lang.Object> objEnumeration31 = properties16.keys();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties32 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties32.setSerialJtaTransactions(false);
        boolean boolean35 = atomikosProperties32.isSerialJtaTransactions();
        java.lang.String str36 = atomikosProperties32.getService();
        boolean boolean37 = atomikosProperties32.isEnableLogging();
        atomikosProperties32.setCheckpointInterval((long) (byte) 100);
        atomikosProperties32.setTransactionManagerUniqueName("{=hi!}");
        atomikosProperties32.setMaxTimeout(10000L);
        atomikosProperties32.setEnableLogging(false);
        long long46 = atomikosProperties32.getDefaultJtaTimeout();
        atomikosProperties32.setMaxActives((int) (byte) 100);
        boolean boolean49 = properties16.containsKey((java.lang.Object) atomikosProperties32);
        java.lang.Object obj50 = properties0.remove((java.lang.Object) properties16);
        java.util.Set<java.lang.String> strSet51 = properties0.stringPropertyNames();
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(objCollection4);
        org.junit.Assert.assertNotNull(objEnumeration5);
        org.junit.Assert.assertNull(obj8);
        org.junit.Assert.assertNotNull(objEnumeration9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(objSet11);
        org.junit.Assert.assertNotNull(objEnumeration12);
        org.junit.Assert.assertNotNull(objEntrySet13);
        org.junit.Assert.assertNull(obj14);
        org.junit.Assert.assertNotNull(objEnumeration15);
        org.junit.Assert.assertNull(obj18);
        org.junit.Assert.assertNotNull(objCollection20);
        org.junit.Assert.assertNotNull(objEnumeration21);
        org.junit.Assert.assertNull(obj24);
        org.junit.Assert.assertNotNull(objEnumeration25);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertNotNull(objSet27);
        org.junit.Assert.assertNotNull(objEnumeration28);
        org.junit.Assert.assertNotNull(objEntrySet29);
        org.junit.Assert.assertNull(obj30);
        org.junit.Assert.assertNotNull(objEnumeration31);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNull(str36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertTrue("'" + long46 + "' != '" + 10000L + "'", long46 == 10000L);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNull(obj50);
        org.junit.Assert.assertNotNull(strSet51);
    }

    @Test
    public void test8000() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test8000");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        boolean boolean3 = properties0.isEmpty();
        java.util.Enumeration<java.lang.Object> objEnumeration4 = properties0.elements();
        properties0.clear();
        java.lang.String str6 = properties0.toString();
        java.io.Writer writer7 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties0.store(writer7, "{true=true}");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(objEnumeration4);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "{}" + "'", str6, "{}");
    }
}
